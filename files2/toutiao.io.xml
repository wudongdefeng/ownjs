<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>e5939af41d5f842a1956265748522bc1</guid>
<title>Kafka学习笔记</title>
<link>https://toutiao.io/k/ruk1lvr</link>
<content:encoded>&lt;div&gt;&lt;body class=&quot;notion-body&quot; id=&quot;readabilityBody&quot;&gt;&lt;p id=&quot;notion-app&quot;/&gt;&lt;/body&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>c7c3f328a09e9444a12cd48898bcea76</guid>
<title>一文回顾 Java 入门知识（上）</title>
<link>https://toutiao.io/k/8f728q7</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzI1MDY3NjYyOQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/Bfp26cuFSnAckqCAkgyY3HE1u95XvwUCHLyWyVZVgZKTlicoAOXib39OstzTlYXYyicr63nMCaKW1Lg74SnvTB8Fw/0?wx_fmt=png&quot; data-nickname=&quot;推荐学java&quot; data-alias=&quot;javaFirst&quot; data-signature=&quot;推荐学Java，学编程首选语言！关注即送精品资料(2021版)&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;Java前世今生&lt;br/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Java最早是由SUN公司（已被Oracle收购）的詹姆斯·高斯林（高司令，人称Java之父）在上个世纪90年代初开发的一种编程语言，最初被命名为Oak，目标是针对小型家电设备的嵌入式应用，结果市场没啥反响。谁料到互联网的崛起，让Oak重新焕发了生机，于是SUN公司改造了Oak，在1995年以Java的名称正式发布，原因是Oak已经被人注册了，因此SUN注册了Java这个商标。随着互联网的高速发展，Java逐渐成为最重要的网络编程语言。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;Java介于编译型语言和解释型语言之间。&lt;/strong&gt; 为了保证不同平台、不同公司开发的虚拟机都能正确执行Java字节码，SUN公司制定了一系列的Java虚拟机规范。从实践的角度看，JVM的兼容性做得非常好，低版本的Java字节码完全可以正常运行在高版本的JVM上。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;随着Java的发展，SUN给Java又分出了三个不同版本：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;Java SE：Standard Edition&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Java EE：Enterprise Edition&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Java ME：Micro Edition&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这三者之间有啥关系呢？&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5390334572490706&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Bfp26cuFSnBVDrKM3OpmCicpqlDxFsumqK43ZZEueHgmKPCTsuDOyj4afQiaJFB4SseljmHW46DeXmum7HiccXCRA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;269&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;简单来说，Java SE就是标准版，包含标准的JVM和标准库，而Java EE是企业版，它只是在Java SE的基础上加上了大量的API和库，以便方便开发Web应用、数据库、消息服务等，Java EE的应用使用的虚拟机和Java SE完全相同。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;毫无疑问，Java SE是整个Java平台的核心，而Java EE是进一步学习Web应用所必须的。我们熟悉的Spring等框架都是Java EE开源生态系统的一部分。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;名词解释&lt;/h3&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;JDK：即Java Development Kit（java开发工具包）&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;JRE：即Java Runtime Environment（Java运行环境，主要构成是运行Java字节码文件的JVM，即Java Virtual Machine）&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;二者关系如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.46859903381642515&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Bfp26cuFSnBVDrKM3OpmCicpqlDxFsumqs9U33GHCu8PRefjVRcV9T7d1TpEW77eFlGWT6RvW49jLicfuDa76D8w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;414&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;简单地说，JRE就是运行Java字节码的虚拟机。但是，如果只有Java源码，要编译成Java字节码，就需要JDK，因为JDK除了包含JRE，还提供了编译器、调试器等开发工具。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;环境配置&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;学习任何一门编程语言，都有前辈们推荐的&lt;code&gt;IDE&lt;/code&gt;或者官方的开发工具，还有运行环境的配置，这都是必须的。小编这里选择的&lt;code&gt;IDEA 2021&lt;/code&gt;和&lt;code&gt;jdk8&lt;/code&gt; 。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;JDK下载与安装&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;1、下载&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;官网下载链接：&lt;code&gt;https://www.oracle.com/java/technologies/javase-downloads.html&lt;/code&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;小编这里使用的 jdk8 版本，是目前使用较多较稳定的版本，推荐使用。如果自己无法下载的可以访问这里提取哈：&lt;code&gt;https://pan.baidu.com/s/1tb1AG-FBHpYRsw0Q5U9YLw&lt;/code&gt; 提取码：3kwk&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;2、安装&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;小编以 win10 系统为例，下载好后解压即可，小编的是无需安装版本。解压的路径需要注意：&lt;strong&gt;不要使用带有中文的路径&lt;/strong&gt; 。此外，强烈建议：把自己电脑的盘符名称和账户名都修改为英文，或者拼音，这样就会避免一些奇怪的问题，虽然这些问题可能到后面安装数据库或者其他软件才会出现，但是程序的世界是不认识汉字的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;3、配置环境&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;桌面&lt;code&gt;此电脑&lt;/code&gt;，按照如下操作顺序：鼠标右键--&amp;gt;属性--&amp;gt;高级系统设置--&amp;gt;高级--&amp;gt;环境变量：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5427892234548336&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Bfp26cuFSnBVDrKM3OpmCicpqlDxFsumqDbuHiartF8Hzos7Xibw36iaQSvGabZCHN95qBiasgicOHmFjpnHs2YFaoDw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1262&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;选择环境变量后，我们可以看到如下界面，此时再选择系统变量--&amp;gt;新建，此时将会弹出新建系统变量的对话框，在变量名处输入JAVA_HOME，在变量值中输入JDK的安装路径（小编的jdk就是解压后的目录），点击确定。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.703971119133574&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Bfp26cuFSnBVDrKM3OpmCicpqlDxFsumqJS4q2x8mYHZDnc3Iib0vq05IXJycG0RFK09ictwHkjurYckokYNgalvw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;554&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们还需要修改系统&lt;code&gt;Path&lt;/code&gt;变量。在变量后增加如下两条路径：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;%JAVA_HOME%\bin&lt;br/&gt;%JAVA_HOME%\jre\bin&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.7328519855595668&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Bfp26cuFSnBVDrKM3OpmCicpqlDxFsumqVOjPyKFv7BGASyPDyVKBmF7DiaFquuIUIco3y5wmjLQSzTibjPeQXvhA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;554&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;新建/修改&lt;code&gt;CLASSPATH&lt;/code&gt;变量&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果存在 CLASSPATH 变量，选中点击 编辑。如果没有，点击 新建。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;输入/在已有的变量值后面添加：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;变量名：CLASSPATH&lt;br/&gt;变量值：.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.8862815884476535&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Bfp26cuFSnBVDrKM3OpmCicpqlDxFsumql32qiaA01JfeIJprlmfKaWrdwZURH3JkUTxvwKgHtBbG5jJ1RFTicYMw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;554&quot;/&gt;&lt;/figure&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;验证是否安装成功&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过快捷键&lt;code&gt;Win+R&lt;/code&gt; 并输入&lt;code&gt;cmd&lt;/code&gt; 调出命令行窗口&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5767790262172284&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Bfp26cuFSnBVDrKM3OpmCicpqlDxFsumq2sibqZT1INvS5qsbjB0N59IB5Xn5nXSlaD0Sp0jGhRp347aXquYcEzg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;534&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;输入&lt;code&gt;java&lt;/code&gt;，如果能出现类似下图信息，就说明配置成功了。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.8501805054151624&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Bfp26cuFSnBVDrKM3OpmCicpqlDxFsumqiaNYRL5BLVdMUtMt8zFrSnBqYwWUGRpe5jJvIoLV9MSJAY9IotPRlew/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;554&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然后依次输入命令&lt;code&gt;javac&lt;/code&gt;、&lt;code&gt;java -version&lt;/code&gt;命令，如果没有报错信息就是ok的，其中后一个命令是查看你的 jdk 版本号的，如果时间长了忘记当时安装的哪个版本jdk，就可以通过此命令来查看。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;IDEA下载安装&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下载地址：&lt;code&gt;https://www.jetbrains.com/idea/download/#section=windows&lt;/code&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;小编这里选择的&lt;code&gt;Ultimate&lt;/code&gt;版本64位，一般下载的时候机会智能识别当前的电脑系统，小编下载的 exe 文件，还有 zip 格式的，可自行尝试哈。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;安装就简单了，几乎都是一路&lt;code&gt;next&lt;/code&gt;即可。这里建议大家不要把软件都习惯性的安装在C盘，这样C盘会越来越大，最后导致电脑很卡。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里建议大家修改一下&lt;code&gt;编辑区域的字体大小&lt;/code&gt;和&lt;code&gt;显示方法分割线&lt;/code&gt;。后者当你的方法比较多的时候，不容易区分方法的开始与结尾，尤其是在全部折叠方法的时候。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;File--&amp;gt;Settings，然后参照下图修改即可：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6844993141289437&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Bfp26cuFSnBVDrKM3OpmCicpqlDxFsumqViaMOzBptsfzFhLrRQK8BFKAePlMrxxiaib77oxjGCCQMTEYVnlP6KgSA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;729&quot;/&gt;&lt;figcaption&gt;修改编辑区域的字号&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;File--&amp;gt;Settings，然后参照下图修改即可：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5700218818380745&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Bfp26cuFSnBVDrKM3OpmCicpqlDxFsumqO9JzG1hdLaavKquRV9FJoq9ezMAHSJmgOiaClztCWGsypQAmHdSqqNA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;914&quot;/&gt;&lt;figcaption&gt;显示方法之间分隔符&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;除了这两个最最基本设置外，其他根据个人偏好调整到自己使用起来最舒服即可。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;Hello World详解&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这一部分网络上很多作者都把它放在了后面去讲解，因为涉及到的东西稍微多一点，这里指的是名词，这对于新手来说，理解起来是有困难的，但小编仔细琢磨了下，在一开始讲解其实也完全没有问题，听一听总是有好处的，最起码心里有个低了。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;编写第一个 Java 程序&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;新建第一个java程序：&lt;/strong&gt; File--&amp;gt;New--&amp;gt;Project（在这一步就可以看到我们安装的jdk）--&amp;gt;Next--&amp;gt;Next--&amp;gt;会看到如下界面：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.47030878859857483&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Bfp26cuFSnBVDrKM3OpmCicpqlDxFsumquJWlRb28wwUvsDnicpL5Qic5FR5SWxnicnHiav587xdGoRPhw8ia0R4HRXQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;421&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;Project name&lt;/code&gt; 就是我们创建的工程名字，自己命名即可，推荐英文或者拼音。&lt;br/&gt;&lt;code&gt;Project location&lt;/code&gt; 我们创建的工程放在电脑的哪个地方，推荐不要使用带有中文的路径。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;接着就是&lt;code&gt;finish&lt;/code&gt;了，我们会看到如下界面：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5198618307426598&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Bfp26cuFSnBVDrKM3OpmCicpqlDxFsumqOJZYCcApD2eRSQeqA9SeKYTp81PZaZaf0AeR7jvJ8CibA1FWCGgDzRg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;579&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这是系统默认提供的内容，前期我们主要的工作都是在&lt;code&gt;src&lt;/code&gt;这个目录下，下面以新建第一个 java 程序为例：在&lt;code&gt;src&lt;/code&gt;右键，依次选择new--&amp;gt;Java Class--&amp;gt;输入要新建的类名（类名的命名规则本文后面会讲）--&amp;gt;回车即可。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.3870646766169154&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Bfp26cuFSnBVDrKM3OpmCicpqlDxFsumq3qEkDnDRz3ebdeuXl12HdxrxhO691AXFJkmhssjy6Ko4RFV1zLSAYg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1005&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如小编这里输入的类名是&lt;code&gt;MainHello&lt;/code&gt;：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;MainHello&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这一步相当于一个java文件创建好了，但是没有系统执行的函数入口，这个入口暂时可以理解为现实生活中某个场景的入口（比如：景点的门票入口），只不过Java文件的入口有且仅有一个，接下来我们就创建这个入口函数：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以使用快捷输入&lt;code&gt;main&lt;/code&gt;+回车即可快速生成这个方法：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.3801324503311258&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Bfp26cuFSnBVDrKM3OpmCicpqlDxFsumqgaWCbhrlMTNjjUsXhM0tIgYfYhzsF9l2hodCqER6f9PrtHJzVia6QCQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;755&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;修改这个快捷输入其实也很简单，其实就是去掉了默认的智能提示限制（默认只有大写的首字母，才会提示完整的系统类和关键字等）&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.4706649282920469&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Bfp26cuFSnBVDrKM3OpmCicpqlDxFsumqS1P5HAYeFZx2zSeRziaNS2WZTZ0v7DJ1U6XD7G1FW2eJzg6eIlN50Lg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;767&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;生成后方法如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;MainHello&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;main&lt;/span&gt;&lt;span&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个时候就会看到绿色的运行按钮出来了，这就是系统默认认识的入口，接下来我们所学习的内容都会在这里进行。小编首先在这里使用系统提供的输出语句，输出咱们熟悉的&lt;code&gt;Hello World&lt;/code&gt;。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;MainHello&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;main&lt;/span&gt;&lt;span&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        System.out.println(&lt;span&gt;&quot;Hello World&quot;&lt;/span&gt;);&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然后点击运行即可看到结果。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;解析&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里对Java程序的入口，也就是主函数进行简单的解析，首先看下图不同颜色标注的矩形&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.481421647819063&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Bfp26cuFSnBVDrKM3OpmCicpqlDxFsumqoUXefwKo1PHmML79dNfT8KbOYNUN34EQQn4zEhZ7EHkj7feNkqsrOA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;619&quot;/&gt;&lt;/figure&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;public&lt;/code&gt; 这个在java中叫&lt;strong&gt;修饰限定符&lt;/strong&gt;，初次之外还有&lt;code&gt;private&lt;/code&gt;、&lt;code&gt;protected&lt;/code&gt;和&lt;code&gt;default&lt;/code&gt;（默认不写就是这个），其作用分别是对类文件或者类文中的方法进行访问权限限定，通过下图便一目了然：&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.26152556580050296&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Bfp26cuFSnBVDrKM3OpmCicpqlDxFsumqsFeYic1H8IxJKibiciceoLib9NBQm7MiajNSuibqXKPaqxpgyic5VF6OFI8q4Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1193&quot;/&gt;&lt;/figure&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;class&lt;/code&gt; 是java语言中的&lt;strong&gt;关键字&lt;/strong&gt;，除此之外，还有很多关键字以及&lt;strong&gt;保留字&lt;/strong&gt;，后者就是系统暂时不用但是保留着，说不定后面会用到，但是开发者不能用，比如：&lt;code&gt;goto&lt;/code&gt;。了解如下这些即可：&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.42463958060288337&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Bfp26cuFSnBVDrKM3OpmCicpqlDxFsumqKVsM3uSSXlia82cL0ibjW6YCLntkgXeYoFr79Vbrdea9UGOZ5CBianOsw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;763&quot;/&gt;&lt;figcaption&gt;java语言中的关键字&lt;/figcaption&gt;&lt;/figure&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;MainHello&lt;/code&gt; 就是我们定义的&lt;strong&gt;标识符&lt;/strong&gt;，在Java语言中，标识符的命名是有规则的：&lt;br/&gt;&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;严格区分大小写&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;不能以数字开头&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;只能由字母、数字、下划线、＄其中一种或多种来组合完成&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;不能占用Java中的关键词和保留字&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;要见名知意&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;命名方式，推荐驼峰命名法（不是必须，是推荐）&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;标识符作用于&lt;code&gt;类名&lt;/code&gt;、&lt;code&gt;方法名&lt;/code&gt;、&lt;code&gt;变量&lt;/code&gt;、&lt;code&gt;语句块&lt;/code&gt;，是我们最最常用的。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;main(String[] args)&lt;/code&gt; 就是java中的函数形式之一：带一个参数的&lt;strong&gt;方法&lt;/strong&gt;。java中所说的函数和方法，其实是指同一个东西。Java中的方法根据参数多少分两种：&lt;code&gt;无参数方法&lt;/code&gt;和&lt;code&gt;有参数方法（参数的个数可以自定义）&lt;/code&gt;，其中参数的类型也可以自定义的。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里的main方法带有一个字符串&lt;strong&gt;数组&lt;/strong&gt;类型的参数，这里又出现一个新名词：&lt;code&gt;数组&lt;/code&gt;，在Java中数组根据维数不同可分为：&lt;code&gt;一维数组&lt;/code&gt;和&lt;code&gt;多维数组&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对数组的理解，可以简单理解为一个箱子里面装的台球，每个球上有编号是数组的特征，这在Java语言里叫做&lt;strong&gt;索引&lt;/strong&gt;，索引是从0开始的，比如共有10个球，那么索引就是0~9 。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;小结&lt;/strong&gt;&lt;br/&gt;对Java程序的入口牵扯到的相关内容就介绍到这里，具体内容后面还会详细讲解。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;数据类型&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;java语言中数据类型可以分为两大类：&lt;code&gt;基本数据类型&lt;/code&gt;和&lt;code&gt;引用数据类型&lt;/code&gt;。通过下面这个导图大家就很清楚了：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5589692765113974&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Bfp26cuFSnBVDrKM3OpmCicpqlDxFsumq4Nxu6LeKwAXShwY1uUg5B5oxlc2TW5XFoJqibZpYU50cSK1vR3Mc1Kw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1009&quot;/&gt;&lt;/figure&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;进制&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Java中有四种表示整数的形式：十进制（我们平时使用的就是）、二进制、八进制、十六进制。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;二进制：以0b或0B开头，包括0~1的数字。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;十进制：包括0~9的数字。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;八进制：以0开头，包括0~7的数字。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;十六进制：以0x或0X开头，包括0~9的数字，以及字母a~f，A~F。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;进制转换&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;其他进制转十进制&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;公式：系数 * 基数的权次幂相加 （系数指每个数字，基数指的是多少进制，权指的是从右到左从0开始，次幂就是乘方）&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;例如：计算 0x100 的十进制值：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;0x100 = 1*16^2 + 0 * 16^1 + 0 * 16^0&lt;br/&gt;&lt;br/&gt;       =  16*16&lt;br/&gt;&lt;br/&gt;       =  256&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;十进制转其他进制&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;公式：除基（基数，也就是要转的进制）倒取余（余数）&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;例如：计算 60 的二进制：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;1.2148760330578512&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Bfp26cuFSnBVDrKM3OpmCicpqlDxFsumqMwrPQ2AHXR8icD0jDZiccBzVxP9aCoOic1QDRIaXmudbxMrYBUokPb6DQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;242&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;变量&lt;/h3&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;存在内存中&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;根据作用域分为：局部变量和全局变量&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;声明规则：变量类型 变量名，比如：int stuAge&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;变量赋值符：=&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;变量使用规则：先声明，再使用&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;变量默认值：基本数据类型有对应的默认值，引用类型默认值是&lt;code&gt;null&lt;/code&gt;，布尔型默认值是&lt;code&gt;false&lt;/code&gt;。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;常量其实是变量的一种特例&lt;/strong&gt;。常量用&lt;code&gt;final&lt;/code&gt;来修饰，它的值是不会被二次改变的，一般使用大写字母来定义。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;总结&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;昨天看到一个关于编程的视频挺有趣，推荐大家看下&lt;code&gt;https://youtu.be/dU1xS07N-FA&lt;/code&gt; 。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;相信学java都知道这么一句话：&lt;code&gt;一次编译，到处运行&lt;/code&gt;。那么它背后的原理是什么呢？&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;“Java 编译器不会将所有类都编译成一个机器代码程序。相反，它会独立编译每个类，而且不是编译成机器代码，而是编译成特殊的中间代码（字节码）。当程序启动时，该字节码被编译成机器代码。”&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这就是为什么Java被广泛应用于诸多行业中，而且被越来越多的开发者作为首选学习语言之一。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;小编特意创建了一个公众号：&lt;code&gt;推荐学java&lt;/code&gt;，会分享与&lt;code&gt;java&lt;/code&gt;相关的内容，并且以原创为主，欢迎大家搜索关注（关注即送小编挑选的精品视频教程），一起学Java！&lt;/p&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>ae864b1e321b95e6f8865c904892706b</guid>
<title>搞微服务还用Spring Cloud？Istio好用到爆！</title>
<link>https://toutiao.io/k/7xgh9xy</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.11849710982658959&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ufWcjcomw8b6Lib0A0eic09h7UM0oewibib4JBPLkw1Mvb2p6sOzeHRtSHexOpy15TTJxdbibwBu97iamYXeGnEAfibOw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1038&quot;/&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzkwOTIxNDQ3OA==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/ufWcjcomw8YRIaicYx5pzj5Cxwick8DamnOgbTJu96QTibKyHEDZt1815yOV1r27oZ6HgoYTEYWYLRz4jIV4iasHgg/0?wx_fmt=png&quot; data-nickname=&quot;dbaplus社群&quot; data-alias=&quot;dbaplus&quot; data-signature=&quot;围绕Database、BigData、AIOps的企业级专业社群。资深大咖、技术干货，每天精品原创文章推送，每周线上技术分享，每月线下技术沙龙，每季度Gdevops&amp;amp;DAMS行业大会.&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86122&quot; data-custom=&quot;#138bde&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p data-brushtype=&quot;text&quot;&gt;&lt;span&gt;&lt;strong&gt;背景&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;过去，我们运维着“能做一切”的大型单体应用程序。这是一种将产品推向市场的很好的方式，因为刚开始我们也只需要让我们的第一个应用上线。而且我们总是可以回头再来改进它的。部署一个大应用总是比构建和部署多个小块要容易。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-role=&quot;list&quot;/&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;184&quot; data-backw=&quot;434&quot; data-ratio=&quot;0.423963133640553&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ufWcjcomw8YttyMm1RYobCrefZ9uOnkpNTPlfuRWKA2q7R41lYvDlTYMkDYQ1vUJW4jGFeaDk3xmLkic9e49GBA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;434&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-role=&quot;list&quot;/&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;187&quot; data-backw=&quot;470&quot; data-ratio=&quot;0.3970276008492569&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ufWcjcomw8YttyMm1RYobCrefZ9uOnkpD9V6w3SUdHDibPxXcafQ3JOtSLUR9ZncX6Lico0g9VxPRmBcG9lNGcLg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;471&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-role=&quot;list&quot;/&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;186&quot; data-backw=&quot;481&quot; data-ratio=&quot;0.3866943866943867&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ufWcjcomw8YttyMm1RYobCrefZ9uOnkpOtDJrhO6AwgwIsYYWXJMn6W9icKErhzVlr9jrLV37bTic0NbGHbibkY3Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;481&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;分布式和集中式会配合使用。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我们在搭建网站的时候，为了及时响应用户的请求，尤其是高并发请求的时候，我们需要搭建分布式集群来处理请求。我们一个服务器的处理能力是有限的。如果用我们一台设备当作服务器，那么当并发量比较大的时候，同一时间达到上百的访问量。那服务器就宕机了。然后只能重启服务器，当出现高并发访问的时候，就又会宕机。所以我们需要更多的服务器来并行工作，处理用户的请求。那么问题来了，我们服务器运行的时候，怎么分发大量的请求给不同的服务器呢？一般会采用(1apache+nTomcat)或者服务器模式来分发并处理请求，或者采用nginx分发请求。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;微服务是运行在自己的进程中的可独立部署的服务套件。他们通常使用 HTTP 资源进行通信，每个服务通常负责整个应用中的某一个单一的领域。在流行的电子商务目录例子中，你可以有一个商品条目服务，一个审核服务和一个评价服务，每个都只专注一个领域。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;用这种方法让多语言服务（使用不同语言编写的服务）也成为可能，这样我们就可以让 Java/C++ 服务执行更多的计算密集型工作，让 Rails / Node.js 服务更多来支持前端应用等等。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;微服务会成为大规模分布式应用的主流架构。任何复杂的工程问题都会归结为devide and conquer（分而治之），意思就是就是把一个复杂的问题分成两个或更多的相同或相似的子问题，再把子问题分成更小的子问题……直到最后子问题可以简单的直接求解，原问题的解即子问题的解的合并。微服务本质是对服务的拆分，与工程领域惯用的“分而治之”的思路是一致的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86122&quot; data-custom=&quot;#138bde&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p data-brushtype=&quot;text&quot;&gt;&lt;span&gt;&lt;strong&gt;Spring Cloud 与 K8S 对比&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;两个平台 Spring Cloud 和 Kubernetes 非常不同并且它们之间没有直接的相同特征。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;219&quot; data-backw=&quot;568&quot; data-ratio=&quot;0.3847352024922118&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ufWcjcomw8YttyMm1RYobCrefZ9uOnkpgEzmiakGGag4TsaAMpBwyayxialKZcpcq2OhMEYAc4MMSXEFXia3XtlDg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;642&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-role=&quot;paragraph&quot; data-custom=&quot;#138bde&quot;&gt;&lt;section label=&quot;Copyright © 2015 Yead All Rights Reserved.&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;两种架构处理了不同范围的MSA障碍，并且它们从根本上用了不同的方法。Spring Cloud方法是试图解决在JVM中每个MSA挑战，然而Kubernetes方法是试图让问题消失，为开发者在平台层解决。Spring Cloud在JVM中非常强大，Kubernetes管理那些JVM很强大。同样的，它就像一个自然发展，结合两种工具并且从两个项目中最好的部分受益。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;从上图可以看到，里面差不多一半关注点是和运维相关的。&lt;/span&gt;&lt;span&gt;这么看来，似乎拿spring cloud和kubernetes比较有点不公平，spring cloud只是一个开发框架，对于应用如何部署和调度是无能为力的，而kubernetes是一个运维平台。&lt;/span&gt;&lt;span&gt;也许用spring cloud+cloud foundry去和kubernetes比较才更加合理，但需要注意的是，即使加入了cloud foundry的paas能力，spring cloud仍然是“侵入式”的且语言相关，而kubernetes是“非侵入式”的且语言无关。&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86122&quot; data-custom=&quot;#138bde&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p data-brushtype=&quot;text&quot;&gt;&lt;span&gt;&lt;strong&gt;Spring Cloud vs Istio&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;274&quot; data-backw=&quot;568&quot; data-ratio=&quot;0.48314606741573035&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ufWcjcomw8YttyMm1RYobCrefZ9uOnkpCFS3agVQXMPrgBqGlgHrA97PSmAUdF1ndGNb5Ec6nxf1AoVzZYQemA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;979&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;这里面哪些内容是我们可以拿掉或者说基于 Service Mesh（以 Istio 为例）能力去做的？分析下来，可以替换的组件包括网关（gateway 或者 Zuul，由Ingress gateway 或者 egress 替换），熔断器（hystrix，由SideCar替换），注册中心（Eureka及Eureka client，由Polit，SideCar 替换），负责均衡（Ribbon，由SideCar 替换），链路跟踪及其客户端（Pinpoint 及 Pinpoint client，由 SideCar 及Mixer替换）。这是我们在 Spring Cloud 解析中需要完成的目标：即确定需要删除或者替换的支撑模块。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;603&quot; data-backw=&quot;400&quot; data-ratio=&quot;1.5075&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ufWcjcomw8YttyMm1RYobCrefZ9uOnkpjMPxCZmV2iaVPwdkbDkD8bDBB3sAzsVFDlBPticaJuiaTvXv1N28iaoyuA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;400&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;可以说，spring cloud关注的功能是kubernetes的一个子集。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;可以看出，两边的解决方案都是比较完整的。kubernetes这边，在Istio还没出来以前，其实只能提供最基础的服务注册、服务发现能力（service只是一个4层的转发代理），istio出来以后，具有了相对完整的微服务能力。而spring cloud这边，除了发布、调度、自愈这些运维平台的功能，其他的功能也支持的比较全面。相对而言，云厂商会更喜欢kubernetes的方案，原因就是三个字：非侵入。平台能力与应用层的解耦，使得云厂商可以非常方便地升级、维护基础设施而不需要去关心应用的情况，这也是我比较看好service mesh这类技术前景的原因。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86122&quot; data-custom=&quot;#138bde&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p data-brushtype=&quot;text&quot;&gt;&lt;span&gt;&lt;strong&gt;Spring Boot + K8S&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;如果不用 Spring Cloud，那就是使用 Spring Boot + K8S。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;426&quot; data-backw=&quot;568&quot; data-ratio=&quot;0.75&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ufWcjcomw8YttyMm1RYobCrefZ9uOnkpSq8oCs79nX5ibk7osyseJhRqSvS2kIibywiaLiaKuU2wWgXsFicywjL620g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;960&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这里就需要介绍一个项目，Spring Cloud Kubernetes，作用是把kubernetes中的服务模型映射到Spring Cloud的服务模型中，以使用Spring Cloud的那些原生sdk在kubernetes中实现服务治理。具体来说，就是把k8s中的services对应到Spring Cloud中的services，k8s中的endpoints对应到Spring Cloud的instances。这样通过标准的Spring Cloud api就可以对接k8的服务治理体系。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;老实说，个人认为这个项目的意义并不是很大，毕竟都上k8s了，k8s本身已经有了比较完善的微服务能力（有注册中心、配置中心、负载均衡能力），应用之间直接可以互相调用，应用完全无感知，你再通过sdk去调用，有点多此一举的感觉。而且现在强调的是语言非侵入，Spring Cloud一个很大的限制是只支持java语言（甚至比较老的j2ee应用都不支持，只支持Spring Boot应用）。所以我个人感觉，这个项目，在具体业务服务层面，使用的范围非常有限。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;借助于Spring Cloud Kubernetes项目，zuul可以以一种无侵入的方式提供api网关的能力，应用完全不需要做任何改造，并且网关是可插拔的，将来可以用其他网关产品灵活替换，整体耦合程度非常低。得益于k8s的service能力，zuul甚至支持异构应用的接入，这是Spring Cloud体系所不具备的。而本身基于java开发，使得java程序员可以方便地基于zuul开发各种功能复杂的filter，而不需要去学习go或者openresty这样不太熟悉的语言。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://lupeier.com/post/cloud-native-api-gateway-part-2/&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86122&quot; data-custom=&quot;#138bde&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p data-brushtype=&quot;text&quot;&gt;&lt;span&gt;&lt;strong&gt;Service Mesh的价值&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;无论是单体应用，还是分布式应用，都可以建立在Service Mesh上，mesh上的sidecar支撑了所有的上层应用，业务开发者无须关心底层构成，可以用Java，也可以用Go等语言完成自己的业务开发。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;当微服务架构体系越来越复杂的时候，需要将“业务服务”和“基础设施”解耦，将一个微服务进程一分为二：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;167&quot; data-backw=&quot;557&quot; data-ratio=&quot;0.2998204667863555&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ufWcjcomw8YttyMm1RYobCrefZ9uOnkpWtWDDyXBB8kfa0WBff2xoG8icQIvCGIDBDic8g1HRlsgog0rUOqhDpQQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;557&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;为什么代理会叫sidecar proxy？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.7157360406091371&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ufWcjcomw8YttyMm1RYobCrefZ9uOnkpwWpuNd1kxIOZaXjHqAqTricLSgYvupicAw2PyMuXZhA0mE2dhZyT2m0w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;394&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;看了上图就容易懂了，biz和proxy相生相伴，就像摩托车(motor)与旁边的车厢(sidecar)。未来，sidecar和proxy就指微服务进程解耦成两个进程之后，提供基础能力的那个代理进程。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Istio的理论概念是Service Mesh（服务网络），我们不必纠结于概念实际也是微服务的一种落地形式有点类似上面的SideCar模式，它的主要思想是关注点分离，即不像SpringCloud一样交给研发来做，也不集成到k8s中产生职责混乱，Istio是通过为服务配 Agent 代理来提供服务发现、负载均衡、限流、链路跟踪、鉴权等微服务治理手段。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Istio开始就是与k8s结合设计的，Istio结合k8s可以牛逼的落地微服务架构。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;istio 超越 spring cloud和dubbo 等传统开发框架之处，就在于不仅仅带来了远超这些框架所能提供的功能，而且也不需要应用程序为此做大量的改动，开发人员也不必为上面的功能实现进行大量的知识储备。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;但结论是不是 spring cloud 能做到的，k8s + istio 也能做到？甚至更好？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;85988&quot; data-custom=&quot;#138bde&quot;&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&amp;gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&amp;gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&amp;gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&amp;gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;p data-brushtype=&quot;text&quot;&gt;&lt;span&gt;&lt;strong&gt;参考资料&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-role=&quot;list&quot;&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;https://www.kubernetes.org.cn/1057.html&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;服务迁移之路 | Spring Cloud向Service Mesh转变&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://juejin.im/post/5ce26e266fb9a07eb67d619f&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;https://dubbo.apache.org/zh-cn/blog/dubbo-mesh-service-mesh-exploring.html&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;https://juejin.im/post/5d0357a5e51d4577555508bf&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Istio分层架构？80%的人有误解&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://juejin.im/post/5d035a82e51d4510727c8084&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Java web 服务器集群 session共享解决思路&lt;/span&gt; &lt;span&gt;https://blog.csdn.net/xupeng874395012/article/details/65634343&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;大型网站架构常用解决方案&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://www.e-learn.cn/topic/225574&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;https://www.servicemesher.com/blog/201909-build-full-micro-service-platform-by-spring-boot-with-kubernetes/&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;https://www.cnblogs.com/assion/p/11250062.html&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;https://skyao.io/talk/201709-istio-introduction/&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Spring Cloud会在不久的将来被其他架构取代吗？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;span&gt;https://www.zhihu.com/question/333618617&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;在java中，如果不用spring cloud，可以搭建出好用的微服务架构的系统吗？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://www.zhihu.com/question/268835717&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;JAVA大军，开始把目光从spring cloud转向k8s甚至k8s+istio了么？&lt;/span&gt;&lt;span&gt;https://www.zhihu.com/question/345497663&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;section&gt;&lt;span&gt;作者丨sp42a&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;来源丨网址：https://blog.csdn.net/zhangxin09/article/details/105342762?spm=1001.2014.3001.5501&lt;/span&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;dbaplus社群欢迎广大技术人员投稿，投稿邮箱：&lt;/span&gt;&lt;span&gt;editor@dbaplus.cn&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;205&quot; data-backw=&quot;568&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;568&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;205&quot; data-ratio=&quot;0.5&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/ufWcjcomw8ZWAfZRqpibYHWGYu5cO4sp6Zu8Tt0Yb6rlnTbj3rFnezCMpnW39FdYCg8ew3FkaTibzgcchBDe0ibkA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.07734375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ufWcjcomw8Zf2jiaBBH3vdgfP4A2rem5YEAHYH074dc4GibhojA5B3lLZrXLDRciaVnficveaHcAUCiaIPoDsTkAduA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>df83bc98d90417d2e4f3f36cfca32e3a</guid>
<title>Go中的一些优化笔记，简约而不简单</title>
<link>https://toutiao.io/k/8gjzmtu</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们这里简单聊一下优化本身，然后我们直接从实际的示例开始。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;为什么要优化呢？&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当你资源占有较高的话会需要很大的成本，虽然现在服务器资源也不是很贵，但是你还是需要针对的做一些优化工作。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;另外每个优化应该建立在一个&lt;strong&gt;benchmark&lt;/strong&gt;的基础上，需要体现它给我们带来多大的收益。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下面主要从slice、string、struct、function、map、interface、channel、pointer等方面罗列了一些常见的优化点。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;数组和slice优化篇&lt;/span&gt;&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;提前为slice分配内存&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;尽量使用第三个参数：&lt;code&gt; make([]T, 0, len)&lt;/code&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果你事先不知道确切的数量并且slice是临时的，你可以设置得大一些，只要slice在运行时不会增长。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;不要忘记使用“copy”&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们尽量不要在复制时使用 append，例如，在合并两个或多个slice时。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;正确地使用迭代&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果我们有一个包含很多元素或比较大的元素的slice，我们会尝试使用“for”或 range 单个元素。通过这种方法，可以避免不必要的复制。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;学会复用slice&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果我们需要对传入的slice进行某种操作并返回结果，我们可以直接return，但已经修改了。这样我们就可以避免了新的内存分配。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;不要留下未使用的slice&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果我们需要从slice中切下一小块并仅使用它，其实主要部分也会保留下来。可以使用copy产生一个新的slice，而旧的对象让GC回收。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;string-字符串优化篇&lt;/span&gt;&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;正确地进行拼接&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果拼接字符串可以在一个语句中完成，那么可以使用“+”，如果需要在循环中执行此操作，那么可以使用&lt;code&gt;string.Builder&lt;/code&gt;。通过“Grow”也可以预先指定&lt;code&gt;builder&lt;/code&gt;的大小。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;使用转换优化&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由于字符串是由字节组成的，因此有时这两种类型之间的转换可以避免内存分配。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;使用池化技术&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们可以池化字符串，从而帮助编译器只存储一次相同的字符串。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;避免内存分配&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们可以使用map来替代复合键，我们也可以使用&lt;code&gt;[]byte&lt;/code&gt;。尽量不要使用&lt;code&gt;fmt&lt;/code&gt;包，因为它的所有函数都使用了反射。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;struct-结构体优化篇&lt;/span&gt;&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;避免复制大的struct&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们理解的小&lt;code&gt;struct&lt;/code&gt;，是指不超过 4 个字段的&lt;code&gt;struct&lt;/code&gt;，不超过一个&lt;em&gt;机器字&lt;/em&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;标准的copy案例&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;转换成interface&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;接收和发送到channel&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;替换map中的item&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;向slice添加元素&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;迭代（range）&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;避免通过指针来访问struct中的字段&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;解引用是比较昂贵的，我们可以尽量少做，尤其是在循环中。我们也会失去使用快速寄存器的能力。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;使用小型的struct&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这项工作由编译器优化的，这意味着它的工作量很小。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;通过内存对齐来减小struct大小&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们可以对齐struct（根据字段的大小，以正确的顺序排列），从而可以减小struct本身的大小。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;func-函数优化篇&lt;/span&gt;&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;使用内联函数或自己内联&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们尽量编写一些可供编译器内联的小函数——它很快，但自己从函数中嵌入代码则更快。&lt;strong&gt;对于热路径&lt;/strong&gt;函数尤其如此。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;什么情况下不会被内联？&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;recovery 函数&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;select&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;类型声明&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;defer&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;goroutine&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;for-range&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;明智地选择你的函数参数&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们尽量使用“小”参数，因为它们的拷贝会被特别优化。我们也尝试在拷贝和GC的负载的与增长堆栈之间保持平衡。避免使用大量的参数——让你的程序使用超快速的寄存器（寄存器的数量是有限的）&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;声明一个命名好的return结果&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这似乎比在函数体中声明这些变量更高效。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;保存函数中间的结果&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;帮助编译器优化你的代码，保存中间结果，然后会有更多的选择来优化你的代码。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;谨慎使用“defer”&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;尽量不要使用 &lt;code&gt;defer&lt;/code&gt;，或者至少 &lt;strong&gt;不要在循环中使用&lt;code&gt;defer&lt;/code&gt;&lt;/strong&gt; 。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;为“hot path”提供便利&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;避免在这些地方分配内存，尤其是短期对象。首先要检查的的就是最常见的分支（if，switch）。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里 &lt;span&gt;hot path在Go源码中&lt;/span&gt;&lt;sup&gt;[2]&lt;/sup&gt;也出现多次，根据&lt;span&gt;在 sync.Once 的上下文中，“hot path”是什么意思？&lt;/span&gt;&lt;sup&gt;[3]&lt;/sup&gt;中的回答，这里翻译为热路径是非常频繁执行的指令序列。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;map优化篇&lt;/span&gt;&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;提前分配内存&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一切都和其他地方一样。初始化map时，指定其大小。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;使用空结构作为值&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;struct{}&lt;/code&gt;什么都不是，因此例如对信号值使用这种方法是非常有益的。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;清空map&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;map只能增长，不能缩小。我们需要控制这一点——完全而明确地重置map。因为删除其所有元素无济于事。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;尽量不要在键和值中使用指针&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果 map 不包含指针，那么 GC 就不会在它上面浪费宝贵的时间。而且要知道字符串也是指针——使用&lt;code&gt;[]byte&lt;/code&gt;而不是字符串作为键。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;减少更改的次数&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;同样，我们不想使用指针，但我们可以使用 map 和 slice 的复合体，并将键存储在 map 中，将可以不受限制地更改的值存储在slice中。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;interface优化篇&lt;/span&gt;&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;计算内存分配&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;请记住，要给一个接口赋值，你首先需要将其拷贝到某处，然后粘贴一个指针。关键字是拷贝。事实证明，装箱和拆箱的成本将近似于结构体的大小和一次分配。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;选择最佳的类型&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在某些情况下，装箱/拆箱期间不会进行内存分配。例如，比较小的和布尔值的变量和常量、具有一个简单字段的struct、指针（包括&lt;em&gt;map、chan、func&lt;/em&gt;）&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;避免内存分配&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;与其他地方一样，我们尽量避免不必要的内存分配。例如，将一个接口分配给一个接口，而不是装箱两次。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;仅在需要时使用&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;避免在小型、频繁调用的函数的参数和结果中使用接口。我们不需要额外的包装和拆包。减少使用接口方法调用的频率，哪怕只是因为它可以防止内联。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;指针、chan、BCE(Bounds Check Elimination-边界检查) 优化篇&lt;/span&gt;&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;避免不必要的解引用&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;尤其是在循环中，因为事实证明它太昂贵了。解引用是我们不想以牺牲自己为代价执行的一系列必要操作。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;channel使用效率是低效的&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用channel会比其他同步方法慢。另外，select 中的 case 越多，我们的程序就越慢。但是&lt;em&gt;select、case + default&lt;/em&gt;是优化过了的。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;尽量避免不必要的边界检查&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这也很昂贵，我们应该尽一切可能避免它。例如，一次检查（获取）最大slice索引比多次检查更正确。最好是立即尝试获得极端的选项。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;总结&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在这篇文章中，我们看到了一些相同的优化规则。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;帮助编译器做出正确的决定。在编译时分配内存，使用中间结果，并尽量保持代码的可读性。&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不要忘记使用内置的分析和trace跟踪工具。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最后小土也祝你在优化的路上做到尽善尽美。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;参考资料&lt;/span&gt;&lt;/h3&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;span&gt;[1]&lt;/span&gt;&lt;p&gt;Golang: simple optimization notes: &lt;em&gt;https://medium.com/scum-gazeta/golang-simple-optimization-notes-70bc64673980&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[2]&lt;/span&gt;&lt;p&gt;hot path在Go源码中: &lt;em&gt;https://cs.opensource.google/search?q=%22hot%20path%22&amp;amp;ss=go%2Fgo&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[3]&lt;/span&gt;&lt;p&gt;在 sync.Once 的上下文中，“hot path”是什么意思？: &lt;em&gt;https://stackoverflow.com/questions/59174176/what-does-hot-path-mean-in-the-context-of-sync-once&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>6d44eaf0b3f1bf087daac3e50cdf0ecc</guid>
<title>阿里云Elasticsearch日志场景最佳实践及引擎内核优化</title>
<link>https://toutiao.io/k/9q34zj7</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                                       &quot; id=&quot;js_content&quot;&gt;
            &lt;p data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;145&quot; data-backw=&quot;578&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;578&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;274&quot; data-ratio=&quot;0.25&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/zHbzQPKIBPhm0926ffJFbE0JcibbZGBJ2XqbfChW05V5icYqtHnIqJaPF8A04Y6WxwM21G6sXtS3PZApxVI2cp7A/640?wx_fmt=jpeg&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;hr/&gt;&lt;section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;322&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.47148148148148145&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPjY0RSbOf4xuVMg7Up95ZPYfEK2VGW2P11WicLEoxJ7NxF3lVcHPHR086untzMO2H2ko1ZnWSs4juQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; title=&quot;截屏2022-05-12 22.58.28.png&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-width=&quot;100%&quot; data-darkmode-bgcolor-16008590572276=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16008590572276=&quot;rgb(255, 255, 255)&quot;&gt;&lt;section data-darkmode-bgcolor-16008590572276=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16008590572276=&quot;rgb(255, 255, 255)&quot; data-style=&quot;margin-bottom: -10px; margin-left: -8px; max-width: 100%; width: 18px; height: 18px; border-top: 8px solid rgb(54, 65, 173); border-left: 8px solid rgb(54, 65, 173); box-sizing: border-box !important; overflow-wrap: break-word !important; visibility: visible;&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-bgopacity=&quot;50%&quot; data-darkmode-bgcolor-16008590572276=&quot;rgb(33, 33, 33)&quot; data-darkmode-original-bgcolor-16008590572276=&quot;rgb(247, 247, 247)&quot; data-style=&quot;max-width: 100%; width: 543.333px; background: rgb(247, 247, 247); box-sizing: border-box !important; overflow-wrap: break-word !important; visibility: visible;&quot;&gt;&lt;section data-darkmode-bgcolor-16008590572276=&quot;rgb(33, 33, 33)&quot; data-darkmode-original-bgcolor-16008590572276=&quot;rgb(247, 247, 247)&quot;&gt;&lt;p&gt;&lt;span&gt;分享嘉宾：&lt;/span&gt;&lt;span&gt;郭嘉梁 阿里巴巴 技术专家&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;出品平台：DataFunTalk&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-width=&quot;100%&quot; data-darkmode-bgcolor-16008590572276=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16008590572276=&quot;rgb(255, 255, 255)&quot;&gt;&lt;section data-darkmode-bgcolor-16008590572276=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16008590572276=&quot;rgb(255, 255, 255)&quot; data-style=&quot;max-width: 100%; width: 18px; height: 18px; border-bottom: 8px solid rgb(54, 65, 173); border-right: 8px solid rgb(54, 65, 173); box-sizing: border-box !important; overflow-wrap: break-word !important; visibility: visible;&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;导读：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;全文将围绕以下四点展开：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;阿里云Elasticsearch日志场景最佳实践&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;阿里云Elasticsearch引擎内核优化&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;阿里云Elasticsearch性能评测&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;阿里云Elasticsearch产品演示&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;section data-type=&quot;&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;01&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;阿里云Elasticsearch日志场景最佳实践&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1. 阿里云Elasticsearch日志场景概况&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;阿里云Elasticsearch（简称ES）在线上拥有1W+的集群和6W+节点，为用户提供线上检索和分析服务，在这些集群中，日志集群占比35%，其平均CPU核数超过40个，数据量达到PB级别。日志集群具有数量多、单集群规模大的特点，覆盖包括游戏、医药、汽车等领域。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;2. 日志场景集群特点&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在进行引擎内核优化之前，首先需要了解日志场景集群的共性特点：&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;写入吞吐高&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：在线头部用户的单日写入吞吐量可达数十TB级。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;查询秒级响应&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：日志场景集群通常会作为微服务的问题排查，或监控数据的大盘展示，因此查询端的响应是否及时，直接影响用户端的体验。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;存储数据量大&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：日志场景集群的单日写入量大，数据存储周期长。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;倾向访问近期数据&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;376&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.65&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPjY0RSbOf4xuVMg7Up95ZPYR2qhicdQ7k37GW96ErtTdjjdiaicnbQHaNGIGU4E0a5W4Sme5QYLnGvpQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;3. 日志场景自建集群的痛点：性价比低&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;贵&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：写入吞吐高，存储时间长，导致计算资源和存储资源成本高。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;慢&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：数据量大，导致扩容/宕机恢复慢, 数据迁移慢。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;差&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：冷/热查询没有隔离机制，导致稳定性差。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;难&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：索引多，生命周期不同，导致冷/热数据迁移难管理。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;4. 日志场景最佳实践大图&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;基于以上痛点，ES日志场景进行了诸多&lt;strong&gt;优化&lt;/strong&gt;，主要包含以下五个方面：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;283&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.48984375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPjY0RSbOf4xuVMg7Up95ZPYUnfKGjSHjtEdfTMsnBqxb6o9FyeAmgMkshBSFnP70VTtktWsf5KKmw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;5. 日志场景最佳实践成果&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;ES日志场景最佳实践，为用户提供了高性价比的服务，主要体现在四个方面：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;①高稳定：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;②低成本：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;智能海量存储引擎让存储成本降低70%。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;冷热共享计算资源技术让计算成本降低50%。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;③高易用：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;④高可用：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;02&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;阿里云Elasticsearch引擎内核优化&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1. 共享冷/热计算资源&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;407&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.70390625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPjY0RSbOf4xuVMg7Up95ZPYgZibQeR7uKuZJoPfib4yz2vPx8Ceve1GkuSjY1a3sctHOSMEMsvwMiaGA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;2. 查询性能优化&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;①冷存储（Lucene查询剖析）&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;智能海量存储引擎的单次IO访问延迟可达到100毫秒以上，使用Lucene原生查询框架的端到端查询，对于这种延迟是无法接受的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;Lucene查询模型分为四个步骤（见下图）：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;根据用户的查询语句进行倒排链求交，获取文档ID列表；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;如用户有排序或聚合的需求，根据文档ID列表串行查询DocValue索引，获取文档ID对应的指定字段值；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;对指定字段值进行排序和聚合操作；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;如客户有召回原文的需求，则需要查询原文索引并返回原文。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;601&quot; data-backw=&quot;578&quot; data-ratio=&quot;1.03984375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPjY0RSbOf4xuVMg7Up95ZPY4hzZoeKiaoiaurF2PIE3uMjraYDhvP5KeyXWmibpDt2MlQQXAich7kuAvg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;其中第二步访问DocValue的随机查询，是导致查询延迟高的重点。假设用户召回100个文档ID，单次IO查询是100毫秒，那么100个文档的排序或聚合操作就有10秒的端到端查询延迟。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;②冷存储&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;针对上述查询延迟问题，对Lucene的原生执行模式进行了如下&lt;strong&gt;改造&lt;/strong&gt;：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;501&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.8671875&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPjY0RSbOf4xuVMg7Up95ZPYeZXP3LZia4Sg0ydWEEJwoJYSbJ7gJOUvzOZfL1iaRzxG89a0iaCu58h7A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;③冷存储（智能缓存）&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在查询模式基础上提供智能缓存机制，在智能海量存储引擎中加入SmartCache，对多种不同类型的索引采用自适应的淘汰策略，可以适配多种查询场景。比如针对DocValue索引采用了N-LRU的淘汰策略，防止一次对历史数据的分析型查询直接将DocValue的Cache刷满，导致淘汰一些有效数据。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;496&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.8578125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPjY0RSbOf4xuVMg7Up95ZPY0xCFL2Q9TXNkibE7DCtFuia2rM5UApbvgkz0wBA0FbA1NAN2ZsfibBiaFA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;3. 写入性能优化&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;使用Indexing Service中心化索引构建集群。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;402&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.6953125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPjY0RSbOf4xuVMg7Up95ZPYVoyV2reE7bKZ5NfyicialZnjibhIzohPLCJmUoh4ezb9BQkic8k8TqasZA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;4. 计算存储分离&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;冷数据采用智能海量存储引擎的存储介质，属于共享存储，用户的写入只在主分片进行构建，所有副本节点都是加载共享存储中的数据，真正做到一写多读，以及计算和存储解耦。由于数据只存储一份，在节点扩容或节点宕机时，无需进行节点间的数据拷贝，彻底消除海量数据迁移的开销。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;349&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.6037414965986394&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPjY0RSbOf4xuVMg7Up95ZPYVM2picvHtvxnbV2d1CI0B6eOicpIvqav2d3PU79dLZKtxeBR41vZc0qg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;588&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;03&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;阿里云Elasticsearch性能评测&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1. 智能海量存储引擎查询性能评测&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;①智能海量存储引擎成本&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;智能海量存储引擎的存储单价是0.15元/GB/月，对比高效云盘的0.35元/GB/月，降低了60%；对比SSD的1元/GB/月，降低80%以上。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;504&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.871875&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPjY0RSbOf4xuVMg7Up95ZPYEbicmESfk5XVserZt6qpacQU6gGjpv2ffNS2WKBFM5k8ia1uHhlB5e3A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;②智能海量存储引擎查询延迟&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;优化后的智能海量存储引擎，对比高效云盘在查询延迟方面有显著降低。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;489&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.84609375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPjY0RSbOf4xuVMg7Up95ZPY1Tfru3n7muokGsoPMJyYIB9uLoHibXlTMBBwhyefEXoATdh34Faav1A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;智能海量存储引擎与高效云盘查询延迟对比图&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在智能海量存储引擎与高效云盘的查询延迟对比图中，查询数据级是1.5TB索引，在24个16C64GB节点进行测试，单位是毫秒，针对两种查询语句分别进行测试，一种是只有对时间字段的简单查询，一种是对指定字段有AGG聚合分析的分析型查询。测试结果表明，智能海量存储引擎的查询性能更好，查询延迟降低了30%左右。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;综上对比高效云盘，智能海量存储引擎的成本降低了60%，而总体查询性能提升了30%，智能海量存储引擎为用户提供了高性价比的存储介质选择。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;2. Indexing Service写入性能评测&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;针对开启Indexing Service的集群和通用商业版集群进行写入TPS对比，对三种不同规格组（2C8GB、4C16GB、8C32GB）进行对比。对比结果显示：无论在哪个规格组，Indexing Service的写入性能比原生ES写入性能提高了7-10倍。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;323&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.559375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPjY0RSbOf4xuVMg7Up95ZPYDEQmI0hJIjXh82icuu6bb5BibiaQnvic05qGoEWOLIib4bKep1svb3cqmqQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;04&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;阿里云Elasticsearch产品演示&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1. 进入阿里云Elasticsearch产品控制台&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://elasticsearch.console.aliyun.com/&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;279&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.48253968253968255&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPjY0RSbOf4xuVMg7Up95ZPYNniagD4wTe1pQuHdvbsEhGzI5spolkcsDqI1uOdjDfxZeUe7XePoPvg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;945&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;2. 创建Elasticsearch实例&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;182&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.3142857142857143&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPjY0RSbOf4xuVMg7Up95ZPY9KTXjTq0iaZezcqdymvP6EtGqb5LIEibz7hNibmKXialKTw4AuvrQ9nYVQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;945&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;3. 进入阿里云Elasticsearch购买页面&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;其中有两种类型的集群供选择：通用商业版和日志增强版。日志增强版提供上面提到的针对日志场景的内核优化，如果用户需要存储日志数据，并希望享受阿里云提供的自研能力，可以选择日志增强版进行创建。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;284&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.4910242872228089&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPjY0RSbOf4xuVMg7Up95ZPY5ia2AeebGfwqJjmfhwIODsuN3xvV1cZ25pxthFMKj8DJj0y4mMuctXA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;947&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;4. 进行集群配置&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;用户可以选择实例所在区域和可用区。在实例规格栏可以看到提供的冷热共享资源规格组和智能海量存储引擎存储。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;283&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.48936170212765956&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPjY0RSbOf4xuVMg7Up95ZPYbBrsETGibHzYpdmgj95HgmOBbsEdbNkHzibMRclsgsSQKibEEOCZicmJGw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;940&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;5. 进入集群网络资源配置，选择专有网络和虚拟交换机&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;254&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.440084835630965&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPjY0RSbOf4xuVMg7Up95ZPY5jeA7yAobDEYFepleTgM4VDXaRO7nU74iaTGubYYI6EZhqW10ib59N0g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;943&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;6. 设置集群实例名称、登录名称及密码&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;290&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.5010615711252654&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPjY0RSbOf4xuVMg7Up95ZPYiaLu0YT8SbibP0pBsVcvpPSwaXW0wTerlx2MibmDDicb54bib6RSzLibsqEA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;942&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;7. 进入订单确认页面，注意要勾选服务协议&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;284&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.49208025343189016&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPjY0RSbOf4xuVMg7Up95ZPYM6tsIJ7sAMDq9iak8yABBdtXWt6mXK4WRtUG7b2yRqicXfOZlicXiaQhiaA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;947&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;8. 通过控制台的Kibana访问ES实例&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;164&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.28299894403379094&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPjY0RSbOf4xuVMg7Up95ZPY2iarwpnfJy2WqAVAzQTiaUicovbL2ZWSqLPj5DPejHfygw6pc2Ts8QWpg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;947&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;9. Kibana可视化控制默认公网无法访问，因此需要先配置公网的白名单入口&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;217&quot; data-backw=&quot;578&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.3761854583772392&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPjY0RSbOf4xuVMg7Up95ZPYcZ8AnRs5X3lVadaaIKza7m3TjmFDYOlmfc4IeKa2ib2x4KM3zbqKKYg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;949&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;配置公网访问的白名单IP：&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;117&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.20277481323372465&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPjY0RSbOf4xuVMg7Up95ZPYJ9G3lzL1x7l0Ibq662xGLpcwibRAKMuJIEZiaia0iczukTD0KRY4Mjf6Rw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;937&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;10. 进入Kibana登录页面，输入集群的用户名和密码后进入Kibana控制台&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;324&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.5598705501618123&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPjY0RSbOf4xuVMg7Up95ZPYahSrhFozuul2ZhW9fibS5vOysdX4aKQB3rft1AibPVU04icnGRXRU0ibDw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;618&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;251&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.43414120126448896&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPjY0RSbOf4xuVMg7Up95ZPYqysje8DGh6ia0f6JALIQj3decoyb3ibobq21md7udVqPenemGf5SDHMQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;949&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;11. 在Kibana开发工具中进行ES集群API访问，如访问集群元数据，创建索引，创建文档并插入数据，搜索数据等&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;395&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.6828046744574291&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPjY0RSbOf4xuVMg7Up95ZPYia0Oe7CSPyXLq2rxROnkhNriarp5aIaBuliaoDYfHgqtia8XHRAcMlBR0g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;599&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;207&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.35856992639327023&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPjY0RSbOf4xuVMg7Up95ZPYfU0u79auq70iaB7bIcoLHHvDPWSsyCD4jr5mJYRuQupBz6gGPDdU3QA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;951&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;240&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.41509433962264153&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPjY0RSbOf4xuVMg7Up95ZPYZJT3ae206s1AsQibfpjUZOdktSeIYUeXyWGf1MLAsiaxD2oDu4oKm1Tg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;795&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;239&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.41309823677581864&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPjY0RSbOf4xuVMg7Up95ZPYfV0HKMeIvgM2aK0GNIkf5HYC2UaXJN0wPiauJ4Jd10jvuPulwzhVFRg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;794&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;240&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.41509433962264153&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPjY0RSbOf4xuVMg7Up95ZPY6NlOhiahDuuTtOw288aNpEPEvGsRkNZjJBo9V8eiav5ecaHc0nQILmlA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;795&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;12. 高级监控和报警功能。用户在高级监控页面可以看到集群层面和节点层面的监控信息，同时可以根据集群或节点的使用水位，配置相应的报警规则&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;326&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.5640362225097024&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPjY0RSbOf4xuVMg7Up95ZPYWhQXHkd1BLibTU8vaBuXXmZhe7HeIicR02yqyU03QMbMdzQeOnJFWmoA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;773&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;13. 日志数据查询&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;为方便集群问题排查，系统提供了集群的日志展示，包括主日志、Searching慢日志、Indexing慢日志、GC日志和ES访问日志。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;245&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.42430703624733473&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPjY0RSbOf4xuVMg7Up95ZPYysAzNHxFLqesheso6DocvPcPSib0uUZybVgKJNOia6vKZHM8kBu9a0SQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;938&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;用户在搜索框输入自定义查询语句和指定时间范围，即可进行日志数据查询。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;273&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.47158403869407495&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPjY0RSbOf4xuVMg7Up95ZPYjsiaib7iarkaeL6p7b89QcX3MVV97QiaThPF9fdboEpvLcZ1w7ibybK9D4w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;827&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;以上是Elasticsearch控制台中的案例体验Demo。欢迎大家到阿里云Elasticsearch平台进行实例体验。&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;265&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.4588607594936709&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPjY0RSbOf4xuVMg7Up95ZPYevlDiashOWUIVzh0KiaPDJngJyQNEt11icAts4FibHJwWn5b4Ayvr9pF0g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;948&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;今天的分享就到这里，谢谢大家。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;&lt;span&gt;在文末分享、点赞、在看，给个3连击呗~&lt;/span&gt;&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong data-md5=&quot;9a9a0&quot;&gt;&lt;span&gt;&lt;span&gt;01&lt;span&gt;/&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;分享嘉宾&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;289&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.5&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPjMBALia4B1bopnBbOBQHGtAaqHtc7K25PcAiarP8DGZDJqWMZawicqzxk5YKB0SG7EtJTo1UbvDEdMg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong data-md5=&quot;9a9a0&quot;&gt;&lt;span&gt;&lt;span&gt;02&lt;span&gt;/&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;免费下载资料&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;247&quot; data-backw=&quot;203&quot; data-ratio=&quot;0.47148148148148145&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPhm0926ffJFbE0JcibbZGBJ2NAia8kZibLfm72wNQgORuADnaia908Mf4tOZJtnq0aHib17Jm3Z4rEuCuw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; title=&quot;大数据专题书.png&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;strong data-md5=&quot;9a9a0&quot;&gt;&lt;span&gt;03&lt;/span&gt;&lt;/strong&gt;&lt;strong data-md5=&quot;9a9a0&quot;&gt;&lt;span&gt;&lt;span&gt;/&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;strong data-md5=&quot;9a9a0&quot;&gt;&lt;span&gt;报名看直播 免费领PPT&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;803&quot; data-backw=&quot;578&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;578&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;803&quot; data-ratio=&quot;1.3888888888888888&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPhm0926ffJFbE0JcibbZGBJ2KzNGMjOfwJZZ16AbLWYZZ37Eyu2nNRj19HNJGLL7NZayXibX6VU6YAg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; title=&quot;文章尾部banner.png&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;strong data-md5=&quot;9a9a0&quot;&gt;&lt;span&gt;04&lt;/span&gt;&lt;/strong&gt;&lt;strong data-md5=&quot;9a9a0&quot;&gt;&lt;span&gt;/&lt;/span&gt;&lt;/strong&gt;&lt;strong data-md5=&quot;9a9a0&quot;&gt;&lt;span&gt;关于我们&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;DataFun：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;专注于大数据、人工智能技术应用的分享与交流。发起于2017年，在北京、上海、深圳、杭州等城市举办超过100+线下和100+线上沙龙、论坛及峰会，已邀请超过2000位专家和学者参与分享。其公众号 DataFunTalk 累计生产原创文章700+，百万+阅读，14万+精准粉丝&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzU1NTMyOTI4Mw==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPh87SyjsEtoRFs9iaLyPXYh9ls0BcsiaPDnFkg72xgLsvku13ZRYibyq93DgRoCaTaTkbJj7Hia4dvI1w/0?wx_fmt=png&quot; data-nickname=&quot;DataFunTalk&quot; data-alias=&quot;datafuntalk&quot; data-signature=&quot;专注于大数据、人工智能技术应用的分享与交流。致力于成就百万数据科学家。定期组织技术分享直播，并整理大数据、推荐/搜索算法、广告算法、NLP 自然语言处理算法、智能风控、自动驾驶、机器学习/深度学习等技术应用文章。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;🧐 &lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;分享、点赞、在看&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;，给个&lt;/span&gt;&lt;span&gt;&lt;strong&gt;3连击&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;呗&lt;/span&gt;&lt;/span&gt;&lt;span&gt;！&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;👇&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;
          &lt;/div&gt;

          

          



           
                                
                    
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>