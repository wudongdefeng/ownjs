<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>90db304e88eed55714a76c2a84006c1e</guid>
<title>P5~P9 应该具备的核心能力是什么</title>
<link>https://toutiao.io/k/7ga7vcn</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                           autoTypeSetting24psection&amp;#10;                          &quot; id=&quot;js_content&quot;&gt;&lt;p data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;span&gt;👆&lt;/span&gt;&lt;span&gt;点击“&lt;/span&gt;&lt;span&gt;博文视点Broadview&lt;/span&gt;&lt;span&gt;”，获取更多书讯&lt;/span&gt;&lt;/p&gt;&lt;p data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.05669291338582677&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PW0wIHxgg3nr1VNxfeqxVOw2nPJHVH4xeZibzPY5F4ibOuOZLMsUMrzIibGB6KMw7EurSKv6DkrtLzuhYdBa30A9Q/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;635&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;以阿里的职级体系为标杆&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;，先给大家对比几个知名公司的职级体系，以及与阿里职级&lt;/span&gt;&lt;span&gt;对应关系，这样首先能够&lt;/span&gt;&lt;span&gt;帮助你更好地评估自己在行业中大概的水平和位置。&lt;/span&gt;&lt;span&gt;这几家公司的职级对应关系如下表所示。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.3442028985507246&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PW0wIHxgg3kLDUqiaAMQafH2icPM4icClrkibARhicweiaYXCOG9NHicMyBSessZuicP1zqCicqKnpuyl0iaUuRBWtp4FI4Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;552&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;你可能还是不清楚每个级别的要求到底是什么。在这之前，我想先通过&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;三个类比带你纵向透视职级档次&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;，对不同档次的核心能力建立一个形象的认知，如下图所示。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.45535714285714285&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PW0wIHxgg3kLDUqiaAMQafH2icPM4icClrkPGPVDRjkEedmRXsMvybI0Rwl0drVHQKcZIL2JeH0IxFicCaDfAkrzJA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;560&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-role=&quot;title&quot; data-tools=&quot;135编辑器&quot; data-id=&quot;113244&quot;&gt;&lt;section&gt;&lt;section hm_fix=&quot;217:759&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;&lt;strong data-brushtype=&quot;text&quot;&gt;P5/P6:专业工匠&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;P5/P6 这一档相当于“专业工匠”&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;，就像木匠、铁匠、粉刷匠一样，&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;核心能力是完成任务。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这里的任务是指每个岗位需要完成的事情，比如开发岗位需要完成代码的编写，测试&lt;/span&gt;&lt;span&gt;岗位需要完成测试用例的执行。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;P5 和 P6 的职责一样，比较简单，不需要太多解读。这两个级别的区别是，&lt;/span&gt;&lt;strong&gt;&lt;span&gt;P5 需要在&lt;/span&gt;&lt;span&gt;别人的指导下完成工作，而 &lt;/span&gt;&lt;span&gt;P6 &lt;/span&gt;&lt;span&gt;可以独立完成工作。&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;其实只要有意愿在技术领域发展，基本&lt;/span&gt;&lt;span&gt;上每个人都能达到 P6 的水平。&lt;/span&gt;&lt;span&gt;P5/P6 &lt;/span&gt;&lt;span&gt;的核心职责如下表所示。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.3475836431226766&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PW0wIHxgg3kLDUqiaAMQafH2icPM4icClrkZiaKSoLjjSpEibFgLIkn8iad5zdgb5LicDFNPmXOOeLyXntRvhGVziaQ8kQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;538&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;需要强调的是，这里列举的只是一个岗位的核心职责，并不代表这个岗位只做这些事情，比如开发岗位的 P7/P8 也是要参与编码的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;另外，这里只列举了开发、测试和运维这些技术岗位的职责。产品、运营和市场等非技术岗位的人员，也可以根据你掌握的信息来整理你所在岗位的核心职责表格。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-role=&quot;title&quot; data-tools=&quot;135编辑器&quot; data-id=&quot;113244&quot;&gt;&lt;section&gt;&lt;section hm_fix=&quot;217:759&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;&lt;strong data-brushtype=&quot;text&quot;&gt;P7/P8:乐团指挥&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;P7/P8 这一档相当于“乐团指挥”，核心能力是指挥团队。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;为什么要这么类比呢？因为 P7/P8 的职责和乐团指挥的职责非常相似。&lt;strong&gt;乐团指挥的核心工作职责可以分为以下三个阶段：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;第一阶段是总谱研究&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;，对总谱进行深入细致的研究分析，识别和标注演奏的重点、难点与风险点。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;第二阶段是排练准备&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;，明确演奏需要的人手和乐器，根据乐团情况制定排练计划。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;第三阶段是正式排练&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;，拆解具体排练步骤（比如个体练习、分声部练习和全体排练等），抓好每一个关键环节的落实，做好风险预防措施，推动整个乐团完成演奏。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;P7/P8 的任务和乐团指挥非常像，也可以分为三个阶段，与乐团指挥的三个阶段正好一一对应。你只要把总谱换成团队的工作目标，把人手和乐器换成资源，把演奏排练换成工作目标落地就行了。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;首先是分析阶段，对应乐团指挥的总谱研究；然后是计划阶段，对应排练准备；最后是落地阶段，对应正式排练。具体的对应关系如下表所示。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.2747826086956522&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PW0wIHxgg3kLDUqiaAMQafH2icPM4icClrkw1lJiczI0SWGySQVrNXVfQE9UmBSJ3l72d70O0drQdKcvMOfcuOInVA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;575&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;那么 P7 和 P8 的区别是什么呢？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;P7 只需要指挥单个团队，而 P8 往往要指挥多个团队。另外还需要补充一点，这里说的“团队”，包括以下两种类型：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;（1）狭义上的团队：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;组织结构上的行政级别团队，比如 P7 担任的 3～10 个人团队的Team Leader，负责团队管理、团队规划、团队考核和团队建设等管理职责。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;（2）广义上的团队：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;为了完成某个目标而成立的虚拟团队（或者说临时团队），比如某个项目投入的人员组成了“项目团队”（由公司立项成立），某个专项任务投入的人员组成了“专项团队”（由管理者安排，比如“研发效能提升工作组”）。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;P7/P8 的核心职责如下表所示。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1.07908611599297&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PW0wIHxgg3kLDUqiaAMQafH2icPM4icClrk7xIUv9A26LBbd5uucZK01QAJNSRZIP1IGTZIl62RAP6S1OBmEdvC0Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;569&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-role=&quot;title&quot; data-tools=&quot;135编辑器&quot; data-id=&quot;113244&quot;&gt;&lt;section&gt;&lt;section hm_fix=&quot;217:759&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;&lt;strong data-brushtype=&quot;text&quot;&gt;P9/P10:电影导演&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;P9/P10 这一档相当于“电影导演”，核心能力是导演作品。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;为什么要这么类比呢？因为P9/P10的工作跟电影导演很像，具体表现在以下三个方面。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;第一，他们的工作都具有一定的规模。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;比如你只是拍一段 60 秒的 vlog（中文名是微录，是博客的一种类型，全称是 video blog&lt;/span&gt;&lt;span&gt;或 &lt;/span&gt;&lt;span&gt;video log&lt;/span&gt;&lt;span&gt;，意思是视频记录、视频博客、视频网络日志），还算不上电影导演；真正的&lt;/span&gt;&lt;span&gt;电影导演拍出来的是几十分钟以上，剧本、服饰、化妆、道具、表演、运镜和剪辑都非常&lt;/span&gt;&lt;span&gt;成熟的作品。同样地，&lt;/span&gt;&lt;span&gt;P5&lt;/span&gt;&lt;span&gt;～&lt;/span&gt;&lt;span&gt;P8 &lt;/span&gt;&lt;span&gt;这几个级别的工作都会产出一些成果，但这些成果在规模上&lt;/span&gt;&lt;span&gt;还不足以同 &lt;/span&gt;&lt;span&gt;P9/P10 &lt;/span&gt;&lt;span&gt;这个级别相比。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;第二，他们都是总决策者。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在一个剧组里，一般情况下导演拥有绝对的话语权。同样地，虽然 P6 可以指导别人，&lt;/span&gt;&lt;span&gt;P7/P8 &lt;/span&gt;&lt;span&gt;可以带团队，但工作仍然在很大程度上受到制约，关键的目标制定、资源整合和关键&lt;/span&gt;&lt;span&gt;决策的工作，还是得由 &lt;/span&gt;&lt;span&gt;P9/P10 &lt;/span&gt;&lt;span&gt;来完成。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;具体一点说，&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;P9/P10 需要制定有挑战的业务目标；&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;整合不同的团队，包括多个技术团&lt;/span&gt;&lt;span&gt;队（比如 &lt;/span&gt;&lt;span&gt;Android&lt;/span&gt;&lt;span&gt;、&lt;/span&gt;&lt;span&gt;iOS&lt;/span&gt;&lt;span&gt;、前端、&lt;/span&gt;&lt;span&gt;Java &lt;/span&gt;&lt;span&gt;后端、测试、运维等）和多个业务团队（比如腾讯的&lt;/span&gt;&lt;span&gt;广告平台的某个业务，可能涉及 &lt;/span&gt;&lt;span&gt;QQ&lt;/span&gt;&lt;span&gt;、微信和应用宝等多个业务团队）；做出关键决策（例&lt;/span&gt;&lt;span&gt;如要做什么、不做什么、先做什么和后做什么）。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;第三，他们都是总负责人。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;一部电影作品会打上导演的烙印，甚至呈现出强烈的导演个人风格。电影拍得不好，&lt;/span&gt;&lt;span&gt;观众首先批评的就是导演；拍得好，赞美和荣誉也首先给到导演身上。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;同样地，P9/P10 的水平、眼界、价值观和做事风格，&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;直接决定了一条业务线的质量&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;，&lt;/span&gt;&lt;span&gt;因为这些因素会体现在工作过程中的各种决策里面，决定了最终的呈现效果。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;另外，导演往往有自己擅长的题材，比如文艺片、喜剧片；而 P9/P10 一般也都聚焦于&lt;/span&gt;&lt;span&gt;某个业务或者专业领域，比如电商业务、出行业务、安全领域、算法领域，很少有跨领域&lt;/span&gt;&lt;span&gt;样样精通的人才。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;P9 和 P10 的核心差异在于成果质量。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;还是以电影导演来类比，P9 是成熟的导演，能&lt;/span&gt;&lt;span&gt;拍出 7 分以上的作品（基本合格）；P10 是成名的导演，能拍出 8 分以上的作品（比较优&lt;/span&gt;&lt;span&gt;质）。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;虽然对于 P9/P10 的工作成果，并没有一个通用的打分机制，但是公司能通过一些硬指&lt;/span&gt;&lt;span&gt;标来衡量，最典型的就是直接看业务结果。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如果你负责的业务结果实现了既定的业务目标，那么你就是成熟的导演，可以胜任 P9；&lt;/span&gt;&lt;span&gt;如果你负责的业务结果按照某个标准（用户量、收入和权威机构的测评等），进入了业界&lt;/span&gt;&lt;span&gt;前列，有一定的名气和影响力，那么你就是成名的导演，可以胜任 P10。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;P9/P10 的核心职责如下表所示。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.8784530386740331&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PW0wIHxgg3kLDUqiaAMQafH2icPM4icClrkbSBkKKVHYzViagVIPAaDH4djDPX6woLUYGV4B0W73PKotCc5YrbDL1g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;543&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;这些类比有什么用&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;本文使用了&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;“专业工匠”“乐团指挥”和“电影导演”&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;三种形象来类比不同的职级档次，但这仅仅是针对职责的相似度来说的。这种档次划分对应了行政级别的高低，但不代表艺术成就的高低。比如 P9/P10 的级别高于 P8/P7，但并不意味着电影导演的艺术成就一定高于乐团指挥。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;之所以要把职级档次与你熟悉的职业角色建立联系，是希望&lt;strong&gt;通过形象思维的方式帮助你快速建立对每个级别的具体认知。&lt;/strong&gt;以后我们再说到某个级别的时候，你就能迅速了解它的核心要求。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;需要注意的是，本章的类比只是宏观层面的特征提炼。如果你想了解每个级别能力的细节要求，还是需要参考职级详解部分关于每个级别的详细解读。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;最后推荐&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;《互联网大厂晋升指南：从P5到P9的升级攻略》&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;这本书给在互联网职场拼搏中的你。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这本书针对晋升需求为你&lt;/span&gt;&lt;span&gt;介绍了一套系统的晋升方法论，涵盖“理解晋升→准备晋升→参与晋升→获得晋升”这条完整的晋升链条，深入剖析了晋升背后的规则、“潜规则”、技巧和套路，以便帮你找到正确的发力点，顺利通过晋升，获得更好的职业发展。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img __bg_gif&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/PW0wIHxgg3kFra98vflticZia2VkcsFaePvn80lFRYLHeZa5V84XiaskrRJiaV9StVdRIPhPRdctAicu5cpHNlhz5eA/640?wx_fmt=gif&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&quot; data-type=&quot;gif&quot; data-w=&quot;55&quot; data-width=&quot;10%&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6621621621621622&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/PW0wIHxgg3kFra98vflticZia2VkcsFaePbKsfJXpVgL3aDtic7UIm15qWB20r64HzAWFlsLiaD4GroAolwnd5EZUg/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;jpeg&quot; data-w=&quot;740&quot;/&gt;&lt;/p&gt;&lt;section data-role=&quot;list&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;P5提升攻略：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;如何快速从学生转变为“打工人”&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;P6提升攻略：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;如何成为独立自主的“项目能手”&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;P7提升攻略：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;如何成为让人信服的“团队专家”&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;P8提升攻略：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;如何成为有影响力的“领域专家”&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;P9提升攻略：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;如何成为跨域整合的“业务导演”&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;阿里&lt;span&gt;前&lt;/span&gt;资深技术专家李运华把这些干货都写在了这本升职秘籍里……&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;2.0329113924050635&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/PW0wIHxgg3kFra98vflticZia2VkcsFaePzP73icuiasuibMVflcJSPTazGDNZx43SPeWYUIxxvcv16k8InCsKIoojA/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;jpeg&quot; data-w=&quot;790&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;当然，这里也给大家争取到了本书的&lt;/span&gt;&lt;strong&gt;全网最低价&lt;/strong&gt;&lt;span&gt;，扫码或点击阅读原文都可以去京东下单，有晋升需求的你冲就行了！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PW0wIHxgg3kFra98vflticZia2VkcsFaePQyuhoFW83GmvDniaImP4h8XRDlryG2WdcP69d8uDQFbcowLNyxAVUFg/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;300&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;粉丝专享五折，快快扫码抢购吧！&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;发布：刘恩惠&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;审核：陈歆懿&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-croporisrc=&quot;https://mmbiz.qpic.cn/mmbiz_png/PW0wIHxgg3ntPMYAJur3UuYzhSDgO7Puv74VHDtgNjyJbpQvt1gicgSpjrlpDy6BheYoAmtjiaF7cdIuPkuUlFkw/0?wx_fmt=png&quot; data-cropx1=&quot;0&quot; data-cropx2=&quot;1920&quot; data-cropy1=&quot;0&quot; data-cropy2=&quot;29.8961937716263&quot; data-ratio=&quot;0.01574074074074074&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/PW0wIHxgg3ntPMYAJur3UuYzhSDgO7Pu8DQL5f0FQIuDZC87yrAuNLy4frEdlMeWkthrlzczb0RbMOBQCAwDrA/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot;/&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;如果喜欢本文&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;欢迎&lt;/span&gt; &lt;span&gt;&lt;strong&gt;在看&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;丨&lt;/span&gt;&lt;span&gt;&lt;strong&gt;留言&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;丨&lt;/span&gt;&lt;span&gt;&lt;strong&gt;分享至朋友圈&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; 三连&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-id=&quot;92644&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-width=&quot;100%&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;span&gt; &lt;strong&gt;热文推荐 &lt;/strong&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;hr/&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;574&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;244&quot; data-ratio=&quot;0.4255555555555556&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PW0wIHxgg3m3jibtjia3lCrCvUY6N19QMZ3FjCcpuHouXkdLicQVUiaLicgR8cgSbk7RA8G427GKowhbEvVefuJp53g/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;900&quot;/&gt;&lt;/p&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;▼点击阅读原文，了解本书详情~&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/div&gt;

          
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>6d6188964c427020c50ef1b0a9d7e8c4</guid>
<title>IM 跨平台技术学习（三）：vivo 的 Electron 技术栈选型、全方位实践总结</title>
<link>https://toutiao.io/k/uaa9ymi</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;td class=&quot;t_f&quot; id=&quot;postmessage_21074&quot;&gt;&amp;#13;
&lt;a target=&quot;_blank&quot; href=&quot;http://www.52im.net/thread-2792-1-1.html&quot;&gt;&amp;#13;
&lt;img class=&quot;g_js_scan_my_qr_4tiezi&quot; src=&quot;http://www.52im.net/template/qu_115style/img/52im_qr_4tiezi3.png&quot; alt=&quot;微信扫一扫关注！&quot; title=&quot;微信扫一扫关注！&quot;/&gt;&amp;#13;
&lt;/a&gt;&amp;#13;
&lt;p class=&quot;dc_zhaiyao2&quot;&gt;本文由vivo技术团队Yang Kun分享，原题“electron 应用开发优秀实践”，即时通讯网有修订。&lt;/p&gt;&lt;br/&gt;&amp;#13;
&lt;h2 class=&quot;dc_h2head&quot;&gt;1、引言&lt;/h2&gt;&lt;br/&gt;&amp;#13;
在上篇《&lt;a href=&quot;http://www.52im.net/thread-4039-1-1.html&quot; target=&quot;_blank&quot;&gt;Electron初体验(快速开始、跨进程通信、打包、踩坑等)&lt;/a&gt;》的分享中，我们已经对Electron跨端框架的开发有了大概的了解。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;strong&gt;本篇将基于vivo技术团队的技术实践，详细阐述了vivo在使用Electron进行跨端桌面开发时的技术栈选型考量，同时分享了在打包构建、版本更新、性能优化、质量保障、安全性等方面的实践方案和踩坑总结。&lt;/strong&gt;&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&amp;#13;
&lt;ignore_js_op&gt;&amp;#13;
&amp;#13;
&lt;img id=&quot;aimg_13763&quot; aid=&quot;13763&quot; src=&quot;http://www.52im.net/static/image/common/none.gif&quot; zoomfile=&quot;data/attachment/forum/202209/23/130413rjxgzfgbyxeg55fz.png&quot; file=&quot;data/attachment/forum/202209/23/130413rjxgzfgbyxeg55fz.png&quot; class=&quot;zoom&quot; inpost=&quot;1&quot; alt=&quot;IM跨平台技术学习(三)：vivo的Electron技术栈选型、全方位实践总结_cover-opti.png&quot; title=&quot;IM跨平台技术学习(三)：vivo的Electron技术栈选型、全方位实践总结_cover-opti.png&quot;/&gt;&amp;#13;
&amp;#13;
&lt;div class=&quot;tip tip_4 aimg_tip&quot; id=&quot;aimg_13763_menu&quot; disautofocus=&quot;true&quot;&gt;&amp;#13;
&lt;div class=&quot;xs0&quot;&gt;&amp;#13;
&lt;p&gt;&lt;strong&gt;cover-opti.png&lt;/strong&gt; &lt;em class=&quot;xg1&quot;&gt;(16.04 KB, 下载次数: 42)&lt;/em&gt;&lt;/p&gt;&amp;#13;
&lt;p&gt;&amp;#13;
&lt;a href=&quot;http://www.52im.net/forum.php?mod=attachment&amp;amp;aid=MTM3NjN8ZDczZjY5M2J8MTY2NDc1Nzk0MnwwfDQwNDQ%3D&amp;amp;nothumb=yes&quot; target=&quot;_blank&quot;&gt;下载附件&lt;/a&gt;&amp;#13;
&amp;#13;
 &lt;a href=&quot;http://www.52im.net/&quot; id=&quot;savephoto_13763&quot; url=&quot;home.php?mod=spacecp&amp;amp;ac=album&amp;amp;op=saveforumphoto&amp;amp;aid=13763&amp;amp;handlekey=savephoto_13763&quot;&gt;保存到相册&lt;/a&gt;&amp;#13;
&amp;#13;
&lt;/p&gt;&amp;#13;
&amp;#13;
&lt;p class=&quot;xg1 y&quot;&gt;&lt;span title=&quot;2022-09-23 13:04&quot;&gt;10 天前&lt;/span&gt; 上传&lt;/p&gt;&amp;#13;
&amp;#13;
&lt;/div&gt;&amp;#13;
&lt;p class=&quot;tip_horn&quot;/&gt;&amp;#13;
&lt;/div&gt;&amp;#13;
&amp;#13;
&lt;/ignore_js_op&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;h2 class=&quot;dc_h2&quot;&gt;2、系列文章&lt;/h2&gt;&lt;br/&gt;&amp;#13;
&lt;strong&gt;本文是系列文章中的第3篇，本系列总目录如下：&lt;/strong&gt;&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;h2 class=&quot;dc_h2head&quot;&gt;3、技术背景&lt;/h2&gt;&lt;br/&gt;&amp;#13;
因业务发展，我们需要用到桌面端技术，技术特性涉及离线可用、调用桌面系统能力等要求。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;strong&gt;那么什么是桌面端开发？&lt;/strong&gt;&lt;strong&gt;一句话概括就是：&lt;/strong&gt;以 Windows 、MacOS 和 Linux 为操作系统的桌面软件开发。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
对此我们做了详细的技术调研：桌面端的开发方式主要有 Native 、 QT 、 &lt;a href=&quot;https://flutter.cn/&quot; target=&quot;_blank&quot;&gt;Flutter&lt;/a&gt; 、 NW 、 &lt;a href=&quot;http://www.52im.net/thread-2616-1-1.html&quot; target=&quot;_blank&quot;&gt;Electron&lt;/a&gt; 、 &lt;a href=&quot;https://github.com/tarui&quot; target=&quot;_blank&quot;&gt;Tarui&lt;/a&gt; 。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;strong&gt;这些技术各自优劣势如下表格所示：&lt;/strong&gt;&lt;br/&gt;&amp;#13;
&amp;#13;
&lt;ignore_js_op&gt;&amp;#13;
&amp;#13;
&lt;img id=&quot;aimg_13743&quot; aid=&quot;13743&quot; src=&quot;http://www.52im.net/static/image/common/none.gif&quot; zoomfile=&quot;data/attachment/forum/202209/23/130139pnuyiurg4ui44y1y.png&quot; file=&quot;data/attachment/forum/202209/23/130139pnuyiurg4ui44y1y.png&quot; class=&quot;zoom&quot; inpost=&quot;1&quot; alt=&quot;IM跨平台技术学习(三)：vivo的Electron技术栈选型、全方位实践总结_1.png&quot; title=&quot;IM跨平台技术学习(三)：vivo的Electron技术栈选型、全方位实践总结_1.png&quot;/&gt;&amp;#13;
&amp;#13;
&lt;div class=&quot;tip tip_4 aimg_tip&quot; id=&quot;aimg_13743_menu&quot; disautofocus=&quot;true&quot;&gt;&amp;#13;
&lt;div class=&quot;xs0&quot;&gt;&amp;#13;
&lt;p&gt;&lt;strong&gt;1.png&lt;/strong&gt; &lt;em class=&quot;xg1&quot;&gt;(23.07 KB, 下载次数: 41)&lt;/em&gt;&lt;/p&gt;&amp;#13;
&lt;p&gt;&amp;#13;
&lt;a href=&quot;http://www.52im.net/forum.php?mod=attachment&amp;amp;aid=MTM3NDN8ZTkxMTAwMDZ8MTY2NDc1Nzk0MnwwfDQwNDQ%3D&amp;amp;nothumb=yes&quot; target=&quot;_blank&quot;&gt;下载附件&lt;/a&gt;&amp;#13;
&amp;#13;
 &lt;a href=&quot;http://www.52im.net/&quot; id=&quot;savephoto_13743&quot; url=&quot;home.php?mod=spacecp&amp;amp;ac=album&amp;amp;op=saveforumphoto&amp;amp;aid=13743&amp;amp;handlekey=savephoto_13743&quot;&gt;保存到相册&lt;/a&gt;&amp;#13;
&amp;#13;
&lt;/p&gt;&amp;#13;
&amp;#13;
&lt;p class=&quot;xg1 y&quot;&gt;&lt;span title=&quot;2022-09-23 13:01&quot;&gt;10 天前&lt;/span&gt; 上传&lt;/p&gt;&amp;#13;
&amp;#13;
&lt;/div&gt;&amp;#13;
&lt;p class=&quot;tip_horn&quot;/&gt;&amp;#13;
&lt;/div&gt;&amp;#13;
&amp;#13;
&lt;/ignore_js_op&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;strong&gt;我们最终的桌面端技术选型是 Electron&lt;/strong&gt;，Electron 是一个可以使用 Web 技术来开发跨平台桌面应用的开发框架。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;strong&gt;其技术组成如下：&lt;/strong&gt;&lt;br/&gt;&amp;#13;
&lt;div&gt;&lt;pre class=&quot;brush: bash; gutter: true&quot;&gt;Electron = Chromium + Node.js + Native API&lt;/pre&gt;&lt;/div&gt;&lt;br/&gt;&amp;#13;
&lt;strong&gt;各技术能力如下图所示：&lt;/strong&gt;&lt;br/&gt;&amp;#13;
&amp;#13;
&lt;ignore_js_op&gt;&amp;#13;
&amp;#13;
&lt;img id=&quot;aimg_13744&quot; aid=&quot;13744&quot; src=&quot;http://www.52im.net/static/image/common/none.gif&quot; zoomfile=&quot;data/attachment/forum/202209/23/130146z6nu4zv94nv3966j.jpg&quot; file=&quot;data/attachment/forum/202209/23/130146z6nu4zv94nv3966j.jpg&quot; class=&quot;zoom&quot; inpost=&quot;1&quot; alt=&quot;IM跨平台技术学习(三)：vivo的Electron技术栈选型、全方位实践总结_2.jpg&quot; title=&quot;IM跨平台技术学习(三)：vivo的Electron技术栈选型、全方位实践总结_2.jpg&quot;/&gt;&amp;#13;
&amp;#13;
&lt;div class=&quot;tip tip_4 aimg_tip&quot; id=&quot;aimg_13744_menu&quot; disautofocus=&quot;true&quot;&gt;&amp;#13;
&lt;div class=&quot;xs0&quot;&gt;&amp;#13;
&lt;p&gt;&lt;strong&gt;2.jpg&lt;/strong&gt; &lt;em class=&quot;xg1&quot;&gt;(32.56 KB, 下载次数: 42)&lt;/em&gt;&lt;/p&gt;&amp;#13;
&lt;p&gt;&amp;#13;
&lt;a href=&quot;http://www.52im.net/forum.php?mod=attachment&amp;amp;aid=MTM3NDR8MmY5MmRlZmR8MTY2NDc1Nzk0MnwwfDQwNDQ%3D&amp;amp;nothumb=yes&quot; target=&quot;_blank&quot;&gt;下载附件&lt;/a&gt;&amp;#13;
&amp;#13;
 &lt;a href=&quot;http://www.52im.net/&quot; id=&quot;savephoto_13744&quot; url=&quot;home.php?mod=spacecp&amp;amp;ac=album&amp;amp;op=saveforumphoto&amp;amp;aid=13744&amp;amp;handlekey=savephoto_13744&quot;&gt;保存到相册&lt;/a&gt;&amp;#13;
&amp;#13;
&lt;/p&gt;&amp;#13;
&amp;#13;
&lt;p class=&quot;xg1 y&quot;&gt;&lt;span title=&quot;2022-09-23 13:01&quot;&gt;10 天前&lt;/span&gt; 上传&lt;/p&gt;&amp;#13;
&amp;#13;
&lt;/div&gt;&amp;#13;
&lt;p class=&quot;tip_horn&quot;/&gt;&amp;#13;
&lt;/div&gt;&amp;#13;
&amp;#13;
&lt;/ignore_js_op&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;strong&gt;整体架构如下图所示：&lt;/strong&gt;&lt;br/&gt;&amp;#13;
&amp;#13;
&lt;ignore_js_op&gt;&amp;#13;
&amp;#13;
&lt;img id=&quot;aimg_13745&quot; aid=&quot;13745&quot; src=&quot;http://www.52im.net/static/image/common/none.gif&quot; zoomfile=&quot;data/attachment/forum/202209/23/130153twdz8olwy7lklxoy.png&quot; file=&quot;data/attachment/forum/202209/23/130153twdz8olwy7lklxoy.png&quot; class=&quot;zoom&quot; inpost=&quot;1&quot; alt=&quot;IM跨平台技术学习(三)：vivo的Electron技术栈选型、全方位实践总结_3.png&quot; title=&quot;IM跨平台技术学习(三)：vivo的Electron技术栈选型、全方位实践总结_3.png&quot;/&gt;&amp;#13;
&amp;#13;
&lt;div class=&quot;tip tip_4 aimg_tip&quot; id=&quot;aimg_13745_menu&quot; disautofocus=&quot;true&quot;&gt;&amp;#13;
&lt;div class=&quot;xs0&quot;&gt;&amp;#13;
&lt;p&gt;&lt;strong&gt;3.png&lt;/strong&gt; &lt;em class=&quot;xg1&quot;&gt;(18.9 KB, 下载次数: 40)&lt;/em&gt;&lt;/p&gt;&amp;#13;
&lt;p&gt;&amp;#13;
&lt;a href=&quot;http://www.52im.net/forum.php?mod=attachment&amp;amp;aid=MTM3NDV8YjJiOWRmZDR8MTY2NDc1Nzk0MnwwfDQwNDQ%3D&amp;amp;nothumb=yes&quot; target=&quot;_blank&quot;&gt;下载附件&lt;/a&gt;&amp;#13;
&amp;#13;
 &lt;a href=&quot;http://www.52im.net/&quot; id=&quot;savephoto_13745&quot; url=&quot;home.php?mod=spacecp&amp;amp;ac=album&amp;amp;op=saveforumphoto&amp;amp;aid=13745&amp;amp;handlekey=savephoto_13745&quot;&gt;保存到相册&lt;/a&gt;&amp;#13;
&amp;#13;
&lt;/p&gt;&amp;#13;
&amp;#13;
&lt;p class=&quot;xg1 y&quot;&gt;&lt;span title=&quot;2022-09-23 13:01&quot;&gt;10 天前&lt;/span&gt; 上传&lt;/p&gt;&amp;#13;
&amp;#13;
&lt;/div&gt;&amp;#13;
&lt;p class=&quot;tip_horn&quot;/&gt;&amp;#13;
&lt;/div&gt;&amp;#13;
&amp;#13;
&lt;/ignore_js_op&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;strong&gt;Electron 是多进程架构，架构具有以下特点：&lt;/strong&gt;&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;ul&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;1）&lt;/strong&gt;&lt;/i&gt;由一个主进程和 N 个渲染进程组成；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;2）&lt;/strong&gt;&lt;/i&gt;主进程承担主导作用，用于完成各种跨平台和原生交互；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;3）&lt;/strong&gt;&lt;/i&gt;渲染进程可以是多个，使用 Web 技术开发，通过浏览器内核渲染页面；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;4）&lt;/strong&gt;&lt;/i&gt;主进程和渲染进程通过进程间通信来完成各种功能。&lt;br/&gt;&amp;#13;
&lt;/li&gt;&lt;/ul&gt;&lt;br/&gt;&amp;#13;
这里回顾一下 Electron 进程间通信技术原理。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
electron 使用 IPC （&lt;font&gt;interprocess communication&lt;/font&gt;） 在进程之间进行通信。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;strong&gt;如下图所示：&lt;/strong&gt;&lt;br/&gt;&amp;#13;
&amp;#13;
&lt;ignore_js_op&gt;&amp;#13;
&amp;#13;
&lt;img id=&quot;aimg_13746&quot; aid=&quot;13746&quot; src=&quot;http://www.52im.net/static/image/common/none.gif&quot; zoomfile=&quot;data/attachment/forum/202209/23/130159lv9lxdisclqd73ss.png&quot; file=&quot;data/attachment/forum/202209/23/130159lv9lxdisclqd73ss.png&quot; class=&quot;zoom&quot; inpost=&quot;1&quot; alt=&quot;IM跨平台技术学习(三)：vivo的Electron技术栈选型、全方位实践总结_4.png&quot; title=&quot;IM跨平台技术学习(三)：vivo的Electron技术栈选型、全方位实践总结_4.png&quot;/&gt;&amp;#13;
&amp;#13;
&lt;div class=&quot;tip tip_4 aimg_tip&quot; id=&quot;aimg_13746_menu&quot; disautofocus=&quot;true&quot;&gt;&amp;#13;
&lt;div class=&quot;xs0&quot;&gt;&amp;#13;
&lt;p&gt;&lt;strong&gt;4.png&lt;/strong&gt; &lt;em class=&quot;xg1&quot;&gt;(20.14 KB, 下载次数: 46)&lt;/em&gt;&lt;/p&gt;&amp;#13;
&lt;p&gt;&amp;#13;
&lt;a href=&quot;http://www.52im.net/forum.php?mod=attachment&amp;amp;aid=MTM3NDZ8OTQ1NjIyNDd8MTY2NDc1Nzk0MnwwfDQwNDQ%3D&amp;amp;nothumb=yes&quot; target=&quot;_blank&quot;&gt;下载附件&lt;/a&gt;&amp;#13;
&amp;#13;
 &lt;a href=&quot;http://www.52im.net/&quot; id=&quot;savephoto_13746&quot; url=&quot;home.php?mod=spacecp&amp;amp;ac=album&amp;amp;op=saveforumphoto&amp;amp;aid=13746&amp;amp;handlekey=savephoto_13746&quot;&gt;保存到相册&lt;/a&gt;&amp;#13;
&amp;#13;
&lt;/p&gt;&amp;#13;
&amp;#13;
&lt;p class=&quot;xg1 y&quot;&gt;&lt;span title=&quot;2022-09-23 13:01&quot;&gt;10 天前&lt;/span&gt; 上传&lt;/p&gt;&amp;#13;
&amp;#13;
&lt;/div&gt;&amp;#13;
&lt;p class=&quot;tip_horn&quot;/&gt;&amp;#13;
&lt;/div&gt;&amp;#13;
&amp;#13;
&lt;/ignore_js_op&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
其提供了 IPC 通信模块，主进程的 ipcMain 和渲染进程的 ipcRenderer。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
从 electron 源码中可以看出， ipcMain 和 ipcRenderer 都是 EventEmitter 对象。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;strong&gt;源码如下图所示：&lt;/strong&gt;&lt;br/&gt;&amp;#13;
&amp;#13;
&lt;ignore_js_op&gt;&amp;#13;
&amp;#13;
&lt;img id=&quot;aimg_13747&quot; aid=&quot;13747&quot; src=&quot;http://www.52im.net/static/image/common/none.gif&quot; zoomfile=&quot;data/attachment/forum/202209/23/130206u7907tztf67tt4z5.png&quot; file=&quot;data/attachment/forum/202209/23/130206u7907tztf67tt4z5.png&quot; class=&quot;zoom&quot; inpost=&quot;1&quot; alt=&quot;IM跨平台技术学习(三)：vivo的Electron技术栈选型、全方位实践总结_5.png&quot; title=&quot;IM跨平台技术学习(三)：vivo的Electron技术栈选型、全方位实践总结_5.png&quot;/&gt;&amp;#13;
&amp;#13;
&lt;div class=&quot;tip tip_4 aimg_tip&quot; id=&quot;aimg_13747_menu&quot; disautofocus=&quot;true&quot;&gt;&amp;#13;
&lt;div class=&quot;xs0&quot;&gt;&amp;#13;
&lt;p&gt;&lt;strong&gt;5.png&lt;/strong&gt; &lt;em class=&quot;xg1&quot;&gt;(71.51 KB, 下载次数: 45)&lt;/em&gt;&lt;/p&gt;&amp;#13;
&lt;p&gt;&amp;#13;
&lt;a href=&quot;http://www.52im.net/forum.php?mod=attachment&amp;amp;aid=MTM3NDd8ZGRhMjkxYWN8MTY2NDc1Nzk0MnwwfDQwNDQ%3D&amp;amp;nothumb=yes&quot; target=&quot;_blank&quot;&gt;下载附件&lt;/a&gt;&amp;#13;
&amp;#13;
 &lt;a href=&quot;http://www.52im.net/&quot; id=&quot;savephoto_13747&quot; url=&quot;home.php?mod=spacecp&amp;amp;ac=album&amp;amp;op=saveforumphoto&amp;amp;aid=13747&amp;amp;handlekey=savephoto_13747&quot;&gt;保存到相册&lt;/a&gt;&amp;#13;
&amp;#13;
&lt;/p&gt;&amp;#13;
&amp;#13;
&lt;p class=&quot;xg1 y&quot;&gt;&lt;span title=&quot;2022-09-23 13:02&quot;&gt;10 天前&lt;/span&gt; 上传&lt;/p&gt;&amp;#13;
&amp;#13;
&lt;/div&gt;&amp;#13;
&lt;p class=&quot;tip_horn&quot;/&gt;&amp;#13;
&lt;/div&gt;&amp;#13;
&amp;#13;
&lt;/ignore_js_op&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
看到源码实现，是不是觉得 IPC 不难理解了。知其本质，方可游刃有余。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
限于篇幅，这里对Electron的基础知识就不再展开，有兴趣的读者可回顾一下本系列的前两篇《&lt;a href=&quot;http://www.52im.net/thread-2616-1-1.html&quot; target=&quot;_blank&quot;&gt;快速了解新一代跨平台桌面技术——Electron&lt;/a&gt;》、《&lt;a href=&quot;http://www.52im.net/thread-4039-1-1.html&quot; target=&quot;_blank&quot;&gt;Electron初体验(快速开始、跨进程通信、打包、踩坑等&lt;/a&gt;)》（&lt;font&gt;这篇中的“5、进程详解”特别介绍了Electron进程间的关系以及通信原理&lt;/font&gt;）。&lt;br/&gt;&amp;#13;
&lt;h2 class=&quot;dc_h2&quot;&gt;4、开发技术栈选型&lt;/h2&gt;&lt;br/&gt;&amp;#13;
&lt;h3 class=&quot;dc_h3&quot;&gt;&lt;span&gt;4.1&lt;/span&gt;编程语言选型&lt;/h3&gt;&lt;br/&gt;&amp;#13;
我们最终选择的是Typescript，理由如下。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;strong&gt;针对开发者：&lt;/strong&gt;&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;ul&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;1）&lt;/strong&gt;&lt;/i&gt;Javascript 的超集（无缝支持所有的 es2020+ 所有的特性，学习成本小）；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;2）&lt;/strong&gt;&lt;/i&gt;编译生成的 JavaScript 的代码保持很好的可读性；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;3）&lt;/strong&gt;&lt;/i&gt;可维护性明显增强；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;4）&lt;/strong&gt;&lt;/i&gt;完整的 OOP 的支持（extends, interface， private， protect， public等）；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;5）&lt;/strong&gt;&lt;/i&gt;类型即文档；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;6）&lt;/strong&gt;&lt;/i&gt;类型的约束，更少的单元测试的覆盖；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;7）&lt;/strong&gt;&lt;/i&gt;更安全的代码。&lt;br/&gt;&amp;#13;
&lt;/li&gt;&lt;/ul&gt;&lt;br/&gt;&amp;#13;
&lt;strong&gt;针对工具：&lt;/strong&gt;&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;ul&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;1）&lt;/strong&gt;&lt;/i&gt;更好的重构能力；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;2）&lt;/strong&gt;&lt;/i&gt;静态分析自动导包；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;3）&lt;/strong&gt;&lt;/i&gt;代码错误检查；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;4）&lt;/strong&gt;&lt;/i&gt;代码跳转；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;5）&lt;/strong&gt;&lt;/i&gt;代码提示补齐。&lt;br/&gt;&amp;#13;
&lt;/li&gt;&lt;/ul&gt;&lt;br/&gt;&amp;#13;
&lt;strong&gt;社区支持：&lt;/strong&gt;大量的社区的类型定义文件 提升开发效率。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;h3 class=&quot;dc_h3&quot;&gt;&lt;span&gt;4.2&lt;/span&gt;构建工具选型&lt;/h3&gt;&lt;br/&gt;&amp;#13;
我们选择的是 &lt;a href=&quot;https://github.com/electron-userland/electron-forge&quot; target=&quot;_blank&quot;&gt;Electron-Forge&lt;/a&gt;。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;strong&gt;理由很充分：&lt;/strong&gt;Electron-Forge简单而又强大，目前 electron 应用最好的构建工具之一。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
这里提一下 &lt;a href=&quot;https://github.com/electron-userland/electron-builder&quot; target=&quot;_blank&quot;&gt;electron-builder&lt;/a&gt; 其和 &lt;a href=&quot;https://github.com/electron-userland/electron-forge&quot; target=&quot;_blank&quot;&gt;electron-forge&lt;/a&gt; 的介绍和区别。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;strong&gt;看下图所示：&lt;/strong&gt;&lt;br/&gt;&amp;#13;
&amp;#13;
&lt;ignore_js_op&gt;&amp;#13;
&amp;#13;
&lt;img id=&quot;aimg_13749&quot; aid=&quot;13749&quot; src=&quot;http://www.52im.net/static/image/common/none.gif&quot; zoomfile=&quot;data/attachment/forum/202209/23/130227epi8px1xl22r0bb1.png&quot; file=&quot;data/attachment/forum/202209/23/130227epi8px1xl22r0bb1.png&quot; class=&quot;zoom&quot; inpost=&quot;1&quot; alt=&quot;IM跨平台技术学习(三)：vivo的Electron技术栈选型、全方位实践总结_6.png&quot; title=&quot;IM跨平台技术学习(三)：vivo的Electron技术栈选型、全方位实践总结_6.png&quot;/&gt;&amp;#13;
&amp;#13;
&lt;div class=&quot;tip tip_4 aimg_tip&quot; id=&quot;aimg_13749_menu&quot; disautofocus=&quot;true&quot;&gt;&amp;#13;
&lt;div class=&quot;xs0&quot;&gt;&amp;#13;
&lt;p&gt;&lt;strong&gt;6.png&lt;/strong&gt; &lt;em class=&quot;xg1&quot;&gt;(49.16 KB, 下载次数: 42)&lt;/em&gt;&lt;/p&gt;&amp;#13;
&lt;p&gt;&amp;#13;
&lt;a href=&quot;http://www.52im.net/forum.php?mod=attachment&amp;amp;aid=MTM3NDl8NmNlMzU4N2F8MTY2NDc1Nzk0MnwwfDQwNDQ%3D&amp;amp;nothumb=yes&quot; target=&quot;_blank&quot;&gt;下载附件&lt;/a&gt;&amp;#13;
&amp;#13;
 &lt;a href=&quot;http://www.52im.net/&quot; id=&quot;savephoto_13749&quot; url=&quot;home.php?mod=spacecp&amp;amp;ac=album&amp;amp;op=saveforumphoto&amp;amp;aid=13749&amp;amp;handlekey=savephoto_13749&quot;&gt;保存到相册&lt;/a&gt;&amp;#13;
&amp;#13;
&lt;/p&gt;&amp;#13;
&amp;#13;
&lt;p class=&quot;xg1 y&quot;&gt;&lt;span title=&quot;2022-09-23 13:02&quot;&gt;10 天前&lt;/span&gt; 上传&lt;/p&gt;&amp;#13;
&amp;#13;
&lt;/div&gt;&amp;#13;
&lt;p class=&quot;tip_horn&quot;/&gt;&amp;#13;
&lt;/div&gt;&amp;#13;
&amp;#13;
&lt;/ignore_js_op&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
两者最大的区别在于自由度，两者在能力上基本没什么差异了，从官方组织中的排序看，有意优先推荐 electron-forge 。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;h3 class=&quot;dc_h3&quot;&gt;&lt;span&gt;4.3&lt;/span&gt;Web方案选型&lt;/h3&gt;&lt;br/&gt;&amp;#13;
我们采用的是 &lt;a href=&quot;https://cn.vuejs.org/&quot; target=&quot;_blank&quot;&gt;Vue3&lt;/a&gt; ，同时使用 &lt;a href=&quot;https://vitejs.cn/&quot; target=&quot;_blank&quot;&gt;Vite&lt;/a&gt; 作为构建工具，具体优点，大家可以查看官网介绍，这套组合是目前主流的 Web 开发方案。&lt;br/&gt;&amp;#13;
        &lt;br/&gt;&amp;#13;
&lt;h3 class=&quot;dc_h3&quot;&gt;&lt;span&gt;4.4&lt;/span&gt;monorepo方案选型&lt;/h3&gt;&lt;br/&gt;&amp;#13;
目前的 monorepo 生态百花齐放，正确的实践方法应该是集大成法，也就是取各家之长，目前的趋势也是如此，各开源 monorepo 工具达成默契，专注自己擅长的能力。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
如 pnpm 擅长依赖管理， turbo 擅长构建任务编排。遂在 monorepo 技术选型上，我选择了 &lt;a href=&quot;https://pnpm.io&quot; target=&quot;_blank&quot;&gt;pnpm&lt;/a&gt; 和 &lt;a href=&quot;https://turborepo.org/&quot; target=&quot;_blank&quot;&gt;turbo&lt;/a&gt; 。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
以下是pnpm的&lt;a href=&quot;https://pnpm.io/&quot; target=&quot;_blank&quot;&gt;官网&lt;/a&gt;：&lt;br/&gt;&amp;#13;
&amp;#13;
&lt;ignore_js_op&gt;&amp;#13;
&amp;#13;
&lt;img id=&quot;aimg_13748&quot; aid=&quot;13748&quot; src=&quot;http://www.52im.net/static/image/common/none.gif&quot; zoomfile=&quot;data/attachment/forum/202209/23/130220lgscgqsdjjms4qxv.png&quot; file=&quot;data/attachment/forum/202209/23/130220lgscgqsdjjms4qxv.png&quot; class=&quot;zoom&quot; inpost=&quot;1&quot; alt=&quot;IM跨平台技术学习(三)：vivo的Electron技术栈选型、全方位实践总结_7.png&quot; title=&quot;IM跨平台技术学习(三)：vivo的Electron技术栈选型、全方位实践总结_7.png&quot;/&gt;&amp;#13;
&amp;#13;
&lt;div class=&quot;tip tip_4 aimg_tip&quot; id=&quot;aimg_13748_menu&quot; disautofocus=&quot;true&quot;&gt;&amp;#13;
&lt;div class=&quot;xs0&quot;&gt;&amp;#13;
&lt;p&gt;&lt;strong&gt;7.png&lt;/strong&gt; &lt;em class=&quot;xg1&quot;&gt;(51.58 KB, 下载次数: 44)&lt;/em&gt;&lt;/p&gt;&amp;#13;
&lt;p&gt;&amp;#13;
&lt;a href=&quot;http://www.52im.net/forum.php?mod=attachment&amp;amp;aid=MTM3NDh8MTdhNzNhOWN8MTY2NDc1Nzk0MnwwfDQwNDQ%3D&amp;amp;nothumb=yes&quot; target=&quot;_blank&quot;&gt;下载附件&lt;/a&gt;&amp;#13;
&amp;#13;
 &lt;a href=&quot;http://www.52im.net/&quot; id=&quot;savephoto_13748&quot; url=&quot;home.php?mod=spacecp&amp;amp;ac=album&amp;amp;op=saveforumphoto&amp;amp;aid=13748&amp;amp;handlekey=savephoto_13748&quot;&gt;保存到相册&lt;/a&gt;&amp;#13;
&amp;#13;
&lt;/p&gt;&amp;#13;
&amp;#13;
&lt;p class=&quot;xg1 y&quot;&gt;&lt;span title=&quot;2022-09-23 13:02&quot;&gt;10 天前&lt;/span&gt; 上传&lt;/p&gt;&amp;#13;
&amp;#13;
&lt;/div&gt;&amp;#13;
&lt;p class=&quot;tip_horn&quot;/&gt;&amp;#13;
&lt;/div&gt;&amp;#13;
&amp;#13;
&lt;/ignore_js_op&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;strong&gt;pnpm 理由如下：&lt;/strong&gt;&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;ul&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;1）&lt;/strong&gt;&lt;/i&gt;目前最好的包管理工具（pnpm 吸收了npm、yarn、lerna等主流工具的精华，并去其糟粕）；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;2）&lt;/strong&gt;&lt;/i&gt;生态、社区活跃且强大；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;3）&lt;/strong&gt;&lt;/i&gt;结合 workspace 可以完成 monorepo 最佳设计和实践；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;4）&lt;/strong&gt;&lt;/i&gt;在管理多项目的包依赖、代码风格、代码质量、组件库复用等场景下，表现出色；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;5）&lt;/strong&gt;&lt;/i&gt;在框架、库的开发、调试、维护方面，表现出色。&lt;br/&gt;&amp;#13;
&lt;/li&gt;&lt;/ul&gt;&lt;br/&gt;&amp;#13;
相比于 vue 官网，在使用 pnpm 上，我加了 workspace 。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;strong&gt;&lt;a href=&quot;https://turborepo.org/&quot; target=&quot;_blank&quot;&gt;turbo&lt;/a&gt; 理由如下：&lt;/strong&gt;&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;ul&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;1）&lt;/strong&gt;&lt;/i&gt;它是一个高性能构建系统（拥有增量构建、云缓存、并行执行、运行时零开销、任务管道、精简子集等特性）；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;2）&lt;/strong&gt;&lt;/i&gt;具有非常优秀的任务编排能力（可以弥补 pnpm 在任务编排上的短板）。&lt;br/&gt;&amp;#13;
&lt;/li&gt;&lt;/ul&gt;&lt;br/&gt;&amp;#13;
&lt;h3 class=&quot;dc_h3&quot;&gt;&lt;span&gt;4.5&lt;/span&gt;本地数据库选型&lt;/h3&gt;&lt;br/&gt;&amp;#13;
Electron 应用数据库有非常多的选择如 &lt;a href=&quot;https://github.com/typicode/lowdb&quot; target=&quot;_blank&quot;&gt;lowdb&lt;/a&gt; 、 &lt;a href=&quot;https://www.sqlite.org/index.html&quot; target=&quot;_blank&quot;&gt;sqlite3&lt;/a&gt; 、 electron-store 、 pouchdb 、 dedb 、 rxdb 、 dexie 、 ImmortalDB 等。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
这些数据库都有一个特性，那就是无服务器。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;strong&gt;Electron本地数据库技术选型考虑因素主要有：&lt;/strong&gt;&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;ul&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;1）&lt;/strong&gt;&lt;/i&gt;生态（使用者数量、维护频率、版本稳定度）；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;2）&lt;/strong&gt;&lt;/i&gt;能力；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;3）&lt;/strong&gt;&lt;/i&gt;性能；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;4）&lt;/strong&gt;&lt;/i&gt;其他（和使用者技术匹配度）。&lt;br/&gt;&amp;#13;
&lt;/li&gt;&lt;/ul&gt;&lt;br/&gt;&amp;#13;
&lt;strong&gt;我们通过以下渠道进行了相关调研：&lt;/strong&gt;&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;ul&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;1）&lt;/strong&gt;&lt;/i&gt;github 的 issues、commit、fork、star；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;2）&lt;/strong&gt;&lt;/i&gt;sourcegraph 关键字搜索结果数；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;3）&lt;/strong&gt;&lt;/i&gt;npm 包下载量、版本发布；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;4）&lt;/strong&gt;&lt;/i&gt;官网和博客。&lt;br/&gt;&amp;#13;
&lt;/li&gt;&lt;/ul&gt;&lt;br/&gt;&amp;#13;
给出四个最优选择，分别是 lowdb 、 sqlite3 、 nedb 、 electron-store 。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;strong&gt;我们的理由如下：&lt;/strong&gt;&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;ul&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;1）&lt;/strong&gt;&lt;/i&gt;&lt;font&gt;lowdb&lt;/font&gt;：生态、能力、性能三方面表现优秀， json 形式的存储结构， 支持 lodash 、 ramda 等 api 操作，利于备份和调用；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;2）&lt;/strong&gt;&lt;/i&gt;&lt;font&gt;sqlite3&lt;/font&gt;：生态、能力、性能三方面表现优秀， Nodejs 关系型数据库第一选择方案；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;3）&lt;/strong&gt;&lt;/i&gt;&lt;font&gt;nedb&lt;/font&gt;：能力、性能三方面表现优秀，缺点是基本不维护了，但底子还在，尤其操作是 MongoDB 的子集，对于熟悉 MongoDB 的使用者来说是绝佳选择；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;4）&lt;/strong&gt;&lt;/i&gt;&lt;font&gt;electron-store&lt;/font&gt;：生态表现优秀，轻量级持久化方案，简单易用。&lt;br/&gt;&amp;#13;
&lt;/li&gt;&lt;/ul&gt;&lt;br/&gt;&amp;#13;
我们使用的数据库最终选型是 &lt;a href=&quot;https://github.com/typicode/lowdb&quot; target=&quot;_blank&quot;&gt;lowdb&lt;/a&gt; 方案。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;strong&gt;PS：&lt;/strong&gt;提一下 &lt;a href=&quot;https://pouchdb.com/&quot; target=&quot;_blank&quot;&gt;pouchdb&lt;/a&gt; ，如果需要将本地数据同步到远端数据库，可以使用 pouchdb ，其和 &lt;a href=&quot;https://couchdb.apache.org/&quot; target=&quot;_blank&quot;&gt;couchdb&lt;/a&gt; 可以轻松完成同步。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;h3 class=&quot;dc_h3&quot;&gt;&lt;span&gt;4.6&lt;/span&gt;脚本工具选型&lt;/h3&gt;&lt;br/&gt;&amp;#13;
软件开发过程中，将一些流程和操作通过脚本来完成，可以有效地提高开发效率和幸福度。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
依赖 node runtime 的优秀选择就两个：&lt;a href=&quot;https://github.com/shelljs/shelljs&quot; target=&quot;_blank&quot;&gt;shelljs&lt;/a&gt; 和 &lt;a href=&quot;https://github.com/google/zx&quot; target=&quot;_blank&quot;&gt;zx&lt;/a&gt; 。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;strong&gt;选择 zx 的理由如下：&lt;/strong&gt;&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;ul&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;1）&lt;/strong&gt;&lt;/i&gt;自带 fetch 、 chalk 等常用库，使用方便快捷；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;2）&lt;/strong&gt;&lt;/i&gt;多个子进程方便快捷（执行远端脚本、解析 md 、 xml 文件脚本、支持 ts），功能丰富且强大；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;3）&lt;/strong&gt;&lt;/i&gt;谷歌出品、大厂背景，生态非常活跃。&lt;br/&gt;&amp;#13;
&lt;/li&gt;&lt;/ul&gt;&lt;br/&gt;&amp;#13;
至此，技术选型就介绍完了。&lt;br/&gt;&amp;#13;
&lt;h2 class=&quot;dc_h2&quot;&gt;5、打包构建实践&lt;/h2&gt;&lt;br/&gt;&amp;#13;
&lt;h3 class=&quot;dc_h3&quot;&gt;&lt;span&gt;5.1&lt;/span&gt;应用图标生成&lt;/h3&gt;&lt;br/&gt;&amp;#13;
不同尺寸图标的生成有以下方法。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;strong&gt;Windows：&lt;/strong&gt;&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;strong&gt;MacOS：&lt;/strong&gt;&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;h3 class=&quot;dc_h3&quot;&gt;&lt;span&gt;5.2&lt;/span&gt;二进制文件构建&lt;/h3&gt;&lt;br/&gt;&amp;#13;
本章节内容是基于 electron-forge 阐述的，不过原理是一样的。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
在开发桌面端应用时，会有场景要用到第三方的二进制程序，比如 ffmpeg 这种。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
在构建二进制程序时，要关注以下两个注意项。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;i&gt;&lt;strong&gt;1）&lt;/strong&gt;&lt;/i&gt;二进制程序不能打包进 asar 中 可以在构建配置文件（&lt;font&gt;forge.config.js&lt;/font&gt;）进行如下设置：&lt;br/&gt;&amp;#13;
&lt;div&gt;&lt;pre class=&quot;brush: javascript; gutter: true&quot;&gt;const os = require(&#x27;os&#x27;)&amp;#13;
const platform = os.platform()&amp;#13;
const config = {&amp;#13;
  packagerConfig: {&amp;#13;
    // 可以将 ffmpeg 目录打包到 asar 目录外面&amp;#13;
    extraResource: [`./src/main/ffmpeg/`]&amp;#13;
  }&amp;#13;
}&amp;#13;
&lt;/pre&gt;&lt;/div&gt;&lt;br/&gt;&amp;#13;
&lt;i&gt;&lt;strong&gt;2）&lt;/strong&gt;&lt;/i&gt;开发和生产环境，获取二进制程序路径方法是不一样的 可以采用如下代码进行动态获取：&lt;br/&gt;&amp;#13;
&lt;div&gt;&lt;pre class=&quot;brush: javascript; gutter: true&quot;&gt;import { app } from &#x27;electron&#x27;&amp;#13;
import os from &#x27;os&#x27;&amp;#13;
import path from &#x27;path&#x27;&amp;#13;
const platform = os.platform()&amp;#13;
const dir = app.getAppPath()&amp;#13;
let basePath = &#x27;&#x27;&amp;#13;
if(app.isPackaged) basePath = path.join(process.resourcesPath)&amp;#13;
else basePath = path.join(dir, &#x27;ffmpeg&#x27;)&amp;#13;
const isWin = platform === &#x27;win32&#x27;&amp;#13;
// ffmpeg 二进制程序路径&amp;#13;
const ffmpegPath = path.join(basePath, `${platform}`, `ffmpeg${isWin ? &#x27;.exe&#x27; :&lt;/pre&gt;&lt;/div&gt;&lt;br/&gt;&amp;#13;
&lt;h3 class=&quot;dc_h3&quot;&gt;&lt;span&gt;5.3&lt;/span&gt;按需构建&lt;/h3&gt;&lt;br/&gt;&amp;#13;
&lt;strong&gt;如何对跨平台二进制文件进行按需构建呢？&lt;/strong&gt;&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
比如桌面应用中用到了 ffmpeg ， 它需要有 windows 、 mac 和 linux 的下载二进制。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
在打包的时候，如果不做按需构建，则会将 3 个二进制文件全部打到构建中，这样会让应用体积增加很多。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
可以在 &lt;font&gt;forge.config.js &lt;/font&gt;配置文件中进行如下配置，即可完成按需构建。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;strong&gt;代码如下：&lt;/strong&gt;&lt;br/&gt;&amp;#13;
&lt;div&gt;&lt;pre class=&quot;brush: javascript; gutter: true&quot;&gt;const platform = os.platform()&amp;#13;
const config = {&amp;#13;
  packagerConfig: {&amp;#13;
    extraResource: [`./src/main/ffmpeg/${platform}`]&amp;#13;
  },&amp;#13;
}&lt;/pre&gt;&lt;/div&gt;&lt;br/&gt;&amp;#13;
通过 platform 变量来把对应系统的二进制打到构建中，即可完成对二进制文件的按需构建。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;h3 class=&quot;dc_h3&quot;&gt;&lt;span&gt;5.4&lt;/span&gt;性能优化&lt;/h3&gt;&lt;br/&gt;&amp;#13;
主要是构建速度和构建体积优化，构建速度这块不好优化。这里重点说下构建体积优化，拿 mac 系统举例说明， 在 electron 应用打包后，查看应用包内容。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;strong&gt;如下图所示：&lt;/strong&gt;&lt;br/&gt;&amp;#13;
&amp;#13;
&lt;ignore_js_op&gt;&amp;#13;
&amp;#13;
&lt;img id=&quot;aimg_13750&quot; aid=&quot;13750&quot; src=&quot;http://www.52im.net/static/image/common/none.gif&quot; zoomfile=&quot;data/attachment/forum/202209/23/130238kr7fofuud1reenaf.png&quot; file=&quot;data/attachment/forum/202209/23/130238kr7fofuud1reenaf.png&quot; class=&quot;zoom&quot; inpost=&quot;1&quot; alt=&quot;IM跨平台技术学习(三)：vivo的Electron技术栈选型、全方位实践总结_8.png&quot; title=&quot;IM跨平台技术学习(三)：vivo的Electron技术栈选型、全方位实践总结_8.png&quot;/&gt;&amp;#13;
&amp;#13;
&lt;div class=&quot;tip tip_4 aimg_tip&quot; id=&quot;aimg_13750_menu&quot; disautofocus=&quot;true&quot;&gt;&amp;#13;
&lt;div class=&quot;xs0&quot;&gt;&amp;#13;
&lt;p&gt;&lt;strong&gt;8.png&lt;/strong&gt; &lt;em class=&quot;xg1&quot;&gt;(33.33 KB, 下载次数: 47)&lt;/em&gt;&lt;/p&gt;&amp;#13;
&lt;p&gt;&amp;#13;
&lt;a href=&quot;http://www.52im.net/forum.php?mod=attachment&amp;amp;aid=MTM3NTB8MjU1NzU5MDl8MTY2NDc1Nzk0MnwwfDQwNDQ%3D&amp;amp;nothumb=yes&quot; target=&quot;_blank&quot;&gt;下载附件&lt;/a&gt;&amp;#13;
&amp;#13;
 &lt;a href=&quot;http://www.52im.net/&quot; id=&quot;savephoto_13750&quot; url=&quot;home.php?mod=spacecp&amp;amp;ac=album&amp;amp;op=saveforumphoto&amp;amp;aid=13750&amp;amp;handlekey=savephoto_13750&quot;&gt;保存到相册&lt;/a&gt;&amp;#13;
&amp;#13;
&lt;/p&gt;&amp;#13;
&amp;#13;
&lt;p class=&quot;xg1 y&quot;&gt;&lt;span title=&quot;2022-09-23 13:02&quot;&gt;10 天前&lt;/span&gt; 上传&lt;/p&gt;&amp;#13;
&amp;#13;
&lt;/div&gt;&amp;#13;
&lt;p class=&quot;tip_horn&quot;/&gt;&amp;#13;
&lt;/div&gt;&amp;#13;
&amp;#13;
&lt;/ignore_js_op&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
可以看到有一个 app.asar 文件。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;strong&gt;这个文件用 asar 解压后可以看到有以下内容：&lt;/strong&gt;&lt;br/&gt;&amp;#13;
&amp;#13;
&lt;ignore_js_op&gt;&amp;#13;
&amp;#13;
&lt;img id=&quot;aimg_13751&quot; aid=&quot;13751&quot; src=&quot;http://www.52im.net/static/image/common/none.gif&quot; zoomfile=&quot;data/attachment/forum/202209/23/130244naqz22tthhc6cq22.png&quot; file=&quot;data/attachment/forum/202209/23/130244naqz22tthhc6cq22.png&quot; class=&quot;zoom&quot; inpost=&quot;1&quot; alt=&quot;IM跨平台技术学习(三)：vivo的Electron技术栈选型、全方位实践总结_9.png&quot; title=&quot;IM跨平台技术学习(三)：vivo的Electron技术栈选型、全方位实践总结_9.png&quot;/&gt;&amp;#13;
&amp;#13;
&lt;div class=&quot;tip tip_4 aimg_tip&quot; id=&quot;aimg_13751_menu&quot; disautofocus=&quot;true&quot;&gt;&amp;#13;
&lt;div class=&quot;xs0&quot;&gt;&amp;#13;
&lt;p&gt;&lt;strong&gt;9.png&lt;/strong&gt; &lt;em class=&quot;xg1&quot;&gt;(13.84 KB, 下载次数: 40)&lt;/em&gt;&lt;/p&gt;&amp;#13;
&lt;p&gt;&amp;#13;
&lt;a href=&quot;http://www.52im.net/forum.php?mod=attachment&amp;amp;aid=MTM3NTF8OWFlZDFjMmV8MTY2NDc1Nzk0MnwwfDQwNDQ%3D&amp;amp;nothumb=yes&quot; target=&quot;_blank&quot;&gt;下载附件&lt;/a&gt;&amp;#13;
&amp;#13;
 &lt;a href=&quot;http://www.52im.net/&quot; id=&quot;savephoto_13751&quot; url=&quot;home.php?mod=spacecp&amp;amp;ac=album&amp;amp;op=saveforumphoto&amp;amp;aid=13751&amp;amp;handlekey=savephoto_13751&quot;&gt;保存到相册&lt;/a&gt;&amp;#13;
&amp;#13;
&lt;/p&gt;&amp;#13;
&amp;#13;
&lt;p class=&quot;xg1 y&quot;&gt;&lt;span title=&quot;2022-09-23 13:02&quot;&gt;10 天前&lt;/span&gt; 上传&lt;/p&gt;&amp;#13;
&amp;#13;
&lt;/div&gt;&amp;#13;
&lt;p class=&quot;tip_horn&quot;/&gt;&amp;#13;
&lt;/div&gt;&amp;#13;
&amp;#13;
&lt;/ignore_js_op&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
可以看出 asar 中的文件，就是我们构建后的项目代码，从图中可以看到有 &lt;font&gt;node_modules&lt;/font&gt; 目录， 这是因为在 electron 构建机制中，会自动把 dependencies 的依赖全部打到 asar 中。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;strong&gt;结合上述分析，我们的优化措施有以下4点：&lt;/strong&gt;&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;ul&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;1）&lt;/strong&gt;&lt;/i&gt;将 web 端构建所需的依赖全部放到 devDependencies 中，只将在 electron 端需要的依赖放到 dependencies；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;2）&lt;/strong&gt;&lt;/i&gt;将和生产无关的代码和文件从构建中剔除；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;3）&lt;/strong&gt;&lt;/i&gt;对跨平台使用的二进制文件，如 ffmpeg 进行按需构建（上文按需构建已介绍）；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;4）&lt;/strong&gt;&lt;/i&gt;对 node_modules 进行清理精简。&lt;br/&gt;&amp;#13;
&lt;/li&gt;&lt;/ul&gt;&lt;br/&gt;&amp;#13;
&lt;strong&gt;这里提下第&lt;i&gt;&lt;strong&gt; 4）&lt;/strong&gt;&lt;/i&gt; 点，如何对 node_modules 进行清理精简呢？&lt;/strong&gt;&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;strong&gt;如果是 yarn 安装的依赖：&lt;/strong&gt;我们可以在根目录使用下面命令进行精简：&lt;br/&gt;&amp;#13;
&lt;div&gt;&lt;pre class=&quot;brush: bash; gutter: true&quot;&gt;yarn autoclean -I&amp;#13;
yarn autoclean -F&lt;/pre&gt;&lt;/div&gt;&lt;br/&gt;&amp;#13;
&lt;strong&gt;如果是 pnpm 安装的依赖：&lt;/strong&gt;第&lt;i&gt;&lt;strong&gt; 4）&lt;/strong&gt;&lt;/i&gt;点应该不起作用了。我在项目中使用 yarn 安装依赖，然后执行上述命令后，发现打包体积减少了 6M ， 虽然不多，但也还可以。&lt;br/&gt;&amp;#13;
&lt;h2 class=&quot;dc_h2&quot;&gt;6、版本更新实践&lt;/h2&gt;&lt;br/&gt;&amp;#13;
&lt;h3 class=&quot;dc_h3&quot;&gt;&lt;span&gt;6.1&lt;/span&gt;全量更新&lt;/h3&gt;&lt;br/&gt;&amp;#13;
全量更新就是通过下载最新的包或者 zip 文件，进行软件更新，需要替换所有的文件。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;strong&gt;整体设计流程图如下：&lt;/strong&gt;&lt;br/&gt;&amp;#13;
&amp;#13;
&lt;ignore_js_op&gt;&amp;#13;
&amp;#13;
&lt;img id=&quot;aimg_13752&quot; aid=&quot;13752&quot; src=&quot;http://www.52im.net/static/image/common/none.gif&quot; zoomfile=&quot;data/attachment/forum/202209/23/130252bm0ta2d0k2wwnq2x.png&quot; file=&quot;data/attachment/forum/202209/23/130252bm0ta2d0k2wwnq2x.png&quot; class=&quot;zoom&quot; inpost=&quot;1&quot; alt=&quot;IM跨平台技术学习(三)：vivo的Electron技术栈选型、全方位实践总结_10.png&quot; title=&quot;IM跨平台技术学习(三)：vivo的Electron技术栈选型、全方位实践总结_10.png&quot;/&gt;&amp;#13;
&amp;#13;
&lt;div class=&quot;tip tip_4 aimg_tip&quot; id=&quot;aimg_13752_menu&quot; disautofocus=&quot;true&quot;&gt;&amp;#13;
&lt;div class=&quot;xs0&quot;&gt;&amp;#13;
&lt;p&gt;&lt;strong&gt;10.png&lt;/strong&gt; &lt;em class=&quot;xg1&quot;&gt;(24.29 KB, 下载次数: 42)&lt;/em&gt;&lt;/p&gt;&amp;#13;
&lt;p&gt;&amp;#13;
&lt;a href=&quot;http://www.52im.net/forum.php?mod=attachment&amp;amp;aid=MTM3NTJ8NDI5ZGYxYTF8MTY2NDc1Nzk0MnwwfDQwNDQ%3D&amp;amp;nothumb=yes&quot; target=&quot;_blank&quot;&gt;下载附件&lt;/a&gt;&amp;#13;
&amp;#13;
 &lt;a href=&quot;http://www.52im.net/&quot; id=&quot;savephoto_13752&quot; url=&quot;home.php?mod=spacecp&amp;amp;ac=album&amp;amp;op=saveforumphoto&amp;amp;aid=13752&amp;amp;handlekey=savephoto_13752&quot;&gt;保存到相册&lt;/a&gt;&amp;#13;
&amp;#13;
&lt;/p&gt;&amp;#13;
&amp;#13;
&lt;p class=&quot;xg1 y&quot;&gt;&lt;span title=&quot;2022-09-23 13:02&quot;&gt;10 天前&lt;/span&gt; 上传&lt;/p&gt;&amp;#13;
&amp;#13;
&lt;/div&gt;&amp;#13;
&lt;p class=&quot;tip_horn&quot;/&gt;&amp;#13;
&lt;/div&gt;&amp;#13;
&amp;#13;
&lt;/ignore_js_op&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;strong&gt;按照流程图去实现，我们需要做以下事情：&lt;/strong&gt;&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;ul&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;1）&lt;/strong&gt;&lt;/i&gt;开发服务端接口，用来返回应用最新版本信息；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;2）&lt;/strong&gt;&lt;/i&gt;渲染进程使用 axios 等工具请求接口，获取最新版本信息；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;3）&lt;/strong&gt;&lt;/i&gt;封装更新逻辑，用来对接口返回的版本信息进行综合比较，判断是否更新；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;4）&lt;/strong&gt;&lt;/i&gt;通过 ipc 通信将更新信息传递给主进程；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;5）&lt;/strong&gt;&lt;/i&gt;主进程通过 electron-updater 进行全量更新；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;6）&lt;/strong&gt;&lt;/i&gt;将更新信息通过 ipc 推送给渲染进程；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;7）&lt;/strong&gt;&lt;/i&gt;渲染进程向用户展示更新信息，若更新成功，则弹出弹窗告诉用户重启应用，完成软件更新。&lt;br/&gt;&amp;#13;
&lt;/li&gt;&lt;/ul&gt;&lt;br/&gt;&amp;#13;
&lt;h3 class=&quot;dc_h3&quot;&gt;&lt;span&gt;6.2&lt;/span&gt;增量更新&lt;/h3&gt;&lt;br/&gt;&amp;#13;
增量更新是通过拉取最新的渲染层打包文件，覆盖之前的渲染层代码，完成软件更新，此方案只需替换渲染层代码，无需替换所有文件。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&amp;#13;
&lt;ignore_js_op&gt;&amp;#13;
&amp;#13;
&lt;img id=&quot;aimg_13753&quot; aid=&quot;13753&quot; src=&quot;http://www.52im.net/static/image/common/none.gif&quot; zoomfile=&quot;data/attachment/forum/202209/23/130300dk47oko0q46klyr4.png&quot; file=&quot;data/attachment/forum/202209/23/130300dk47oko0q46klyr4.png&quot; class=&quot;zoom&quot; inpost=&quot;1&quot; alt=&quot;IM跨平台技术学习(三)：vivo的Electron技术栈选型、全方位实践总结_11.png&quot; title=&quot;IM跨平台技术学习(三)：vivo的Electron技术栈选型、全方位实践总结_11.png&quot;/&gt;&amp;#13;
&amp;#13;
&lt;div class=&quot;tip tip_4 aimg_tip&quot; id=&quot;aimg_13753_menu&quot; disautofocus=&quot;true&quot;&gt;&amp;#13;
&lt;div class=&quot;xs0&quot;&gt;&amp;#13;
&lt;p&gt;&lt;strong&gt;11.png&lt;/strong&gt; &lt;em class=&quot;xg1&quot;&gt;(27.7 KB, 下载次数: 41)&lt;/em&gt;&lt;/p&gt;&amp;#13;
&lt;p&gt;&amp;#13;
&lt;a href=&quot;http://www.52im.net/forum.php?mod=attachment&amp;amp;aid=MTM3NTN8YTI2YjJjMjd8MTY2NDc1Nzk0MnwwfDQwNDQ%3D&amp;amp;nothumb=yes&quot; target=&quot;_blank&quot;&gt;下载附件&lt;/a&gt;&amp;#13;
&amp;#13;
 &lt;a href=&quot;http://www.52im.net/&quot; id=&quot;savephoto_13753&quot; url=&quot;home.php?mod=spacecp&amp;amp;ac=album&amp;amp;op=saveforumphoto&amp;amp;aid=13753&amp;amp;handlekey=savephoto_13753&quot;&gt;保存到相册&lt;/a&gt;&amp;#13;
&amp;#13;
&lt;/p&gt;&amp;#13;
&amp;#13;
&lt;p class=&quot;xg1 y&quot;&gt;&lt;span title=&quot;2022-09-23 13:03&quot;&gt;10 天前&lt;/span&gt; 上传&lt;/p&gt;&amp;#13;
&amp;#13;
&lt;/div&gt;&amp;#13;
&lt;p class=&quot;tip_horn&quot;/&gt;&amp;#13;
&lt;/div&gt;&amp;#13;
&amp;#13;
&lt;/ignore_js_op&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;strong&gt;按照流程图去实现，我们需要做以下事情：&lt;/strong&gt;&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;ul&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;1）&lt;/strong&gt;&lt;/i&gt;渲染进程定时通知主进程检测更新；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;2）&lt;/strong&gt;&lt;/i&gt;主进程检测更新；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;3）&lt;/strong&gt;&lt;/i&gt;需要更新，则拉取线上最新包；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;4）&lt;/strong&gt;&lt;/i&gt;删除旧版本包，复制线上最新包，完成增量更新；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;5）&lt;/strong&gt;&lt;/i&gt;通知渲染进程，提示用户重启应用完成更新。&lt;br/&gt;&amp;#13;
&lt;/li&gt;&lt;/ul&gt;&lt;br/&gt;&amp;#13;
全量更新和增量更新各有优势，&lt;strong&gt;多数情况下，采用增量更新来提高用户更新体验，同时使用全量更新作为兜底更新方案&lt;/strong&gt;。&lt;br/&gt;&amp;#13;
&lt;h2 class=&quot;dc_h2&quot;&gt;7、性能优化实践&lt;/h2&gt;&lt;br/&gt;&amp;#13;
打包构建优化在上节内容中已经详细介绍过了，这里不再介绍，下面将介绍我们对“启动时优化”和“运行时优化”的实践。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;h3 class=&quot;dc_h3&quot;&gt;&lt;span&gt;7.1&lt;/span&gt;启动时优化&lt;/h3&gt;&lt;br/&gt;&amp;#13;
&lt;strong&gt;主要从以下几个方面着手：&lt;/strong&gt;&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;ul&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;1）&lt;/strong&gt;&lt;/i&gt;使用 v8-compile-cache 缓存编译代码；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;2）&lt;/strong&gt;&lt;/i&gt;优先加载核心功能，非核心功能动态加载；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;3）&lt;/strong&gt;&lt;/i&gt;使用多进程，多线程技术；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;4）&lt;/strong&gt;&lt;/i&gt;采用 asar 打包：会加快启动速度；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;5）&lt;/strong&gt;&lt;/i&gt;增加视觉过渡：loading + 骨架屏。&lt;br/&gt;&amp;#13;
&lt;/li&gt;&lt;/ul&gt;&lt;br/&gt;&amp;#13;
&lt;font&gt;&lt;i&gt;&lt;strong&gt;7.1.1）&lt;/strong&gt;&lt;/i&gt;使用 v8-compile-cache 缓存编译代码：&lt;/font&gt;&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;strong&gt;使用 V8 缓存数据，为什么要这么做呢？&lt;/strong&gt;&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
因为 electorn 使用 V8 引擎运行 js ， V8 运行 js 时，需要先进行解析和编译，再执行代码。其中，解析和编译过程消耗时间多，经常导致性能瓶颈。而 V8 缓存功能，可以将编译后的字节码缓存起来，省去下一次解析、编译的时间。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
主要使用 v8-compile-cache 来缓存编译的代码，做法很简单：&lt;strong&gt;在需要缓存的地方加一行&lt;/strong&gt;。&lt;br/&gt;&amp;#13;
&lt;div&gt;&lt;pre class=&quot;brush: javascript; gutter: true&quot;&gt;require(&#x27;v8-compile-cache&#x27;)&lt;/pre&gt;&lt;/div&gt;&lt;br/&gt;&amp;#13;
&lt;strong&gt;其他使用方法请查看此链接文档 ：&lt;/strong&gt;&lt;a href=&quot;https://www.npmjs.com/package/v8-compile-cache&quot; target=&quot;_blank&quot;&gt;https://www.npmjs.com/package/v8-compile-cache&lt;/a&gt;&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;font&gt;&lt;i&gt;&lt;strong&gt;7.1.2）&lt;/strong&gt;&lt;/i&gt;优先加载核心功能，非核心功能动态加载：&lt;/font&gt;&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;strong&gt;伪代码如下：&lt;/strong&gt;&lt;br/&gt;&amp;#13;
&lt;div&gt;&lt;pre class=&quot;brush: javascript; gutter: true&quot;&gt;export function share() {&amp;#13;
  const kun = require(&#x27;kun&#x27;)&amp;#13;
  kun()&amp;#13;
}&lt;/pre&gt;&lt;/div&gt;&lt;br/&gt;&amp;#13;
&lt;h3 class=&quot;dc_h3&quot;&gt;&lt;span&gt;7.2&lt;/span&gt;运行时优化&lt;/h3&gt;&lt;br/&gt;&amp;#13;
&lt;strong&gt;主要从以下几个方面着手：&lt;/strong&gt;&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;ul&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;1）&lt;/strong&gt;&lt;/i&gt;对渲染进程 进行 Web 性能优化；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;2）&lt;/strong&gt;&lt;/i&gt;对主进程进行轻量瘦身。&lt;br/&gt;&amp;#13;
&lt;/li&gt;&lt;/ul&gt;&lt;br/&gt;&amp;#13;
&lt;font&gt;&lt;i&gt;&lt;strong&gt;7.2.1）&lt;/strong&gt;&lt;/i&gt;对渲染进程 进行 Web 性能优化：&lt;/font&gt;&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;strong&gt;用一个思维导图来完整阐述如何进行 Web 性能优化，如下图所示：&lt;/strong&gt;&lt;br/&gt;&amp;#13;
&amp;#13;
&lt;ignore_js_op&gt;&amp;#13;
&amp;#13;
&lt;img id=&quot;aimg_13754&quot; aid=&quot;13754&quot; src=&quot;http://www.52im.net/static/image/common/none.gif&quot; zoomfile=&quot;data/attachment/forum/202209/23/130308bxaqar3xmmcq600v.png&quot; file=&quot;data/attachment/forum/202209/23/130308bxaqar3xmmcq600v.png&quot; class=&quot;zoom&quot; inpost=&quot;1&quot; alt=&quot;IM跨平台技术学习(三)：vivo的Electron技术栈选型、全方位实践总结_12.png&quot; title=&quot;IM跨平台技术学习(三)：vivo的Electron技术栈选型、全方位实践总结_12.png&quot;/&gt;&amp;#13;
&amp;#13;
&lt;div class=&quot;tip tip_4 aimg_tip&quot; id=&quot;aimg_13754_menu&quot; disautofocus=&quot;true&quot;&gt;&amp;#13;
&lt;div class=&quot;xs0&quot;&gt;&amp;#13;
&lt;p&gt;&lt;strong&gt;12.png&lt;/strong&gt; &lt;em class=&quot;xg1&quot;&gt;(92.28 KB, 下载次数: 44)&lt;/em&gt;&lt;/p&gt;&amp;#13;
&lt;p&gt;&amp;#13;
&lt;a href=&quot;http://www.52im.net/forum.php?mod=attachment&amp;amp;aid=MTM3NTR8ZjM4N2NjNmZ8MTY2NDc1Nzk0MnwwfDQwNDQ%3D&amp;amp;nothumb=yes&quot; target=&quot;_blank&quot;&gt;下载附件&lt;/a&gt;&amp;#13;
&amp;#13;
 &lt;a href=&quot;http://www.52im.net/&quot; id=&quot;savephoto_13754&quot; url=&quot;home.php?mod=spacecp&amp;amp;ac=album&amp;amp;op=saveforumphoto&amp;amp;aid=13754&amp;amp;handlekey=savephoto_13754&quot;&gt;保存到相册&lt;/a&gt;&amp;#13;
&amp;#13;
&lt;/p&gt;&amp;#13;
&amp;#13;
&lt;p class=&quot;xg1 y&quot;&gt;&lt;span title=&quot;2022-09-23 13:03&quot;&gt;10 天前&lt;/span&gt; 上传&lt;/p&gt;&amp;#13;
&amp;#13;
&lt;/div&gt;&amp;#13;
&lt;p class=&quot;tip_horn&quot;/&gt;&amp;#13;
&lt;/div&gt;&amp;#13;
&amp;#13;
&lt;/ignore_js_op&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
上图基本包含了性能优化的核心关键点和内容，大家可以以此作为参考，去做性能优化。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;font&gt;&lt;i&gt;&lt;strong&gt;7.2.2）&lt;/strong&gt;&lt;/i&gt;对主进程进行轻量瘦身：&lt;/font&gt;&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
核心方案就是将运行时耗时、计算量大的功能交给新开的 node 进程去执行处理。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;strong&gt;伪代码如下：&lt;/strong&gt;&lt;br/&gt;&amp;#13;
&lt;div&gt;&lt;pre class=&quot;brush: javascript; gutter: true&quot;&gt;const { fork } = require(&#x27;child_process&#x27;)&amp;#13;
let { app } = require(&#x27;electron&#x27;)&amp;#13;
&amp;#13;
function createProcess(socketName) {&amp;#13;
  process = fork(`xxxx/server.js`, [&amp;#13;
    &#x27;--subprocess&#x27;,&amp;#13;
    app.getVersion(),&amp;#13;
    socketName&amp;#13;
  ])&amp;#13;
}&amp;#13;
&amp;#13;
const initApp = async () =&amp;gt; {&amp;#13;
  // 其他初始化代码...&amp;#13;
  let socket = await findSocket()&amp;#13;
  createProcess(socket)&amp;#13;
}&amp;#13;
&amp;#13;
app.on(&#x27;ready&#x27;, initApp)&lt;/pre&gt;&lt;/div&gt;&lt;br/&gt;&amp;#13;
通过以上代码，将耗时、计算量大的功能，放在&lt;font&gt; server.js&lt;/font&gt; ，然后再 fork 到新开 node 进程中进行处理。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
至此，性能优化实践就介绍完了。&lt;br/&gt;&amp;#13;
&lt;h2 class=&quot;dc_h2&quot;&gt;8、质量保障实践&lt;/h2&gt;&lt;br/&gt;&amp;#13;
&lt;h3 class=&quot;dc_h3&quot;&gt;&lt;span&gt;8.1&lt;/span&gt;概述&lt;/h3&gt;&lt;br/&gt;&amp;#13;
&lt;strong&gt;质量保障的全流程措施如下图所示：&lt;/strong&gt;&lt;br/&gt;&amp;#13;
&amp;#13;
&lt;ignore_js_op&gt;&amp;#13;
&amp;#13;
&lt;img id=&quot;aimg_13755&quot; aid=&quot;13755&quot; src=&quot;http://www.52im.net/static/image/common/none.gif&quot; zoomfile=&quot;data/attachment/forum/202209/23/130317us404quuiwwttny0.png&quot; file=&quot;data/attachment/forum/202209/23/130317us404quuiwwttny0.png&quot; class=&quot;zoom&quot; inpost=&quot;1&quot; alt=&quot;IM跨平台技术学习(三)：vivo的Electron技术栈选型、全方位实践总结_13.png&quot; title=&quot;IM跨平台技术学习(三)：vivo的Electron技术栈选型、全方位实践总结_13.png&quot;/&gt;&amp;#13;
&amp;#13;
&lt;div class=&quot;tip tip_4 aimg_tip&quot; id=&quot;aimg_13755_menu&quot; disautofocus=&quot;true&quot;&gt;&amp;#13;
&lt;div class=&quot;xs0&quot;&gt;&amp;#13;
&lt;p&gt;&lt;strong&gt;13.png&lt;/strong&gt; &lt;em class=&quot;xg1&quot;&gt;(31.88 KB, 下载次数: 41)&lt;/em&gt;&lt;/p&gt;&amp;#13;
&lt;p&gt;&amp;#13;
&lt;a href=&quot;http://www.52im.net/forum.php?mod=attachment&amp;amp;aid=MTM3NTV8YjY4YjRkMmN8MTY2NDc1Nzk0MnwwfDQwNDQ%3D&amp;amp;nothumb=yes&quot; target=&quot;_blank&quot;&gt;下载附件&lt;/a&gt;&amp;#13;
&amp;#13;
 &lt;a href=&quot;http://www.52im.net/&quot; id=&quot;savephoto_13755&quot; url=&quot;home.php?mod=spacecp&amp;amp;ac=album&amp;amp;op=saveforumphoto&amp;amp;aid=13755&amp;amp;handlekey=savephoto_13755&quot;&gt;保存到相册&lt;/a&gt;&amp;#13;
&amp;#13;
&lt;/p&gt;&amp;#13;
&amp;#13;
&lt;p class=&quot;xg1 y&quot;&gt;&lt;span title=&quot;2022-09-23 13:03&quot;&gt;10 天前&lt;/span&gt; 上传&lt;/p&gt;&amp;#13;
&amp;#13;
&lt;/div&gt;&amp;#13;
&lt;p class=&quot;tip_horn&quot;/&gt;&amp;#13;
&lt;/div&gt;&amp;#13;
&amp;#13;
&lt;/ignore_js_op&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;strong&gt;本节主要从以下3个方面分享：&lt;/strong&gt;&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
下面将会依次介绍上述内容。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;h3 class=&quot;dc_h3&quot;&gt;&lt;span&gt;8.2&lt;/span&gt;自动化测试&lt;/h3&gt;&lt;br/&gt;&amp;#13;
&lt;strong&gt;自动化测试是什么？&lt;/strong&gt;&lt;br/&gt;&amp;#13;
&amp;#13;
&lt;ignore_js_op&gt;&amp;#13;
&amp;#13;
&lt;img id=&quot;aimg_13756&quot; aid=&quot;13756&quot; src=&quot;http://www.52im.net/static/image/common/none.gif&quot; zoomfile=&quot;data/attachment/forum/202209/23/130324oilullcaccuypt6l.png&quot; file=&quot;data/attachment/forum/202209/23/130324oilullcaccuypt6l.png&quot; class=&quot;zoom&quot; inpost=&quot;1&quot; alt=&quot;IM跨平台技术学习(三)：vivo的Electron技术栈选型、全方位实践总结_14.png&quot; title=&quot;IM跨平台技术学习(三)：vivo的Electron技术栈选型、全方位实践总结_14.png&quot;/&gt;&amp;#13;
&amp;#13;
&lt;div class=&quot;tip tip_4 aimg_tip&quot; id=&quot;aimg_13756_menu&quot; disautofocus=&quot;true&quot;&gt;&amp;#13;
&lt;div class=&quot;xs0&quot;&gt;&amp;#13;
&lt;p&gt;&lt;strong&gt;14.png&lt;/strong&gt; &lt;em class=&quot;xg1&quot;&gt;(24.48 KB, 下载次数: 40)&lt;/em&gt;&lt;/p&gt;&amp;#13;
&lt;p&gt;&amp;#13;
&lt;a href=&quot;http://www.52im.net/forum.php?mod=attachment&amp;amp;aid=MTM3NTZ8Nzg4MmZjNWJ8MTY2NDc1Nzk0MnwwfDQwNDQ%3D&amp;amp;nothumb=yes&quot; target=&quot;_blank&quot;&gt;下载附件&lt;/a&gt;&amp;#13;
&amp;#13;
 &lt;a href=&quot;http://www.52im.net/&quot; id=&quot;savephoto_13756&quot; url=&quot;home.php?mod=spacecp&amp;amp;ac=album&amp;amp;op=saveforumphoto&amp;amp;aid=13756&amp;amp;handlekey=savephoto_13756&quot;&gt;保存到相册&lt;/a&gt;&amp;#13;
&amp;#13;
&lt;/p&gt;&amp;#13;
&amp;#13;
&lt;p class=&quot;xg1 y&quot;&gt;&lt;span title=&quot;2022-09-23 13:03&quot;&gt;10 天前&lt;/span&gt; 上传&lt;/p&gt;&amp;#13;
&amp;#13;
&lt;/div&gt;&amp;#13;
&lt;p class=&quot;tip_horn&quot;/&gt;&amp;#13;
&lt;/div&gt;&amp;#13;
&amp;#13;
&lt;/ignore_js_op&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
上图是做自动化测试一个完整步骤，大家可以看图领会。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
自动化测试主要分为 单元测试、集成测试、端到端测试。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;strong&gt;三者关系如下图所示：&lt;/strong&gt;&lt;br/&gt;&amp;#13;
&amp;#13;
&lt;ignore_js_op&gt;&amp;#13;
&amp;#13;
&lt;img id=&quot;aimg_13757&quot; aid=&quot;13757&quot; src=&quot;http://www.52im.net/static/image/common/none.gif&quot; zoomfile=&quot;data/attachment/forum/202209/23/130330umgeir49r8jeak9e.png&quot; file=&quot;data/attachment/forum/202209/23/130330umgeir49r8jeak9e.png&quot; class=&quot;zoom&quot; inpost=&quot;1&quot; alt=&quot;IM跨平台技术学习(三)：vivo的Electron技术栈选型、全方位实践总结_15.png&quot; title=&quot;IM跨平台技术学习(三)：vivo的Electron技术栈选型、全方位实践总结_15.png&quot;/&gt;&amp;#13;
&amp;#13;
&lt;div class=&quot;tip tip_4 aimg_tip&quot; id=&quot;aimg_13757_menu&quot; disautofocus=&quot;true&quot;&gt;&amp;#13;
&lt;div class=&quot;xs0&quot;&gt;&amp;#13;
&lt;p&gt;&lt;strong&gt;15.png&lt;/strong&gt; &lt;em class=&quot;xg1&quot;&gt;(14.45 KB, 下载次数: 46)&lt;/em&gt;&lt;/p&gt;&amp;#13;
&lt;p&gt;&amp;#13;
&lt;a href=&quot;http://www.52im.net/forum.php?mod=attachment&amp;amp;aid=MTM3NTd8ZDMzMjM4ZDF8MTY2NDc1Nzk0MnwwfDQwNDQ%3D&amp;amp;nothumb=yes&quot; target=&quot;_blank&quot;&gt;下载附件&lt;/a&gt;&amp;#13;
&amp;#13;
 &lt;a href=&quot;http://www.52im.net/&quot; id=&quot;savephoto_13757&quot; url=&quot;home.php?mod=spacecp&amp;amp;ac=album&amp;amp;op=saveforumphoto&amp;amp;aid=13757&amp;amp;handlekey=savephoto_13757&quot;&gt;保存到相册&lt;/a&gt;&amp;#13;
&amp;#13;
&lt;/p&gt;&amp;#13;
&amp;#13;
&lt;p class=&quot;xg1 y&quot;&gt;&lt;span title=&quot;2022-09-23 13:03&quot;&gt;10 天前&lt;/span&gt; 上传&lt;/p&gt;&amp;#13;
&amp;#13;
&lt;/div&gt;&amp;#13;
&lt;p class=&quot;tip_horn&quot;/&gt;&amp;#13;
&lt;/div&gt;&amp;#13;
&amp;#13;
&lt;/ignore_js_op&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;strong&gt;一般情况下：&lt;/strong&gt;作为软件工程师，我们做到一定的单元测试就可以了。而且从我目前经验来说，如果是写业务性质的项目，基本上不会编写测试相关的代码。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
自动化测试主要是用来编写库、框架、组件等需要作为单独个体提供给他人使用的。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
electron 的测试工具推荐 &lt;a href=&quot;https://github.com/vitest-dev/vitest&quot; target=&quot;_blank&quot;&gt;vitest&lt;/a&gt; 、 spectron 。具体用法参考官网文档即可，没什么特别的技巧。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;h3 class=&quot;dc_h3&quot;&gt;&lt;span&gt;8.3&lt;/span&gt;崩溃监控&lt;/h3&gt;&lt;br/&gt;&amp;#13;
对于 GUI 软件，尤其桌面端软件来说，崩溃率非常重要，因此需要对崩溃进行监控。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;strong&gt;崩溃监控原理如下图所示：&lt;/strong&gt;&lt;br/&gt;&amp;#13;
&amp;#13;
&lt;ignore_js_op&gt;&amp;#13;
&amp;#13;
&lt;img id=&quot;aimg_13758&quot; aid=&quot;13758&quot; src=&quot;http://www.52im.net/static/image/common/none.gif&quot; zoomfile=&quot;data/attachment/forum/202209/23/130336elptzlqg2ltqeb7u.png&quot; file=&quot;data/attachment/forum/202209/23/130336elptzlqg2ltqeb7u.png&quot; class=&quot;zoom&quot; inpost=&quot;1&quot; alt=&quot;IM跨平台技术学习(三)：vivo的Electron技术栈选型、全方位实践总结_16.png&quot; title=&quot;IM跨平台技术学习(三)：vivo的Electron技术栈选型、全方位实践总结_16.png&quot;/&gt;&amp;#13;
&amp;#13;
&lt;div class=&quot;tip tip_4 aimg_tip&quot; id=&quot;aimg_13758_menu&quot; disautofocus=&quot;true&quot;&gt;&amp;#13;
&lt;div class=&quot;xs0&quot;&gt;&amp;#13;
&lt;p&gt;&lt;strong&gt;16.png&lt;/strong&gt; &lt;em class=&quot;xg1&quot;&gt;(32.67 KB, 下载次数: 39)&lt;/em&gt;&lt;/p&gt;&amp;#13;
&lt;p&gt;&amp;#13;
&lt;a href=&quot;http://www.52im.net/forum.php?mod=attachment&amp;amp;aid=MTM3NTh8ZmI0YmY1ZTd8MTY2NDc1Nzk0MnwwfDQwNDQ%3D&amp;amp;nothumb=yes&quot; target=&quot;_blank&quot;&gt;下载附件&lt;/a&gt;&amp;#13;
&amp;#13;
 &lt;a href=&quot;http://www.52im.net/&quot; id=&quot;savephoto_13758&quot; url=&quot;home.php?mod=spacecp&amp;amp;ac=album&amp;amp;op=saveforumphoto&amp;amp;aid=13758&amp;amp;handlekey=savephoto_13758&quot;&gt;保存到相册&lt;/a&gt;&amp;#13;
&amp;#13;
&lt;/p&gt;&amp;#13;
&amp;#13;
&lt;p class=&quot;xg1 y&quot;&gt;&lt;span title=&quot;2022-09-23 13:03&quot;&gt;10 天前&lt;/span&gt; 上传&lt;/p&gt;&amp;#13;
&amp;#13;
&lt;/div&gt;&amp;#13;
&lt;p class=&quot;tip_horn&quot;/&gt;&amp;#13;
&lt;/div&gt;&amp;#13;
&amp;#13;
&lt;/ignore_js_op&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;strong&gt;崩溃监控技巧：&lt;/strong&gt;&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;ul&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;1）&lt;/strong&gt;&lt;/i&gt;渲染进程崩溃后，提示用户重新加载；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;2）&lt;/strong&gt;&lt;/i&gt;通过 preload 统一初始化崩溃监控；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;3）&lt;/strong&gt;&lt;/i&gt;主进程、渲染进程通过 process.crash() 进行模拟崩溃；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;4）&lt;/strong&gt;&lt;/i&gt;对崩溃日志进行收集分析。&lt;br/&gt;&amp;#13;
&lt;/li&gt;&lt;/ul&gt;&lt;br/&gt;&amp;#13;
崩溃监控做好后，如果发生崩溃，该如何治理崩溃呢？&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;h3 class=&quot;dc_h3&quot;&gt;&lt;span&gt;8.4&lt;/span&gt;崩溃治理&lt;/h3&gt;&lt;br/&gt;&amp;#13;
&lt;strong&gt;崩溃治理难点：&lt;/strong&gt;&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;ul&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;1）&lt;/strong&gt;&lt;/i&gt;定位出错栈困难：Native 错误栈，无操作上下文；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;2）&lt;/strong&gt;&lt;/i&gt;调试门槛高：C++ 、 IIdb/GDB；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;3）&lt;/strong&gt;&lt;/i&gt;运行环境复杂：机器型号、系统、其他软件。&lt;br/&gt;&amp;#13;
&lt;/li&gt;&lt;/ul&gt;&lt;br/&gt;&amp;#13;
&lt;strong&gt;崩溃治理技巧：&lt;/strong&gt;&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;ul&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;1）&lt;/strong&gt;&lt;/i&gt;及时升级 electron；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;2）&lt;/strong&gt;&lt;/i&gt;用户操作日志和系统信息；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;3）&lt;/strong&gt;&lt;/i&gt;复现和定位问题比治理重要；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;4）&lt;/strong&gt;&lt;/i&gt;把问题交给社区解决，社区响应快；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;5）&lt;/strong&gt;&lt;/i&gt;善于用 devtool 分析和治理内存问题。&lt;br/&gt;&amp;#13;
&lt;/li&gt;&lt;/ul&gt;&lt;br/&gt;&amp;#13;
&lt;h2 class=&quot;dc_h2head&quot;&gt;9、安全性实践&lt;/h2&gt;&lt;br/&gt;&amp;#13;
&lt;h3 class=&quot;dc_h3&quot;&gt;&lt;span&gt;9.1&lt;/span&gt;概述&lt;/h3&gt;&lt;br/&gt;&amp;#13;
俗话说的好，安全大于天，保证 electron 应用的安全也是一项重要的事情。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;strong&gt;本章节将安全分为以下 5 个方面：&lt;/strong&gt;&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;ul&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;1）&lt;/strong&gt;&lt;/i&gt;源码泄漏；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;2）&lt;/strong&gt;&lt;/i&gt;asar；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;3）&lt;/strong&gt;&lt;/i&gt;源码保护；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;4）&lt;/strong&gt;&lt;/i&gt;应用安全；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;5）&lt;/strong&gt;&lt;/i&gt;编码安全。&lt;br/&gt;&amp;#13;
&lt;/li&gt;&lt;/ul&gt;&lt;br/&gt;&amp;#13;
下面将会依次介绍上述内容。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;h3 class=&quot;dc_h3&quot;&gt;&lt;span&gt;9.2&lt;/span&gt;源码泄漏&lt;/h3&gt;&lt;br/&gt;&amp;#13;
目前 electron 在源码安全做的不好，官方只用 asar 做了一下很没用的源码保护，&lt;strong&gt;到底有多没用呢？&lt;/strong&gt;&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
你只需要下载 asar 工具，然后对 asar 文件进行解压就可以得到里面的源码了。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;strong&gt;如下图所示：&lt;/strong&gt;&lt;br/&gt;&amp;#13;
&amp;#13;
&lt;ignore_js_op&gt;&amp;#13;
&amp;#13;
&lt;img id=&quot;aimg_13759&quot; aid=&quot;13759&quot; src=&quot;http://www.52im.net/static/image/common/none.gif&quot; zoomfile=&quot;data/attachment/forum/202209/23/130344wqqqe8wqq6n16wdq.png&quot; file=&quot;data/attachment/forum/202209/23/130344wqqqe8wqq6n16wdq.png&quot; class=&quot;zoom&quot; inpost=&quot;1&quot; alt=&quot;IM跨平台技术学习(三)：vivo的Electron技术栈选型、全方位实践总结_17.png&quot; title=&quot;IM跨平台技术学习(三)：vivo的Electron技术栈选型、全方位实践总结_17.png&quot;/&gt;&amp;#13;
&amp;#13;
&lt;div class=&quot;tip tip_4 aimg_tip&quot; id=&quot;aimg_13759_menu&quot; disautofocus=&quot;true&quot;&gt;&amp;#13;
&lt;div class=&quot;xs0&quot;&gt;&amp;#13;
&lt;p&gt;&lt;strong&gt;17.png&lt;/strong&gt; &lt;em class=&quot;xg1&quot;&gt;(100.65 KB, 下载次数: 42)&lt;/em&gt;&lt;/p&gt;&amp;#13;
&lt;p&gt;&amp;#13;
&lt;a href=&quot;http://www.52im.net/forum.php?mod=attachment&amp;amp;aid=MTM3NTl8ODg1MWI4ZDZ8MTY2NDc1Nzk0MnwwfDQwNDQ%3D&amp;amp;nothumb=yes&quot; target=&quot;_blank&quot;&gt;下载附件&lt;/a&gt;&amp;#13;
&amp;#13;
 &lt;a href=&quot;http://www.52im.net/&quot; id=&quot;savephoto_13759&quot; url=&quot;home.php?mod=spacecp&amp;amp;ac=album&amp;amp;op=saveforumphoto&amp;amp;aid=13759&amp;amp;handlekey=savephoto_13759&quot;&gt;保存到相册&lt;/a&gt;&amp;#13;
&amp;#13;
&lt;/p&gt;&amp;#13;
&amp;#13;
&lt;p class=&quot;xg1 y&quot;&gt;&lt;span title=&quot;2022-09-23 13:03&quot;&gt;10 天前&lt;/span&gt; 上传&lt;/p&gt;&amp;#13;
&amp;#13;
&lt;/div&gt;&amp;#13;
&lt;p class=&quot;tip_horn&quot;/&gt;&amp;#13;
&lt;/div&gt;&amp;#13;
&amp;#13;
&lt;/ignore_js_op&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
通过图中操作即可看到语雀应用的源码。&lt;strong&gt;上面提到的 asar 是什么呢？&lt;/strong&gt;&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;h3 class=&quot;dc_h3&quot;&gt;&lt;span&gt;9.3&lt;/span&gt;asar介绍&lt;/h3&gt;&lt;br/&gt;&amp;#13;
asar 是一种将多个文件合并成一个文件的类 tar 风格的归档格式。Electron 可以无需解压整个文件，即可从其中读取任意文件内容。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;strong&gt;可以直接看 electron 源码，都是 ts 代码，容易阅读，源码如下图所示：&lt;/strong&gt;&lt;br/&gt;&amp;#13;
&amp;#13;
&lt;ignore_js_op&gt;&amp;#13;
&amp;#13;
&lt;img id=&quot;aimg_13760&quot; aid=&quot;13760&quot; src=&quot;http://www.52im.net/static/image/common/none.gif&quot; zoomfile=&quot;data/attachment/forum/202209/23/130350ssgsztbvgfbghh8s.png&quot; file=&quot;data/attachment/forum/202209/23/130350ssgsztbvgfbghh8s.png&quot; class=&quot;zoom&quot; inpost=&quot;1&quot; alt=&quot;IM跨平台技术学习(三)：vivo的Electron技术栈选型、全方位实践总结_18.png&quot; title=&quot;IM跨平台技术学习(三)：vivo的Electron技术栈选型、全方位实践总结_18.png&quot;/&gt;&amp;#13;
&amp;#13;
&lt;div class=&quot;tip tip_4 aimg_tip&quot; id=&quot;aimg_13760_menu&quot; disautofocus=&quot;true&quot;&gt;&amp;#13;
&lt;div class=&quot;xs0&quot;&gt;&amp;#13;
&lt;p&gt;&lt;strong&gt;18.png&lt;/strong&gt; &lt;em class=&quot;xg1&quot;&gt;(81.38 KB, 下载次数: 44)&lt;/em&gt;&lt;/p&gt;&amp;#13;
&lt;p&gt;&amp;#13;
&lt;a href=&quot;http://www.52im.net/forum.php?mod=attachment&amp;amp;aid=MTM3NjB8MDk3ZjJlMTh8MTY2NDc1Nzk0MnwwfDQwNDQ%3D&amp;amp;nothumb=yes&quot; target=&quot;_blank&quot;&gt;下载附件&lt;/a&gt;&amp;#13;
&amp;#13;
 &lt;a href=&quot;http://www.52im.net/&quot; id=&quot;savephoto_13760&quot; url=&quot;home.php?mod=spacecp&amp;amp;ac=album&amp;amp;op=saveforumphoto&amp;amp;aid=13760&amp;amp;handlekey=savephoto_13760&quot;&gt;保存到相册&lt;/a&gt;&amp;#13;
&amp;#13;
&lt;/p&gt;&amp;#13;
&amp;#13;
&lt;p class=&quot;xg1 y&quot;&gt;&lt;span title=&quot;2022-09-23 13:03&quot;&gt;10 天前&lt;/span&gt; 上传&lt;/p&gt;&amp;#13;
&amp;#13;
&lt;/div&gt;&amp;#13;
&lt;p class=&quot;tip_horn&quot;/&gt;&amp;#13;
&lt;/div&gt;&amp;#13;
&amp;#13;
&lt;/ignore_js_op&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;h3 class=&quot;dc_h3&quot;&gt;&lt;span&gt;9.4&lt;/span&gt;源码保护&lt;/h3&gt;&lt;br/&gt;&amp;#13;
避免源码泄漏，按照从低到高的源码安全，可以分为几个程度。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;strong&gt;具体如下：&lt;/strong&gt;&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;ul&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;1）&lt;/strong&gt;&lt;/i&gt;asar；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;2）&lt;/strong&gt;&lt;/i&gt;代码混淆；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;3）&lt;/strong&gt;&lt;/i&gt;WebAssembly；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;4）&lt;/strong&gt;&lt;/i&gt;Language bindings。&lt;br/&gt;&amp;#13;
&lt;/li&gt;&lt;/ul&gt;&lt;br/&gt;&amp;#13;
&lt;strong&gt;其中：&lt;/strong&gt;Language bindings 是最高的源码安全措施，其实使用 C++ 或 Rust 代码来编写 electron 应用代码，通过将 C++ 或 Rust 代码编译成二进制代码后，破译的难度会变高。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
这里我说下如何使用 Rust 去编写 electron 应用代码。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;strong&gt;方案是：使用 napi-rs 作为工具去编写，如下图所示：&lt;/strong&gt;&lt;br/&gt;&amp;#13;
&amp;#13;
&lt;ignore_js_op&gt;&amp;#13;
&amp;#13;
&lt;img id=&quot;aimg_13761&quot; aid=&quot;13761&quot; src=&quot;http://www.52im.net/static/image/common/none.gif&quot; zoomfile=&quot;data/attachment/forum/202209/23/130357t1h1gshe9rkanh57.png&quot; file=&quot;data/attachment/forum/202209/23/130357t1h1gshe9rkanh57.png&quot; class=&quot;zoom&quot; inpost=&quot;1&quot; alt=&quot;IM跨平台技术学习(三)：vivo的Electron技术栈选型、全方位实践总结_19.png&quot; title=&quot;IM跨平台技术学习(三)：vivo的Electron技术栈选型、全方位实践总结_19.png&quot;/&gt;&amp;#13;
&amp;#13;
&lt;div class=&quot;tip tip_4 aimg_tip&quot; id=&quot;aimg_13761_menu&quot; disautofocus=&quot;true&quot;&gt;&amp;#13;
&lt;div class=&quot;xs0&quot;&gt;&amp;#13;
&lt;p&gt;&lt;strong&gt;19.png&lt;/strong&gt; &lt;em class=&quot;xg1&quot;&gt;(44.97 KB, 下载次数: 40)&lt;/em&gt;&lt;/p&gt;&amp;#13;
&lt;p&gt;&amp;#13;
&lt;a href=&quot;http://www.52im.net/forum.php?mod=attachment&amp;amp;aid=MTM3NjF8ZmMwZGQ1NTl8MTY2NDc1Nzk0MnwwfDQwNDQ%3D&amp;amp;nothumb=yes&quot; target=&quot;_blank&quot;&gt;下载附件&lt;/a&gt;&amp;#13;
&amp;#13;
 &lt;a href=&quot;http://www.52im.net/&quot; id=&quot;savephoto_13761&quot; url=&quot;home.php?mod=spacecp&amp;amp;ac=album&amp;amp;op=saveforumphoto&amp;amp;aid=13761&amp;amp;handlekey=savephoto_13761&quot;&gt;保存到相册&lt;/a&gt;&amp;#13;
&amp;#13;
&lt;/p&gt;&amp;#13;
&amp;#13;
&lt;p class=&quot;xg1 y&quot;&gt;&lt;span title=&quot;2022-09-23 13:03&quot;&gt;10 天前&lt;/span&gt; 上传&lt;/p&gt;&amp;#13;
&amp;#13;
&lt;/div&gt;&amp;#13;
&lt;p class=&quot;tip_horn&quot;/&gt;&amp;#13;
&lt;/div&gt;&amp;#13;
&amp;#13;
&lt;/ignore_js_op&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
我们采用 pnpm-workspace 去管理 Rust 代码，使用 napi-rs 。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;strong&gt;比如我们写一个 sum 函数，rs代码如下：&lt;/strong&gt;&lt;br/&gt;&amp;#13;
&lt;div&gt;&lt;pre class=&quot;brush: javascript; gutter: true&quot;&gt;fn sum(a: f64, b: f64) -&amp;gt; f64 {&amp;#13;
  a + b&amp;#13;
}&lt;/pre&gt;&lt;/div&gt;&lt;br/&gt;&amp;#13;
&lt;strong&gt;此时我们加上 napi 装饰代码，如下所示：&lt;/strong&gt;&lt;br/&gt;&amp;#13;
&lt;div&gt;&lt;pre class=&quot;brush: javascript; gutter: true&quot;&gt;use napi_derive::napi;&amp;#13;
&amp;#13;
#[napi]&amp;#13;
fn sum(a: f64, b: f64) -&amp;gt; f64 {&amp;#13;
  a + b&amp;#13;
}&amp;#13;
&lt;/pre&gt;&lt;/div&gt;&lt;br/&gt;&amp;#13;
在通过 napi-cli 将上述代码编译成 node 可以调用的二进制代码。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;strong&gt;编译后，在electron使用上述代码，如下所示：&lt;/strong&gt;&lt;br/&gt;&amp;#13;
&lt;div&gt;&lt;pre class=&quot;brush: javascript; gutter: true&quot;&gt;import { sum as rsSum } from &#x27;@rebebuca/native&#x27;&amp;#13;
// 输出 7&amp;#13;
console.log(rsSum(2, 5))&lt;/pre&gt;&lt;/div&gt;&lt;br/&gt;&amp;#13;
napi-rs 的使用请阅读官方文档，地址是：&lt;a href=&quot;https://napi.rs/&quot; target=&quot;_blank&quot;&gt;https://napi.rs/&lt;/a&gt;&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
至此，language bindings 的阐述就完成了。我们通过这种方式，可以完成对重要功能的源码保护。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;h3 class=&quot;dc_h3&quot;&gt;&lt;span&gt;9.5&lt;/span&gt;应用安全&lt;/h3&gt;&lt;br/&gt;&amp;#13;
目前熟知的一个安全问题是克隆攻击，此问题的主流解决方案是将用户认证信息和应用设备指纹进行绑定。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;strong&gt;整体流程如如下图所示：&lt;/strong&gt;&lt;br/&gt;&amp;#13;
&amp;#13;
&lt;ignore_js_op&gt;&amp;#13;
&amp;#13;
&lt;img id=&quot;aimg_13762&quot; aid=&quot;13762&quot; src=&quot;http://www.52im.net/static/image/common/none.gif&quot; zoomfile=&quot;data/attachment/forum/202209/23/130404k4m02z4dmgqd62ir.jpg&quot; file=&quot;data/attachment/forum/202209/23/130404k4m02z4dmgqd62ir.jpg&quot; class=&quot;zoom&quot; inpost=&quot;1&quot; alt=&quot;IM跨平台技术学习(三)：vivo的Electron技术栈选型、全方位实践总结_20.jpg&quot; title=&quot;IM跨平台技术学习(三)：vivo的Electron技术栈选型、全方位实践总结_20.jpg&quot;/&gt;&amp;#13;
&amp;#13;
&lt;div class=&quot;tip tip_4 aimg_tip&quot; id=&quot;aimg_13762_menu&quot; disautofocus=&quot;true&quot;&gt;&amp;#13;
&lt;div class=&quot;xs0&quot;&gt;&amp;#13;
&lt;p&gt;&lt;strong&gt;20.jpg&lt;/strong&gt; &lt;em class=&quot;xg1&quot;&gt;(22.16 KB, 下载次数: 43)&lt;/em&gt;&lt;/p&gt;&amp;#13;
&lt;p&gt;&amp;#13;
&lt;a href=&quot;http://www.52im.net/forum.php?mod=attachment&amp;amp;aid=MTM3NjJ8YTU1N2U5ZGV8MTY2NDc1Nzk0MnwwfDQwNDQ%3D&amp;amp;nothumb=yes&quot; target=&quot;_blank&quot;&gt;下载附件&lt;/a&gt;&amp;#13;
&amp;#13;
 &lt;a href=&quot;http://www.52im.net/&quot; id=&quot;savephoto_13762&quot; url=&quot;home.php?mod=spacecp&amp;amp;ac=album&amp;amp;op=saveforumphoto&amp;amp;aid=13762&amp;amp;handlekey=savephoto_13762&quot;&gt;保存到相册&lt;/a&gt;&amp;#13;
&amp;#13;
&lt;/p&gt;&amp;#13;
&amp;#13;
&lt;p class=&quot;xg1 y&quot;&gt;&lt;span title=&quot;2022-09-23 13:04&quot;&gt;10 天前&lt;/span&gt; 上传&lt;/p&gt;&amp;#13;
&amp;#13;
&lt;/div&gt;&amp;#13;
&lt;p class=&quot;tip_horn&quot;/&gt;&amp;#13;
&lt;/div&gt;&amp;#13;
&amp;#13;
&lt;/ignore_js_op&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;strong&gt;如上图所示：&lt;/strong&gt;&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;ul&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;1）&lt;/strong&gt;&lt;/i&gt;应用设备指纹生成：可以用上文阐述的 napi-rs 方案去实现；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;2）&lt;/strong&gt;&lt;/i&gt;用户认证信息和设备指纹绑定：使用服务端去实现。&lt;br/&gt;&amp;#13;
&lt;/li&gt;&lt;/ul&gt;&lt;br/&gt;&amp;#13;
&lt;h3 class=&quot;dc_h3&quot;&gt;&lt;span&gt;9.6&lt;/span&gt;编码安全&lt;/h3&gt;&lt;br/&gt;&amp;#13;
&lt;strong&gt;主要有以下措施：&lt;/strong&gt;&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
&lt;ul&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;1）&lt;/strong&gt;&lt;/i&gt;常用的 web 安全，比如防 xss 、 csrf；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;2）&lt;/strong&gt;&lt;/i&gt;设置 node 可执行环境；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;3）&lt;/strong&gt;&lt;/i&gt;窗体开启安全选项；&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;strong&gt;4）&lt;/strong&gt;&lt;/i&gt;限制链接跳转。&lt;br/&gt;&amp;#13;
&lt;/li&gt;&lt;/ul&gt;&lt;br/&gt;&amp;#13;
以上具体细节不再介绍，自行搜索上述方案。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
除此之外，还有个官方推荐的最佳安全实践，有空可以看看，地址如下：&lt;a href=&quot;https://www.electronjs.org/docs/latest/tutorial/security&quot; target=&quot;_blank&quot;&gt;https://www.electronjs.org/docs/latest/tutorial/security&lt;/a&gt;。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
至此，安全性这块实践就介绍完了。&lt;br/&gt;&amp;#13;
&lt;h2 class=&quot;dc_h2&quot;&gt;10、本文小结&lt;/h2&gt;&lt;br/&gt;&amp;#13;
本文介绍了我们对跨系统桌面端技术的调研、确定技术选型，以及用 electron 开发过程中，总结的实践经验及踩坑填坑过程，如构建、性能优化、质量保障、安全等。&lt;br/&gt;&amp;#13;
&lt;br/&gt;&amp;#13;
希望对读者在开发跨端桌面应用过程中有所帮助，文章难免有不足和错误的地方，欢迎读者评论。&lt;br/&gt;&amp;#13;
&lt;h2 class=&quot;dc_h2&quot;&gt;11、参考资料&lt;/h2&gt;&lt;br/&gt;&amp;#13;
[1] &lt;a href=&quot;https://www.electronjs.org/zh/docs/latest&quot; target=&quot;_blank&quot;&gt;Electron官方开发者手册&lt;/a&gt;&lt;br/&gt;&amp;#13;
[2] &lt;a href=&quot;http://www.52im.net/thread-2616-1-1.html&quot; target=&quot;_blank&quot;&gt;快速了解新一代跨平台桌面技术——Electron&lt;/a&gt;》&lt;br/&gt;&amp;#13;
[3] &lt;a href=&quot;http://www.52im.net/thread-4039-1-1.html&quot; target=&quot;_blank&quot;&gt;Electron初体验(快速开始、跨进程通信、打包、踩坑等)&lt;/a&gt;&lt;br/&gt;&amp;#13;
[4] &lt;a href=&quot;https://blog.csdn.net/qq_39235055/article/details/111995373&quot; target=&quot;_blank&quot;&gt;Electron 基础入门 简单明了，看完啥都懂了&lt;/a&gt;&lt;br/&gt;&amp;#13;
[5] &lt;a href=&quot;http://www.52im.net/thread-3651-1-1.html&quot; target=&quot;_blank&quot;&gt;网易云信Web端IM的聊天消息全文检索技术实践&lt;/a&gt;&lt;/td&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>95add56bbae3838e81000c4cdd281369</guid>
<title>干货｜十分钟读懂字节跳动的 Doris 湖仓分析实践</title>
<link>https://toutiao.io/k/ovsrlzz</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                           autoTypeSetting24psection&amp;#10;                          &quot; id=&quot;js_content&quot;&gt;&lt;p data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.34629629629629627&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jC2t9Zib67r1mQp3by2Sld0NkibWF5Vsz1LQe1HgegziaWJguUStKR8snibKMUNeVjHNicJqPIDDJs7osvkLGjRnoBg/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;blockquote mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;span&gt;本文为字节跳动数据平台研发工程师在DataFunSummit大会演讲实录，&lt;/span&gt;&lt;strong&gt;&lt;span&gt;关注字节跳动数据平台微信公众号，回复【0929】，领取本次分享PPT。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.4255555555555556&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jC2t9Zib67r0iaam0Y3z0iaV3ak0jib0hf2JTr0JNSbZIGpzpan9EAkNsKP0JBoQgRsqDpnxbFYcezyOwCDBPQQicLA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;900&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;文 | 军令 &lt;/span&gt;&lt;/strong&gt;&lt;span&gt;来自字节跳动数据平台E-MapReduce团队&lt;/span&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.24390243902439024&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ib745vqibLBGIeAicnHiag9GCzTYjeicic5IWPqfyjLajDuwtJdNCAnCgcolqY8ROaE5CsEXR5zbjCU9aVl3WfkZpnDw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;82&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;h1&gt;&lt;strong&gt;&lt;span&gt;Doris简介&lt;/span&gt;&lt;/strong&gt;&lt;/h1&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;Doris是一种MPP架构的分析型数据库，主要面向多维分析，数据报表，用户画像分析等场景。自带分析引擎和存储引擎，支持向量化执行引擎，不依赖其他组件，兼容MySQL协议。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;Apache Doris具备以下几个特点：&lt;/span&gt;&lt;/section&gt;&lt;ul start=&quot;1&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;良好的架构设计，&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;支持高并发低延时的查询服务，支持高吞吐量的交互式分析。多FE均可对外提供服务，并发增加时，线性扩充FE和BE即可支持高并发的查询请求。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul start=&quot;1&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;支持批量数据load和流式数据load，&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;支持数据更新。支持Update/Delete语法，unique/aggregate数据模型，支持动态更新数据，实时更新聚合指标。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul start=&quot;1&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;提供了高可用，&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;容错处理，高扩展的企业级特性。FE Leader错误异常，FE Follower秒级切换为新Leader继续对外提供服务。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul start=&quot;1&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;支持聚合表和物化视图。&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;多种数据模型，支持aggregate，replace等多种数据模型，支持创建rollup表，支持创建物化视图。rollup表和物化视图支持动态更新，无需用户手动处理。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul start=&quot;1&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;MySQL协议兼容，&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;支持直接使用MySQL客户端连接，非常易用的数据应用对接。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;span&gt;Doris由Frontend（以下简称FE）和Backend（以下简称BE）组成，其中FE负责接受用户请求，编译，优化，分发执行计划，元数据管理，BE节点的管理等功能，BE负责执行由FE下发的执行计划，存储和管理用户数据。&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5808383233532934&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jC2t9Zib67r0iaam0Y3z0iaV3ak0jib0hf2JhvSwrTyGcHY7syAmmt7iaQgcTkrd1k1WSsLtdm6XicfibZoy7Ex3t5JfA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1336&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.24390243902439024&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ib745vqibLBGIeAicnHiag9GCzTYjeicic5IWPqfyjLajDuwtJdNCAnCgcolqY8ROaE5CsEXR5zbjCU9aVl3WfkZpnDw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;82&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;h1&gt;&lt;strong&gt;&lt;span&gt;数据湖格式Hudi简介&lt;/span&gt;&lt;/strong&gt;&lt;/h1&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;Hudi是下一代流式数据湖平台，为数据湖提供了表格式管理的能力，提供事务，ACID，MVCC，数据更新删除，增量数据读取等功能。支持Spark，Flink，Presto，Trino等多种计算引擎。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.48359375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jC2t9Zib67r0iaam0Y3z0iaV3ak0jib0hf2JobR98Po2MvEibrhS28OkPIystMuTFJn9Zib1oibrOURkgQFA7ETArlJ7g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Hudi根据数据更新时行为不同分为两种表类型：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.45546875&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jC2t9Zib67r0iaam0Y3z0iaV3ak0jib0hf2JicjwmCAkm98mpfhxu7fxQiaSm2dtdRQlo54QH5FapFOWQ1mmIFIs52eQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;针对Hudi的两种表格式，存在3种不同的查询类型：&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.5125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jC2t9Zib67r0iaam0Y3z0iaV3ak0jib0hf2JJAz7EvUibJcYcronuG4s7tXCl23g615teKkDXT6VWqYsRibqb2k9aNOA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.24390243902439024&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ib745vqibLBGIeAicnHiag9GCzTYjeicic5IWPqfyjLajDuwtJdNCAnCgcolqY8ROaE5CsEXR5zbjCU9aVl3WfkZpnDw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;82&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;h1&gt;&lt;strong&gt;&lt;span&gt;Doris分析Hudi数据的技术背景&lt;/span&gt;&lt;/strong&gt;&lt;/h1&gt;&lt;h1&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/h1&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;在数仓业务中，随着业务对数据实时性的要求越来越高，T+1数仓业务逐渐往小时级，分钟级，甚至秒级演进。实时数仓的应用也越来越广，也经历了多个发展阶段。目前存在着多种解决方案。&lt;/span&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;h2/&gt;&lt;p&gt;&lt;span&gt;Lambda架构&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;Lambda将数据处理流分为在线分析和离线分析分为两条不同的处理路径，两条路径互相独立，互不影响。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;离线分析处理T+1数据，使用Hive/Spark处理大数据量，不可变数据，数据一般存储在HDFS等系统上。如果遇到数据更新，需要overwrite整张表或整个分区，成本比较高。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在线分析处理实时数据，使用Flink/Spark Streaming处理流式数据，分析处理秒级或分钟级流式数据，数据保存在Kafka或定期（分钟级）保存到HDFS中。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;该套方案存在以下缺点：&lt;/span&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;h2/&gt;&lt;p&gt;&lt;span&gt;Kappa架构&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;随着在线分析业务越来越多，Lambda架构的弊端就越来越明显，增加一个指标需要在线离线分别开发，维护困难，离线指标可能和在线指标对不齐，部署复杂，组件繁多。于是Kappa架构应运而生。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Kappa架构使用一套架构处理在线数据和离线数据，使用同一套引擎同时处理在线和离线数据，数据存储在消息队列上。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Kappa架构也有一定的局限：&lt;/span&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;h2/&gt;&lt;p&gt;&lt;span&gt;基于数据湖的实时数仓&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;针对Lambda架构和Kappa架构的缺陷，业界基于数据湖开发了Iceberg, Hudi, DeltaLake这些数据湖技术，使得数仓支持ACID, Update/Delete, 数据Time Travel, Schema Evolution等特性，使得数仓的时效性从小时级提升到分钟级，数据更新也支持部分更新，大大提高了数据更新的性能。兼具流式计算的实时性和批计算的吞吐量，支持的是近实时的场景。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;以上方案中其中基于数据湖的应用最广，但数据湖模式无法支撑更高的秒级实时性，也无法直接对外提供数据服务，需要搭建其他的数据服务组件，系统较为复杂。基于此背景下，部分业务开始使用Doris来承接，业务数据分析师需要对Doris与Hudi中的数据进行联邦分析，此外在Doris对外提供数据服务时既要能查询Doris中数据，也要能加速查询离线业务中的数据湖数据，因此我们开发了Doris访问数据湖Hudi中数据的特性。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.24390243902439024&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ib745vqibLBGIeAicnHiag9GCzTYjeicic5IWPqfyjLajDuwtJdNCAnCgcolqY8ROaE5CsEXR5zbjCU9aVl3WfkZpnDw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;82&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;h1&gt;&lt;span&gt;&lt;strong&gt;Doris分析Hudi数据的设计原理&lt;/strong&gt;&lt;/span&gt;&lt;/h1&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;基于以上背景，我们设计了Apache Doris中查询数据湖格式Hudi数据，因Hudi生态为java语言，而Apache Doris的执行节点BE为C++环境，而C++ 无法直接调用Hudi java SDK，针对这一点，我们有四种解决方案：&lt;/span&gt;&lt;/p&gt;&lt;ol start=&quot;1&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;实现Hudi C++ client，在BE中直接调用Hudi C++ client去读写Hudi表。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;span&gt;该方案需要完整实现一套Hudi C++ client，开发周期较长，后期Hudi行为变更需要同步修改Hudi C++ client，维护较为困难。&lt;/span&gt;&lt;/p&gt;&lt;ol start=&quot;2&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;BE通过thrift协议发送读写请求至Broker，由Broker调用Hudi java client读取Hudi表。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;span&gt;该方案需要在Broker中增加读写Hudi数据的功能，目前Broker定位仅为fs的操作接口，引入Hudi打破了Broker的定位。第二，数据需要在BE和Broker之间传输，性能较低。&lt;/span&gt;&lt;/p&gt;&lt;ol start=&quot;3&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;在BE中使用JNI创建JVM，加载Hudi java client去读写Hudi表。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;span&gt;该方案需要在BE进程中维护JVM，有JVM调用Hudi java client对Hudi进行读写。读写逻辑使用Hudi社区java实现，可以维护与社区同步；同时数据在同一个进程中进行处理，性能较高。但需要在BE维护一个JVM，管理较为复杂。&lt;/span&gt;&lt;/p&gt;&lt;ol start=&quot;4&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;使用BE arrow parquet c++ api读取hudi parquet base file，hudi表中的delta file暂不处理。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;span&gt;该方案可以由BE直接读取hudi表的parquet文件，性能最高。但当前不支持base file和delta file的合并读取，因此仅支持COW表Snapshot Queries和MOR表的Read Optimized Queries，不支持Incremental Queries。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;综上，我们选择方案四，第一期实现了COW表Snapshot Queries和MOR表的Read Optimized Queries，后面联合Hudi社区开发base file和delta file合并读取的C++接口。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.24390243902439024&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ib745vqibLBGIeAicnHiag9GCzTYjeicic5IWPqfyjLajDuwtJdNCAnCgcolqY8ROaE5CsEXR5zbjCU9aVl3WfkZpnDw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;82&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;h1&gt;&lt;strong&gt;&lt;span&gt;Doris分析Hudi数据的技术实现&lt;/span&gt;&lt;/strong&gt;&lt;/h1&gt;&lt;h1/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;Doris中查询分析Hudi外表使用步骤非常简单。&lt;/span&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;h2/&gt;&lt;p&gt;&lt;span&gt;创建Hudi外表&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;建表时指定engine为Hudi，同时指定Hudi外表的相关信息，如hive metastore uri，在hive metastore中的database和table名字等。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;建表仅仅在Doris的元数据中增加一张表，无任何数据移动。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;建表时支持指定全部或部分hudi schema，也支持不指定schema创建hudi外表。指定schema时必须与hiveMetaStore中hudi表的列名，类型一致。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Example：&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   CREATE TABLE example_db.t_hudi &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    ENGINE=HUDI&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    PROPERTIES (&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &quot;hudi.database&quot; = &quot;hudi_db&quot;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &quot;hudi.table&quot; = &quot;hudi_table&quot;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &quot;hudi.hive.metastore.uris&quot;  =  &quot;thrift://127.0.0.1:9083&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    );&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    CREATE TABLE example_db.t_hudi (&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    column1 int,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    column2 string)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    ENGINE=HUDI&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    PROPERTIES (&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &quot;hudi.database&quot; = &quot;hudi_db&quot;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &quot;hudi.table&quot; = &quot;hudi_table&quot;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &quot;hudi.hive.metastore.uris&quot;  =  &quot;thrift://127.0.0.1:9083&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    );&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;h2/&gt;&lt;p&gt;&lt;span&gt;查询Hudi外表&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.7404092071611253&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jC2t9Zib67r0iaam0Y3z0iaV3ak0jib0hf2Jg8uZJtrnNwcHwxqibKLPPj5zKBicHohueibswv1chsf3eEiaroBAoYavtg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1564&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.24390243902439024&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ib745vqibLBGIeAicnHiag9GCzTYjeicic5IWPqfyjLajDuwtJdNCAnCgcolqY8ROaE5CsEXR5zbjCU9aVl3WfkZpnDw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;82&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;h1&gt;&lt;span&gt;&lt;strong&gt;后期规划&lt;/strong&gt;&lt;/span&gt;&lt;/h1&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;目前Apche Doris查询Hudi表已合入社区，当前已支持COW表的Snapshot Query，支持MOR表的Read Optimized Query。对MOR表的Snapshot Query暂时还未支持，流式场景中的Incremental Query也没有支持。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;后续还有几项工作需要处理，我们和社区也在积极合作进行中：&lt;/span&gt;&lt;/p&gt;&lt;ol start=&quot;1&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;MOR表的Snapshot Query。MOR表实时读需要合并读取Data file与对应的Delta file，BE需要支持Delta file AVRO格式的读取，需要增加avro的native读取方式。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ol start=&quot;2&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;COW/MOR表的Incremental Query。支持实时业务中的增量读取。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;BE读取Hudi base file和delta file的native接口。目前BE读取Hudi数据时，仅能读取data file，使用的是parquet的C++ SDK。后期我们和联合Hudi社区提供Huid base file和delta file的C++/Rust等语言的读取接口，在Doris BE中直接使用native接口来查询Hudi数据。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ol start=&quot;3&quot; class=&quot;list-paddingleft-1&quot;/&gt;&lt;p&gt;&lt;span&gt;&lt;em&gt;&lt;span&gt;本文为字节跳动数据平台研发工程师在DataFunSummit大会演讲实录，&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;em&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;关注字节跳动数据平台微信公众号，回复【0929】，领取本次分享PPT。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;span&gt;&lt;p&gt;&lt;span&gt;产品介绍&lt;/span&gt;&lt;/p&gt;&lt;/span&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;火山引擎 E-MapReduce&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;支持构建开源Hadoop生态的企业级大数据分析系统，完全兼容开源，提供 Hadoop、Spark、Hive、Flink集成和管理，帮助用户轻松完成企业大数据平台的构建，降低运维门槛，快速形成大数据分析能力。&lt;/span&gt;&lt;strong&gt;&lt;span&gt;后台回复数字“3”了解产品&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;img class=&quot;rich_pages wxw-img __bg_gif&quot; data-ratio=&quot;1&quot; data-type=&quot;gif&quot; data-w=&quot;40&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/jC2t9Zib67r2rAVRBzMMF9nV9BqFPOhzHwu1XL92AFW8jK9zAQXmo5FcO2W6Ce3ld46owl9H8H1toPneEsh4mNA/640?wx_fmt=gif&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&quot;/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;点击&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;strong&gt;&lt;span&gt;阅读原文，&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;span&gt;&lt;strong&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;strong&gt;&lt;span&gt;立即跳&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;strong&gt;转火山引擎&lt;span&gt;E-MapReduce&lt;/span&gt;官网了&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;strong&gt;&lt;span&gt;解详情&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;strong&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.34629629629629627&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jC2t9Zib67r1mQp3by2Sld0NkibWF5Vsz1LQe1HgegziaWJguUStKR8snibKMUNeVjHNicJqPIDDJs7osvkLGjRnoBg/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-w=&quot;1080&quot;/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/div&gt;

          
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>f499b11fb1ab33aad79a45229cde7326</guid>
<title>日志记录的最佳实践</title>
<link>https://toutiao.io/k/0w9hsc7</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;entry-content&quot; itemprop=&quot;articleBody&quot;&gt;&amp;#13;
&lt;h3&gt;简介&lt;/h3&gt;
&lt;p&gt;日志（Log）是由系统在运行过程中产生的结构化或者非结构化的文字信息。通常情况，可以将其视为应用程序对某个事件（Event）的记录。日志通常可以帮助我们发现一些微服务架构系统的非预期或突发的行为。 Logging作为 Observability（可观察性，在IT和云计算中，它是根据系统生成的数据，例如日志、指标和数据链追踪等来衡量系统当前状态的能力）的重要组成部分，在我们的系统开发、维护中起到无法替代的作用。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://insights.thoughtworks.cn/wp-content/uploads/2022/09/one.png&quot; alt=&quot;Pillars of Observability&quot;/&gt;&lt;br/&gt;
Pillars of Observability&lt;/p&gt;
&lt;h3&gt;日志的重要性&lt;/h3&gt;
&lt;p&gt;要理解为什么日志在产品或者系统中扮演着重要的角色，我们必须了解它的价值。至少到现在，日志被应用最广泛的是&lt;strong&gt;报警、故障排除和业务数据可视化&lt;/strong&gt;。&lt;/p&gt;
&lt;h4&gt;报警&lt;/h4&gt;
&lt;p&gt;日志可以作为我们业务系统监控的重要数据来源；成熟的产品系统都有报警系统，如果系统中出现超过某个已定义的某个指标的问题，日志系统会自动将报警信息发送到通知平台，On-call 的人就可以根据报警信息定位解决问题了。&lt;/p&gt;
&lt;h4&gt;故障排除&lt;/h4&gt;
&lt;p&gt;这种情况非常普遍；想象一下你最近负责开发维护的系统被他人发现有问题，在你梳理完思路之后第一件事是干什么？肯定是查看系统信息验证自己的假设是否成立，这里打印在服务器上的日志就是最好的辅助信息。而作为程序员的我们，日志是我们最熟悉不过的解决问题的利器。 &lt;/p&gt;
&lt;h4&gt;业务数据可视化&lt;/h4&gt;
&lt;p&gt;很多公司可以利用存储在自己数据库里的生产环境的日志，结合相应的工具可以对业务进行业务数据可视化。这里最典型的代表是 Grafana 和 SumoLogic。&lt;/p&gt;
&lt;h3&gt;怎么做&lt;/h3&gt;
&lt;h4&gt;模板化&lt;/h4&gt;
&lt;p&gt;为了更好支持上面的各种情况，我们需要对我们的日志格式进行梳理，按照一定的规范来写日志，而不是随便写一句废话。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://insights.thoughtworks.cn/wp-content/uploads/2022/09/2-9.png&quot; alt=&quot;Log Format&quot;/&gt;&lt;br/&gt;
Log Format&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;基础版本&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对于日志，&lt;strong&gt;时间，日志级别，和日志信息&lt;/strong&gt;最为重要，所以一个合格的日志应该至少包含这些信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;高级版本&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在基础版的基础上，加入线程名，主机名，方法名，类名，方法对应的行数；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;线程名&lt;/strong&gt;：多数应用的用户都不是单一的，对于单实例的服务对同一个接口很多用户访问应用会将在不同的线程中执行，这时如果要区分对应用户的业务流程，那么通过线程名是最好的。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;主机名&lt;/strong&gt;：现在的应用大多部署在 Cloud 中，都是多实例的，所以在单节点的基础上，日志在多实例上就需要实例级别的区分，而主机名是最好的区分方式。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;方法名&lt;/strong&gt;：打印了日志的方法名，方便区分相同日志的出处。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;类名&lt;/strong&gt;：打印了日志的类名，方便快速定位业务流程。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;行数&lt;/strong&gt;：打印了日志的行数，方便快速定位日志的具体位置。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;格式化&lt;/h4&gt;
&lt;p&gt;为了提高日志的可读性，我们可以对日志进行修饰。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对日志级别、主机名和线程名前后加&lt;strong&gt;中括号&lt;/strong&gt;；&lt;/li&gt;
&lt;li&gt;对方法名所在的类名和行号加&lt;strong&gt;括号&lt;/strong&gt;，并在类名与行号中间用&lt;strong&gt;冒号&lt;/strong&gt;隔开；&lt;/li&gt;
&lt;li&gt;在行号和日志信息中间加入一个&lt;strong&gt;横线&lt;/strong&gt;来分隔；&lt;/li&gt;
&lt;li&gt;对于日志信息也可以进行特定的格式化
&lt;ul&gt;
&lt;li&gt;对于常规的请求（Request）、响应（Response）或者其他业务日志，可以在自定义信息和参数之间用&lt;strong&gt;下划线&lt;/strong&gt;分隔；多个参数之间用逗号分隔，当然参数也是可选的；&lt;/li&gt;
&lt;li&gt;对于错误信息格式化，也可以按照 &lt;strong&gt;Key：Value&lt;/strong&gt; 的形式进行组织。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;链式追踪&lt;/h4&gt;
&lt;p&gt;记录下了日志，如果只是一行行简单的文字说明，那是没有太大意义的。在复杂系统或业务操作频繁的系统中，会产生非常多的日志，在这种情况下，我们就得花时间去过滤出相关的日志。解决上面问题的最好办法是日志的&lt;strong&gt;链式追踪&lt;/strong&gt;；简单说就是，在每条日志中加入业务系统中的一个或者多个&lt;strong&gt;唯一&lt;/strong&gt;的 ID，这样在定位业务问题的时候可以通过这些唯一的 ID 和 其他条件（e.g. 时间）快速过滤出相关的日志。&lt;/p&gt;
&lt;h4&gt;按需记录日志&lt;/h4&gt;
&lt;h5&gt;日志级别&lt;/h5&gt;
&lt;p&gt;&lt;img src=&quot;https://insights.thoughtworks.cn/wp-content/uploads/2022/09/3-7.png&quot; alt=&quot;Log Level&quot;/&gt;&lt;br/&gt;
Log Level&lt;/p&gt;
&lt;p&gt;日志的输出都是分级别的，不同的场景需要打印不同级别的日志；以下是几个比较重要的日志级别。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Debug&lt;/strong&gt;: 记录技术细节，和一些帮助理解系统运行的日志；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Info&lt;/strong&gt;: 记录业务信息的日志；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Warn&lt;/strong&gt;: 非紧急且可控的可接受的错误信息；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Error&lt;/strong&gt;: 非期望的错误或者系统表现，通常是由系统bug或者环境问题导致。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;同时不是所有的日志都需要记录，我们要做到按需记录。下表是在不同的环境选择不同日志级别的推荐。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Environment&lt;/th&gt;
&lt;th&gt;Log Leave&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Dev&lt;/td&gt;
&lt;td&gt;Debug&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Test&lt;/td&gt;
&lt;td&gt;Debug&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;UAT&lt;/td&gt;
&lt;td&gt;Info&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Prod&lt;/td&gt;
&lt;td&gt;Info&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h5&gt;日志位置&lt;/h5&gt;
&lt;p&gt;有了日志级别，日志打印的位置也需要明确。一般情况下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;其他系统调用自有系统时需要在收到请求和完成请求时各打印一次日志；&lt;/li&gt;
&lt;li&gt;自有系统调用第三方系统的接口前和收到返回信息后各打印一次日志；&lt;/li&gt;
&lt;li&gt;在系统中任何有异常的地方需要打印日志；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;还有一种特殊情况是，像消息传递之类的系统，为了节省日志存储和减少查看干扰，大多时候我们不需要在收到消息后直接打印该消息，一般建议在收到消息后，如果系统处理有异常，在异常中将原始消息打印。&lt;/p&gt;
&lt;h3&gt;工具推荐&lt;/h3&gt;
&lt;p&gt;不同的编程语言有不同的日志工具；比较著名的是 Apache 的 &lt;a href=&quot;https://logging.apache.org/log4j&quot;&gt;Log4j&lt;/a&gt;, Log4j是高度可配置的，并可通过在运行时的外部文件配置。它根据记录的优先级别，并提供机制以指示记录信息到许多的目的地，诸如：数据库，文件，控制台，UNIX系统日志等；而且 log4j 已经被移植到了其他编程语言中了，如 Python 中的 &lt;a href=&quot;https://docs.python.org/3/library/logging.html&quot;&gt;logging&lt;/a&gt;, NodeJS 中的&lt;a href=&quot;https://www.npmjs.com/package/log4js&quot;&gt;log4js&lt;/a&gt;, Rust 中的&lt;a href=&quot;https://crates.io/crates/log4rs&quot;&gt;log4rs&lt;/a&gt;。&lt;/p&gt;
&lt;h3&gt;注意点&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;避免打印或记录任何敏感信息，包括但不限于各种PII，PCI信息，一定要记得遵守当地的各种法律法规，如中国的《个人信息保护法》（PILI），欧洲的一般数据保护条例GDPR等&lt;/li&gt;
&lt;li&gt;按需选择合适的日志级别和日志位置&lt;/li&gt;
&lt;li&gt;……&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;总结&lt;/h3&gt;
&lt;p&gt;好的日志不仅可以为程序开发提供便利，为故障排除提供最重要的辅助信息，更可以为业务或基础设施提供优化建议或数据统计。&lt;/p&gt;
&lt;h3&gt;参考材料&lt;/h3&gt;

&amp;#13;
&lt;/div&gt;&amp;#13;
&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>d86d25a263bd930b095c2a4da89c2cc3</guid>
<title>记一次 Web 字体优化</title>
<link>https://toutiao.io/k/uy40bbo</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;RichText ztext Post-RichText css-4em6pe&quot; options=&quot;[object Object]&quot; lazyloadimageprops=&quot;[object Object]&quot; usegifprops=&quot;[object Object]&quot;&gt;&lt;h2 data-first-child=&quot;&quot;&gt;背景&lt;/h2&gt;&lt;p data-pid=&quot;o4WH7dMm&quot;&gt;最近接手了一个新项目，在开发过程中，发现一个影响页面体验的小问题：首次加载页面时，页面上文字总是会慢于其他组件渲染，即从加载页面到字体完全展示会有一段空白期，时间跨度大约在 5s 左右。&lt;/p&gt;&lt;p data-pid=&quot;ZSStS3a8&quot;&gt;简单排查后，发现是这些文字使用了 &lt;code&gt;Alibaba-PuHuiTi-Medium.otf &lt;/code&gt; 三方字体，浏览器会等到该字体文件加载完成后再去渲染相关文字，而该字体文件体积有 6.6M 之大，首次加载比较缓慢会阻塞页面文字的渲染。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;font-face&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;Alibaba-PuHuiTi-Medium&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#x27;./Alibaba-PuHuiTi-Medium.otf&#x27;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#x27;truetype&#x27;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;h2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Alibaba-PuHuiTi-Medium&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2&gt;浏览器如何解析字体资源？&lt;/h2&gt;&lt;p data-pid=&quot;9ZZu-lNd&quot;&gt;以 chrome 浏览器为例，从加载到渲染字体资源总共分为 3 个阶段：&lt;/p&gt;&lt;p data-pid=&quot;M-GIlAAf&quot;&gt;1. 阻塞（block）阶段 &lt;/p&gt;&lt;p data-pid=&quot;g3VA95jG&quot;&gt;这是浏览器加载字体的第一阶段，字体加载完成前&lt;b&gt;默认使文字不可见&lt;/b&gt;，加载完成后则立即用该字体渲染文字，如果超过一定时间，字体还没加载完成，则立即进入到 swap 阶段。&lt;/p&gt;&lt;p data-pid=&quot;MsJjMKZ0&quot;&gt;2. 交换（swap）阶段&lt;/p&gt;&lt;p data-pid=&quot;Efwt81gN&quot;&gt;这是浏览器加载字体的第二阶段，字体加载完成前&lt;b&gt;默认采用后备字体渲染文字&lt;/b&gt;，加载完成后则立即用该字体渲染文字，如果超过一定时间，字体还没加载完成，则立即进入到 failure 阶段。&lt;/p&gt;&lt;p data-pid=&quot;0jxY5Y5Z&quot;&gt;3. 失败（failure）阶段&lt;/p&gt;&lt;p data-pid=&quot;yyPUPg_7&quot;&gt;这是浏览器加载字体的最后阶段，进入到该阶段时字体还没有加载完成，浏览器会视字体加载失败而直接使用后备字体渲染文字。&lt;/p&gt;&lt;h2&gt;如何加速展示文字？&lt;/h2&gt;&lt;ol&gt;&lt;li data-pid=&quot;-rL3zCi8&quot;&gt;减小字体资源体积&lt;/li&gt;&lt;/ol&gt;&lt;p data-pid=&quot;rQ2KQsAf&quot;&gt;作为静态资源，字体文件同样可以采用减少体积的做法来加快下载，常见的比如 gzip 压缩等，在我接手的项目中默认已经开启了 gzip 压缩，将 &lt;code&gt;Alibaba-PuHuiTi-Medium.otf&lt;/code&gt;压缩到了 5.2M，但是体积仍然不够小。&lt;/p&gt;&lt;p data-pid=&quot;WAIMvHZp&quot;&gt;另外一种做法是通过诸如&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.font-spider.org/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;字蛛&lt;/a&gt;、&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/ecomfe/fontmin&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;fontmin&lt;/a&gt; 等工具将字体文件中不需要的文字剔除，这种方案有个缺陷，就是需要提前知道项目中哪些文字会用到这些字体，对于动态生成的文字或者频繁变更的文字内容该方案并不适用。&lt;/p&gt;&lt;p data-pid=&quot;ad0k0_XV&quot;&gt;2. 文字预渲染&lt;/p&gt;&lt;p data-pid=&quot;LDcFOaf8&quot;&gt;在字体资源无法更精简的情况下，只能另辟蹊径，前面也提到了 chrome 浏览器加载和解析字体分为三个阶段：block、swap 和 failure。只有 block 和 swap 阶段会加载并正确渲染字体，其中 block 阶段在字体加载完成前用户是看不到具体文字的，而 swap 阶段则在加载完成前则能使用户看到用默认字体渲染的文字内容，我们可以通过控制 block 和 swap 阶段的时间来减少用户看到文字的等待时间，可以通过 &lt;code&gt;font-display&lt;/code&gt; 属性来控制。&lt;/p&gt;&lt;table data-draft-node=&quot;block&quot; data-draft-type=&quot;table&quot; data-size=&quot;normal&quot; data-row-style=&quot;normal&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;th&gt;font-display 取值&lt;/th&gt;&lt;th&gt;block 间隔&lt;/th&gt;&lt;th&gt;swap 间隔&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;auto，默认值等同于 block&lt;/td&gt;&lt;td&gt;3s&lt;/td&gt;&lt;td&gt;无限长&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;block&lt;/td&gt;&lt;td&gt;3s&lt;/td&gt;&lt;td&gt;无限长&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;swap&lt;/td&gt;&lt;td&gt;0s&lt;/td&gt;&lt;td&gt;无限长&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fallback&lt;/td&gt;&lt;td&gt;&amp;lt;100ms&lt;/td&gt;&lt;td&gt;3s&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;optional&lt;/td&gt;&lt;td&gt;&amp;lt;100ms&lt;/td&gt;&lt;td&gt;0s&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p data-pid=&quot;57yVqhJq&quot;&gt;可以通过 &lt;a href=&quot;https://link.zhihu.com/?target=https%3A//codepen.io/buyan302/pen/PozapqX&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;demo&lt;/a&gt; 直观感受下各取值的区别，通过分析 &lt;code&gt;font-display&lt;/code&gt; 的取值含义，我采用了 swap 模式：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;font-face&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;font-display&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;swap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;Alibaba-PuHuiTi-Medium&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#x27;./Alibaba-PuHuiTi-Medium.otf&#x27;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#x27;truetype&#x27;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;h2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Alibaba-PuHuiTi-Medium&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p data-pid=&quot;80zEk8f1&quot;&gt;3. 字体预加载&lt;/p&gt;&lt;p data-pid=&quot;NtnoBODj&quot;&gt;&lt;code&gt;font-display=swap&lt;/code&gt;的模式可以减少用户看到文字的等待时间，但是用户在打开页面后可能会看到文字内容从备用字体变为加载字体的‘闪烁’现象，要解决这个问题需要减少字体文件的加载时间，在字体加载时间不变的条件下，只能通过提前加载的方式提前准备好渲染要用的字体。实际上，定义了 &lt;code&gt;@font-face&lt;/code&gt; 并不能触发字体文件的下载，只有等浏览器解析到使用了该字体文件的 DOM 元素才会触发字体文件下载，是否能让浏览器提前加载字体文件呢？答案是通过 &lt;code&gt;preload&lt;/code&gt; 方式提前加载字体文件。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;preload&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/static/Alibaba-PuHuiTi-Medium.otf&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;as&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;font&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;font/otf&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;crossorigin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p data-pid=&quot;rDAXvOwo&quot;&gt;至此，用户首次打开该项目网页到文字呈现所需时间被优化到了 500ms 左右。当然，&lt;code&gt;preload&lt;/code&gt; 方式并不能保证浏览器在开始解析文字内容时就准备好了字体文件，它实际上是将文字解析 -&amp;gt; 加载字体的串行模式变成了并发，如果文字解析开始还没加载完成字体，则仍然会出现文字‘闪烁’现象。&lt;/p&gt;&lt;h2&gt;参考资料&lt;/h2&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://link.zhihu.com/?target=https%3A//developers.google.com/web/updates/2016/02/font-display&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-text=&quot;https://developers.google.com/web/updates/2016/02/font-display&quot; class=&quot;LinkCard new&quot;&gt;&lt;span class=&quot;LinkCard-contents&quot;&gt;&lt;span class=&quot;LinkCard-title loading&quot; data-text=&quot;true&quot;/&gt;&lt;span class=&quot;LinkCard-desc loading&quot;/&gt;&lt;/span&gt;&lt;span class=&quot;LinkCard-image LinkCard-image--default&quot;/&gt;&lt;/a&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://link.zhihu.com/?target=https%3A//juejin.im/post/6844903790580072462&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-text=&quot;CSS @font-face性能优化&quot; class=&quot;LinkCard new&quot;&gt;&lt;span class=&quot;LinkCard-contents&quot;&gt;&lt;span class=&quot;LinkCard-title loading&quot; data-text=&quot;true&quot;/&gt;&lt;span class=&quot;LinkCard-desc loading&quot;/&gt;&lt;/span&gt;&lt;span class=&quot;LinkCard-image LinkCard-image--default&quot;/&gt;&lt;/a&gt;&lt;p/&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>