<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>13ebed67da9871a0bfff5886a543de60</guid>
<title>这是我见过最好的微服务 SaaS 快速开发平台，功能完整，代码结构清晰</title>
<link>https://toutiao.io/k/rz9qoa6</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;pre mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;hr/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;最&lt;span&gt;近在&lt;/span&gt;逛网站的时候发现一个不错的开源项目，&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span&gt;这个项目目前收获了 &lt;/span&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;4.3K Star&lt;/span&gt;&lt;/span&gt;&lt;span&gt;，&lt;/span&gt;&lt;span&gt;觉得不错，&lt;/span&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;值得拿出来和大家分享下。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5439024390243903&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/WZoDoXZNb0vw02oFaqty0nZ4DibKM3OPKzZiaILIXr1oRvb2n7d9ic3ZmMO3DjAESwpIibsdlYLr2eEg8qTl6oEn4A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2460&quot;/&gt;&lt;/p&gt;&lt;pre mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14.399999618530273&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;26&quot;&gt;本项目是基于Jdk11 + SpringCloud + SpringBoot的微服务快速开发平台，其中的可配置的SaaS功能尤其闪耀， 具备RBAC功能、网关统一鉴权、Xss防跨站攻击、自动代码生成、多种存储系统、分布式事务、分布式定时任务等多个模块，支持多业务系统并行开发， 支持多服务并行开发，可以作为后端服务的开发脚手架。代码简洁，注释齐全，架构清晰，非常适合学习和企业作为基础框架使用。&lt;/p&gt;&lt;/blockquote&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.45139911634756996&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/WZoDoXZNb0s5US7kWk5Wlfg0libt8IaOcYibicKGpbzzhvHfvzYAibqic2MsdkV0x9cS8yGZoMOLX14ZQ2XPcrUaA7Q/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;2716&quot;/&gt;&lt;/p&gt;&lt;h2 mp-original-font-size=&quot;22.100000381469727&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;span mp-original-font-size=&quot;22.100000381469727&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;strong mp-original-font-size=&quot;22.100000381469727&quot; mp-original-line-height=&quot;27&quot;&gt;本项目亮点功能介绍:&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;ol class=&quot;list-paddingleft-1&quot; mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;18&quot;&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;&lt;span mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;服务注册&amp;amp;发现与调用：&lt;/span&gt;&lt;/p&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;基于Nacos来实现的服务注册与发现，使用使用Feign来实现服务互调, 可以做到使用HTTP请求远程调用时能与调用本地方法一样的编码体验，开发者完全感知不到这是远程方法，更感知不到这是个HTTP请求。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;&lt;span mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;负载均衡：&lt;/span&gt;&lt;/p&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;将服务保留的rest进行代理和网关控制，除了平常经常使用的node.js、nginx外，Spring Cloud系列的gateway 和 loadbalancer 可以帮我们进行正常的网关管控和负载均衡。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;&lt;span mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;RBAC:&lt;/span&gt;&lt;/p&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;通过JWT生成token，存储用户基本信息，并自研权限配置、鉴权方案。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;&lt;span mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;熔断机制：&lt;/span&gt;&lt;/p&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;因为采取了服务的分布，为了避免服务之间的调用“雪崩”，采用了Sentinel的作为熔断器，避免了服务之间的“雪崩”。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;&lt;span mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;监控：&lt;/span&gt;&lt;/p&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;利用Spring Boot Admin 来监控各个独立服务的运行状态、健康情况。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;&lt;span mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;链路调用监控：&lt;/span&gt;&lt;/p&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;同时实现了SkyWalking作为本项目的全链路性能监控， 从整体维度到局部维度展示各项指标，将跨应用的所有调用链性能信息集中展现，可方便度量整体和局部性能，并且方便找到故障产生的源头，生产上可极大缩短故障排除时间。另外，搜索公众号顶级架构师后台回复“网站”，获取一份惊喜礼包。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;&lt;span mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;数据权限&lt;/span&gt;&lt;/p&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;利用基于Mybatis的DataScopeInnerInterceptor拦截器实现了数据权限功能&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;&lt;span mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;SaaS(多租户)的无感解决方案&lt;/span&gt;&lt;/p&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;本项目支持3种常见的租户解决方案和无租户方案，同一套代码，修改一个配置即可实现租户模式只有切换。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;&lt;span mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;缓存抽象&lt;/span&gt;&lt;/p&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;采用CacheOps操作缓存，内置2种实现：Caffeine、 Redis，可以让项目应急时在无Redis环境正常运行&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;&lt;span mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;优雅的Bean转换&lt;/span&gt;&lt;/p&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;采用Dozer、BeanUtil等组件来对 DTO、DO、PO等对象的优化转换&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;&lt;span mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;前后端统一表单验证&lt;/span&gt;&lt;/p&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;严谨的表单验证通常需要 前端+后端同时验证， 但传统的项目，均只能前后端各做一次检验， 后期规则变更，又得前后端同时修改。&lt;br mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;/&gt;故在&lt;code mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;19&quot;&gt;hibernate-validator&lt;/code&gt;的基础上封装了&lt;code mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;19&quot;&gt;lamp-validator-starter&lt;/code&gt;起步依赖，提供一个通用接口，可以获取需要校验表单的规则，然后前端使用后端返回的规则，&lt;br mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;/&gt;以后若规则改变，只需要后端修改即可。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;&lt;span mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;防跨站脚本攻击(XSS)&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/pre&gt;&lt;/pre&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;&lt;span mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;当前登录用户信息注入器&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;&lt;span mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;在线API&lt;/span&gt;&lt;/p&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;由于原生swagger-ui某些功能支持不够友好，故采用了国内开源的&lt;code mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;19&quot;&gt;knife4j&lt;/code&gt;，并制作了stater，方便springboot用户使用。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;&lt;span mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;代码生成器&lt;/span&gt;&lt;/p&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;基于Mybatis-plus-generator自定义了一套代码生成器， 通过配置数据库字段的注释，自动生成枚举类、数据字典注解、SaveDTO、UpdateDTO、表单验证规则注解、Swagger注解等。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;&lt;span mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;定时任务调度器&lt;/span&gt;：&lt;/p&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;基于xxl-jobs进行了功能增强。(如：指定时间发送任务、执行器和调度器合并项目、多数据源)&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;&lt;span mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;分布式事务&lt;/span&gt;&lt;/p&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;集成了阿里的分布式事务中间件：seata，以 &lt;span mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;高效&lt;/span&gt; 并且对业务 &lt;span mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;0侵入&lt;/span&gt; 的方式，解决 微服务 场景下面临的分布式事务问题。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;&lt;span mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;跨表、跨库、跨服务的关联数据自动回显&lt;/span&gt;&lt;/p&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;用于解决跨表、跨库、跨服务分页数据的属性或单个对象的属性 回显关联数据之痛, 支持对静态数据属性(数据字典)、动态主键数据进行自动回显。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;&lt;span mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;灰度发布&lt;/span&gt;&lt;/p&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;为了解决频繁的服务更新上线，版本回退，快速迭代，公司内部协同开发，本项目采用修改 loadbalancer 的负载均衡策略来实现来灰度发布。&lt;/p&gt;&lt;/li&gt;&lt;pre mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;/p&gt;&lt;/pre&gt;&lt;h2 mp-original-font-size=&quot;22.100000381469727&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;strong mp-original-font-size=&quot;22.100000381469727&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;span mp-original-font-size=&quot;22.100000381469727&quot; mp-original-line-height=&quot;27&quot;&gt;技术栈/版本介绍：&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;ul class=&quot;list-paddingleft-1&quot; mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;18&quot;&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;所涉及的相关的技术有：&lt;/p&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-1&quot; mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;18&quot;&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;JSON序列化:Jackson&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;消息队列：RabbitMQ&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;缓存：Redis&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;数据库：MySQL 5.7.9 或者 MySQL 8&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;定时器：采用xxl-jobs项目进行二次改造&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;前端：vue2 + element-ui / vue3 + ant design vue&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;持久层框架：Mybatis-plus&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;代码生成器：基于Mybatis-plus-generator自定义&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;API网关：Gateway&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;服务注册&amp;amp;发现和配置中心: Nacos&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;服务消费：OpenFeign&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;负载均衡：Ribbon&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;服务熔断：Sentinel&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;项目构建：Maven&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;分布式事务：seata&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;分布式系统的流量防卫兵：Sentinel&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;监控：spring-boot-admin&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;链路调用跟踪：SkyWalking&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;另外，搜索公众号顶级算法后台回复“微信”，获取一份惊喜礼包。&lt;br mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;文件服务器：FastDFS 5.0.5/阿里云OSS/本地存储/MinIO&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;Nginx&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;部署方面：&lt;/p&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-1&quot; mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;18&quot;&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;服务器：CentOS&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;Jenkins&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;Docker&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;Kubernetes&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;p data-track=&quot;79&quot; mp-original-font-size=&quot;18&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span&gt;本项目是lamp项目的其中一个项目，她基于jdk11/jdk8 + SpringCloud + SpringBoot 开发， 她是一个微服务中后台快速开发平台，可以通过插件无缝切换是否启用SaaS模式、通过配置切换SaaS模式采用独立数据库模式还是字段模式。&lt;/span&gt;&lt;/p&gt;&lt;p data-track=&quot;80&quot; mp-original-font-size=&quot;18&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span&gt;她具备SaaS模式切换、完备的RBAC功能、网关统一鉴权、灰度发布、数据权限、可插拔缓存、统一封装缓存的key、表单校验前后端统一验证、字典数据自动回显、Xss防跨站攻击、自动生成前后端代码、多种存储系统、分布式事务、分布式定时任务等多个功能和模块， 支持多业务系统并行开发， 支持多服务并行开发，是中后台系统开发脚手架的最佳选择。代码简洁，注释齐全，架构清晰，非常适合学习和企业作为基础框架使用。&lt;/span&gt;&lt;/p&gt;&lt;p data-track=&quot;81&quot; mp-original-font-size=&quot;18&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span&gt;核心技术采用Spring Cloud Alibaba、SpringBoot、Mybatis、Seata、Sentinel、RabbitMQ、FastDFS/MinIO、SkyWalking等主要框架和中间件。希望能努力打造一套从 Web基础框架 - 分布式微服务架构 - 持续集成 - 系统监测 的解决方案。本项目旨在实现基础框架能力，不涉及具体业务。&lt;/span&gt;&lt;/p&gt;&lt;p data-track=&quot;82&quot; mp-original-font-size=&quot;18&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span&gt;灯灯(简称灯， 英文名：lamp)，他是一个项目的统称，由&quot;工具集&quot;、&quot;后端&quot;、&quot;前端&quot;组成，包含以下几个子项目：&lt;/span&gt;&lt;/p&gt;&lt;h1 data-track=&quot;83&quot; mp-original-font-size=&quot;17.95199966430664&quot; mp-original-line-height=&quot;28&quot;&gt;工具集&lt;/h1&gt;&lt;table mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;colgroup mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;col mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;/&gt;&lt;col mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;/&gt;&lt;/colgroup&gt;&lt;tbody mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;tr mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;td mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;p data-track=&quot;84&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;项目&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;p data-track=&quot;85&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;备注&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;td mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;p data-track=&quot;86&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;lamp-util&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;p data-track=&quot;87&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;核心工具集&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;td mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;p data-track=&quot;88&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;lamp-generator&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;p data-track=&quot;89&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;代码生成器&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;td mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;p data-track=&quot;90&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;lamp-job&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;p data-track=&quot;91&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;分布式定时调度器&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h1 data-track=&quot;92&quot; mp-original-font-size=&quot;17.95199966430664&quot; mp-original-line-height=&quot;28&quot;&gt;后端&lt;/h1&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;br mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;25.600000381469727&quot;/&gt;&lt;/p&gt;&lt;table mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;colgroup mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;col mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;/&gt;&lt;col mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;/&gt;&lt;/colgroup&gt;&lt;tbody mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;tr mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;td mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;p data-track=&quot;93&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;项目&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;p data-track=&quot;94&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;备注&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;td mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;p data-track=&quot;95&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;lamp-cloud&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;p data-track=&quot;96&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;SpringCloud(微服务)版&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;td mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;p data-track=&quot;97&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;lamp-boot&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;p data-track=&quot;98&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;SpringBoot(单体)版&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;td mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;p data-track=&quot;99&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;lamp-samples&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;p data-track=&quot;100&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;微服务版示例：常用示例&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h1 data-track=&quot;101&quot; mp-original-font-size=&quot;17.95199966430664&quot; mp-original-line-height=&quot;28&quot;&gt;前端&lt;/h1&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;br mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;25.600000381469727&quot;/&gt;&lt;/p&gt;&lt;table mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;colgroup mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;col mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;/&gt;&lt;col mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;/&gt;&lt;/colgroup&gt;&lt;tbody mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;tr mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;td mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;p data-track=&quot;102&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;项目&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;p data-track=&quot;103&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;备注&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;td mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;p data-track=&quot;104&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;lamp-web-plus(强烈推荐！)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;p data-track=&quot;105&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;基于 vue-vben-admin （vue 3 + ant design vue 2）&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;td mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;p data-track=&quot;106&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;lamp-web&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;p data-track=&quot;107&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;基于 vue-admin-element (element-ui)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h1 data-track=&quot;120&quot; mp-original-font-size=&quot;17.95199966430664&quot; mp-original-line-height=&quot;28&quot;&gt;新手小白高效的提问&lt;/h1&gt;&lt;p data-track=&quot;121&quot; mp-original-font-size=&quot;18&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span&gt;当你提出问题的时候，请先表明你已经做了上述的努力；这将有助于树立你并不是一个不劳而获且浪费别人的时间的提问者。如果你能一并表达在做了上述努力的过程中所学到的东西会更好，因为群主或者群里面其他大神更乐于回答那些表现出能从答案中学习的人的问题。另外，搜索公众号Linux就该这样学后台回复“git书籍”，获取一份惊喜礼包。&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot; mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;span&gt;用清晰、正确、精准并语法正确的语句，说清楚采用的什么版本（4.x还是3.x）、那个项目（boot还是cloud）、修改了什么代码、修改了什么配置？&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;span&gt;话不在多而在精&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;span&gt;问问题时，用最准确，最简单的语言描述清楚问题，而非说一堆废话，一堆表情。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;span&gt;描述问题症状而非你的猜测&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;span&gt;清楚明确的表达你的问题以及需求&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;span&gt;将报错信息截大图，能看清日志，看清那个模块，那行代码&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;span&gt;描述出现问题的步骤，或者功能菜单&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;span&gt;描述软件、工具的版本（nacos、idea/Eclipse、seata、mysql 等版本不同可能导致报错）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;span&gt;若基于本项目进行了源码、配置或者包名的修改导致的一些bug，请事先说明大概改了那些东西。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;span&gt;去掉无意义的提问句&lt;br mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;/&gt;避免用无意义的话结束提问，例如：&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;span&gt;有人能帮我吗？（请直接详细说明问题，而非等人回复：我来帮你）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;span&gt;项目无法启动怎么办？（请直接详细说明问题，而非等人回复：我来帮你）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;span&gt;群主在吗？（请直接详细说明问题，而非等人回复：我来帮你）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;span&gt;有个问题谁能帮帮我？（请直接详细说明问题，而非等人回复：我来帮你）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;span&gt;为什么更新代码后无法启动了啊？（请确保db和nacos里面的配置使用了最新版本）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;span&gt;&lt;span mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;这段时间有更新数据库脚本吗？有更新XX功能吗？(请看git 提交日志)&lt;br mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;/&gt;&lt;/span&gt;&lt;span mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;span mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;一般用以上方式提问或者咨询的，一律不予回复。&lt;/span&gt;&lt;/span&gt;&lt;span mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;span mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;一般用以上方式提问或者咨询的，一律不予回复。&lt;/span&gt;&lt;/span&gt;&lt;span mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;span mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;一般用以上方式提问或者咨询的，一律不予回复。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;span&gt;尽可能清晰的描述让群主如何复现，必要时提供大而全的截图，你修改之后的配置等；而非一直强调项目启动不了咋办？本地好的生产却不行？等等这些无意义的话语。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h1 data-track=&quot;139&quot; mp-original-font-size=&quot;17.95199966430664&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span&gt;如果得不到回答&lt;/span&gt;&lt;/h1&gt;&lt;p data-track=&quot;140&quot; mp-original-font-size=&quot;18&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span&gt;如果仍得不到回答，请不要以为我们觉得无法帮助你。有时只是看到你问题的人不知道答案罢了。没有回应不代表你被忽视，虽然不可否认这种差别很难区分。&lt;/span&gt;&lt;/p&gt;&lt;h1 data-track=&quot;141&quot; mp-original-font-size=&quot;17.95199966430664&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span&gt;为什么我问的问题没人回答，别人问的问题，却很快有人响应？&lt;/span&gt;&lt;/h1&gt;&lt;h1 mp-original-font-size=&quot;34&quot; mp-original-line-height=&quot;42&quot;&gt;&lt;span mp-original-font-size=&quot;24&quot; mp-original-line-height=&quot;30&quot;&gt;功能演示：&lt;/span&gt;&lt;/h1&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>04ca0228ebd1916e15f5fe00c49eb19c</guid>
<title>面试官：MySQL 上亿大表，如何深度优化？</title>
<link>https://toutiao.io/k/e7gmc5b</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;section&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;chksm=fa496f8ecd3ee698f4954c00efb80fe955ec9198fff3ef4011e331aa37f55a6a17bc8c0335a8&amp;amp;scene=21&amp;amp;token=899450012&amp;amp;lang=zh_CN#wechat_redirect&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.42625&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/GpcH5Yqqj0lclTjtMxWzia6WDDcl1xtCibgiaDlia09ucpJeeib2DN6NYuKPFZ6xuGXiaEdiabzyAQOqn1AqTE745dvNw/640?wx_fmt=jpeg&quot; data-w=&quot;800&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;前段时间刚入职一家公司，就遇上这事！&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;XX实例（一主一从）xxx告警中每天凌晨在报SLA报警，该报警的意思是存在一定的主从延迟（若在此时发生主从切换，需要长时间才可以完成切换，要追延迟来保证主从数据的一致性）&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;XX实例的慢查询数量最多（执行时间超过1s的sql会被记录），XX应用那方每天晚上在做删除一个月前数据的任务&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;基于 Spring Boot + MyBatis Plus + Vue &amp;amp; Element 实现的后台管理系统 + 用户小程序，支持 RBAC 动态权限、多租户、数据权限、工作流、三方登录、支付、短信、商城等功能&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;项目地址：https://github.com/YunaiV/ruoyi-vue-pro&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;视频教程：https://doc.iocoder.cn/video/&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用pt-query-digest工具分析最近一周的mysql-slow.log&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;pt-query-digest --since=&lt;span&gt;148&lt;/span&gt;h mysql-slow.log | less&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果第一部分&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.31118493909191586&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdLkEI9sZfdqxOUJEKOZjFwBZV5qAibLJcLdTzYWkqZVUeIDVdDXu3q5urWrFKZvZqr2YmfCqTStxKINvoSTchg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;903&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最近一个星期内，总共记录的慢查询执行花费时间为25403s，最大的慢sql执行时间为266s，平均每个慢sql执行时间5s，平均扫描的行数为1766万&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;结果第二部分&lt;/strong&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.27685185185185185&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdLkEI9sZfdqxOUJEKOZjFwBZV5qAibLJpFdwR6uQdTpAcMAK8Xwo8uibA5JeR92uNR17DsvqfM9UsFibGG7PIOfQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;select arrival_record操作记录的慢查询数量最多有4万多次，平均响应时间为4s，delete arrival_record记录了6次，平均响应时间258s。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;select xxx_record语句&lt;/strong&gt;&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;select arrival_record 慢查询语句都类似于如下所示，where语句中的参数字段是一样的，传入的参数值不一样
select count(*) from arrival_record where product_id=26 and receive_time between &#x27;2019-03-25 14:00:00&#x27; and &#x27;2019-03-25 15:00:00&#x27; and receive_spend_ms&amp;gt;=0\G&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.2794811320754717&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdLkEI9sZfdqxOUJEKOZjFwBZV5qAibLJd8AvSAWE6gpKOeEsov2bKeCl0lBW2XzeXj3j2tC5vbXPWic0T2CSkHA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;848&quot;/&gt;&lt;/span&gt;&lt;/a&gt;select arrival_record 语句在mysql中最多扫描的行数为5600万、平均扫描的行数为172万，推断由于扫描的行数多导致的执行时间长&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;查看执行计划&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;explain select &lt;span&gt;count&lt;/span&gt;&lt;span&gt;(*)&lt;/span&gt; from arrival_record where product_id&lt;/span&gt;=&lt;span&gt;26&lt;/span&gt; and receive_time between &lt;span&gt;&#x27;2019-03-25 14:00:00&#x27;&lt;/span&gt; and &lt;span&gt;&#x27;2019-03-25 15:00:00&#x27;&lt;/span&gt; and receive_spend_ms&amp;gt;=&lt;span&gt;0&lt;/span&gt;\G;&lt;br/&gt;*************************** &lt;span&gt;1&lt;/span&gt;. row ***************************&lt;br/&gt;id: &lt;span&gt;1&lt;/span&gt;&lt;br/&gt;select_type: SIMPLE&lt;br/&gt;table: arrival_record&lt;br/&gt;partitions: NULL&lt;br/&gt;type: ref&lt;br/&gt;possible_keys: IXFK_arrival_record&lt;br/&gt;key: IXFK_arrival_record&lt;br/&gt;key_len: &lt;span&gt;8&lt;/span&gt;&lt;br/&gt;ref: &lt;span&gt;const&lt;/span&gt;&lt;br/&gt;rows: &lt;span&gt;32261320&lt;/span&gt;&lt;br/&gt;filtered: &lt;span&gt;3.70&lt;/span&gt;&lt;br/&gt;Extra: Using index condition; Using where&lt;br/&gt;&lt;span&gt;1&lt;/span&gt; row in set, &lt;span&gt;1&lt;/span&gt; warning (&lt;span&gt;0.00&lt;/span&gt; sec)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;用到了索引IXFK_arrival_record，但预计扫描的行数很多有3000多w行&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;show index from arrival_record;&lt;br/&gt;+----------------+------------+---------------------+--------------+--------------+-----------+-------------+----------+--------+------+------------+---------+---------------+&lt;br/&gt;| Table | Non_unique | Key_name | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment | Index_comment |&lt;br/&gt;+----------------+------------+---------------------+--------------+--------------+-----------+-------------+----------+--------+------+------------+---------+---------------+&lt;br/&gt;| arrival_record | &lt;span&gt;0&lt;/span&gt; | PRIMARY | &lt;span&gt;1&lt;/span&gt; | id | A | &lt;span&gt;107990720&lt;/span&gt; | NULL | NULL | | BTREE | | |&lt;br/&gt;| arrival_record | &lt;span&gt;1&lt;/span&gt; | IXFK_arrival_record | &lt;span&gt;1&lt;/span&gt; | product_id | A | &lt;span&gt;1344&lt;/span&gt; | NULL | NULL | | BTREE | | |&lt;br/&gt;| arrival_record | &lt;span&gt;1&lt;/span&gt; | IXFK_arrival_record | &lt;span&gt;2&lt;/span&gt; | station_no | A | &lt;span&gt;22161&lt;/span&gt; | NULL | NULL | YES | BTREE | | |&lt;br/&gt;| arrival_record | &lt;span&gt;1&lt;/span&gt; | IXFK_arrival_record | &lt;span&gt;3&lt;/span&gt; | sequence | A | &lt;span&gt;77233384&lt;/span&gt; | NULL | NULL | | BTREE | | |&lt;br/&gt;| arrival_record | &lt;span&gt;1&lt;/span&gt; | IXFK_arrival_record | &lt;span&gt;4&lt;/span&gt; | receive_time | A | &lt;span&gt;65854652&lt;/span&gt; | NULL | NULL | YES | BTREE | | |&lt;br/&gt;| arrival_record | &lt;span&gt;1&lt;/span&gt; | IXFK_arrival_record | &lt;span&gt;5&lt;/span&gt; | arrival_time | A | &lt;span&gt;73861904&lt;/span&gt; | NULL | NULL | YES | BTREE | | |&lt;br/&gt;+----------------+------------+---------------------+--------------+--------------+-----------+-------------+----------+--------+------+------------+---------+---------------+&lt;br/&gt;show create table arrival_record;&lt;br/&gt;..........&lt;br/&gt;&lt;span&gt;arrival_spend_ms &lt;span&gt;bigint&lt;/span&gt;&lt;span&gt;(&lt;span&gt;20&lt;/span&gt;)&lt;/span&gt; DEFAULT NULL,&lt;br/&gt;total_spend_ms &lt;span&gt;bigint&lt;/span&gt;&lt;span&gt;(&lt;span&gt;20&lt;/span&gt;)&lt;/span&gt; DEFAULT NULL,&lt;br/&gt;PRIMARY &lt;span&gt;KEY&lt;/span&gt; &lt;span&gt;(id)&lt;/span&gt;,&lt;br/&gt;KEY &lt;span&gt;IXFK_arrival_record&lt;/span&gt; &lt;span&gt;(product_id,station_no,sequence,receive_time,arrival_time)&lt;/span&gt; USING BTREE,&lt;br/&gt;CONSTRAINT FK_arrival_record_product FOREIGN &lt;span&gt;KEY&lt;/span&gt; &lt;span&gt;(product_id)&lt;/span&gt; REFERENCES &lt;span&gt;product&lt;/span&gt; &lt;span&gt;(id)&lt;/span&gt; ON DELETE NO ACTION ON UPDATE NO ACTION&lt;br/&gt;) ENGINE&lt;/span&gt;=InnoDB AUTO_INCREMENT=&lt;span&gt;614538979&lt;/span&gt; DEFAULT CHARSET=utf8 COLLATE=utf8_bin |&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;该表总记录数约1亿多条，表上只有一个复合索引，product_id字段基数很小，选择性不好&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;传入的过滤条件 where product_id=26 and receive_time between &#x27;2019-03-25 14:00:00&#x27; and &#x27;2019-03-25 15:00:00&#x27; and receive_spend_ms&amp;gt;=0 没有station_nu字段，使用不到复合索引 IXFK_arrival_record的 &lt;code&gt;product_id&lt;/code&gt;,&lt;code&gt;station_no&lt;/code&gt;,&lt;code&gt;sequence&lt;/code&gt;,&lt;code&gt;receive_time&lt;/code&gt; 这几个字段&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;根据最左前缀原则，select arrival_record只用到了复合索引IXFK_arrival_record的第一个字段product_id，而该字段选择性很差，导致扫描的行数很多，执行时间长&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;receive_time字段的基数大，选择性好，可对该字段单独建立索引，select arrival_record sql就会使用到该索引&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;现在已经知道了在慢查询中记录的select arrival_record where语句传入的参数字段有 product_id，receive_time，receive_spend_ms，还想知道对该表的访问有没有通过其它字段来过滤了？&lt;/p&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;神器tcpdump出场的时候到了&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用tcpdump抓包一段时间对该表的select语句&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;tcpdump -i bond0 -s &lt;span&gt;0&lt;/span&gt; -l -w - dst port &lt;span&gt;3316&lt;/span&gt; | strings | grep select | egrep -i &lt;span&gt;&#x27;arrival_record&#x27;&lt;/span&gt; &amp;gt;/tmp/select_arri.log&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;获取select 语句中from 后面的where条件语句&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;IFS_OLD=$IFS&lt;br/&gt;IFS=$&lt;span&gt;&#x27;\n&#x27;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;for&lt;/span&gt; i in `cat /tmp/select_arri.log `;&lt;span&gt;do&lt;/span&gt; echo ${i#*&lt;span&gt;&#x27;from&#x27;&lt;/span&gt;}; done | less&lt;br/&gt;IFS=$IFS_OLD&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;arrival_record arrivalrec0_ where arrivalrec0_.sequence=&lt;span&gt;&#x27;2019-03-27 08:40&#x27;&lt;/span&gt; and arrivalrec0_.product_id=&lt;span&gt;17&lt;/span&gt; and arrivalrec0_.station_no=&lt;span&gt;&#x27;56742&#x27;&lt;/span&gt;&lt;br/&gt;arrival_record arrivalrec0_ where arrivalrec0_.sequence=&lt;span&gt;&#x27;2019-03-27 08:40&#x27;&lt;/span&gt; and arrivalrec0_.product_id=&lt;span&gt;22&lt;/span&gt; and arrivalrec0_.station_no=&lt;span&gt;&#x27;S7100&#x27;&lt;/span&gt;&lt;br/&gt;arrival_record arrivalrec0_ where arrivalrec0_.sequence=&lt;span&gt;&#x27;2019-03-27 08:40&#x27;&lt;/span&gt; and arrivalrec0_.product_id=&lt;span&gt;24&lt;/span&gt; and arrivalrec0_.station_no=&lt;span&gt;&#x27;V4631&#x27;&lt;/span&gt;&lt;br/&gt;arrival_record arrivalrec0_ where arrivalrec0_.sequence=&lt;span&gt;&#x27;2019-03-27 08:40&#x27;&lt;/span&gt; and arrivalrec0_.product_id=&lt;span&gt;22&lt;/span&gt; and arrivalrec0_.station_no=&lt;span&gt;&#x27;S9466&#x27;&lt;/span&gt;&lt;br/&gt;arrival_record arrivalrec0_ where arrivalrec0_.sequence=&lt;span&gt;&#x27;2019-03-27 08:40&#x27;&lt;/span&gt; and arrivalrec0_.product_id=&lt;span&gt;24&lt;/span&gt; and arrivalrec0_.station_no=&lt;span&gt;&#x27;V4205&#x27;&lt;/span&gt;&lt;br/&gt;arrival_record arrivalrec0_ where arrivalrec0_.sequence=&lt;span&gt;&#x27;2019-03-27 08:40&#x27;&lt;/span&gt; and arrivalrec0_.product_id=&lt;span&gt;24&lt;/span&gt; and arrivalrec0_.station_no=&lt;span&gt;&#x27;V4105&#x27;&lt;/span&gt;&lt;br/&gt;arrival_record arrivalrec0_ where arrivalrec0_.sequence=&lt;span&gt;&#x27;2019-03-27 08:40&#x27;&lt;/span&gt; and arrivalrec0_.product_id=&lt;span&gt;24&lt;/span&gt; and arrivalrec0_.station_no=&lt;span&gt;&#x27;V4506&#x27;&lt;/span&gt;&lt;br/&gt;arrival_record arrivalrec0_ where arrivalrec0_.sequence=&lt;span&gt;&#x27;2019-03-27 08:40&#x27;&lt;/span&gt; and arrivalrec0_.product_id=&lt;span&gt;24&lt;/span&gt; and arrivalrec0_.station_no=&lt;span&gt;&#x27;V4617&#x27;&lt;/span&gt;&lt;br/&gt;arrival_record arrivalrec0_ where arrivalrec0_.sequence=&lt;span&gt;&#x27;2019-03-27 08:40&#x27;&lt;/span&gt; and arrivalrec0_.product_id=&lt;span&gt;22&lt;/span&gt; and arrivalrec0_.station_no=&lt;span&gt;&#x27;S8356&#x27;&lt;/span&gt;&lt;br/&gt;arrival_record arrivalrec0_ where arrivalrec0_.sequence=&lt;span&gt;&#x27;2019-03-27 08:40&#x27;&lt;/span&gt; and arrivalrec0_.product_id=&lt;span&gt;22&lt;/span&gt; and arrivalrec0_.station_no=&lt;span&gt;&#x27;S8356&#x27;&lt;/span&gt;&lt;br/&gt;select 该表 where条件中有product_id,station_no,sequence字段，可以使用到复合索引IXFK_arrival_record的前三个字段&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;综上所示，优化方法为，删除复合索引IXFK_arrival_record，建立复合索引idx_sequence_station_no_product_id，并建立单独索引indx_receive_time&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;delete xxx_record语句&lt;/strong&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.2529002320185615&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdLkEI9sZfdqxOUJEKOZjFwBZV5qAibLJeoOdWcdzYFJY7na7fc3Oia3OHAn6xSPyxBnx2hzraQo3mOmIQZxlVPg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;862&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/figure&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;该delete操作平均扫描行数为1.1亿行，平均执行时间是262s&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;delete语句如下所示，每次记录的慢查询传入的参数值不一样&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;delete from arrival_record where receive_time &amp;lt; STR_TO_DATE(&lt;span&gt;&#x27;2019-02-23&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;%Y-%m-%d&#x27;&lt;/span&gt;)\G&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;执行计划&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;explain select * from arrival_record where receive_time &amp;lt; STR_TO_DATE(&lt;span&gt;&#x27;2019-02-23&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;%Y-%m-%d&#x27;&lt;/span&gt;)\G&lt;br/&gt;*************************** &lt;span&gt;1&lt;/span&gt;. row ***************************&lt;br/&gt;id: &lt;span&gt;1&lt;/span&gt;&lt;br/&gt;select_type: SIMPLE&lt;br/&gt;table: arrival_record&lt;br/&gt;partitions: NULL&lt;br/&gt;type: ALL&lt;br/&gt;possible_keys: NULL&lt;br/&gt;key: NULL&lt;br/&gt;key_len: NULL&lt;br/&gt;ref: NULL&lt;br/&gt;rows: &lt;span&gt;109501508&lt;/span&gt;&lt;br/&gt;filtered: &lt;span&gt;33.33&lt;/span&gt;&lt;br/&gt;Extra: Using where&lt;br/&gt;&lt;span&gt;1&lt;/span&gt; row in set, &lt;span&gt;1&lt;/span&gt; warning (&lt;span&gt;0.00&lt;/span&gt; sec)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;该delete语句没有使用索引（没有合适的索引可用），走的全表扫描，导致执行时间长&lt;/p&gt;&lt;p&gt;优化方法也是 建立单独索引indx_receive_time(receive_time)&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;基于 Spring Cloud Alibaba + Gateway + Nacos + RocketMQ + Vue &amp;amp; Element 实现的后台管理系统 + 用户小程序，支持 RBAC 动态权限、多租户、数据权限、工作流、三方登录、支付、短信、商城等功能&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;项目地址：https://github.com/YunaiV/yudao-cloud&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;视频教程：https://doc.iocoder.cn/video/&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;拷贝arrival_record表到测试实例上进行删除重新索引操作&lt;strong&gt;XX实例arrival_record表信息&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;du -sh /datas/mysql/data/&lt;span&gt;3316&lt;/span&gt;/cq_new_cimiss/arrival_record*&lt;br/&gt;&lt;span&gt;12&lt;/span&gt;K /datas/mysql/data/&lt;span&gt;3316&lt;/span&gt;/cq_new_cimiss/arrival_record.frm&lt;br/&gt;&lt;span&gt;48&lt;/span&gt;G /datas/mysql/data/&lt;span&gt;3316&lt;/span&gt;/cq_new_cimiss/arrival_record.&lt;span&gt;ibd&lt;br/&gt;select &lt;span&gt;count&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; from cq_new_cimiss.arrival_record&lt;/span&gt;;&lt;br/&gt;+-----------+&lt;br/&gt;| count() |&lt;br/&gt;+-----------+&lt;br/&gt;| &lt;span&gt;112294946&lt;/span&gt; |&lt;br/&gt;+-----------+&lt;br/&gt;&lt;span&gt;1&lt;/span&gt;亿多记录数&lt;br/&gt;&lt;br/&gt;SELECT&lt;br/&gt;table_name,&lt;br/&gt;CONCAT(FORMAT(SUM(data_length) / &lt;span&gt;1024&lt;/span&gt; / &lt;span&gt;1024&lt;/span&gt;,&lt;span&gt;2&lt;/span&gt;),&lt;span&gt;&#x27;M&#x27;&lt;/span&gt;) AS dbdata_size,&lt;br/&gt;CONCAT(FORMAT(SUM(index_length) / &lt;span&gt;1024&lt;/span&gt; / &lt;span&gt;1024&lt;/span&gt;,&lt;span&gt;2&lt;/span&gt;),&lt;span&gt;&#x27;M&#x27;&lt;/span&gt;) AS dbindex_size,&lt;br/&gt;CONCAT(FORMAT(SUM(data_length + index_length) / &lt;span&gt;1024&lt;/span&gt; / &lt;span&gt;1024&lt;/span&gt; / &lt;span&gt;1024&lt;/span&gt;,&lt;span&gt;2&lt;/span&gt;),&lt;span&gt;&#x27;G&#x27;&lt;/span&gt;) &lt;span&gt;AS &lt;span&gt;table_size&lt;/span&gt;&lt;span&gt;(G)&lt;/span&gt;,&lt;br/&gt;AVG_ROW_LENGTH,table_rows,update_time&lt;br/&gt;FROM&lt;br/&gt;information_schema.tables&lt;br/&gt;WHERE table_schema &lt;/span&gt;= &lt;span&gt;&#x27;cq_new_cimiss&#x27;&lt;/span&gt; and table_name=&lt;span&gt;&#x27;arrival_record&#x27;&lt;/span&gt;;&lt;br/&gt;+----------------+-------------+--------------+------------+----------------+------------+---------------------+&lt;br/&gt;| table_name | dbdata_size | dbindex_size | table_size(G) | AVG_ROW_LENGTH | table_rows | update_time |&lt;br/&gt;+----------------+-------------+--------------+------------+----------------+------------+---------------------+&lt;br/&gt;| arrival_record | &lt;span&gt;18&lt;/span&gt;,&lt;span&gt;268.02&lt;/span&gt;M | &lt;span&gt;13&lt;/span&gt;,&lt;span&gt;868.05&lt;/span&gt;M | &lt;span&gt;31.38&lt;/span&gt;G | &lt;span&gt;175&lt;/span&gt; | &lt;span&gt;109155053&lt;/span&gt; | &lt;span&gt;2019&lt;/span&gt;-&lt;span&gt;03&lt;/span&gt;-&lt;span&gt;26&lt;/span&gt; &lt;span&gt;12&lt;/span&gt;:&lt;span&gt;40&lt;/span&gt;:&lt;span&gt;17&lt;/span&gt; |&lt;br/&gt;+----------------+-------------+--------------+------------+----------------+------------+---------------------+&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;磁盘占用空间48G，mysql中该表大小为31G，存在17G左右的碎片，大多由于删除操作造成的（记录被删除了，空间没有回收)&lt;/p&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;备份还原该表到新的实例中，删除原来的复合索引，重新添加索引进行测试&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;mydumper并行压缩备份&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;user=root&lt;br/&gt;passwd=xxxx&lt;br/&gt;socket=/datas/mysql/data/&lt;span&gt;3316&lt;/span&gt;/mysqld.sock&lt;br/&gt;db=cq_new_cimiss&lt;br/&gt;table_name=arrival_record&lt;br/&gt;backupdir=/datas/dump_$table_name&lt;br/&gt;mkdir -p $backupdir&lt;br/&gt;  nohup echo `date +%T` &amp;amp;&amp;amp; mydumper -u $user -p $passwd -S $socket -B $db -c -T $table_name -o $backupdir -t &lt;span&gt;32&lt;/span&gt; -r &lt;span&gt;2000000&lt;/span&gt; &amp;amp;&amp;amp; echo `date +%T` &amp;amp;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;并行压缩备份所花时间（52s）和占用空间（1.2G，实际该表占用磁盘空间为48G，mydumper并行压缩备份压缩比相当高！）&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;Started dump at: &lt;span&gt;2019&lt;/span&gt;-&lt;span&gt;03&lt;/span&gt;-&lt;span&gt;26&lt;/span&gt; &lt;span&gt;12&lt;/span&gt;:&lt;span&gt;46&lt;/span&gt;:&lt;span&gt;04&lt;/span&gt;&lt;br/&gt;........&lt;br/&gt;&lt;br/&gt;Finished dump at: &lt;span&gt;2019&lt;/span&gt;-&lt;span&gt;03&lt;/span&gt;-&lt;span&gt;26&lt;/span&gt; &lt;span&gt;12&lt;/span&gt;:&lt;span&gt;46&lt;/span&gt;:&lt;span&gt;56&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;du -sh   /datas/dump_arrival_record/&lt;br/&gt;&lt;span&gt;1.2&lt;/span&gt;G  /datas/dump_arrival_record/&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;拷贝dump数据到测试节点&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;scp -rp /datas/dump_arrival_record root@&lt;span&gt;10.230&lt;/span&gt;&lt;span&gt;.124&lt;/span&gt;&lt;span&gt;.19&lt;/span&gt;:/datas&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;多线程导入数据&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;time myloader -u root -S /datas/mysql/data/&lt;span&gt;3308&lt;/span&gt;/mysqld.sock -P &lt;span&gt;3308&lt;/span&gt; -p root -B test -d /datas/dump_arrival_record -t &lt;span&gt;32&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;real 126m42.885s
user 1m4.543s
sys 0m4.267s&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;逻辑导入该表后磁盘占用空间&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;du -h -d &lt;span&gt;1&lt;/span&gt; /datas/mysql/data/&lt;span&gt;3308&lt;/span&gt;/test/arrival_record.*&lt;br/&gt;&lt;span&gt;12&lt;/span&gt;K /datas/mysql/data/&lt;span&gt;3308&lt;/span&gt;/test/arrival_record.frm&lt;br/&gt;&lt;span&gt;30&lt;/span&gt;G /datas/mysql/data/&lt;span&gt;3308&lt;/span&gt;/test/arrival_record.ibd&lt;br/&gt;没有碎片，和mysql的该表的大小一致&lt;br/&gt;cp -rp /datas/mysql/data/&lt;span&gt;3308&lt;/span&gt; /datas&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;分别使用online DDL和 pt-osc工具来做删除重建索引操作
先删除外键，不删除外键，无法删除复合索引，外键列属于复合索引中第一列&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;nohup bash /tmp/ddl_index.sh &amp;amp;&lt;br/&gt;&lt;span&gt;2019&lt;/span&gt;-&lt;span&gt;04&lt;/span&gt;-&lt;span&gt;04&lt;/span&gt;-&lt;span&gt;10&lt;/span&gt;:&lt;span&gt;41&lt;/span&gt;:&lt;span&gt;39&lt;/span&gt; begin stop mysqld_3308&lt;br/&gt;&lt;span&gt;2019&lt;/span&gt;-&lt;span&gt;04&lt;/span&gt;-&lt;span&gt;04&lt;/span&gt;-&lt;span&gt;10&lt;/span&gt;:&lt;span&gt;41&lt;/span&gt;:&lt;span&gt;41&lt;/span&gt; begin rm -rf datadir and cp -rp datadir_bak&lt;br/&gt;&lt;span&gt;2019&lt;/span&gt;-&lt;span&gt;04&lt;/span&gt;-&lt;span&gt;04&lt;/span&gt;-&lt;span&gt;10&lt;/span&gt;:&lt;span&gt;46&lt;/span&gt;:&lt;span&gt;53&lt;/span&gt; start mysqld_3308&lt;br/&gt;&lt;span&gt;2019&lt;/span&gt;-&lt;span&gt;04&lt;/span&gt;-&lt;span&gt;04&lt;/span&gt;-&lt;span&gt;10&lt;/span&gt;:&lt;span&gt;46&lt;/span&gt;:&lt;span&gt;59&lt;/span&gt; online ddl begin&lt;br/&gt;&lt;span&gt;2019&lt;/span&gt;-&lt;span&gt;04&lt;/span&gt;-&lt;span&gt;04&lt;/span&gt;-&lt;span&gt;11&lt;/span&gt;:&lt;span&gt;20&lt;/span&gt;:&lt;span&gt;34&lt;/span&gt; onlie ddl stop&lt;br/&gt;&lt;span&gt;2019&lt;/span&gt;-&lt;span&gt;04&lt;/span&gt;-&lt;span&gt;04&lt;/span&gt;-&lt;span&gt;11&lt;/span&gt;:&lt;span&gt;20&lt;/span&gt;:&lt;span&gt;34&lt;/span&gt; begin stop mysqld_3308&lt;br/&gt;&lt;span&gt;2019&lt;/span&gt;-&lt;span&gt;04&lt;/span&gt;-&lt;span&gt;04&lt;/span&gt;-&lt;span&gt;11&lt;/span&gt;:&lt;span&gt;20&lt;/span&gt;:&lt;span&gt;36&lt;/span&gt; begin rm -rf datadir and cp -rp datadir_bak&lt;br/&gt;&lt;span&gt;2019&lt;/span&gt;-&lt;span&gt;04&lt;/span&gt;-&lt;span&gt;04&lt;/span&gt;-&lt;span&gt;11&lt;/span&gt;:&lt;span&gt;22&lt;/span&gt;:&lt;span&gt;48&lt;/span&gt; start mysqld_3308&lt;br/&gt;&lt;span&gt;2019&lt;/span&gt;-&lt;span&gt;04&lt;/span&gt;-&lt;span&gt;04&lt;/span&gt;-&lt;span&gt;11&lt;/span&gt;:&lt;span&gt;22&lt;/span&gt;:&lt;span&gt;53&lt;/span&gt; pt-osc begin&lt;br/&gt;&lt;span&gt;2019&lt;/span&gt;-&lt;span&gt;04&lt;/span&gt;-&lt;span&gt;04&lt;/span&gt;-&lt;span&gt;12&lt;/span&gt;:&lt;span&gt;19&lt;/span&gt;:&lt;span&gt;15&lt;/span&gt; pt-osc stop&lt;br/&gt;online ddl 花费时间为&lt;span&gt;34&lt;/span&gt; 分钟，pt-osc花费时间为&lt;span&gt;57&lt;/span&gt; 分钟，使用onlne ddl时间约为pt-osc工具时间的一半&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;*&lt;strong&gt;做DDL 参考&lt;/strong&gt; *&lt;/p&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7115384615384616&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdLkEI9sZfdqxOUJEKOZjFwBZV5qAibLJhOIIFaxHvfpsibyCXBGNMM5e7TWibXwPq3Bll9iavILDYjiaKZ9pQoJHYw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;832&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由于是一主一从实例，应用是连接的vip，删除重建索引采用online ddl来做。停止主从复制后，先在从实例上做（不记录binlog），主从切换，再在新切换的从实例上做（不记录binlog)&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;function &lt;span&gt;red_echo&lt;/span&gt; &lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;br/&gt;        local what=&lt;span&gt;&quot;$*&quot;&lt;/span&gt;&lt;br/&gt;        echo -e &lt;span&gt;&quot;$(date +%F-%T)  ${what}&quot;&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;function &lt;span&gt;check_las_comm&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;&lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; [ &lt;span&gt;&quot;$1&quot;&lt;/span&gt; != &lt;span&gt;&quot;0&quot;&lt;/span&gt; ];then&lt;br/&gt;        red_echo &lt;span&gt;&quot;$2&quot;&lt;/span&gt;&lt;br/&gt;        echo &lt;span&gt;&quot;exit 1&quot;&lt;/span&gt;&lt;br/&gt;        exit &lt;span&gt;1&lt;/span&gt;&lt;br/&gt;    fi&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;red_echo &lt;span&gt;&quot;stop slave&quot;&lt;/span&gt;&lt;br/&gt;mysql -uroot -p$passwd --socket=/datas/mysql/data/${port}/mysqld.sock -e&lt;span&gt;&quot;stop slave&quot;&lt;/span&gt;&lt;br/&gt;check_las_comm &lt;span&gt;&quot;$?&quot;&lt;/span&gt; &lt;span&gt;&quot;stop slave failed&quot;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;red_echo &lt;span&gt;&quot;online ddl begin&quot;&lt;/span&gt;&lt;br/&gt; mysql -uroot -p$passwd --socket=/datas/mysql/data/${port}/mysqld.sock -e&lt;span&gt;&quot;set sql_log_bin=0;select now() as  ddl_start;ALTER TABLE $db_.\`${table_name}\` DROP FOREIGN KEY FK_arrival_record_product,drop index IXFK_arrival_record,add index idx_product_id_sequence_station_no(product_id,sequence,station_no),add index idx_receive_time(receive_time);select now() as ddl_stop&quot;&lt;/span&gt; &amp;gt;&amp;gt;${log_file} &lt;span&gt;2&lt;/span&gt;&amp;gt;&amp;amp; &lt;span&gt;1&lt;/span&gt;&lt;br/&gt; red_echo &lt;span&gt;&quot;onlie ddl stop&quot;&lt;/span&gt;&lt;br/&gt; red_echo &lt;span&gt;&quot;add foreign key&quot;&lt;/span&gt;&lt;br/&gt; mysql -uroot -p$passwd --socket=/datas/mysql/data/${port}/mysqld.sock -e&lt;span&gt;&quot;set sql_log_bin=0;ALTER TABLE $db_.${table_name} ADD CONSTRAINT _FK_${table_name}_product FOREIGN KEY (product_id) REFERENCES cq_new_cimiss.product (id) ON DELETE NO ACTION ON UPDATE NO ACTION;&quot;&lt;/span&gt; &amp;gt;&amp;gt;${log_file} &lt;span&gt;2&lt;/span&gt;&amp;gt;&amp;amp; &lt;span&gt;1&lt;/span&gt;&lt;br/&gt; check_las_comm &lt;span&gt;&quot;$?&quot;&lt;/span&gt; &lt;span&gt;&quot;add foreign key error&quot;&lt;/span&gt;&lt;br/&gt; red_echo &lt;span&gt;&quot;add foreign key stop&quot;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;red_echo &lt;span&gt;&quot;start slave&quot;&lt;/span&gt;&lt;br/&gt;mysql -uroot -p$passwd --socket=/datas/mysql/data/${port}/mysqld.sock -e&lt;span&gt;&quot;start slave&quot;&lt;/span&gt;&lt;br/&gt;check_las_comm &lt;span&gt;&quot;$?&quot;&lt;/span&gt; &lt;span&gt;&quot;start slave failed&quot;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;*&lt;strong&gt;执行时间&lt;/strong&gt; *&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2019-04-08-11:17:36 stop slave
mysql: [Warning] Using a password on the command line interface can be insecure.
ddl_start
2019-04-08 &lt;strong&gt;11:17:36&lt;/strong&gt;ddl_stop
2019-04-08 &lt;strong&gt;11:45:13&lt;/strong&gt;2019-04-08-11:45:13 onlie ddl stop
2019-04-08-&lt;strong&gt;11:45:13&lt;/strong&gt; add foreign key
mysql: [Warning] Using a password on the command line interface can be insecure.
2019-04-08-12:33:48 add foreign key stop
2019-04-08-&lt;strong&gt;12:33:48&lt;/strong&gt; start slave&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;*&lt;strong&gt;再次查看delete 和select语句的执行计划&lt;/strong&gt; *&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;explain select &lt;span&gt;count&lt;/span&gt;&lt;span&gt;(*)&lt;/span&gt; from arrival_record where receive_time &amp;lt; &lt;span&gt;STR_TO_DATE&lt;/span&gt;&lt;span&gt;(&lt;span&gt;&#x27;2019-03-10&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;%Y-%m-%d&#x27;&lt;/span&gt;)&lt;/span&gt;\G&lt;br/&gt;*************************** 1. row ***************************&lt;br/&gt;id: 1&lt;br/&gt;select_type: SIMPLE&lt;br/&gt;table: arrival_record&lt;br/&gt;partitions: NULL&lt;br/&gt;type: range&lt;br/&gt;possible_keys: idx_receive_time&lt;br/&gt;key: idx_receive_time&lt;br/&gt;key_len: 6&lt;br/&gt;ref: NULL&lt;br/&gt;rows: 7540948&lt;br/&gt;filtered: 100.00&lt;br/&gt;Extra: Using where&lt;/span&gt;; &lt;span&gt;Using index&lt;br/&gt;explain select &lt;span&gt;count&lt;/span&gt;&lt;span&gt;(*)&lt;/span&gt; from arrival_record where product_id&lt;/span&gt;=&lt;span&gt;26&lt;/span&gt; and receive_time between &lt;span&gt;&#x27;2019-03-25 14:00:00&#x27;&lt;/span&gt; and &lt;span&gt;&#x27;2019-03-25 15:00:00&#x27;&lt;/span&gt; and receive_spend_ms&amp;gt;=&lt;span&gt;0&lt;/span&gt;\G;&lt;br/&gt;*************************** &lt;span&gt;1&lt;/span&gt;. row ***************************&lt;br/&gt;id: &lt;span&gt;1&lt;/span&gt;&lt;br/&gt;select_type: SIMPLE&lt;br/&gt;table: arrival_record&lt;br/&gt;partitions: NULL&lt;br/&gt;type: range&lt;br/&gt;possible_keys: idx_product_id_sequence_station_no,idx_receive_time&lt;br/&gt;key: idx_receive_time&lt;br/&gt;key_len: &lt;span&gt;6&lt;/span&gt;&lt;br/&gt;ref: NULL&lt;br/&gt;rows: &lt;span&gt;291448&lt;/span&gt;&lt;br/&gt;filtered: &lt;span&gt;16.66&lt;/span&gt;&lt;br/&gt;Extra: Using index condition; Using where&lt;br/&gt;都使用到了idx_receive_time 索引，扫描的行数大大降低&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;delete 还是花费了77s时间&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;delete from arrival_record where receive_time &amp;lt; STR_TO_DATE(&lt;span&gt;&#x27;2019-03-10&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;%Y-%m-%d&#x27;&lt;/span&gt;)\G&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.31767955801104975&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdLkEI9sZfdqxOUJEKOZjFwBZV5qAibLJNITLjpW92IOib0nULfUvKYtQicEzcWuPelHiabCT7ZibpZEGMHtibibkXLhw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;724&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/figure&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;delete 语句通过receive_time的索引删除300多万的记录花费77s时间*&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;*&lt;strong&gt;应用端已优化成每次删除10分钟的数据（每次执行时间1s左右），xxx中没在出现SLA（主从延迟告警）&lt;/strong&gt; *&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6502525252525253&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdLkEI9sZfdqxOUJEKOZjFwBZV5qAibLJLth6eY0eu607qVQhsxUrI6uNMQrGFkohRbU3Y3GoAH5J4cy8DsIQ8w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;792&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;*&lt;strong&gt;另一个方法是通过主键的顺序每次删除20000条记录&lt;/strong&gt; *&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;#得到满足时间条件的最大主键ID&lt;br/&gt;#通过按照主键的顺序去 顺序扫描小批量删除数据&lt;br/&gt;#先执行一次以下语句&lt;br/&gt; &lt;span&gt;SELECT &lt;span&gt;MAX&lt;/span&gt;&lt;span&gt;(id)&lt;/span&gt; INTO @need_delete_max_id FROM `arrival_record` WHERE receive_time&amp;lt;&#x27;2019-03-01&#x27; &lt;/span&gt;;&lt;br/&gt; DELETE FROM arrival_record WHERE id&amp;lt;&lt;span&gt;@need&lt;/span&gt;_delete_max_id LIMIT &lt;span&gt;20000&lt;/span&gt;;&lt;br/&gt; &lt;span&gt;select &lt;span&gt;ROW_COUNT&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;&lt;/span&gt;;  #返回&lt;span&gt;20000&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;#执行小批量delete后会返回row_count(), 删除的行数&lt;br/&gt;#程序判断返回的row_count()是否为&lt;span&gt;0&lt;/span&gt;，不为&lt;span&gt;0&lt;/span&gt;执行以下循环，为&lt;span&gt;0&lt;/span&gt;退出循环，删除操作完成&lt;br/&gt; DELETE FROM arrival_record WHERE id&amp;lt;&lt;span&gt;@need&lt;/span&gt;_delete_max_id LIMIT &lt;span&gt;20000&lt;/span&gt;;&lt;br/&gt; &lt;span&gt;select &lt;span&gt;ROW_COUNT&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;br/&gt;#程序睡眠&lt;span&gt;0.5&lt;/span&gt;s&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;表数据量太大时，除了关注访问该表的响应时间外，还要关注对该表的维护成本（如做DDL表更时间太长，delete历史数据）。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;对大表进行DDL操作时，要考虑表的实际情况（如对该表的并发表，是否有外键）来选择合适的DDL变更方式。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;对大数据量表进行delete，用小批量删除的方式，减少对主实例的压力和主从延迟。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>04ed93d392752fb7b5879adc62b97d1d</guid>
<title>这些“电脑常识”竟然不是常识？</title>
<link>https://toutiao.io/k/wrvewu8</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;profile_inner&quot;&gt;
                  &lt;strong class=&quot;profile_nickname&quot;&gt;科技狐&lt;/strong&gt;
                  &lt;img class=&quot;profile_avatar&quot; id=&quot;js_profile_qrcode_img&quot; src=&quot;&quot; alt=&quot;&quot;/&gt;

                  &lt;p class=&quot;profile_meta&quot;&gt;
                  &lt;label class=&quot;profile_meta_label&quot;&gt;Weixin ID&lt;/label&gt;
                  &lt;span class=&quot;profile_meta_value&quot;&gt;kejihutv&lt;/span&gt;
                  &lt;/p&gt;

                  &lt;p class=&quot;profile_meta&quot;&gt;
                  &lt;label class=&quot;profile_meta_label&quot;&gt;About Feature&lt;/label&gt;
                  &lt;span class=&quot;profile_meta_value&quot;&gt;科技狐，让科技简单点。&lt;/span&gt;
                  &lt;/p&gt;
                &lt;/div&gt;
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>64e90924e72a6753b9d08a742327afa9</guid>
<title>《程序员数学：素数》：你真的了解 RSA 加密算法吗？</title>
<link>https://toutiao.io/k/e6wsl14</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;一、什么是素数&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;二、对称加密和非对称加密&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;三、算法公式推导&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;四、关于RSA算法&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;五、实现RSA算法&lt;/p&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;1. 互为质数的p、q&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;2. 乘积n&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;3.  欧拉公式 φ(n)&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;4. 选取公钥e&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;5. 选取私钥d&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;6. 加密&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;7. 解密&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;8. 测试&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;p&gt;六、RSA数学原理&lt;/p&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;1. 模运算&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;2. 最大公约数&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;3. 线性同余方程&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;4. 中国余数定理&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;5. 费马小定理&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;6. 算法证明&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;p&gt;七、常见面试题&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;hr/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;记得那是我毕业🎓后的第一个秋天，申请了域名，搭建了论坛。可惜好景不长，没多久进入论坛后就出现各种乱七八糟的广告，而这些广告压根都不是我加的。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5283505154639175&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/zTfAIs5rNXiaG8icOYvw60oGtDk20C2Jicl0m2BFc9ic7fyWtZ2DPXhHMMUvdgoqz3jS6aQ1UDpNjF4SGs86JVDFAA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;776&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这是怎么回事？后来我才知道，原来我的论坛没有加 HTTPS 也就是没有 SSL 证书。那这和数学中的素数有啥关系呢？这是因为每一个 SSL 的生成都用到了 RSA 非对称加密，而 RSA 的加解密就是使用了两个互为质数的大素数生成公钥和私钥的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这就是我们今天要分享的，关于素数在 RSA 算法中的应用。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;一、什么是素数&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;素数（或质数）指的是大于1的且不能通过两个较小的自然数乘积得来的自然数。而大于1的自然数如果不是素数，则称之为合数。例如：7是素数，因为它的成绩只能写成 &lt;code&gt;1 * 7&lt;/code&gt; 或者 &lt;code&gt;7 * 1&lt;/code&gt; 这样。而像自然数 8 可以写成 &lt;code&gt;2 * 4&lt;/code&gt;，因为它是两个较小数字的乘积。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通常在 Java 程序中，我们可以使用下面的代码判断一个数字是否为素数；&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;boolean&lt;/span&gt; isPrime = number &amp;gt; &lt;span&gt;0&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;// 计算number的平方根为k，可以减少一半的计算量&lt;/span&gt;&lt;br/&gt;&lt;span&gt;int&lt;/span&gt; k = (&lt;span&gt;int&lt;/span&gt;) Math.sqrt(number);&lt;br/&gt;&lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = &lt;span&gt;2&lt;/span&gt;; i &amp;lt;= k; i++) {&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (number % i == &lt;span&gt;0&lt;/span&gt;) {&lt;br/&gt;        isPrime = &lt;span&gt;false&lt;/span&gt;;&lt;br/&gt;        &lt;span&gt;break&lt;/span&gt;;&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;span&gt;return&lt;/span&gt; isPrime;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;二、对称加密和非对称加密&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;假如 Alice 时而需要给北漂搬砖的 Bob 发一些信息，为了安全起见两个人相互协商了一个加密的方式。比如 Alice 发送了一个银行卡密码 &lt;code&gt;142857&lt;/code&gt; 给 Bob，Alice 会按照与 Bob 的协商方式，把 &lt;code&gt;142857&lt;/code&gt; * &lt;code&gt;2&lt;/code&gt; = &lt;code&gt;285714&lt;/code&gt; 的结果传递给 Bob，之后 Bob 再通过把信息除以2拿到结果。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但一来二去，Alice 发的密码、生日、衣服尺寸、鞋子大小，都是乘以2的规律被别人发现。这下这个加密方式就不安全了。而如果每次都给不同的信息维护不同的秘钥又十分麻烦，且这样的秘钥为了安全也得线下沟通，人力成本又非常高。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以有没有另外一种方式，使用不同的秘钥对信息的加密和解密。当 Bob 想从 Alice 那获取信息，那么 Bob 就给 Alice 一个公钥，让她使用公钥对信息进行加密，而加密后的信息只有 Bob 手里有私钥才能解开。那么这样的信息传递就变得非常安全了。如图所示。&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;对称加密&lt;/th&gt;&lt;th&gt;非对称加密&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/zTfAIs5rNXiaG8icOYvw60oGtDk20C2JiclgKNOFgVZj2BcWCy2SdhPXQWDZZNicnTEtPCc50vgJJtxDbS9icyE09Zg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;504&quot;/&gt;&lt;/td&gt;&lt;td&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/zTfAIs5rNXiaG8icOYvw60oGtDk20C2JiclBG3OxbjIDyeEtQicCEyZ6jYuAUntsvDkPa13Cl8ufYaFpWTvGNRMqibA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;504&quot;/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;三、算法公式推导&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.2925851703406814&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/zTfAIs5rNXiaG8icOYvw60oGtDk20C2JiclicsHGTuQfyxRyQY3s00YvysvmPnHyoKicGn9vFVP2tiap0pehXrrfMLcQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;998&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果 Alice 希望更安全的给 Bob 发送的信息，那么就需要保证经过公钥加密的信息不那么容易被反推出来。所以这里的信息加密，会需用到求模运算。像计算机中的散列算法，伪随机数都是求模运算的典型应用。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;例如；&lt;code&gt;5^3 mod 7 = 6&lt;/code&gt; —— 5的3次幂模7余6&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;5相当于 Alice 要传递给 Bob 的信息&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;3相当于是秘钥&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;6相当于是加密后的信息&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;经过求模计算的结果6，很难被推到出秘钥信息，只能一个个去验证；&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;5&lt;/span&gt;^&lt;span&gt;1&lt;/span&gt; mod &lt;span&gt;7&lt;/span&gt; = &lt;span&gt;5&lt;/span&gt;&lt;br/&gt;&lt;span&gt;5&lt;/span&gt;^&lt;span&gt;2&lt;/span&gt; mod &lt;span&gt;7&lt;/span&gt; = &lt;span&gt;3&lt;/span&gt;&lt;br/&gt;&lt;span&gt;5&lt;/span&gt;^&lt;span&gt;3&lt;/span&gt; mod &lt;span&gt;7&lt;/span&gt; = &lt;span&gt;6&lt;/span&gt;&lt;br/&gt;&lt;span&gt;5&lt;/span&gt;^&lt;span&gt;4&lt;/span&gt; mod &lt;span&gt;7&lt;/span&gt; = &lt;span&gt;2&lt;/span&gt;&lt;br/&gt;...&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但如果求模的值特别大，例如这样：&lt;code&gt;5^3 mod 78913949018093809389018903794894898493... = 6&lt;/code&gt; 那么再想一个个计算就有不靠谱了。所以这也是为什么会使用模运算进行加密，因为对于大数来说对模运算求逆根本没法搞。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;根据求模的计算方式，我们得到加密和解密公式；—— &lt;em&gt;关于加密和解密的公式推到，后文中会给出数学计算公式。&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.712&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/zTfAIs5rNXiaG8icOYvw60oGtDk20C2JiclVSQ2Gm1Fvv17ZatjZCCZubFX9yZ8C413qwJEWcczHd7ib1QJI12qwsQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;750&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于两个公式我们做一下更简单的转换；&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.33497536945812806&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/zTfAIs5rNXiaG8icOYvw60oGtDk20C2JicllTV1FVrwZCbTN5XwnIDGiaWma9wZYyRB41TA4P9bbUdWleHsCAzq9Bg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;812&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从转换后的公式可以得知，m 的 ed 次幂，除以 N 求求模可以得到 m 本身。那么 ed 就成了计算公钥加密的重要因素。为此这里需要提到数学中一个非常重要的定理，欧拉定理。—— 1763年，欧拉发现。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;欧拉定理：m^φ(n) ≡ 1 (mod n)  对于任何一个与 n 互质的正整数 m，的 φ(n) 次幂并除以 n 去模，结果永远等于1。φ(n)  代表着在小于等于 n 的正整数中，有多少个与 n 互质的数。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;例如：φ(8) 小于等于8的正整数中 &lt;code&gt;1、2、3、4、5、6、7、8&lt;/code&gt; 有 1、3、5、7 与数字 8 互为质数。所以 φ(8) = 4 但如果是 n 是质数，那么 φ(n) = n - 1 比如 φ(7) 与7互为质数有1、2、3、4、5、6 所有 φ(7) = 6&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;接下来我们对欧拉公式做一些简单的变换，用于看出ed的作用；&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8848080133555927&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/zTfAIs5rNXiaG8icOYvw60oGtDk20C2Jiclb1xhcJypymQze4BUDpficBhM9erqQbdNgEEnbI3V9JB7rO2RZJgkQ4A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1198&quot;/&gt;&lt;/p&gt;经过推导的结果可以看到 ed = kφ(n) + 1，这样只要算出加密秘钥 e 就可以得到一个对应的解密秘钥 d。那么整套这套计算过程，就是 RSA 算法。&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;四、关于RSA算法&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;RSA加密算法&lt;/strong&gt;是一种非对称加密算法，在公开秘钥加密和电子商业中被广泛使用。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7010752688172043&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_jpg/zTfAIs5rNXiaG8icOYvw60oGtDk20C2Jicln72a0XOlA1KiaOibHUKibANl6DYFrS3xicOWxXWGeibThasrh3pXUQBdvng/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;465&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;于1977年，三位数学家；罗纳德·李维斯特（Ron Rivest）、阿迪·萨莫尔（Adi Shamir）和伦纳德·阿德曼（Leonard Adleman）设计了一种算法，可以实现非对称加密。这种算法用他们三个人的名字命名，叫做RSA算法。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1973年，在英国政府通讯总部工作的数学家克利福德·柯克斯（Clifford Cocks）在一个内部文件中提出了一个与之等效的算法，但该算法被列入机密，直到1997年才得到公开。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;RSA 的算法核心在于取了2个素数做乘积求和、欧拉计算等一系列方式算得公钥和私钥，但想通过公钥和加密信息，反推出来私钥就会非常复杂，因为这是相当于对极大整数的因数分解。所以秘钥越长做因数分解越困难，这也就决定了 RSA 算法的可靠性。—— PS：可能以上这段话还不是很好理解，程序员👨🏻‍💻还是要看代码才能悟。接下来我们就来编写一下 RSA 加密代码。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;五、实现RSA算法&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;RSA 的秘钥生成首先需要两个质数p、q，之后根据这两个质数算出公钥和私钥，在根据公钥来对要传递的信息进行加密。接下来我们就要代码实现一下 RSA 算法，读者也可以根据代码的调试去反向理解 RSA 的算法过程，一般这样的学习方式更有抓手的感觉。&lt;em&gt;嘿嘿 抓手&lt;/em&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;1. 互为质数的p、q&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;两个互为质数p、q是选择出来的，越大越安全。因为大整数的质因数分解是非常困难的，直到2020年为止，世界上还没有任何可靠的攻击RSA算法的方式。只要其钥匙的长度足够长，用RSA加密的信息实际上是不能被破解的。—— 不知道量子计算机出来以后会不会改变。如果改变，那么程序员又有的忙了。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2. 乘积n&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;n = p * q 的乘积。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;long&lt;/span&gt; &lt;span&gt;n&lt;/span&gt;&lt;span&gt;(&lt;span&gt;long&lt;/span&gt; p, &lt;span&gt;long&lt;/span&gt; q)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; p * q;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3.  欧拉公式 φ(n)&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;φ(n) = (p - 1) * (q - 1)&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;long&lt;/span&gt; &lt;span&gt;euler&lt;/span&gt;&lt;span&gt;(&lt;span&gt;long&lt;/span&gt; p, &lt;span&gt;long&lt;/span&gt; q)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; (p - &lt;span&gt;1&lt;/span&gt;) * (q - &lt;span&gt;1&lt;/span&gt;);&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;4. 选取公钥e&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;e 的值范围在 1 &amp;lt; e &amp;lt; φ(n)&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;long&lt;/span&gt; &lt;span&gt;e&lt;/span&gt;&lt;span&gt;(&lt;span&gt;long&lt;/span&gt; euler)&lt;/span&gt;&lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;long&lt;/span&gt; e = euler / &lt;span&gt;10&lt;/span&gt;;&lt;br/&gt;    &lt;span&gt;while&lt;/span&gt; (gcd(e, euler) != &lt;span&gt;1&lt;/span&gt;){&lt;br/&gt;        e ++;&lt;br/&gt;    }&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; e;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;5. 选取私钥d&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;d = (kφ(n) + 1) / e&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;long&lt;/span&gt; &lt;span&gt;inverse&lt;/span&gt;&lt;span&gt;(&lt;span&gt;long&lt;/span&gt; e, &lt;span&gt;long&lt;/span&gt; euler)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; (euler + &lt;span&gt;1&lt;/span&gt;) / e;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;6. 加密&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;c = m^e mod n&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;long&lt;/span&gt; &lt;span&gt;encrypt&lt;/span&gt;&lt;span&gt;(&lt;span&gt;long&lt;/span&gt; m, &lt;span&gt;long&lt;/span&gt; e, &lt;span&gt;long&lt;/span&gt; n)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    BigInteger bM = &lt;span&gt;new&lt;/span&gt; BigInteger(String.valueOf(m));&lt;br/&gt;    BigInteger bE = &lt;span&gt;new&lt;/span&gt; BigInteger(String.valueOf(e));&lt;br/&gt;    BigInteger bN = &lt;span&gt;new&lt;/span&gt; BigInteger(String.valueOf(n));&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; Long.parseLong(bM.modPow(bE, bN).toString());&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;7. 解密&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;m = c^d mod n&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;long&lt;/span&gt; &lt;span&gt;decrypt&lt;/span&gt;&lt;span&gt;(&lt;span&gt;long&lt;/span&gt; c, &lt;span&gt;long&lt;/span&gt; d, &lt;span&gt;long&lt;/span&gt; n)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    BigInteger bC = &lt;span&gt;new&lt;/span&gt; BigInteger(String.valueOf(c));&lt;br/&gt;    BigInteger bD = &lt;span&gt;new&lt;/span&gt; BigInteger(String.valueOf(d));&lt;br/&gt;    BigInteger bN = &lt;span&gt;new&lt;/span&gt; BigInteger(String.valueOf(n));&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; Long.parseLong(bC.modPow(bD, bN).toString());&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;8. 测试&lt;span/&gt;&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;@Test&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;test_rsa&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    RSA rsa = &lt;span&gt;new&lt;/span&gt; RSA();&lt;br/&gt;    &lt;span&gt;long&lt;/span&gt; p = &lt;span&gt;3&lt;/span&gt;,                         &lt;span&gt;// 选取2个互为质数的p、q&lt;/span&gt;&lt;br/&gt;            q = &lt;span&gt;11&lt;/span&gt;,                     &lt;span&gt;// 选取2个互为质数的p、q&lt;/span&gt;&lt;br/&gt;            n = rsa.n(p, q),            &lt;span&gt;// n = p * q&lt;/span&gt;&lt;br/&gt;            euler = rsa.euler(p, q),    &lt;span&gt;// euler = (p-1)*(q-1)&lt;/span&gt;&lt;br/&gt;            e = rsa.e(euler),           &lt;span&gt;// 互为素数的小整数e | 1 &amp;lt; e &amp;lt; euler&lt;/span&gt;&lt;br/&gt;            d = rsa.inverse(e, euler),  &lt;span&gt;// ed = φ(n) + 1 | d = (φ(n) + 1)/e&lt;/span&gt;&lt;br/&gt;            msg = &lt;span&gt;5&lt;/span&gt;;                    &lt;span&gt;// 传递消息 5&lt;/span&gt;&lt;br/&gt;            &lt;br/&gt;    System.out.println(&lt;span&gt;&quot;消息：&quot;&lt;/span&gt; + msg);&lt;br/&gt;    System.out.println(&lt;span&gt;&quot;公钥(n,e)：&quot;&lt;/span&gt; + &lt;span&gt;&quot;(&quot;&lt;/span&gt; + n + &lt;span&gt;&quot;,&quot;&lt;/span&gt; + e + &lt;span&gt;&quot;)&quot;&lt;/span&gt;);&lt;br/&gt;    System.out.println(&lt;span&gt;&quot;私钥(n,d)：&quot;&lt;/span&gt; + &lt;span&gt;&quot;(&quot;&lt;/span&gt; + n + &lt;span&gt;&quot;,&quot;&lt;/span&gt; + d + &lt;span&gt;&quot;)&quot;&lt;/span&gt;);&lt;br/&gt;    &lt;br/&gt;    &lt;span&gt;long&lt;/span&gt; encrypt = rsa.encrypt(msg, e, n);&lt;br/&gt;    System.out.println(&lt;span&gt;&quot;加密（消息）：&quot;&lt;/span&gt; + encrypt);&lt;br/&gt;    &lt;br/&gt;    &lt;span&gt;long&lt;/span&gt; decrypt = rsa.decrypt(encrypt, d, n);&lt;br/&gt;    System.out.println(&lt;span&gt;&quot;解密（消息）：&quot;&lt;/span&gt; + decrypt);&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;测试结果&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;消息：&lt;span&gt;5&lt;/span&gt;&lt;br/&gt;公钥(n,e)：(&lt;span&gt;33&lt;/span&gt;,&lt;span&gt;3&lt;/span&gt;)&lt;br/&gt;私钥(n,d)：(&lt;span&gt;33&lt;/span&gt;,&lt;span&gt;7&lt;/span&gt;)&lt;br/&gt;加密（消息）：&lt;span&gt;26&lt;/span&gt;&lt;br/&gt;解密（消息）：&lt;span&gt;5&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;通过选取3、11作为两个互质数，计算出公钥和私钥，分别进行消息的加密和解密。如测试结果消息5的加密后的信息是26，解密后获得原始信息5&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;六、RSA数学原理&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;整个 RSA 的加解密是有一套数学基础可以推导验证的，这里小傅哥把学习整理的资料分享给读者，如果感兴趣可以尝试验证。这里的数学公式会涉及到；求模运算、最大公约数、贝祖定理、线性同于方程、中国余数定理、费马小定理。当然还有一些很基础的数论概念；素数、互质数等。以下推理数学内容来自博客：https://luyuhuang.tech/2019/10/24/mathematics-principle-of-rsa-algorithm.html&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;1. 模运算&lt;span/&gt;&lt;/h3&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;1.1 整数除法&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;定理 1&lt;/strong&gt; 令 a 为整数, d 为正整数, 则存在唯一的整数 q 和 r, 满足 0⩽r&amp;lt;d0⩽r&amp;lt;d, 使得 a=dq+ra=dq+r.&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当 r=0r=0 时, 我们称 d 整除 a, 记作 d∣ad∣a; 否则称 d 不整除 a, 记作 d∤ad∤a&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;整除有以下基本性质:&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;定理 2&lt;/strong&gt; 令 a, b, c 为整数, 其中 a≠0a≠0. 则:&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;如果 a∣ba∣b 且 a∣ca∣c, 则 a∣(b+c)a∣(b+c)&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果 a∣ba∣b, 则对于所有整数 c 都有 a∣bca∣bc&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果 a∣ba∣b 且 b∣cb∣c, 则 a∣ca∣c&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;1.2 模算术&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在数论中我们特别关心一个整数被一个正整数除时的余数. 我们用 a mod m = b a mod m = b 表示整数 a 除以正整数 m 的余数是 b. 为了表示两个整数被一个正整数除时的余数相同, 人们又提出了&lt;strong&gt;同余式(congruence)&lt;/strong&gt;.&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;定义 1&lt;/strong&gt; 如果 a 和 b 是整数而 m 是正整数, 则当 m 整除 a - b 时称 a 模 m 同余 b. 记作 a ≡ b(mod m)&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;a ≡ b(mod m) 和 a mod m= b 很相似. 事实上, 如果 a mod m = b, 则 a≡b(mod m). 但他们本质上是两个不同的概念. a mod m = b 表达的是一个函数, 而 a≡b(mod m) 表达的是两个整数之间的关系.&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;模算术有下列性质:&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;定理 3&lt;/strong&gt; 如果 m 是正整数, a, b 是整数, 则有&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;(a+b)mod m=((a mod m)+(b mod m)) mod m&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;ab mod m=(a mod m)(b mod m) mod m&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;根据定理3, 可得以下推论&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;推论 1&lt;/strong&gt; 设 m 是正整数, a, b, c 是整数; 如果 a ≡ b(mod m), 则 ac ≡ bc(mod m)&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;证明&lt;/strong&gt; ∵ a ≡ b(mod m), ∴ (a−b) mod m=0 . 那么&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;(ac−bc) mod m=c(a−b) mod m=(c mod m⋅(a−b) mod m) mod m=0&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;∴ ac ≡ bc(mod m)&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;需要注意的是, 推论1反之不成立. 来看推论2:&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;推论 2&lt;/strong&gt; 设 m 是正整数, a, b 是整数, c 是不能被 m 整除的整数; 如果 ac ≡ bc(mod m) , 则 a ≡ b(mod m)&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;证明&lt;/strong&gt; ∵ ac ≡ bc(mod m)  , 所以有&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;(ac−bc)mod m=c(a−b)mod m=(c mod m⋅(a−b)mod m) mod m=0&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;∵ c mod m≠0 ,&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;∴ (a−b) mod m=0,&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;∴a ≡ b(mod m) .&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2. 最大公约数&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果一个整数 d 能够整除另一个整数 a, 则称 d 是 a 的一个&lt;strong&gt;约数(divisor)&lt;/strong&gt;; 如果 d 既能整除 a 又能整除 b, 则称 d 是 a 和 b 的一个&lt;strong&gt;公约数(common divisor)&lt;/strong&gt;. 能整除两个整数的最大整数称为这两个整数的&lt;strong&gt;最大公约数(greatest common divisor)&lt;/strong&gt;.&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;定义 2&lt;/strong&gt; 令 a 和 b 是不全为零的两个整数, 能使 d∣ad∣a 和 d∣bd∣b 的最大整数 d 称为 a 和 b 的&lt;strong&gt;最大公约数&lt;/strong&gt;. 记作 gcd(a,b)&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.1 求最大公约数&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如何求两个已知整数的最大公约数呢? 这里我们讨论一个高效的求最大公约数的算法, 称为&lt;strong&gt;辗转相除法&lt;/strong&gt;. 因为这个算法是欧几里得发明的, 所以也称为&lt;strong&gt;欧几里得算法&lt;/strong&gt;. 辗转相除法基于以下定理:&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;引理 1&lt;/strong&gt; 令 a=bq+r, 其中 a, b, q 和 r 均为整数. 则有 gcd(a,b)=gcd(b,r)&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;证明&lt;/strong&gt; 我们假设 d 是 a 和 b 的公约数, 即 d∣a且 d∣b, 那么根据定理2, d 也能整除 a−bq=r 所以 a 和 b 的任何公约数也是 b 和 r 的公约数;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;类似地, 假设 d 是 b 和 r 的公约数, 即 d∣bd∣b 且 d∣rd∣r, 那么根据定理2, d 也能整除 a=bq+r. 所以 b 和 r 的任何公约数也是 a 和 b 的公约数;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;因此, a 与 b 和 b 与 r 拥有相同的公约数. 所以 gcd(a,b)=gcd(b,r).&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;辗转相除法&lt;/strong&gt;就是利用引理1, 把大数转换成小数. 例如, 求 gcd(287,91) 我们就把用较大的数除以较小的数. 首先用 287 除以 91, 得&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;287=91⋅3+14&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们有 gcd(287,91)=gcd(91,14) . 问题转换成求 gcd(91,14). 同样地, 用 91 除以 14, 得&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;91=14⋅6+7&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有 gcd(91,14)=gcd(14,7) . 继续用 14 除以 7, 得&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;14=7⋅2+0&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;因为 7 整除 14, 所以 gcd(14,7)=7. 所以 gcd(287,91)=gcd(91,14)=gcd(14,7)=7.&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们可以很快写出辗转相除法的代码:&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;def gcd(a, b):&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; b == 0: &lt;span&gt;return&lt;/span&gt; a&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; gcd(b, a % b)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.2 贝祖定理&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;现在我们讨论最大公约数的一个重要性质:&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;定理 4&lt;/strong&gt; &lt;strong&gt;贝祖定理&lt;/strong&gt; 如果整数 a, b 不全为零, 则 gcd(a,b)是 a 和 b 的线性组合集 {ax+by∣x,y∈Z}中最小的元素. 这里的 x 和 y 被称为&lt;strong&gt;贝祖系数&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;证明&lt;/strong&gt; 令 A={ax+by∣x,y∈Z}. 设存在 x0x0, y0y0 使 d0d0 是 A 中的最小正元素, d0=ax0+by0 现在用 d0去除 a, 这就得到唯一的整数 q(商) 和 r(余数) 满足&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.29086538461538464&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/zTfAIs5rNXiaG8icOYvw60oGtDk20C2Jicl0MASOMX9rPha5QGGaRiarazh04ricQkicwhzdWxwCtdpO7eicAGBuwqY0w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;832&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;又 0⩽r&amp;lt;d0, d0 是 A 中最小正元素&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;∴ r=0 , d0∣a.&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;同理, 用 d0d0 去除 b, 可得 d0∣b. 所以说 d0 是 a 和 b 的公约数.&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;设 a 和 b 的最大公约数是 d, 那么 d∣(ax0+by0)即 d∣d0&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;∴∴ d0 是 a 和 b 的最大公约数.&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们可以对辗转相除法稍作修改, 让它在计算出最大公约数的同时计算出贝祖系数.&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;def gcd(a, b):&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; b == 0: &lt;span&gt;return&lt;/span&gt; a, 1, 0&lt;br/&gt;    d, x, y = gcd(b, a % b)&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; d, y, x - (a / b) * y&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3. 线性同余方程&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;现在我们来讨论求解形如 ax≡b(modm)a 的线性同余方程. 求解这样的线性同余方程是数论研究及其应用中的一项基本任务. 如何求解这样的方程呢? 我们要介绍的一个方法是通过求使得方程 ¯aa≡1(modm) 成立的整数 ¯aa¯. 我们称 ¯a 为 a 模 m 的逆. 下面的定理指出, 当 a 和 m 互素时, a 模 m 的逆必然存在.&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;定理 5&lt;/strong&gt; 如果 a 和 m 为互素的整数且 m&amp;gt;1m&amp;gt;1, 则 a 模 m 的逆存在, 并且是唯一的.&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;证明&lt;/strong&gt; 由贝祖定理可知, ∵ gcd(a,m)=1gcd(a,m)=1 , ∴ 存在整数 x 和 y 使得 ax+my=1 这蕴含着 ax+my≡1(modm) ∵ my≡0(modm), 所以有 ax≡1(modm)&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;∴ x 为 a 模 m 的逆.&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这样我们就可以调用辗转相除法 gcd(a, m) 求得 a 模 m 的逆.&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;a 模 m 的逆也被称为 a 在模m乘法群 Z∗mZm∗ 中的&lt;strong&gt;逆元&lt;/strong&gt;. 这里我并不想引入群论, 有兴趣的同学可参阅算法导论&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;求得了 a 模 m 的逆 ¯a 现在我们可以来解线性同余方程了. 具体的做法是这样的: 对于方程 ax≡b(modm)a , 我们在方程两边同时乘上 ¯a, 得 ¯aax≡¯ab(modm)&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;把 ¯aa≡1(modm) 带入上式, 得 x≡¯ab(modm)&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;x≡¯ab(modm) 就是方程的解. 注意同余方程会有无数个整数解, 所以我们用同余式来表示同余方程的解.&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.21464019851116625&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/zTfAIs5rNXiaG8icOYvw60oGtDk20C2JiclWUDuEZic8M9jeKW1o3AGavI1UmbfankXf4crnice2yibujMpIhT5DCsnA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1612&quot;/&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;4. 中国余数定理&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;中国南北朝时期数学著作 孙子算经 中提出了这样一个问题:&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;有物不知其数，三三数之剩二，五五数之剩三，七七数之剩二。问物几何？&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用现代的数学语言表述就是: 下列同余方程组的解释多少?&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.536144578313253&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/zTfAIs5rNXiaG8icOYvw60oGtDk20C2JiclGiaEpUgyXqsHMKyFibKQ3WdgXnRAGb4N8k5ZJUufKZpPhhicR7wgrXjQQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;332&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;em&gt;孙子算经&lt;/em&gt; 中首次提到了同余方程组问题及其具体解法. 因此中国剩余定理称为孙子定理.&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;定理 6&lt;/strong&gt; &lt;strong&gt;中国余数定理&lt;/strong&gt; 令 m1,m2,…,mn 为大于 1 且两两互素的正整数, a1,a2,…,an 是任意整数. 则同余方程组&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5935828877005348&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/zTfAIs5rNXiaG8icOYvw60oGtDk20C2Jiclx3ibYiczJMicibNL87nAop2PEVvCompGiaoQ9Bg29DmvvD9FZeEdCburOYg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;374&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有唯一的模 m=m1m2…mn 的解.&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;证明&lt;/strong&gt; 我们使用构造证明法, 构造出这个方程组的解. 首先对于 i=1,2,…,n, 令&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4057971014492754&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/zTfAIs5rNXiaG8icOYvw60oGtDk20C2Jicl5BJxXSIDty6Fpnl2Sic9u5bFW5lsWuEY27ZUKMbWsIwN52UKGp2nZDQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;276&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;即, MiMi 是除了 mimi 之外所有模数的积. ∵ m1,m2,…,mn 两两互素, ∴ gcd(mi,Mi)=1. 由定理 5 可知, 存在整数 yi 是 Mi 模 mi 的逆. 即&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.14410480349344978&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/zTfAIs5rNXiaG8icOYvw60oGtDk20C2JiclQcOWWNygBXokCTJMiaTpjOG840puv8XiaCA5n3icIdYwtu5ZhT6rfThkg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;458&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上式等号两边同时乘 ai 得&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.15126050420168066&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/zTfAIs5rNXiaG8icOYvw60oGtDk20C2JiclEXpMICN9EEw4T1QV6YEVGlpbexG8S7Qt9d6FAU5aEGIiby2ucF7JTqg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;476&quot;/&gt;&lt;span&gt;就是第 i 个方程的一个解; 那么怎么构造出方程组的解呢? 我们注意到, 根据 Mi 的定义可得, 对所有的 j≠i, 都有 aiMiyi≡0(modmj). 因此我们令&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.13302752293577982&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/zTfAIs5rNXiaG8icOYvw60oGtDk20C2Jicl0cdrdGoNn6rUDLSZvmArfnsianT1vkamicjZmZzydmUjSwT00lz21tuw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;872&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;就是方程组的解.&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有了这个结论, 我们可以解答 &lt;em&gt;孙子算经&lt;/em&gt; 中的问题了: 对方程组的每个方程, 求出 Mi , 然后调用 &lt;code&gt;gcd(M_i, m_i)&lt;/code&gt; 求出 yi:&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.29289940828402367&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/zTfAIs5rNXiaG8icOYvw60oGtDk20C2Jicl2iaWmvBULRMwE7MnEvcibnAj7rzLFfO7UOI1lfCbf8GGlr07YAian4OOg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;676&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最后求出 x=−2⋅35+3⋅21+2⋅15=23≡23(mod105)&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;5. 费马小定理&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;现在我们来看数论中另外一个重要的定理, &lt;strong&gt;费马小定理(Fermat&#x27;s little theorem)&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;定理 7&lt;/strong&gt; &lt;strong&gt;费马小定理&lt;/strong&gt; 如果 a 是一个整数, p 是一个素数, 那么&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3291492329149233&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/zTfAIs5rNXiaG8icOYvw60oGtDk20C2Jicl2jCxnNHC2icB2D2tIHyWyNCFtvvptaabu55WIv6qyXoHjGTicGVibEUDA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1434&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当 n 不为 p 或 0 时, 由于分子有质数p, 但分母不含p; 故分子的p能保留, 不被约分而除去. 即 p∣(np).&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;令 b 为任意整数, 根据二项式定理, 我们有&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7340686274509803&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/zTfAIs5rNXiaG8icOYvw60oGtDk20C2JiclibmbuFAH6ibED9bAv9l1M70nBPgRrdfO0GQkLolC4eQ8Kle9eTRL3mYg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1632&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;令 a=b+1, 即得 a^p ≡ a(mod p)&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当 p 不整除 a 时, 根据推论 2, 有 a^p−1 ≡ 1(mod p)&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;6. 算法证明&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们终于可以来看 RSA 算法了. 先来看 RSA 算法是怎么运作的:&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;RSA 算法按照以下过程创建公钥和私钥:&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;随机选取两个大素数 p 和 q, p≠qp≠q;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;计算 n=pq&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;选取一个与 (p−1)(q−1) 互素的小整数 e;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;求 e 模 (p−1)(q−1) 的逆, 记作 d;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;将 P=(e,n)公开, 是为公钥;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;将 S=(d,n)保密, 是为私钥.&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8503480278422274&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/zTfAIs5rNXiaG8icOYvw60oGtDk20C2Jicl51IUQtxJ0zX5d2R0cY1nEDkKt7KiasG9qAOPX6tHcG7JgfuyFmkaLdw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1724&quot;/&gt;&lt;/p&gt;所以 RSA 加密算法是有效的.&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;(1) 式表明, 不仅可以用公钥加密, 私钥解密, 还可以用私钥加密, 公钥解密. 即加密计算 C=M^d mod n, 解密计算 M=C^e mod n&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;RSA 算法的安全性基于大整数的质因数分解的困难性. 由于目前没有能在多项式时间内对整数作质因数分解的算法, 因此无法在可行的时间内把 n 分解成 p 和 q 的乘积. 因此就无法求得 e 模 (p−1)(q−1)的逆, 也就无法根据公钥计算出私钥.&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;七、常见面试题&lt;/span&gt;&lt;/h2&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;质数的用途&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;RSA 算法描述&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;RSA 算法加解密的过程&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;RSA 算法使用场景&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;你了解多少关于 RSA 的数学数论知识&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;RSA加密算法：https://zh.wikipedia.org/wiki/RSA%E5%8A%A0%E5%AF%86%E6%BC%94%E7%AE%97%E6%B3%95&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;RSA算法原理：https://www.ruanyifeng.com/blog/2013/07/rsa_algorithm_part_two.html&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;RSA算法背后的数学原理：https://luyuhuang.tech/2019/10/24/mathematics-principle-of-rsa-algorithm.html&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;莱昂哈德·欧拉：https://en.wikipedia.org/wiki/Leonhard_Euler&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>ebb865c3f1c1b310f1d626118320c3f3</guid>
<title>WebRTC 在 Google Meet 中应用的新发现</title>
<link>https://toutiao.io/k/ean5kp9</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;elementor-widget-container&quot;&gt;

&lt;p&gt;很久没有查看Google Meet的webrtc统计数据了，所以上周我趁开会的时候看了看，有哪些最新的变化被添加进来了。&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;P2P连接&lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;我检查的第一个变化是：如果线上会议里只有两个参与者，Google Meet是否仍使用P2P连接。令人惊讶的是，过去会议是包含P2P支持（&lt;a href=&quot;https://www.blogger.com/blog/post/edit/460321274846352896/7816676067410023996&quot;&gt;有关P2P-&lt;/a&gt;&lt;a href=&quot;https://www.blogger.com/blog/post/edit/460321274846352896/7816676067410023996&quot; target=&quot;_blank&quot; rel=&quot;noreferrer noopener&quot;&gt;SFU&lt;/a&gt;&lt;a href=&quot;https://www.blogger.com/blog/post/edit/460321274846352896/7816676067410023996&quot;&gt;过渡的讨论&lt;/a&gt;）的，但现在已经被移除了。&lt;/p&gt;



&lt;p&gt;这会增加基础设施的成本（对Google来说不是什么大问题），和一对一呼叫的端对端延迟。但考虑到Google Meet可能是部署在许多接入点上，所以可能增长不大。而且移除之后不必再处理另一种类型的连接和P2P-SFU过渡，操作更简单了，所以移除它看起来是合理的。&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;ICE Candidate和（NO）TURN服务器&lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;Google Meet不再配置任何ICE服务器，他们的服务器为IPv4、IPv6和UDP（随机端口）+TCP（与UDP相同的随机端口）+UDP（3478端口）+SSLTCP（443端口）这几类提供candidate。&lt;/p&gt;



&lt;p&gt;以下是iceServers的配置，里面有空字符串。&lt;/p&gt;



&lt;pre class=&quot;EnlighterJSRAW&quot; data-enlighter-language=&quot;generic&quot; data-enlighter-theme=&quot;&quot; data-enlighter-highlight=&quot;&quot; data-enlighter-linenumbers=&quot;&quot; data-enlighter-lineoffset=&quot;&quot; data-enlighter-title=&quot;&quot; data-enlighter-group=&quot;&quot;&gt;https://meet.google.com/_meet/xxx-xxx-xxx, { iceServers: [], iceTransportPolicy: all, bundlePolicy: max-bundle, rtcpMuxPolicy: require, iceCandidatePoolSize: 0, sdpSemantics: &quot;unified-plan&quot;, extmapAllowMixed: true }, {advanced: [{googScreencastMinBitrate: {exact: 100}}]}&lt;/pre&gt;



&lt;p&gt;其实不用TURN服务器不会有特别大的影响。因为这些服务器都支持SSLTCP，之前也在其他应用程序（如Jitsi或Houseparty）中看到它们。真正影响的可能是类似firefox的其他浏览器，和一些非常严格的，阻止SSLTCP使用伪SSL连接的代理/防火墙会缺乏支持。&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;RTP header新扩展&lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;Google Meet一直在用header扩展，这次检查时我又发现了两个过去没有见过的header。&lt;/p&gt;



&lt;p&gt;其中一个header扩展与新的AV1视频编解码器有关，提供了服务器可以用来对视频层进行选择性过滤和转发的可扩展性信息。值得思考。虽然Google Meet没有采用AV1，但这可能暗示了有了些进展，或在产品的内部版本中可能支持新编解码器&lt;/p&gt;



&lt;pre class=&quot;EnlighterJSRAW&quot; data-enlighter-language=&quot;generic&quot; data-enlighter-theme=&quot;&quot; data-enlighter-highlight=&quot;&quot; data-enlighter-linenumbers=&quot;&quot; data-enlighter-lineoffset=&quot;&quot; data-enlighter-title=&quot;&quot; data-enlighter-group=&quot;&quot;&gt;a=extmap:15 https://aomediacodec.github.io/av1-rtp-spec/#dependency-descriptor-rtp-header-extension&lt;/pre&gt;



&lt;p&gt;（Twitter的@murillo&amp;amp;@HCornflower认为，虽然这个header扩展是为AV1定义的，其实它也可以用于VP9，快速嗅探实验说明这个结论是正确的）&lt;/p&gt;



&lt;p&gt;另一个header扩展提供了各层的目标比特率、分辨率和帧率的信息，这样服务器就可以利用这些信息来决定转发哪一层，而不是像如今SFU那样，根据收到的比特率来做决定。这样做的好处是，这个值比计算出来的值更稳定、更可靠，因为计算出来的值可能会有瞬时的异常（temporal spikes），而且网络和逐步加快的实现，甚至发送的内容都会影响这个值。&lt;/p&gt;



&lt;pre class=&quot;EnlighterJSRAW&quot; data-enlighter-language=&quot;generic&quot; data-enlighter-theme=&quot;&quot; data-enlighter-highlight=&quot;&quot; data-enlighter-linenumbers=&quot;&quot; data-enlighter-lineoffset=&quot;&quot; data-enlighter-title=&quot;&quot; data-enlighter-group=&quot;&quot;&gt;a=extmap:12 http://www.webrtc.org/experiments/rtp-hdrext/video-layers-allocation00&lt;/pre&gt;



&lt;p&gt;&lt;strong&gt;特殊RTP控制信息——RTCP&lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;在SDP协商中，我发现有几个RTCP功能值得思考。&lt;/p&gt;



&lt;p&gt;第一个是叫做RRTR的新RTCP信息。其实也不算新消息，因为它在很久以前就被标准化了（&lt;a href=&quot;https://www.blogger.com/blog/post/edit/460321274846352896/7816676067410023996&quot; target=&quot;_blank&quot; rel=&quot;noreferrer noopener&quot;&gt;RFC3611&lt;/a&gt;），但目前我还没看到过它被采用的实例。RRTR信息和与DLRR相对应的目的是能够计算接收流的往返时间，计算方式类似于用SR和RR信息计算发送流的方式。基本上就是RRTR发送一个时间戳，DLRR返回原始时间戳以及RRTR和DLRR消息间的延迟。&lt;/p&gt;



&lt;pre class=&quot;EnlighterJSRAW&quot; data-enlighter-language=&quot;generic&quot; data-enlighter-theme=&quot;&quot; data-enlighter-highlight=&quot;&quot; data-enlighter-linenumbers=&quot;&quot; data-enlighter-lineoffset=&quot;&quot; data-enlighter-title=&quot;&quot; data-enlighter-group=&quot;&quot;&gt;a=rtpmap:111 opus/48000/2
a=rtcp-fb:111 transport-cc&lt;/pre&gt;



&lt;p&gt;第二个功能是Google Meet允许transport-cc RTCP消息也能使用音频数据包进行带宽估算，而不是像大多数平台那样，只能使用视频数据包完成该操作。这样做在过去风险很大，但显然现在已经足够安全了。这种情况下启用它看起来是个明智的选择。&lt;/p&gt;



&lt;pre class=&quot;EnlighterJSRAW&quot; data-enlighter-language=&quot;generic&quot; data-enlighter-theme=&quot;&quot; data-enlighter-highlight=&quot;&quot; data-enlighter-linenumbers=&quot;&quot; data-enlighter-lineoffset=&quot;&quot; data-enlighter-title=&quot;&quot; data-enlighter-group=&quot;&quot;&gt;a=fmtp:96 useadaptivelayering_v2=true; useadaptivelayering=true&lt;/pre&gt;



&lt;p&gt;&lt;strong&gt;视频编码&lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;Google Meet采用VP9和用户配置文件0。但由于不知名原因，如果有来自Firefox浏览器的用户加入会议时，Meet会回到VP8。视频编码一个有趣的点是SDP协商中的 “useadaptivelayering” 属性。这个属性面世已经有一段时间了，而且有两个版本。但在Chromium/WebRTC的开放源版本中并没有这个属性，在Chrome二进制中也没有。所以我猜想它可能只适用于libwebrc的旧版本或自定义版本（比如手机？）&lt;/p&gt;



&lt;pre class=&quot;EnlighterJSRAW&quot; data-enlighter-language=&quot;generic&quot; data-enlighter-theme=&quot;&quot; data-enlighter-highlight=&quot;&quot; data-enlighter-linenumbers=&quot;&quot; data-enlighter-lineoffset=&quot;&quot; data-enlighter-title=&quot;&quot; data-enlighter-group=&quot;&quot;&gt;a=fmtp:96 useadaptivelayering_v2=true; useadaptivelayering=true&lt;/pre&gt;



&lt;p&gt;&lt;strong&gt;音频编码&lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;如我所料，Google Meet采用了opus（启用了dtx和inbandfec）。但最有趣的是，冗余编码（RED）的使用也被协商用于音频通道。这种编码允许在需要时发送同一数据包的多个副本，来提供更强的稳健性，以防数据包丢失（详见&lt;a href=&quot;https://webrtchacks.com/red-improving-audio-quality-with-redundancy/&quot; target=&quot;_blank&quot; rel=&quot;noreferrer noopener&quot;&gt;WebRTCHacks&lt;/a&gt;中对RED的详细分析）。&lt;/p&gt;



&lt;p&gt;但即使RED被协商了，它也不是真正的主动发送，因为它被包含在opus之后的编解码器列表中。经过嗅探实验我发现，RED引入了15%的数据包丢失。同时我也检查了其发送和接收的数据包有无异样。&lt;/p&gt;



&lt;pre class=&quot;EnlighterJSRAW&quot; data-enlighter-language=&quot;generic&quot; data-enlighter-theme=&quot;&quot; data-enlighter-highlight=&quot;&quot; data-enlighter-linenumbers=&quot;&quot; data-enlighter-lineoffset=&quot;&quot; data-enlighter-title=&quot;&quot; data-enlighter-group=&quot;&quot;&gt;a=rtpmap:111 opus/48000/2

a=fmtp:111 minptime=10; useinbandfec=1; stereo=0; sprop-stereo=0; usedtx=1
a=rtpmap:63 red/48000/2&lt;/pre&gt;



&lt;p&gt;&lt;strong&gt;媒体采集&lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;检查的最后一项是麦克风和摄像头所需的配置。我发现了件有趣的事：帧率被明确限制在24fps，而默认值通常为30fps。&lt;/p&gt;



&lt;p&gt;Video constraints: {deviceId: {exact: [“xxxxxxxxx”]}, advanced: [{frameRate: {min: 24}}, {height: {min: 720}}, {width: {min: 1280}}, {frameRate: {max: 24}}, {width: {max: 1280}}, {height: {max: 720}}, {aspectRatio: {exact: 1.77778}}]} &lt;/p&gt;



&lt;p&gt;Google Meet还有一些有趣的点，比如单端连接的使用（除了用于屏幕共享的额外连接）；总是从浏览器端创建的offer；3个及以上的收发器或音频编解码器选择（VP9）的复用，但这些点已经存在有一段时间，且已经有其他人讨论过了。就不在此赘述了。&lt;/p&gt;



&lt;blockquote class=&quot;wp-block-quote&quot;&gt;&lt;p&gt;文章地址：&lt;a href=&quot;http://www.rtcbits.com/2022/06/webrtc-google-meet.html&quot; target=&quot;_blank&quot; rel=&quot;noreferrer noopener&quot;&gt;http://www.rtcbits.com/2022/06/webrtc-google-meet.html&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;



&lt;blockquote class=&quot;wp-block-quote&quot;&gt;&lt;p&gt;原文作者：&lt;a href=&quot;https://www.blogger.com/profile/09231386351348682181&quot; target=&quot;_blank&quot; rel=&quot;noreferrer noopener&quot;&gt;Gustavo Garcia&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;



&lt;p/&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>