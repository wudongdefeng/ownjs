<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>c5e092ff14719d902cc4b7372b64c143</guid>
<title>优质网站同好者周刊（第 091 期） | 倾城博客</title>
<link>https://toutiao.io/k/6nb4sth</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;content&quot;&gt;&lt;p&gt;&lt;a href=&quot;https://nicelinks.site/?utm_source=weekly&quot;&gt;倾城之链&lt;/a&gt;作为一个开放平台，旨在云集全球&lt;strong&gt;优秀网站&lt;/strong&gt;，探索互联网中更广阔的世界。此周刊，将汇聚过去一周&lt;a href=&quot;https://nicelinks.site/?utm_source=weekly&quot;&gt;倾城&lt;/a&gt;所收录的内容，以飨同好；欢迎推荐或自荐（仅限有独立域名的网站，可以是二级域名）。您如果要了解收录要求，请参见&lt;a href=&quot;https://nicelinks.site/about?utm_source=weekly&quot;&gt;关于倾城&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;备注&lt;/strong&gt;：本周刊&lt;strong&gt;每周五&lt;/strong&gt;生成，首发于个人微信公众号&lt;a href=&quot;https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzI5MDIwMzM2Mg==&amp;amp;action=getalbum&amp;amp;album_id=1530765143352082433&amp;amp;scene=173&amp;amp;from_msgid=2650641087&amp;amp;from_itemidx=1&amp;amp;count=3#wechat_redirect&quot;&gt;晚晴幽草轩&lt;/a&gt;、博客&lt;a href=&quot;https://www.jeffjade.com&quot;&gt;晚晴幽草轩&lt;/a&gt;，以及&lt;a href=&quot;https://forum.lovejade.cn/&quot;&gt;悠然宜想亭&lt;/a&gt;社区；此一键生成脚本基于 &lt;a href=&quot;https://nicelinks.site/post/602d30aad099ff5688618591&quot;&gt;Deno&lt;/a&gt; 编写，并在 Github 开源：&lt;a href=&quot;https://github.com/nicejade/nicelinks-weekly&quot;&gt;nicejade/nicelinks-weekly&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/3D&quot;&gt;&lt;code&gt;3D&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E8%BD%AF%E4%BB%B6&quot;&gt;&lt;code&gt;软件&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E5%85%8D%E8%B4%B9&quot;&gt;&lt;code&gt;免费&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;The Freedom to Create&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/www.blender.org.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 - blender.org - Home of the Blender project - Free and Open 3D Creation Software&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/redirect?url=https://www.blender.org/&quot;&gt;Blender&lt;/a&gt; 是一款&lt;strong&gt;免费开源&lt;/strong&gt;三维图形图像软件，提供从建模、动画、材质、渲染、到音频处理、&lt;strong&gt;视频剪辑&lt;/strong&gt;，甚至游戏创建等一系列动画短片制作解决方案（最早可追溯至 1988 年）。高级用户使用 Blender 的 Python 脚本 API 来定制应用程序并编写专门的工具；通常这些都包含在 Blender 的未来版本中。Blender 非常适合受益于其统一管道和响应式开发过程的个人和小型工作室。&lt;/p&gt;&lt;p&gt;Blender 以 GNU GPL 许可，由其贡献者拥有。 出于这个原因，Blender 永远是免费的开源软件。其&lt;strong&gt;使命&lt;/strong&gt;是：将世界上最好的 3D CG 技术作为免费/开源软件，交到艺术家手中。Blender 想象每个人都应该可以自由创作 3D CG 内容，拥有自由的技术和创意制作手段，自由进入市场。&lt;/p&gt;&lt;p&gt;Blender 跨平台支持良好，它的界面使用 OpenGL 来提供一致的体验（而且可以通过 Python 脚本自定义），可以工作在所有主流的 Windows（10、8、7、Vista）、Linux、OS X 等众多其它操作系统上。为了确认具体的兼容性， &lt;a href=&quot;https://www.blender.org/download/requirements/&quot;&gt;支持的平台&lt;/a&gt; 列表   显示了开发团队定期测试的平台。&lt;/p&gt;&lt;p&gt;Blender 拥有方便在不同工作下使用的多种用户界面，内置绿屏抠像、摄像机反向跟踪、遮罩处理、后期结点合成等高级影视解决方案。Blender 内置有 Cycles 渲染器与实时渲染引擎 EEVEE。同时还支持多种第三方渲染器。&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://nicelinks.site/redirect?url=https://www.blender.org/&quot;&gt;Blender&lt;/a&gt; 为全世界的媒体工作者和艺术家而设计，可以被用来进行三维可视化，同时也可以创作广播和&lt;strong&gt;电影级品质的视频&lt;/strong&gt;，另外内置的实时三维游戏引擎，让制作独立回放的三维互动内容成为可能。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;谁在使用 Blender&lt;/strong&gt;？ Blender 有一套非常丰富的工具集，因此几乎可以适用于所有类型的媒体产品。全世界的工作室与开发者们都把它用在各种各样的项目中，包括业余作品、商业化的产品、电影、游戏以及其他互动应用比如多功能信息栏，游戏以及科学研究。&lt;/p&gt;&lt;p&gt;作为 GNU 通用公共许可证 (GPL)下的社区驱动项目，公众有权对代码库进行大大小小的更改，从而带来新功能、响应式错误修复和更好的可用性。Blender 没有价格标签，但您可以 投资、 参与和帮助推进强大的协作工具：&lt;strong&gt;Blender 是您自己的 3D 软件&lt;/strong&gt;。&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/636cee71ee7f3505edab554d&quot;&gt;倾城之链 - blender.org - Home of the Blender project - Free and Open 3D Creation Software&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/AI&quot;&gt;&lt;code&gt;AI&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E5%9B%BE%E7%89%87&quot;&gt;&lt;code&gt;图片&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E8%BD%AC%E5%8C%96&quot;&gt;&lt;code&gt;转化&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;PicSo is an AI-powered digital art generator that creates artistically styled images from input text. Enter any text prompt to create pictures in your chosen art style and turn your ideas/text into an AI-generated painting in seconds. Website and APP available.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/picso.ai.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 - PicSo-Text To AI Art Maker&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/redirect?url=https://picso.ai/&quot;&gt;PicSo&lt;/a&gt; 是一个人工智能（&lt;a href=&quot;https://nicelinks.site/tags/AI&quot;&gt;AI&lt;/a&gt;）驱动的数字艺术生成器，可以从输入文本中创建具有艺术风格的图像。输入任何文本提示，以您选择的艺术风格创建图片，并在几秒钟内将您的想法/文本变成 AI 生成的绘画。网站和 APP 可用。&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://nicelinks.site/redirect?url=https://picso.ai/discover&quot;&gt;PicSo Discover&lt;/a&gt; 展示了非常多生成的图片，看起来很棒；但真实体验，发现 PicSo 还不够智能；比如以：“Newton and Tesla standing in outer space（牛顿和特斯拉站在外太空）”这句文本去体验，它所生成的图片，虽然是勉强展现出文本的意思，但效果简直“不忍直视”；必须提供足够全的描述，才能得到想要的结果，比如像这样：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;beautiful green landscape with a blue sky in the style of Genshin Impact, ghibli studio, 4k, ultra detail, attractive look, animation, hand drawn anime, concept art, wide angle, cinematic High Fidelity.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;官方介绍道：“&lt;a href=&quot;https://nicelinks.site/redirect?url=https://picso.ai/&quot;&gt;PicSo&lt;/a&gt; 以毕加索命名，表达了通过这款产品，每个人都可以成为像毕加索一样伟大的艺术家，进行富有创造性和意义的艺术创作。有了这个工具，任何人都可以在几秒钟内创造出独一无二的数字艺术作品，无论他们的预算或项目如何。装饰您的房子，创建 NFT 或动漫角色，或设计您自己的杰作！只需文字提示，PicSo 即可在数秒内生成 AI 数字艺术”。截止 2022 年，类似产品已经有很多，相信未来会日趋向好；感兴趣的朋友不妨体验下（注册即可，有体验次数限制，超过需要付费购买）。&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/636bc30db8db8e6db6203869&quot;&gt;倾城之链 - PicSo-Text To AI Art Maker&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/AI&quot;&gt;&lt;code&gt;AI&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E5%9B%BE%E7%89%87%E7%BC%96%E8%BE%91%E5%99%A8&quot;&gt;&lt;code&gt;图片编辑器&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E5%9B%BE%E7%89%87&quot;&gt;&lt;code&gt;图片&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Generate or update existing images with our AI image editing tool.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/sceneryai.com.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 - SceneryAI - AI-powered image editing&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/redirect?url=https://sceneryai.com/&quot;&gt;SceneryAI&lt;/a&gt; ，人工智能驱动（&lt;a href=&quot;https://nicelinks.site/tags/AI&quot;&gt;AI&lt;/a&gt;）的图像编辑，可以快速生成或更新图像；使用 SceneryAI，您可以在 30 秒内更改照片的&lt;strong&gt;主题&lt;/strong&gt;或&lt;strong&gt;风景&lt;/strong&gt;。只需上传您的照片并删除您要更新的部分。SceneryAI 是内容营销人员、创作者和数字艺术家在几秒钟内更新他们的照片和创作的完美解决方案。&lt;/p&gt;&lt;p&gt;SceneryAI 使用非常便捷，只需要以下三步：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;使用 SceneryAI 的 AI 功能，上传您想要编辑的照片；&lt;/li&gt;&lt;li&gt;使用 AI 的力量擦除您想要更新的照片部分；&lt;/li&gt;&lt;li&gt;描述您希望如何更新照片和渲染照片；&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;如果你是一个想跳过 Photoshop 的艺术家、一个需要快速编辑的营销人员、一个想狂欢的摄影师，或者一个想创造超棒食物照片的厨师？可以尝试 SceneryAI ，它免费可用；付费模式支持以最高质量渲染无限图像（19 美元/每月）。&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/636a443b68917b7b541fba8f&quot;&gt;倾城之链 - SceneryAI - AI-powered image editing&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/%E8%B5%84%E8%AE%AF&quot;&gt;&lt;code&gt;资讯&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E6%8A%95%E8%B5%84&quot;&gt;&lt;code&gt;投资&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E5%8F%AF%E8%A7%86%E5%8C%96&quot;&gt;&lt;code&gt;可视化&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;关键字&lt;/strong&gt;：大盘云图, 盯盘云图, 大盘全景图, 股市云图, 大盘板块图, 打盘云图, 大盘云图官网, 在线看盘, 大盘云图.com&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;大盘云图颠覆了以往看盘软件一成不变的红涨绿跌，它将所有股票按所属行业进行了板块划分，并以方块形式展示，用红色和绿色的深浅代表涨跌幅度，实现直观的展现大盘的全景图，适合股票爱好者和专业投资人使用盯盘使用，还可从不同的周期、资金流向、涨跌幅及量比等维度实时查看大盘最新数据&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/dapanyuntu.com.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 - 大盘云图 -大盘走势，尽在掌握!【官网】&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/redirect?url=https://dapanyuntu.com&quot;&gt;大盘云图&lt;/a&gt; ，是一款智能股票盯盘工具网站（基于 React 等框架搭建），颠覆了以往看盘软件一成不变的红涨绿跌，它将所有股票按所属行业进行了板块划分，并以方块形式展示，用红色和绿色的深浅代表涨跌幅度，用颜色的深浅标注个股的异动情况，实现直观的展现，能够使投资者更清晰的感知市场的脉搏，更加贴近市场动向。&lt;/p&gt;&lt;p&gt;它主要是针对中国 A 股市场，为投资者打造的 &lt;a href=&quot;https://nicelinks.site/tags/%E5%8F%AF&quot;&gt;可视化&lt;/a&gt; 实时行情功能，是目前市场上先进、直观的图形化看盘工具。适合股票爱好者和专业投资人使用盯盘使用，还可从不同的周期、资金流向、涨跌幅及量比等维度实时查看大盘最新数据。温馨提醒：&lt;strong&gt;股市有风险，投资须谨慎&lt;/strong&gt;。&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/63668c2ae4cec4128ba691ed&quot;&gt;倾城之链 - 大盘云图 -大盘走势，尽在掌握!【官网】&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/%E9%98%85%E8%AF%BB&quot;&gt;&lt;code&gt;阅读&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/RSS&quot;&gt;&lt;code&gt;RSS&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/PWA&quot;&gt;&lt;code&gt;PWA&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;关键字&lt;/strong&gt;：PWA, 阅读器, 在线, Qi Reader, RSS, 全平台, 阅读, 订阅&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Qi Reader - The Modern RSS Feed Reader Web App .&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/www.qireader.com.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 - QiReader - 基于 PWA 技术的全平台 RSS 在线阅读器&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/redirect?url=https://www.qireader.com/&quot;&gt;QiReader&lt;/a&gt;，优雅的全平台在线 RSS 阅读器，基于 PWA 解决方案搭建；它具有以下功能：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;全平台&lt;/strong&gt;：可安装到主屏幕的网页 App，支持所有桌面和移动设备；&lt;/li&gt;&lt;li&gt;&lt;strong&gt;稍后阅读&lt;/strong&gt;：一键收藏文章；&lt;/li&gt;&lt;li&gt;&lt;strong&gt;文章标签&lt;/strong&gt;：标签用于分类别收藏文章；&lt;/li&gt;&lt;li&gt;&lt;strong&gt;全文&lt;/strong&gt;：为只输出摘要内容的订阅源自动加载全文内容；&lt;/li&gt;&lt;li&gt;&lt;strong&gt;支持键盘快捷键&lt;/strong&gt;：比用鼠标更快；&lt;/li&gt;&lt;li&gt;&lt;strong&gt;OPML 导入和导出&lt;/strong&gt;：从其它阅读器中导入订阅；&lt;/li&gt;&lt;li&gt;&lt;strong&gt;内置英汉词典&lt;/strong&gt;：划词翻译，英语学习利器；&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;QiReader 基础版本免费可用，支持  50 订阅源；Pro 版本支持 300 订阅源，一年收费人民币 49 元。有注册、登录使用，整个体验超出预期，简洁实用，尤其是英汉词典，对于订阅英文网站，挺有帮助。酷爱 RSS 阅读的朋友，推荐使用。&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/63665214e4cec4128ba68f15&quot;&gt;倾城之链 - QiReader - 基于 PWA 技术的全平台 RSS 在线阅读器&lt;/a&gt;&lt;/p&gt;&lt;p&gt;对倾城之链感兴趣的朋友，可通过 Web，小程序，快应用等渠道进行访问(后续将支持更多，如 VsCode 插件，Chrome 扩展等)。您有任何问题，欢迎随时向我们反馈（您可以通过官网反馈渠道，或添加如下客服微信），🤲 。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://image.nicelinks.site/%E5%80%BE%E5%9F%8E%E4%B9%8B%E9%93%BE-%E5%BE%AE%E4%BF%A1-mini.jpeg&quot; alt=&quot;倾城之链 - 客服微信&quot;/&gt;&lt;/p&gt;&lt;h2 id=&quot;本期文末寄语&quot;&gt;&lt;a href=&quot;#%E6%9C%AC%E6%9C%9F%E6%96%87%E6%9C%AB%E5%AF%84%E8%AF%AD&quot; aria-label=&quot;本期文末寄语 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;本期文末寄语&lt;/h2&gt;&lt;p&gt;随着年龄的增长，普通人学习能力会退化。当人超过一定岁数时他们开始意识到，自己接收信息的能力不如往昔。他们会对自己不熟悉的观点警惕，也不容易为此而去改变，且常常为之寻找理由。&lt;strong&gt;大多数人到了这种阶段，会试图逃避这一现实，甚至妄想改变别人的观点来肯定自己的观点。尽量不要成为他们&lt;/strong&gt;。── 网络 · 佚名&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://nicelinks.site/?utm_source=weekly&quot;&gt;倾城之链&lt;/a&gt;作为一个开放平台，旨在云集全球&lt;strong&gt;优秀网站&lt;/strong&gt;，探索互联网中更广阔的世界；在这里，你可以轻松发现、学习、分享更多有用或有趣的事物。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://image.nicelinks.site/nicelinks-miniprogram-code.jpeg?imageView2/1/w/250/h/250/interlace/1/ignore-error/1&quot; alt=&quot;小程序码 - 倾城之链&quot;/&gt;&lt;/p&gt;&lt;h2 id=&quot;您可能感兴趣的文章&quot;&gt;&lt;a href=&quot;#%E6%82%A8%E5%8F%AF%E8%83%BD%E6%84%9F%E5%85%B4%E8%B6%A3%E7%9A%84%E6%96%87%E7%AB%A0&quot; aria-label=&quot;您可能感兴趣的文章 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;您可能感兴趣的文章&lt;/h2&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>9a3462f5bf910745b569e1ae914f3525</guid>
<title>深度学习在携程搜索词义解析中的应用</title>
<link>https://toutiao.io/k/nce8xtm</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;作者简介&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;携程旅游研发部大数据与AI研发团队，为旅游事业部提供丰富的AI技术产品和技术能力。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p powered-by=&quot;xiumi.us&quot;&gt;&lt;/p&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;一、背景介绍&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;搜索是电商最重要的门面之一，大部分用户通过搜索来找到他们想要的商品，因此搜索是用户表达意图最直接的方式，也是转化率最高的流量来源之一。绝大部分的电商搜索是通过搜索框输入搜索词（Query）来完成，因此，搜索词的词义解析和意图理解成为了搜索中的重要一环。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;主流的搜索词义解析和Query理解需要经过纠错、同义词替换、分词、词性标注、实体识别、意图识别、词重要度权重、丢词等步骤。以旅游场景下的搜索举例，如图1所示，当用户在搜索框输入“云南香各里拉”作为Query的时候，首先搜索引擎需要对该搜索词进行纠错，这是为了便于后续步骤正确解析出用户想要搜索的内容；如果有必要，还会进行同义词替换。然后，对搜索词进行分词和词性标注，识别出“云南”是省，“香格里拉”是城市或者酒店品牌，紧接着会做实体识别，召回“云南”和“香格里拉”在后台数据库里对应的实体id。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;这个时候，出现了一个分歧，“香格里拉”既可能是城市，又可能是酒店品牌。在用户进行搜索的时候，是否能够预测出正确的类别和实体，对于搜索结果的精准展示和提升用户体验有重要的意义。因此，我们必须识别出用户真正想要搜的是什么类别，并找到对应的实体，否则可能在搜索列表页前排会给出用户不想要的结果。从人的先验知识来看，用户搜索“云南香格里拉”，很大可能性是想要搜城市。意图识别步骤，就是为了实现这个功能，识别出用户真正的搜索意图是代表城市的“香格里拉”。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;后续就可以进入搜索的召回步骤，召回主要负责的是把和搜索词意图相关的商品或内容找出来。前面的步骤获取了“云南”和“香格里拉”的id，就可以很方便的召回和“云南”和“香格里拉”都相关的商品或内容。但是，有些时候，召回的结果为空或者过于稀少，这个时候给用户的体验不好，因此，在召回的结果为空或者过于稀少的情况下，往往还需要丢词和二次召回的操作。此外，有些词属于可省略词，或者对搜索产生干扰的词，也可以通过丢词来处理。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;所谓丢词，就是把搜索词中相对不重要或者联系不紧密的词丢掉，再次召回。那么该如何衡量每个词的重要程度或者紧密程度？这里就需要引入了Term Weighting的模块，把每个词视为term，通过算法或规则计算每个term的weight，每个term的weight直接决定了term重要度和紧密度的顺序。例如，假设“云南”的term weight是0.2，“香格里拉”的term weight是0.8，那么如果需要丢词，就应该先丢“云南”，保留“香格里拉”。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.993103448275862&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/kEeDgfCVf1eqznWPRyN5VaUjgkUVt1cgCa7EicMMyFJm3icRibiaaJLo72UjoTYic3fJRU19lwevwocBatIQ8BwPnDg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;725&quot;/&gt;&lt;/p&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;图1 搜索词义解析和Query理解步骤&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;传统的搜索意图识别会采用词表匹配，类目概率统计，加上人为设定规则。传统的Term Weighting同样会采用词表匹配和统计方法，比如根据全量商品的标题和内容统计出词的TF-IDF、前后词互信息、左右邻熵等数据，直接存成词典和分值，提供给线上使用，再根据一些规则辅助判断，比如行业专有名词直接给出较高的term weight，助词直接给出较低的term weight。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;但是，传统的搜索意图识别和Term Weighting算法无法达到很高的准确率和召回率，特别是无法处理一些较为罕见的搜索词，因此需要一些新的技术来提升这两个模块的准确率和召回率，以及提升对罕见搜索词的适应能力。此外，因为访问频率较高，搜索词义解析需要非常快的响应速度，在旅游搜索场景下，响应速度往往需要达到接近个位数的毫秒级，这对于算法来说是一个很大的挑战。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;二、 问题分析&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;为了提高准确率和召回率，我们采用深度学习来改进搜索意图识别和Term Weighting算法。深度学习通过样本的学习，可以有效解决各种情况下的意图识别和Term Weighting。此外，针对自然语言处理的大规模预训练语言模型的引入，可以进一步强化深度学习模型的能力，减少样本的标注量，使得原本标注成本较高的深度学习在搜索上应用成为可能。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;但是深度学习面临的问题是，由于模型的复杂度较高，神经网络层数较深，响应速度没法满足搜索的高要求。因此我们采用模型蒸馏和模型压缩来减少模型的复杂度，在略微降低准确率和召回率的情况下减少深度学习模型的耗时，以此保证较快的响应速度和较高的性能。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;三、意图识别&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;类目识别是意图识别的主要组成部分。意图识别中的类目识别是搜索词query经过分词后，对分词结果打上所属类目并给出对应概率值的方法。解析用户的搜索词的意图有利于分析用户的直接搜索需求，从而辅助提升用户体验。例如用户在旅游页面搜索 “云南香格里拉”，获取到用户输入的“香格里拉”对应的类目是“城市”，而不是“酒店品牌”，引导后续检索策略偏向城市意图。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;在旅游场景下，用户输入的类目存在歧义的搜索词占总量约11%，其中包含大量无分词的搜索词。“无分词”是指经过分词处理后无更细化的切分片段，“类目存在歧义”是指搜索词本身存在多种可能的类目。例如用户输入“香格里拉”，无更细化的切分片段，且对应类目数据中存在“城市”、“酒店品牌”等多个类目。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;如果搜索词本身是多个词的组合，则可以通过搜索词自身上下文明确类目，优先会以搜索词本身作为识别目标。如果单从搜索词本身不能明确所属类目，我们会优先追加该用户不相同的最近历史搜索词，以及最近商品类目点击记录，若无上述信息则追加定位站，作为补充语料。原始搜索词经过处理获得待识别的Query R。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;最近几年，预训练语言模型在很多自然语言处理任务中大放光彩。在类目识别中，我们利用预训练模型的训练网络参数，获取含上下文语义的字特征Output&lt;sub&gt;bert&lt;/sub&gt;；使用字词转换模块，字特征结合位置编码:&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.12532981530343007&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/kEeDgfCVf1eqznWPRyN5VaUjgkUVt1cg5qia727Y8TwicDMbictRic5JReWsBJxPnCMrnrpicNcsOoBDiaa1rcPZ2ESA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;758&quot;/&gt;&lt;/p&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;获取到分词对应的字符片段，如：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.21978021978021978&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/kEeDgfCVf1eqznWPRyN5VaUjgkUVt1cgksbQepvQImhaOhiaAe2PvmfxaS7EJziaiclMdtpqXoZ68DpiaYMytscx0w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;455&quot;/&gt;&lt;/p&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;代表第i个分词对应的长度为l&lt;sub&gt;i&lt;/sub&gt;的字特征。基于字符片段W&lt;sub&gt;i&lt;/sub&gt;，字词转换模块聚合出每个词的特征H&lt;sub&gt;w&lt;/sub&gt;&lt;sub&gt;i&lt;/sub&gt;。聚合手段可以是最大值池化max-pooling、最小值池化min-pooling、均值池化mean-pooling等方式，实验得到最大池化效果最佳。模块输出为搜索词R的词特征Output&lt;sub&gt;R&lt;/sub&gt;；通过并行分类器对搜索词的词特征Output&lt;sub&gt;R&lt;/sub&gt;中各个片段给出类目数据库中涵盖的匹配类目，并给出对应类目的匹配概率。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.425&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/kEeDgfCVf1fHyuE9I3tD8MZnd2XmobCaicHOXGoYnHlrSkaJCONtArDAlialgAEI6KEJxRXRuwmoFuvgJjIL4khw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;图2 类目识别整体结构示意图&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;p powered-by=&quot;xiumi.us&quot;&gt;&lt;/p&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;类目识别模型是基于BERT-base 12层模型，由于模型过大，不满足线上运行的响应速度要求，我们对模型进行了知识蒸馏（Knowledge Distillation），将网络从大网络转化成一个小网络，保留接近于大网络的性能的同时满足线上运行的延迟要求。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;原先训练好的类目识别模型作为teacher网络，将teacher网络的输出结果 作为student网络的目标，训练student网络，使得student网络的结果p接近q ，因此，我们可以将损失函数写成:&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.12191103789126853&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/kEeDgfCVf1eqznWPRyN5VaUjgkUVt1cghI6d4QvBibGhVUEggD9edteNNtvbZujqwXbibiah9ia7P5g8v8vsOucVYA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;607&quot;/&gt;&lt;/p&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;这里CE是交叉熵（Cross Entropy）,symmetricalKL是对称KL散度（Kullback–Leibler divergence），y是真实标签的one-hot编码，q是teacher网络的输出结果，p是student网络的输出结果。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5064815&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/kEeDgfCVf1fHyuE9I3tD8MZnd2XmobCao8Z8cAVNN6iap0SCsLSMLaeyH7olI7J0tNX3eLiaU55cnBiaX0DfU9RuQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;图3 知识蒸馏示意图&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;经过知识蒸馏，类目识别最终仍然可以达到较高的准确率和召回率，同时可以做到整体响应时间的95线为5ms左右。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;经过类目识别之后，还需要经过实体链接等步骤，完成最终的意图识别过程。具体内容可以参见&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5MDI3MjA5MQ==&amp;amp;mid=2697272959&amp;amp;idx=2&amp;amp;sn=64a3495442aef01658ed54554b2539a2&amp;amp;chksm=8376e14bb401685d5c570e40aca22fb69a382151dc1442037fdae898bd59bcbe4108a47c489a&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;《携程实体链接技术的探索及实践》&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;《携程实体链接技术的探索及实践》&lt;/a&gt;一文，本文不再阐述。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;四、 Term Weighting&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;对于用户输入的搜索词，不同的term对于用户的核心语义诉求有着不同的重要性。在搜索的二次召回排序中需要重点关注重要性高的term，同时在丢词的时候可以忽略重要性低的term。通过计算用户输入搜索词的各个term weight，来二次召回出最接近用户意图的产品，提升用户体验。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;首先，我们需要寻找线上用户真实的反馈数据作为标注数据。用户在搜索框的输入和联想词点击情况一定程度上反映了用户对于搜索短语中词语的重视程度，因此我们选用联想词输入和点击数据，加以人工筛选和二次标注，作为Term Weighting模型的标注数据。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;在数据预处理方面，我们所能获得的标注数据为短语及其对应的关键词，这里为了使权重的分配不过于极端，给定非关键词一定量小的权重，并将剩余权重分配给关键词的每个字上，如果某一短语在数据中出现了复数次，且对应的关键词不同，则会根据关键词的频率对这些关键词的权重进行分配，并进一步分配每个字的权重。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;模型部分主要尝试BERT作为特征提取的方法，并进一步对每个term的权重进行拟合。对于给定的输入，将其转化为BERT所能接收的形式，将通过BERT后的张量再通过全连接层进行压缩，得到一维的向量后进行Softmax处理，并用该向量对结果的权重向量进行拟合，具体模型框架如下图所示：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.0315236&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/kEeDgfCVf1fHyuE9I3tD8MZnd2XmobCaibEeCBXPE59XzN233wqbeEGhIic1Jebbg5l9cH1jCDOH2ziak9EfyXyKg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;571&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;图4 Term Weighting模型框架&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;由于中文BERT基于字符，因此需要将每个term中的所有字的权重进行求和，从而最终得到term的权重。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;在整个模型框架中，除去一些训练的超参数，能调整的部分主要包含两个部分：一是通过BERT产生Embedding时，可以选择BERT最后一层，或者综合BERT的第一层和最后一层的方式产生Embedding；二是在损失函数的选择上，除去使用MSE损失衡量预测权重与实际权重之间差距之外，也尝试使用非重要词的预测权重的和作为损失进行计算，但这种损失更适合只有单个关键词的情况使用。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;模型最终是以小数的形式输出每个term weight，例如[“上海”、“的”、“迪士尼”]的term weight结果为[0.3433，0.1218，0.5349]。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;该模型是为搜索服务的，有严格的响应速度要求。由于BERT模型整体比较大，在推理部分很难达到响应速度要求，因此类似于类目识别模型，我们对训练好的BERT模型进行进一步的蒸馏处理，以达到符合线上的要求。在此项目中，通过少数几层transformer去拟合BERT-base 12层transformer的效果，最后以损失可以接受的一部分性能的情况下，使得模型整体的推理速度快了10倍左右。最终，Term Weighting线上服务整体的95线可以达到2ms左右。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;五、 未来与展望&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;采用深度学习后，旅游搜索对于较为罕见的长尾搜索词，词义解析能力有了较大的提升。在目前的线上真实搜索场景，深度学习方法一般选择与传统的搜索词义解析方法相结合，这样既可以保证头部常见搜索词的性能稳定，又可以加强泛化能力。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;未来，搜索词义解析致力于给用户带来更好的搜索体验，随着硬件技术和AI技术的更新换代，高性能计算和智能计算越来越成熟，搜索词义解析的意图识别和Term Weighting未来会往更高性能的目标发展。此外，更大规模的预训练模型和旅游领域的预训练模型有助于进一步提升模型的准确率和召回率，更多用户信息和知识的引入有助于提升意图识别的效果，线上用户的反馈和模型迭代有助于提升Term Weighting的效果。这些都是我们后续会尝试的方向。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;除了意图识别和Term Weighting之外，搜索的其他功能，比如词性标注、纠错等，在满足响应速度要求的前提下未来也可以采用深度学习技术，来实现更强大的功能和更优秀的效果。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;【推荐阅读】&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/kEeDgfCVf1fHyuE9I3tD8MZnd2XmobCaRbP57RFIiaW7icFAnE0wWH4tZp7yicp28UXn4vdeLkcoGuwKblvyGhGlg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt; “携程技术”公众号&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;  分享，交流，成长&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>ad405af62eda43dc7b048b9028825b84</guid>
<title>Go 语言项目源码解析：定时任务库 cron</title>
<link>https://toutiao.io/k/0ilu8ik</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;引子&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;GitHub 上有很多优秀的开源项目，代码都是透明可见的，每个人只要有账号就可以下载来查看。而我们作为软件开发者来说也可以从中学习到很多知识，以及体会如何正确的工程化、单元测试、统一代码风格等，甚至从源码中找到问题，并提出 Pull Request 来贡献开源社区。今天这篇文章将解析 Go 语言开源项目 &lt;span&gt;robfig/cron&lt;/span&gt;&lt;sup&gt;[1]&lt;/sup&gt; 的&lt;strong&gt;「源码」&lt;/strong&gt;，这个项目不大，知名度较高，注释也比较清楚，很适合新手学习如何阅读和解析源码。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;环境准备&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;首先我们将源码&lt;strong&gt;「克隆」&lt;/strong&gt;（Fork）为自己的个人仓库，只需要在 GitHub 项目主页点击 Fork 按钮，然后输入项目名称点击确认即可。克隆完毕后，可以下载到本地，或者直接在科隆后的 GitHub 仓库主页上点击 &lt;code&gt;Create codespace on master&lt;/code&gt; 来创建 &lt;strong&gt;「Codespace」&lt;/strong&gt;。Codespace 是 GitHub 推出的基于 Azure 云服务的远程编程功能，现在对个人账号开放了，可以试一下。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.9491525423728814&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/vh4PtSfBxFOIicEI7jtoAMRArMSoH5MHibkAlXr93SEB1DyVUYWr7omg3iavtFibh9ic0DhcAwmgZNOAMsyOcIqwnsQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;413&quot;/&gt;&lt;figcaption&gt;&lt;span/&gt;Create Codespace&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;点击后，浏览器中会打开一个新页面，并会出现在线 VS Code 的界面，然后显示该项目的目录、代码以及终端，如下图。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5772314270443613&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/vh4PtSfBxFOIicEI7jtoAMRArMSoH5MHibpQ3B0S5icWVov9FFakEvZLiaGhkxd3jrQFickLspIiaksTnCHjrn1fCLng/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1871&quot;/&gt;&lt;figcaption&gt;&lt;span/&gt;Codespace&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由于我们本次的目的是解析源码，我们主要将在这上面展现和阅读代码，并不会执行它。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;现在，我们可以开始解析源码了。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;入口文件&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;解析源码的一个比较好的手段是找到&lt;strong&gt;「入口文件」&lt;/strong&gt;（Entry File），相当于是一本书的引言（Introduction）章节，项目的整体结构通常会在入口文件中体现出来。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.574468085106383&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/vh4PtSfBxFOIicEI7jtoAMRArMSoH5MHibDamAbK0vZFVhAymTMZEXZEOiaQSpcBiaF83bZa8CkjNUbOyzv8WXRhlw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;282&quot;/&gt;&lt;figcaption&gt;&lt;span/&gt;Code Structure&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们从项目介绍 &lt;code&gt;README.md&lt;/code&gt; 文件中可以看到，这个定时任务库的使用方式是 &lt;code&gt;cron.New(cron.WithSeconds())&lt;/code&gt; 之类的，也就是 &lt;code&gt;cron.New&lt;/code&gt; 方法。因此，我们可以猜测这个方法是在 &lt;code&gt;cron.go&lt;/code&gt; 中，我们打开它看一看。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;快速扫了一遍之后，我们可以发现这个 &lt;code&gt;New&lt;/code&gt; 方法在 113 行，如下图。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5212355212355212&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/vh4PtSfBxFOIicEI7jtoAMRArMSoH5MHib3pdfnxuepvzmXibb3DUFK3F7micQE0uib78VEIPxUNI2etBO4jKJLmZ9Q/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;2072&quot;/&gt;&lt;figcaption&gt;&lt;span/&gt;Method New&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;仔细看一下，这个方法就是返回了一个 &lt;code&gt;Cron&lt;/code&gt; 类的实例指针，中间的 &lt;code&gt;opts ...Option&lt;/code&gt; 参数是一种函数式参数（Functional Option）。而实际的代码实现，无非就是构造了一个 &lt;code&gt;Cron&lt;/code&gt; 类的实例指针 &lt;code&gt;c&lt;/code&gt;，并对其应用了函数参数，然后返回它。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这样，我们可以判断，真正的定时任务&lt;strong&gt;「核心逻辑」&lt;/strong&gt;就在 &lt;code&gt;Cron&lt;/code&gt; 类中。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不过，无论如何，我们可以确定，入口文件就是 &lt;code&gt;cron.go&lt;/code&gt;。接下来只需要分析这个文件包含的核心模块、逻辑就可以大概理清楚整个项目的源码了。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;核心类&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那么我们再来看一下&lt;strong&gt;「核心类」&lt;/strong&gt; &lt;code&gt;Cron&lt;/code&gt; 的构造，看看是否有什么新东西。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在代码中搜索一下可以定位到 &lt;code&gt;Cron&lt;/code&gt; 类在第 13 行。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.9465381244522348&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/vh4PtSfBxFOIicEI7jtoAMRArMSoH5MHibl1L1DkWdlZ8f51DYhibRA6ZbNaJfvMhRucrsYlwZYIf8iaVsVabicSK9g/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1141&quot;/&gt;&lt;figcaption&gt;&lt;span/&gt;Cron Struct&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;Cron&lt;/code&gt; 类有很多属性，包括小写单词表示的私有属性 &lt;code&gt;entries&lt;/code&gt;、&lt;code&gt;chain&lt;/code&gt;、&lt;code&gt;parser&lt;/code&gt; 等等，我们暂时还不知道它们各自的含义，不过可以从名称猜测一下。另外，我们还可以看到第 10-12 行的注释描述，意思是 &lt;code&gt;Cron&lt;/code&gt; 会追踪 &lt;code&gt;entries&lt;/code&gt;，并执行被 &lt;code&gt;schedule&lt;/code&gt; 定义的函数，它可以开始运行、结束运行，以及 &lt;code&gt;entries&lt;/code&gt; 也会在运行过程中被检查。一脸懵逼？是的，这些描述虽然长，但并不能完全解释清楚，我们只有继续阅读更多源码中的细节，才可以了解清楚。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;另外，我们还可以在 &lt;code&gt;Cron&lt;/code&gt; 类下面发现 3 个接口以及其描述:&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;ScheduleParser&lt;/code&gt;：定时任务的解析器，可以解析并返回 &lt;code&gt;Schedule&lt;/code&gt; 实例；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Job&lt;/code&gt;：已提交的定时任务作业&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Schedule&lt;/code&gt;：用于描述作业的运行周期。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其实，这 3 个接口都很重要，我们从它们的所在位置就可以判断出来。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;入口方法&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在继续探索之前，我们再回忆一下这个定时任务库的使用方法，除了 &lt;code&gt;cron.New&lt;/code&gt; 之外，还需要调用 &lt;code&gt;c.Start()&lt;/code&gt; 才能正式生效。因此，我们需要仔细看看 &lt;code&gt;Cron&lt;/code&gt; 类的 &lt;code&gt;Start&lt;/code&gt; 方法。这其实也是核心类的&lt;strong&gt;「入口方法」&lt;/strong&gt;（Entry Method）。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们可以在 &lt;code&gt;cron.go&lt;/code&gt; 文件中定位到 &lt;code&gt;Start&lt;/code&gt; 方法在第 215 行，如下图。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.28939393939393937&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/vh4PtSfBxFOIicEI7jtoAMRArMSoH5MHibgeIY9skN4NvEB87ic96AJJu0oaw0bfo6IbbLoOQ5tib4YYwD0bTUmyMg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1320&quot;/&gt;&lt;figcaption&gt;&lt;span/&gt;Cron Start&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比较有经验的 Go 语言开发工程师应该会注意到，这是一个典型的原子性操作（Atomic Operation）。&lt;code&gt;c.runningMu&lt;/code&gt; 是一个 &lt;code&gt;sync.Mutex&lt;/code&gt; 实例，可以&lt;strong&gt;「加锁」&lt;/strong&gt;（Lock）；然后 &lt;code&gt;defer c.runningMu.Unlock()&lt;/code&gt; 表示函数调用之后会&lt;strong&gt;「解锁」&lt;/strong&gt;（Unlock），因此保证重复调用该方法的时候不会出现&lt;strong&gt;「数据竞速」&lt;/strong&gt;（Data Race）；&lt;code&gt;if c.running { return }&lt;/code&gt; 的方法表示，如果已经开始运行了，就不会再执行，直接返回；&lt;code&gt;c.running&lt;/code&gt; 设置运行状态为 &lt;code&gt;true&lt;/code&gt;；最后一行比较关键，&lt;code&gt;go c.run()&lt;/code&gt; 表示新起了一个&lt;strong&gt;「协程」&lt;/strong&gt;（Goroutine）来运行 &lt;code&gt;c.run&lt;/code&gt; 方法。因此，我们找到了更核心的方法，&lt;code&gt;run&lt;/code&gt;。接下来的工作就是继续解析它了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;是不是很像玩 RPG 游戏时不断寻找机关，最终在千辛万苦之下可喜可贺进入下一关？&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;总结&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;等一下，就这么完结撒花了？我那啥都准备好了，你就让我看这个？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们在这里暂时打住的主要原因是不想让这篇文章变得又臭又长。因为源码解析通常是一个&lt;strong&gt;「需要耐心」&lt;/strong&gt;、&lt;strong&gt;「繁琐枯燥」&lt;/strong&gt;的过程，而这种过程有时会让读者产生抵触情绪。因此，笔者的主要目的是&lt;strong&gt;「抛砖引玉」&lt;/strong&gt;，将源码解析的一些核心要领用手把手的方式告诉读者，而读者也会根据自己的理解去实际操作，这样学习起来会更快也会更有意思。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;现在稍微总结一下这篇文章用到的解析源码技巧：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;找到入口文件&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;定位核心类&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;解析入口方法&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;社区&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果您对笔者的文章感兴趣，可以加笔者微信 tikazyq1 并注明 &quot;码之道&quot;，笔者会将你拉入 &quot;码之道&quot; 交流群。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;Reference&lt;/span&gt;&lt;/h3&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;span&gt;[1] &lt;/span&gt;&lt;p&gt;robfig/cron: &lt;span&gt;https://github.com/robfig/cron&lt;/span&gt;&lt;/p&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>ce542feefc7acd442491ed7129a1bb5e</guid>
<title>转行数据分析？你可能需要这块敲门砖！</title>
<link>https://toutiao.io/k/zk74lch</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-role=&quot;outer&quot; label=&quot;edit by 135editor&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;p&gt;&lt;span&gt;👆&lt;/span&gt;&lt;span&gt;点击“&lt;/span&gt;&lt;span&gt;博文视点Broadview&lt;/span&gt;&lt;span&gt;”，获取更多书讯&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.05669291338582677&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PW0wIHxgg3nr1VNxfeqxVOw2nPJHVH4xeZibzPY5F4ibOuOZLMsUMrzIibGB6KMw7EurSKv6DkrtLzuhYdBa30A9Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;635&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;数&lt;/span&gt;&lt;span&gt;字经济时代，数据成为新时代的生产要素！&lt;/span&gt;&lt;span&gt;数据已成为企业的重要生产力！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;“生产力”是企业创造财富的能力，掌握数据分析能力的企业将具备创造更多财富的能力。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;很多小伙伴已经看到了数据分析对企业经营的重要性，也看到掌握数据分析技能的员工自然能成为企业的中坚力量，是各企业争相抢夺的宝贵人力资源。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;所以，越来越多的人想要学习数据分析这一技能，来增强自己的职场竞争力，或为自己未来转岗、加薪铺路。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;而CDA数字化人才身份认证是数据分析领域得到业界广泛认可的凭证，不少想要学习数据分析技能或想转行数据分析的小伙伴都会考取数据分析师认证，来作为对自己掌握这门技能的认可，和转行的敲门砖！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;数据分析师认证 CDA 一级备考中文教材2023版——&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;《精益业务数据分析》&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;已权威发布！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PW0wIHxgg3khBZDFXt4Mbm8alyfDWbhrDvFrx056QXicFRRDLolWSQl0oMfZkzmbhkMz38RrBRjNMDq1GzlnfQA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;800&quot; data-width=&quot;251px&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;本书不仅适合&lt;span&gt;CDA LEVELⅠ&lt;/span&gt;（数据分析师认证 CDA 一级）应试人员，同时适合&lt;span&gt;业务工作人员、数据分析从业人员、数据分析岗位的求职人员&lt;/span&gt;学习。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;所以，入手这本数据红宝书，不仅能助你顺利备考CDA认证考试，还能帮你轻松入门数据分析，为数据分析岗位求职助力！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;section data-role=&quot;title&quot; data-tools=&quot;135编辑器&quot; data-id=&quot;34405&quot;&gt;&lt;section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section data-brushtype=&quot;text&quot; hm_fix=&quot;349:460&quot;&gt;&lt;strong&gt;这本书讲了什么？&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;本书是企业业务数据分析方法的集大成著作，由知名数据分析研究机构CDA 数据科学研究院组织多名行业知名专家进行研讨、策划、编辑而成。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;书中内容源自对各行业领军企业实际业务数据分析技能需求的提炼及总结，&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;这些企业包括但不限于京东、腾讯、IBM、中国移动、北京电信、苏宁集团、招商银行、中国邮政集团、GrowingIO 等。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;全书由八大部分构成：&lt;/span&gt;&lt;span&gt;绪论、表格结构数据与表结构数据、数据库应用、描述性统计分析、多维数据透视分析、业务分析方法、业务分析报告与数据可视化报表、CDA 职业发展。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;本书全面、系统地讲述业务描述性分析为企业决策行为创造价值的全流程技能，&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;涵盖&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;描述性数据分析方法、业务分析方法、数据分析结果应用方法等内容&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;全书以条理清晰的结构、通俗易懂的语言、完整立体的知识框架为读者铺开一幅精美的业务描述性分析知识画卷。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;建议读者先全篇通览整幅画卷，建立完整的数据分析知识体系，再精细阅览画卷中的每个细节，深入掌握每个具体知识点。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;本书目录&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;向上滑动阅览&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;第1 章 绪论. &lt;span&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;1.1 数据分析概述 .1&lt;/p&gt;&lt;p&gt;1.1.1 数据分析的分类 .3&lt;/p&gt;&lt;p&gt;1.1.2 数据分析的基本流程 .4&lt;/p&gt;&lt;p&gt;1.1.3 数据分析的落地方法 .7&lt;/p&gt;&lt;p&gt;1.2 数据分析师概述 .8&lt;/p&gt;&lt;p&gt;1.2.1 数据分析师的不同角色与职责 .8&lt;/p&gt;&lt;p&gt;1.2.2 数据分析师职业道德和行为准则 .10&lt;/p&gt;&lt;p&gt;1.3 数据相关的安全与立法 13&lt;/p&gt;&lt;p&gt;1.3.1 各国的数据隐私相关法律 .13&lt;/p&gt;&lt;p&gt;1.3.2 我国大数据立法的历程和展望 .14&lt;/p&gt;&lt;p&gt;1.4 本章练习题 16&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;第2 章 表格结构数据与表结构数据. &lt;span&gt;18&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;2.1 表格结构数据 .19&lt;/p&gt;&lt;p&gt;2.1.1 表格结构数据概述 .19&lt;/p&gt;&lt;p&gt;2.1.2 表格结构数据特征 .20&lt;/p&gt;&lt;p&gt;2.2 表格结构数据的获取、引用与使用 .24&lt;/p&gt;&lt;p&gt;2.2.1 表格结构数据的获取 .24&lt;/p&gt;&lt;p&gt;2.2.2 表格结构数据的引用、查询与计算方法 .28&lt;/p&gt;&lt;p&gt;2.3 表结构数据 38&lt;/p&gt;&lt;p&gt;2.3.1 表结构数据概述 .38&lt;/p&gt;&lt;p&gt;2.3.2 表结构数据特征 .40&lt;/p&gt;&lt;p&gt;2.4 表结构数据的获取、加工与使用 45&lt;/p&gt;&lt;p&gt;2.4.1 表结构数据的获取 .45&lt;/p&gt;&lt;p&gt;2.4.2 数据库与商业智能的概念解析 .46&lt;/p&gt;&lt;p&gt;2.4.3 表结构数据的合并 .54&lt;/p&gt;&lt;p&gt;2.4.4 表结构数据的汇总 .60&lt;/p&gt;&lt;p&gt;2.5 本章练习题 65&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;第3 章 数据库应用. &lt;span&gt;71&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;3.1 数据库相关概念 71&lt;/p&gt;&lt;p&gt;3.1.1 数据库简介 71&lt;/p&gt;&lt;p&gt;3.1.2 认识数据库 .74&lt;/p&gt;&lt;p&gt;3.1.3 SQL .76&lt;/p&gt;&lt;p&gt;3.1.4 数据仓库 .77&lt;/p&gt;&lt;p&gt;3.2 数据定义语言 .79&lt;/p&gt;&lt;p&gt;3.2.1 DDL 在业务中的作用 .80&lt;/p&gt;&lt;p&gt;3.2.2 定义数据库 .80&lt;/p&gt;&lt;p&gt;3.2.3 数据表 .82&lt;/p&gt;&lt;p&gt;3.2.4 数据类型 .88&lt;/p&gt;&lt;p&gt;3.2.5 约束条件 .92&lt;/p&gt;&lt;p&gt;3.3 数据操作语言 .100&lt;/p&gt;&lt;p&gt;3.3.1 DML 的作用 .100&lt;/p&gt;&lt;p&gt;3.3.2 添加数据 .100&lt;/p&gt;&lt;p&gt;3.3.3 将查询结果添加到表中 .102&lt;/p&gt;&lt;p&gt;3.3.4 更新数据 .103&lt;/p&gt;&lt;p&gt;3.3.5 删除数据 .104&lt;/p&gt;&lt;p&gt;3.4 数据查询语言 .104&lt;/p&gt;&lt;p&gt;3.4.1 单表查询 .105&lt;/p&gt;&lt;p&gt;3.4.2 函数 .125&lt;/p&gt;&lt;p&gt;3.4.3 多表查询 .142&lt;/p&gt;&lt;p&gt;3.4.4 子查询 .158&lt;/p&gt;&lt;p&gt;3.5 视图 168&lt;/p&gt;&lt;p&gt;3.5.1 视图的作用 .168&lt;/p&gt;&lt;p&gt;3.5.2 创建视图 .169&lt;/p&gt;&lt;p&gt;3.5.3 修改视图 .169&lt;/p&gt;&lt;p&gt;3.5.4 删除视图 .170&lt;/p&gt;&lt;p&gt;3.6 本章练习题 170&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;第4 章 描述性统计分析&lt;/span&gt;. 181&lt;/p&gt;&lt;p&gt;4.1 统计学概述 181&lt;/p&gt;&lt;p&gt;4.1.1 统计学的定义及应用 .181&lt;/p&gt;&lt;p&gt;4.1.2 统计学的基本概念 .185&lt;/p&gt;&lt;p&gt;4.2 数据的描述性统计分析 192&lt;/p&gt;&lt;p&gt;4.2.1 集中趋势的描述 .192&lt;/p&gt;&lt;p&gt;4.2.2 离散程度的描述 .203&lt;/p&gt;&lt;p&gt;4.2.3 分布形态的描述 .208&lt;/p&gt;&lt;p&gt;4.2.4 描述性统计图表 .211&lt;/p&gt;&lt;p&gt;4.3 常用的数据分布 .218&lt;/p&gt;&lt;p&gt;4.3.1 两点分布与二项分布 .219&lt;/p&gt;&lt;p&gt;4.3.2 正态分布与标准正态分布 .221&lt;/p&gt;&lt;p&gt;4.3.3 c2 分布 .228&lt;/p&gt;&lt;p&gt;4.3.4 t 分布.229&lt;/p&gt;&lt;p&gt;4.3.5 F 分布 .230&lt;/p&gt;&lt;p&gt;4.3.6 分位点的概念 .232&lt;/p&gt;&lt;p&gt;4.4 相关分析 233&lt;/p&gt;&lt;p&gt;4.4.1 相关分析的含义 .233&lt;/p&gt;&lt;p&gt;4.4.2 简单线性相关关系的描述 .234&lt;/p&gt;&lt;p&gt;4.4.3 简单线性相关关系的度量 .235&lt;/p&gt;&lt;p&gt;4.5 本章练习题 239&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;第5 章 多维数据透视分析&lt;/span&gt; 246&lt;/p&gt;&lt;p&gt;5.1 多维数据模型 .246&lt;/p&gt;&lt;p&gt;5.1.1 多维数据模型概述 .247&lt;/p&gt;&lt;p&gt;5.1.2 多维数据模型创建方法 .248&lt;/p&gt;&lt;p&gt;5.2 5W2H 思维模型 .261&lt;/p&gt;&lt;p&gt;5.2.1 5W2H 思维模型概述 .261&lt;/p&gt;&lt;p&gt;5.2.2 5W2H 思维模型应用案例 262&lt;/p&gt;&lt;p&gt;5.3 多维数据透视分析应用案例 .265&lt;/p&gt;&lt;p&gt;5.3.1 业务场景介绍 .265&lt;/p&gt;&lt;p&gt;5.3.2 案例设计制作过程 .265&lt;/p&gt;&lt;p&gt;5.4 本章练习题 267&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;第6 章 业务分析方法 &lt;/span&gt;274&lt;/p&gt;&lt;p&gt;6.1 业务指标分析 .274&lt;/p&gt;&lt;p&gt;6.1.1 通用指标计算方法 .276&lt;/p&gt;&lt;p&gt;6.1.2 场景指标 .286&lt;/p&gt;&lt;p&gt;6.1.3 指标体系 .302&lt;/p&gt;&lt;p&gt;6.2 业务模型分析 .307&lt;/p&gt;&lt;p&gt;6.2.1 分类模型 .308&lt;/p&gt;&lt;p&gt;6.2.2 漏斗模型 .312&lt;/p&gt;&lt;p&gt;6.3 业务分析方法论 .318&lt;/p&gt;&lt;p&gt;6.3.1 帕累托分析方法 .318&lt;/p&gt;&lt;p&gt;6.3.2 A/B 测试分析方法 .320&lt;/p&gt;&lt;p&gt;6.3.3 同期群分析方法 .320&lt;/p&gt;&lt;p&gt;6.3.4 因果分析方法 .321&lt;/p&gt;&lt;p&gt;6.4 本章练习题 322&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;第7 章 业务分析报告与数据可视化报表&lt;/span&gt;. 330&lt;/p&gt;&lt;p&gt;7.1 可视化分析图表 .330&lt;/p&gt;&lt;p&gt;7.1.1 业务图表决策树 .330&lt;/p&gt;&lt;p&gt;7.1.2 比较类图表 .331&lt;/p&gt;&lt;p&gt;7.1.3 序列类图表 .338&lt;/p&gt;&lt;p&gt;7.1.4 构成类图表 .339&lt;/p&gt;&lt;p&gt;7.1.5 描述类图表 .340&lt;/p&gt;&lt;p&gt;7.2 业务分析报表 .340&lt;/p&gt;&lt;p&gt;7.2.1 业务分析报表的分类与区别 .341&lt;/p&gt;&lt;p&gt;7.2.2 业务分析报表的创建方法 .342&lt;/p&gt;&lt;p&gt;7.3 业务分析报告 345&lt;/p&gt;&lt;p&gt;7.3.1 业务分析报告的分类 .346&lt;/p&gt;&lt;p&gt;7.3.2 业务分析报告撰写注意事项 .346&lt;/p&gt;&lt;p&gt;7.3.3 业务分析报告案例1 348&lt;/p&gt;&lt;p&gt;7.3.4 业务分析报告案例2 352&lt;/p&gt;&lt;p&gt;7.4 本章练习题 355&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;第8 章 CDA 职业发展&lt;/span&gt; 360&lt;/p&gt;&lt;p&gt;8.1 CDA 职业概述 360&lt;/p&gt;&lt;p&gt;8.1.1 CDA 职业背景 .360&lt;/p&gt;&lt;p&gt;8.1.2 CDA 职业特点 .361&lt;/p&gt;&lt;p&gt;8.1.3 CDA 职业前景 .362&lt;/p&gt;&lt;p&gt;8.2 CDA 认证简介 363&lt;/p&gt;&lt;p&gt;8.2.1 CDA 认证标准 .363&lt;/p&gt;&lt;p&gt;8.2.2 CDA 认证方式 .364&lt;/p&gt;&lt;p&gt;8.2.3 CDA 认证流程 .365&lt;/p&gt;&lt;p&gt;8.2.4 CDA 认证证书 .366&lt;/p&gt;&lt;p&gt;8.3 CDA 持证人与会员 .367&lt;/p&gt;&lt;p&gt;8.3.1 成为CDA 会员 367&lt;/p&gt;&lt;p&gt;8.3.2 CDA 持证人权益 .368&lt;/p&gt;&lt;p&gt;8.3.3 年检和继续教育 .369&lt;/p&gt;&lt;p&gt;附录A 数据类型列表 370&lt;/p&gt;&lt;p&gt;附录B 练习题答案及解析. 373&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-role=&quot;title&quot; data-tools=&quot;135编辑器&quot; data-id=&quot;34405&quot;&gt;&lt;section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section data-brushtype=&quot;text&quot; hm_fix=&quot;228:473&quot;&gt;&lt;strong&gt;作者简介&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;CDA 数据科学&lt;/span&gt;&lt;span&gt;研究院&lt;/span&gt;&lt;/span&gt;&lt;span/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;在数据分析领域深耕多年&lt;/span&gt;&lt;span&gt;，建立起CDA 数据分析能力认证体系，助力企业实现宏、微观相结合的数字化转型，提供合格的数据化工作人才保障。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;CDA 数据分析能力认证体系涵盖绩效分析、客户分析、流程分析、智能学习，助力企业成为宏、微观相结合的数字化战略中心组织。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;前面的分析为后面的工作指明方向，后面的活动为前面目标的实现提供能力支持。而最下层的学习活动在数字化时代，已经演变成“机器学习”，将业务知识以算法的形式固化在系统中。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_jpg/pxMrQvgWLUIGwSzwgEd2OyGEBT5kX2ib8y1ibhQyfdDNudOibKYxNXfGd9QzMMjht6CgVw00YyQjDfxoBTbicGoTQg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;800&quot;/&gt;&lt;/p&gt;&lt;section data-role=&quot;list&quot;&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;CDA LEVEL Ⅰ教材&lt;/span&gt;&lt;span&gt;主要讲解业务分析所涉及的评价指标体系的构建、数据采集与数据操作、商业智能分析、战略及运营分析报告等业务宏观分析技术；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;CDALEVEL Ⅱ教材主要讲解客户运营、流程分析和策略优化所涉及的标签体系、用户画像、根因分析、预测模型、运筹优化等业务宏观分析与客户微观洞察相融合的技术；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;CDA LEVEL Ⅲ教材主要讲解在商业机器学习运营（MLOps）框架下如何设计、开发和落地相关的算法模型，以及机器学习经典算法与案例、自然语言处理、自动学习等客户微观分析技术。教材在工具实现上选择当今比较流行的数据库语言SQL和编程语言Python 等。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-role=&quot;title&quot; data-tools=&quot;135编辑器&quot; data-id=&quot;34405&quot;&gt;&lt;section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section data-brushtype=&quot;text&quot; hm_fix=&quot;229:470&quot;&gt;&lt;strong&gt;本书亮点&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;section data-role=&quot;list&quot;/&gt;&lt;p&gt;&lt;span&gt;在备考CDA认证一级考试的过程中，不少考生由于各方面的原因影响了复习和备考，从而难以通过考试，或取得理想的成绩。本书针对CDA LEVELⅠ应试人员&lt;/span&gt;&lt;span&gt;的四大困难，采用通俗易懂的语言，循序渐进的系统结构，帮助考生沉着应对CDA认证考试。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1.3602305475504324&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/pxMrQvgWLUIGwSzwgEd2OyGEBT5kX2ib8DogIB5G3eKGadwcyfh9xGYM0lXIiatLVRBMwoU0CWIUZTLkuqMvXktw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;694&quot;/&gt;&lt;span/&gt;&lt;/p&gt;&lt;section data-role=&quot;list&quot;/&gt;&lt;p&gt;&lt;span&gt;本书通过以下三个优势，帮助读者建立完整的数据分析知识体系，深入掌握每个具体知识点。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;2.3534743202416917&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/pxMrQvgWLUIGwSzwgEd2OyGEBT5kX2ib8gLo8jria8mho6R5aAL6plc3my5dNOgib4kdZPhPInvbszwgQFcAPQO2g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;662&quot;/&gt;&lt;/p&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-role=&quot;list&quot;/&gt;&lt;p&gt;&lt;span&gt;对企业管理者洞察业务问题有帮助的数据分析结果主要产生于两种不同类型的数据分析方法：第一种数据分析方法是&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;业务描述性分析方法&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;，第二种数据分析方法是数据挖掘分析方法。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;业务描述性分析方法可以帮助企业管理者找到业务问题出现的关键位置。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;因为此种分析方法只对过去发生过的业务行为结果进行如实描述，并不对未来可能出现的业务情况进行预测，所以将其称为业务描述性分析方法。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;业务描述性分析方法不仅具备普适性，而且学习难度也并不算高。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;因为此种分析方法一般不需要使用艰涩难懂的数学理论，也很少需要用到复杂的编程语言，所以它的准入门槛对比另一种数据挖掘的分析方法要低很多，&lt;/span&gt;&lt;span&gt;&lt;span&gt;不仅专业的数据分析人员需要精通，就连不同业务岗位上的业务工作者也应该尽早掌握这项技能。&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;所以，对于不需要考证的你来说，这本书也可以帮助你早日实现升职加薪，职场之路越走越宽、越走越顺。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_jpg/pxMrQvgWLUIGwSzwgEd2OyGEBT5kX2ib8X0r88wia8pZtZHVXpjF82E6rWLfPKJMjiaCfDZYyIaCzcwdLr4I5tbFQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;800&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-role=&quot;title&quot; data-tools=&quot;135编辑器&quot; data-id=&quot;34405&quot;&gt;&lt;section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section data-brushtype=&quot;text&quot; hm_fix=&quot;233:457&quot;&gt;&lt;strong&gt;福利时刻&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;助学锦囊 免费领取&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;刷题小程序&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;内含海量模拟题&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1.1395348837209303&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/pxMrQvgWLUIGwSzwgEd2OyGEBT5kX2ib8APGRUFpwVpQ5XsfvKSibiaV374M6WU8YeqWlHic7AeicpdXZmPFic4EbKyA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;344&quot;/&gt;&lt;/p&gt;&lt;p&gt;微信扫一扫，进入「&lt;span&gt;如荷学题库&lt;/span&gt;」小程序，获取海量模拟题。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;考试备考群&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;与优秀者同行，备考不孤单&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1.528888888888889&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/pxMrQvgWLUIGwSzwgEd2OyGEBT5kX2ib84StCeAtheN2fJsMQvezlN6Jfdc8kia3mUXT3Z8uKKdf2PQ0CJqVPic3A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;450&quot;/&gt;&lt;/p&gt;&lt;p&gt;添加罗老师微信，加入&lt;span&gt;CDA认证考试备考群&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;领取方式&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;翻开书籍封面，扫描「&lt;span&gt;CDA考试中心&lt;/span&gt;」二维码，关注并回复关键字，按照指导领取。&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;2.649147727272727&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PW0wIHxgg3khBZDFXt4Mbm8alyfDWbhr9xQRzH0OL6LpR1ZmVS7PWUag7asR1evoeoKngmRGItU66QYC77hvyw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;704&quot;/&gt;&lt;/p&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;正值双十一活动期间，快快扫码抢购吧&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;2280&quot;&gt;&lt;section&gt;&lt;section data-width=&quot;50%&quot;&gt;&lt;img border=&quot;0&quot; class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PW0wIHxgg3khBZDFXt4Mbm8alyfDWbhrpWOmEb9qyEenvY2AWYV6IceibuCyicey7TpA43kfAia4WeqP7Vmf8fqfw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;300&quot; data-width=&quot;100%&quot; opacity=&quot;&quot; title=&quot;&quot;/&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;京东下单立减50&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-width=&quot;50%&quot;&gt;&lt;img border=&quot;0&quot; class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PW0wIHxgg3khBZDFXt4Mbm8alyfDWbhrnXx9Jz2q5u524Nwibaz5EuXUaeNWrHquBjlibfJJuVunRWymX4hv1a6g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;300&quot; data-width=&quot;100%&quot; opacity=&quot;&quot; title=&quot;&quot;/&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;当当五折&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;发布：刘恩惠&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;审核：陈歆懿&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-croporisrc=&quot;https://mmbiz.qpic.cn/mmbiz_png/PW0wIHxgg3ntPMYAJur3UuYzhSDgO7Puv74VHDtgNjyJbpQvt1gicgSpjrlpDy6BheYoAmtjiaF7cdIuPkuUlFkw/0?wx_fmt=png&quot; data-cropx1=&quot;0&quot; data-cropx2=&quot;1920&quot; data-cropy1=&quot;0&quot; data-cropy2=&quot;29.8961937716263&quot; data-ratio=&quot;0.01574074074074074&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/PW0wIHxgg3ntPMYAJur3UuYzhSDgO7Pu8DQL5f0FQIuDZC87yrAuNLy4frEdlMeWkthrlzczb0RbMOBQCAwDrA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section&gt;&lt;span&gt;如果喜欢本文&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;欢迎&lt;/span&gt; &lt;span&gt;&lt;strong&gt;在看&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;丨&lt;/span&gt;&lt;span&gt;&lt;strong&gt;留言&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;丨&lt;/span&gt;&lt;span&gt;&lt;strong&gt;分享至朋友圈&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; 三连&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-id=&quot;92644&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-width=&quot;100%&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;span&gt; &lt;strong&gt;热文推荐 &lt;/strong&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;hr/&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;574&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;244&quot; data-ratio=&quot;0.4255555555555556&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PW0wIHxgg3m3jibtjia3lCrCvUY6N19QMZ3FjCcpuHouXkdLicQVUiaLicgR8cgSbk7RA8G427GKowhbEvVefuJp53g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;900&quot;/&gt;&lt;/p&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;▼点击阅读原文，了解本书详情~&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>a3041bcc14a1ea2f04c721043e3b50b9</guid>
<title>干货｜ 火山引擎在行为分析场景下的ClickHouse JOIN优化</title>
<link>https://toutiao.io/k/1haelxz</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content js_underline_content             autoTypeSetting24psection&amp;#10;            &quot; id=&quot;js_content&quot;&gt;&lt;p data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.34629629629629627&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jC2t9Zib67r1mQp3by2Sld0NkibWF5Vsz1LQe1HgegziaWJguUStKR8snibKMUNeVjHNicJqPIDDJs7osvkLGjRnoBg/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;blockquote mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;span&gt;本文主要介绍在行为分析场景下，随着接入应用以及&lt;span&gt;DAU&lt;/span&gt;日益增加，如何针对&lt;span&gt;ClickHouse JOIN&lt;/span&gt;进行优化，提升执行效率、降低错误率。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.4255555555555556&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jC2t9Zib67r1qmCfTqRuSUTY7Of8qfgdDTeJxDs86X7NZXDjUrQxaL8hHjl9yzFiceZicMSRWhg8yZQiaf1rOaT4vg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;900&quot;/&gt;&lt;strong&gt;&lt;span&gt;文 | &lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;Frank  &lt;/span&gt;&lt;/strong&gt;&lt;span&gt;来自字节跳动数据平台DataFinder团队&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.24390243902439024&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ib745vqibLBGIeAicnHiag9GCzTYjeicic5IWPqfyjLajDuwtJdNCAnCgcolqY8ROaE5CsEXR5zbjCU9aVl3WfkZpnDw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;82&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;&lt;strong&gt;背景&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;火山引擎增长分析DataFinder基于ClickHouse来进行行为日志的分析，ClickHouse的主要版本是基于社区版改进开发的字节内部版本。主要的表结构：&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.8950715421303657&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jC2t9Zib67r1qmCfTqRuSUTY7Of8qfgdDKwkuf8l6ZjopohVZeKASq1bjf9835eKRErvwaYGyd2wMia8SYZ8ibaxQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;629&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;事件表：存储用户行为数据，以&lt;/span&gt;&lt;strong&gt;用户&lt;/strong&gt;&lt;strong&gt;ID&lt;/strong&gt;&lt;span&gt;分shard存储。&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;--列出了主要的字段信息&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;CREATE TABLE tob_apps_all&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;(&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    `tea_app_id`                UInt32,  --应用ID&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    `device_id`             String DEFAULT &#x27;&#x27;, --设备ID&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    `time`                  UInt64,--事件日志接受时间&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    `event`                 String,--事件名称&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    `user_unique_id`        String,--用户ID&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    `event_date`            Date,--事件日志日期，由time转换而来&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    `hash_uid`              UInt64 --用户ID hash过后的id，用来join降低内存消耗&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;)│&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;用户表：存储用户的属性数据，以用户ID分shard存储。&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;--列出了主要的字段信息&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;CREATE TABLE users_unique_all&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;(&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    `tea_app_id`            UInt32,            --应用ID&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    `user_unique_id`        String DEFAULT &#x27;&#x27;, -- 用户ID&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    `device_id`             String DEFAULT &#x27;&#x27;, -- 用户最近的设备ID&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    `hash_uid`              UInt64,--用户ID hash过后的id，用来join降低内存消耗&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    `update_time`           UInt64,--最近一次更新时间&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    `last_active_date`      Date   --用户最后活跃日期&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;设备表：存储设备相关的数据，以设备ID分shard存储。&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;--列出了主要的字段信息&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;CREATE TABLE devices_all&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;(&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    `tea_app_id`            UInt32,            --应用ID&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    `device_id`             String DEFAULT &#x27;&#x27;, --设备ID    &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    `update_time`           UInt64,            --最近一次更新时间&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    `last_active_date`      Date               --用户最后活跃日期&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;业务对象表：存储业务对象相关的数据，每个shard存储全量的数据&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;--列出了主要的字段信息&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;CREATE TABLE rangers.items_all&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;(&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    `tea_app_id`            UInt32,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    `hash_item_id`          Int64,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    `item_name`             String, --业务对象名称。比如商品&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    `item_id`               String, --业务对象ID。比如商品id 1000001&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    `last_active_date`      Date&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;h2/&gt;&lt;p&gt;&lt;span&gt;业务挑战&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.3200319233838787&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jC2t9Zib67r1qmCfTqRuSUTY7Of8qfgdDplgjOwU5hASOfSicEdv54j6K4JZIRrTAFp7qialmtGUJcyjuE9AuVYmA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1253&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;随着接入应用以及应用的DAU日益增加，ClickHouse表的事件量增长迅速；并且基于行为数据需要分析的业务指标越来越复杂，需要JOIN的表增多；我们遇到有一些涉及到JOIN的复杂SQL执行效率低，内存和CPU资源占用高，导致分析接口响应时延和错误率增加。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.24390243902439024&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ib745vqibLBGIeAicnHiag9GCzTYjeicic5IWPqfyjLajDuwtJdNCAnCgcolqY8ROaE5CsEXR5zbjCU9aVl3WfkZpnDw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;82&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;h1&gt;&lt;strong&gt;&lt;span&gt;关于ClickHouse的JOIN&lt;/span&gt;&lt;/strong&gt;&lt;/h1&gt;&lt;p data-mid=&quot;&quot;&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;在介绍优化之前，先介绍一下基本的ClickHouse JOIN的类型和实现方式。&lt;/span&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;h2/&gt;&lt;p&gt;&lt;span&gt;分布式JOIN&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;SELECT &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    et.os_name, &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    ut.device_id AS user_device_id&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;FROM tob_apps_all AS et &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;ANY LEFT JOIN &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;(&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    SELECT &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        device_id, &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        hash_uid&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    FROM users_unique_all &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    WHERE (tea_app_id = 268411) AND (last_active_date &amp;gt;= &#x27;2022-08-06&#x27;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;) AS ut ON et.hash_uid = ut.hash_uid&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;WHERE (tea_app_id = 268411) &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;AND (event = &#x27;app_launch&#x27;) &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;AND (event_date = &#x27;2022-08-06&#x27;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;基本执行过程：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;一个Clickhouse节点作为Coordinator节点，给每个节点分发子查询，子查询sql（tob_apps_all替换成本地表，users_unique_all保持不变依然是分布式表）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;每个节点执行Coordinator分发的sql时，发现users_unique_all是分布式表，就会去所有节点上去查询以下SQL(一共有N*N。N为shard数量)&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;SELECT device_id, hash_uid FROM users_unique WHERE (tea_app_id = 268411) AND (last_active_date &amp;gt;= &#x27;2022-08-06&#x27;)&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;每个节点从其他N-1个节点拉取2中子查询的全部数据，全量存储(内存or文件)，进行本地JOIN&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Coordinator节点从每个节点拉取3中的结果集，然后做处理返回给client&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;存在的问题：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;子查询数量放大&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;每个节点都全量存储全量的数据&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;h2/&gt;&lt;p&gt;&lt;span&gt;分布式&lt;span&gt;Global JOIN&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;SELECT &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    et.os_name, &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    ut.device_id AS user_device_id&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;FROM tob_apps_all AS et &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;GLOBAL ANY LEFT JOIN &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;(&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    SELECT &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        device_id, &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        hash_uid&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    FROM users_unique_all &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    WHERE (tea_app_id = 268411) AND (last_active_date &amp;gt;= &#x27;2022-08-06&#x27;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;) AS ut ON et.hash_uid = ut.hash_uid&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;WHERE (tea_app_id = 268411) &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;AND (event = &#x27;app_launch&#x27;) &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;AND (event_date = &#x27;2022-08-06&#x27;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;基本执行过程：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;ol start=&quot;1&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;一个Clickhouse节点作为Coordinator节点，分发查询。在每个节点上执行sql（tob_apps_all替换成本地表，右表子查询替换成别名ut）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ol start=&quot;2&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Coordinator节点去其他节点拉取users_unique_all的全部数据，然后分发到全部节点（作为1中别名表ut的数据）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ol start=&quot;3&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;每个节点都会存储全量的2中分发的数据(内存or文件)，进行本地local join&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ol start=&quot;4&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Coordinator节点从每个节点拉取3中的结果集，然后做处理返回给client&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;存在的问题：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;每个节点都全量存储数据&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;如果右表较大，分发的数据较大，会占用网络带宽资源&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;h2/&gt;&lt;p&gt;&lt;span&gt;本地JOIN&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;SQL里面只有本地表的JOIN，只会在当前节点执行&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;SELECT et.os_name,ut.device_id AS user_device_id&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;FROM tob_apps et any LEFT JOIN&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    (SELECT device_id,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;         hash_uid&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    FROM rangers.users_unique&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    WHERE tea_app_id = 268411&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            AND last_active_date&amp;gt;=&#x27;2022-08-06&#x27;) ut&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    ON et.hash_uid=ut.hash_uid&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;WHERE tea_app_id = 268411&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        AND event=&#x27;app_launch&#x27;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        AND event_date=&#x27;2022-08-06&#x27;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt; Hash join &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt; Merge join &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;优先使用hash join当内存达到一定阈值后再使用merge join，优先满足性能要求&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.24390243902439024&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ib745vqibLBGIeAicnHiag9GCzTYjeicic5IWPqfyjLajDuwtJdNCAnCgcolqY8ROaE5CsEXR5zbjCU9aVl3WfkZpnDw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;82&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;解决方案&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.4588068181818182&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jC2t9Zib67r1qmCfTqRuSUTY7Of8qfgdD2zLYEJ0LY8WtNMNGwGgms8moM6qc2mca7JEROFR1I2QTdbOztnpnrQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;704&quot;/&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;h2/&gt;&lt;p&gt;&lt;span&gt;避免JOIN&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt; 数据预生成 &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;数据预生成(由Spark/Flink或者Clickhouse物化视图产出数据)，形成大宽表，基于单表的查询是ClickHouse最为擅长的场景。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我们有个指标，实现的SQL比较复杂（如下），每次实时查询很耗时，我们单独建了一个表table，由Spark每日构建出这个指标，查询时直接基于table查询。&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;SELECT event_date,count(distinct uc1) AS uv,sum(value) AS sum_value, ......&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;FROM&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    (SELECT event_date,hash_uid AS uc1,sum(et.float_params{&#x27;amount&#x27;}) AS value, count(1) AS cnt, value*cnt AS multiple&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    FROM tob_apps_all et GLOBAL ANY LEFT JOIN&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        (SELECT hash_uid AS join_key,int_profiles{&#x27;$ab_time_34&#x27;}*1000 AS first_time&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        FROM users_unique_all&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        WHERE app_id = 10000000 AND last_active_date &amp;gt;= &#x27;2022-07-19&#x27; AND first_time is NOT null) upt&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            ON et.hash_uid=upt.join_key&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        WHERE (查询条件)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        GROUP BY  uc1,event_date)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;GROUP BY event_date;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;数据量2300W，查询时间由7秒-&amp;gt;0.008秒。当然这种方式，需要维护额外的数据构建任务。总的思路就是不要让ClickHouse实时去JOIN。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.7518587360594795&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jC2t9Zib67r1qmCfTqRuSUTY7Of8qfgdDduJO04BaqFyKeWviaxBKQtJoOibGPST0tUia1ASUk7iaqYdDuoa8Zc1vGQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1076&quot;/&gt;&lt;/p&gt;&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt; 使用IN代替JOIN &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;section&gt;&lt;span&gt;JOIN需要基于内存构建hash table且需要存储右表全部的数据，然后再去匹配左表的数据。而IN查询会对右表的全部数据构建hash set，但是不需要匹配左表的数据，且不需要回写数据到block。&lt;/span&gt;&lt;/section&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;SELECT event_date, count()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;FROM tob_apps_all et global any INNER JOIN&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    (SELECT hash_uid AS join_key&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    FROM users_unique_all&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    WHERE app_id = 10000000&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            AND last_active_date &amp;gt;= &#x27;2022-01-01&#x27;) upt&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    ON et.hash_uid = upt.join_key&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;WHERE app_id = 10000000&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        AND event_date &amp;gt;= &#x27;2022-01-01&#x27;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        AND event_date &amp;lt;= &#x27;2022-08-02&#x27;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;GROUP BY  event_date&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;可以改成如下形式：&lt;/span&gt;&lt;/section&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;SELECT event_date,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;         count()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;FROM tob_apps_all&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;WHERE app_id = 10000000&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        AND event_date &amp;gt;= &#x27;2022-01-01&#x27;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        AND event_date &amp;lt;= &#x27;2022-08-02&#x27;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        AND hash_uid global IN &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    (SELECT hash_uid&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    FROM users_unique_all&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    WHERE (tea_app_id = 10000000)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            AND (last_active_date &amp;gt;= &#x27;2022-01-01&#x27;) )&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; GROUP BY event_date&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;如果需要从右表提取出属性到外层进行计算，则不能使用IN来代替JOIN。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;相同的条件下，上面的测试SQL，&lt;strong&gt;由JOIN时的16秒优化到了&lt;/strong&gt;&lt;strong&gt;IN&lt;/strong&gt;&lt;strong&gt;查询时的11秒。&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.8755411255411255&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jC2t9Zib67r1qmCfTqRuSUTY7Of8qfgdDA4xy2icpfkjkJKL9IDLaOo7sxqAwlLibiaibeGLXXrHnib168DwONXap11w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;924&quot;/&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;h2/&gt;&lt;p&gt;&lt;span&gt;更快的JOIN&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt; 优先本地JOIN &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;h4&gt;&lt;strong&gt;&lt;span&gt;1. 数据预先相同规则分区&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;&lt;span&gt;也就是Colocate JOIN。优先将需要关联的表按照相同的规则进行分布，查询时就不需要分布式的JOIN。&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;SELECT&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    et.os_name, &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    ut.device_id AS user_device_id&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;FROM tob_apps_all AS et &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;ANY LEFT JOIN &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;(&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    SELECT &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        device_id, &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        hash_uid&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    FROM users_unique_all &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    WHERE (tea_app_id = 268411) AND (last_active_date &amp;gt;= &#x27;2022-08-06&#x27;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;) AS ut ON et.hash_uid = ut.hash_uid&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;WHERE (tea_app_id = 268411) &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;AND (event = &#x27;app_launch&#x27;) &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;AND (event_date = &#x27;2022-08-06&#x27;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;settings distributed_perfect_shard=1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;比如事件表tob_apps_all和用户表users_unique_all都是按照用户ID来分shard存储的，相同的用户的两个表的数据都在同一个shard上，因此这两个表的JOIN就不需要分布式JOIN了。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;distributed_perfect_shard这个settings key是字节内部ClickHouse支持的，设置过这个参数，指定执行计划时就不会再执行分布式JOIN了。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;基本执行过程：&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;一个ClickHouse节点作为Coordinator节点，分发查询。在每个节点上执行sql（tob_apps_all、users_unique_all替换成本地表）&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;每个节点都执行1中分发的本地表join的SQL（这一步不再分发右表全量的数据）&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;数据再回传到coordinator节点，然后返回给client&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4&gt;&lt;strong&gt;&lt;span&gt;2.  数据冗余存储 &lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;&lt;section&gt;&lt;span&gt;如果一个表的数据量比较小，可以不分shard存储，每个shard都存储全量的数据，例如我们的业务对象表。查询时，不需要分布式JOIN，直接在本地进行JOIN即可。&lt;/span&gt;&lt;/section&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;SELECT count()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;FROM tob_apps_all AS et &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;ANY LEFT JOIN &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;(&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    SELECT item_id&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    FROM items_all &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    WHERE (tea_app_id = 268411)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;) AS it ON et.item_id = it.item_id&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;WHERE (tea_app_id = 268411) &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;AND (event = &#x27;app_launch&#x27;) &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;AND (event_date = &#x27;2022-08-06&#x27;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;settings distributed_perfect_shard=1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;例如这个SQL，items_all表每个shard都存储同样的数据，这样也可以避免分布式JOIN带来的查询放大和全表数据分发问题。&lt;/span&gt;&lt;/section&gt;&lt;h3&gt;&lt;strong&gt;&lt;span&gt; 更少的数据  &lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;不论是分布式JOIN还是本地JOIN，都需要尽量让少的数据参与JOIN，既能提升查询速度也能减少资源消耗。&lt;/span&gt;&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-1&quot; start=&quot;1&quot;&gt;&lt;li&gt;&lt;h4&gt;&lt;strong&gt;&lt;span&gt;SQL下推&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/h4&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;span&gt;ClickHouse对SQL的下推做的不太好，有些复杂的SQL下推会失效。因此，我们手动对SQL做了下推，目前正在测试基于查询优化器来帮助实现下推优化，以便让SQL更加简洁。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;下推的SQL：&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;SELECT &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    et.os_name, &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    ut.device_id AS user_device_id&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;FROM tob_apps_all AS et &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;ANY LEFT JOIN &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;(&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    SELECT &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        device_id, &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        hash_uid&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    FROM users_unique_all &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    WHERE (tea_app_id = 268411) &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        AND (last_active_date &amp;gt;= &#x27;2022-08-06&#x27;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        AND 用户属性条件1  OR 用户属性条件2)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;) AS ut ON et.hash_uid = ut.hash_uid&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;WHERE (tea_app_id = 268411) &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;AND (event = &#x27;app_launch&#x27;) &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;AND (event_date = &#x27;2022-08-06&#x27;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;settings distributed_perfect_shard=1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;对应的不下推的SQL：&lt;/span&gt;&lt;/section&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;SELECT &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    et.os_name, &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    ut.device_id AS user_device_id&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;FROM tob_apps_all AS et &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;ANY LEFT JOIN &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;(&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    SELECT &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        device_id, &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        hash_uid&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    FROM rangers.users_unique_all &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    WHERE (tea_app_id = 268411) &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        AND (last_active_date &amp;gt;= &#x27;2022-08-06&#x27;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;) AS ut ON et.hash_uid = ut.hash_uid&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;WHERE (tea_app_id = 268411) &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;AND (event = &#x27;app_launch&#x27;) &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;AND (event_date = &#x27;2022-08-06&#x27;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;AND (ut.用户属性条件1  OR ut.用户属性条件2)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;settings distributed_perfect_shard=1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;可以看到，不下推的SQL更加简洁，直接基于JOIN过后的宽表进行过滤。但是ClickHouse可能会将不满足条件的users_unique_all数据也进行JOIN。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我们使用中有一个复杂的case，用户表过滤条件不下推有1千万+，SQL执行了3000秒依然执行超时，而做了下推之后60秒内就执行成功了。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.8506493506493507&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jC2t9Zib67r1qmCfTqRuSUTY7Of8qfgdD4f301Kh7olwXHKTt7VdP7zABCU88mtAgS8gazHRP1mTsYZ3CZykMcA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;924&quot;/&gt;&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;&lt;span&gt; Clickhouse引擎层优化 &lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;section&gt;&lt;span&gt;一个SQL实际在Clickhouse如何执行，对SQL的执行时间和资源消耗至关重要。社区版的Clickhouse在执行模型和SQL优化器上还要改进的空间，尤其是复杂SQL以及多JOIN的场景下。&lt;/span&gt;&lt;/section&gt;&lt;ol class=&quot;list-paddingleft-1&quot; start=&quot;1&quot;&gt;&lt;li&gt;&lt;h4&gt;&lt;strong&gt;&lt;span&gt;执行模型优化&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;&lt;/ol&gt;&lt;section&gt;&lt;span&gt;社区版的Clickhouse目前还是一个两阶段执行的执行模型。第一阶段，Coordinator在收到查询后，将请求发送给对应的Worker节点。第二阶段，Worker节点完成计算，Coordinator在收到各Worker节点的数据后进行汇聚和处理，并将处理后的结果返回。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.41171875&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jC2t9Zib67r1qmCfTqRuSUTY7Of8qfgdDkyB2rks2qbs6SIYXAicNZiaXSTBZmYEoLkqxcvIsFIr7Niao8kiaXodWHg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;有以下几个问题：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;字节跳动ClickHouse团队为了解决上述问题，改进了执行模型，参考其他的分布式数据库引擎(例如Presto等)，将一个复杂的Query按数据交换情况切分成多个 Stage，各Stage之间则通过Exchange完成数据交换。根据Stage依赖关系定义拓扑结构，产生DAG图，并根据DAG图调度Stage。例如两表Join，会先调度左右表读取Stage，之后再调度Join这个Stage，Join的Stage依赖于左右表的Stage。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;1.1206543967280163&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jC2t9Zib67r1qmCfTqRuSUTY7Of8qfgdDDzmasOQ8I2WGeicx25Zr3v730MCef0uueP8sFPEo49DMbiaXHf27vQqw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;978&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;举个例子&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;SELECT &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    et.os_name, &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    ut.device_id AS user_device_id, &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    dt.hash_did AS device_hashid&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;FROM tob_apps_all AS et &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;GLOBAL ANY LEFT JOIN &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;(&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    SELECT &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        device_id, &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        hash_uid&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    FROM users_unique_all &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    WHERE (tea_app_id = 268411) AND (last_active_date &amp;gt;= &#x27;2022-08-06&#x27;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;) AS ut ON et.hash_uid = ut.hash_uid&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;GLOBAL ANY LEFT JOIN &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;(&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    SELECT &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        device_id, &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        hash_did&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    FROM devices_all &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    WHERE (tea_app_id = 268411) AND (last_active_date &amp;gt;= &#x27;2022-08-06&#x27;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;) AS dt ON et.device_id = dt.device_id&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;WHERE (tea_app_id = 268411) AND (event = &#x27;app_launch&#x27;) AND (event_date = &#x27;2022-08-06&#x27;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;LIMIT 10&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;Stage执行模型基本过程（可能的）：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;统计效果如下：&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.44375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jC2t9Zib67r1qmCfTqRuSUTY7Of8qfgdDPYS9FMia2AdpYncGMTord6Q7PugGrBcZNXoZqYVLQicFIrcQsLEoXJIQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-1&quot; start=&quot;2&quot;&gt;&lt;li&gt;&lt;h4&gt;&lt;strong&gt;&lt;span&gt;查询优化器&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;&lt;/li&gt;&lt;/ol&gt;&lt;section&gt;&lt;span&gt;有了上面的stage的执行模型，可以灵活调整SQL的执行顺序，字节跳动Clickhouse团队自研了查询优化器，根据优化规则(基于规则和代价预估)对SQL的执行计划进行转换，一个执行计划经过优化规则后会变成另外一个执行计划，能够准确的选择出一条效率最高的执行路径，然后构建Stage的DAG图，大幅度降低查询时间。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;下图描述了整个查询的执行流程，从 SQL parse 到执行期间所有内容全部进行了重新实现（其中紫色模块），构建了一套完整的且规范的查询优化器。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.93359375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jC2t9Zib67r1qmCfTqRuSUTY7Of8qfgdD2SibyuLsp8QNLPrbXCPD2S1CxXLqkASmfWcINo2XOyRayOoB9ZibCa0Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;还是上面的三表JOIN的例子，可能的一个执行过程是：&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;查询优化器&lt;/strong&gt;发现users_unique_all表与tob_apps_all表的分shard规则一样（基于用户ID），所以就不会先对表按 join key 进行 shuffle，users_unique与tob_apps直接基于本地表JOIN，然后再按照join key(device_id)进行shuffle。这是一个Stage&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;查询优化器&lt;/strong&gt;根据&lt;strong&gt;规则或者代价预估决定&lt;/strong&gt;设备表devices_all是需要broadcast join还是shuffle join&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ol start=&quot;2&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;如果broadcast join：在一个节点查到全部的device数据，然后分发到其他节点。这是一个Stage&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;如果shuffle join：在每个节点对device数据按照join key(device_id)进行shuffle。这是一个Stage&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;汇总数据，返回limit 10的数据。这是一个Stage&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;效果：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;可以看到，查询优化器能优化典型的复杂的SQL的执行效率，缩短执行时间&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.75&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jC2t9Zib67r1qmCfTqRuSUTY7Of8qfgdD8cB0NacAr2aOJksANAuwyRT8Q1uL9ZRAs9TPMDRxK98iapW43HmruJw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;640&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;0.24390243902439024&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ib745vqibLBGIeAicnHiag9GCzTYjeicic5IWPqfyjLajDuwtJdNCAnCgcolqY8ROaE5CsEXR5zbjCU9aVl3WfkZpnDw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;82&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;总结&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;ClickHouse最为擅长的领域是一个大宽表来进行查询，多表JOIN时Clickhouse性能表现不佳。作为业内领先的用户分析与运营平台，火山引擎增长分析DataFinder基于海量数据做到了复杂指标能够秒级查询。本文介绍了我们是如何优化Clickhouse JOIN查询的。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;主要有以下几个方面：&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;减少参与JOIN的表以及数据量&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;优先使用本地JOIN，避免分布式JOIN带来的性能损耗&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;优化本地JOIN，优先使用内存进行JOIN&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;优化分布式JOIN的执行逻辑，依托于字节跳动对ClickHouse的深度定制化&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;span&gt;&lt;p&gt;&lt;span&gt;产品介绍&lt;/span&gt;&lt;/p&gt;&lt;/span&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;火山引擎增长分析DataFinder&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;一站式用户分析与运营平台&lt;/strong&gt;为企业提供数字化消费者行为分析洞见，优化数字化触点、用户体验，支撑精细化用户运营，发现业务的关键增长点，提升企业效益。&lt;strong&gt;后台回复数字“10”了解产品&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;span&gt;&lt;strong&gt;&lt;img class=&quot;rich_pages wxw-img __bg_gif&quot; data-ratio=&quot;1&quot; data-type=&quot;gif&quot; data-w=&quot;40&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/jC2t9Zib67r2rAVRBzMMF9nV9BqFPOhzHwu1XL92AFW8jK9zAQXmo5FcO2W6Ce3ld46owl9H8H1toPneEsh4mNA/640?wx_fmt=gif&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&quot;/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;点击&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;strong&gt;&lt;span&gt;阅读原文&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;进入官网&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;strong&gt;&lt;span&gt;，&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;strong&gt;&lt;span&gt;了解DataFinder更多产品信息&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span/&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;mp-style-type data-value=&quot;3&quot;/&gt;&lt;/p&gt;&lt;/div&gt;

          
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>