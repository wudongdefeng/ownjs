<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>91c2450bd663f17676fa79a6b27bb904</guid>
<title>万字详解生成式 AI 与 Web3</title>
<link>https://toutiao.io/k/msxyhq0</link>
<content:encoded>&lt;div&gt;&lt;body id=&quot;readabilityBody&quot;&gt;
&lt;p id=&quot;app&quot;/&gt;


&lt;/body&gt;
&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>cf480bb2c2fc3f5c0811e8ac023f7fc6</guid>
<title>ChatGPT的训练过程术语整理 - 知乎</title>
<link>https://toutiao.io/k/iqx3wmg</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;RichText ztext Post-RichText css-1g0fqss&quot; options=&quot;[object Object]&quot;&gt;&lt;p data-first-child=&quot;&quot; data-pid=&quot;YrapEgJs&quot;&gt;以ChatGPT为代表的大语言模型训练框架包含五步：&lt;/p&gt;&lt;ol&gt;&lt;li data-pid=&quot;JZfOBPB9&quot;&gt;基座预训练（Base pretrain）&lt;/li&gt;&lt;li data-pid=&quot;fN34qpju&quot;&gt;SFT微调（Supervised Fine-Tuning）&lt;/li&gt;&lt;li data-pid=&quot;4BjEAueM&quot;&gt;奖励函数训练（Reward Modeling, RM），最常用的是基于排序的奖励函数建模（Ranking-Based Reward Modeling，RBRM）&lt;/li&gt;&lt;li data-pid=&quot;0pEq9f_y&quot;&gt;基于人类反馈的强化学习（RLHF，基于RM/RBRM进行PPO强化学习训练）&lt;/li&gt;&lt;li data-pid=&quot;SQNflvdo&quot;&gt;与人类对齐（Align AI with human values）&lt;/li&gt;&lt;/ol&gt;&lt;h3&gt;基座预训练&lt;/h3&gt;&lt;p data-pid=&quot;9Kl1N-ho&quot;&gt;大语言模型的基座（Base）通常指的是在大量文本数据上进行预训练的初始模型。这个初始模型作为一个基础框架，具有一定程度的通用语言理解能力，但可能在特定任务上的表现尚不理想。预训练模型的目的是让模型学习到语言的基本结构、语法规则和一般知识，从而为后续的任务定向训练打下基础。&lt;/p&gt;&lt;p data-pid=&quot;2RH1YzAG&quot;&gt;在大语言模型的训练过程中，通常会采用两阶段训练策略：预训练阶段和微调阶段。在预训练阶段，模型在大量无标注文本数据上进行训练，学习到语言的基本知识和潜在规律。预训练后的模型就是所谓的基座。在微调阶段，针对特定任务，模型会在有标注数据的情况下进行进一步训练，以适应特定任务的需求。&lt;/p&gt;&lt;p data-pid=&quot;TrtEETC5&quot;&gt;以OpenAI的GPT系列模型为例，GPT-3的基座模型是一个具有1750亿参数的大型神经网络，它在大量文本数据上进行了预训练。这个基座模型在许多自然语言处理任务上具有较强的表现，但为了在特定任务上取得更好的性能，通常需要对其进行进一步的微调。通过对基座模型进行微调，可以使其更好地适应特定任务的需求，从而实现更高的性能。&lt;/p&gt;&lt;h3&gt;SFT微调（Supervised Fine-Tuning）&lt;/h3&gt;&lt;p data-pid=&quot;w1ZTBOjw&quot;&gt;SFT微调是指对预先训练好的大型语言模型（如GPT系列）进行监督式微调。通过使用大量的人工标注数据，根据特定任务需求，进一步优化模型的性能。这些数据通常包括输入与对应的期望输出，让模型学会如何从输入得出正确的输出。微调的过程可以看作是在原始预训练模型的基础上，为其适应特定任务场景而进行的“个性化训练”。&lt;/p&gt;&lt;h3&gt;奖励函数训练（Reward Modeling, RM）&lt;/h3&gt;&lt;p data-pid=&quot;lLv-GXpG&quot;&gt;RM训练是指为强化学习任务设计奖励函数。奖励函数是一个用于评估AI智能体在特定任务中表现的度量，引导智能体在学习过程中采取正确的行动。RBRM是一种基于排序的奖励建模方法，通过对多个候选输出进行人工排序，为输出赋予相对优劣，从而指导模型生成更好的回答。这种方法可以帮助解决常规奖励建模方法在一些情况下难以为模型提供足够明确指导的问题。&lt;/p&gt;&lt;h3&gt;RLHF：基于RM/RBRM的PPO强化学习&lt;/h3&gt;&lt;p data-pid=&quot;xgfBn-iO&quot;&gt;PPO（Proximal Policy Optimization）是一种强化学习算法，通过优化模型的策略（即在给定输入时选择动作的方式）来提高模型性能。在基于RM或RBRM的PPO训练中，模型利用设计好的奖励函数（或基于排序的奖励模型）来学习如何为特定任务生成更好的输出。通过与环境交互并获取奖励信号，模型不断调整自身策略，以便在未来的相似任务中获得更高的奖励。PPO算法的优势在于其能够在保持稳定性的同时实现较高的性能。&lt;/p&gt;&lt;p data-pid=&quot;vNSIMxXi&quot;&gt;&lt;b&gt;注：&lt;/b&gt;在整个训练过程中，SFT微调、RM/RBRM训练和PPO强化学习这三个阶段是相辅相成的。首先，通过SFT微调使模型适应特定任务，然后使用RM或RBRM训练来设计合适的奖励函数，最后应用PPO强化学习算法进一步优化模型策略。这种训练方法的一个关键优势是，它可以将人类专家的知识和偏好引入模型中。通过微调和基于奖励的方法，模型可以学会生成符合人类期望的输出。此外，通过强化学习，模型可以在没有大量标注数据的情况下，通过与环境交互来探索和学习。这使得训练过程更加高效，同时也使得模型能够在一定程度上自主学习和改进。总之，在大型模型训练中，SFT微调、RM/RBRM训练和PPO强化学习这三个阶段共同作用，帮助模型逐步改进性能，以便更好地完成各种任务。&lt;/p&gt;&lt;h3&gt;与人类对齐（Align AI with human values）&lt;/h3&gt;&lt;p data-pid=&quot;NOzVgJ-o&quot;&gt;大语言模型的与人类对齐是指让人工智能模型理解、遵循并适应人类的价值观、需求和期望。这意味着让模型在处理各种任务时，不仅要提供准确和有帮助的信息，还要确保所生成的内容遵循道德、法律和社会规范，避免产生有害或误导性的结果。&lt;/p&gt;&lt;p data-pid=&quot;gpU-gPzu&quot;&gt;与人类对齐的过程通常包括以下几个方面：&lt;/p&gt;&lt;ol&gt;&lt;li data-pid=&quot;EaZbffHL&quot;&gt;理解用户需求：让模型更好地理解用户在不同场景下的真实需求，以便生成有针对性和相关性的回答。&lt;/li&gt;&lt;li data-pid=&quot;Cy9WFx5z&quot;&gt;遵循道德和法律规范：确保模型生成的内容符合道德和法律规定，避免侵犯隐私、传播虚假信息或煽动仇恨等行为。&lt;/li&gt;&lt;li data-pid=&quot;pRqkAAQ4&quot;&gt;适应社会和文化背景：让模型了解并尊重不同社会和文化背景，以避免产生冒犯、歧视或误解的内容。&lt;/li&gt;&lt;li data-pid=&quot;rQkCawSR&quot;&gt;防止有害输出：在模型生成内容时警惕并避免潜在的有害信息，确保输出无害且有益。&lt;/li&gt;&lt;/ol&gt;&lt;p data-pid=&quot;e8IytEGX&quot;&gt;为了实现与人类的对齐，需要在模型的训练和优化过程中充分考虑人类价值观。这包括在监督式微调阶段使用具有明确指导意义的标注数据，在奖励建模阶段设计合适的奖励函数，以及在强化学习阶段根据实际反馈调整模型策略。总之，与人类对齐是确保大型语言模型能够更好地服务于人类社会的关键因素。通过关注人类价值观并将其纳入模型训练过程，可以使模型更加可靠、安全和有用。&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>4558482d87d899e670a248fb237f0e6f</guid>
<title>动态线程池，还可以这么玩！</title>
<link>https://toutiao.io/k/dpgi160</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content js_underline_content               autoTypeSetting24psection&amp;#10;            &quot; id=&quot;js_content&quot;&gt;&lt;p data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;282&quot; data-backw=&quot;561&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5030674846625767&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/2KTof9YshwcXPpQqHflA9E7eiaLylA6QhQapeianHO5h8bPJhiaCGZevD4CZ1dU0eDYfDvGPqicy5bqHBBBACOqticA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1304&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; data-darkmode-color-15906764299112=&quot;rgb(230, 230, 230)&quot; data-darkmode-original-color-15906764299112=&quot;rgb(0, 0, 0)&quot; data-darkmode-bgcolor-15906764299112=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15906764299112=&quot;rgb(255, 255, 255)&quot; data-style=&quot;background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;quot;PingFang SC&amp;quot;, Cambria, Cochin, Georgia, Times, &amp;quot;Times New Roman&amp;quot;, serif; font-size: 16px; white-space: normal; word-spacing: 0.8px; letter-spacing: 0.75px; text-align: center; visibility: visible;&quot; data-darkmode-color-15958675267961=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-15958675267961=&quot;rgb(0, 0, 0)&quot; data-darkmode-bgcolor-15958675267961=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-15958675267961=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15965526125846=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-15965526125846=&quot;rgb(0, 0, 0)&quot; data-darkmode-bgcolor-15965526125846=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-15965526125846=&quot;rgb(255, 255, 255)&quot; data-darkmode-bgcolor-15969880239317=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-15969880239317=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15969880239317=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-15969880239317=&quot;rgb(0, 0, 0)&quot; data-darkmode-color-15976750929548=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-15976750929548=&quot;rgb(0, 0, 0)&quot; data-darkmode-bgcolor-15976750929548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-15976750929548=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15982803404507=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-15982803404507=&quot;rgb(0, 0, 0)&quot; data-darkmode-bgcolor-15982803404507=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-15982803404507=&quot;rgb(255, 255, 255)&quot;&gt;&lt;span&gt;程序员进阶网站：&lt;/span&gt;&lt;span&gt;https://offercome.cn&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;大家好，我是Tom哥。&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;「使用线程池 ThreadPoolExecutor 过程中你是否有以下痛点呢？」&lt;/span&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;span&gt;❝&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;1.代码中创建了一个 &lt;/span&gt;&lt;code&gt;&lt;span&gt;ThreadPoolExecutor&lt;/span&gt;&lt;/code&gt;&lt;span&gt;，但是不知道那几个核心参数设置多少比较合适&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2.凭经验设置参数值，上线后发现需要调整，改代码重启服务，非常麻烦&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;3.线程池相对开发人员来说是个黑盒，运行情况不能及时感知到，直到出现问题&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;❞&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;如果你有以上痛点，动态可监控线程池（DynamicTp）或许能帮助到你。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;如果看过 &lt;/span&gt;&lt;code&gt;&lt;span&gt;ThreadPoolExecutor&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 的源码，大概可以知道它对核心参数基本都有提供 &lt;/span&gt;&lt;code&gt;&lt;span&gt;set / get&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 方法以及一些扩展方法，可以在运行时动态修改、获取相应的值。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;现在大多数的互联网项目其实都会微服务化部署，有一套自己的服务治理体系，微服务组件中的分布式配置中心扮演的就是动态修改配置， 实时生效的角色。那么我们是否可以结合配置中心来做运行时线程池参数的动态调整呢？答案是肯定的，而且配置中心相对都是高可用的， 使用它也不用过于担心配置推送出现问题这类事儿，而且也能减少研发动态线程池组件的难度和工作量。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;「综上，可以总结出以下的背景」&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;「广泛性」&lt;/strong&gt;：在 Java 开发中，想要提高系统性能，线程池已经是一个 90%以上的人都会选择使用的基础工具&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;「不确定性」&lt;/strong&gt;：项目中可能会创建很多线程池，既有 IO 密集型的，也有 CPU 密集型的，但线程池的参数并不好确定；需要有套机制在运行过程中动态去调整参数&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;「无感知性」&lt;/strong&gt;：线程池运行过程中的各项指标一般感知不到；需要有套监控报警机制在事前、事中就能让开发人员感知到线程池的运行状况，及时处理&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;「高可用性」&lt;/strong&gt;：配置变更需要及时推送到客户端；需要有高可用的配置管理推送服务，配置中心是现在大多数互联网系统都会使用的组件，与之结合可以大幅度减少开发量及接入难度&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br/&gt;&lt;/h2&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;简介&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;「基于以上背景分析，我们对线程池 ThreadPoolExecutor 做一些扩展增强，主要实现以下目标」&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;span&gt;❝&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;1.实现对运行中线程池参数的动态修改，实时生效&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2.实时监控线程池的运行状态，触发设置的报警策略时报警，报警信息推送办公平台&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;3.定时采集线程池指标数据，配合像 grafana 这种可视化监控平台做大盘监控&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;❞&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;「经过多个版本的迭代，目前最新版本 v1.0.9 具有以下特性」&lt;/strong&gt; ✅&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;「代码零侵入」&lt;/strong&gt;：所有配置都放在配置中心，对业务代码零侵入&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;「轻量简单」&lt;/strong&gt;：基于 SpringBoot 实现，引入 &lt;/span&gt;&lt;code&gt;&lt;span&gt;starter&lt;/span&gt;&lt;/code&gt;&lt;span&gt;，接入只需简单 4 步就可完成，顺利 3 分钟搞定&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;「高可扩展」&lt;/strong&gt;：框架核心功能都提供 SPI 接口供用户自定义个性化实现（配置中心、配置文件解析、通知告警、监控数据采集、任务包装等等）&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;「线上大规模应用」&lt;/strong&gt;：参考美团线程池实践，美团内部已经有该理论成熟的应用经验&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;「多平台通知报警」&lt;/strong&gt;：提供多种报警维度（配置变更通知、活性报警、容量阈值报警、拒绝触发报警、任务执行或等待超时报警），已支持企业微信、钉钉、飞书、邮件报警，同时提供 SPI 接口可自定义扩展实现&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;「监控」&lt;/strong&gt;：定时采集线程池指标数据，支持通过 &lt;/span&gt;&lt;code&gt;&lt;span&gt;MicroMeter&lt;/span&gt;&lt;/code&gt;&lt;span&gt;、&lt;/span&gt;&lt;code&gt;&lt;span&gt;JsonLog&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 日志输出、&lt;/span&gt;&lt;code&gt;&lt;span&gt;Endpoint&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 三种方式，可通过 SPI 接口自定义扩展实现&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;「任务增强」&lt;/strong&gt;：提供任务包装功能，实现 &lt;/span&gt;&lt;code&gt;&lt;span&gt;TaskWrapper&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 接口即可，如 &lt;/span&gt;&lt;code&gt;&lt;span&gt;MdcTaskWrapper&lt;/span&gt;&lt;/code&gt;&lt;span&gt;、&lt;/span&gt;&lt;code&gt;&lt;span&gt;TtlTaskWrapper&lt;/span&gt;&lt;/code&gt;&lt;span&gt;、&lt;/span&gt;&lt;code&gt;&lt;span&gt;SwTraceTaskWrapper&lt;/span&gt;&lt;/code&gt;&lt;span&gt;，可以支持线程池上下文信息传递&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;「兼容性」&lt;/strong&gt;：JUC 普通线程池和 Spring 中的 &lt;/span&gt;&lt;code&gt;&lt;span&gt;ThreadPoolTaskExecutor&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 也可以被框架监控，&lt;/span&gt;&lt;code&gt;&lt;span&gt;@Bean&lt;/span&gt;&lt;/code&gt;&lt;span&gt;定义时加 &lt;/span&gt;&lt;code&gt;&lt;span&gt;@DynamicTp&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 注解即可&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;「可靠性」&lt;/strong&gt;：框架提供的线程池实现 Spring 生命周期方法，可以在 Spring 容器关闭前尽可能多的处理队列中的任务&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;「多模式」&lt;/strong&gt;：参考 Tomcat 线程池提供了 IO 密集型场景使用的 &lt;/span&gt;&lt;code&gt;&lt;span&gt;EagerDtpExecutor&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 线程池&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;「支持多配置中心」&lt;/strong&gt;：基于主流配置中心实现线程池参数动态调整，实时生效，已支持 &lt;/span&gt;&lt;code&gt;&lt;span&gt;Nacos&lt;/span&gt;&lt;/code&gt;&lt;span&gt;、&lt;/span&gt;&lt;code&gt;&lt;span&gt;Apollo&lt;/span&gt;&lt;/code&gt;&lt;span&gt;、&lt;/span&gt;&lt;code&gt;&lt;span&gt;Zookeeper&lt;/span&gt;&lt;/code&gt;&lt;span&gt;、&lt;/span&gt;&lt;code&gt;&lt;span&gt;Consul&lt;/span&gt;&lt;/code&gt;&lt;span&gt;、&lt;/span&gt;&lt;code&gt;&lt;span&gt;Etcd&lt;/span&gt;&lt;/code&gt;&lt;span&gt;，同时也提供 SPI 接口可自定义扩展实现&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;「中间件线程池管理」&lt;/strong&gt;：集成管理常用第三方组件的线程池，已集成&lt;/span&gt;&lt;code&gt;&lt;span&gt;Tomcat&lt;/span&gt;&lt;/code&gt;&lt;span&gt;、&lt;/span&gt;&lt;code&gt;&lt;span&gt;Jetty&lt;/span&gt;&lt;/code&gt;&lt;span&gt;、&lt;/span&gt;&lt;code&gt;&lt;span&gt;Undertow&lt;/span&gt;&lt;/code&gt;&lt;span&gt;、&lt;/span&gt;&lt;code&gt;&lt;span&gt;Dubbo&lt;/span&gt;&lt;/code&gt;&lt;span&gt;、&lt;/span&gt;&lt;code&gt;&lt;span&gt;RocketMq&lt;/span&gt;&lt;/code&gt;&lt;span&gt;、&lt;/span&gt;&lt;code&gt;&lt;span&gt;Hystrix&lt;/span&gt;&lt;/code&gt;&lt;span&gt;、&lt;/span&gt;&lt;code&gt;&lt;span&gt;Grpc&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 等组件的线程池管理（调参、监控报警）&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br/&gt;&lt;/h2&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;架构设计&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;框架功能大体可以分为以下几个模块&lt;/span&gt;&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;span&gt;❝&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;1.配置变更监听模块 2.服务内部线程池管理模块 3.三方组件线程池管理模块 4.监控模块 5.通知告警模块&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;❞&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;代码结构&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1.4855687606112054&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/x0kXIOa6owVKFfBtHCdUsWvrKEjRr9sibNEwEyJ4DOrCbs7BgUianJicrarkAOXoMI8zGic7tAodXsbDQoYc99RYeA/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;589&quot;/&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;figcaption&gt;&lt;br/&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;span&gt;❝&lt;/span&gt;&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;「adapter 模块」&lt;/strong&gt;：主要是适配一些第三方组件的线程池管理，目前已经实现的有 SpringBoot 内置的三大 web 容器（&lt;/span&gt;&lt;code&gt;&lt;span&gt;Tomcat&lt;/span&gt;&lt;/code&gt;&lt;span&gt;、&lt;/span&gt;&lt;code&gt;&lt;span&gt;Jetty&lt;/span&gt;&lt;/code&gt;&lt;span&gt;、&lt;/span&gt;&lt;code&gt;&lt;span&gt;Undertow&lt;/span&gt;&lt;/code&gt;&lt;span&gt;）、&lt;/span&gt;&lt;code&gt;&lt;span&gt;Dubbo&lt;/span&gt;&lt;/code&gt;&lt;span&gt;、&lt;/span&gt;&lt;code&gt;&lt;span&gt;RocketMq&lt;/span&gt;&lt;/code&gt;&lt;span&gt;、&lt;/span&gt;&lt;code&gt;&lt;span&gt;Hystrix&lt;/span&gt;&lt;/code&gt;&lt;span&gt;、&lt;/span&gt;&lt;code&gt;&lt;span&gt;Grpc&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 的线程池管理， 后续会接入其他常用组件的线程池管理。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;「common 模块」&lt;/strong&gt;：主要是一些各个模板都会用到的类，解耦依赖，复用代码，大家日常开发中可能也经常会这样做。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;「core 模块」&lt;/strong&gt;：该框架的核心代码都在这个模块里，包括动态调整参数，监控报警，以及串联整个项目流程都在此。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;「example 模块」&lt;/strong&gt;：提供一个简单使用示例，方便使用者参照&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;「extension 模块」&lt;/strong&gt;：放一些扩展功能实现，比如基于 redis 的流控扩展、邮件发送扩展、skywalking 上下文传递扩展等&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;「logging 模块」&lt;/strong&gt;：用于配置框架内部日志的输出，目前主要用于输出线程池监控指标数据到指定文件&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;「starter模块」&lt;/strong&gt;：提供独立功能模块的依赖封装、自动配置等相关。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;span&gt;❞&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;配置变更监听模块&lt;/span&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;1.监听特定配置中心的指定配置文件（已实现 &lt;/span&gt;&lt;code&gt;&lt;span&gt;Nacos&lt;/span&gt;&lt;/code&gt;&lt;span&gt;、&lt;/span&gt;&lt;code&gt;&lt;span&gt;Apollo&lt;/span&gt;&lt;/code&gt;&lt;span&gt;、&lt;/span&gt;&lt;code&gt;&lt;span&gt;Zookeeper&lt;/span&gt;&lt;/code&gt;&lt;span&gt;、&lt;/span&gt;&lt;code&gt;&lt;span&gt;Consul&lt;/span&gt;&lt;/code&gt;&lt;span&gt;、&lt;/span&gt;&lt;code&gt;&lt;span&gt;Etcd&lt;/span&gt;&lt;/code&gt;&lt;span&gt;），可通过内部提供的SPI接口扩展其他实现&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;2.解析配置文件内容，内置实现 &lt;/span&gt;&lt;code&gt;&lt;span&gt;yml&lt;/span&gt;&lt;/code&gt;&lt;span&gt;、&lt;/span&gt;&lt;code&gt;&lt;span&gt;properties&lt;/span&gt;&lt;/code&gt;&lt;span&gt;、&lt;/span&gt;&lt;code&gt;&lt;span&gt;json&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 配置文件的解析，可通过内部提供的 SPI 接口扩展其他实现&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3.通知线程池管理模块实现参数的刷新&lt;/span&gt;&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;服务内部线程池管理模块&lt;/span&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;1.服务启动时从配置中心拉取配置，生成线程池实例注册到内部线程池注册中心以及 Spring 容器中&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;2.接受配置监听模块的刷新事件，实现线程池参数的刷新&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3.代码中通过依赖注入（推荐）或者 &lt;/span&gt;&lt;code&gt;&lt;span&gt;DtpRegistry.getDtpExecutor()&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 方法根据线程池名称来获取线程池实例&lt;/span&gt;&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;三方组件线程池管理&lt;/span&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;1.服务启动获取第三方中间件的线程池，被框架管理起来&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;2.接受参数刷新、指标收集、通知报警事件，进行相应的处理&lt;/span&gt;&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;监控模块&lt;/span&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;实现监控指标采集以及输出，默认提供以下三种方式，也可通过内部提供的 SPI 接口扩展其他实现&lt;/span&gt;&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;默认实现 &lt;/span&gt;&lt;code&gt;&lt;span&gt;JsonLog&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 输出到磁盘，可以自己采集解析日志，存储展示&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;&lt;span&gt;MicroMeter&lt;/span&gt;&lt;/code&gt;&lt;span&gt;采集，引入 &lt;/span&gt;&lt;code&gt;&lt;span&gt;MicroMeter&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 相关依赖，暴露相关端点，采集指标数据，结合 &lt;/span&gt;&lt;code&gt;&lt;span&gt;Grafana&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 做监控大盘&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;暴雷自定义 &lt;/span&gt;&lt;code&gt;&lt;span&gt;Endpoint&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 端点（&lt;/span&gt;&lt;code&gt;&lt;span&gt;dynamic-tp&lt;/span&gt;&lt;/code&gt;&lt;span&gt;），可通过 http 方式实时访问&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;通知告警模块&lt;/span&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;对接办公平台，实现通知告警功能，已支持钉钉、企微、飞书、邮件，可通过内部提供的 SPI 接口扩展其他实现，通知告警类型如下&lt;/span&gt;&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;线程池主要参数变更通知&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;阻塞队列容量达到设置的告警阈值&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;线程池活性达到设置的告警阈值&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;触发拒绝策略告警，格式：A/B，A：该报警项前后两次报警区间累加数量，B：该报警项累计总数&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;任务执行超时告警，格式：A/B，A：该报警项前后两次报警区间累加数量，B：该报警项累计总数&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;任务等待超时告警，格式：A/B，A：该报警项前后两次报警区间累加数量，B：该报警项累计总数&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6953703703703704&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/x0kXIOa6owVKFfBtHCdUsWvrKEjRr9sibibFOCJ3WicMahsTdIWE59DQzIcfDhQ0wvRUHlBDUwecYa4iapiaV7KZf9A/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;figcaption&gt;&lt;br/&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;项目地址&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;gitee地址：&lt;/strong&gt;&lt;br/&gt;https://gitee.com/dromara/dynamic-tp&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;github地址：&lt;/strong&gt;&lt;br/&gt;https://github.com/dromara/dynamic-tp&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote class=&quot;js_blockquote_wrap&quot; data-type=&quot;2&quot; data-url=&quot;&quot; data-author-name=&quot;&quot; data-content-utf8-length=&quot;37&quot; data-source-title=&quot;&quot;&gt;&lt;section class=&quot;js_blockquote_digest&quot;&gt;&lt;p&gt;&lt;span&gt;原文：juejin.cn/post/7166075966615126029&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;············  END  ··············&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;关于我：Tom哥，前阿里技术专家，拿过 鹅厂、百度、华为 等6家大厂offer，CSDN 博客专家，面试过 500+ 候选人，职场经验丰富。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;新建了「技术群」，广邀各路朋友探讨职场、技术、人生，多个朋友多条路。抱团取暖，一起牛逼。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1.092130518234165&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/2KTof9YshwdaSEqIP60fNXXqd7e15vycGo75wsfR2yTDKxOpJaKG0BKzFod8CQxLtibu2vMp1GKBMDJRbk3rpLw/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;jpeg&quot; data-w=&quot;521&quot;/&gt;&lt;/p&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;mp-style-type data-value=&quot;3&quot;/&gt;&lt;/p&gt;&lt;/div&gt;

          
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>a0a6f572460eeddd019c5aad2ea355b1</guid>
<title>使用Netty，我们到底在开发些什么？？？</title>
<link>https://toutiao.io/k/fk5hof9</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content js_underline_content               autoTypeSetting24psection&amp;#10;            &quot; id=&quot;js_content&quot;&gt;&lt;section data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;strong/&gt;&lt;/span&gt;&lt;span&gt;原价&lt;/span&gt;&lt;strong&gt;299&lt;/strong&gt;&lt;span&gt;元，现在参加拼团活动立享优惠价仅 &lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;149 &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;元，赶快一起参团吧！&lt;/span&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;《从0开始带你成为Netty网络编程高手》&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;=== 课程背景 ===&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;现如今互联网大厂，一面最喜欢考察的就是&lt;strong&gt;&lt;span&gt;基础知识&lt;/span&gt;&lt;/strong&gt;，比如本课程要讲解的计算机基础，因为写代码不可避免要跟机器、网络、CPU、磁盘、内存，成天打交道。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;线上系统也不可避免网络故障导致一些问题：&lt;strong&gt;&lt;span&gt;cpu负载达到100%了咋办？磁盘读写很快满了咋办？内存使用率过高咋办？&lt;/span&gt;&lt;/strong&gt;此时如果你连机器都不敢摸，或者也不知道怎么摸，那不是尴尬了么。&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;=== 课程介绍 ===&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;为了面对以上的问题，儒猿推出了课程《&lt;/span&gt;&lt;span&gt;从0开始带你成为Netty网络编程高手&lt;/span&gt;&lt;span&gt;》，&lt;/span&gt;&lt;span&gt;课程&lt;/span&gt;&lt;strong&gt;&lt;span&gt;将大白话+一步一图的方式学习七层网络模型、TCP/IP三次握手和四次挥手、HTTP请求流程等原理；接着深入剖析最流行的网络框架Netty核心源码&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;！&lt;/span&gt;&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1.7786666666666666&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZXnleZj42yjfFOvG1RszeFELNmnpfBXsqRmXoPabED0N4skejdZFxZV3bptqDZvAWfh05m6E3ogA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;750&quot;/&gt;&lt;/p&gt;&lt;h1&gt;&lt;span&gt;&lt;strong&gt;=== 课程内容 ===&lt;/strong&gt;&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;&lt;span&gt;（*以下仅为部分课程内容展示，详细大纲查看文章末尾）&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;Netty网络模型&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;576&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;346&quot; data-ratio=&quot;0.6114245416078985&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLbbQDEZMd7ibLJZVInHGh1PVPkgUIJZRvfTaZRTmSpfiaLKMIDvPXTic3IJ4EwmxiahEYKzOq1yuY4Ijg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1418&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;=== 讲师介绍 ===&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;h2&gt;&lt;span&gt;&lt;strong&gt;=== 适合人群 ===&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;1、工作1年以上的Java开发工程师&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2、常年CRUD，简历缺少含金量的同学&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;3、没有网络编程经验，想了解网络底层实现的小伙伴&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;=== 课程收获 ===&lt;/strong&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;一步一图大白话，自下而上讲解、最常用以及最陌生的网络协议概念，帮你构建最精准的网络协议知识框架&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;掌握Netty连接接入流程Reactor线程，监测新连接，创建Channel，IO线程分配，Selector注册事件&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;解决工作中常见的性能问题，高性能网络编程I/O、线程与进程等，从而提高编程能力&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;=== 课程福利 ===&lt;/strong&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;为了让更多同学学到赚到，&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;《从0开始带你成为Netty网络编程高手》&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span/&gt;&lt;span&gt;现在拼团活动价仅需&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt; 149&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;元，&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;赶快扫码拼团~&lt;/span&gt;&lt;span&gt;&lt;span/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZXnleZj42yjfFOvG1RszeF5h1SicWPvATic6yhMnvkX6ZIkCSLNHOeYYbeRopNT3X9B9xUmerR5XQw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;400&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;h1&gt;&lt;span&gt;&lt;strong&gt;=== 课程大纲 ===&lt;/strong&gt;&lt;/span&gt;&lt;/h1&gt;&lt;h1&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;3.0941176470588236&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/1J6IbIcPCLZwR0fHU3UudypURBZBWQmxlMCkHiaBbva6XJ5T2B0mCm0vpNqWgQrQIpWem8TdYYEPoxLAicZfkvibQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;765&quot;/&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;3.09281045751634&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/1J6IbIcPCLZwR0fHU3UudypURBZBWQmxK9zjE3mMByoqVicicq7Kqw7LMKnL3VorVqWC8bTQScC2cuKCRtxOxpSA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;765&quot;/&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;3.0941176470588236&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/1J6IbIcPCLZwR0fHU3UudypURBZBWQmxdvnf2kTRGf5tkqgUbK8QWYet90ouicgmj8qrCNiafmRYpFOf6z3ONPWw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;765&quot;/&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;3.09281045751634&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/1J6IbIcPCLZwR0fHU3UudypURBZBWQmxTj0dYPYx4VFj48EIkpMEBoyVmsib1tOAjL7mI89XqPRUTWdJaCnKV7A/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;765&quot;/&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;3.0941176470588236&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/1J6IbIcPCLZwR0fHU3UudypURBZBWQmxeyhZj03eicqXnvRFMlngIzzeSk3cU1kxiaGMicqfh1Ew9hmic7FKfia6AtQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;765&quot;/&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;3.09281045751634&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/1J6IbIcPCLZwR0fHU3UudypURBZBWQmxeWwqIIshEQAG2rswsmVL3zMwbFS7d02RhTGMQcdLNHEjibpWcNxuzNA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;765&quot;/&gt;&lt;/h1&gt;&lt;h1&gt;&lt;span&gt;&lt;strong&gt;===  课程入口 ===&lt;/strong&gt;&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;&lt;span&gt;长按扫描下方二维码，直达课程专栏&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZXnleZj42yjfFOvG1RszeF5h1SicWPvATic6yhMnvkX6ZIkCSLNHOeYYbeRopNT3X9B9xUmerR5XQw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;400&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;* 购买须知：&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;1.  儒猿架构班已经购买过该课程的同学，无须重复购买&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2.  购买后在深造播放器观看（防盗），支持PC端和手机端&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;mp-style-type data-value=&quot;3&quot;/&gt;&lt;/p&gt;&lt;/div&gt;

          
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>0af309d1be4f04d694457331f2ca1159</guid>
<title>【webpack核心库】耗时 7 个小时，用近 50 张图来学习 enhance-resolve 中的数据流动和插件调度机制</title>
<link>https://toutiao.io/k/0u0vhup</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;0. 食用本文的文档说明：&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本篇文章 耗时 &lt;code&gt;7个小时&lt;/code&gt;左右才完工，篇幅涉及到&lt;code&gt;大量的源码及其分析的过程图解和数据&lt;/code&gt;，阅读前，请保证自己有充分的时间，尽情的去享受&lt;code&gt;吸收知识进入脑子的过程&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;因为篇幅有限，希望你掌握以下前置知识：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;pre&gt;&lt;code&gt;已经学习过 `enhanced-resolve 工作流程和插拔式插件机制`，[点这里复习：webpack 核心库 enhanced-resolve 工作流程和插拔式插件机制](https://juejin.cn/post/7167978104881676319 &quot;https://juejin.cn/post/7167978104881676319&quot;)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;pre&gt;&lt;code&gt;了解 `tabaple` 是一个`订阅发布`的设计模式（知道啥是订阅发布即可）&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;pre&gt;&lt;code&gt;大致了解 node 中的模块查找机制，如：&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;require&lt;/span&gt;(‘./xxx.js’);&lt;br/&gt;&lt;span&gt;require&lt;/span&gt;(&lt;span&gt;&#x27;./xxx&#x27;&lt;/span&gt;);&lt;br/&gt;&lt;span&gt;require&lt;/span&gt;(&lt;span&gt;&#x27;xxx&#x27;&lt;/span&gt;);&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过本文你将学到如下内容（或者带着如下疑问去学习）：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;enhance-resolve&lt;/code&gt;是如何在复杂的插件调用之间传递数据的？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Resolver 和 ResolverFactory&lt;/code&gt;的关系是什么？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Resolver&lt;/code&gt;是如何设计实现的？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;软链接和硬链接&lt;/code&gt;是什么？区别在哪里？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如何开发一个&lt;code&gt;enhance-resolve&lt;/code&gt;的插件应用到webpack 中？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如何去一步步的 &lt;code&gt;debug&lt;/code&gt; 一个开源库？&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;1 webpack 和 enhance-resolve 的关系是什么？&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;webpack作为一个强大的打包工具，其强大的不仅仅是插件机制，还有其核心包&lt;code&gt;enhance-resolve&lt;/code&gt;来实现模块的路径查找。功能上来说它可以&lt;code&gt;增强Webpack的模块解析能力&lt;/code&gt;，使其更容易找到所需的模块，从而提高Webpack的&lt;code&gt;性能和可维护性&lt;/code&gt;。从配置上来说它可以为Webpack解析器添加额外的搜索路径以及解析规则，让Webpack&lt;code&gt;更好地解释路径和文件&lt;/code&gt;，进而让webpack更加专心的做模块打包相关的事情。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;了解完背景和需求以后，如果让我们去实现一个enhance-resolve呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;功能点：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;首先解析器满足模块查找中的所有的规则 &lt;span&gt;模块：通用JS模块 |节点.js v14.21.3 文档 \(nodejs.org\)&lt;/span&gt;&lt;sup&gt;[1]&lt;/sup&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;要和webpack一样，有强大的&lt;code&gt;插件加载机制和良好的配置功能&lt;/code&gt;。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;自己可以心中默默的想一下如何实现上述功能点呢？&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;2. 接下来就根据上述功能点通过代码去了解一下 &lt;code&gt;enhance-resolve&lt;/code&gt;&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;咱们上回&lt;span&gt;太强了，3000字图文并茂的解析 webpack 核心库 enhanced-resolve 工作流程和插拔式插件机制，真香 \- 掘金 \(juejin.cn\)&lt;/span&gt;&lt;sup&gt;[2]&lt;/sup&gt;说到：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;ResolverFactory.createResolver 根据 &lt;code&gt;Resolver&lt;/code&gt; 类创建实例：&lt;code&gt;myResolve&lt;/code&gt; (吃了配置，吐出对象&lt;code&gt;myResolve&lt;/code&gt;)&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;myResolve 上 注册并订阅&lt;/code&gt; 大量的 hook （枪支弹药贮备好，一刻激发）&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;调用 &lt;code&gt;myResolver.resolve&lt;/code&gt; 方法开始进行 文件解析 的主流程&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;内部通过 &lt;code&gt;resolve.doResolve&lt;/code&gt;方法，开始调用第一个 hook: &lt;code&gt;this.hooks.resolve&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;找到之前 订阅 hook 的 plugin：&lt;code&gt;ParsePlugin&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;ParsePlugin&lt;/code&gt; 进行初步解析，然后 通过&lt;code&gt;doResolve&lt;/code&gt; 执行下一个 hook &lt;code&gt;parsed-resolve&lt;/code&gt;，前期准备工作结束，链式调用开始，&lt;code&gt;真正的解析文件的流程&lt;/code&gt;也开始。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从上面的第2步开始整起，第2步注册了哪些hook呢？接下来开始瞅瞅&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;2.1 细细回顾 &lt;code&gt;myResolve&lt;/code&gt; 上注册的hooks&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;代码跳转到 &lt;code&gt;lib/ResolverFactory.js&lt;/code&gt;的 &lt;code&gt;295&lt;/code&gt; 行左右，代码如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;//// pipeline ////&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;resolver.ensureHook(&lt;span&gt;&quot;resolve&quot;&lt;/span&gt;);&lt;br/&gt;resolver.ensureHook(&lt;span&gt;&quot;internalResolve&quot;&lt;/span&gt;);&lt;br/&gt;resolver.ensureHook(&lt;span&gt;&quot;newInternalResolve&quot;&lt;/span&gt;);&lt;br/&gt;resolver.ensureHook(&lt;span&gt;&quot;parsedResolve&quot;&lt;/span&gt;);&lt;br/&gt;resolver.ensureHook(&lt;span&gt;&quot;describedResolve&quot;&lt;/span&gt;);&lt;br/&gt;resolver.ensureHook(&lt;span&gt;&quot;rawResolve&quot;&lt;/span&gt;);&lt;br/&gt;resolver.ensureHook(&lt;span&gt;&quot;normalResolve&quot;&lt;/span&gt;);&lt;br/&gt;resolver.ensureHook(&lt;span&gt;&quot;internal&quot;&lt;/span&gt;);&lt;br/&gt;resolver.ensureHook(&lt;span&gt;&quot;rawModule&quot;&lt;/span&gt;);&lt;br/&gt;resolver.ensureHook(&lt;span&gt;&quot;module&quot;&lt;/span&gt;);&lt;br/&gt;resolver.ensureHook(&lt;span&gt;&quot;resolveAsModule&quot;&lt;/span&gt;);&lt;br/&gt;resolver.ensureHook(&lt;span&gt;&quot;undescribedResolveInPackage&quot;&lt;/span&gt;);&lt;br/&gt;resolver.ensureHook(&lt;span&gt;&quot;resolveInPackage&quot;&lt;/span&gt;);&lt;br/&gt;resolver.ensureHook(&lt;span&gt;&quot;resolveInExistingDirectory&quot;&lt;/span&gt;);&lt;br/&gt;resolver.ensureHook(&lt;span&gt;&quot;relative&quot;&lt;/span&gt;);&lt;br/&gt;resolver.ensureHook(&lt;span&gt;&quot;describedRelative&quot;&lt;/span&gt;);&lt;br/&gt;resolver.ensureHook(&lt;span&gt;&quot;directory&quot;&lt;/span&gt;);&lt;br/&gt;resolver.ensureHook(&lt;span&gt;&quot;undescribedExistingDirectory&quot;&lt;/span&gt;);&lt;br/&gt;resolver.ensureHook(&lt;span&gt;&quot;existingDirectory&quot;&lt;/span&gt;);&lt;br/&gt;resolver.ensureHook(&lt;span&gt;&quot;undescribedRawFile&quot;&lt;/span&gt;);&lt;br/&gt;resolver.ensureHook(&lt;span&gt;&quot;rawFile&quot;&lt;/span&gt;);&lt;br/&gt;resolver.ensureHook(&lt;span&gt;&quot;file&quot;&lt;/span&gt;);&lt;br/&gt;resolver.ensureHook(&lt;span&gt;&quot;finalFile&quot;&lt;/span&gt;);&lt;br/&gt;resolver.ensureHook(&lt;span&gt;&quot;existingFile&quot;&lt;/span&gt;);&lt;br/&gt;resolver.ensureHook(&lt;span&gt;&quot;resolved&quot;&lt;/span&gt;);&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为了便于理解，放出 &lt;code&gt;ensureHook&lt;/code&gt;的部分核心代码，其主要作用就是创建一个 &lt;code&gt;AsyncSeriesBailHook&lt;/code&gt; 异步串行保险型的 hook，（所谓的&lt;code&gt;保险&lt;/code&gt;你可以想象成流浪星球2中的&lt;code&gt;饱和式救援&lt;/code&gt;，1个任务派出多个救援队【订阅多个hook】，只要一个救援队成功了【一个hook存在返回值】这次救援就算成功了【这个订阅事件就算结束了】）&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;ensureHook(name) {&lt;br/&gt; &lt;span&gt;if&lt;/span&gt; (&lt;span&gt;typeof&lt;/span&gt; name !== &lt;span&gt;&quot;string&quot;&lt;/span&gt;) {&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; name;&lt;br/&gt; }&lt;br/&gt; name = toCamelCase(name);&lt;br/&gt; &lt;span&gt;const&lt;/span&gt; hook = &lt;span&gt;this&lt;/span&gt;.hooks[name];&lt;br/&gt; &lt;span&gt;if&lt;/span&gt; (!hook) {&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; (&lt;span&gt;this&lt;/span&gt;.hooks[name] = &lt;span&gt;new&lt;/span&gt; AsyncSeriesBailHook(&lt;br/&gt;   [&lt;span&gt;&quot;request&quot;&lt;/span&gt;, &lt;span&gt;&quot;resolveContext&quot;&lt;/span&gt;],&lt;br/&gt;   name&lt;br/&gt;  ));&lt;br/&gt; }&lt;br/&gt; &lt;span&gt;return&lt;/span&gt; hook;&lt;br/&gt;}&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;PS: &lt;code&gt;ensureHook&lt;/code&gt;的作用是&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以看到作者在头部特意写了一个简短的注释 &lt;code&gt;//// pipeline ////&lt;/code&gt;，翻译过来也就是流水线。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;流水线是一种工业生产方式，它将&lt;code&gt;一个大型工程分解成若干个小步骤&lt;/code&gt;，每个步骤都有&lt;code&gt;专门的工人或机器&lt;/code&gt;来完成，从而提高生产效率。流水线的优势在于可以&lt;code&gt;提高生产效率，减少生产成本，提高产品质量，并且可以更快地完成大型工程&lt;/code&gt;。在IT界就可以认为是&lt;code&gt;模块间解耦，提高代码可读性和可维护性&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;到这里流水线流程组装完毕【可理解成为每个工种分配了相关的任务】，那下一步就是要开始组装每部分流程用到的&lt;code&gt;工具集（plugins）&lt;/code&gt;，【然后再为每个工种分配不同的工具】。部分核心代码如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;// resolve&lt;/span&gt;&lt;br/&gt;&lt;span&gt;for&lt;/span&gt; (&lt;span&gt;const&lt;/span&gt; { source, resolveOptions } &lt;span&gt;of&lt;/span&gt; [&lt;br/&gt; { &lt;span&gt;source&lt;/span&gt;: &lt;span&gt;&quot;resolve&quot;&lt;/span&gt;, &lt;span&gt;resolveOptions&lt;/span&gt;: { fullySpecified } },&lt;br/&gt; { &lt;span&gt;source&lt;/span&gt;: &lt;span&gt;&quot;internal-resolve&quot;&lt;/span&gt;, &lt;span&gt;resolveOptions&lt;/span&gt;: { &lt;span&gt;fullySpecified&lt;/span&gt;: &lt;span&gt;false&lt;/span&gt; } }&lt;br/&gt;]) {&lt;br/&gt; &lt;span&gt;if&lt;/span&gt; (unsafeCache) {&lt;br/&gt;  plugins.push(&lt;br/&gt;   &lt;span&gt;new&lt;/span&gt; UnsafeCachePlugin(&lt;br/&gt;    source,&lt;br/&gt;    cachePredicate,&lt;br/&gt;    unsafeCache,&lt;br/&gt;    cacheWithContext,&lt;br/&gt;    &lt;span&gt;`new-&lt;span&gt;${source}&lt;/span&gt;`&lt;/span&gt;&lt;br/&gt;   )&lt;br/&gt;  );&lt;br/&gt;  plugins.push(&lt;br/&gt;   &lt;span&gt;new&lt;/span&gt; ParsePlugin(&lt;span&gt;`new-&lt;span&gt;${source}&lt;/span&gt;`&lt;/span&gt;, resolveOptions, &lt;span&gt;&quot;parsed-resolve&quot;&lt;/span&gt;)&lt;br/&gt;  );&lt;br/&gt; } &lt;span&gt;else&lt;/span&gt; {&lt;br/&gt;  plugins.push(&lt;span&gt;new&lt;/span&gt; ParsePlugin(source, resolveOptions, &lt;span&gt;&quot;parsed-resolve&quot;&lt;/span&gt;));&lt;br/&gt; }&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;// parsed-resolve&lt;/span&gt;&lt;br/&gt;plugins.push(&lt;br/&gt; &lt;span&gt;new&lt;/span&gt; DescriptionFilePlugin(&lt;br/&gt;  &lt;span&gt;&quot;parsed-resolve&quot;&lt;/span&gt;,&lt;br/&gt;  descriptionFiles,&lt;br/&gt;  &lt;span&gt;false&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;&quot;described-resolve&quot;&lt;/span&gt;&lt;br/&gt; )&lt;br/&gt;);&lt;br/&gt;plugins.push(&lt;span&gt;new&lt;/span&gt; NextPlugin(&lt;span&gt;&quot;after-parsed-resolve&quot;&lt;/span&gt;, &lt;span&gt;&quot;described-resolve&quot;&lt;/span&gt;));&lt;br/&gt;&lt;br/&gt;...... 此处省略部分注册插件逻辑&lt;br/&gt;&lt;br/&gt;&lt;span&gt;//// RESOLVER ////&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;for&lt;/span&gt; (&lt;span&gt;const&lt;/span&gt; plugin &lt;span&gt;of&lt;/span&gt; plugins) {&lt;br/&gt; &lt;span&gt;if&lt;/span&gt; (&lt;span&gt;typeof&lt;/span&gt; plugin === &lt;span&gt;&quot;function&quot;&lt;/span&gt;) {&lt;br/&gt;  plugin.call(resolver, resolver);&lt;br/&gt; } &lt;span&gt;else&lt;/span&gt; {&lt;br/&gt;  plugin.apply(resolver);&lt;br/&gt; }&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一直到最后把根据用户配置生成的相关的插件列表&lt;code&gt;plugins&lt;/code&gt;给注册到 &lt;code&gt;resolver&lt;/code&gt; 上，整个的&lt;code&gt;resolver&lt;/code&gt; 的hook 和 plugin 的绑定才成功结束。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本次调试代码绑定的 总的插件的数量为 &lt;code&gt;41个&lt;/code&gt;:&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.7142857142857143&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHoCbEA6IhIGQjkn5ibFx2ibG2RFfAukH0hLJuxYf6vjjLVty4vsba8pVWGickCOwrOGdCiao25NXSejcw/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1512&quot;/&gt;&lt;figcaption&gt;image.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其中因为&lt;code&gt;NextPlugin&lt;/code&gt;是流程推动性插件和业务逻辑无关，就过滤掉，还剩下 &lt;code&gt;32个&lt;/code&gt;：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.71494708994709&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHoCbEA6IhIGQjkn5ibFx2ibG24LGJUuPhAE0MAtJgiageFpPcQJzmP2uV42micTVic77mhOygJB5q5rB1g/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1512&quot;/&gt;&lt;figcaption&gt;image.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;2.2 开始调试正式流程吧 （流水线打开电源，跑起来了）&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在 &lt;code&gt;lib/Resolver.js&lt;/code&gt; 的 &lt;code&gt;resolve&lt;/code&gt; 方法中是查找路径开始的起点，首先就是把 用户传入的 路径 &lt;code&gt;path&lt;/code&gt; 和 要查找文件的路径 &lt;code&gt;request&lt;/code&gt; 赋值给 obj 对象 【此 obj 是核心对象，将在各个插件中流转修改】。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6335978835978836&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHoCbEA6IhIGQjkn5ibFx2ibG2JVYiaUa4dWHDc2iaePMoGRnq1YDk9hXTicJwUsxvW8P0GP7AUoy6yiayKw/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1512&quot;/&gt;&lt;figcaption&gt;image.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然后就开始调用自身的 &lt;code&gt;doResolve&lt;/code&gt; 方法，正式开始流程了。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.625&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHoCbEA6IhIGQjkn5ibFx2ibG24deJJRicPwGUcu8dibFR19w6rxoqwdHvptejpmB7LHbd1eiaGpLrq3ytg/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1512&quot;/&gt;&lt;figcaption&gt;image.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3. 从 &lt;code&gt;resolve&lt;/code&gt; hook 开始的流程，到结束&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;断点到 &lt;code&gt;doResolve&lt;/code&gt;方法的 &lt;code&gt;hook.callAsync&lt;/code&gt; 部分，看下相关的参数。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5846560846560847&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHoCbEA6IhIGQjkn5ibFx2ibG2BQqRfTVmEgM23fibgibgz2mfickhicVqZrxDGDBLAsVeIj2DfYr6eC5Qsw/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1512&quot;/&gt;&lt;figcaption&gt;image.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从图中可以看出，此 hook 名为 &lt;code&gt;resolve&lt;/code&gt;，入参有两个：&lt;code&gt;Array(2)[request,resolveContext]&lt;/code&gt;，绑定此 hook 的插件只有一个 &lt;code&gt;ParsePlugin&lt;/code&gt; 的插件，传递下去的参数是 &lt;code&gt;request&lt;/code&gt; 对象：&lt;code&gt;path&lt;/code&gt;和 &lt;code&gt;request&lt;/code&gt;是重要的数据。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下一步就开始进入 &lt;code&gt;ParsePlugin&lt;/code&gt; 插件看看它究竟做了什么。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3.1 视察 &lt;code&gt;ParsePlugin&lt;/code&gt;工种的工作&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;ParsePlugin&lt;/code&gt; 其核心 &lt;code&gt;apply&lt;/code&gt; 代码如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;apply(resolver) {&lt;br/&gt; &lt;span&gt;const&lt;/span&gt; target = resolver.ensureHook(&lt;span&gt;this&lt;/span&gt;.target);&lt;br/&gt; resolver&lt;br/&gt;  .getHook(&lt;span&gt;this&lt;/span&gt;.source)&lt;br/&gt;  .tapAsync(&lt;span&gt;&quot;ParsePlugin&quot;&lt;/span&gt;, (request, resolveContext, callback) =&amp;gt; {&lt;br/&gt;   &lt;span&gt;// 调用 resolver 中的 parse 方法初步解析&lt;/span&gt;&lt;br/&gt;   &lt;span&gt;const&lt;/span&gt; parsed = resolver.parse(&lt;span&gt;/** @type {string} */&lt;/span&gt; (request.request));&lt;br/&gt;   &lt;span&gt;// 合并成新的 obj 对象&lt;/span&gt;&lt;br/&gt;   &lt;span&gt;const&lt;/span&gt; obj = { ...request, ...parsed, ...this.requestOptions };&lt;br/&gt;   &lt;span&gt;if&lt;/span&gt; (request.query &amp;amp;&amp;amp; !parsed.query) {&lt;br/&gt;    obj.query = request.query;&lt;br/&gt;   }&lt;br/&gt;   &lt;span&gt;if&lt;/span&gt; (request.fragment &amp;amp;&amp;amp; !parsed.fragment) {&lt;br/&gt;    obj.fragment = request.fragment;&lt;br/&gt;   }&lt;br/&gt;   &lt;span&gt;if&lt;/span&gt; (parsed &amp;amp;&amp;amp; resolveContext.log) {&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (parsed.module) resolveContext.log(&lt;span&gt;&quot;Parsed request is a module&quot;&lt;/span&gt;);&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (parsed.directory)&lt;br/&gt;     resolveContext.log(&lt;span&gt;&quot;Parsed request is a directory&quot;&lt;/span&gt;);&lt;br/&gt;   }&lt;br/&gt;   &lt;span&gt;// There is an edge-case where a request with # can be a path or a fragment -&amp;gt; try both&lt;/span&gt;&lt;br/&gt;   &lt;span&gt;if&lt;/span&gt; (obj.request &amp;amp;&amp;amp; !obj.query &amp;amp;&amp;amp; obj.fragment) {&lt;br/&gt;    &lt;span&gt;const&lt;/span&gt; directory = obj.fragment.endsWith(&lt;span&gt;&quot;/&quot;&lt;/span&gt;);&lt;br/&gt;    &lt;span&gt;const&lt;/span&gt; alternative = {&lt;br/&gt;     ...obj,&lt;br/&gt;     directory,&lt;br/&gt;     &lt;span&gt;request&lt;/span&gt;:&lt;br/&gt;      obj.request +&lt;br/&gt;      (obj.directory ? &lt;span&gt;&quot;/&quot;&lt;/span&gt; : &lt;span&gt;&quot;&quot;&lt;/span&gt;) +&lt;br/&gt;      (directory ? obj.fragment.slice(&lt;span&gt;0&lt;/span&gt;, &lt;span&gt;-1&lt;/span&gt;) : obj.fragment),&lt;br/&gt;     &lt;span&gt;fragment&lt;/span&gt;: &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;br/&gt;    };&lt;br/&gt;    resolver.doResolve(&lt;br/&gt;     target,&lt;br/&gt;     alternative,&lt;br/&gt;     &lt;span&gt;null&lt;/span&gt;,&lt;br/&gt;     resolveContext,&lt;br/&gt;     (err, result) =&amp;gt; {&lt;br/&gt;      &lt;span&gt;if&lt;/span&gt; (err) &lt;span&gt;return&lt;/span&gt; callback(err);&lt;br/&gt;      &lt;span&gt;if&lt;/span&gt; (result) &lt;span&gt;return&lt;/span&gt; callback(&lt;span&gt;null&lt;/span&gt;, result);&lt;br/&gt;      resolver.doResolve(target, obj, &lt;span&gt;null&lt;/span&gt;, resolveContext, callback);&lt;br/&gt;     }&lt;br/&gt;    );&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt;;&lt;br/&gt;   }&lt;br/&gt;   resolver.doResolve(target, obj, &lt;span&gt;null&lt;/span&gt;, resolveContext, callback);&lt;br/&gt;  });&lt;br/&gt;}&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;经过断点发现，&lt;code&gt;obj&lt;/code&gt; 对象第一次进入这个 &lt;code&gt;plugin&lt;/code&gt;逛了一圈，然后最终走到了 &lt;code&gt;resolver.doResolve(target, obj, null, resolveContext, callback);&lt;/code&gt; 这里，处理完的数据如下：【思考一下吃了啥数据，吐出了啥数据？】&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.16666666666666666&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHoCbEA6IhIGQjkn5ibFx2ibG2TfJRbeyZOlvYEBXVPg1zZ4boeMsBD9nqY9mQv1Kb2J4tFVPXIZ9Q4w/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1512&quot;/&gt;&lt;figcaption&gt;image.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5906084656084656&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHoCbEA6IhIGQjkn5ibFx2ibG2QTk2MuETXCpWowbAicNEQA9hHMtkMialiboiaDLFNptibgbm5TYGf4nwicHQ/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1512&quot;/&gt;&lt;figcaption&gt;image.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;ParsePlugin&lt;/code&gt; 吃了 obj，以后对其进行初步解析，增加了如下属性 【红色是吃进去的，绿色是吐出来的】&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.41335978835978837&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHoCbEA6IhIGQjkn5ibFx2ibG2ZvCRAk7mUMVS0yzIniajK24w7P1eRvIZ6OBYYomuLxQ5pKNjSXSSBzw/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1512&quot;/&gt;&lt;figcaption&gt;image.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然后下一个要执行hook是&lt;code&gt;parsedResolve&lt;/code&gt;，其绑定的业务插件是 &lt;code&gt;DescriptionFilePlugin&lt;/code&gt;，&lt;code&gt;NextPlugin&lt;/code&gt;插件属于流程插件，可以忽略。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5509259259259259&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHoCbEA6IhIGQjkn5ibFx2ibG22O7NT8ibVVNxloc4So5ZlpiadiaRsAALk5yW7WPJC7iazkKPHXYWdk32FQ/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1512&quot;/&gt;&lt;figcaption&gt;image.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3.2 视察 &lt;code&gt;DescriptionFilePlugin&lt;/code&gt;工种的工作&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当前流程的 &lt;code&gt;DescriptionFilePlugin&lt;/code&gt; 插件的核心是在 &lt;code&gt;DescriptionFileUtils.loadDescriptionFile&lt;/code&gt;方法里，&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5403439153439153&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHoCbEA6IhIGQjkn5ibFx2ibG2kxqGmerWYDsATBfJEkUialVibut5iaHzPazQciaf9k9ic7gQMCT1WpfGx0w/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1512&quot;/&gt;&lt;figcaption&gt;image.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当看到 &lt;code&gt;[&#x27;package.json&#x27;]&lt;/code&gt;的那一刻是不是可以联想并猜测到：此插件的作用就是在实现&lt;code&gt;查找当前的路径&lt;/code&gt; 是否是一个 具有&lt;code&gt;package.json&lt;/code&gt;文件的模块？继续debug &lt;code&gt;loadDescriptionFile&lt;/code&gt;方法，&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7764550264550265&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHoCbEA6IhIGQjkn5ibFx2ibG2AibnYw4cA5WrvaxxK4VibHribouJss8H3l4Qta8jGSfMH12qdpUHfljAg/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1512&quot;/&gt;&lt;figcaption&gt;image.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;看到这个路径拼接，验证了猜想是正确的，继续 debug 发现，走到了此方法的 callback 函数里，执行了一个 &lt;code&gt;cdUp&lt;/code&gt; 的方法。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6362433862433863&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHoCbEA6IhIGQjkn5ibFx2ibG2WwvUxLBmglK0BCBngT30mFkx9ONrpCBXJnvouNFBhvftzOewoibyElw/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1512&quot;/&gt;&lt;figcaption&gt;image.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们不去看方法实现，仅仅看变更，变量从&lt;code&gt;directory&lt;/code&gt;变成了 &lt;code&gt;dir&lt;/code&gt;，数据从&lt;code&gt;/Users/fujunkui/Desktop/github-project/enhanced-resolve/demo/test-find-file&lt;/code&gt;变成了&lt;code&gt;/Users/fujunkui/Desktop/github-project/enhanced-resolve/demo&lt;/code&gt;，卧槽，还真是进入了上级目录，&lt;code&gt;cdUp&lt;/code&gt; 66666。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不出所料的话，他会一直 &lt;code&gt;cdUp&lt;/code&gt; 知道进入到根目录的,查找 &lt;code&gt;/package.json&lt;/code&gt; 为止 【图中，我把enhance-resolve 项目的package.json 文件给删除了，不删除的话找到这一级就停止了】 部分截图&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.7017195767195767&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHoCbEA6IhIGQjkn5ibFx2ibG2h5ricqTLEmw7cxcDO93Iro6vRC0j43AQ0BQL69CpqyDSlMooF0NG8gA/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1512&quot;/&gt;&lt;figcaption&gt;image.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5211640211640212&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHoCbEA6IhIGQjkn5ibFx2ibG2DyZz0U5TYG3CC7j1g2V20Fiaa9GPg0Ta9U2eeWia4d2iaibia9k7zHZkv2A/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1512&quot;/&gt;&lt;figcaption&gt;image.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最后找呀找呀，就是找不到一个目录具有&lt;code&gt;package.json&lt;/code&gt; 文件，没办法只能走 &lt;code&gt;callback&lt;/code&gt; 了。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6838624338624338&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHoCbEA6IhIGQjkn5ibFx2ibG2VOH9S8NWeMsz5MXBgqLwaM65zbwh3f5T12dMnJ4xvMMiaFIULRllKibg/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1512&quot;/&gt;&lt;figcaption&gt;image.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果就是这个插件一顿 cdUp 操作，啥都没变，注意此处的 &lt;code&gt;callback()&lt;/code&gt;返回值为空，他就要进入此hook 的下一个插件了，&lt;code&gt;NextPlugin&lt;/code&gt; 正式登场。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3.3 外卖小哥 &lt;code&gt;NextPlugin&lt;/code&gt; 正式登场&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;NextPlugin&lt;/code&gt; 核心代码如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;apply(resolver) {&lt;br/&gt; &lt;span&gt;const&lt;/span&gt; target = resolver.ensureHook(&lt;span&gt;this&lt;/span&gt;.target);&lt;br/&gt; resolver&lt;br/&gt;  .getHook(&lt;span&gt;this&lt;/span&gt;.source)&lt;br/&gt;  .tapAsync(&lt;span&gt;&quot;NextPlugin&quot;&lt;/span&gt;, (request, resolveContext, callback) =&amp;gt; {&lt;br/&gt;   resolver.doResolve(target, request, &lt;span&gt;null&lt;/span&gt;, resolveContext, callback);&lt;br/&gt;  });&lt;br/&gt;}&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;直接调用 &lt;code&gt;resolver.doResolve&lt;/code&gt; 把上一个 hook 的丢出的数据，给下一个 hook 使用，不做任何改变（像极了 辛苦帮商家送餐的外卖小哥，点赞）。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那就有请下一位 hook 闪亮登场：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7473544973544973&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHoCbEA6IhIGQjkn5ibFx2ibG2aUiaYibnmfcAQUFjbuicXrKfd0SACLW8WWEjbicmYqp1wyfXvYfX9Tk18g/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1512&quot;/&gt;&lt;figcaption&gt;image.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;好家伙，下一个hook 是 &lt;code&gt;rawResolve&lt;/code&gt;，让我们来看看他的监听者 都有谁，拉倒吧，还是 &lt;code&gt;NextPlugin&lt;/code&gt; 外卖小哥，这就是外卖小哥点饭（外卖小哥送给外卖小哥）？？？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;sup&gt;[3]&lt;/sup&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那就继续吧，看看这个 &lt;code&gt;rawResolve&lt;/code&gt; 的下一个hook是谁，监听的插件都有谁？&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.7559523809523809&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHoCbEA6IhIGQjkn5ibFx2ibG2NRhichQAr1kMQDq9hPltQstWwhqicCdLH3WMd3X4u0PnatI3FKqnabibA/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1512&quot;/&gt;&lt;figcaption&gt;image.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下一个 hook 名叫 &lt;code&gt;normalResolve&lt;/code&gt;，竟然有3个插件监听了此 hook，那么开始表演吧。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3.4 视察 hook 名为&lt;code&gt;normalResolve&lt;/code&gt; 下面的三个工种（插件）的工作&lt;/span&gt;&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3.4.1 第一位和第二位 靓仔都是 &lt;code&gt;ConditionalPlugin&lt;/code&gt; (翻译为中文就是：条件插件)&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大致猜测一下条件插件：就是满足了哪些条件才会继续执行下去。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;两者的区别在初始化的传参里：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;plugins.push(&lt;br/&gt; &lt;span&gt;new&lt;/span&gt; ConditionalPlugin(&lt;br/&gt;  &lt;span&gt;&quot;after-normal-resolve&quot;&lt;/span&gt;,&lt;br/&gt;  { module: &lt;span&gt;true&lt;/span&gt; },&lt;br/&gt;  &lt;span&gt;&quot;resolve as module&quot;&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;false&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;&quot;raw-module&quot;&lt;/span&gt;&lt;br/&gt; )&lt;br/&gt;);&lt;br/&gt;plugins.push(&lt;br/&gt; &lt;span&gt;new&lt;/span&gt; ConditionalPlugin(&lt;br/&gt;  &lt;span&gt;&quot;after-normal-resolve&quot;&lt;/span&gt;,&lt;br/&gt;  { internal: &lt;span&gt;true&lt;/span&gt; },&lt;br/&gt;  &lt;span&gt;&quot;resolve as internal import&quot;&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;false&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;&quot;internal&quot;&lt;/span&gt;&lt;br/&gt; )&lt;br/&gt;);&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;总体代码是：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;ConditionalPlugin&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt; &lt;span&gt;constructor&lt;/span&gt;(source, test, message, allowAlternatives, target) {&lt;br/&gt;  &lt;span&gt;this&lt;/span&gt;.source = source;&lt;br/&gt;  &lt;span&gt;this&lt;/span&gt;.test = test;&lt;br/&gt;  &lt;span&gt;this&lt;/span&gt;.message = message;&lt;br/&gt;  &lt;span&gt;this&lt;/span&gt;.allowAlternatives = allowAlternatives;&lt;br/&gt;  &lt;span&gt;this&lt;/span&gt;.target = target;&lt;br/&gt; }&lt;br/&gt; &lt;br/&gt; apply(resolver) {&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; target = resolver.ensureHook(&lt;span&gt;this&lt;/span&gt;.target);&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; { test, message, allowAlternatives } = &lt;span&gt;this&lt;/span&gt;;&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; keys = Object.keys(test);&lt;br/&gt;  resolver&lt;br/&gt;   .getHook(&lt;span&gt;this&lt;/span&gt;.source)&lt;br/&gt;   .tapAsync(&lt;span&gt;&quot;ConditionalPlugin&quot;&lt;/span&gt;, (request, resolveContext, callback) =&amp;gt; {&lt;br/&gt;    &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;const&lt;/span&gt; prop of keys) {&lt;br/&gt;     &lt;span&gt;if&lt;/span&gt; (request[prop] !== test[prop]) &lt;span&gt;return&lt;/span&gt; callback();&lt;br/&gt;    }&lt;br/&gt;    resolver.doResolve(&lt;br/&gt;     target,&lt;br/&gt;     request,&lt;br/&gt;     message,&lt;br/&gt;     resolveContext,&lt;br/&gt;     allowAlternatives&lt;br/&gt;      ? callback&lt;br/&gt;      : (err, result) =&amp;gt; {&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (err) &lt;span&gt;return&lt;/span&gt; callback(err);&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;// Don&#x27;t allow other alternatives&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (result === undefined) &lt;span&gt;return&lt;/span&gt; callback(&lt;span&gt;null&lt;/span&gt;, &lt;span&gt;null&lt;/span&gt;);&lt;br/&gt;        callback(&lt;span&gt;null&lt;/span&gt;, result);&lt;br/&gt;        }&lt;br/&gt;    );&lt;br/&gt;   });&lt;br/&gt; }&lt;br/&gt;};&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;执行结果如下：第一次 插件的 callback 结果是 空【下图】，进入 第二个 插件，&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6038359788359788&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHoCbEA6IhIGQjkn5ibFx2ibG2EOdxOjqkVbqXnedcQtRqTRfQSzib3MicPOUicZRfOpJL5lgibqZlIicbVhw/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1512&quot;/&gt;&lt;figcaption&gt;image.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;第二个插件的 callback 结果是 空【下图】， 进入 &lt;code&gt;JoinRequestPlugin&lt;/code&gt; 插件&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.7619047619047619&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHoCbEA6IhIGQjkn5ibFx2ibG2K3alm2KRnfLRVMrSt5MtFic7b1jUZYcaYZKNcichYgsJklnVsMIl4ZJQ/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1512&quot;/&gt;&lt;figcaption&gt;image.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3.4.2 视察 &lt;code&gt;JoinRequestPlugin&lt;/code&gt; 插件的工作&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;看名字就知道是干啥的，任务比较简单，就是把 &lt;code&gt;path 和 request 合并成新的路径 赋值给 path&lt;/code&gt;（绿色圈中部分），&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;resolver.join(request.path, request.request),&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6712962962962963&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHoCbEA6IhIGQjkn5ibFx2ibG2MSp35ibMYiaMaluEMRLPzeGksLA80kv4E9Uv3zTJiawE9XjZfmu5DPbYw/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1512&quot;/&gt;&lt;figcaption&gt;image.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个 hook 的事情完成了，有请下一个 hook &lt;code&gt;relative&lt;/code&gt;，以及它的两位监听者们。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6342592592592593&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHoCbEA6IhIGQjkn5ibFx2ibG2mYMwcGVsWdYeibWCETicvYu0aMeWWxyQtfKM3dpdficI1Bfw4yHnvFNMQ/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1512&quot;/&gt;&lt;figcaption&gt;image.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3.5 视察 hook 名为&lt;code&gt;relative&lt;/code&gt; 下面的两个工种（插件）的工作&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;兜兜转转的又进入 &lt;code&gt;DescriptionFilePlugin&lt;/code&gt; 插件了，但是 此时的参数和之前的不一样了，但是好像也没有什么不同，最后还是 callback 为空，灰头土脸的走进下一个插件了。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5138888888888888&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHoCbEA6IhIGQjkn5ibFx2ibG2yyITLiauTQu1qadFogjgg1eA9OTHQI4Sibw92MEQEsNpvYibwg2V3ZfWQ/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1512&quot;/&gt;&lt;figcaption&gt;image.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;继续走到 &lt;code&gt;NextPlugin&lt;/code&gt;，然后被送到 &lt;code&gt;describedRelative&lt;/code&gt; 的hook，此hook的监听者有：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.707010582010582&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHoCbEA6IhIGQjkn5ibFx2ibG2aSlRwdXKiaVqf1NGgH0F7rY4YXhT275RsjicVoBJg5NF1wqcQVcfum7g/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1512&quot;/&gt;&lt;figcaption&gt;image.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3.5 视察 hook 名为&lt;code&gt;describedRelative&lt;/code&gt; 下面的两个工种（条件插件）的工作&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;条件插件要满足的第一个逻辑就是，不是文件夹，推测我们是满足的，开始debug。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;plugins.push(&lt;br/&gt; &lt;span&gt;new&lt;/span&gt; ConditionalPlugin(&lt;br/&gt;  &lt;span&gt;&quot;described-relative&quot;&lt;/span&gt;,&lt;br/&gt;  { &lt;span&gt;directory&lt;/span&gt;: &lt;span&gt;false&lt;/span&gt; },&lt;br/&gt;  &lt;span&gt;null&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;true&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;&quot;raw-file&quot;&lt;/span&gt;&lt;br/&gt; )&lt;br/&gt;);&lt;br/&gt;plugins.push(&lt;br/&gt; &lt;span&gt;new&lt;/span&gt; ConditionalPlugin(&lt;br/&gt;  &lt;span&gt;&quot;described-relative&quot;&lt;/span&gt;,&lt;br/&gt;  { &lt;span&gt;fullySpecified&lt;/span&gt;: &lt;span&gt;false&lt;/span&gt; },&lt;br/&gt;  &lt;span&gt;&quot;as directory&quot;&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;true&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;&quot;directory&quot;&lt;/span&gt;&lt;br/&gt; )&lt;br/&gt;);&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.7043650793650794&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHoCbEA6IhIGQjkn5ibFx2ibG2quAQOJBcfd4nM6jvIw9QHM0aZ5eb6DmAWhVE3v6sAaTyBgJtgNfQfg/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1512&quot;/&gt; 确实满足了不是文件夹的条件，推进到下一个hook &lt;code&gt;rawFile&lt;/code&gt;，其相关的监听者有5个。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5727513227513228&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHoCbEA6IhIGQjkn5ibFx2ibG2zpzKEq2z0Y9O4fjqDmrYNx79VP2yt72ibFQSeAb8JPkIviamEL0Kes1g/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1512&quot;/&gt;&lt;figcaption&gt;image.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3.6 视察 hook 名为&lt;code&gt;rawFile&lt;/code&gt; 下面的工种的工作&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不满足此插件，走进下一个插件&lt;code&gt;TryNextPlugin&lt;/code&gt;:&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;// raw-file&lt;/span&gt;&lt;br/&gt;plugins.push(&lt;br/&gt; &lt;span&gt;new&lt;/span&gt; ConditionalPlugin(&lt;br/&gt;  &lt;span&gt;&quot;raw-file&quot;&lt;/span&gt;,&lt;br/&gt;  { &lt;span&gt;fullySpecified&lt;/span&gt;: &lt;span&gt;true&lt;/span&gt; },&lt;br/&gt;  &lt;span&gt;null&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;false&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;&quot;file&quot;&lt;/span&gt;&lt;br/&gt; )&lt;br/&gt;);&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;TryNextPlugin&lt;/code&gt;（尝试下一个插件） 的代码如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;apply(resolver) {&lt;br/&gt; &lt;span&gt;const&lt;/span&gt; target = resolver.ensureHook(&lt;span&gt;this&lt;/span&gt;.target);&lt;br/&gt; resolver&lt;br/&gt;  .getHook(&lt;span&gt;this&lt;/span&gt;.source)&lt;br/&gt;  .tapAsync(&lt;span&gt;&quot;TryNextPlugin&quot;&lt;/span&gt;, (request, resolveContext, callback) =&amp;gt; {&lt;br/&gt;   resolver.doResolve(&lt;br/&gt;    target,&lt;br/&gt;    request,&lt;br/&gt;    &lt;span&gt;this&lt;/span&gt;.message,&lt;br/&gt;    resolveContext,&lt;br/&gt;    callback&lt;br/&gt;   );&lt;br/&gt;  });&lt;br/&gt;}&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;个人感觉其实此处的逻辑更应该是尝试下一个&lt;code&gt;hook&lt;/code&gt;，而不是&lt;code&gt;插件&lt;/code&gt;，所以改为 &lt;code&gt;TryNextHook&lt;/code&gt;更好.之所以这么说看下面的代码：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;plugins.push(new TryNextPlugin(&quot;raw-file&quot;, &quot;no extension&quot;, &quot;file&quot;));&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上面代码简单理解为，被查找的文件是 不带扩展的文件，可以直接走到 名为 &lt;code&gt;file&lt;/code&gt; 的 hook里。此hook 的监听插件有：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.8220899470899471&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHoCbEA6IhIGQjkn5ibFx2ibG20p74Tjpyj4ianGRIl7eI3SFhia10icbKKs3tzcQzJqA3zqS7TGxFdP4xA/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1512&quot;/&gt;&lt;figcaption&gt;image.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那就继续走 &lt;code&gt;NextPlugin&lt;/code&gt; 插件的逻辑，然后走向了 &lt;code&gt;finalFile&lt;/code&gt; 的 hook 【下图】,进入 &lt;code&gt;FileExistsPlugin&lt;/code&gt; 插件的逻辑里。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6607142857142857&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHoCbEA6IhIGQjkn5ibFx2ibG2MQJLMxRlbRVicWDgVDC9sjCFybr34NvP5dfDtEr2hmDFL1kvuQf9azQ/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1512&quot;/&gt;&lt;figcaption&gt;image.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3.7 视察 hook 名为&lt;code&gt;finalFile&lt;/code&gt; 下面的工种&lt;code&gt;FileExistsPlugin&lt;/code&gt;插件的工作&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;代码比较简单：获取查找路径，直接判断是不是文件即可。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6527777777777778&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHoCbEA6IhIGQjkn5ibFx2ibG2ic4eqt8NSCIgsLu3mgh6TsrV6J9pibibmHrwqq1sxzFjMgjTZ45Cozbyw/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1512&quot;/&gt;&lt;figcaption&gt;image.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;发现不是文件，那就执行callback函数，此插件的callback函数是&lt;code&gt;Resolver 中的 hook.callAsync&lt;/code&gt; 中的callback 函数&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.48677248677248675&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHoCbEA6IhIGQjkn5ibFx2ibG296icTibLpBo5GV1A0TiaxXSxGD1wmhVr7pGfNDWHyrFibZ3ibmAspfrKYtQ/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1512&quot;/&gt;&lt;figcaption&gt;image.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然后 &lt;code&gt;Resolver 中的 hook.callAsync&lt;/code&gt; 中的 callback 函数接受到的 err 和 result 都是 undefined，就又走了 &lt;code&gt;doResolve&lt;/code&gt; 中接受的 callback 函数，那就要开始从现在这个 &lt;code&gt;finalFile&lt;/code&gt; 向前找了，查找的过程要忽略掉 外卖小哥型插件 比如&lt;code&gt;TryNextPlugin&lt;/code&gt;和&lt;code&gt;NextPlugin&lt;/code&gt;。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6243386243386243&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHoCbEA6IhIGQjkn5ibFx2ibG2CqEdzhDJoNibbG0k4HftKEaubB0JhJwmW4MVR70QuFcBKODwhagnMQA/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1512&quot;/&gt;&lt;figcaption&gt;image.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;finalFile&lt;/code&gt; 上一个是 &lt;code&gt;file&lt;/code&gt;的hook监听 （&lt;code&gt;NextPlugin&lt;/code&gt;可忽略）， &lt;code&gt;file&lt;/code&gt; 的上一个是 &lt;code&gt;raw-file&lt;/code&gt;，触发 &lt;code&gt;raw-file&lt;/code&gt; 下的插件的监听，接下来就是查找监听了hook位 &lt;code&gt;raw-file&lt;/code&gt; 的插件了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这块的代码可能因为都叫callback，并且跳来跳去的有些难以理解，可以参考我下面简化过的代码。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;let&lt;/span&gt; { AsyncSeriesBailHook } = &lt;span&gt;require&lt;/span&gt;(&lt;span&gt;&quot;tapable&quot;&lt;/span&gt;);&lt;br/&gt;&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; hook1 = &lt;span&gt;new&lt;/span&gt; AsyncSeriesBailHook([&lt;span&gt;&quot;request&quot;&lt;/span&gt;, &lt;span&gt;&quot;resolveContext&quot;&lt;/span&gt;], &lt;span&gt;&quot;hook1&quot;&lt;/span&gt;);&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; hook2 = &lt;span&gt;new&lt;/span&gt; AsyncSeriesBailHook([&lt;span&gt;&quot;request&quot;&lt;/span&gt;, &lt;span&gt;&quot;resolveContext&quot;&lt;/span&gt;], &lt;span&gt;&quot;hook2&quot;&lt;/span&gt;);&lt;br/&gt;&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; hook1Tap1 = hook1.tapAsync(&lt;br/&gt; &lt;span&gt;&quot;hook1Tap1&quot;&lt;/span&gt;,&lt;br/&gt; (request, resolveContext, callback) =&amp;gt; {&lt;br/&gt;  &lt;span&gt;console&lt;/span&gt;.log(&lt;span&gt;&quot;hook1Tap1&quot;&lt;/span&gt;, request, resolveContext);&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; callback();&lt;br/&gt; }&lt;br/&gt;);&lt;br/&gt;&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; hook1Tap2 = hook1.tapAsync(&lt;br/&gt; &lt;span&gt;&quot;hook1Tap2&quot;&lt;/span&gt;,&lt;br/&gt; (request, resolveContext, callback) =&amp;gt; {&lt;br/&gt;  &lt;span&gt;console&lt;/span&gt;.log(&lt;span&gt;&quot;hook1Tap2&quot;&lt;/span&gt;, request, resolveContext);&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; callback();&lt;br/&gt; }&lt;br/&gt;);&lt;br/&gt;&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; hook2Tap1 = hook2.tapAsync(&lt;br/&gt; &lt;span&gt;&quot;hook2Tap1&quot;&lt;/span&gt;,&lt;br/&gt; (request, resolveContext, callback) =&amp;gt; {&lt;br/&gt;  &lt;span&gt;console&lt;/span&gt;.log(&lt;span&gt;&quot;hook2Tap1&quot;&lt;/span&gt;, request, resolveContext);&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; callback();&lt;br/&gt; }&lt;br/&gt;);&lt;br/&gt;&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; hook2Tap2 = hook2.tapAsync(&lt;br/&gt; &lt;span&gt;&quot;hook2Tap2&quot;&lt;/span&gt;,&lt;br/&gt; (request, resolveContext, callback) =&amp;gt; {&lt;br/&gt;  &lt;span&gt;console&lt;/span&gt;.log(&lt;span&gt;&quot;hook2Tap2&quot;&lt;/span&gt;, request, resolveContext);&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; callback(&lt;span&gt;&quot;err&quot;&lt;/span&gt;);&lt;br/&gt; }&lt;br/&gt;);&lt;br/&gt;&lt;br/&gt;hook1.callAsync(&lt;span&gt;&quot;111&quot;&lt;/span&gt;, &lt;span&gt;&quot;222&quot;&lt;/span&gt;, () =&amp;gt; {&lt;br/&gt; &lt;span&gt;console&lt;/span&gt;.log(&lt;span&gt;&quot;hook1 callback&quot;&lt;/span&gt;);&lt;br/&gt; hook2.callAsync(&lt;span&gt;&quot;333&quot;&lt;/span&gt;, &lt;span&gt;&quot;455&quot;&lt;/span&gt;, err =&amp;gt; {&lt;br/&gt;  &lt;span&gt;console&lt;/span&gt;.log(&lt;span&gt;&quot;hook2 callback&quot;&lt;/span&gt;, err);&lt;br/&gt; });&lt;br/&gt;});&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;执行结果如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.294973544973545&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHoCbEA6IhIGQjkn5ibFx2ibG2W6TFv5K7ibM7ShFG8UUiclKqzbncsNCeEibdCs31IZQer0gQLk9ECRiaxg/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1512&quot;/&gt;&lt;figcaption&gt;image.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这块的内容是定义了两个&lt;code&gt;异步的hook&lt;/code&gt;,然后在&lt;code&gt;hook1 调用 callAsync&lt;/code&gt; 的时候，里面传递了 &lt;code&gt;hook2 的 callAsync&lt;/code&gt; 调用，这样就会在调用完 &lt;code&gt;hook1&lt;/code&gt; 的触发事件，然后去接着调用 &lt;code&gt;hook2&lt;/code&gt; 的触发事件。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这样是不是可以理解 多个hook 之前传递 callback 的逻辑了？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那么接下来就要找监听了hook名为 &lt;code&gt;raw-file&lt;/code&gt; 的插件有哪些了，直接看 &lt;code&gt;ResolverFactory&lt;/code&gt; 注册时间得知 【下图】，有3个插件监听了。而现在的顺序 又是按照监听顺序倒着执行callback的，那就应该是先执行 &lt;code&gt;AppendPlugin&lt;/code&gt; 插件了，打上断点，跑一下&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6362433862433863&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHoCbEA6IhIGQjkn5ibFx2ibG2dCd1neBvGzR5mPicBEPbTbP9WzVLRicrUAem3RYcmr5EeNHt8DibWUXsA/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1512&quot;/&gt;&lt;figcaption&gt;image.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3.8 回首掏，去视察 hook 名为&lt;code&gt;raw-file&lt;/code&gt; 下面的工种&lt;code&gt;AppendPlugin&lt;/code&gt;插件的工作&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;AppendPlugin&lt;/code&gt; 代码较为简单，就是把传入的 &lt;code&gt;this.appending&lt;/code&gt; 和 &lt;code&gt;request.path&lt;/code&gt; 进行拼接，生成新的 &lt;code&gt;request.path&lt;/code&gt;，&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;module&lt;/span&gt;.exports = &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;AppendPlugin&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;br/&gt; &lt;span&gt;constructor&lt;/span&gt;(source, appending, target) {&lt;br/&gt;  &lt;span&gt;this&lt;/span&gt;.source = source;&lt;br/&gt;  &lt;span&gt;this&lt;/span&gt;.appending = appending;&lt;br/&gt;  &lt;span&gt;this&lt;/span&gt;.target = target;&lt;br/&gt; }&lt;br/&gt; &lt;br/&gt; apply(resolver) {&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; target = resolver.ensureHook(&lt;span&gt;this&lt;/span&gt;.target);&lt;br/&gt;  resolver&lt;br/&gt;   .getHook(&lt;span&gt;this&lt;/span&gt;.source)&lt;br/&gt;   .tapAsync(&lt;span&gt;&quot;AppendPlugin&quot;&lt;/span&gt;, (request, resolveContext, callback) =&amp;gt; {&lt;br/&gt;    &lt;span&gt;const&lt;/span&gt; obj = {&lt;br/&gt;     ...request,&lt;br/&gt;     &lt;span&gt;path&lt;/span&gt;: request.path + &lt;span&gt;this&lt;/span&gt;.appending,&lt;br/&gt;     &lt;span&gt;relativePath&lt;/span&gt;:&lt;br/&gt;      request.relativePath &amp;amp;&amp;amp; request.relativePath + &lt;span&gt;this&lt;/span&gt;.appending&lt;br/&gt;    };&lt;br/&gt;    resolver.doResolve(&lt;br/&gt;     target,&lt;br/&gt;     obj,&lt;br/&gt;     &lt;span&gt;this&lt;/span&gt;.appending,&lt;br/&gt;     resolveContext,&lt;br/&gt;     callback&lt;br/&gt;    );&lt;br/&gt;   });&lt;br/&gt; }&lt;br/&gt;};&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;查找 &lt;code&gt;this.appending&lt;/code&gt; 是在实例化时候传入的，断点得知。这个就是我们传入的 &lt;code&gt;extensions&lt;/code&gt; 配置&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;const&lt;/span&gt; myResolver = ResolverFactory.createResolver({&lt;br/&gt; &lt;span&gt;fileSystem&lt;/span&gt;: &lt;span&gt;new&lt;/span&gt; CachedInputFileSystem(fs, &lt;span&gt;4000&lt;/span&gt;),&lt;br/&gt; &lt;span&gt;extensions&lt;/span&gt;: [&lt;span&gt;&quot;.json&quot;&lt;/span&gt;, &lt;span&gt;&quot;.js&quot;&lt;/span&gt;, &lt;span&gt;&quot;.ts&quot;&lt;/span&gt;]&lt;br/&gt;});&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6706349206349206&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHoCbEA6IhIGQjkn5ibFx2ibG2au3tm5bzH8KmuJSI45CRiaPFuDkgPY7m4lYiafX9Nic3kPjlSlwd7baMQ/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1512&quot;/&gt;&lt;figcaption&gt;image.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然后断点到此处，看吃进去了啥，吐出来了啥。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.705026455026455&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHoCbEA6IhIGQjkn5ibFx2ibG2ErcbeJty5yF7iaKrZQSTUt25OwdxDPn3GkBFzjyau0bK3icK4MZnLTdg/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1512&quot;/&gt;&lt;figcaption&gt;image.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然后下一个 hook 是 &lt;code&gt;file&lt;/code&gt;，只有一个 &lt;code&gt;NextPlugin&lt;/code&gt; 插件监听了此hook，用来推进流程【下图】。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6706349206349206&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHoCbEA6IhIGQjkn5ibFx2ibG2wcFwo1ibjYwNZMKO5WyR9AXuHugwribJT5icQjbCj1ib1YRu8VoNNvPUkg/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1512&quot;/&gt;&lt;figcaption&gt;image.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;而 &lt;code&gt;NextPlugin&lt;/code&gt; 插件是将流程 从 &lt;code&gt;file&lt;/code&gt; 推向了 &lt;code&gt;final-file&lt;/code&gt; hook，走到 3.7 的流程，判断一下带有此后缀的文件是否存在，不存在的话，继续 重复 &lt;code&gt;raw-file&lt;/code&gt; hook 的 &lt;code&gt;AppendPlugin&lt;/code&gt; 的流程，此时的参数是 &lt;code&gt;this.appending&lt;/code&gt; 是 &lt;code&gt;.js&lt;/code&gt; 【下图】&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5833333333333334&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHoCbEA6IhIGQjkn5ibFx2ibG2hjmZCX7j4wiapvMNeApSGU2PH3EEUpQlNSJ8G7qeaicK0meQ0anOrWbw/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1512&quot;/&gt;&lt;figcaption&gt;image.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;继续 重复以上的操作：&lt;code&gt;NextPlugin&lt;/code&gt; 插件是将流程 从 &lt;code&gt;file&lt;/code&gt; 推向了 &lt;code&gt;final-file&lt;/code&gt; hook，然后 &lt;code&gt;FileExistsPlugin&lt;/code&gt; 插件判断到，此文件存在，推进流程到 &lt;code&gt;existingFile&lt;/code&gt; 的hook，此hook 有2个插件监听【下图】。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7367724867724867&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHoCbEA6IhIGQjkn5ibFx2ibG22FLY78ibJoibLAezbDT3iaUPTeuq0bNVyO1PajcyGgB5YpOzGAqGaNKJA/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1512&quot;/&gt;&lt;figcaption&gt;image.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3.9 文件存在了，下一步去视察 hook 名为&lt;code&gt;existingFile&lt;/code&gt; 下面的插件的工作&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;先去执行&lt;code&gt;SymlinkPlugin&lt;/code&gt; 通过 &lt;code&gt;fs.readlink&lt;/code&gt; 方法判断其是否是符号链接下的文件，&lt;span&gt;符号链接symlink\_什么是符号链接或符号链接？如何为Windows和Linux创建Symlink？\_cunjiu9486的博客-CSDN博客&lt;/span&gt;&lt;sup&gt;[4]&lt;/sup&gt;，&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;再补充一点 &lt;span&gt;硬链接和软链接的区别？\- 掘金 \(juejin.cn\)&lt;/span&gt;&lt;sup&gt;[5]&lt;/sup&gt;&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;关于符号链接这里有特殊说明，假设你新建了 &lt;code&gt;b.js&lt;/code&gt;，删除了当前目录下的 &lt;code&gt;a.js&lt;/code&gt;，当前目录情况如下：&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.30423280423280424&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHoCbEA6IhIGQjkn5ibFx2ibG22wWFaw8cHvxGWLU22CIBzU2icg21yHTqDWYIArq2t36UwOJWdtxGn3w/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;756&quot;/&gt; 建立硬链接 进行测试：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5238095238095238&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHoCbEA6IhIGQjkn5ibFx2ibG2UDYpBAjJD0UHDDkfKLOYKIk6HrbIp5ic3N3tA2DZlfu6w0R50rm2miaQ/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1512&quot;/&gt;&lt;figcaption&gt;image.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;建立软链接，进行测试：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5906084656084656&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHoCbEA6IhIGQjkn5ibFx2ibG2kvu943OZ1lN8DjhLHVadlOqvbDDhTEXAePhIkpkTI6XIRN8KMg77xA/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1512&quot;/&gt;&lt;figcaption&gt;image.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;其实软链接，还区分绝对路径和相对路径的情况【下图】，本次只考虑相对路径，大家可以使用绝对路径进行debug.&lt;/p&gt;&lt;/blockquote&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.33664021164021163&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHoCbEA6IhIGQjkn5ibFx2ibG26lOVSH0XHG2JxAmIOaqpMLWFuqs5mcc4CDLeYD8791qBbFXOogxz8g/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1512&quot;/&gt;&lt;figcaption&gt;image.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们进行软链接的debug，最后发现查找到b.js 的路径，那么继续debug。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5753968253968254&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHoCbEA6IhIGQjkn5ibFx2ibG2sRpdz16MK9iagmIF2Ve5DvcuCgWDS0Am2ogYD9BFZjEFGlticG9YiaLJw/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1512&quot;/&gt;&lt;figcaption&gt;image.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;到此是发现了软链接的源文件，那么下一步肯定是判断 此源文件是否是存在，又走到 &lt;code&gt;existingFile&lt;/code&gt;的 hook 【下图】，重复3.9的步骤，又走 &lt;code&gt;SymlinkPlugin&lt;/code&gt; 插件的逻辑（担心软链接的源文件还是软链接），&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6104497354497355&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHoCbEA6IhIGQjkn5ibFx2ibG2dVZKvQXexrgutPK4CpXaytzqEuDKysUQGQiaCd5R1Pt34416owgvPww/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1512&quot;/&gt;&lt;figcaption&gt;image.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;继续debug &lt;code&gt;SymlinkPlugin&lt;/code&gt;，发现走到了 &lt;code&gt;callback()&lt;/code&gt; 的情况【下图】，那就是要进入下一个监听者 （NextPlugin）了，&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7083333333333334&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHoCbEA6IhIGQjkn5ibFx2ibG2cn78t3qA2XWU311oDwe0icRdp5Nc1XIvUvK8JEW8Bw7wibEmicsNYkjRg/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1512&quot;/&gt;&lt;figcaption&gt;image.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在 &lt;code&gt;NextPlugin&lt;/code&gt;中发现终于走到了最后的hook &lt;code&gt;resolved&lt;/code&gt;，只有一个插件 &lt;code&gt;ResultPlugin&lt;/code&gt; 进行监听。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.667989417989418&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHoCbEA6IhIGQjkn5ibFx2ibG2Iwsvlc3aDN7TMwrrVRfOUSXmz8qXxUbNhqP8kicWZ7IPFzcndA9xgVA/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1512&quot;/&gt;&lt;figcaption&gt;image.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;进入 &lt;code&gt;ResultPlugin&lt;/code&gt; 插件内部，其主要是调用了 &lt;code&gt;result&lt;/code&gt; 的hook，&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;apply(resolver) {&lt;br/&gt; &lt;span&gt;this&lt;/span&gt;.source.tapAsync(&lt;br/&gt;  &lt;span&gt;&quot;ResultPlugin&quot;&lt;/span&gt;,&lt;br/&gt;  (request, resolverContext, callback) =&amp;gt; {&lt;br/&gt;   &lt;span&gt;const&lt;/span&gt; obj = { ...request };&lt;br/&gt;   &lt;span&gt;if&lt;/span&gt; (resolverContext.log)&lt;br/&gt;    resolverContext.log(&lt;span&gt;&quot;reporting result &quot;&lt;/span&gt; + obj.path);&lt;br/&gt;   resolver.hooks.result.callAsync(obj, resolverContext, err =&amp;gt; {&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (err) &lt;span&gt;return&lt;/span&gt; callback(err);&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (&lt;span&gt;typeof&lt;/span&gt; resolverContext.yield === &lt;span&gt;&quot;function&quot;&lt;/span&gt;) {&lt;br/&gt;     resolverContext.yield(obj);&lt;br/&gt;     callback(&lt;span&gt;null&lt;/span&gt;, &lt;span&gt;null&lt;/span&gt;);&lt;br/&gt;    } &lt;span&gt;else&lt;/span&gt; {&lt;br/&gt;     callback(&lt;span&gt;null&lt;/span&gt;, obj);&lt;br/&gt;    }&lt;br/&gt;   });&lt;br/&gt;  }&lt;br/&gt; );&lt;br/&gt;}&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;debug 一下那些插件监听了此 hook，发现是空的，直接走到自身的 callback 函数里，&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6058201058201058&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHoCbEA6IhIGQjkn5ibFx2ibG2whU2licZE8OLETdKRvLF1c3CtJyzqrNIYzgXWjMaD1NNTxdIdzVqPDQ/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1512&quot;/&gt;&lt;figcaption&gt;image.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;继续debug 此 callback 函数，就会发现这个 callback 在一层一层的向上传递值，接着传到 &lt;code&gt;Resolver 里的 resolve 函数&lt;/code&gt;里， 经过 &lt;code&gt;finishResolved&lt;/code&gt; 处理解析一次【下图】，最后传递给 我们自身的callback 函数里。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5119047619047619&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHoCbEA6IhIGQjkn5ibFx2ibG2CzInnuILy6ZeNYCrZ8AhwDLXGAGkKy9iamibITVh29x2FSGKdqYMVcRg/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1512&quot;/&gt;&lt;figcaption&gt;image.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;debug 停在我们自己监听的callback 函数里，至此完成整体流程。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6078042328042328&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHoCbEA6IhIGQjkn5ibFx2ibG2o6skB8nhrY8JLLDUibS7TlsByImex1cCWbjwqFBiclmiabRFdlv8LaoWg/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1512&quot;/&gt;&lt;figcaption&gt;image.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;4 完结撒花，回顾总结。&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过一步一步的debug，会发现 enhance-resolve 这个库，把 tapable 给用的出神入化，核心的处理逻辑都在 &lt;code&gt;Resolver&lt;/code&gt; 上，而 &lt;code&gt;ResolverFactory&lt;/code&gt; 则像是 流水线的 线长，借用&lt;code&gt;Resolver&lt;/code&gt; 的能力，去指定流水线的流程，分配流水线每个流程应该协作的工种。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;总的逻辑通下来，你会发现，所有的插件都是在对 &lt;code&gt;obj 对象&lt;/code&gt;做数据变更，每个插件都有自己的职责，互不干涉，互不影响，通过 &lt;code&gt;NextPlugin&lt;/code&gt;，这个外卖小哥插件，把 数据在各个 hook 流程之间进行流转，进而建立起一套高效的流水线系统，&lt;code&gt;耦合性低，定制化程度高，功能强大&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里就不画流程图做总结了，偷个懒，因为此文章耗时 &lt;code&gt;7个小时&lt;/code&gt;左右 （啊，我的眼镜），从头到尾 debug 下来，发现收获不少，以后完全可以模仿此库基于自己的业务流程，开发定制一套属于自己的高效可定制化的可插拔插件的工程。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;希望大家看完此文章会有所收获，慢慢的开始自己的学习源码之路。冲吧，兄弟们。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;另外放出一个基于此库开发的一个根据不同文件后缀进行条件编译的插件：&lt;span&gt;\@fu1996/webapck-resolver-mode-plugin \- npm \(npmjs.com\)&lt;/span&gt;&lt;sup&gt;[6]&lt;/sup&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;兄弟们，别忘记思考解答一下开头的问题，学有所获。下一篇文档 的方向是 解析webpack 源码。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHoCbEA6IhIGQjkn5ibFx2ibG2lsDfqkrkyJ1Rh7gs8ZtENPBTOAgBbElGcJziaTYWQb9hPTkkxocIGTw/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;640&quot;/&gt;&lt;figcaption&gt;image.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;p&gt;&lt;/p&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>