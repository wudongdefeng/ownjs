<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>bfb5f05597d24218d720691b5d6990f7</guid>
<title>分布式日志收集系统 - ExceptionLess的安装、配置、使用</title>
<link>https://toutiao.io/k/8nc5g27</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;前言&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Exceptionless 是一个开源的实时的日志收集框架，它可以应用在基于 ASP.NET，ASP.NET Core，Web API，Web Forms，WPF，Console，ASP.NET MVC 等技术开发的应用程序中，并且提供了REST接口可以应用在 Javascript，Node.js 中。（基本就是.Net技术栈的一套东西）&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;项目地址：https://github.com/exceptionless/Exceptionless&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;它将日志收集变得简单易用并且不需要了解太多的相关技术细节及配置，对于微服务架构的应用程序来说，统一的日志收集系统的建立更是有必要。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;要使用的话只需要在其官网上注册个账号，然后在代码中配置一下APIKey就可以了，不过免费版额度有限，当然还是自己部署一套比较好，这次依然使用docker部署&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;安装&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;docker部署可以在GitHub下载代码自己构建，也可以用官方打包好的镜像，为了方便这里我直接使用官方打包的镜像&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;docker-compose.yml&lt;/code&gt; 内容如下&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以看到其中包含5个容器：ExceptionLess App、ExceptionLess Job、elasticsearch、kibana、Redis&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;version:&lt;/span&gt; &lt;span&gt;&#x27;3.7&#x27;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;services:&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;app:&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;depends_on:&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;-&lt;/span&gt; &lt;span&gt;elasticsearch&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;-&lt;/span&gt; &lt;span&gt;redis&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;image:&lt;/span&gt; &lt;span&gt;exceptionless/app:latest&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;environment:&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;EX_AppMode:&lt;/span&gt; &lt;span&gt;Production&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;EX_ConnectionStrings__Cache:&lt;/span&gt; &lt;span&gt;provider=redis&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;EX_ConnectionStrings__Elasticsearch:&lt;/span&gt; &lt;span&gt;server=http://elasticsearch:9200&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;EX_ConnectionStrings__MessageBus:&lt;/span&gt; &lt;span&gt;provider=redis&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;#EX_ConnectionStrings__Metrics: provider=statsd;server=statsd;&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;EX_ConnectionStrings__Queue:&lt;/span&gt; &lt;span&gt;provider=redis&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;EX_ConnectionStrings__Redis:&lt;/span&gt; &lt;span&gt;server=redis,abortConnect=false&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;EX_ConnectionStrings__Storage:&lt;/span&gt; &lt;span&gt;provider=folder;path=/app/storage&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;# 官方配置默认包含HTTPS，我把它关了&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;#ASPNETCORE_URLS: http://+;https://+&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;ASPNETCORE_URLS:&lt;/span&gt; &lt;span&gt;http://+&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;# 关了HTTPS，这个端口也不用配置了&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;#ASPNETCORE_HTTPS_PORT: 5001&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;# 关了HTTPS，证书也不用配置&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;#ASPNETCORE_Kestrel__Certificates__Default__Password: password&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;#ASPNETCORE_Kestrel__Certificates__Default__Path: /https/aspnetapp.pfx&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;EX_RunJobsInProcess:&lt;/span&gt; &lt;span&gt;&#x27;false&#x27;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;ports:&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;-&lt;/span&gt; &lt;span&gt;5000&lt;/span&gt;&lt;span&gt;:80&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;# 关了HTTPS，不需要映射443端口&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;#- 5001:443&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;volumes:&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;-&lt;/span&gt; &lt;span&gt;ex_appdata:/app/storage&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;-&lt;/span&gt; &lt;span&gt;ex_ssldata:/https&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;jobs:&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;depends_on:&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;-&lt;/span&gt; &lt;span&gt;app&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;image:&lt;/span&gt; &lt;span&gt;exceptionless/job:latest&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;environment:&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;EX_AppMode:&lt;/span&gt; &lt;span&gt;Production&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;# UI地址，修改这里的IP地址为你的服务器IP地址&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;EX_BaseURL:&lt;/span&gt; &lt;span&gt;http://你的IP:5000&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;EX_ConnectionStrings__Cache:&lt;/span&gt; &lt;span&gt;provider=redis&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;EX_ConnectionStrings__Elasticsearch:&lt;/span&gt; &lt;span&gt;server=http://elasticsearch:9200&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;# 邮件配置&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;EX_ConnectionStrings__Email:&lt;/span&gt; &lt;span&gt;smtps://邮箱地址:密码@SMTP服务器:端口&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;EX_SmtpFrom:&lt;/span&gt; &lt;span&gt;发件邮箱地址&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;EX_ConnectionStrings__MessageBus:&lt;/span&gt; &lt;span&gt;provider=redis&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;#EX_ConnectionStrings__Metrics: provider=statsd;server=statsd;&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;EX_ConnectionStrings__Queue:&lt;/span&gt; &lt;span&gt;provider=redis&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;EX_ConnectionStrings__Redis:&lt;/span&gt; &lt;span&gt;server=redis,abortConnect=false&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;EX_ConnectionStrings__Storage:&lt;/span&gt; &lt;span&gt;provider=folder;path=/app/storage&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;volumes:&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;-&lt;/span&gt; &lt;span&gt;ex_appdata:/app/storage&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;elasticsearch:&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;image:&lt;/span&gt; &lt;span&gt;exceptionless/elasticsearch:7.15.2&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;environment:&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;discovery.type:&lt;/span&gt; &lt;span&gt;single-node&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;xpack.security.enabled:&lt;/span&gt; &lt;span&gt;&#x27;false&#x27;&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;ES_JAVA_OPTS:&lt;/span&gt; &lt;span&gt;-Xms1g&lt;/span&gt; &lt;span&gt;-Xmx1g&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;ports:&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;-&lt;/span&gt; &lt;span&gt;9200&lt;/span&gt;&lt;span&gt;:9200&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;-&lt;/span&gt; &lt;span&gt;9300&lt;/span&gt;&lt;span&gt;:9300&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;volumes:&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;-&lt;/span&gt; &lt;span&gt;ex_esdata:/usr/share/elasticsearch/data&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;kibana:&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;depends_on:&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;-&lt;/span&gt; &lt;span&gt;elasticsearch&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;image:&lt;/span&gt; &lt;span&gt;docker.elastic.co/kibana/kibana:7.15.2&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;ports:&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;-&lt;/span&gt; &lt;span&gt;5601&lt;/span&gt;&lt;span&gt;:5601&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;redis:&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;image:&lt;/span&gt; &lt;span&gt;redis:6.0-alpine&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;ports:&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;-&lt;/span&gt; &lt;span&gt;6379&lt;/span&gt;&lt;span&gt;:6379&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;volumes:&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;ex_esdata:&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;driver:&lt;/span&gt; &lt;span&gt;local&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;ex_appdata:&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;driver:&lt;/span&gt; &lt;span&gt;local&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;ex_ssldata:&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;driver:&lt;/span&gt; &lt;span&gt;local&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;邮件配置&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;邮件配置是比较麻烦的地方，我查了一些资料才解决&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在&lt;code&gt;jobs&lt;/code&gt;容器中的这两个环境变量里配置&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;EX_ConnectionStrings__Email:&lt;/span&gt; &lt;span&gt;smtps://邮箱地址:密码@SMTP服务器:端口&lt;/span&gt;&lt;br/&gt;&lt;span&gt;EX_SmtpFrom:&lt;/span&gt; &lt;span&gt;发件邮箱地址&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有坑的地方就是&lt;code&gt;EX_ConnectionStrings__Email&lt;/code&gt;变量的邮箱地址需要对@符号进行转义，用&lt;code&gt;%40&lt;/code&gt;代替@符号&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以我的自建邮箱为例，邮箱地址是：test@dealiaxy.com，那么配置就是这样&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;EX_ConnectionStrings__Email: smtps://test%40dealiaxy.com:密码@SMTP服务器:端口&lt;br/&gt;EX_SmtpFrom: test@dealiaxy.com&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这样配置完成就可以正常发邮件了~&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;PS：还可以配置Webhook实现报错自动推送到微信、钉钉之类的平台，不细说了&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;AspNetCore集成&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我主要使用的.Net技术栈是AspNetCore，其他项目可以参考官方文档的集成教程&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;首先在ExceptionLess中创建一个项目，把APIKey复制下来&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;编辑AspNetCore项目的&lt;code&gt;appsettings.json&lt;/code&gt;文件，增加配置&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&quot;Exceptionless&quot;&lt;/span&gt;: {&lt;br/&gt;    &lt;span&gt;&quot;ServerUrl&quot;&lt;/span&gt;: &lt;span&gt;&quot;http://12.0.0.1:5000&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;ApiKey&quot;&lt;/span&gt;: &lt;span&gt;&quot;Rajo99MksQTS6zZK81238jTkNHNOQP33A3iW45JC&quot;&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然后编辑&lt;code&gt;Program.cs&lt;/code&gt;，添加服务和中间件&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;builder.Services.AddExceptionless(builder.Configuration);&lt;br/&gt;app.UseExceptionless();&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;集成这一步就搞定了&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;记录事件&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Exceptionless中的事件有以下几种类型：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;日志消息：记录的日志，可以是任何文本内容&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;特性使用：功能使用量的记录，例如接口调用情况等&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;异常情况：记录异常的信息&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;失效链接：当被访问的页面不存在时进行记录&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;除此之外，每个事件还可以附加tags、object、UserIdentity、Description之类的信息，有这些信息的辅助可以方便后续排查问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最简单的使用&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;ExceptionlessClient.Default.CreateLog(&lt;span&gt;&quot;message&quot;&lt;/span&gt;).Submit();&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;CreateLog&lt;/code&gt;方法会放回一个&lt;code&gt;EventBuilder&lt;/code&gt;类型的对象，之后在这个对象上进行大部分操作支持链式调用&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以像上面那样一行代码链式调用，也可以这样&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;// 先创建&lt;/span&gt;&lt;br/&gt;&lt;span&gt;var&lt;/span&gt; eventBuilder = ExceptionlessClient.Default.CreateLog(&lt;span&gt;&quot;message&quot;&lt;/span&gt;);&lt;br/&gt;&lt;span&gt;// 再来慢慢添加&lt;/span&gt;&lt;br/&gt;eventBuilder.AddObject(...);&lt;br/&gt;eventBuilder.AddTags(...);&lt;br/&gt;&lt;span&gt;// 最后提交&lt;/span&gt;&lt;br/&gt;eventBuilder.Submit();&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以附加到事件中的信息有很多，下面是官网提供的一些例子&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;// Set the reference id of the event so we can search for it later (reference:id).&lt;/span&gt;&lt;br/&gt;&lt;span&gt;// This will automatically be populated if you call ExceptionlessClient.Default.Configuration.UseReferenceIds();&lt;/span&gt;&lt;br/&gt;.SetReferenceId(Guid.NewGuid().ToString(&lt;span&gt;&quot;N&quot;&lt;/span&gt;))&lt;br/&gt;&lt;span&gt;// Add the order object but exclude the credit number property.&lt;/span&gt;&lt;br/&gt;.AddObject(order, &lt;span&gt;&quot;Order&quot;&lt;/span&gt;, excludedPropertyNames: &lt;span&gt;new&lt;/span&gt; [] { &lt;span&gt;&quot;CreditCardNumber&quot;&lt;/span&gt; }, maxDepth: &lt;span&gt;2&lt;/span&gt;)&lt;br/&gt;&lt;span&gt;// Set the quote number.&lt;/span&gt;&lt;br/&gt;.SetProperty(&lt;span&gt;&quot;Quote&quot;&lt;/span&gt;, &lt;span&gt;123&lt;/span&gt;)&lt;br/&gt;&lt;span&gt;// Add an order tag.&lt;/span&gt;&lt;br/&gt;.AddTags(&lt;span&gt;&quot;Order&quot;&lt;/span&gt;)&lt;br/&gt;&lt;span&gt;// Mark critical.&lt;/span&gt;&lt;br/&gt;.MarkAsCritical()&lt;br/&gt;&lt;span&gt;// Set the coordinates of the end user.&lt;/span&gt;&lt;br/&gt;.SetGeo(&lt;span&gt;43.595089&lt;/span&gt;, &lt;span&gt;-88.444602&lt;/span&gt;)&lt;br/&gt;&lt;span&gt;// Set the user id that is in our system and provide a friendly name.&lt;/span&gt;&lt;br/&gt;.SetUserIdentity(user.Id, user.FullName)&lt;br/&gt;&lt;span&gt;// Set the users description of the error.&lt;/span&gt;&lt;br/&gt;.SetUserDescription(user.EmailAddress, &lt;span&gt;&quot;I tried creating an order from my saved quote.&quot;&lt;/span&gt;)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;例如，使用&lt;code&gt;SetUserIdentity&lt;/code&gt;设置了用户信息，在异常列表就可以看到用户名，如图&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.13972764949674363&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/2tY4ZEYfwQjNyskZZ5nge25C5PGDbPHldzLofKqpflQX4gM7I0QMGstAV5A2VFFtsb9yfyTaXdWrohEe204mBA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1689&quot;/&gt;&lt;figcaption&gt;image&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用&lt;code&gt;AddTags&lt;/code&gt;添加标签，在页面中以badge的形式显示&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.031657355679702&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/2tY4ZEYfwQjNyskZZ5nge25C5PGDbPHltkmpLtfoGDquf6nmj231Rqjlu0VHib8zNxjPibJvYEiatbw8ym8oWHE6g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;537&quot;/&gt;&lt;figcaption&gt;image&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;还有&lt;code&gt;AddObject&lt;/code&gt;，很方便，可以直接把对象传进去，由于C#语言有匿名对象，那就更方便了，在页面上的“扩展数据”标签页上可以看到，ExceptionLess会把对象处理成表格形式，更加直观&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8665338645418327&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/2tY4ZEYfwQjNyskZZ5nge25C5PGDbPHlVUiaibdxFsFTJ1z705vibwljX5SsZrgFBYc0O1WVXqhh3D3xkjBHv4U7g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1004&quot;/&gt;&lt;figcaption&gt;image&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;提交错误信息&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;ExceptionLess提供了Exception对象的扩展方法&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以catch到错误后直接Submit&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;try&lt;/span&gt; {}&lt;br/&gt;&lt;span&gt;catch&lt;/span&gt; (Exception ex) {&lt;br/&gt;    ex.ToExceptionless().Submit();&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当然也可以附加一些信息进去&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;ex.ToExceptionless().AddObject(...).Submit();&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;集成日志框架&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;除了手动提交事件，它还提供了与现有日志框架集成的方法&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;安装对应的nuget包就行（简单搜了一下，至少对Log4net和NLog的支持应该是没啥问题的）&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.47249647390691113&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/2tY4ZEYfwQjNyskZZ5nge25C5PGDbPHlPmI7RJlD4Pl4LdOLwcXpsT6mq1w4WPeicuW7FErZ6zFHoQuLMLiciaibgA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;709&quot;/&gt;&lt;figcaption&gt;image&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以与Log4net集成为例，首先安装nuget包：&lt;code&gt;Exceptionless.Log4net&lt;/code&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;附上一个简单的Log4net配置&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;log4net&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;appender&lt;/span&gt; &lt;span&gt;name&lt;/span&gt;=&lt;span&gt;&quot;exceptionless&quot;&lt;/span&gt; &lt;span&gt;type&lt;/span&gt;=&lt;span&gt;&quot;Exceptionless.Log4net.ExceptionlessAppender,Exceptionless.Log4net&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;&amp;lt;&lt;span&gt;layout&lt;/span&gt; &lt;span&gt;type&lt;/span&gt;=&lt;span&gt;&quot;log4net.Layout.PatternLayout&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;conversionPattern&lt;/span&gt; &lt;span&gt;value&lt;/span&gt;=&lt;span&gt;&quot;%-4timestamp [%thread] %-5level %logger %ndc - %message%newline&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;&amp;lt;/&lt;span&gt;layout&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;appender&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;root&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;&amp;lt;&lt;span&gt;level&lt;/span&gt; &lt;span&gt;value&lt;/span&gt;=&lt;span&gt;&quot;DEBUG&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;&amp;lt;&lt;span&gt;appender-ref&lt;/span&gt; &lt;span&gt;ref&lt;/span&gt;=&lt;span&gt;&quot;exceptionless&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;root&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;log4net&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;其他语言能用吗？&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;虽然官方只支持.Net平台和前端（js调用、vue3），不过ExceptionLess提供了大量的HTTP接口，想要在其他语言的项目中使用，只需要调用对应的接口就行了，甚至可以自己封装一个&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;不过在其他语言的项目中，我推荐使用Sentry（下一篇文章要介绍的），支持的语言/框架更多，ExceptionLess的优势在于和AspNetCore这类.Net平台的结合更好，结果页面更直观~&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;话说回来，ExceptionLess的接口文档（Swagger）在&lt;code&gt;/docs/index.html&lt;/code&gt;，根据部署地址访问就能看到，里面你要的功能基本都有。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;参考资料&lt;/h2&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;官方 Self Hosting Wiki：https://github.com/exceptionless/Exceptionless/wiki/Self-Hosting&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;.NET Core微服务之基于Exceptionless实现分布式日志记录：https://www.cnblogs.com/edisonchou/p/exceptionless_foundation_and_quick_start.html&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;开源日志框架Exceptionless使用教程：https://www.cnblogs.com/youring2/p/11546485.html&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;Exceptionless 5.x 无法正常发送邮件的问题解决 ：https://www.cnblogs.com/edisonchou/p/solve_the_problem_of_exceptionless_on_cannot_send_emails.html&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>c64fda714ccd44ef35c472b634de29f1</guid>
<title>Go语言创始人从Google离职</title>
<link>https://toutiao.io/k/b53md9r</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                                       &quot; id=&quot;js_content&quot;&gt;
            &lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;点击&lt;strong&gt;&lt;span&gt;关注&lt;/span&gt;&lt;/strong&gt;公众号：&lt;/span&gt;&lt;/strong&gt;互联网架构师，后台回复&lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzI2MTIzMzY3Mw==&amp;amp;mid=2247487508&amp;amp;idx=1&amp;amp;sn=78cf235aa9ba5f988c6922ca98f8bfd6&amp;amp;chksm=ea5cdd72dd2b54647cf55b4a73dcafa69fc7228205ad39ecc98fe57b39cdecb21c238c6d6cb6&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot; 2T&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot;&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;&lt;strong&gt;2T&lt;/strong&gt;&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;获取&lt;/span&gt;&lt;/strong&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzI2MTIzMzY3Mw==&amp;amp;mid=2247487508&amp;amp;idx=1&amp;amp;sn=78cf235aa9ba5f988c6922ca98f8bfd6&amp;amp;chksm=ea5cdd72dd2b54647cf55b4a73dcafa69fc7228205ad39ecc98fe57b39cdecb21c238c6d6cb6&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;2TB&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;2TB&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/a&gt;&lt;strong&gt;&lt;span&gt;学习资源！&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;上一篇：&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2MTIzMzY3Mw==&amp;amp;mid=2247523205&amp;amp;idx=1&amp;amp;sn=89b261f829ce6c3487ce8b2ccf3ed06b&amp;amp;chksm=ea5f56e3dd28dff5238989d3e07d775d34c04a4e80a166059e92e84379274819203d72d1dc1d&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;Alibaba开源内网高并发编程手册.pdf&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;Alibaba开源内网高并发编程手册.pdf&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;&lt;pre/&gt;&lt;/pre&gt;&lt;p&gt;前两天，谷歌Go语言产品负责人Steve Francia突然宣布离职，并回顾总结自己在谷歌的6年生涯经历，以及分享了离开的原因。&lt;/p&gt;&lt;p&gt;&lt;span&gt;Steve Francia&lt;/span&gt;&lt;span&gt;是Go核心&lt;/span&gt;&lt;span&gt;团队成&lt;/span&gt;&lt;span&gt;员，也是&lt;/span&gt;&lt;span&gt;Hu&lt;/span&gt;&lt;span&gt;go、&lt;/span&gt;&lt;span&gt;Cobra、Viper&lt;/span&gt;&lt;span&gt;等框架/库&lt;/span&gt;&lt;span&gt;的作者。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;558&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;235&quot; data-ratio=&quot;0.40925925925925927&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/xq9PqibkVAzop7OXy59aLWMJL1hny13usoZn7DJK3TQIdVq9eXRNRAuOiaXKtiaovO0evObvZBVibGOq3WzO8ia01jQ/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.421505376344086&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xq9PqibkVAzop7OXy59aLWMJL1hny13uslLTVJtu7Uuuf7khMCUib3vaFwMHIFlOJZfgz1ZLBGr4ILvvpv7icNcnw/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;1860&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;我将辞去谷歌Go语言产品负责人的职务。我为Go团队在过去六年中所取得的一切感到非常自豪，并且对Go的未来无比期待。&lt;/p&gt;&lt;/blockquote&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.9018518518518519&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xq9PqibkVAzop7OXy59aLWMJL1hny13uszUT92NzdJWP4r31I1Nlx1SaFw52IoaMNYF0lD7iaS9lD9icTXgNN5tgQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;在谷歌的六个年头&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2016年9月15号，是Steve Francia加入谷歌GO团队的第一天。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5111111111111111&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xq9PqibkVAzop7OXy59aLWMJL1hny13usb2iashmG1S0u962E4ffXicrmp6EiaYBVAGBQdgzqCkicnK4swSNGp7fR5g/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;他在博客中写道，GO是他过去十年间的热爱，GO让他再次爱上了编程。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;他说第一次接触GO就爱上了这种简洁优雅的语言，爱的程度有多深呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;他不管何时何地都想用GO语言写作，这也成就了Hugo, Cobra, Viper的诞生。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.41389290882778584&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xq9PqibkVAzop7OXy59aLWMJL1hny13usMxe7YMUunHW9AAichB5CJoBEzibEbxpuHOBciaOgMROicJq19wHRQVDiaBw/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;1382&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;6年前他加入了GO团队，目标是将GO从小众语言转变为主流的企业级语言。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;他用了一个词来描述他在GO团队担任的职位，「fairly unique」。他说，自己的目标是给GO的用户和开发者创造非凡的体验，&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;他负责的工作包括：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为初学者和专家改进 Go 开发者体验、为Go采用和最佳实践创建教育资源、完善Go贡献者的体验（标准库、工具、编译器等）、增加Go团队和社区之间的协作和沟通、收集来自企业、用户、开发人员、集成商的数据和反馈，并为 Go 团队提供见解、与不同的供应商、产品建立合作伙伴关系等。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;他刚加入谷歌时，团队的首要目标是解决谷歌内部用户的需求，在他加入之后，他努力将团队的工作重心转向全球用户的需求，并更注重未来的用户群体发展。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;他加入之后的第一个项目是「两年一次的谷歌用户调查」。&lt;span/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;作为世界上最大的开发者调查，它收集的来自用户的直接反馈促使团队通过在GO语言中添加「模块」和「泛型」来解决GO的两个最大的企业采用障碍。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6291666666666667&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xq9PqibkVAzop7OXy59aLWMJL1hny13usGEkxhLAA5RqjFyLl62EOicVB2Hicqbfs7EoiaKfMjRNM46EWorVcc0Heg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;960&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;之后就是GO.dev的发布，这是GO的一次重大更新，它是GO网络资源的唯一站点，包含案例研究、学习中心、GO playground以及各种包的门户。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用户可以理解成GO的一站式资源汇总中心，用户能找到的都在这了。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.584&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xq9PqibkVAzop7OXy59aLWMJL1hny13usplvd9bT8t2YicwUpGIVtnvNXvDL03ppLQKftbVonAT70Dtiayg4acxSg/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;875&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在谷歌期间，Steve Francia共同创建了开源战略团队，并共同撰写了谷歌的开源战略和行为准则。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;他推动了GO项目从主要由谷歌员工编写的项目演变为「主要由社区贡献者编写的项目」。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从2014年第四季度开始，来自社区的贡献度一直在稳步提升，并在2018年二季度达成了一个「重要里程碑」——来自社区的贡献度首次超过GO团队。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6185185185185185&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xq9PqibkVAzop7OXy59aLWMJL1hny13us0NWhtTpQLU7o7wvNFvy5shEp7ejUVMqqndzFCrD65DuQiaAmTbfFGYQ/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;过去的六年里，GO的用户数增长了近十倍，用户使用的频率也从偶尔使用到日常使用。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;今天，GO已经成为主流企业语言之一，超过75%的CNCF项目是用GO编写的，也是主要的云应用程序语言之一。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.55&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xq9PqibkVAzop7OXy59aLWMJL1hny13usLf11n1oXzsyElQTLvKrRHd1R4ib2UwRVHW5cZRVwB8WaCzzQv8icCdMg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;谈到他选择加入GO的原因，他说，GO让编写软件成为了一件有趣的事，这也是他六年来坚持下去的源泉。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;“Go 在可读性、可表达性和简约性之间取得了近乎完美的平衡。更重要的是，它让编写软件变成一件有趣的事。我很快就停止用任何其他语言编写软件，并沉浸在Go社区中。在GO的这段时间里，我编写了软件、数据库、演示文稿、博客文章，甚至组织了会议，我认识到这项技术有可能从根本上彻底改变软件的编写方式。”&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;功成名就，转投对冲基金&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;作为一个&lt;strong&gt;非计算机科班出身的文学学士&lt;/strong&gt;获得者，在谷歌的六年间，他收获了与许多优秀的人共事的机会，另外职业生涯的高光时刻也在这段时间完成。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Steve Francia在博客上还列出了一些他在谷歌生活的难忘瞬间，然而这些回忆即将画上句点。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Steve Francia表示，自己在最近几次的GO更新中，感到越来越力不从心。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;刚到谷歌和GO团队之时，他就感觉要学习的东西太多，六年过去了，他学习的速度已经远远赶不上更新的速率了，他用了「personally stagnant」（停滞不前）来形容最近的状态。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;随着具有里程碑意义的Go 1.18版本的发布，他感觉自己在GO团队的使命已经完成。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4441176470588235&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xq9PqibkVAzop7OXy59aLWMJL1hny13usdRUqqetZEfRbBkdPVLWPRMtYpqJqGNsfncBWFCB0hQmtRQibPV1ooqA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;680&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Steve Francia表示，回顾整个职业生涯，自己非常幸运地处于许多不同行业创新的前沿：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;带领MongoDB经历了一个爆炸性增长的时期，从零开始建立了一个125人的多学科团队。把MongoDB从一个不起眼的原型变成了NoSQL数据库的第一名和总排名第四的数据库。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;带领Go语言从一个小众的爱好语言成为主流技术（前10名），成为开发者和公司最希望采用的语言，使月活用户从不到10万增长到250万以上。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;带领Docker通过激烈的增长期实现大规模的行业应用，同时为CNCF和OCI提供工具。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;创建了Hugo，并让它成为第一大最受欢迎的静态网站引擎。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;创建了Cobra，排名第一的Go语言库，被51000多个应用程序使用，包括Kubernetes、Docker、GitHub CLI。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;个人简历&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;教育经历方面，Steve Francia在2004年于杨百翰大学获得文学学士学位。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.22037037037037038&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xq9PqibkVAzop7OXy59aLWMJL1hny13usOwm4iaFC55tNSiaYDqw6meGRVsCSQwqDaskzYSqnLqOq8ORjjFxwcHbw/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里也科普一下，杨百翰大学创立于1875年，是一所著名的私立研究型大学，同时也是美国最大的宗教大学。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;而在这里就读的学生，必须遵循教会的教义，如戒酒等等。本科生还必须完成宗教教育的课程，才能毕业。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在2022年US News排名中，位列第79。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xq9PqibkVAzop7OXy59aLWMJL1hny13usLDf04qnMicLohSuc6e6FicvraLcibcxRI0NUPsqQk3LiaIPic4bbJUzxE6w/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;980&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;虽说教育经历只有短短两句，但他自述的&lt;strong&gt;工作简历&lt;/strong&gt;却非常夸张，洋洋洒洒地写了好几千个字。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里也给一张长图来感受一下他的简历吧：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;558&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;250&quot; data-ratio=&quot;11.042592592592593&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/xq9PqibkVAzop7OXy59aLWMJL1hny13usxThmpQ7sOF7E2ibGEAT6G3HticNT1bHNciblYZ56Vn1Fq52Pmph7zDplQ/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最后，简单介绍一下Steve Francia现在入职的公司Two Sigma。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;据百科介绍，Two Sigma是一家总部位于美国纽约市的对冲基金投资公司，以使用包括人工智能、机器学习、分布式计算等多种科技方法管理投资策略著称。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img __bg_gif&quot; data-ratio=&quot;0.346875&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/xq9PqibkVAzop7OXy59aLWMJL1hny13us9BRHYcpvwoDTuZkIZEJ5L4Qzf98VXibVEVdVk0FicOQRplSjsFlENzxQ/640?wx_fmt=gif&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&quot; data-type=&quot;gif&quot; data-w=&quot;640&quot;/&gt;&lt;span/&gt;&lt;/figure&gt;&lt;section&gt;&lt;span&gt;参考阅读：https://spf13.com/&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;&lt;span&gt;-End-&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot; mpa-paragraph-type=&quot;ignored&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mpa-template-id=&quot;527&quot; data-mpa-category=&quot;image&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mpa-template-id=&quot;1357582&quot; data-mpa-category=&quot;image&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;span&gt;最后，关注公众号互联网架构师，在后台回复：2T，可以获取我整理的 Java 系列面试题和答案，非常齐全&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.1423611111111112&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/9mQQWOf4KRI2cbvKcYHPMKYlo4ibO3ZXG4kRnuC195QBJzMR0VLd7p08kYInDEEiasufnLsY7LhFwPIml2fPergw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;288&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;正文结束&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;推荐阅读 ↓↓↓&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;1.&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2MTIzMzY3Mw==&amp;amp;mid=2247527958&amp;amp;idx=1&amp;amp;sn=6d407650c574b304b681aecbf5c1323b&amp;amp;chksm=ea5fa370dd282a66a8b6463fb60ad850d47cc35d727ac4b66fdf29f88ce30eef400287b1b746&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;全新 IDEA 2022.2 正式发布，新特性真香！&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;全新 IDEA 2022.2 正式发布，新特性真香！&lt;/a&gt;&lt;/p&gt;&lt;p&gt;2&lt;span&gt;.&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2MTIzMzY3Mw==&amp;amp;mid=2247488035&amp;amp;idx=1&amp;amp;sn=5300893903094128bdc20ce2a5717a50&amp;amp;chksm=ea5cdf45dd2b56531ac0c3a8fb8b56b06bc546785f8772a4d02e2ca87c4e30f25b24bf21f784&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-itemshowtype=&quot;0&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;从零开始搭建创业公司后台技术栈&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;3&lt;span&gt;.&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2MTIzMzY3Mw==&amp;amp;mid=2247488928&amp;amp;idx=1&amp;amp;sn=4c56dd675e1b32a73b698df3d5e8609f&amp;amp;chksm=ea5cd8c6dd2b51d05e6d6d715418241f471ccb3002719263b2d0e092763f68f3691249970a08&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-itemshowtype=&quot;0&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;程序员一般可以从什么平台接私活？&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;4&lt;span&gt;.&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2MTIzMzY3Mw==&amp;amp;mid=2247527535&amp;amp;idx=1&amp;amp;sn=6cb6c086057aebaedc47859518eb80da&amp;amp;chksm=ea5fa109dd28281f3a90a36ea1deb7e8d1658d221f718ea15023b0345b53fc496c137496d10d&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;Spring中毒太深，离开Spring我连最基本的CRUD都不会写了...&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;Spring中毒太深，离开Spring我连最基本的CRUD都不会写了...&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;5.&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2MTIzMzY3Mw==&amp;amp;mid=2247513283&amp;amp;idx=1&amp;amp;sn=3b3d8e893a1241cf5af2150370ae9d71&amp;amp;chksm=ea5f79a5dd28f0b3a7603b1fbdb306f77ac64223bd05c4b7f0dc0469f77a68359810c5de2a01&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;为什么国内 996 干不过国外的 955呢？&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;为什么国内 996 干不过国外的 955呢？&lt;/a&gt;&lt;/p&gt;&lt;p&gt;6&lt;span&gt;.&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2MTIzMzY3Mw==&amp;amp;mid=2247508021&amp;amp;idx=1&amp;amp;sn=b3d1010a12e89362bce74771e6251037&amp;amp;chksm=ea5f6d53dd28e445ea5adbdc599f8ad4caa7fe50de11ea523d759b4b3adc3599f47676dd6b9c&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;这封“领导痛批95后下属”的邮件，句句扎心！&lt;/a&gt;                                  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;7&lt;span&gt;.&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2MTIzMzY3Mw==&amp;amp;mid=2247488564&amp;amp;idx=1&amp;amp;sn=256862239b12a1313919ee3ea6ff0d1c&amp;amp;chksm=ea5cd952dd2b50443feec88eb893233d2f6cf33f89e2ce72192c98035fd26cb0eb797a86f8f0&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-itemshowtype=&quot;0&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;15张图看懂瞎忙和高效的区别！&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&lt;img class=&quot;__bg_gif rich_pages wxw-img&quot; data-fileid=&quot;100030073&quot; data-ratio=&quot;0.1328125&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/3GQek52mKtWDXtSkfViaQ2FZ2ZfSyjBcSkArjQVCMH4a7uxg6Vkibiaiciaiae2uxvzia7yib04tleLiaqcFVGUf2vcMf4A/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;640&quot;/&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;
          &lt;/div&gt;

          

          



           
                                
                    
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>69fd745a7c658a7eeed968309a73a0db</guid>
<title>推荐实现Apache Kafka高可靠高弹性的三篇文章</title>
<link>https://toutiao.io/k/kdve4zs</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                           autoTypeSetting24psection&amp;#10;                          &quot; id=&quot;js_content&quot;&gt;
            &lt;p&gt;&lt;strong&gt;1、如何以事务方式发送 Kafka 消息？&lt;span/&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;https://www.jdon.com/61596&lt;/p&gt;&lt;p&gt;在自 2016 年以来，Mirakl 开始使用 Kafka 作为消息服务，以支持在微服务环境中的异步驱动架构。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Kafka的恰好一次&lt;/strong&gt;&lt;br/&gt;每条消息都精确传递一次，它为流处理应用程序等读取-处理-写入任务提供端到端的精确一次保证。为了支持这种保证，Kafka 依赖于两个特性：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img border=&quot;0&quot; class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.31785714285714284&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/PKkRgCqrcbqRrPOELGcN4UlprJNb4FCVS8rcs0u2pGquBnLZYiazibiaSRB8d2K2Y5qsYgXD62Apib3Pwic8BBX4I2A/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1400&quot;/&gt;&lt;br/&gt;&lt;br/&gt;您应该注意，&lt;strong&gt;此语义仅在 Kafka Streams 内部处理范围内得到保证，其中包括使用事件、更新状态存储和生成事件&lt;/strong&gt;。尝试更新 Kafka 外部的状态，例如更新数据库中的行或进行 API 调用，将导致较弱的保证。&lt;/p&gt;&lt;p&gt;&lt;span&gt;尝试一次更新两个系统在设计和实现方面都极具挑战性，尤其是对于我们知道 Kafka 不支持&lt;/span&gt;&lt;strong&gt;分布式事务&lt;/strong&gt;&lt;span&gt;的案例。在 Mirakl，我们决定一次只更新一个系统，首先我们更新数据库，然后使用异步过程将这些更新从数据库驱动到 Kafka。&lt;/span&gt;&lt;br/&gt;&lt;span&gt;这就是通常所说的发件箱模式。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;2、Apache Kafka重试和维护重试事件的顺序&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;https://www.jdon.com/61594&lt;/p&gt;&lt;p&gt;&lt;span&gt;重试非常重要，尤其是在 微服务 系统中，这些服务必须经常协作才能处理请求。如果一个服务只中断了几秒钟会发生什么？其他服务应该在放弃之前向客户抛出错误或重试多次。 &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;使用更多重试主题和死信队列主题使我们能够在不阻塞主要消费者的情况下重试请求。开发人员将轻松监控 DLQ 中一直失败的事件并手动删除或重新处理它。&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;这种方法的一个缺点是，如果我们想多次重试，它会创建多个主题。所以我们应该限制重试的次数。&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;另一个需要考虑的问题是在需要时中断事件的重试流程。我们可以删除 Kafka 的重试主题（墓碑）中的记录。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;3、Udemy在Apache Kafka上引入热重试和冷重试&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;https://www.jdon.com/61595&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Udemy 平台上有超过 4600 万学生和 64400 万课程注册，每天都有许多用户通过结帐流程来访问内容。这会产生大量流量，同时也会导致许多支付交易。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;让我们从定义一些术语开始讨论。我们将在接下来的部分中大量提及它们，最好事先澄清它们。&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;热重试：&lt;/strong&gt;这是一种在使用消息时遇到错误后立即重试消息的策略。例如，您可以考虑这样一种场景，即您的消费者由于套接字超时而无法连接到您的数据存储。或者，您执行了 API 调用来获取一些资源。但是，该资源丢失了，您只需要一些额外的时间来引用该资源。这可能是大多数最终一致的&lt;strong&gt;分布式系统&lt;/strong&gt;的常见原因。如您所见，由于立即重试，您的消费者可以从这些类型的错误中恢复过来。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;冷重试：&lt;/strong&gt;这种类型的重试策略是指您需要一些时间（可能超过几秒钟）才能解决根本原因的方式。例如，假设您的 MySQL 集群中有很高的复制延迟。您的消费者无法从副本中获取必要的记录。因此，您的消费者将失败，直到复制完成。在这种情况下，您将需要一个冷重试机制并以某种方式延迟您的主题以在解决时刻重试它&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
          &lt;/div&gt;

          

          



           
                                
                    
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>9620b86f97f342d0c9d3ab3f65f6d8e3</guid>
<title>看完Vue源码，总结了这个22个工具函数</title>
<link>https://toutiao.io/k/m5r34di</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                           autoTypeSetting24psection&amp;#10;                          &quot; id=&quot;js_content&quot;&gt;
            &lt;section data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzIwNDMyMTg4Ng==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/wIDSOebZK4NvWoUN1gSpNiaxwF4VLvroSV4fibB1a5iaLEaR23sVIW9ickg4StvsXlxnPpslKAltA6mvJUhkT2PsaA/0?wx_fmt=png&quot; data-nickname=&quot;JavaScript 每日一练&quot; data-alias=&quot;&quot; data-signature=&quot;每天一道JavaScript 实战题，让大家平时多多积累实用的知识，提高开发效率，才有更多的时间摸鱼。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;h2 mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;span mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;22.399999618530273&quot;&gt;来源 | https://segmentfault.com/a/1190000042073070&lt;/span&gt;&lt;/h2&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;&lt;/p&gt;&lt;h2 mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;strong mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;前言&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;section mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;在 vue 源码中，封装了很多&lt;/span&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;工具&lt;/span&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;函数&lt;/span&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;，学习这些函数，一方面学习大佬们的实现方式，另一方面是温习基础知识，希望大家在日常工作中，简单的函数也可以自己封装，提高编码能力。&lt;/span&gt;&lt;/section&gt;&lt;section mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;本次涉及的工具函数 1-16 在 Vue3 的源码中，路径是 &lt;/span&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;core/packages/shared/src/index.ts&lt;/span&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;。&lt;/span&gt;&lt;/section&gt;&lt;section mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;17-22 在 Vue2 的源码中，路径是 &lt;/span&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;vue/src/shared/util.ts&lt;/span&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;。&lt;/span&gt;&lt;/section&gt;&lt;h2 mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;strong mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;1、 EMPTY_OBJ 空对象&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;pre mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;const&lt;/span&gt; EMPTY_OBJ = __DEV__&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;  ? &lt;span class=&quot;code-snippet__built_in&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Object&lt;/span&gt;.freeze({})&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;  : {}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/pre&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;注意：&lt;br mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;27.200000762939453&quot;/&gt;Object.freeze 只能浅冻结，如果属性是对象，对属性的属性的修改就无法冻结了&lt;/span&gt;&lt;span mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;27.200000762939453&quot;/&gt;&lt;/p&gt;&lt;pre mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;const&lt;/span&gt; obj = {    &lt;span class=&quot;code-snippet__attr&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;张三&#x27;&lt;/span&gt;,    &lt;span class=&quot;code-snippet__attr&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;info&lt;/span&gt;: {        &lt;span class=&quot;code-snippet__attr&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;a&lt;/span&gt;: &lt;span class=&quot;code-snippet__number&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;1&lt;/span&gt;,        &lt;span class=&quot;code-snippet__attr&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;b&lt;/span&gt;: &lt;span class=&quot;code-snippet__number&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;};&lt;span class=&quot;code-snippet__built_in&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Object&lt;/span&gt;.freeze(obj);obj.name = &lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;李四&#x27;&lt;/span&gt;;&lt;span class=&quot;code-snippet__built_in&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;console&lt;/span&gt;.log(obj); &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/pre&gt;&lt;p mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;源码中的使用：&lt;/span&gt;&lt;/p&gt;&lt;p mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.533049040511727&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/eXCSRjyNYcY3XChaPuxN9H7icniaRgZcFNaEXu9fB1icxWImxx3b1ZeWgMCMticjBvE1B4VmW4H2dicksPoPTicT3Ucw/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;jpeg&quot; data-w=&quot;469&quot;/&gt;&lt;br mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;27.200000762939453&quot;/&gt;&lt;/p&gt;&lt;section mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;可以看出基本都是作为初始化或者兜底使用，由此产生疑问：&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-1&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;&lt;li&gt;&lt;section mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;使用的地方有的是 options，有的是 props，不同地方用同一个对象，不会有问题么？&lt;br mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;25.600000381469727&quot;/&gt;首先，很多初始化操作，后续都会重新赋值，EMPTY_OBJ 只是作为占位使用。其次，因为 Object.freeze 的原因，无法修改 EMPTY_OBJ，所以任何引用这个对象的地方，都不会受到影响。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;为什么判断是 __DEV__（process.env.NODE_ENV !== &#x27;production&#x27;） 的时候才使用 Object.freeze？&lt;br mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;25.600000381469727&quot;/&gt;Object.freeze 更多的是 Vue 源码开发者在调试时使用，可以通过报错，防止对空对象操作，更快发现源码问题。也因此，开发环境最终会避免了对 EMPTY_OBJ 的赋值操作，所以在生产环境使用 Object.freeze 意义不大。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;strong mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;2、EMPTY_ARR 空数组&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;pre mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;21&quot;&gt;&lt;span mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;21&quot;&gt;const&lt;/span&gt; EMPTY_ARR = __DEV__ ? &lt;span mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;21&quot;&gt;Object&lt;/span&gt;.freeze([]) : []&lt;/code&gt;&lt;/pre&gt;&lt;h2 mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;strong mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;3、 NOOP 空函数&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;pre mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;21&quot;&gt;const NOOP = &lt;span mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;21&quot;&gt;&lt;span mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;21&quot;&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; {}&lt;/code&gt;&lt;/pre&gt;&lt;section mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;依旧作为兜底和占位使用：&lt;/span&gt;&lt;/section&gt;&lt;section mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.36530324400564174&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/eXCSRjyNYcY3XChaPuxN9H7icniaRgZcFNtOibEF9gwd4TsOTT9TRu0wMU7Z4FN5HiaBlUTrhykI63VH7GddRR1ZHA/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;jpeg&quot; data-w=&quot;709&quot;/&gt;&lt;br mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;25.600000381469727&quot;/&gt;&lt;/section&gt;&lt;h2 mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;strong mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;4、 NO 永远返回 false 的函数&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;pre mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;const&lt;/span&gt; NO = &lt;span class=&quot;code-snippet__function&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet__params&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; &lt;span class=&quot;code-snippet__literal&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;源码中的使用：&lt;/span&gt;&lt;/section&gt;&lt;section mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5608011444921316&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/eXCSRjyNYcY3XChaPuxN9H7icniaRgZcFNpe6Ba4rrKxvsca4sjchcee5lq2DOyEjhfy4RM4SmXY08hj6XUEqj1g/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;jpeg&quot; data-w=&quot;699&quot;/&gt;&lt;/section&gt;&lt;section mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.2759146341463415&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/eXCSRjyNYcY3XChaPuxN9H7icniaRgZcFNnFJAQBsYmQnicRd3whgDgdopBXcRGSCuQsHgbdicgWV4xQsWuTcAcs8g/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;jpeg&quot; data-w=&quot;656&quot;/&gt;&lt;br mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;25.600000381469727&quot;/&gt;&lt;/section&gt;&lt;h2 mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;strong mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;5、isOn 判断字符串是不是 on 开头，并且 on 后首字母不是小写字母&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;pre mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;ruby&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;const onRE = &lt;span class=&quot;code-snippet__regexp&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;/^on[^a-z]/&lt;/span&gt;;const isOn = (key) =&amp;gt; onRE.test(key);&lt;span class=&quot;code-snippet__regexp&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;//&lt;/span&gt; 示例isOn(&lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;onChange&#x27;&lt;/span&gt;); &lt;span class=&quot;code-snippet__regexp&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;//&lt;/span&gt; trueisOn(&lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;onchange&#x27;&lt;/span&gt;); &lt;span class=&quot;code-snippet__regexp&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;//&lt;/span&gt; falseisOn(&lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;on3change&#x27;&lt;/span&gt;); &lt;span class=&quot;code-snippet__regexp&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;code-snippet__literal&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/pre&gt;&lt;h2 mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;strong mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;6、类型判断&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;pre mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;const&lt;/span&gt; isArray = &lt;span class=&quot;code-snippet__built_in&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Array&lt;/span&gt;.isArray&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;const&lt;/span&gt; isFunction = &lt;span class=&quot;code-snippet__function&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;(&lt;span class=&quot;code-snippet__params&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;val&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;typeof&lt;/span&gt; val === &lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;function&#x27;&lt;/span&gt;&lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;const&lt;/span&gt; isString = &lt;span class=&quot;code-snippet__function&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;(&lt;span class=&quot;code-snippet__params&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;val&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;typeof&lt;/span&gt; val === &lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;string&#x27;&lt;/span&gt;&lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;const&lt;/span&gt; isSymbol = &lt;span class=&quot;code-snippet__function&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;(&lt;span class=&quot;code-snippet__params&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;val&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;typeof&lt;/span&gt; val === &lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;symbol&#x27;&lt;/span&gt;&lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;const&lt;/span&gt; isObject = &lt;span class=&quot;code-snippet__function&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;(&lt;span class=&quot;code-snippet__params&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;val&lt;/span&gt;) =&amp;gt;&lt;/span&gt; val !== &lt;span class=&quot;code-snippet__literal&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;typeof&lt;/span&gt; val === &lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;object&#x27;&lt;/span&gt;&lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;const&lt;/span&gt; toTypeString = &lt;span class=&quot;code-snippet__function&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;(&lt;span class=&quot;code-snippet__params&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;value&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &lt;span class=&quot;code-snippet__built_in&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Object&lt;/span&gt;.prototype.toString.call(value)&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;const&lt;/span&gt; isMap = &lt;span class=&quot;code-snippet__function&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;(&lt;span class=&quot;code-snippet__params&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;val&lt;/span&gt;) =&amp;gt;&lt;/span&gt; toTypeString(val) === &lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;[object Map]&#x27;&lt;/span&gt;&lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;const&lt;/span&gt; isSet = &lt;span class=&quot;code-snippet__function&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;(&lt;span class=&quot;code-snippet__params&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;val&lt;/span&gt;) =&amp;gt;&lt;/span&gt; toTypeString(val) === &lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;[object Set]&#x27;&lt;/span&gt;&lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;const&lt;/span&gt; isDate = &lt;span class=&quot;code-snippet__function&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;(&lt;span class=&quot;code-snippet__params&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;val&lt;/span&gt;) =&amp;gt;&lt;/span&gt; toTypeString(val) === &lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;[object Date]&#x27;&lt;/span&gt;&lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;const&lt;/span&gt; isPlainObject = &lt;span class=&quot;code-snippet__function&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;(&lt;span class=&quot;code-snippet__params&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;val&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &lt;span class=&quot;code-snippet__built_in&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Object&lt;/span&gt;.prototype.toString.call(val) === &lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;[object Object]&#x27;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;isObject([]) &lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/pre&gt;&lt;h2 mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;strong mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;7、 toRawType 提取数据原始类型&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;pre mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;const&lt;/span&gt; toRawType = &lt;span class=&quot;code-snippet__function&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;(&lt;span class=&quot;code-snippet__params&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;value&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {  &lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-snippet__built_in&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Object&lt;/span&gt;.prototype.toString.call(value).slice(&lt;span class=&quot;code-snippet__number&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;code-snippet__number&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;-1&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;源码中的使用：&lt;/section&gt;&lt;section mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.768033946251768&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/eXCSRjyNYcY3XChaPuxN9H7icniaRgZcFNZTYibmkeaEjd8XxrGxRXGCiaqUe8Sr3olibiatoZSLVibeeRaQiaSrf4vklw/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;jpeg&quot; data-w=&quot;707&quot;/&gt;&lt;br mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;25.600000381469727&quot;/&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3512396694214876&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/eXCSRjyNYcY3XChaPuxN9H7icniaRgZcFNzu9aZmGhB5ncU4VG0fgj5ib4ALN1pbtysu4MNY4xCxHfhG0THb8zSLQ/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;jpeg&quot; data-w=&quot;726&quot;/&gt;&lt;br mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;25.600000381469727&quot;/&gt;&lt;/section&gt;&lt;h2 mp-original-font-size=&quot;20&quot; mp-original-line-height=&quot;32&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;8、isIntegerKey 判断是不是数字型的字符串&lt;/span&gt;&lt;/h2&gt;&lt;pre mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;ruby&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;const isIntegerKey = (key) =&amp;gt; isString(key) &amp;amp;&amp;amp;&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;    key !== &lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;NaN&#x27;&lt;/span&gt; &amp;amp;&amp;amp;&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;    key[&lt;span class=&quot;code-snippet__number&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;0&lt;/span&gt;] !== &lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;-&#x27;&lt;/span&gt; &amp;amp;&amp;amp;    &lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;&#x27;&lt;/span&gt; + parseInt(key, &lt;span class=&quot;code-snippet__number&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;10&lt;/span&gt;) === key;  &lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet__regexp&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;//&lt;/span&gt; 例子:&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;isIntegerKey(&lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;a&#x27;&lt;/span&gt;); &lt;span class=&quot;code-snippet__regexp&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;//&lt;/span&gt; falseisIntegerKey(&lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;0&#x27;&lt;/span&gt;); &lt;span class=&quot;code-snippet__regexp&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;//&lt;/span&gt; trueisIntegerKey(&lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;011&#x27;&lt;/span&gt;); &lt;span class=&quot;code-snippet__regexp&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;//&lt;/span&gt; falseisIntegerKey(&lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;11&#x27;&lt;/span&gt;); &lt;span class=&quot;code-snippet__regexp&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;//&lt;/span&gt; trueisIntegerKey(&lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;-11&#x27;&lt;/span&gt;); &lt;span class=&quot;code-snippet__regexp&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;//&lt;/span&gt; falseisIntegerKey(&lt;span class=&quot;code-snippet__number&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;11&lt;/span&gt;); &lt;span class=&quot;code-snippet__regexp&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;//&lt;/span&gt; falseisIntegerKey(&lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;NaN&#x27;&lt;/span&gt;); &lt;span class=&quot;code-snippet__regexp&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;code-snippet__literal&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/pre&gt;&lt;h2 mp-original-font-size=&quot;20&quot; mp-original-line-height=&quot;32&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;9、makeMap 将字符串分隔成 map，区分大小写，返回一个函数来判断 map 中是否含有某个 key&lt;/span&gt;&lt;/h2&gt;&lt;pre mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet__function&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;makeMap&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;str, expectsLowerCase&lt;/span&gt;) &lt;/span&gt;{    &lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;const&lt;/span&gt; map = &lt;span class=&quot;code-snippet__built_in&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Object&lt;/span&gt;.create(&lt;span class=&quot;code-snippet__literal&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;null&lt;/span&gt;);    &lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;const&lt;/span&gt; list = str.split(&lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;,&#x27;&lt;/span&gt;);    &lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;let&lt;/span&gt; i = &lt;span class=&quot;code-snippet__number&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;0&lt;/span&gt;; i &amp;lt; list.length; i++) {&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;        map[list[i]] = &lt;span class=&quot;code-snippet__literal&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;    }    &lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;return&lt;/span&gt; expectsLowerCase ? &lt;span class=&quot;code-snippet__function&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet__params&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;val&lt;/span&gt; =&amp;gt;&lt;/span&gt; !!map[val.toLowerCase()] : &lt;span class=&quot;code-snippet__function&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet__params&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;val&lt;/span&gt; =&amp;gt;&lt;/span&gt; !!map[val];&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/pre&gt;&lt;h2 mp-original-font-size=&quot;20&quot; mp-original-line-height=&quot;32&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;10、isReservedProp 是否是保留属性&lt;/span&gt;&lt;/h2&gt;&lt;pre mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;perl&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;const isReservedProp = &lt;span class=&quot;code-snippet__regexp&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;/*#__PURE__*/&lt;/span&gt; makeMap(&lt;span class=&quot;code-snippet__regexp&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;//&lt;/span&gt; the leading comma is intentional so empty string &lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&quot;&quot;&lt;/span&gt; is also included&lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;,key,ref,ref_for,ref_key,&#x27;&lt;/span&gt; +    &lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;onVnodeBeforeMount,onVnodeMounted,&#x27;&lt;/span&gt; +    &lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;onVnodeBeforeUpdate,onVnodeUpdated,&#x27;&lt;/span&gt; +    &lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;onVnodeBeforeUnmount,onVnodeUnmounted&#x27;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;    &lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet__regexp&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;//&lt;/span&gt; [&lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;&#x27;&lt;/span&gt;, &lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;key&#x27;&lt;/span&gt;, &lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;ref&#x27;&lt;/span&gt;, &lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;ref_for&#x27;&lt;/span&gt;, &lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;ref_key&#x27;&lt;/span&gt;, &lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;onVnodeBeforeMount&#x27;&lt;/span&gt;, &lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;onVnodeMounted&#x27;&lt;/span&gt;, &lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;onVnodeBeforeUpdate&#x27;&lt;/span&gt;, &lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;onVnodeUpdated&#x27;&lt;/span&gt;, &lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;onVnodeBeforeUnmount&#x27;&lt;/span&gt;, &lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;onVnodeUnmounted&#x27;&lt;/span&gt;]&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;// 示例&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;isReservedProp(&lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;key&#x27;&lt;/span&gt;); &lt;span class=&quot;code-snippet__regexp&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;//&lt;/span&gt; trueisReservedProp(&lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;onVnodeBeforeMount&#x27;&lt;/span&gt;); &lt;span class=&quot;code-snippet__regexp&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;//&lt;/span&gt; trueisReservedProp(&lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;&#x27;&lt;/span&gt;); &lt;span class=&quot;code-snippet__regexp&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;//&lt;/span&gt; trueisReservedProp(&lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27; &#x27;&lt;/span&gt;); &lt;span class=&quot;code-snippet__regexp&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;//&lt;/span&gt; false&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;如果有 /*#__PURE__*/ 这个标志，说明他是纯函数，如果没有调用它，打包工具会直接通 tree-shaking 把它删除，减少&lt;/span&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;代码&lt;/span&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;体积。&lt;/span&gt;&lt;/section&gt;&lt;h2 mp-original-font-size=&quot;20&quot; mp-original-line-height=&quot;32&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;32&quot;&gt;11、 isBuiltInDirective 是否是内置指令&lt;/span&gt;&lt;/h2&gt;&lt;pre mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;swift&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;const isBuiltInDirective =  makeMap(  &#x27;bind,cloak,&lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;else&lt;/span&gt;-&lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;if&lt;/span&gt;,&lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;else&lt;/span&gt;,&lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;for&lt;/span&gt;,html,&lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;if&lt;/span&gt;,model,on,once,pre,show,slot,text,memo&#x27;&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/pre&gt;&lt;h2 mp-original-font-size=&quot;20&quot; mp-original-line-height=&quot;32&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;32&quot;&gt;12、 cacheStringFunction 将函数变为可缓存结果的函数&lt;/span&gt;&lt;/h2&gt;&lt;pre mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;typescript&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;const&lt;/span&gt; cacheStringFunction = &lt;span class=&quot;code-snippet__function&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;(&lt;span class=&quot;code-snippet__params&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;fn&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {    &lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;const&lt;/span&gt; cache = &lt;span class=&quot;code-snippet__built_in&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Object&lt;/span&gt;.create(&lt;span class=&quot;code-snippet__literal&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;null&lt;/span&gt;);    &lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-snippet__function&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;(&lt;span class=&quot;code-snippet__params&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;(&lt;span class=&quot;code-snippet__params&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;str&lt;/span&gt;) =&amp;gt; {        &lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;const&lt;/span&gt; hit = cache[str];        &lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;return&lt;/span&gt; hit || (&lt;span class=&quot;code-snippet__params&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;cache[str] = fn(&lt;span class=&quot;code-snippet__params&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;str&lt;/span&gt;)&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;    }&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/pre&gt;&lt;h2 mp-original-font-size=&quot;20&quot; mp-original-line-height=&quot;32&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;32&quot;&gt;13、 camelize &amp;amp; hyphenate 连字符与驼峰互转&lt;/span&gt;&lt;/h2&gt;&lt;pre mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;ruby&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;const camelizeRE = &lt;span class=&quot;code-snippet__regexp&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;/-(\w)/g&lt;/span&gt;;const camelize = cacheStringFunction((str) =&amp;gt; {    &lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;return&lt;/span&gt; str.replace(camelizeRE, (&lt;span class=&quot;code-snippet__number&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;_&lt;/span&gt;, c) =&amp;gt; (c ? c.toUpperCase() : &lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;&#x27;&lt;/span&gt;));&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;});&lt;span class=&quot;code-snippet__regexp&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;//&lt;/span&gt; 清爽版const camelize = str =&amp;gt; str.replace(camelizeRE, (&lt;span class=&quot;code-snippet__number&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;_&lt;/span&gt;, c) =&amp;gt; {    &lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;return&lt;/span&gt; c ? c.toUpperCase() : &lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;&#x27;&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;});&lt;span class=&quot;code-snippet__regexp&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;//&lt;/span&gt; 举例：on-click-a =&amp;gt; onClickAcamelize(&lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;on-click-a&#x27;&lt;/span&gt;);const hyphenateRE = &lt;span class=&quot;code-snippet__regexp&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;/\B([A-Z])/g&lt;/span&gt;;const hyphenate = cacheStringFunction((str) =&amp;gt; str.replace(hyphenateRE, &lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;-$1&#x27;&lt;/span&gt;).toLowerCase());&lt;span class=&quot;code-snippet__regexp&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;//&lt;/span&gt; 清爽版const hyphenate = str =&amp;gt; str.replace(hyphenateRE, &lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;-$1&#x27;&lt;/span&gt;).toLowerCase();&lt;span class=&quot;code-snippet__regexp&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;//&lt;/span&gt; 仿照 camelize 写法const hyphenate = str =&amp;gt; str.replace(hyphenateRE, (&lt;span class=&quot;code-snippet__number&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;_&lt;/span&gt;, c) =&amp;gt; {    &lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;return&lt;/span&gt; c ? &lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;`-${c.toLowerCase()}`&lt;/span&gt; : &lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;&#x27;&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;});&lt;span class=&quot;code-snippet__regexp&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;//&lt;/span&gt; 举例：onClickA =&amp;gt; on-click-ahyphenate(&lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;onClickA&#x27;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/pre&gt;&lt;h2 mp-original-font-size=&quot;20&quot; mp-original-line-height=&quot;32&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;32&quot;&gt;14、 hasChanged 判断是不是有变化&lt;/span&gt;&lt;/h2&gt;&lt;pre mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;ruby&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;const hasChanged = (value, oldValue) =&amp;gt; value !== oldValue &amp;amp;&amp;amp; (value === value &lt;span class=&quot;code-snippet__params&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;||&lt;/span&gt; oldValue === oldValue);&lt;span class=&quot;code-snippet__regexp&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;//&lt;/span&gt; 示例&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;hasChanged(&lt;span class=&quot;code-snippet__number&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;code-snippet__number&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;1&lt;/span&gt;); &lt;span class=&quot;code-snippet__regexp&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;//&lt;/span&gt; falsehasChanged(&lt;span class=&quot;code-snippet__number&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;code-snippet__number&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;2&lt;/span&gt;); &lt;span class=&quot;code-snippet__regexp&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;//&lt;/span&gt; truehasChanged(+&lt;span class=&quot;code-snippet__number&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;0&lt;/span&gt;, -&lt;span class=&quot;code-snippet__number&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;0&lt;/span&gt;); &lt;span class=&quot;code-snippet__regexp&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;//&lt;/span&gt; falsehasChanged(NaN, NaN); &lt;span class=&quot;code-snippet__regexp&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;code-snippet__literal&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;false&lt;/span&gt;/&lt;span class=&quot;code-snippet__regexp&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;/ 场景：watch 监测值是不是变化了/&lt;/span&gt;&lt;span class=&quot;code-snippet__regexp&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;/ 扩展 Object.is &amp;amp; ===Object.is(+0, -0); /&lt;/span&gt;&lt;span class=&quot;code-snippet__regexp&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;/ false           Object.is(NaN, NaN); /&lt;/span&gt;&lt;span class=&quot;code-snippet__regexp&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;/ true+0 === -0 /&lt;/span&gt;&lt;span class=&quot;code-snippet__regexp&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;/ trueNaN === NaN /&lt;/span&gt;&lt;span class=&quot;code-snippet__regexp&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;/ false&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/pre&gt;&lt;h2 mp-original-font-size=&quot;20&quot; mp-original-line-height=&quot;32&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;32&quot;&gt;15、invokeArrayFns 执行数组里的函数&lt;/span&gt;&lt;/h2&gt;&lt;pre mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;const&lt;/span&gt; invokeArrayFns = &lt;span class=&quot;code-snippet__function&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;(&lt;span class=&quot;code-snippet__params&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;fns, arg&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {    &lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;let&lt;/span&gt; i = &lt;span class=&quot;code-snippet__number&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;0&lt;/span&gt;; i &amp;lt; fns.length; i++) {&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;        fns[i](arg);&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;    },    &lt;span class=&quot;code-snippet__function&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;val&lt;/span&gt;)&lt;/span&gt;{        &lt;span class=&quot;code-snippet__built_in&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;console&lt;/span&gt;.log(val + &lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;李四&#x27;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;    },    &lt;span class=&quot;code-snippet__function&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;val&lt;/span&gt;)&lt;/span&gt;{        &lt;span class=&quot;code-snippet__built_in&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;console&lt;/span&gt;.log(val + &lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;王五&#x27;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;    },&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;invokeArrayFns(arr, &lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;我是：&#x27;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;源码中的使用：&lt;/section&gt;&lt;section mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.1230283911671923&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/eXCSRjyNYcY3XChaPuxN9H7icniaRgZcFNGkzW4G8uOJxBiaHm8HgbILIuSo8S3oHn3UqkicQ9qvSbjMJiazibpibqKbQ/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;jpeg&quot; data-w=&quot;634&quot;/&gt;&lt;br mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;25.600000381469727&quot;/&gt;&lt;/section&gt;&lt;h2 mp-original-font-size=&quot;20&quot; mp-original-line-height=&quot;32&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;32&quot;&gt;16、 toNumber 转数字&lt;/span&gt;&lt;/h2&gt;&lt;pre mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;bash&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;const toNumber = (val) =&amp;gt; {&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;    const n = parseFloat(val);    &lt;span class=&quot;code-snippet__built_in&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;return&lt;/span&gt; isNaN(n) ? val : n;&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;toNumber(&lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;111&#x27;&lt;/span&gt;); // 111toNumber(&lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;a111&#x27;&lt;/span&gt;); // &lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;a111&#x27;&lt;/span&gt;toNumber(&lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;11a11&#x27;&lt;/span&gt;); // &lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;11&#x27;&lt;/span&gt;toNumber(NaN); // NaN// isNaN vs Number.isNaN// isNaN 判断是不是数字 is Not a Number// Number.isNaN 判断是不是 NaNisNaN(NaN); // trueisNaN(&lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;a&#x27;&lt;/span&gt;); // trueNumber.isNaN(NaN); // trueNumber.isNaN(&lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;a&#x27;&lt;/span&gt;); // &lt;span class=&quot;code-snippet__literal&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;false&lt;/span&gt;// Number.isNaN 的 polyfillif (!Number.isNaN) {    Number.isNaN = &lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;function&lt;/span&gt; (n) {        // 方法一        &lt;span class=&quot;code-snippet__built_in&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;return&lt;/span&gt; (window.isNaN(n) &amp;amp;&amp;amp; typeof n === &lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;number&#x27;&lt;/span&gt;);        // 方法二 利用只有 NaN 不跟自己相等的特性        &lt;span class=&quot;code-snippet__built_in&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;return&lt;/span&gt; n !== n;&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;    };&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/pre&gt;&lt;h2 mp-original-font-size=&quot;20&quot; mp-original-line-height=&quot;32&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;32&quot;&gt;17、isPrimitive 是否为原始数据&lt;/span&gt;&lt;/h2&gt;&lt;pre mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cs&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet__function&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;function &lt;span class=&quot;code-snippet__title&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;isPrimitive&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;value&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt; {  &lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;return&lt;/span&gt; (    &lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;value&lt;/span&gt; === &lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;string&#x27;&lt;/span&gt; ||    &lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;value&lt;/span&gt; === &lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;number&#x27;&lt;/span&gt; ||    &lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;value&lt;/span&gt; === &lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;symbol&#x27;&lt;/span&gt; ||    &lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;value&lt;/span&gt; === &lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;boolean&#x27;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;  )&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/pre&gt;&lt;h2 mp-original-font-size=&quot;20&quot; mp-original-line-height=&quot;32&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;32&quot;&gt;18、 isValidArrayIndex 是否为有效的数组下标，整数并且不是无穷大&lt;/span&gt;&lt;/h2&gt;&lt;pre mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet__function&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;isValidArrayIndex&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;val&lt;/span&gt;) &lt;/span&gt;{  &lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;const&lt;/span&gt; n = &lt;span class=&quot;code-snippet__built_in&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;parseFloat&lt;/span&gt;(&lt;span class=&quot;code-snippet__built_in&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;String&lt;/span&gt;(val))  &lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;return&lt;/span&gt; n &amp;gt;= &lt;span class=&quot;code-snippet__number&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;code-snippet__built_in&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Math&lt;/span&gt;.floor(n) === n &amp;amp;&amp;amp; &lt;span class=&quot;code-snippet__built_in&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;isFinite&lt;/span&gt;(val)&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/pre&gt;&lt;h2 mp-original-font-size=&quot;20&quot; mp-original-line-height=&quot;32&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;32&quot;&gt;19、bind 能兼容的bind函数&lt;/span&gt;&lt;/h2&gt;&lt;pre mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet__function&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;polyfillBind&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;fn, ctx&lt;/span&gt;) &lt;/span&gt;{  &lt;span class=&quot;code-snippet__function&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;boundFn&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;a&lt;/span&gt;) &lt;/span&gt;{    &lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;const&lt;/span&gt; l = &lt;span class=&quot;code-snippet__built_in&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;arguments&lt;/span&gt;.length    &lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;return&lt;/span&gt; l&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;      ? l &amp;gt; &lt;span class=&quot;code-snippet__number&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;        ? fn.apply(ctx, &lt;span class=&quot;code-snippet__built_in&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;arguments&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;        : fn.call(ctx, a)&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;      : fn.call(ctx)&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;  boundFn._length = fn.length  &lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;return&lt;/span&gt; boundFn&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;}&lt;span class=&quot;code-snippet__function&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;nativeBind&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;fn, ctx&lt;/span&gt;) &lt;/span&gt;{  &lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;return&lt;/span&gt; fn.bind(ctx)&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;}&lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;const&lt;/span&gt; bind = &lt;span class=&quot;code-snippet__built_in&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Function&lt;/span&gt;.prototype.bind ? nativeBind : polyfillBind&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/pre&gt;&lt;h2 mp-original-font-size=&quot;20&quot; mp-original-line-height=&quot;32&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;32&quot;&gt;20、 toArray 类数组转化为数组&lt;/span&gt;&lt;/h2&gt;&lt;pre mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;function toArray(list, &lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;start&lt;/span&gt;) {  &lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;start&lt;/span&gt; = &lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;start&lt;/span&gt; || &lt;span class=&quot;code-snippet__number&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;  let i = list.length - &lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;start&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;  const ret = &lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-snippet__built_in&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Array&lt;/span&gt;(i)  &lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;while&lt;/span&gt; (i&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;    ret[i] = &lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;list&lt;/span&gt;[i + &lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;start&lt;/span&gt;]&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;  }  &lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;return&lt;/span&gt; ret&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/pre&gt;&lt;h2 mp-original-font-size=&quot;20&quot; mp-original-line-height=&quot;32&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;32&quot;&gt;21、 once 只执行一次&lt;/span&gt;&lt;/h2&gt;&lt;pre mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet__function&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;once&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;fn&lt;/span&gt;) &lt;/span&gt;{  &lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;let&lt;/span&gt; called = &lt;span class=&quot;code-snippet__literal&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-snippet__function&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;code-snippet__params&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;/&gt;) &lt;/span&gt;{    &lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;if&lt;/span&gt; (!called) {&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;      called = &lt;span class=&quot;code-snippet__literal&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;      fn.apply(&lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;this&lt;/span&gt;, &lt;span class=&quot;code-snippet__built_in&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;arguments&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/pre&gt;&lt;h2 mp-original-font-size=&quot;20&quot; mp-original-line-height=&quot;32&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;32&quot;&gt;22、 isNative 是否为原生系统函数&lt;/span&gt;&lt;/h2&gt;&lt;pre mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet__function&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;isNative&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Ctor&lt;/span&gt;) &lt;/span&gt;{  &lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;typeof&lt;/span&gt; Ctor === &lt;span class=&quot;code-snippet__string&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&#x27;function&#x27;&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;code-snippet__regexp&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;/native code/&lt;/span&gt;.test(Ctor.toString())&lt;/span&gt;&lt;/code&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/pre&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;&lt;br mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27.200000762939453&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;&lt;span&gt;欢迎&lt;/span&gt;&lt;code&gt;长按图片加刷碗智为好友&lt;/code&gt;&lt;span&gt;，&lt;/span&gt;&lt;span&gt;我会第一时间和你分享前端行业趋势，学习途径，搞怪趣事，生活中的另一面幽默等等。&lt;span&gt;新的一年我们一起洗刷刷！！！！！！&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;68&quot; data-cropselx2=&quot;361&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;385&quot; data-fileid=&quot;100021057&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.8948194662480377&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;637&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/LDPLltmNy55d6jntYlvCrOVACPvqJkZuaOwJiaecIvQdzSq8lLVBibrGRZPxlWKvV7sGqC3CtOjZ1QxHu56tWZwg/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/p&gt;
          &lt;/div&gt;

          

          



           
                                
                    
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>0b627121a18abda3ea5e3ac258aaf8b0</guid>
<title>2 万字详解，吃透 ES！</title>
<link>https://toutiao.io/k/01ufo5b</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;近期在公司做了一次 Elasticsearch 的分享，所以本篇主要是做一个总结，希望通过这篇文章能让读者大致了解 Elasticsearch 是做什么的以及它的使用和基本原理。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;一、生活中的数据&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;搜索引擎是对数据的检索，所以我们先从生活中的数据说起。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们生活中的数据总体分为两种：&lt;strong&gt;结构化数据&lt;/strong&gt; 和 &lt;strong&gt;非结构化数据&lt;/strong&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;结构化数据&lt;/strong&gt;：也称作行数据，是由二维表结构来逻辑表达和实现的数据，严格地遵循数据格式与长度规范，主要通过关系型数据库进行存储和管理。指具有固定格式或有限长度的数据，如数据库，元数据等。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;非结构化数据&lt;/strong&gt;：又可称为全文数据，不定长或无固定格式，不适于由数据库二维表来表现，包括所有格式的办公文档、XML、HTML、word文档，邮件，各类报表、图片和音频频、视频信息等。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;span&gt;说明：&lt;/span&gt;&lt;span&gt;如果要更细致&lt;/span&gt;地&lt;span&gt;区分的话，XML、HTML可划分为 &lt;/span&gt;&lt;strong&gt;半结构化数据&lt;/strong&gt;&lt;span&gt;。&lt;/span&gt;&lt;span&gt;因为它们也具有自己特定的标签格式，所以既可以根据需要按结构化数据来处理，也可抽取出纯文本按非结构化数据来处理。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;根据两种数据分类，搜索也相应地分为两种：&lt;strong&gt;结构化数据搜索&lt;/strong&gt; 和 &lt;strong&gt;非结构化数据搜索&lt;/strong&gt; 。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于结构化数据，因为它们具有特定的结构，所以我们一般都是可以通过关系型数据库（mysql，oracle等）的 二维表（table）的方式存储和搜索，也可以建立索引。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于非结构化数据，也即对全文数据的搜索主要有两种方法：&lt;strong&gt;顺序扫描法&lt;/strong&gt;、&lt;strong&gt;全文检索&lt;/strong&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;顺序扫描&lt;/strong&gt;：通过文字名称也可了解到它的大概搜索方式，即按照顺序扫描的方式查询特定的关键字。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;例如给你一张报纸，让你找到该报纸中“平安”的文字在哪些地方出现过。你肯定需要从头到尾把报纸阅读扫描一遍然后标记出关键字在哪些版块出现过以及它的出现位置。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这种方式无疑是最耗时的最低效的，如果报纸排版字体小，而且版块较多甚至有多份报纸，等你扫描完你的眼睛也差不多了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;全文搜索&lt;/strong&gt;：对非结构化数据顺序扫描很慢，我们是否可以进行优化？把我们的非结构化数据想办法弄得有一定结构不就行了吗？将非结构化数据中的一部分信息提取出来，重新组织，使其变得有一定结构，然后对此有一定结构的数据进行搜索，从而达到搜索相对较快的目的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这种方式就构成了全文检索的基本思路。这部分从非结构化数据中提取出的然后重新组织的信息，我们称之 &lt;strong&gt;索引&lt;/strong&gt; 。这种方式的主要工作量在前期索引的创建，但是对于后期搜索却是快速高效的。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;二、先说说Lucene&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过对生活中数据的类型作了一个简短了解之后，我们知道关系型数据库的SQL检索是处理不了这种非结构化数据的。这种非结构化数据的处理需要依赖全文搜索，而目前市场上开放源代码的最好全文检索引擎工具包就属于 apache 的 Lucene了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但是 Lucene 只是一个工具包，它不是一个完整的全文检索引擎。Lucene的目的是为软件开发人员提供一个简单易用的工具包，以方便的在目标系统中实现全文检索的功能，或者是以此为基础建立起完整的全文检索引擎。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;目前以 Lucene 为基础建立的开源可用全文搜索引擎主要是 Solr 和 Elasticsearch。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Solr 和 Elasticsearch 都是比较成熟的全文搜索引擎，能完成的功能和性能也基本一样。但是 ES 本身就具有分布式的特性和易安装使用的特点，而Solr的分布式需要借助第三方来实现，例如通过使用ZooKeeper来达到分布式协调管理。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不管是 Solr 还是 Elasticsearch 底层都是依赖于 Lucene，而 Lucene 能实现全文搜索主要是因为它实现了 &lt;strong&gt;倒排索引&lt;/strong&gt; 的查询结构。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如何理解倒排索引呢？假如现有三份数据文档，文档的内容如下分别是：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;Java is the best programming language.&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;PHP is the best programming language.&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Javascript is the best programming language.&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为了创建倒排索引，我们通过分词器将每个文档的内容域拆分成单独的词（我们称它为词条或 Term），创建一个包含所有不重复词条的排序列表，然后列出每个词条出现在哪个文档。结果如下所示：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;Term          Doc_1    Doc_2   Doc_3&lt;br/&gt;&lt;span&gt;-------------------------------------&lt;/span&gt;&lt;br/&gt;Java        |   √   |        |&lt;br/&gt;is          |   √   |   √    |   √&lt;br/&gt;the         |   √   |   √    |   √&lt;br/&gt;best        |   √   |   √    |   √&lt;br/&gt;programming |   √   |   √    |   √&lt;br/&gt;language    |   √   |   √    |   √&lt;br/&gt;PHP         |       |   √    |&lt;br/&gt;Javascript  |       |        |   √&lt;br/&gt;&lt;span&gt;-------------------------------------&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这种结构由文档中所有不重复词的列表构成，对于其中每个词都有一个文档列表与之关联。这种由属性值来确定记录的位置的结构就是 &lt;strong&gt;倒排索引&lt;/strong&gt; 。带有倒排索引的文件我们称为倒排文件。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们将上面的内容转换为图的形式来说明倒排索引的结构信息，如下图所示&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6856316297010607&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/HmXWpTc2vib2o9cibf1MVlMZ5AvHopY9zWcPMkEEp7cvSNLcvCp7s0pI9PIicRwDT3TGa86UkLjZ1SZMGKGBNhicnQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1037&quot;/&gt;&lt;figcaption&gt;倒排索引结构&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其中主要有如下几个核心术语需要理解：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;词条(Term)&lt;/strong&gt; ：索引里面最小的存储和查询单元，对于英文来说是一个单词，对于中文来说一般指分词后的一个词。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;词典(Term Dictionary)&lt;/strong&gt; ：或字典，是词条Term的集合。搜索引擎的通常索引单位是单词，单词词典是由文档集合中出现过的所有单词构成的字符串集合，单词词典内每条索引项记载单词本身的一些信息以及指向“倒排列表”的指针。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;倒排表(Post list)&lt;/strong&gt; ：一个文档通常由多个词组成，倒排表记录的是某个词在哪些文档里出现过以及出现的位置。每条记录称为一个倒排项(Posting)。倒排表记录的不单是文档编号，还存储了词频等信息。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;倒排文件(Inverted File)&lt;/strong&gt; ：所有单词的倒排列表往往顺序地存储在磁盘的某个文件里，这个文件被称之为倒排文件，倒排文件是存储倒排索引的物理文件。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从上图我们可以了解到倒排索引主要由两个部分组成：&lt;strong&gt;词典&lt;/strong&gt; 和 &lt;strong&gt;倒排文件&lt;/strong&gt; 。词典和倒排表是Lucene中很重要的两种数据结构，是实现快速检索的重要基石。词典和倒排文件是分两部分存储的，词典在内存中而倒排文件存储在磁盘上。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;三、核心概念&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一些基础知识的铺垫之后我们正式进入今天的主角Elasticsearch的介绍， ES是使用Java编写的一种开源搜索引擎，它在内部使用Lucene做索引与搜索，通过对Lucene的封装，隐藏了Lucene的复杂性，取而代之的提供一套简单一致的 RESTful API。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然而，Elasticsearch 不仅仅是 Lucene，并且也不仅仅只是一个全文搜索引擎。它可以被下面这样准确的形容：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;一个分布式的实时文档存储，每个字段可以被索引与搜索。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;一个分布式实时分析搜索引擎。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;能胜任上百个服务节点的扩展，并支持 PB 级别的结构化或者非结构化数据。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;官网对Elasticsearch的介绍是Elasticsearch 是一个 &lt;strong&gt;分布式&lt;/strong&gt; 、&lt;strong&gt;可扩展&lt;/strong&gt; 、&lt;strong&gt;近实时&lt;/strong&gt; 的搜索与数据分析引擎。我们通过一些核心概念来看下Elasticsearch 是如何做到分布式，可扩展和近实时搜索的。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;集群（Cluster）&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;ES的集群搭建很简单，不需要依赖第三方协调管理组件，自身内部就实现了集群的管理功能。ES集群由一个或多个Elasticsearch节点组成，每个节点配置相同的 &lt;code&gt;cluster.name&lt;/code&gt; 即可加入集群，默认值为 “elasticsearch”。确保不同的环境中使用不同的集群名称，否则最终会导致节点加入错误的集群。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一个Elasticsearch服务启动实例就是一个节点（Node）。节点通过 &lt;code&gt;node.name&lt;/code&gt; 来设置节点名称，如果不设置则在启动时给节点分配一个随机通用唯一标识符作为名称。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;发现机制&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那么有一个问题，ES内部是如何通过一个相同的设置&lt;code&gt;cluster.name&lt;/code&gt;就能将不同的节点连接到同一个集群的？答案是&lt;code&gt;Zen Discovery&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Zen Discovery 是 Elasticsearch 的内置默认发现模块（发现模块的职责是发现集群中的节点以及选举 master 节点）。它提供单播和基于文件的发现，并且可以扩展为通过插件支持云环境和其他形式的发现。Zen Discovery 与其他模块集成，例如，节点之间的所有通信都使用 Transport 模块完成。节点使用发现机制通过Ping的方式查找其他节点。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Elasticsearch 默认被配置为使用单播发现，以防止节点无意中加入集群。只有在同一台机器上运行的节点才会自动组成集群。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果集群的节点运行在不同的机器上，使用单播，你可以为 Elasticsearch 提供一些它应该去尝试连接的节点列表。当一个节点联系到单播列表中的成员时，它就会得到整个集群所有节点的状态，然后它会联系 master 节点，并加入集群。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这意味着单播列表不需要包含集群中的所有节点， 它只是需要足够的节点，当一个新节点联系上其中一个并且说上话就可以了。如果你使用 master 候选节点作为单播列表，你只要列出三个就可以了。这个配置在 elasticsearch.yml 文件中：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;discovery.zen.ping.unicast.hosts:&lt;/span&gt; &lt;span&gt;[&quot;host1&quot;,&lt;/span&gt; &lt;span&gt;&quot;host2:port&quot;&lt;/span&gt;&lt;span&gt;]&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;节点启动后先 ping ，如果 &lt;code&gt;discovery.zen.ping.unicast.hosts&lt;/code&gt; 有设置，则 ping 设置中的 host ，否则尝试 ping localhost 的几个端口， Elasticsearch 支持同一个主机启动多个节点， Ping 的 response 会包含该节点的基本信息以及该节点认为的 master 节点。选举开始，先从各节点认为的 master 中选，规则很简单，按照 id 的字典序排序，取第一个。如果各节点都没有认为的 master ，则从所有节点中选择，规则同上。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里有个限制条件就是 &lt;code&gt;discovery.zen.minimum_master_nodes&lt;/code&gt; ，如果节点数达不到最小值的限制，则循环上述过程，直到节点数足够可以开始选举。最后选举结果是肯定能选举出一个 master ，如果只有一个 local 节点那就选出的是自己。如果当前节点是 master ，则开始等待节点数达到 discovery.zen.minimum_master_nodes，然后提供服务。如果当前节点不是 master ，则尝试加入 master 。Elasticsearch 将以上服务发现以及选主的流程叫做 ZenDiscovery 。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由于它支持任意数目的集群（ 1- N ），所以不能像 Zookeeper 那样限制节点必须是奇数，也就无法用投票的机制来选主，而是通过一个规则，只要所有的节点都遵循同样的规则，得到的信息都是对等的，选出来的主节点肯定是一致的。但分布式系统的问题就出在信息不对等的情况，这时候很容易出现脑裂（ Split-Brain ）的问题，大多数解决方案就是设置一个 quorum 值，要求可用节点必须大于 quorum （一般是超过半数节点），才能对外提供服务。而 Elasticsearch 中，这个 quorum 的配置就是 &lt;code&gt;discovery.zen.minimum_master_nodes&lt;/code&gt; 。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;节点的角色&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;每个节点既可以是 &lt;strong&gt;候选主节点&lt;/strong&gt; 也可以是 &lt;strong&gt;数据节点&lt;/strong&gt; ，通过在配置文件&lt;code&gt;../config/elasticsearch.yml&lt;/code&gt;中设置即可，默认都为&lt;code&gt;true&lt;/code&gt;。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;node.master:&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;  &lt;span&gt;//是否候选主节点&lt;/span&gt;&lt;br/&gt;&lt;span&gt;node.data:&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;    &lt;span&gt;//是否数据节点&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;数据节点&lt;/strong&gt; 负责数据的存储和相关的操作，例如对数据进行增、删、改、查和聚合等操作，所以数据节点（data节点）对机器配置要求比较高，对CPU、内存和I/O的消耗很大。通常随着集群的扩大，需要增加更多的数据节点来提高性能和可用性。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;候选主节点&lt;/strong&gt; 可以被选举为主节点（master节点），集群中只有候选主节点才有选举权和被选举权，其他节点不参与选举的工作。主节点负责创建索引、删除索引、跟踪哪些节点是群集的一部分，并决定哪些分片分配给相关的节点、追踪集群中节点的状态等，稳定的主节点对集群的健康是非常重要的。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5540865384615384&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/HmXWpTc2vib2o9cibf1MVlMZ5AvHopY9zWlHAgiagbeTXBUPQcRZ8qJUxyyIYZiaMJfDJ5EmZibGodveIuMOdWrxfQg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;832&quot;/&gt;&lt;figcaption&gt;ES Cluster&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一个节点既可以是候选主节点也可以是数据节点，但是由于数据节点对CPU、内存核I/0消耗都很大，所以如果某个节点既是数据节点又是主节点，那么可能会对主节点产生影响从而对整个集群的状态产生影响。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;因此为了提高集群的健康性，我们应该对Elasticsearch集群中的节点做好角色上的划分和隔离。可以使用几个配置较低的机器群作为候选主节点群。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;主节点和其他节点之间通过Ping的方式互检查，主节点负责Ping所有其他节点，判断是否有节点已经挂掉。其他节点也通过Ping的方式判断主节点是否处于可用状态。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;虽然对节点做了角色区分，但是用户的请求可以发往任何一个节点，并由该节点负责分发请求、收集结果等操作，而不需要主节点转发，这种节点可称之为 &lt;strong&gt;协调节点&lt;/strong&gt; ，协调节点是不需要指定和配置的，集群中的任何节点都可以充当协调节点的角色。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;脑裂现象&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;同时如果由于网络或其他原因导致集群中选举出多个Master节点，使得数据更新时出现不一致，这种现象称之为 &lt;strong&gt;脑裂&lt;/strong&gt; ，即集群中不同的节点对于master的选择出现了分歧，出现了多个master竞争。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;“脑裂”问题可能由以下几个原因造成：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;网络问题&lt;/strong&gt;：集群间的网络延迟导致一些节点访问不到master，认为master挂掉了从而选举出新的master，并对master上的分片和副本标红，分配新的主分片&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;节点负载&lt;/strong&gt;：主节点的角色既为master又为data，访问量较大时可能会导致ES停止响应（假死状态）造成大面积延迟，此时其他节点得不到主节点的响应认为主节点挂掉了，会重新选取主节点。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;内存回收&lt;/strong&gt;：主节点的角色既为master又为data，当data节点上的ES进程占用的内存较大，引发JVM的大规模内存回收，造成ES进程失去响应。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为了避免脑裂现象的发生，我们可以从原因着手通过以下几个方面来做出优化措施：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;适当调大响应时间，减少误判&lt;/strong&gt;&lt;br/&gt;通过参数discovery.zen.ping_timeout设置节点状态的响应时间，默认为3s，可以适当调大，如果master在该响应时间的范围内没有做出响应应答，判断该节点已经挂掉了。调大参数（如6s，discovery.zen.ping_timeout:6），可适当减少误判。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;选举触发&lt;/strong&gt;&lt;br/&gt;我们需要在候选集群中的节点的配置文件中设置参数discovery.zen.munimum_master_nodes的值，这个参数表示在选举主节点时需要参与选举的候选主节点的节点数，默认值是1，官方建议取值(master_eligibel_nodes/2) + 1，其中master_eligibel_nodes为候选主节点的个数。这样做既能防止脑裂现象的发生，也能最大限度地提升集群的高可用性，因为只要不少于discovery.zen.munimum_master_nodes个候选节点存活，选举工作就能正常进行。当小于这个值的时候，无法触发选举行为，集群无法使用，不会造成分片混乱的情况。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;角色分离&lt;/strong&gt;&lt;br/&gt;即是上面我们提到的候选主节点和数据节点进行角色分离，这样可以减轻主节点的负担，防止主节点的假死状态发生，减少对主节点“已死”的误判。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;分片（Shards）&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;ES支持PB级全文搜索，当索引上的数据量太大的时候，ES通过水平拆分的方式将一个索引上的数据拆分出来分配到不同的数据块上，拆分出来的数据库块称之为一个 &lt;strong&gt;分片&lt;/strong&gt; 。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这类似于MySql的分库分表，只不过Mysql分库分表需要借助第三方组件而ES内部自身实现了此功能。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在一个多分片的索引中写入数据时，通过路由来确定具体写入哪一个分片中，所以在创建索引的时候需要指定分片的数量，并且分片的数量一旦确定就不能修改。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;分片的数量和下面介绍的副本数量都是可以通过创建索引时的&lt;code&gt;settings&lt;/code&gt;来配置，ES默认为一个索引创建5个主分片, 并分别为每个分片创建一个副本。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;PUT /myIndex&lt;br/&gt;{&lt;br/&gt;   &lt;span&gt;&quot;settings&quot;&lt;/span&gt; : {&lt;br/&gt;      &lt;span&gt;&quot;number_of_shards&quot;&lt;/span&gt; : 5,&lt;br/&gt;      &lt;span&gt;&quot;number_of_replicas&quot;&lt;/span&gt; : 1&lt;br/&gt;   }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;ES通过分片的功能使得索引在规模上和性能上都得到提升，每个分片都是Lucene中的一个索引文件，每个分片必须有一个主分片和零到多个副本。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;副本（Replicas）&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;副本就是对分片的Copy，每个主分片都有一个或多个副本分片，当主分片异常时，副本可以提供数据的查询等操作。主分片和对应的副本分片是不会在同一个节点上的，所以副本分片数的最大值是 n -1（其中n为节点数）。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对文档的新建、索引和删除请求都是写操作，必须在主分片上面完成之后才能被复制到相关的副本分片，ES为了提高写入的能力这个过程是并发写的，同时为了解决并发写的过程中数据冲突的问题，ES通过乐观锁的方式控制，每个文档都有一个 _version （版本）号，当文档被修改时版本号递增。一旦所有的副本分片都报告写成功才会向协调节点报告成功，协调节点向客户端报告成功。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.2644230769230769&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/HmXWpTc2vib2o9cibf1MVlMZ5AvHopY9zWRazdMP0Lxib7Jia3MWTeLk0L9G1ibXGoV2h1kIxapOmKNdiaicLbyZcD7KA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;832&quot;/&gt;&lt;figcaption&gt;ES Replicas&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从上图可以看出为了达到高可用，Master节点会避免将主分片和副本分片放在同一个节点上。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;假设这时节点Node1服务宕机了或者网络不可用了，那么主节点上主分片S0也就不可用了。幸运的是还存在另外两个节点能正常工作，这时ES会重新选举新的主节点，而且这两个节点上存在我们的所需要的S0的所有数据，我们会将S0的副本分片提升为主分片，这个提升主分片的过程是瞬间发生的。此时集群的状态将会为 yellow。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为什么我们集群状态是 yellow 而不是 green 呢？虽然我们拥有所有的2个主分片，但是同时设置了每个主分片需要对应两份副本分片，而此时只存在一份副本分片。所以集群不能为 green 的状态。如果我们同样关闭了 Node2 ，我们的程序依然可以保持在不丢任何数据的情况下运行，因为Node3 为每一个分片都保留着一份副本。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果我们重新启动Node1 ，集群可以将缺失的副本分片再次进行分配，那么集群的状态又将恢复到原来的正常状态。如果Node1依然拥有着之前的分片，它将尝试去重用它们，只不过这时Node1节点上的分片不再是主分片而是副本分片了，如果期间有更改的数据只需要从主分片上复制修改的数据文件即可。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;小结:&lt;/p&gt;&lt;p&gt;1、将数据分片是为了提高可处理数据的容量和易于进行水平扩展，为分片做副本是为了提高集群的稳定性和提高并发量。&lt;br/&gt;2、副本是乘法，越多消耗越大，但也越保险。分片是除法，分片越多，单分片数据就越少也越分散。&lt;br/&gt;3、副本越多，集群的可用性就越高，但是由于每个分片都相当于一个Lucene的索引文件，会占用一定的文件句柄、内存及CPU，并且分片间的数据同步也会占用一定的网络带宽，所以索引的分片数和副本数也不是越多越好。&lt;/p&gt;&lt;/blockquote&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;映射（Mapping）&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;映射是用于定义ES对索引中字段的存储类型、分词方式和是否存储等信息，就像数据库中的 schema ，描述了文档可能具有的字段或属性、每个字段的数据类型。只不过关系型数据库建表时必须指定字段类型，而ES对于字段类型可以不指定然后动态对字段类型猜测，也可以在创建索引时具体指定字段的类型。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对字段类型根据数据格式自动识别的映射称之为 &lt;strong&gt;动态映射（Dynamic mapping）&lt;/strong&gt; ，我们创建索引时具体定义字段类型的映射称之为 &lt;strong&gt;静态映射&lt;/strong&gt; 或 &lt;strong&gt;显示映射（Explicit mapping）&lt;/strong&gt; 。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在讲解动态映射和静态映射的使用前，我们先来了解下ES中的数据有哪些字段类型？之后我们再讲解为什么我们创建索引时需要建立静态映射而不使用动态映射。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;ES（v6.8）中字段数据类型主要有以下几类：&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;类别&lt;/th&gt;&lt;th&gt;数据类型&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;核心类型&lt;/td&gt;&lt;td&gt;text, keywords, long, integer, short, double, data, boolean等等&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;复杂类型&lt;/td&gt;&lt;td&gt;Object, Nested&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;地理类型&lt;/td&gt;&lt;td&gt;geo_point, geo_shape&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;特殊类型&lt;/td&gt;&lt;td&gt;ip, completion, token_count, join等等&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;……&lt;/td&gt;&lt;td&gt;……&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;text 用于索引全文值的字段，例如电子邮件正文或产品说明。这些字段是被分词的，它们通过分词器传递 ，以在被索引之前将字符串转换为单个术语的列表。分析过程允许Elasticsearch搜索单个单词中每个完整的文本字段。文本字段不用于排序，很少用于聚合。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;keyword 用于索引结构化内容的字段，例如电子邮件地址，主机名，状态代码，邮政编码或标签。它们通常用于过滤，排序，和聚合。keyword字段只能按其确切值进行搜索。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过对字段类型的了解我们知道有些字段需要明确定义的，例如某个字段是text类型还是keword类型差别是很大的，时间字段也许我们需要指定它的时间格式，还有一些字段我们需要指定特定的分词器等等。如果采用动态映射是不能精确做到这些的，自动识别常常会与我们期望的有些差异。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以创建索引给的时候一个完整的格式应该是指定分片和副本数以及Mapping的定义，如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;PUT&lt;/span&gt; &lt;span&gt;my_index&lt;/span&gt; &lt;br/&gt;&lt;span&gt;{&lt;/span&gt;&lt;br/&gt;   &lt;span&gt;&quot;settings&quot;&lt;/span&gt; &lt;span&gt;:&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;&quot;number_of_shards&quot;&lt;/span&gt; &lt;span&gt;:&lt;/span&gt; &lt;span&gt;5&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;&quot;number_of_replicas&quot;&lt;/span&gt; &lt;span&gt;:&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;&lt;br/&gt;   &lt;span&gt;}&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;&quot;mappings&quot;:&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&quot;_doc&quot;:&lt;/span&gt; &lt;span&gt;{&lt;/span&gt; &lt;br/&gt;      &lt;span&gt;&quot;properties&quot;:&lt;/span&gt; &lt;span&gt;{&lt;/span&gt; &lt;br/&gt;        &lt;span&gt;&quot;title&quot;:&lt;/span&gt;    &lt;span&gt;{&lt;/span&gt; &lt;span&gt;&quot;type&quot;:&lt;/span&gt; &lt;span&gt;&quot;text&quot;&lt;/span&gt;  &lt;span&gt;},&lt;/span&gt; &lt;br/&gt;        &lt;span&gt;&quot;name&quot;:&lt;/span&gt;     &lt;span&gt;{&lt;/span&gt; &lt;span&gt;&quot;type&quot;:&lt;/span&gt; &lt;span&gt;&quot;text&quot;&lt;/span&gt;  &lt;span&gt;},&lt;/span&gt; &lt;br/&gt;        &lt;span&gt;&quot;age&quot;:&lt;/span&gt;      &lt;span&gt;{&lt;/span&gt; &lt;span&gt;&quot;type&quot;:&lt;/span&gt; &lt;span&gt;&quot;integer&quot;&lt;/span&gt; &lt;span&gt;},&lt;/span&gt;  &lt;br/&gt;        &lt;span&gt;&quot;created&quot;:&lt;/span&gt;  &lt;span&gt;{&lt;/span&gt;&lt;br/&gt;          &lt;span&gt;&quot;type&quot;:&lt;/span&gt;   &lt;span&gt;&quot;date&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;br/&gt;          &lt;span&gt;&quot;format&quot;:&lt;/span&gt; &lt;span&gt;&quot;strict_date_optional_time||epoch_millis&quot;&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;}&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;}&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;}&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;}&lt;/span&gt;&lt;br/&gt;&lt;span&gt;}&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;四、基本使用&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在决定使用 Elasticsearch 的时候首先要考虑的是版本问题，Elasticsearch （排除 0.x 和 1.x）目前有如下常用的稳定的主版本：2.x，5.x，6.x，7.x（current）。你可能会发现没有 3.x 和 4.x，ES 从 2.4.6 直接跳到了 5.0.0。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其实是为了ELK（ElasticSearch, logstash, kibana）技术栈的版本统一，免得给用户带来混乱。在 Elasticsearch 是 2.x （2.x 的最后一版 2.4.6 的发布时间是 July 25, 2017） 的情况下，kibana 已经是 4.x（Kibana 4.6.5 的发布时间是 July 25, 2017），那么在 kibana 的下一主版本肯定是 5.x 了，所以 Elasticsearch 直接将自己的主版本发布为 5.0.0 了。统一之后，我们选版本就不会犹豫困惑了，我们选定 elasticsearch 的版本后再选择相同版本的 kibana 就行了，不用担忧版本不兼容的问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Elasticsearch是使用Java构建，所以除了注意 ELK 技术的版本统一，我们在选择 Elasticsearch 的版本的时候还需要注意 JDK的版本。因为每个大版本所依赖的 JDK版本也不同，目前7.2版本已经可以支持 jdk11。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;安装使用&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1、下载和解压Elasticsearch，无需安装解压后即可用，解压后目录如下。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.2857142857142857&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/HmXWpTc2vib2o9cibf1MVlMZ5AvHopY9zWDJGpIh4Ia3B638IqrvicVfGiag1wgtxLH0cgfHRAW0cibGSibxAkGgxxFg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;763&quot;/&gt;&lt;figcaption&gt;ES Install&lt;/figcaption&gt;&lt;/figure&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;bin：二进制系统指令目录，包含启动命令和安装插件命令等。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;config：配置文件目录&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;data：数据存储目录&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;lib：依赖包目录&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;logs：日志文件目录&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;modules：模块库，例如x-pack的模块&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;plugins：插件目录&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2、安装目录下运行 &lt;code&gt;bin/elasticsearch&lt;/code&gt; 来启动 ES
3、默认在9200端口运行，请求 &lt;code&gt;curl http://localhost:9200/&lt;/code&gt; 或者浏览器输入 &lt;code&gt;http://localhost:9200&lt;/code&gt; ，得到一个 JSON 对象，其中包含当前节点、集群、版本等信息。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;{&lt;br/&gt;  &lt;span&gt;&quot;name&quot;&lt;/span&gt; : &lt;span&gt;&quot;U7fp3O9&quot;&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;&quot;cluster_name&quot;&lt;/span&gt; : &lt;span&gt;&quot;elasticsearch&quot;&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;&quot;cluster_uuid&quot;&lt;/span&gt; : &lt;span&gt;&quot;-Rj8jGQvRIelGd9ckicUOA&quot;&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;&quot;version&quot;&lt;/span&gt; : {&lt;br/&gt;    &lt;span&gt;&quot;number&quot;&lt;/span&gt; : &lt;span&gt;&quot;6.8.1&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;build_flavor&quot;&lt;/span&gt; : &lt;span&gt;&quot;default&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;build_type&quot;&lt;/span&gt; : &lt;span&gt;&quot;zip&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;build_hash&quot;&lt;/span&gt; : &lt;span&gt;&quot;1fad4e1&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;build_date&quot;&lt;/span&gt; : &lt;span&gt;&quot;2019-06-18T13:16:52.517138Z&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;build_snapshot&quot;&lt;/span&gt; : &lt;span&gt;false&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;lucene_version&quot;&lt;/span&gt; : &lt;span&gt;&quot;7.7.0&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;minimum_wire_compatibility_version&quot;&lt;/span&gt; : &lt;span&gt;&quot;5.6.0&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;minimum_index_compatibility_version&quot;&lt;/span&gt; : &lt;span&gt;&quot;5.0.0&quot;&lt;/span&gt;&lt;br/&gt;  },&lt;br/&gt;  &lt;span&gt;&quot;tagline&quot;&lt;/span&gt; : &lt;span&gt;&quot;You Know, for Search&quot;&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;集群健康状态&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;要检查群集运行状况，我们可以在 Kibana 控制台中运行以下命令 &lt;code&gt;GET /_cluster/health&lt;/code&gt; ，得到如下信息：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;{&lt;br/&gt;  &lt;span&gt;&quot;cluster_name&quot;&lt;/span&gt; : &lt;span&gt;&quot;wujiajian&quot;&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;&quot;status&quot;&lt;/span&gt; : &lt;span&gt;&quot;yellow&quot;&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;&quot;timed_out&quot;&lt;/span&gt; : &lt;span&gt;false&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;&quot;number_of_nodes&quot;&lt;/span&gt; : &lt;span&gt;1&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;&quot;number_of_data_nodes&quot;&lt;/span&gt; : &lt;span&gt;1&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;&quot;active_primary_shards&quot;&lt;/span&gt; : &lt;span&gt;9&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;&quot;active_shards&quot;&lt;/span&gt; : &lt;span&gt;9&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;&quot;relocating_shards&quot;&lt;/span&gt; : &lt;span&gt;0&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;&quot;initializing_shards&quot;&lt;/span&gt; : &lt;span&gt;0&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;&quot;unassigned_shards&quot;&lt;/span&gt; : &lt;span&gt;5&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;&quot;delayed_unassigned_shards&quot;&lt;/span&gt; : &lt;span&gt;0&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;&quot;number_of_pending_tasks&quot;&lt;/span&gt; : &lt;span&gt;0&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;&quot;number_of_in_flight_fetch&quot;&lt;/span&gt; : &lt;span&gt;0&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;&quot;task_max_waiting_in_queue_millis&quot;&lt;/span&gt; : &lt;span&gt;0&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;&quot;active_shards_percent_as_number&quot;&lt;/span&gt; : &lt;span&gt;64.28571428571429&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;集群状态通过 绿，黄，红 来标识&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;绿色&lt;/strong&gt;：集群健康完好，一切功能齐全正常，所有分片和副本都可以正常工作。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;黄色&lt;/strong&gt;：预警状态，所有主分片功能正常，但至少有一个副本是不能正常工作的。此时集群是可以正常工作的，但是高可用性在某种程度上会受影响。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;红色&lt;/strong&gt;：集群不可正常使用。某个或某些分片及其副本异常不可用，这时集群的查询操作还能执行，但是返回的结果会不准确。对于分配到这个分片的写入请求将会报错，最终会导致数据的丢失。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当集群状态为红色时，它将会继续从可用的分片提供搜索请求服务，但是你需要尽快修复那些未分配的分片。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;五、机制原理&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;ES的基本概念和基本操作介绍完了之后我们可能还有很多疑惑，它们内部是如何运行的？主分片和副本分片是如何同步的？创建索引的流程是什么样的？ES如何将索引数据分配到不同的分片上的？以及这些索引数据是如何存储的？为什么说ES是 &lt;strong&gt;近实时&lt;/strong&gt; 搜索引擎而文档的 CRUD (创建-读取-更新-删除) 操作是实时的？以及Elasticsearch 是怎样保证更新被持久化在断电时也不丢失数据？还有为什么删除文档不会立刻释放空间？带着这些疑问我们进入接下来的内容。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;写索引原理&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下图描述了3个节点的集群，共拥有12个分片，其中有4个主分片（S0、S1、S2、S3）和8个副本分片（R0、R1、R2、R3），每个主分片对应两个副本分片，节点1是主节点（Master节点）负责整个集群的状态。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4359903381642512&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/HmXWpTc2vib2o9cibf1MVlMZ5AvHopY9zWrhBKxUbicSvm3cA93Z6JAztUgJgBrDs4YlR7CTAuyz3rNxGsiaWGMyug/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;828&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;写索引时只能写在主分片上，然后同步到副本分片。这里有四个主分片，一条数据ES是根据什么规则写到特定分片上的呢？这条索引数据为什么被写到S0上而不写到S1或S2上？那条数据为什么又被写到S3上而不写到S0上了？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;首先这肯定不会是随机的，否则将来要获取文档的时候我们就不知道从何处寻找了。实际上，这个过程是根据下面这个公式决定的：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;shard = &lt;span&gt;hash&lt;/span&gt;(routing) % number_of_primary_shards&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;routing 是一个可变值，默认是文档的 &lt;code&gt;_id&lt;/code&gt; ，也可以设置成一个自定义的值。routing 通过 hash 函数生成一个数字，然后这个数字再除以 &lt;code&gt;number_of_primary_shards&lt;/code&gt; （主分片的数量）后得到余数 。这个在 0 到 number_of_primary_shards-1 之间的余数，就是我们所寻求的文档所在分片的位置。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这就解释了为什么我们要在创建索引的时候就确定好主分片的数量并且永远不会改变这个数量：因为如果数量变化了，那么所有之前路由的值都会无效，文档也再也找不到了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由于在ES集群中每个节点通过上面的计算公式都知道集群中的文档的存放位置，所以每个节点都有处理读写请求的能力。在一个写请求被发送到某个节点后，该节点即为前面说过的协调节点，协调节点会根据路由公式计算出需要写到哪个分片上，再将请求转发到该分片的主分片节点上。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;假如此时数据通过路由计算公式取余后得到的值是 &lt;code&gt;shard = hash(routing) % 4 = 0&lt;/code&gt;，则具体流程如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.49095295536791317&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/HmXWpTc2vib2o9cibf1MVlMZ5AvHopY9zWVcibgvIlK5sunram5Ziak0FiaiaT9t0uiaqclKfT0OPSzeTceVRiaib84QOgg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;829&quot;/&gt;&lt;/figure&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;客户端向ES1节点（协调节点）发送写请求，通过路由计算公式得到值为0，则当前数据应被写到主分片S0上。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;ES1节点将请求转发到S0主分片所在的节点ES3，ES3接受请求并写入到磁盘。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;并发将数据复制到两个副本分片R0上，其中通过乐观并发控制数据的冲突。一旦所有的副本分片都报告成功，则节点ES3将向协调节点报告成功，协调节点向客户端报告成功。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;存储原理&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上面介绍了在ES内部索引的写处理流程，这个流程是在ES的内存中执行的，数据被分配到特定的分片和副本上之后，最终是存储到磁盘上的，这样在断电的时候就不会丢失数据。具体的存储路径可在配置文件 &lt;code&gt;../config/elasticsearch.yml&lt;/code&gt; 中进行设置，默认存储在安装目录的data文件夹下。建议不要使用默认值，因为若ES进行了升级，则有可能导致数据全部丢失。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;path.data:&lt;/span&gt; &lt;span&gt;/path/to/data&lt;/span&gt;  &lt;span&gt;//索引数据&lt;/span&gt;&lt;br/&gt;&lt;span&gt;path.logs:&lt;/span&gt; &lt;span&gt;/path/to/logs&lt;/span&gt;  &lt;span&gt;//日志记录&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;分段存储&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;索引文档以段的形式存储在磁盘上，何为 &lt;strong&gt;段&lt;/strong&gt; ？索引文件被拆分为多个子文件，则每个子文件叫作 &lt;strong&gt;段&lt;/strong&gt; ， 每一个段本身都是一个倒排索引，并且段具有不变性，一旦索引的数据被写入硬盘，就不可再修改。在底层采用了分段的存储模式，使它在读写时几乎完全避免了锁的出现，大大提升了读写性能。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;段被写入到磁盘后会生成一个 &lt;strong&gt;提交点&lt;/strong&gt; ，提交点是一个用来记录所有提交后段信息的文件。一个段一旦拥有了提交点，就说明这个段只有读的权限，失去了写的权限。相反，当段在内存中时，就只有写的权限，而不具备读数据的权限，意味着不能被检索。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.24611708482676226&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/HmXWpTc2vib2o9cibf1MVlMZ5AvHopY9zWOIOJFSJNW6j1fAJS06D4OjIEYxOnjWWsL3hEDVDibM8UdhxRtfsvyOQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;837&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;段&lt;/strong&gt; 的概念提出主要是因为：在早期全文检索中为整个文档集合建立了一个很大的倒排索引，并将其写入磁盘中。如果索引有更新，就需要重新全量创建一个索引来替换原来的索引。这种方式在数据量很大时效率很低，并且由于创建一次索引的成本很高，所以对数据的更新不能过于频繁，也就不能保证时效性。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;索引文件分段存储并且不可修改，那么新增、更新和删除如何处理呢？&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;新增，新增很好处理，由于数据是新的，所以只需要对当前文档新增一个段就可以了。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;删除，由于不可修改，所以对于删除操作，不会把文档从旧的段中移除而是通过新增一个&lt;code&gt;.del&lt;/code&gt;文件，文件中会列出这些被删除文档的段信息。这个被标记删除的文档仍然可以被查询匹配到， 但它会在最终结果被返回前从结果集中移除。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;更新，不能修改旧的段来进行反映文档的更新，其实更新相当于是删除和新增这两个动作组成。会将旧的文档在&lt;code&gt;.del&lt;/code&gt;文件中标记删除，然后文档的新版本被索引到一个新的段中。可能两个版本的文档都会被一个查询匹配到，但被删除的那个旧版本文档在结果集返回前就会被移除。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;段被设定为不可修改具有一定的优势也有一定的缺点，优势主要表现在：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;不需要锁。如果你从来不更新索引，你就不需要担心多进程同时修改数据的问题。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;一旦索引被读入内核的文件系统缓存，便会留在哪里，由于其不变性。只要文件系统缓存中还有足够的空间，那么大部分读请求会直接请求内存，而不会命中磁盘。这提供了很大的性能提升。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;其它缓存(像filter缓存)，在索引的生命周期内始终有效。它们不需要在每次数据改变时被重建，因为数据不会变化。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;写入单个大的倒排索引允许数据被压缩，减少磁盘 I/O 和 需要被缓存到内存的索引的使用量。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;段的不变性的缺点如下：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;当对旧数据进行删除时，旧数据不会马上被删除，而是在.del文件中被标记为删除。而旧数据只能等到段更新时才能被移除，这样会造成大量的空间浪费。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;若有一条数据频繁的更新，每次更新都是新增新的标记旧的，则会有大量的空间浪费。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;每次新增数据时都需要新增一个段来存储数据。当段的数量太多时，对服务器的资源例如文件句柄的消耗会非常大。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;在查询的结果中包含所有的结果集，需要排除被标记删除的旧数据，这增加了查询的负担。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;延迟写策略&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;介绍完了存储的形式，那么索引是写入到磁盘的过程是这怎样的？是否是直接调 &lt;em&gt;fsync&lt;/em&gt; 物理性地写入磁盘？&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;答案是显而易见的，如果是直接写入到磁盘上，磁盘的I/O消耗上会严重影响性能，那么当写数据量大的时候会造成ES停顿卡死，查询也无法做到快速响应。如果真是这样ES也就不会称之为 &lt;strong&gt;近实时&lt;/strong&gt; 全文搜索引擎了。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为了提升写的性能，ES并没有每新增一条数据就增加一个段到磁盘上，而是采用 &lt;strong&gt;延迟写&lt;/strong&gt; 的策略。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;每当有新增的数据时，就将其先写入到内存中，在内存和磁盘之间是文件系统缓存，当达到默认的时间（1秒钟）或者内存的数据达到一定量时，会触发一次刷新（Refresh），将内存中的数据生成到一个新的段上并缓存到文件缓存系统 上，稍后再被刷新到磁盘中并生成提交点。&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里的内存使用的是ES的JVM内存，而文件缓存系统使用的是操作系统的内存。新的数据会继续的被写入内存，但内存中的数据并不是以段的形式存储的，因此不能提供检索功能。由内存刷新到文件缓存系统的时候会生成了新的段，并将段打开以供搜索使用，而不需要等到被刷新到磁盘。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在 Elasticsearch 中，写入和打开一个新段的轻量的过程叫做 refresh （即内存刷新到文件缓存系统）。默认情况下每个分片会每秒自动刷新一次。这就是为什么我们说 Elasticsearch 是 &lt;strong&gt;近实时搜索&lt;/strong&gt; ，因为文档的变化并不是立即对搜索可见，但会在一秒之内变为可见。我们也可以手动触发 refresh，&lt;code&gt;POST /_refresh&lt;/code&gt; 刷新所有索引，&lt;code&gt;POST /nba/_refresh&lt;/code&gt; 刷新指定的索引。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Tips：尽管刷新是比提交轻量很多的操作，它还是会有性能开销。当写测试的时候， 手动刷新很有用，但是不要在生产&amp;gt; 环境下每次索引一个文档都去手动刷新。而且并不是所有的情况都需要每秒刷新。可能你正在使用 Elasticsearch 索引大量的日志文件， 你可能想优化索引速度而不是&amp;gt; 近实时搜索， 这时可以在创建索引时在 &lt;code&gt;settings&lt;/code&gt; 中通过调大 &lt;code&gt;refresh_interval = &quot;30s&quot;&lt;/code&gt; 的值 ， 降低每个索引的刷新频率，设值时需要注意后面带上时间单位，否则默认是毫秒。当 &lt;code&gt;refresh_interval = -1&lt;/code&gt; 时表示关闭索引的自动刷新。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;虽然通过延时写的策略可以减少数据往磁盘上写的次数提升了整体的写入能力，但是我们知道文件缓存系统也是内存空间，属于操作系统的内存，只要是内存都存在断电或异常情况下丢失数据的危险。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为了避免丢失数据，Elasticsearch添加了 &lt;strong&gt;事务日志（Translog）&lt;/strong&gt; ，事务日志记录了所有还没有持久化到磁盘的数据。添加了事务日志后整个写索引的流程如下图所示。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.9651442307692307&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/HmXWpTc2vib2o9cibf1MVlMZ5AvHopY9zWZOoMOxB1DSTfWv8dJb6rpZefpicIuWln0AkI1vWj6gSRpPvsNpxUuZg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;832&quot;/&gt;&lt;/figure&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;一个新文档被索引之后，先被写入到内存中，但是为了防止数据的丢失，会追加一份数据到事务日志中。不断有新的文档被写入到内存，同时也都会记录到事务日志中。这时新数据还不能被检索和查询。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;当达到默认的刷新时间或内存中的数据达到一定量后，会触发一次 refresh，将内存中的数据以一个新段形式刷新到文件缓存系统中并清空内存。这时虽然新段未被提交到磁盘，但是可以提供文档的检索功能且不能被修改。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;随着新文档索引不断被写入，当日志数据大小超过512M或者时间超过30分钟时，会触发一次 flush。内存中的数据被写入到一个新段同时被写入到文件缓存系统，文件系统缓存中数据通过 fsync 刷新到磁盘中，生成提交点，日志文件被删除，创建一个空的新日志。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过这种方式当断电或需要重启时，ES不仅要根据提交点去加载已经持久化过的段，还需要工具Translog里的记录，把未持久化的数据重新持久化到磁盘上，避免了数据丢失的可能。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;段合并&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由于自动刷新流程每秒会创建一个新的段 ，这样会导致短时间内的段数量暴增。而段数目太多会带来较大的麻烦。每一个段都会消耗文件句柄、内存和cpu运行周期。更重要的是，每个搜索请求都必须轮流检查每个段然后合并查询结果，所以段越多，搜索也就越慢。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Elasticsearch通过在后台定期进行段合并来解决这个问题。小的段被合并到大的段，然后这些大的段再被合并到更大的段。段合并的时候会将那些旧的已删除文档从文件系统中清除。被删除的文档不会被拷贝到新的大段中。合并的过程中不会中断索引和搜索。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.3786057692307692&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/HmXWpTc2vib2o9cibf1MVlMZ5AvHopY9zWbSfFu4KPcZSzI3A9QjWROJULHtSHlialCkyeyZ1Hw3K0rrZZ8zRiam5Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;832&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;段合并在进行索引和搜索时会自动进行，合并进程选择一小部分大小相似的段，并且在后台将它们合并到更大的段中，这些段既可以是未提交的也可以是已提交的。合并结束后老的段会被删除，新的段被 flush 到磁盘，同时写入一个包含新段（已排除旧的被合并的段）的新提交点，新的段被打开可以用来搜索。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;段合并的计算量庞大， 而且还要吃掉大量磁盘 I/O，段合并会拖累写入速率，如果任其发展会影响搜索性能。Elasticsearch在默认情况下会对合并流程进行资源限制，所以搜索仍然有足够的资源很好地执行。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;六、性能优化&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;存储设备&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;磁盘在现代服务器上通常都是瓶颈。Elasticsearch 重度使用磁盘，你的磁盘能处理的吞吐量越大，你的节点就越稳定。这里有一些优化磁盘 I/O 的技巧：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;使用 SSD。就像其他地方提过的， 他们比机械磁盘优秀多了。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;使用 RAID 0。条带化 RAID 会提高磁盘 I/O，代价显然就是当一块硬盘故障时整个就故障了。不要使用镜像或者奇偶校验 RAID 因为副本已经提供了这个功能。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;另外，使用多块硬盘，并允许 Elasticsearch 通过多个 path.data 目录配置把数据条带化分配到它们上面。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;不要使用远程挂载的存储，比如 NFS 或者 SMB/CIFS。这个引入的延迟对性能来说完全是背道而驰的。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果你用的是 EC2，当心 EBS。即便是基于 SSD 的 EBS，通常也比本地实例的存储要慢。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;内部索引优化&lt;span/&gt;&lt;/h3&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5151148730350665&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/HmXWpTc2vib2o9cibf1MVlMZ5AvHopY9zWQDnDpnzOTl92ZW2Q1uTUuIQq4uWB7eTVX6icnibqwZVTiaJXva1yA4KLQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;827&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Elasticsearch为了能快速找到某个term，先将所有的term排个序，然后根据二分法查找term，时间复杂度为logN，就像通过字典查找一样，这就是 &lt;strong&gt;Term Dictionary&lt;/strong&gt; 。现在再看起来，似乎和传统数据库通过B-Tree的方式类似。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但是如果term太多，term dictionary也会很大，放内存不现实，于是有了 &lt;strong&gt;Term Index&lt;/strong&gt; ，就像字典里的索引页一样，A开头的有哪些term，分别在哪页，可以理解term index是一颗树。这棵树不会包含所有的term，它包含的是term的一些前缀。通过term index可以快速地定位到term dictionary的某个offset，然后从这个位置再往后顺序查找。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在内存中用FST方式压缩term index，FST以字节的方式存储所有的term，这种压缩方式可以有效的缩减存储空间，使得term index足以放进内存，但这种方式也会导致查找时需要更多的CPU资源。演示地址：Build your own FST&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于存储在磁盘上的倒排表同样也采用了压缩技术减少存储所占用的空间，更多可以阅读 Frame of Reference and Roaring Bitmaps。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;调整配置参数&lt;span/&gt;&lt;/h3&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;给每个文档指定有序的具有压缩良好的序列模式ID，避免随机的UUID-4 这样的 ID，这样的ID压缩比很低，会明显拖慢 Lucene。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;对于那些不需要聚合和排序的索引字段禁用Doc values。Doc Values是有序的基于document =&amp;gt; field value的映射列表；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;不需要做模糊检索的字段使用 keyword类型代替 text 类型，这样可以避免在建立索引前对这些文本进行分词。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;如果你的搜索结果不需要近实时的准确度，考虑把每个索引的 index.refresh_interval 改到 30s 。如果你是在做大批量导入，导入期间你可以通过设置这个值为 -1 关掉刷新，还可以通过设置 index.number_of_replicas: 0关闭副本。别忘记在完工的时候重新开启它。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;避免深度分页查询建议使用Scroll进行分页查询。普通分页查询时，会创建一个from + size的空优先队列，每个分片会返回from + size 条数据，默认只包含文档id和得分score给协调节点，如果有n个分片，则协调节点再对（from + size）× n 条数据进行二次排序，然后选择需要被取回的文档。当from很大时，排序过程会变得很沉重占用CPU资源严重。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;减少映射字段，只提供需要检索，聚合或排序的字段。其他字段可存在其他存储设备上，例如Hbase，在ES中得到结果后再去Hbase查询这些字段。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;创建索引和查询时指定路由routing值，这样可以精确到具体的分片查询，提升查询效率。路由的选择需要注意数据的分布均衡。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;JVM调优&lt;span/&gt;&lt;/h3&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;确保堆内存最小值（ Xms ）与最大值（ Xmx ）的大小是相同的，防止程序在运行时改变堆内存大小。&lt;br/&gt;Elasticsearch 默认安装后设置的堆内存是 1 GB。可通过 &lt;code&gt;../config/jvm.option&lt;/code&gt; 文件进行配置，但是最好不要超过物理内存的50%和超过32GB。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;GC 默认采用CMS的方式，并发但是有STW的问题，可以考虑使用G1收集器。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;ES非常依赖文件系统缓存（Filesystem Cache），快速搜索。一般来说，应该至少确保物理上有一半的可用内存分配到文件系统缓存。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>