<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>fb0238a46038bf967d2f4ab75d3f2bce</guid>
<title>解决方案｜电力行业应如何应对数字化转型危机</title>
<link>https://toutiao.io/k/lih4aoz</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;preview&quot;&gt;&lt;h1&gt;背景与挑战&lt;/h1&gt;

&lt;p&gt;随着电网公司数字化转型工作的推进和云平台、大数据、物联网、移动化、智能化等新技术的应用，推进高效一体化网络排障定位与深入推进人工智能及大数据技术等在电网信息系统运维中的应用，以及运用前沿科技技术，提高生产管理效益，提升数字电网建设过程中数据的价值已成为电网公司数字化转型工作的必然要求。&lt;/p&gt;

&lt;p&gt;与此同时，伴随着电力行业数字化转型的不断发展，相关企业业务系统的不断更新与设备数量的大幅增加，由此引发了电力行业以下痛点：&lt;/p&gt;



&lt;p&gt;基于以上背景及痛点，如何在不植入探针或 Agent 的情况下监控业务链路运行情况，业务管理人员如何统计分析关键业务指标数据，运维人员如何准确定位故障、排查故障对电力行业相关企业来说均是极大的挑战。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4dfc875fd3ca411e9333f545a57c053d%7Etplv-k3u1fbpfcp-zoom-1.image&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;h1&gt;场景需求分析&lt;/h1&gt;

&lt;p&gt;基于上述背景及挑战分析，电力行业具体包含以下运维场景需求：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;非侵入式监控：通过非侵入式手段或工具实现对业务拓扑和业务指标数据的监控；&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;运维数据分析：统一收集、处理、分析业务系统运维数据、日志数据和关键指标数据；&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;统一处理展示：对业务系统的物理链路、逻辑拓扑以及指标数据进行集中监控展示；&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;故障定位分析：统一告警信息收集、对故障进行关联分析，准确定位故障问题和根因，提升故障处理效率。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;解决方案&lt;/h1&gt;

&lt;h2&gt;整体产品技术架构&lt;/h2&gt;

&lt;p&gt;下图为整体产品技术架构，包含底层立体化监控与管理工具集、中层数字化运维数据中台、顶层数据价值与管理产品集。底层立体化监控与管理工具集包含基础设施监控（DOIM）、业务性能监控（DBPC）以及其他开源及非开源监控工具与日志分析（DOLA）；中层数字化运维数据中台包含数字化运维指标管理体系（DOMM）、面向服务的配置管理（CMDB）、智能分析（DOIA）、数字化运维数据库 (DODB )以及采控平台（DOCC)；顶层数据价值与管理产品集包含数字化运维监控中心（DOMC）、数字化运维事件管理（DOEM）数字化运维工作台、报告报表以及数字化运营服务管理。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1faec304094949a9b30d6696b5a854bf%7Etplv-k3u1fbpfcp-zoom-1.image&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;h2&gt;产品列表及功能&lt;/h2&gt;

&lt;h3&gt;业务性能监控工具&lt;/h3&gt;

&lt;p&gt;下图为业务性能监控工具监控网络流量镜像的具体流程。通过抓取网络镜像流量的方式对业务数据进行分析。业务发起后，业务流量经过多层链路一体化展示，直观明了地展示业务在哪个层级消耗的时间情况。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/09b86fba2e484fd08708fce5cdb16263%7Etplv-k3u1fbpfcp-zoom-1.image&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;h3&gt;数字化运维数据库&lt;/h3&gt;

&lt;p&gt;数字化运维数据库能够实时高效的接入用户环境的多种数据源，收集用户环境中的IT和业务数据，进行统一的管理和存储，通过便捷和强大的建模分析工具，将数据进行关联分析、业务建模，结果实时输出给可视化以及其他应用。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;数据处理：通过数据处理pipeline对流式数据进行实时处理，内置多种数据处理组件以及数据处理模版，开箱即用，全方面满足数据预处理的要求。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;数据存储：高性能的分布式列式存储数据库，大大减少数据对磁盘空间的占用，在相同容量下，能够对更大范围的数据进行实时查询。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;数据计算：丰富的聚合计算函数和强大的计算能力，充分利于 CPU 资源面。聚合查询的平均响应时间可在3秒以内，一些简单查询可以在毫秒级。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f97f05d7269e42c7a42ff5c93f03754d%7Etplv-k3u1fbpfcp-zoom-1.image&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;h3&gt;数字化运维算法平台&lt;/h3&gt;

&lt;p&gt;数字化运维算法平台包含指标异常检测、指标预测、日志模式识别、根因分析与推荐、多指标分析、告警降噪等6大 AIOps 场景的20余个智能算法。提供了丰富的算法库，开箱即用，能够支撑丰富的运维场景。&lt;/p&gt;



&lt;p&gt;&lt;img src=&quot;https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/33c53011e61b47f0b8a73f433bff409b%7Etplv-k3u1fbpfcp-zoom-1.image&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;h3&gt;数字化运营指标体系管理平台&lt;/h3&gt;

&lt;p&gt;数字化运营指标体系管理平台作为上层应用侧产品监控中心重要的数据来源之一，帮助其通过整合业务与IT资源、指标、健康度、告警事件，围绕业务价值构建多维度的运维监控体系，以实现能够快速发现、分析并定位故障，达到全方位、立体化监控的能力。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;静态阈值&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;手动设定数据区间梯度&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;根据数值坐落区间获取指标健康度&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;动态阈值&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;选定算法进行指标异常检测&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;历史数据训练获得算法模型&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;算法结果判定指标健康度&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;健康度设置&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;生死线指标严重异常时，可一票决定健康度。健康度得分是表征对象健康状态的绝佳指示器。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;选择参与计算的指标元素&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;根据业务情况分配元素的权重&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;生成健康素计算公式&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;数字化运维监控中心&lt;/h3&gt;

&lt;p&gt;数字化运维监控中心是一款全方位、立体化的实时监控产品，面向企业业务价值与 IT 运维的顶层规划，对业务数据以及基础设施、中间件、服务、应用、调用链等 IT 资源进行统一监控，并通过构建业务关联关系，结合指标、日志、告警等，帮助快速发现、分析并定位故障。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/353d1c7117da406c9a16e8da6cd33a39%7Etplv-k3u1fbpfcp-zoom-1.image&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;h3&gt;数字化运维事件管理&lt;/h3&gt;

&lt;p&gt;数字化运维事件管理基于大数据技术和机器学习算法，统一接入与处理来自于各种监控系统的告警消息与数据指标，支持告警事件的过滤、通知、响应、处置、定级、跟踪以及多维分析，最终实现面向告警事件全生命周期的闭环管控。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2e4cd1ef3827452a88f1e33fa3261519%7Etplv-k3u1fbpfcp-zoom-1.image&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;h2&gt;整体方案流程&lt;/h2&gt;

&lt;p&gt;在数据采集侧，通过业务性能监控工具抓取旁路流量，获取业务系统监控数据，同时通过业务流程梳理，建立业务链路拓扑，实现基于业务实际链路的监控分析，监控数据通过kafka传递至运维数据库。&lt;/p&gt;

&lt;p&gt;运维数据库接收到数据后，对数据进行处理（包括字段提取、拆分、合并、格式转换等）并基于场景需求将不同数据存储到不同的数据库，同时通过查询引擎为应用场景提供数据支撑。&lt;/p&gt;

&lt;p&gt;最后，在监控中心对业务系统拓扑和数据指标进行统一展示，基于规则进行健康度分析和事件告警，通过智能运维算法和大数据分析，实现指标数据的趋势预测和对事件告警的根因分析。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/60e4da39e0134eaaafaf3a3e8692ec71%7Etplv-k3u1fbpfcp-zoom-1.image&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;h1&gt;某电网企业案例分享&lt;/h1&gt;

&lt;h2&gt;需求分析&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;希望通过不植入代码的方式来监控业务层的指标数据，形成业务链路拓扑图，跟踪业务数据流向，并实时展示关键数据；&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;通过指标历史数据，动态提供指标预测基线、预测数值范围；&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;针对问题，能够进行根因分析，快速进行问题定位；&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对接当前使用的告警系统，分析出数据结果后，通过当前正在使用的的告警系统去触发事件。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;云智慧解决方案&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;通过DBPC工具通过旁路镜像流量的方式获取实时业务数据，以非侵入的方式实现了对业务的监控；&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;建立运维大数据平台，实现对接收的数据进行统一存储和处理，并提取关键指标数据；&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;利用智能算法，对历史数据进行学习，实现了对未来一段时间内的数据趋势预测；&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;通过告警事件管理，对接客户现有告警系统，实现了告警信息的压缩、清洗，并且与现有的工单系统实现关联。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;FlyFish开源福利&lt;/h1&gt;

&lt;p&gt;云智慧已开源数据可视化编排平台 FlyFish 。通过配置数据模型为用户提供上百种可视化图形组件，零编码即可实现符合自己业务需求的炫酷可视化大屏。 同时，飞鱼也提供了灵活的拓展能力，支持组件开发、自定义函数与全局事件等配置， 面向复杂需求场景能够保证高效开发与交付。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;点击下方地址链接，欢迎大家给&lt;/strong&gt; &lt;strong&gt;FlyFish&lt;/strong&gt; &lt;strong&gt;点赞送 Star。参与组件开发，更有万元现金等你来拿。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;GitHub 地址： &lt;a href=&quot;https://github.com/CloudWise-OpenSource/FlyFish&quot;&gt;https://github.com/CloudWise-OpenSource/FlyFish&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Gitee 地址：&lt;a href=&quot;https://gitee.com/CloudWise/fly-fish&quot;&gt;https://gitee.com/CloudWise/fly-fish&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;微信扫描识别下方二维码，备注【飞鱼】加入AIOps社区飞鱼开发者交流群，与 FlyFish 项目 PMC 面对面交流～&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1470684025d84f4ea11679754c22635b%7Etplv-k3u1fbpfcp-zoom-1.image&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>cee45007628baed4ffa845b6f47eac2f</guid>
<title>基于腾讯云自建高可用DNS方案实践</title>
<link>https://toutiao.io/k/zo333vd</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                                       &quot; id=&quot;js_content&quot;&gt;&lt;p data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;578&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;126&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.2159406858202039&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/VY8SELNGe940MSFL1oCgmdY94xonPZxOOKDTqKJu4UF0KtibdVwrBy3mLcmBkc4mibPxtGaoNArdfIpqh4hZya6w/640?wx_fmt=gif&quot; data-type=&quot;jpeg&quot; data-w=&quot;1079&quot;/&gt;&lt;/p&gt;&lt;p data-lines=&quot;2&quot; data-type=&quot;p&quot; data-sign=&quot;00e2fb542a356115797177a270550db12&quot;&gt;&lt;/p&gt;&lt;p data-lines=&quot;2&quot; data-type=&quot;p&quot; data-sign=&quot;00e2fb542a356115797177a270550db12&quot;&gt;&lt;span&gt;导语 | &lt;/span&gt;&lt;span&gt;本文推选自腾讯云开发者社区-【技思广益 · 腾讯技术人原创集】专栏。该专栏是腾讯云开发者社区为腾讯技术人与广泛开发者打造的分享交流窗口。栏目邀约腾讯技术人分享原创的技术积淀，与广泛开发者互启迪共成长。本文作者是腾讯云开发者社区的作者罗俊。&lt;/span&gt;&lt;/p&gt;&lt;p data-lines=&quot;2&quot; data-type=&quot;p&quot; data-sign=&quot;00e2fb542a356115797177a270550db12&quot;&gt;&lt;/p&gt;&lt;p data-lines=&quot;2&quot; data-type=&quot;p&quot; data-sign=&quot;00e2fb542a356115797177a270550db12&quot;&gt;&lt;span&gt;本文主要介绍如何在腾讯云平台下自建高可用DNS环境，来满足企业在云上的内外网域名解析的需求。这里主要介绍两种方案的实现方式，方案一: 基于Centos 系统自带的Bind软件构建智能解析方案；方案二：基于CoreDNS与ETCD来构建CoreDNS高可用方案，在阐述两个方案实现的前，咱们一起回顾下DNS的基础概念及原理。&lt;/span&gt;&lt;/p&gt;&lt;p data-lines=&quot;2&quot; data-type=&quot;p&quot; data-sign=&quot;00e2fb542a356115797177a270550db12&quot;&gt;&lt;/p&gt;&lt;p data-lines=&quot;2&quot; data-type=&quot;p&quot; data-sign=&quot;00e2fb542a356115797177a270550db12&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.08125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/VY8SELNGe940MSFL1oCgmdY94xonPZxOGOT8teAWn7esqRMLtWdwUj8nA9Ij9rw3IJHQmlHv8bca5CLWXEBrDw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;h2 name=&quot;1.1.DNS-%E6%A6%82%E8%BF%B0&quot;&gt;&lt;span&gt;DNS基础概念&lt;/span&gt;&lt;/h2&gt;&lt;p data-lines=&quot;2&quot; data-type=&quot;p&quot; data-sign=&quot;00e2fb542a356115797177a270550db12&quot;&gt;&lt;/p&gt;&lt;h2 name=&quot;1.1.DNS-%E6%A6%82%E8%BF%B0&quot;&gt;&lt;span&gt;（一）DNS概述&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;DNS是一个层次化的分布式数据库,其全称为域名系统（Domain Name System），它存储用于互联网主机名与IP地址相互映射的信息，及其它互联网所用到的数据。DNS系统是由柏克大学发展的BIND软件（Berkeley Internet Name Domain）所提供。现目前的BIND的为9.x，现网上大多数都简称叫BIND9 ；BIND9 软件分发包括了一个名字服务器，named，和量和解析库，liblwres和libbind。如果想了解更多或下载更高的版本，可到此站点去查询与下载：&lt;/span&gt;&lt;span&gt;http://www.isc.org/software/bind&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;BIND与DNS区别：DNS是一种因特网的通信协议名称，BIND这是提供这个DNS服务的软件；在TCP/IP网络中有非常重要的地位，能够提供域名与IP地址的解析服务。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 name=&quot;1.2.DNS%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86&quot;&gt;&lt;span&gt;（二）DNS工作原理&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;域名系统DNS是类似于一个树状数据结构，树中的每个节点实质都是负责某个特定区域的一台服务器，通过这些节点，对整个域名空间进行划分，成为一个层次结构，这种结构类似与UNIX文件系统的层次结构，根的名字“.”来表示，并称之为根域名（root domain）根域的下一级是顶级域名，顶级域名又分为两种划分方法，地理域和通用域，地理域则是为了世界上每个国家或地区等设置的，如中国是cn，日本jp，美国us，台湾tw。等等。通用域则是通过不同的机构类别设置的顶级域名，如org、edu 等等。如下图：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.44296875&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/VY8SELNGe97cdZNKx08iamBOoaqibvjSZM0PB4xPLnEMIhEbmmYOTwypzXicZyj0ibibNfyKUpJ4ds9QAF8xIMx1ibjg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 name=&quot;1.3.%E5%B8%B8%E8%A7%81%E7%9A%84%E9%A1%B6%E7%BA%A7%E5%9F%9F%E5%90%8D%E5%88%97%E8%A1%A8&quot;&gt;&lt;span&gt;（三）常见的顶级域名列表&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.6765625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/VY8SELNGe97cdZNKx08iamBOoaqibvjSZMtgicYTx4dna7RvueKucwokX4dALZj39sLFlJscH08K9WGoGc4ib4eFAQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;随着网络快速增长，后来就出现了，以国家或地区区分的Domain name。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 name=&quot;1.4.%E5%9F%9F%E5%90%8D%E6%9C%8D%E5%8A%A1%E7%9A%84%E8%A7%A3%E6%9E%90%E5%8E%9F%E7%90%86%E5%92%8C%E8%BF%87%E7%A8%8B&quot;&gt;&lt;span&gt;（四）域名服务的解析原理和过程&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;DNS解析示例：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.48515625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/VY8SELNGe97cdZNKx08iamBOoaqibvjSZMdkt7tmY6uCicME7jp7DHZJWAO0b4Sibu9Vhmr3fuicBfJ1JMGhgKjOj9Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 name=&quot;1.5.DNS%E6%9C%8D%E5%8A%A1%E7%9A%84%E7%9B%B8%E5%85%B3%E8%AE%B0%E5%BD%95%E8%AF%B4%E6%98%8E&quot;&gt;&lt;span&gt;（五）DNS服务的相关记录说明&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h1 name=&quot;2.DNS%E9%AB%98%E5%8F%AF%E7%94%A8%E6%99%BA%E8%83%BD%E8%A7%A3%E6%9E%90%E6%96%B9%E6%A1%88&quot;&gt;&lt;br/&gt;&lt;/h1&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.08125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/VY8SELNGe940MSFL1oCgmdY94xonPZxOFhVeibJGiaFe9lEkYiboVgs4JIv0Ahl4Kia5GYpKlgY2D3pEPAuo0mgiakA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;DNS高可用智能解析方案&lt;/span&gt;&lt;/p&gt;&lt;p data-lines=&quot;2&quot; data-type=&quot;p&quot; data-sign=&quot;863483aff37d9ca8ce1dcd32f1aab1c42&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;本DNS高可用方案基于基于CVM云服务器，在VPC内网的进行DNS服务器的构建，可实现内网域名解析的需求。同时本方案设计结合了腾讯云CLB产品提供了负载均衡能力，也可通过多个CLB实现对接多台RS接节点，分担前端解析压力，同时支持多可用区部署。&lt;/span&gt;&lt;/p&gt;&lt;h2 name=&quot;2.1.%E6%96%B9%E6%A1%88%E7%89%B9%E7%82%B9&quot;&gt;&lt;br/&gt;&lt;/h2&gt;&lt;h2 name=&quot;2.1.%E6%96%B9%E6%A1%88%E7%89%B9%E7%82%B9&quot;&gt;&lt;span&gt;（一）方案特点&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.5203125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/VY8SELNGe97cdZNKx08iamBOoaqibvjSZMPiauciawU4mGQgibqcoFH3U2xakHAbRRSPOz7RO59bJy8VVHsRYywFcAA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 name=&quot;2.2.%E6%96%B9%E6%A1%88%E5%AE%9E%E7%8E%B0%E5%8A%9F%E8%83%BD&quot;&gt;&lt;span&gt;（二）方案实现功能&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 name=&quot;2.3.%E8%A7%A3%E6%9E%90%E6%B5%81%E7%A8%8B%E8%B7%AF%E5%BE%84&quot;&gt;&lt;span&gt;（三）解析流程路径&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;1)客户端访问企业内部域名&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2)客户端访问腾讯云内网域名&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;3)客户端访问外网域名&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;注意&lt;/span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;详情参考腾讯云官网文档《关于安全组53端口配置的公告》&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://cloud.tencent.com/document/product/213/35533&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.08125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/VY8SELNGe940MSFL1oCgmdY94xonPZxOe5ibHLNAuhEJQPJTEOKv0QzN9FtYmChv8nRibZGEUkJo7Auicjhm4tAAw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;DNS高可用智能解析方案实现&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;本次方案采用了两台节点进行此方案的实践。若在云上的生成环境需结合客户业务的详细需求进行节点数量，CLB数量，不同的地域调整即可。&lt;/span&gt;&lt;/p&gt;&lt;h2 name=&quot;3.1.%E8%AE%BE%E7%BD%AE%E4%B8%BB%E6%9C%BA%E5%90%8D&quot;&gt;&lt;br/&gt;&lt;/h2&gt;&lt;h2 name=&quot;3.1.%E8%AE%BE%E7%BD%AE%E4%B8%BB%E6%9C%BA%E5%90%8D&quot;&gt;&lt;span&gt;（一）设置主机名&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;css&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__selector-attr&quot;&gt;[root@VM-2-15-centos ~]&lt;/span&gt; &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;hostnamectl&lt;/span&gt; &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;set-hostname&lt;/span&gt; &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;node4&lt;/span&gt;&lt;span class=&quot;code-snippet__selector-class&quot;&gt;.rocky&lt;/span&gt;&lt;span class=&quot;code-snippet__selector-class&quot;&gt;.com&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__selector-attr&quot;&gt;[root@VM-2-16-centos ~]&lt;/span&gt; &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;hostnamectl&lt;/span&gt; &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;set-hostname&lt;/span&gt; &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;node5&lt;/span&gt;&lt;span class=&quot;code-snippet__selector-class&quot;&gt;.rocky&lt;/span&gt;&lt;span class=&quot;code-snippet__selector-class&quot;&gt;.com&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 name=&quot;3.2.%E9%85%8D%E7%BD%AE/etc/hosts&quot;&gt;&lt;span&gt;（二）配置/etc/hosts&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cs&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;[&lt;span class=&quot;code-snippet__meta&quot;&gt;root@node4 ~&lt;/span&gt;]&lt;span class=&quot;code-snippet__meta&quot;&gt;# cat /etc/hosts&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;127.0&lt;/span&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;.0&lt;/span&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;.1&lt;/span&gt; VM&lt;span class=&quot;code-snippet__number&quot;&gt;-6&lt;/span&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;-15&lt;/span&gt;-centos VM&lt;span class=&quot;code-snippet__number&quot;&gt;-6&lt;/span&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;-15&lt;/span&gt;-centos&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;127.0&lt;/span&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;.0&lt;/span&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;.1&lt;/span&gt; localhost.localdomain localhost&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;127.0&lt;/span&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;.0&lt;/span&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;.1&lt;/span&gt; localhost4.localdomain4 localhost4&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;10.0&lt;/span&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;.6&lt;/span&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;.15&lt;/span&gt; node4 node4.rocky.com&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;10.0&lt;/span&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;.6&lt;/span&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;.16&lt;/span&gt; node5 node5.rocky.com&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 name=&quot;3.3.%E5%AE%89%E8%A3%85DNS%E8%BD%AF%E4%BB%B6&quot;&gt;&lt;span&gt;（三）安装DNS软件&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cs&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;[&lt;span class=&quot;code-snippet__meta&quot;&gt;root@node4 ~&lt;/span&gt;]&lt;span class=&quot;code-snippet__meta&quot;&gt;# yum -y install bind&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;[&lt;span class=&quot;code-snippet__meta&quot;&gt;root@node5 ~&lt;/span&gt;]&lt;span class=&quot;code-snippet__meta&quot;&gt;# yum -y install bind&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 name=&quot;3.4.DNS%E4%B8%BB%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6&quot;&gt;&lt;span&gt;（四）DNS主配置文件&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cs&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;[&lt;span class=&quot;code-snippet__meta&quot;&gt;root@node4 ~&lt;/span&gt;]&lt;span class=&quot;code-snippet__meta&quot;&gt;# cat /etc/named.conf&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;acl &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;trusted-recursion&quot;&lt;/span&gt; { &lt;span class=&quot;code-snippet__meta&quot;&gt;# 设置acl&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; localhost;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;span class=&quot;code-snippet__number&quot;&gt;10.0&lt;/span&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;.0&lt;/span&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;.0&lt;/span&gt;/&lt;span class=&quot;code-snippet__number&quot;&gt;16&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;options {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; listen-&lt;span class=&quot;code-snippet__keyword&quot;&gt;on&lt;/span&gt; port &lt;span class=&quot;code-snippet__number&quot;&gt;53&lt;/span&gt; { any; }; &lt;span class=&quot;code-snippet__meta&quot;&gt;#设置监听端口，也可写具体的网段&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; listen-&lt;span class=&quot;code-snippet__keyword&quot;&gt;on&lt;/span&gt;-v6 port &lt;span class=&quot;code-snippet__number&quot;&gt;53&lt;/span&gt; { any; };&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; directory &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;/var/named&quot;&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; dump-file &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;/var/named/data/cache_dump.db&quot;&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; statistics-file &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;/var/named/data/named_stats.txt&quot;&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; memstatistics-file &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;/var/named/data/named_mem_stats.txt&quot;&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; recursing-file &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;/var/named/data/named.recursing&quot;&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; secroots-file &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;/var/named/data/named.secroots&quot;&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; allow-query { any; }; &lt;span class=&quot;code-snippet__meta&quot;&gt;#开放查询 &lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; allow-recursion { trusted-recursion; }; &lt;span class=&quot;code-snippet__meta&quot;&gt;#指定允许哪些主机可以从缓存中获取答案。&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; allow-query-cache { trusted-recursion; }; &lt;span class=&quot;code-snippet__meta&quot;&gt;# 指定允许那些主机可以通过本服务器进行递归查询。&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; recursion yes;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; dnssec-enable no;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; dnssec-validation no; &lt;span class=&quot;code-snippet__meta&quot;&gt;# 关闭dnssec安全验证&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;span class=&quot;code-snippet__meta&quot;&gt;#bindkeys-file &quot;/etc/named.root.key&quot;;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; managed-keys-directory &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;/var/named/dynamic&quot;&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; pid-file &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;/run/named/named.pid&quot;&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; session-keyfile &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;/run/named/session.key&quot;&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; forwarders {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;span class=&quot;code-snippet__number&quot;&gt;183.60&lt;/span&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;.83&lt;/span&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;.19&lt;/span&gt;; &lt;span class=&quot;code-snippet__meta&quot;&gt;# 腾讯云VPCGW DNS地址&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;span class=&quot;code-snippet__number&quot;&gt;183.60&lt;/span&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;.82&lt;/span&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;.98&lt;/span&gt;; &lt;span class=&quot;code-snippet__meta&quot;&gt;# 腾讯云VPCGW DNS地址&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; };&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;logging {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; channel default_debug {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; file &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;data/named.run&quot;&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; severity &lt;span class=&quot;code-snippet__keyword&quot;&gt;dynamic&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; };&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;zone &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;.&quot;&lt;/span&gt; IN {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; type hint;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; file &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;named.ca&quot;&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;#include &quot;/etc/named.rfc1912.zones&quot;;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;include &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;/etc/named.root.key&quot;&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;zone &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;rocky.com&quot;&lt;/span&gt; { &lt;span class=&quot;code-snippet__meta&quot;&gt;# 域名&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; type master; &lt;span class=&quot;code-snippet__meta&quot;&gt;#主DNS&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; file &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;dynamic/rocky.com.zone&quot;&lt;/span&gt;; &lt;span class=&quot;code-snippet__meta&quot;&gt;# zone file path #正向区域文件&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; notify yes;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;zone &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;6.0.10.in-addr.arpa&quot;&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;in&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; type master;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; file &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;dynamic/6.0.10.in-addr.arpa.zone&quot;&lt;/span&gt;; &lt;span class=&quot;code-snippet__meta&quot;&gt;#反向区域文件&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; notify yes;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 name=&quot;3.5.DNS%E5%8C%BA%E5%9F%9F%E6%96%87%E4%BB%B6%E9%85%8D%E7%BD%AE&quot;&gt;&lt;span&gt;（五）DNS区域文件配置&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.44765342960288806&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/VY8SELNGe97cdZNKx08iamBOoaqibvjSZMz3ct1e9oc02DhmDHic9MIa3vyhp4HyicQvia4tUibNwpeErnNIBo5icEoxA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;554&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.49097472924187724&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/VY8SELNGe97cdZNKx08iamBOoaqibvjSZMjhvmkmF42SO5alYM4DUkxmQyloEQCib1uIIQ2tOU7zhYl1DUTVSajng/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;554&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.6609375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/VY8SELNGe97cdZNKx08iamBOoaqibvjSZMI7xGxmlDAUUiabCibuIgl0uOjOicacicsLBS1gGl4gWb3RwNtxHqr3easw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;分别在node4和node5进行服务启动及检查服务状态是否正常。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.23671875&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/VY8SELNGe97cdZNKx08iamBOoaqibvjSZMstZXv218fru8cPUibuD3cKgvJW9FIZWm3bqy8cseiaahPLWxga0yrE6w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;makefile&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;[root@node4 ~]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;Server: 10.0.6.15&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;Address: 10.0.6.15#53&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;Name: www.rocky.com&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;Address: 10.0.6.100&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;[root@node4 ~]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;100.6.0.10.in-addr.arpa name = www.rocky.com.&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;[root@node4 ~]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;Server: 10.0.6.15&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;Address: 10.0.6.15#53&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;Non-authoritative answer:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;www.baidu.com canonical name = www.a.shifen.com.&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;Name: www.a.shifen.com&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;Address: 110.242.68.3&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;Name: www.a.shifen.com&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;Address: 110.242.68.4&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;[root@node4 ~]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;Server: 10.0.6.15&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;Address: 10.0.6.15#53&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;Non-authoritative answer:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;mirrors.tencent.com canonical name = mirrors.cloud.tencent.com.&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;mirrors.cloud.tencent.com canonical name = mirrors.cloud.tencent.com.cdn.dnsv1.com.&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;mirrors.cloud.tencent.com.cdn.dnsv1.com canonical name = 14io0gsu.sched.dma.tdnsv5.com.&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;Name: 14io0gsu.sched.dma.tdnsv5.com&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;Address: 113.240.69.235&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;Name: 14io0gsu.sched.dma.tdnsv5.com&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;Address: 113.240.69.180&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;[root@node4 ~]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;服务验证通过，符合预期，node5分别也进行相关解析验证。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 name=&quot;3.7.LB%E9%85%8D%E7%BD%AE&quot;&gt;&lt;span&gt;（七）LB配置&lt;/span&gt;&lt;/h2&gt;&lt;h3 name=&quot;3.7.1.%E6%96%B0%E5%BB%BA%E5%86%85%E7%BD%91LB&quot;&gt;&lt;br/&gt;&lt;/h3&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;新建内网LB，配置监听端口为UDP：53，加权轮询。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.384375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/VY8SELNGe97cdZNKx08iamBOoaqibvjSZMgHGcnFLicialCNiaJqViaBmjs3FkRDsTDVUQwEV5Rd7ppKY9H7CwuGibxtw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.9078125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/VY8SELNGe97cdZNKx08iamBOoaqibvjSZMXlzqGgw2MfcCVPSbMs7EGUW5ib8CJa9sZicY80BBFricdTjgVvqRqPQVQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;选择板绑定的RS节点，确认即可&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.63671875&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/VY8SELNGe97cdZNKx08iamBOoaqibvjSZM4qvfVTySg2iavlbRrRv2O6y3WldyH2UZN3OmLyVPibrulgVyribOBicoLQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.28203125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/VY8SELNGe97cdZNKx08iamBOoaqibvjSZMBRV1FhcL18iaibkr2BtJBzsuq1MCbGibNLnDI8ALb9sfqkOsx2Bak1xaQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 name=&quot;3.8.%E5%AE%A2%E6%88%B7%E7%AB%AF%E9%AA%8C%E8%AF%81&quot;&gt;&lt;span&gt;（八）客户端验证&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cs&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;[&lt;span class=&quot;code-snippet__meta&quot;&gt;root@node6 ~&lt;/span&gt;]&lt;span class=&quot;code-snippet__meta&quot;&gt;# cat /etc/resolv.conf&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;; generated &lt;span class=&quot;code-snippet__keyword&quot;&gt;by&lt;/span&gt; /usr/sbin/dhclient-script&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;#nameserver 183.60.83.19&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;#nameserver 183.60.82.98&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;nameserver &lt;span class=&quot;code-snippet__number&quot;&gt;10.0&lt;/span&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;.2&lt;/span&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;.2&lt;/span&gt; &lt;span class=&quot;code-snippet__meta&quot;&gt;#内网LB地址&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;#解析业务域名&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;makefile&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;[root@node6 ~]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;Server: 10.0.2.2&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;Address: 10.0.2.2#53&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;Name: www.rocky.com&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;Address: 10.0.6.100&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;[root@node6 ~]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;Server: 10.0.2.2&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;Address: 10.0.2.2#53&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;Non-authoritative answer:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;mirrors.tencent.com canonical name = mirrors.cloud.tencent.com.&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;mirrors.cloud.tencent.com canonical name = mirrors.cloud.tencent.com.cdn.dnsv1.com.&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;mirrors.cloud.tencent.com.cdn.dnsv1.com canonical name = 14io0gsu.sched.dma.tdnsv5.com.&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;Name: 14io0gsu.sched.dma.tdnsv5.com&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;Address: 113.240.69.180&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;Name: 14io0gsu.sched.dma.tdnsv5.com&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;Address: 113.240.69.235&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;[root@node6 ~]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;Server: 10.0.2.2&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;Address: 10.0.2.2#53&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;Non-authoritative answer:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;Name: myqcloud.com&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;Address: 0.0.0.1&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;[root@node6 ~]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;Server: 10.0.2.2&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;Address: 10.0.2.2#53&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;Non-authoritative answer:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;www.jd.com canonical name = www.jd.com.gslb.qianxun.com.&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;www.jd.com.gslb.qianxun.com canonical name = jd-abroad.cdn20.com.&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;Name: jd-abroad.cdn20.com&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;Address: 121.57.82.89&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;Name: jd-abroad.cdn20.com&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;Address: 36.111.141.54&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;Name: jd-abroad.cdn20.com&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;Address: 121.57.82.88&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;Name: jd-abroad.cdn20.com&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;Address: 121.57.82.17&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;Name: jd-abroad.cdn20.com&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;Address: 42.81.145.189&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;Name: jd-abroad.cdn20.com&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;Address: 113.24.194.72&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;Name: jd-abroad.cdn20.com&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;Address: 240e:918:1a00:201::33&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;Name: jd-abroad.cdn20.com&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;Address: 240e:928:101::1e&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;Name: jd-abroad.cdn20.com&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;Address: 240e:918:1a00:201::15&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;Name: jd-abroad.cdn20.com&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;Address: 240e:925:2:101::6&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;验证通过， 符合预期。&lt;/span&gt;&lt;/p&gt;&lt;h2 name=&quot;3.9.DNS%E9%AB%98%E5%8F%AF%E7%94%A8%E6%99%BA%E8%83%BD%E8%A7%A3%E6%9E%90%E6%96%B9%E6%A1%88%E6%80%BB%E7%BB%93&quot;&gt;&lt;br/&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 name=&quot;3.9.DNS%E9%AB%98%E5%8F%AF%E7%94%A8%E6%99%BA%E8%83%BD%E8%A7%A3%E6%9E%90%E6%96%B9%E6%A1%88%E6%80%BB%E7%BB%93&quot;&gt;&lt;span&gt;（九）DNS高可用智能解析方案总结&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;本方案采用Linux系统自带的DNS软件进行DNS高可用环境的构建，结合了内网CLB使其解析调度RS更加灵活。同时实现了客户端对企业内网域名，腾讯云内外网域名的解析需求。另外这里务必注意RS在内网进行构建，安全组限制53端口的来源IP。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.08125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/VY8SELNGe940MSFL1oCgmdY94xonPZxOwxBTVAISwJFfsx13N4vemd6icM25H7qDoqmHZYK9REhRlHicJGVI7FibA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;CoreDNS高可用方案&lt;/span&gt;&lt;/p&gt;&lt;p data-lines=&quot;2&quot; data-type=&quot;p&quot; data-sign=&quot;863483aff37d9ca8ce1dcd32f1aab1c42&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;本篇主要介绍通过自建CoreDNS集群来提供DNS内外域名解析，及腾讯内网DNS功能，这里采用CoreDNS+ETCD集群方式来实现。方案特点：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.6&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/VY8SELNGe97cdZNKx08iamBOoaqibvjSZMsSldoRroqGWw2Qm85X5QxicqzgAm8qcNjicqv5cicfAmr9sticL7iaArouA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;h2 name=&quot;4.1CoreDNS&quot;&gt;&lt;span&gt;（一）CoreDNS&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;CoreDNS基于用Go编写的是一个DNS服务器，链接插件，每个插件执行一个(DNS)功能。相对于其他DNS如：BIND、Knot、PowerDNS和Unbound不同之处，在于它非常灵活，几乎所有功能都外包到插件中 ,插件也可以是独立的，也能协同工作。可以利用插件对你的DNS数据做你想做的事情。如果有些功能不是现成的，你可以通过编写插件来添加，和Caddy Server具有相同的模型：链接插件。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;插件化（Plugins)：基于Caddy服务器框架，CoreDNS实现了一个插件链的架构，将大量应用端的逻辑抽象成插件形式暴露给使用者。CoreDNS以预配置的方式将不同的插件串成一条链，按序执行插件链上的逻辑。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;配置简单：引入表达力更强的DSL，即Corefile形式的配置文件。&lt;/span&gt;&lt;/p&gt;&lt;h3 name=&quot;4.1.2-CoreDNS-%E6%9E%B6%E6%9E%84&quot;&gt;&lt;br/&gt;&lt;/h3&gt;&lt;p&gt;&lt;/p&gt;&lt;h3 name=&quot;4.1.3-CoreDNS%C2%A0%E8%A7%A3%E6%9E%90%E6%96%B9%E5%BC%8F&quot;&gt;&lt;br/&gt;&lt;/h3&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.5875&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/VY8SELNGe97cdZNKx08iamBOoaqibvjSZMzDricfEDxjAMg4Qoy4tUOgK0QIBqp9vaj2sFH7iasIPibKiaEPQIt3HaeA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.7420382165605095&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/VY8SELNGe97cdZNKx08iamBOoaqibvjSZM8vm3Tze48CtfwUDhF6otyzjMucGicDj4XR1cd1GO71d4zVqd11hSDGg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1256&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;注意这里有两个不同的端口:5300和53。在内部，每个端口都会生成一个dnsserver.Server。即使有四个服务器块，我们也只能得到两个实际的服务器。CoreDNS会将所有与同一端口相关的服务器块收集起来，并将它们合并到相同的dnsserver.Server中。服务器将在端口上多重查询，根据区域将它们传递到不同的插件链。它为区域选择最特定的匹配服务器块。如果没有匹配的服务器块，则返回SERVFAIL。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;makefile&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;coredns.io:5300 {&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;file /etc/coredns/zones/coredns.io.db&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;example.io:53 {&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;errors&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;log&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;file /etc/coredns/zones/example.io.db&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;example.net:53 {&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;file /etc/coredns/zones/example.net.db&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;.:53 {&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;errors&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;log&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;health&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;rewrite name foo.example.com foo.default.svc.cluster.local&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 name=&quot;4.2-ETCD&quot;&gt;&lt;span&gt;（二）ETCD&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;ETCD是一种高度一致的分布式键值存储，它提供了一种可靠的方式来存储需要由分布式系统或机器集群访问的数据。它在网络分区期间优雅地处理领导选举，并能够容忍机器故障。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.7708029197080292&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/VY8SELNGe97cdZNKx08iamBOoaqibvjSZMyXIFPUv1K1CkTnlOibbRvNOe75l3ibyG1jficqILic7Hlic7piakicOGib1iaCQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;685&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;从上面架构图中我们可以看到，ETCD主要分为四个部分。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;HTTP Server：用于处理用户发送的API请求以及其它etcd节点的同步与心跳信息请求。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Store：用于处理etcd支持的各类功能的事务，包括数据索引、节点状态变更、监控与反馈、事件处理与执行等等，是etcd对用户提供的大多数API功能的具体实现。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Raft：Raft强一致性算法的具体实现，是etcd的核心。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;WAL：Write Ahead Log（预写式日志）是etcd的数据存储方式。除了在内存中存有所有数据的状态以及节点的索引外，etcd就通过WAL进行持久化存储。在WAL中所有的数据提交前都会事先记录日志，Snapshot是为了防止数据过多而进行的状态快照，Entry表示存储的具体日志内容。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 name=&quot;4.3-%E9%85%8D%E7%BD%AEETCD%E9%9B%86%E7%BE%A4&quot;&gt;&lt;span&gt;（三）配置ETCD集群&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这里采用三台云服务器作为CoreDNS节点的后端数据库，ETCD架构逻辑具备选举master机制，分别为node1~node3。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;perl&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;[root@node1~]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;[root@node11 ~]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;Created &lt;span class=&quot;code-snippet__keyword&quot;&gt;symlink&lt;/span&gt; from /etc/systemd/&lt;span class=&quot;code-snippet__keyword&quot;&gt;system&lt;/span&gt;/multi-user.target.wants/etcd.service to /usr/lib/systemd/&lt;span class=&quot;code-snippet__keyword&quot;&gt;system&lt;/span&gt;/etcd.service.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;ini&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;[root@node1 etcd]&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;ETCD_DATA_DIR&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;/var/lib/etcd/node1.etcd&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;ETCD_LISTEN_PEER_URLS&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;http://10.0.2.4:2380&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;ETCD_LISTEN_CLIENT_URLS&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;http://10.0.2.4:2379,http://127.0.0.1:2379&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;ETCD_NAME&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;node1&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;ETCD_INITIAL_ADVERTISE_PEER_URLS&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;http://10.0.2.4:2380&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;ETCD_ADVERTISE_CLIENT_URLS&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;node1=http://10.0.2.4:2379&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;ETCD_INITIAL_CLUSTER&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;node1=http://10.0.2.4:2379,node2=http://10.0.2.8:2379,node3=http://10.0.2.15:2379&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;ETCD_INITIAL_CLUSTER_TOKEN&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;etcd-cluster&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;ETCD_INITIAL_CLUSTER_STATE&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;new&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;ini&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;[root@node2 ~]&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;ETCD_DATA_DIR&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;/var/lib/etcd/node2.etcd&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;ETCD_LISTEN_PEER_URLS&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;http://10.0.2.8:2380&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;ETCD_LISTEN_CLIENT_URLS&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;http://10.0.2.8:2379,http://127.0.0.1:2379&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;ETCD_NAME&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;node2&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;ETCD_INITIAL_ADVERTISE_PEER_URLS&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;http://10.0.2.8:2380&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;ETCD_ADVERTISE_CLIENT_URLS&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;http://10.0.2.8:2379&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;ETCD_INITIAL_CLUSTER&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;node1=http://10.0.2.4:2380,node2=http://10.0.2.8:2380,node3=http://10.0.2.15:2380&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;ETCD_INITIAL_CLUSTER_TOKEN&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;etcd-cluster&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;ETCD_INITIAL_CLUSTER_STATE&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;new&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;[root@node2 ~]&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;ini&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;[root@node3 ~]&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;ETCD_DATA_DIR&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;/var/lib/etcd/node3.etcd&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;ETCD_LISTEN_PEER_URLS&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;http://10.0.2.15:2380&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;ETCD_LISTEN_CLIENT_URLS&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;http://10.0.2.15:2379,http://127.0.0.1:2379&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;ETCD_NAME&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;node3&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;ETCD_INITIAL_ADVERTISE_PEER_URLS&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;http://10.0.2.15:2380&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;ETCD_ADVERTISE_CLIENT_URLS&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;http://10.0.2.15:2379&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;ETCD_INITIAL_CLUSTER&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;node1=http://10.0.2.4:2380,node2=http://10.0.2.8:2380,node3=http://10.0.2.15:2380&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;ETCD_INITIAL_CLUSTER_TOKEN&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;etcd-cluster&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;ETCD_INITIAL_CLUSTER_STATE&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;new&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;h3 name=&quot;%E5%90%AF%E5%8A%A8%E4%B8%8E%E9%AA%8C%E8%AF%81etcd%E6%9C%8D%E5%8A%A1&quot;&gt;&lt;span&gt;启动与验证etcd服务&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cs&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;[&lt;span class=&quot;code-snippet__meta&quot;&gt;root@node1 ~&lt;/span&gt;]&lt;span class=&quot;code-snippet__meta&quot;&gt;# systemctl start etcd.service&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;[&lt;span class=&quot;code-snippet__meta&quot;&gt;root@node1 ~&lt;/span&gt;]&lt;span class=&quot;code-snippet__meta&quot;&gt;# systemctl status etcd.service&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;etcd.service - Etcd Server&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   Loaded: loaded (/usr/lib/systemd/system/etcd.service; enabled; vendor preset: disabled)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   Active: active (running) since Tue &lt;span class=&quot;code-snippet__number&quot;&gt;2022&lt;/span&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;-02&lt;/span&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;-15&lt;/span&gt; &lt;span class=&quot;code-snippet__number&quot;&gt;13&lt;/span&gt;:&lt;span class=&quot;code-snippet__number&quot;&gt;50&lt;/span&gt;:&lt;span class=&quot;code-snippet__number&quot;&gt;16&lt;/span&gt; CST; &lt;span class=&quot;code-snippet__number&quot;&gt;10&lt;/span&gt;h ago&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; Main PID: &lt;span class=&quot;code-snippet__number&quot;&gt;10451&lt;/span&gt; (etcd)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   CGroup: /system.slice/etcd.service&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;           └─&lt;span class=&quot;code-snippet__number&quot;&gt;10451&lt;/span&gt; /usr/bin/etcd --name=node1 --data-dir=/&lt;span class=&quot;code-snippet__keyword&quot;&gt;var&lt;/span&gt;/lib/etcd/node1.etcd --listen-client-urls=http:&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cs&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;[&lt;span class=&quot;code-snippet__meta&quot;&gt;root@node1 ~&lt;/span&gt;]&lt;span class=&quot;code-snippet__meta&quot;&gt;# etcdctl member list&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;5432b&lt;/span&gt;0f7395992d2: name=node1 peerURLs=http:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;589358f&lt;/span&gt;881fe72a1: name=node2 peerURLs=http:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;bb72602d9eb35069: name=node3 peerURLs=http:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;[&lt;span class=&quot;code-snippet__meta&quot;&gt;root@node1 ~&lt;/span&gt;]&lt;span class=&quot;code-snippet__meta&quot;&gt;# etcdctl cluster-health&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;member &lt;span class=&quot;code-snippet__number&quot;&gt;5432b&lt;/span&gt;0f7395992d2 &lt;span class=&quot;code-snippet__keyword&quot;&gt;is&lt;/span&gt; healthy: got healthy result &lt;span class=&quot;code-snippet__keyword&quot;&gt;from&lt;/span&gt; http:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;member &lt;span class=&quot;code-snippet__number&quot;&gt;589358f&lt;/span&gt;881fe72a1 &lt;span class=&quot;code-snippet__keyword&quot;&gt;is&lt;/span&gt; healthy: got healthy result &lt;span class=&quot;code-snippet__keyword&quot;&gt;from&lt;/span&gt; http:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;member bb72602d9eb35069 &lt;span class=&quot;code-snippet__keyword&quot;&gt;is&lt;/span&gt; healthy: got healthy result &lt;span class=&quot;code-snippet__keyword&quot;&gt;from&lt;/span&gt; http:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;cluster &lt;span class=&quot;code-snippet__keyword&quot;&gt;is&lt;/span&gt; healthy&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 name=&quot;4.4-%E5%A4%9A%E8%8A%82%E7%82%B9CoreDNS%E9%83%A8%E7%BD%B2&quot;&gt;&lt;span&gt;（四）多节点CoreDNS部署&lt;/span&gt;&lt;/h2&gt;&lt;h3 name=&quot;4.4.1%E5%AE%89%E8%A3%85coredns&quot;&gt;&lt;br/&gt;&lt;/h3&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这里面可结合客户业务需要进行CoreDNS服务器的环境构建，这里采用的coredns1.6.4 版本，官网最新1.9.x&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cs&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;[&lt;span class=&quot;code-snippet__meta&quot;&gt;root@dns1 ~&lt;/span&gt;]&lt;span class=&quot;code-snippet__meta&quot;&gt;# tar zxvf coredns_1.6.4_linux_amd64.tgz&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;[&lt;span class=&quot;code-snippet__meta&quot;&gt;root@dns1 ~&lt;/span&gt;]&lt;span class=&quot;code-snippet__meta&quot;&gt;# mv coredns /usr/bin/&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;[&lt;span class=&quot;code-snippet__meta&quot;&gt;root@dns1 ~&lt;/span&gt;]&lt;span class=&quot;code-snippet__meta&quot;&gt;# mkdir /etc/coredns&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cs&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;[&lt;span class=&quot;code-snippet__meta&quot;&gt;root@node1 ~&lt;/span&gt;]&lt;span class=&quot;code-snippet__meta&quot;&gt;# cat /etc/coredns/Corefile&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;. {  &lt;span class=&quot;code-snippet__meta&quot;&gt;# 监听tcp和udp的53端口&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    etcd node1.rocky.com node2.rocky.com node3.rocky.com &lt;span class=&quot;code-snippet__number&quot;&gt;10.&lt;/span&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;in&lt;/span&gt;-addr.arpa { &lt;span class=&quot;code-snippet__meta&quot;&gt;# 配置启用etcd插件,后面可以指定域名&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        stubzones &lt;span class=&quot;code-snippet__meta&quot;&gt;# 启用存根区域功能&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        path /skydns &lt;span class=&quot;code-snippet__meta&quot;&gt;# etcd里面的路径 默认为/skydns，以后所有的dns记录就是存储在该存根路径底下&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        endpoint http:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        upstream  &lt;span class=&quot;code-snippet__number&quot;&gt;183.60&lt;/span&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;.83&lt;/span&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;.19&lt;/span&gt;:&lt;span class=&quot;code-snippet__number&quot;&gt;53&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;183.60&lt;/span&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;.82&lt;/span&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;.98&lt;/span&gt;:&lt;span class=&quot;code-snippet__number&quot;&gt;53&lt;/span&gt; &lt;span class=&quot;code-snippet__meta&quot;&gt;# 设置要使用的上游解析程序解决指向外部域名的在etcd（认为CNAME）中找到的外部域名。&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    cache &lt;span class=&quot;code-snippet__number&quot;&gt;600&lt;/span&gt;  &lt;span class=&quot;code-snippet__meta&quot;&gt;# 缓存600秒&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    loadbalance &lt;span class=&quot;code-snippet__meta&quot;&gt;# 负载均衡，开启DNS记录轮询策略&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    forward . &lt;span class=&quot;code-snippet__number&quot;&gt;183.60&lt;/span&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;.82&lt;/span&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;.98&lt;/span&gt;:&lt;span class=&quot;code-snippet__number&quot;&gt;53&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;183.60&lt;/span&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;.83&lt;/span&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;.19&lt;/span&gt;:&lt;span class=&quot;code-snippet__number&quot;&gt;53&lt;/span&gt; &lt;span class=&quot;code-snippet__meta&quot;&gt;# 上面etcd未查询到的请求转发给设置的DNS服务器解析&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;myqcloud.com {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    cache &lt;span class=&quot;code-snippet__number&quot;&gt;600&lt;/span&gt; myqcloud.com &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    loadbalance&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    forward . &lt;span class=&quot;code-snippet__number&quot;&gt;119.29&lt;/span&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;.29&lt;/span&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;.29&lt;/span&gt;:&lt;span class=&quot;code-snippet__number&quot;&gt;53&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;tencent-cloud.com {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; hosts { &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;10.210&lt;/span&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;.104&lt;/span&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;.113&lt;/span&gt; cls-i0fxloot.ccs.tencent-cloud.com&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;10.210&lt;/span&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;.49&lt;/span&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;.4&lt;/span&gt; cls&lt;span class=&quot;code-snippet__number&quot;&gt;-88b&lt;/span&gt;89rhb.ccs.tencent-cloud.com&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;10.210&lt;/span&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;.104&lt;/span&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;.35&lt;/span&gt; cls-o4rn1235.ccs.tencent-cloud.com&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  fallthrough&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;ini&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;[root@node1 ~]&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;[Unit]&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;Description&lt;/span&gt;=CoreDNS DNS server&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;Documentation&lt;/span&gt;=https://coredns.io&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;After&lt;/span&gt;=network.target&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;[Service]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;PermissionsStartOnly&lt;/span&gt;=&lt;span class=&quot;code-snippet__literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;LimitNOFILE&lt;/span&gt;=&lt;span class=&quot;code-snippet__number&quot;&gt;1048576&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;LimitNPROC&lt;/span&gt;=&lt;span class=&quot;code-snippet__number&quot;&gt;512&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;CapabilityBoundingSet&lt;/span&gt;=CAP_NET_BIND_SERVICE&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;AmbientCapabilities&lt;/span&gt;=CAP_NET_BIND_SERVICE&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;NoNewPrivileges&lt;/span&gt;=&lt;span class=&quot;code-snippet__literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;User&lt;/span&gt;=coredns&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;WorkingDirectory&lt;/span&gt;=~&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;ExecStart&lt;/span&gt;=/usr/bin/coredns -conf=/etc/coredns/Corefile&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;ExecReload&lt;/span&gt;=/bin/kill -SIGUSR1 &lt;span class=&quot;code-snippet__variable&quot;&gt;$MAINPID&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;Restart&lt;/span&gt;=&lt;span class=&quot;code-snippet__literal&quot;&gt;on&lt;/span&gt;-failure&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;[Install]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;WantedBy&lt;/span&gt;=multi-user.target&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;[root@node1 ~]&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;properties&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;[root@node1&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;~]# systemctl status coredns&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;●&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;coredns.service - CoreDNS DNS server&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   &lt;span class=&quot;code-snippet__attr&quot;&gt;Loaded&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;loaded (/usr/lib/systemd/system/coredns.service; disabled; vendor preset: disabled)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   &lt;span class=&quot;code-snippet__attr&quot;&gt;Active&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;active (running) since Tue 2022-02-15 16:13:43 CST; 4s ago&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     &lt;span class=&quot;code-snippet__attr&quot;&gt;Docs&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;https://coredns.io&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;Main&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;PID: 30288 (coredns)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   &lt;span class=&quot;code-snippet__attr&quot;&gt;CGroup&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;/system.slice/coredns.service&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;           &lt;span class=&quot;code-snippet__meta&quot;&gt;└─30288&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;/usr/bin/coredns -conf=/etc/coredns/Corefile&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;Feb&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;15 16:13:43 node1.rocky.com systemd[1]: Started CoreDNS DNS server.&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;Feb&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;15 16:13:43 node1.rocky.com coredns[30288]: .:53&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;Feb&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;15 16:13:43 node1.rocky.com coredns[30288]: myqcloud.com.:53&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;Feb&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;15 16:13:43 node1.rocky.com coredns[30288]: tencent-cloud.com.:53&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;Feb&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;15 16:13:43 node1.rocky.com coredns[30288]: ______                ____  _   _______&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;Feb&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;15 16:13:43 node1.rocky.com coredns[30288]: / ____/___  ________  / __ \/ | / / ___/        ~ CoreDNS-1.6.4&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;Feb&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;15 16:13:43 node1.rocky.com coredns[30288]: / /   / __ \/ ___/ _ \/ / / /  |/ /\__ \         ~ linux/amd64, ...dirty&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;Feb&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;15 16:13:43 node1.rocky.com coredns[30288]: / /___/ /_/ / /  /  __/ /_/ / /|  /___/ /&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;Feb&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;15 16:13:43 node1.rocky.com coredns[30288]: \____/\____/_/   \___/_____/_/ |_//____/&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;Hint&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;Some lines were ellipsized, use -l to show in full.&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;[root@node1&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;~]# ^C&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;[root@node1&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;~]# systemctl enable coredns&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;Created&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;symlink from /etc/systemd/system/multi-user.target.wants/coredns.service to /usr/lib/systemd/system/coredns.service.&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;perl&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;root@node1 ~]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;No help topic &lt;span class=&quot;code-snippet__keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;put&#x27;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;[root@node1 ~]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;[root@node1 ~]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;OK&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;[root@node1 ~]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;[root@node1 ~]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;[root@node1 ~]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;[root@node1 ~]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;OK&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;[root@node1 ~]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;OK&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;[root@node1 ~]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;OK&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;[root@node1 ~]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;由于这里采用的测试环境， 需要结合具体业务进行相关设置。&lt;/span&gt;&lt;/p&gt;&lt;h2 name=&quot;4.6-coredns-%E9%AA%8C%E8%AF%81&quot;&gt;&lt;br/&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 name=&quot;4.6-coredns-%E9%AA%8C%E8%AF%81&quot;&gt;&lt;span&gt;（五）coredns验证&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;css&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__selector-attr&quot;&gt;[root@node1 ~]&lt;/span&gt;# &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;dig&lt;/span&gt; @&lt;span class=&quot;code-snippet__keyword&quot;&gt;node1&lt;/span&gt; www.tam3.com&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;; &amp;lt;&amp;lt;&amp;gt;&amp;gt; &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;DiG&lt;/span&gt; 9&lt;span class=&quot;code-snippet__selector-class&quot;&gt;.11&lt;/span&gt;&lt;span class=&quot;code-snippet__selector-class&quot;&gt;.4-P2-RedHat-9&lt;/span&gt;&lt;span class=&quot;code-snippet__selector-class&quot;&gt;.11&lt;/span&gt;&lt;span class=&quot;code-snippet__selector-class&quot;&gt;.4-26&lt;/span&gt;&lt;span class=&quot;code-snippet__selector-class&quot;&gt;.P2&lt;/span&gt;&lt;span class=&quot;code-snippet__selector-class&quot;&gt;.el7_9&lt;/span&gt;&lt;span class=&quot;code-snippet__selector-class&quot;&gt;.7&lt;/span&gt; &amp;lt;&amp;lt;&amp;gt;&amp;gt; @&lt;span class=&quot;code-snippet__keyword&quot;&gt;node1&lt;/span&gt; www.tam3.com&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;; (1 &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;found&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;;; &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;global&lt;/span&gt; &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;options&lt;/span&gt;: +&lt;span class=&quot;code-snippet__selector-tag&quot;&gt;cmd&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;;; &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;Got&lt;/span&gt; &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;answer&lt;/span&gt;:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;;; &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;-&lt;/span&gt;&amp;gt;&amp;gt;&lt;span class=&quot;code-snippet__selector-tag&quot;&gt;HEADER&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&quot;code-snippet__selector-tag&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;opcode&lt;/span&gt;: &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;QUERY&lt;/span&gt;, &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;status&lt;/span&gt;: &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;NOERROR&lt;/span&gt;, &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;id&lt;/span&gt;: 1734&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;;; &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;flags&lt;/span&gt;: &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;qr&lt;/span&gt; &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;rd&lt;/span&gt; &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;ra&lt;/span&gt;; &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;QUERY&lt;/span&gt;: 1, &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;ANSWER&lt;/span&gt;: 3, &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;AUTHORITY&lt;/span&gt;: 0, &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;ADDITIONAL&lt;/span&gt;: 1&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;;; &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;OPT&lt;/span&gt; &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;PSEUDOSECTION&lt;/span&gt;:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;; &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;EDNS&lt;/span&gt;: &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;version&lt;/span&gt;: 0, &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;flags&lt;/span&gt;:; &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;udp&lt;/span&gt;: 4096&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;;; &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;QUESTION&lt;/span&gt; &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;SECTION&lt;/span&gt;:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;;&lt;span class=&quot;code-snippet__selector-tag&quot;&gt;www&lt;/span&gt;&lt;span class=&quot;code-snippet__selector-class&quot;&gt;.tam3&lt;/span&gt;&lt;span class=&quot;code-snippet__selector-class&quot;&gt;.com&lt;/span&gt;.                  &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;IN&lt;/span&gt;      &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;;; &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;ANSWER&lt;/span&gt; &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;SECTION&lt;/span&gt;:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__selector-tag&quot;&gt;www&lt;/span&gt;&lt;span class=&quot;code-snippet__selector-class&quot;&gt;.tam3&lt;/span&gt;&lt;span class=&quot;code-snippet__selector-class&quot;&gt;.com&lt;/span&gt;.           160     &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;IN&lt;/span&gt;      &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;CNAME&lt;/span&gt;   &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;tam3&lt;/span&gt;&lt;span class=&quot;code-snippet__selector-class&quot;&gt;.com&lt;/span&gt;.&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__selector-tag&quot;&gt;tam3&lt;/span&gt;&lt;span class=&quot;code-snippet__selector-class&quot;&gt;.com&lt;/span&gt;.               160     &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;IN&lt;/span&gt;      &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;A&lt;/span&gt;       3&lt;span class=&quot;code-snippet__selector-class&quot;&gt;.33&lt;/span&gt;&lt;span class=&quot;code-snippet__selector-class&quot;&gt;.152&lt;/span&gt;&lt;span class=&quot;code-snippet__selector-class&quot;&gt;.147&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__selector-tag&quot;&gt;tam3&lt;/span&gt;&lt;span class=&quot;code-snippet__selector-class&quot;&gt;.com&lt;/span&gt;.               160     &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;IN&lt;/span&gt;      &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;A&lt;/span&gt;       15&lt;span class=&quot;code-snippet__selector-class&quot;&gt;.197&lt;/span&gt;&lt;span class=&quot;code-snippet__selector-class&quot;&gt;.142&lt;/span&gt;&lt;span class=&quot;code-snippet__selector-class&quot;&gt;.173&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;;; &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;Query&lt;/span&gt; &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;time&lt;/span&gt;: 622 &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;msec&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;;; &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;SERVER&lt;/span&gt;: 10&lt;span class=&quot;code-snippet__selector-class&quot;&gt;.0&lt;/span&gt;&lt;span class=&quot;code-snippet__selector-class&quot;&gt;.2&lt;/span&gt;&lt;span class=&quot;code-snippet__selector-class&quot;&gt;.4&lt;/span&gt;&lt;span class=&quot;code-snippet__selector-id&quot;&gt;#53&lt;/span&gt;(10&lt;span class=&quot;code-snippet__selector-class&quot;&gt;.0&lt;/span&gt;&lt;span class=&quot;code-snippet__selector-class&quot;&gt;.2&lt;/span&gt;&lt;span class=&quot;code-snippet__selector-class&quot;&gt;.4&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;;; &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;WHEN&lt;/span&gt;: &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;Tue&lt;/span&gt; &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;Feb&lt;/span&gt; 15 16&lt;span class=&quot;code-snippet__selector-pseudo&quot;&gt;:25&lt;/span&gt;&lt;span class=&quot;code-snippet__selector-pseudo&quot;&gt;:24&lt;/span&gt; &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;CST&lt;/span&gt; 2022&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;;; &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;MSG&lt;/span&gt; &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;SIZE&lt;/span&gt;  &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;rcvd&lt;/span&gt;: 123&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;验证符合预期。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.08125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/VY8SELNGe940MSFL1oCgmdY94xonPZxOJVRV9fJwyNlOia141dC5N1t2TUdslRvy8nsJibpicV5CMndZ1391p9qvA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;总结&lt;/span&gt;&lt;/p&gt;&lt;p data-lines=&quot;2&quot; data-type=&quot;p&quot; data-sign=&quot;863483aff37d9ca8ce1dcd32f1aab1c42&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;本篇通过两种不同的形式在云上实现自建高可用DNS环境来解决企业在云上的内外网域名解析的需求。以上两个方案仅供参考，生产环境采用，需结合业务具体需求进行相关配置的调整。同时这里优先推荐采用腾讯云的DNS托管服务，有特殊业务需求可参考以上两个方案结合托管的DNS服务协同来处理。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.08125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/VY8SELNGe940MSFL1oCgmdY94xonPZxOS1WZP3ojL1eiagP354aFZsEcQOduIp3v9pS06r9d8yiaiaQWSmoM0KlVQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;附录&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 name=&quot;6.1.DNS%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7&quot;&gt;&lt;span&gt;（一）DNS常用工具&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;dig域名信息探索者（domain information groper，dig）是查询工具中最多功能的。常使用的dig的简单形式如：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;nslookup有两种模式:交互是和非交互式;交互模式允许使用者向名字服务器发出对各种主机和域名信息的查询请求,或者打印出一个域下面的主机列表.非交互模式只能用于打印所查询的某个主机或域的名字和请求信息, 如文章上述测试方法。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;（二）其他参考资料&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;1.https://www.isc.org/bind/&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2.https://coredns.io/&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;3.https://etcd.io/&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;4.https://coredns.io/plugins/&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;5.https://coredns.io/2017/06/08/how-queries-are-processed-in-coredns/&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;6.&lt;/span&gt;&lt;span&gt;https://github.com/coredns/depl&lt;/span&gt;&lt;span&gt;oyment/blob/master/systemd/coredns.service&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;7.https://cloud.tencent.com/document/product/1338&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;8.https://cloud.tencent.com/developer/article/1748028&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;9.https://cloud.tencent.com/developer/article/1945211&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section mpa-from-tpl=&quot;t&quot; data-mpa-template=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong mpa-from-tpl=&quot;t&quot; mpa-is-content=&quot;t&quot;&gt; 作者简介&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;105&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;105&quot; data-fileid=&quot;100044396&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/VY8SELNGe97cdZNKx08iamBOoaqibvjSZMk4jJXBLks4b09HadGybvFkwjzYbb6YeP5RSoKiaMb95fRpGPRNjlEcA/640?wx_fmt=png&quot; data-type=&quot;jpeg&quot; data-w=&quot;500&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;罗俊&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;腾讯云开发者社区【技思广益·腾讯技术人原创集】作者&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;腾讯云TAM，腾讯云大客户技术客户经理，目前负责腾讯云大客户云上架构设计，架构优化，稳定性治理、高可用，容灾等相关咨询与支持服务。对云原生、开源技术有较深入的研究与热情。 &lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section mpa-from-tpl=&quot;t&quot; data-mpa-template=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong mpa-from-tpl=&quot;t&quot; mpa-is-content=&quot;t&quot;&gt; 推荐阅读&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2NDU4OTExOQ==&amp;amp;mid=2247542336&amp;amp;idx=1&amp;amp;sn=cc40bcb3c768675f726cfc7a4f26181f&amp;amp;chksm=eaa83c10dddfb506ddaa81784a3c82e4ea86fb8e62705da312f5f5c28bae3a4c348f1cdb670d&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;Kubernetes原理与架构初探&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;Kubernetes原理与架构初探&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2NDU4OTExOQ==&amp;amp;mid=2247542302&amp;amp;idx=1&amp;amp;sn=efba7d27340704ae2131181b73316925&amp;amp;chksm=eaa83c4edddfb5587758c10700837b350908c060429ef780d8e00d2dd5af1ea3ea1259d3aacd&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;10分钟搞定！Golang分布式ID集合&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;10分钟搞定！Golang分布式ID集合&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2NDU4OTExOQ==&amp;amp;mid=2247542262&amp;amp;idx=1&amp;amp;sn=665e5f70f2091d349f6359ec6901bbba&amp;amp;chksm=eaa83fa6dddfb6b01e3abfed9940ca49734212789afdba333ebecb7c10361ef67ba4bf4d2283&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;C++异步：asio的coroutine实现！&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;&lt;span&gt;C++异步：asio的coroutine实现！&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2NDU4OTExOQ==&amp;amp;mid=2247542202&amp;amp;idx=1&amp;amp;sn=1bf0aea3f55b881e7e970b3ff8f50237&amp;amp;chksm=eaa83feadddfb6fca5f0aaf6e00b4b0a6b862e8e3f5010c55e5da27148fd981d2cab3b32a6ee&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;Go组件：context学习笔记！&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;&lt;span&gt;Go组件：context学习笔记！&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;578&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;280&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.40444444444444444&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/VY8SELNGe940MSFL1oCgmdY94xonPZxOZqHFPx02lrZBs8SHygWCrAU9Fs3sYiap0kiaubmtBLZetqLAlQVsUb5Q/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;900&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;👇&lt;/span&gt;&lt;span&gt;点击&lt;/span&gt;&lt;span&gt;「阅读原文」&lt;/span&gt;&lt;span&gt;，&lt;/span&gt;&lt;span&gt;注册成为社&lt;/span&gt;&lt;span&gt;区创作者，认识大咖，打造你的技术影响力！&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;

          

          
          &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>d27a244e80052874d10bf94646f86fb3</guid>
<title>VictoriaMetrics 一些不应该被忽视的细节</title>
<link>https://toutiao.io/k/rpchfx3</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;entry-content&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/VictoriaMetrics/VictoriaMetrics&quot;&gt;VictoriaMetrics&lt;/a&gt; 可以作为 Prometheus 完整功能上的替代品，官方的卖点是 Scalable, Reliable, Easy-to-Use &amp;amp; Cost-Efficient，作者之前也出过一些以性能著称的 golang 代码库。作为 Prometheus 的替代品尝试解决很多 Prometheus 已存在的问题，实现了一些对于 Prometheus 来讲可能是 “Out of Scope” 的功能，完整的功能特性可以参考 &lt;a href=&quot;https://docs.victoriametrics.com/Cluster-VictoriaMetrics.html#prominent-features&quot;&gt;官网文档&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;有这样的开源系统出现来解决一些问题是非常好的事情，让大家有了更多的选择，我们肯定是要怀着感恩之心的。但还是要有自己的判断避免轻易被人带节奏，现在也能看到国内有越来越多的厂在用 VictoriaMetrics，没别的意思，这篇文章主要分享一些 VictoriaMetrics 技术实现上鲜为人知（或者大家不关心）的问题，希望可以以此来更好更全面的认识 VictoriaMetrics，至于技术选型各位看完后自行判断，一个系统有什么功能特性不重要重要的是业务场景上需不需要重不重要。&lt;/p&gt;
&lt;p&gt;VictoriaMetrics 当前版本为 v1.80.0。&lt;/p&gt;
&lt;h3 id=&quot;wal&quot;&gt;&lt;a href=&quot;#wal&quot; class=&quot;anchor&quot;&gt;&lt;svg class=&quot;anchorcon&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt; WAL&lt;/h3&gt;
&lt;p&gt;没有 WAL，非正常停机有较大的丢数据的风险，有意思的是作者写了一篇&lt;a href=&quot;https://valyala.medium.com/wal-usage-looks-broken-in-modern-time-series-databases-b62a627ab704&quot;&gt;为什么 WAL 不适合时序数据库&lt;/a&gt;的文章，个人觉得这些观点本身不是很站得住脚评论也有质疑比如刷盘并不是只由上层应用主动触发，文章里面提到的 ClickHouse 应该也是&lt;a href=&quot;https://clickhouse.com/docs/en/whats-new/changelog/2020/#experimental-feature-4&quot;&gt;默认开启 WAL 的&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;当然不排除很多场景下没有 WAL 是可接受的，从另一方面来讲多副本也可以一定程度上提高可靠性，但 WAL 可以从更大程度上提高可靠性，对比其它产品少这么个特性可能就少了一个 9，个人以为 WAL 至少应该是可选的。&lt;/p&gt;
&lt;h3 id=&quot;数据完整性校验&quot;&gt;&lt;a href=&quot;#%e6%95%b0%e6%8d%ae%e5%ae%8c%e6%95%b4%e6%80%a7%e6%a0%a1%e9%aa%8c&quot; class=&quot;anchor&quot;&gt;&lt;svg class=&quot;anchorcon&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt; 数据完整性校验&lt;/h3&gt;
&lt;p&gt;没有存储任何用于数据完整性校验的信息，使用的压缩算法如 zstd 也没有开启数据校验选项，看&lt;a href=&quot;https://github.com/VictoriaMetrics/VictoriaMetrics/blob/ad00f4aaaa3b80c321a90bde5d754a9e76dc1095/lib/encoding/zstd/zstd_pure.go#L75&quot;&gt;这行代码&lt;/a&gt;也是出于性能考虑故意的，个人觉得这算是一个存储系统设计上的缺陷了至少要有个口子不是，数据损坏并不是那么遥不可及，而&lt;strong&gt;给用户错误的数据要比没有数据更不可接受&lt;/strong&gt;，目前可用的解决方案及相关讨论可以参见我提的这个 &lt;a href=&quot;https://github.com/VictoriaMetrics/VictoriaMetrics/issues/3011&quot;&gt;Issue: Checksum functionality is missing&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&quot;异步写--内存临时批量缓冲&quot;&gt;&lt;a href=&quot;#%e5%bc%82%e6%ad%a5%e5%86%99--%e5%86%85%e5%ad%98%e4%b8%b4%e6%97%b6%e6%89%b9%e9%87%8f%e7%bc%93%e5%86%b2&quot; class=&quot;anchor&quot;&gt;&lt;svg class=&quot;anchorcon&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt; 异步写 + 内存临时批量缓冲&lt;/h3&gt;
&lt;p&gt;存储层组件 vmstorage 接受到的最新写入的数据都会先临时放在内存里面，然后定时定量写盘持久化，临时缓冲的数据有些是无法被查询到的（写入成功的数据可能无法被立即查询到）。代理层组件 vminsert 也是会批量缓存再异步写入数据到存储层，数据可能只在应用层面的内存做缓冲然后就给上层写调用返回成功了。&lt;/p&gt;
&lt;p&gt;VictoriaMetrics 写入路径上都是这种异步加批量缓冲的模式，一批量多个请求的数据只有最后一个请求能真实得到这一批量写入是否成功的反馈，而这一批量请求互相无感知没有上下文关系（不同层面的组件将让这种关系进一步撕裂开来），这种方式提供的用户接口以个人有限的经验来看是极其不友好的，中间没有高可用的队列来存储数据，写入失败又不能及时得到反馈无法进行及时有效的退避或者重试从而导致数据丢失，丢数据是可以的默默的丢掉部分不太合适。当然内部组件间有重试逻辑正常情况下是有用的。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://valyala.medium.com/how-victoriametrics-makes-instant-snapshots-for-multi-terabyte-time-series-data-e1f3fb0e0282&quot;&gt;这篇文章&lt;/a&gt;里面介绍了存储层参考了 ClickHouse 的实现，可能是出于性能上的考虑 VictoriaMetrics 选择阉割掉了严格保证数据可靠性的那一部分。&lt;/p&gt;
&lt;h3 id=&quot;扩缩容雪崩&quot;&gt;&lt;a href=&quot;#%e6%89%a9%e7%bc%a9%e5%ae%b9%e9%9b%aa%e5%b4%a9&quot; class=&quot;anchor&quot;&gt;&lt;svg class=&quot;anchorcon&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt; 扩缩容/雪崩&lt;/h3&gt;
&lt;p&gt;存储层组件 vmstorage 扩缩容需要重启所有的写入层代理组件 vminsert 以及所有的查询层计算组件 vmselect，因为不支持自动服务发现，有人也提了 &lt;a href=&quot;https://github.com/VictoriaMetrics/VictoriaMetrics/issues/270&quot;&gt;Issue&lt;/a&gt;，解决方案肯定是有的无非是会增加复杂度但是个人觉得是值得的，带来的问题是扩缩容各个组件相互感知时间可能较长，集群规模较大或者紧急情况下基本的读写可用性可能都无法有效保障。&lt;/p&gt;
&lt;p&gt;VictoriaMetrics 写入会重试所有节点直到写入成功，再结合以上异步加批量缓冲的模式，可以发挥一点想象某个节点挂掉理论上是比较容易引起雪崩的（存储层现在有 maxHourlySeries 这种启动时配置某种维度上可作为单节点的一个自保护手段）。&lt;/p&gt;
&lt;p&gt;当然增加足够多的节点和资源也可以一定程度上规避雪崩的问题，参考&lt;a href=&quot;https://docs.victoriametrics.com/Cluster-VictoriaMetrics.html#capacity-planning&quot;&gt;官方推荐&lt;/a&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;50% of free RAM across all the node types for reducing the probability of OOM (out of memory) crashes and slowdowns during temporary spikes in workload.&lt;/li&gt;
&lt;li&gt;50% of spare CPU across all the node types for reducing the probability of slowdowns during temporary spikes in workload.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;可维护性兼容性&quot;&gt;&lt;a href=&quot;#%e5%8f%af%e7%bb%b4%e6%8a%a4%e6%80%a7%e5%85%bc%e5%ae%b9%e6%80%a7&quot; class=&quot;anchor&quot;&gt;&lt;svg class=&quot;anchorcon&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt; 可维护性/兼容性&lt;/h3&gt;
&lt;p&gt;VictoriaMetrics 目前的架构相对而言没那么复杂，所以理论上运维复杂度应该还行。&lt;/p&gt;
&lt;p&gt;看过 VictoriaMetrics 的部分代码实现，我可以不负责任的说有点暴力，写起来应该挺爽阅读体验一般，比如很多全局的状态以及硬编码的参数，再比如为了性能做了很多优化可能开发过程中心智负担也不低当然这种优化是无法彻底避免的，性能优化很多时候其实做的是脏活累活，所以代码层面的可维护性个人觉得一般。&lt;/p&gt;
&lt;p&gt;设计上考虑欠佳自造的内部协议格式扩展性较差也没有版本概念比如可能与此相关的 &lt;a href=&quot;https://github.com/VictoriaMetrics/VictoriaMetrics/releases/tag/v1.78.0&quot;&gt;v1.78.0 不兼容的改了内部通信协议&lt;/a&gt;，升级完成之前查询无法正常工作，这其实是增加变更复杂度和心智负担的，给我的感觉是作者的风格过于奔放。&lt;/p&gt;
&lt;p&gt;当然项目主页上也提到了发版迭代很快的，请仔细阅读文档。&lt;/p&gt;
&lt;h3 id=&quot;最后&quot;&gt;&lt;a href=&quot;#%e6%9c%80%e5%90%8e&quot; class=&quot;anchor&quot;&gt;&lt;svg class=&quot;anchorcon&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt; 最后&lt;/h3&gt;
&lt;p&gt;VictoriaMetrics 整体设计实现上给人一种崇尚暴力美学的味道，但是个人觉得暴力大大的多过了美，比如出于性能考虑而不留余地的牺牲掉一些可靠性，这种或者上面提到的设计上存在不严谨的地方后续只能通过增加复杂性或者牺牲兼容性的方式来弥补，说到现实情况很多用户对监控没有很多要求一般情况能用就好但可能唯独有一点是成本要低又不愿意做一些数据梳理的工作什么指标都要如此看来 VictoriaMetrics 有点东西的。与 VictoriaMetrics 作为对比，Prometheus 及其部分衍生项目问题也不少，有一些大家都有的共性问题，有资源开销的问题，还有很多设计如此或者 “Out of Scope” 的问题，但个人觉得 Prometheus 及其部分衍生项目毕竟发展时间更长很多基础的细节处理上会显得更成熟稳重些。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;没有最好的系统只有最合适的系统。用最合适的系统干最合适的事。&lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;

&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>6dbf6ba1b3e361004ae0b5b64e26dee6</guid>
<title>SpringBoot 官方强烈推荐，连接池，太快了！</title>
<link>https://toutiao.io/k/zumxh7v</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在我们平常的编码中，通常会将一些对象保存起来，这主要考虑的是对象的创建成本。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如像线程资源、数据库连接资源或者 TCP 连接等，这类对象的初始化通常要花费比较长的时间，如果频繁地申请和销毁，就会耗费大量的系统资源，造成不必要的性能损失。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;并且这些对象都有一个显著的特征，就是通过轻量级的重置工作，可以循环、重复地使用。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个时候，我们就可以使用一个虚拟的池子，将这些资源保存起来，当使用的时候，我们就从池子里快速获取一个即可。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在Java 中，池化技术应用非常广泛，常见的就有数据库连接池、线程池等，本文主讲连接池，线程池我们将在后续的博客中进行介绍。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;公用池化包 Commons Pool 2&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们首先来看一下 Java 中公用的池化包 Commons Pool 2，来了解一下对象池的一般结构。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;根据我们的业务需求，使用这套 API 能够很容易实现对象的池化管理。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&amp;lt;!-- https:&lt;span&gt;//mvnrepository.com/artifact/org.apache.commons/commons-pool2 --&amp;gt;&lt;/span&gt;&lt;br/&gt;&amp;lt;dependency&amp;gt;&lt;br/&gt;    &amp;lt;groupId&amp;gt;org.apache.commons&amp;lt;/groupId&amp;gt;&lt;br/&gt;    &amp;lt;artifactId&amp;gt;commons-pool2&amp;lt;/artifactId&amp;gt;&lt;br/&gt;    &amp;lt;version&amp;gt;&lt;span&gt;2.11.1&lt;/span&gt;&amp;lt;/version&amp;gt;&lt;br/&gt;&amp;lt;/dependency&amp;gt;&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;GenericObjectPool 是对象池的核心类，通过传入一个对象池的配置和一个对象的工厂，即可快速创建对象池。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;GenericObjectPool&lt;/span&gt;&lt;span&gt;( &lt;br/&gt;            &lt;span&gt;final&lt;/span&gt; PooledObjectFactory&amp;lt;T&amp;gt; factory, &lt;br/&gt;            &lt;span&gt;final&lt;/span&gt; GenericObjectPoolConfig&amp;lt;T&amp;gt; config)&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;案例&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Redis 的常用客户端 Jedis，就是使用 Commons Pool 管理连接池的，可以说是一个最佳实践。下图是 Jedis 使用工厂创建对象的主要代码块。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对象工厂类最主要的方法就是makeObject，它的返回值是 PooledObject 类型，可以将对象使用 new DefaultPooledObject&amp;lt;&amp;gt;(obj) 进行简单包装返回。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;redis.clients.jedis.JedisFactory，使用工厂创建对象。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; PooledObject&amp;lt;Jedis&amp;gt; &lt;span&gt;makeObject&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;throws&lt;/span&gt; Exception &lt;/span&gt;{&lt;br/&gt;  Jedis jedis = &lt;span&gt;null&lt;/span&gt;;&lt;br/&gt;  &lt;span&gt;try&lt;/span&gt; {&lt;br/&gt;    jedis = &lt;span&gt;new&lt;/span&gt; Jedis(jedisSocketFactory, clientConfig);&lt;br/&gt;    &lt;span&gt;//主要的耗时操作&lt;/span&gt;&lt;br/&gt;    jedis.connect();&lt;br/&gt;    &lt;span&gt;//返回包装对象&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; DefaultPooledObject&amp;lt;&amp;gt;(jedis);&lt;br/&gt;  } &lt;span&gt;catch&lt;/span&gt; (JedisException je) {&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (jedis != &lt;span&gt;null&lt;/span&gt;) {&lt;br/&gt;      &lt;span&gt;try&lt;/span&gt; {&lt;br/&gt;        jedis.quit();&lt;br/&gt;      } &lt;span&gt;catch&lt;/span&gt; (RuntimeException e) {&lt;br/&gt;        logger.warn(&lt;span&gt;&quot;Error while QUIT&quot;&lt;/span&gt;, e);&lt;br/&gt;      }&lt;br/&gt;      &lt;span&gt;try&lt;/span&gt; {&lt;br/&gt;        jedis.close();&lt;br/&gt;      } &lt;span&gt;catch&lt;/span&gt; (RuntimeException e) {&lt;br/&gt;        logger.warn(&lt;span&gt;&quot;Error while close&quot;&lt;/span&gt;, e);&lt;br/&gt;      }&lt;br/&gt;    }&lt;br/&gt;    &lt;span&gt;throw&lt;/span&gt; je;&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们再来介绍一下对象的生成过程，如下图，对象在进行获取时，将首先尝试从对象池里拿出一个，如果对象池中没有空闲的对象，就使用工厂类提供的方法，生成一个新的。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; T &lt;span&gt;borrowObject&lt;/span&gt;&lt;span&gt;(&lt;span&gt;final&lt;/span&gt; Duration borrowMaxWaitDuration)&lt;/span&gt; &lt;span&gt;throws&lt;/span&gt; Exception &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;//此处省略若干行&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;while&lt;/span&gt; (p == &lt;span&gt;null&lt;/span&gt;) {&lt;br/&gt;        create = &lt;span&gt;false&lt;/span&gt;;&lt;br/&gt;        &lt;span&gt;//首先尝试从池子中获取。&lt;/span&gt;&lt;br/&gt;        p = idleObjects.pollFirst();&lt;br/&gt;        &lt;span&gt;// 池子里获取不到，才调用工厂内生成新实例&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (p == &lt;span&gt;null&lt;/span&gt;) {&lt;br/&gt;            p = create();&lt;br/&gt;            &lt;span&gt;if&lt;/span&gt; (p != &lt;span&gt;null&lt;/span&gt;) {&lt;br/&gt;                create = &lt;span&gt;true&lt;/span&gt;;&lt;br/&gt;            }&lt;br/&gt;        }&lt;br/&gt;        &lt;span&gt;//此处省略若干行&lt;/span&gt;&lt;br/&gt;    }&lt;br/&gt;    &lt;span&gt;//此处省略若干行&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那对象是存在什么地方的呢？这个存储的职责，就是由一个叫作 LinkedBlockingDeque 的结构来承担的，它是一个双向的队列。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;接下来看一下 GenericObjectPoolConfig 的主要属性：&lt;/span&gt;&lt;/h2&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;// GenericObjectPoolConfig本身的属性&lt;/span&gt;&lt;br/&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; maxTotal = DEFAULT_MAX_TOTAL;&lt;br/&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; maxIdle = DEFAULT_MAX_IDLE;&lt;br/&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; minIdle = DEFAULT_MIN_IDLE;&lt;br/&gt;&lt;span&gt;// 其父类BaseObjectPoolConfig的属性&lt;/span&gt;&lt;br/&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt; lifo = DEFAULT_LIFO;&lt;br/&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt; fairness = DEFAULT_FAIRNESS;&lt;br/&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;long&lt;/span&gt; maxWaitMillis = DEFAULT_MAX_WAIT_MILLIS;&lt;br/&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;long&lt;/span&gt; minEvictableIdleTimeMillis = DEFAULT_MIN_EVICTABLE_IDLE_TIME_MILLIS;&lt;br/&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;long&lt;/span&gt; evictorShutdownTimeoutMillis = DEFAULT_EVICTOR_SHUTDOWN_TIMEOUT_MILLIS;&lt;br/&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;long&lt;/span&gt; softMinEvictableIdleTimeMillis = DEFAULT_SOFT_MIN_EVICTABLE_IDLE_TIME_MILLIS;&lt;br/&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; numTestsPerEvictionRun = DEFAULT_NUM_TESTS_PER_EVICTION_RUN;&lt;br/&gt;&lt;span&gt;private&lt;/span&gt; EvictionPolicy&amp;lt;T&amp;gt; evictionPolicy = &lt;span&gt;null&lt;/span&gt;; &lt;br/&gt;&lt;span&gt;// Only 2.6.0 applications set this &lt;/span&gt;&lt;br/&gt;&lt;span&gt;private&lt;/span&gt; String evictionPolicyClassName = DEFAULT_EVICTION_POLICY_CLASS_NAME;&lt;br/&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt; testOnCreate = DEFAULT_TEST_ON_CREATE;&lt;br/&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt; testOnBorrow = DEFAULT_TEST_ON_BORROW;&lt;br/&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt; testOnReturn = DEFAULT_TEST_ON_RETURN;&lt;br/&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt; testWhileIdle = DEFAULT_TEST_WHILE_IDLE;&lt;br/&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;long&lt;/span&gt; timeBetweenEvictionRunsMillis = DEFAULT_TIME_BETWEEN_EVICTION_RUNS_MILLIS;&lt;br/&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt; blockWhenExhausted = DEFAULT_BLOCK_WHEN_EXHAUSTED;&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;参数很多，要想了解参数的意义，我们首先来看一下一个池化对象在整个池子中的生命周期。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如下图所示，池子的操作主要有两个：一个是业务线程，一个是检测线程。&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6370370370370371&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/tO7NEN7wjr4hbzZaEYFPvcXibSoIaSNW3VRBsVia0W9NN5753icN3s62LaQfw6icr3xleZ36Np1UicQ2kURANbrBARA/640?wx_fmt=png&amp;amp;random=0.47793440579756963&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;对象池在进行初始化时，要指定三个主要的参数：&lt;/span&gt;&lt;/h2&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;maxTotal 对象池中管理的对象上限&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;maxIdle 最大空闲数&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;minIdle 最小空闲数&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其中maxTotal 和业务线程有关，当业务线程想要获取对象时，会首先检测是否有空闲的对象。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果有，则返回一个；否则进入创建逻辑。此时，如果池中个数已经达到了最大值，就会创建失败，返回空对象。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对象在获取的时候，有一个非常重要的参数，那就是最大等待时间（maxWaitMillis），这个参数对应用方的性能影响是比较大的。该参数默认为 -1，表示永不超时，直到有对象空闲。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如下图，如果对象创建非常缓慢或者使用非常繁忙，业务线程会持续阻塞 （blockWhenExhausted 默认为 true），进而导致正常服务也不能运行。&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.39166666666666666&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/tO7NEN7wjr4hbzZaEYFPvcXibSoIaSNW3KbDCuSReAiaEesryvIWibU7Rdia0paeucwjSGDjGvcu4ddSjJpgEianu6g/640?wx_fmt=png&amp;amp;random=0.8021208315632211&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;面试题&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一般面试官会问：你会把超时参数设置成多大呢？我一般都会把最大等待时间，设置成接口可以忍受的最大延迟。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如，一个正常服务响应时间 10ms 左右，达到 1 秒钟就会感觉到卡顿，那么这个参数设置成 500~1000ms 都是可以的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;超时之后，会抛出 NoSuchElementException 异常，请求会快速失败，不会影响其他业务线程，这种 Fail Fast 的思想，在互联网应用非常广泛。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;带有evcit 字样的参数，主要是处理对象逐出的。池化对象除了初始化和销毁的时候比较昂贵，在运行时也会占用系统资源。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如，连接池会占用多条连接，线程池会增加调度开销等。业务在突发流量下，会申请到超出正常情况的对象资源，放在池子中。等这些对象不再被使用，我们就需要把它清理掉。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;超出minEvictableIdleTimeMillis 参数指定值的对象，就会被强制回收掉，这个值默认是 30 分钟；softMinEvictableIdleTimeMillis 参数类似，但它只有在当前对象数量大于 minIdle 的时候才会执行移除，所以前者的动作要更暴力一些。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;还有4 个 test 参数：testOnCreate、testOnBorrow、testOnReturn、testWhileIdle，分别指定了在创建、获取、归还、空闲检测的时候，是否对池化对象进行有效性检测。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;开启这些检测，能保证资源的有效性，但它会耗费性能，所以默认为 false。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;生产环境上，建议只将 testWhileIdle 设置为 true，并通过调整空闲检测时间间隔（timeBetweenEvictionRunsMillis），比如 1 分钟，来保证资源的可用性，同时也保证效率。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;JMH 测试&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用连接池和不使用连接池，它们之间的性能差距到底有多大呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下面是一个简单的 JMH 测试例子（见仓库），进行一个简单的 set 操作，为 redis 的 key 设置一个随机值。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;@Fork&lt;/span&gt;(&lt;span&gt;2&lt;/span&gt;) &lt;br/&gt;&lt;span&gt;@State&lt;/span&gt;(Scope.Benchmark) &lt;br/&gt;&lt;span&gt;@Warmup&lt;/span&gt;(iterations = &lt;span&gt;5&lt;/span&gt;, time = &lt;span&gt;1&lt;/span&gt;) &lt;br/&gt;&lt;span&gt;@Measurement&lt;/span&gt;(iterations = &lt;span&gt;5&lt;/span&gt;, time = &lt;span&gt;1&lt;/span&gt;) &lt;br/&gt;&lt;span&gt;@BenchmarkMode&lt;/span&gt;(Mode.Throughput) &lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;JedisPoolVSJedisBenchmark&lt;/span&gt; &lt;/span&gt;{ &lt;br/&gt;   JedisPool pool = &lt;span&gt;new&lt;/span&gt; JedisPool(&lt;span&gt;&quot;localhost&quot;&lt;/span&gt;, &lt;span&gt;6379&lt;/span&gt;); &lt;br/&gt;&lt;br/&gt;   &lt;span&gt;@Benchmark&lt;/span&gt; &lt;br/&gt;   &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;testPool&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{ &lt;br/&gt;       Jedis jedis = pool.getResource(); &lt;br/&gt;       jedis.set(&lt;span&gt;&quot;a&quot;&lt;/span&gt;, UUID.randomUUID().toString()); &lt;br/&gt;       jedis.close(); &lt;br/&gt;   } &lt;br/&gt;&lt;br/&gt;   &lt;span&gt;@Benchmark&lt;/span&gt; &lt;br/&gt;   &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;testJedis&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{ &lt;br/&gt;       Jedis jedis = &lt;span&gt;new&lt;/span&gt; Jedis(&lt;span&gt;&quot;localhost&quot;&lt;/span&gt;, &lt;span&gt;6379&lt;/span&gt;); &lt;br/&gt;       jedis.set(&lt;span&gt;&quot;a&quot;&lt;/span&gt;, UUID.randomUUID().toString()); &lt;br/&gt;       jedis.close(); &lt;br/&gt;   } &lt;br/&gt;   &lt;span&gt;//此处省略若干行&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;将测试结果使用 meta-chart 作图，展示结果如下图所示，可以看到使用了连接池的方式，它的吞吐量是未使用连接池方式的 5 倍！&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3138888888888889&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/tO7NEN7wjr4hbzZaEYFPvcXibSoIaSNW3pcPQCFvwasP1DRnuMGicNHydbVu4JPzAre4T1FCpicXLe79jP3oIMYww/640?wx_fmt=png&amp;amp;random=0.2815531488115892&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;数据库连接池 HikariCP&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;HikariCP 源于日语“光る”，光的意思，寓意软件工作速度和光速一样快，它是 SpringBoot 中默认的数据库连接池。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;数据库是我们工作中经常使用到的组件，针对数据库设计的客户端连接池是非常多的，它的设计原理与我们在本文开头提到的基本一致，可以有效地减少数据库连接创建、销毁的资源消耗。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;同是连接池，它们的性能也是有差别的，下图是 HikariCP 官方的一张测试图，可以看到它优异的性能，官方的 JMH 测试代码见 Github。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.412962962962963&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/tO7NEN7wjr4hbzZaEYFPvcXibSoIaSNW3GsffgTLZhNyEELJwibB4qMrB27ard6biahSVxZMSw939uMtmJickqID9A/640?wx_fmt=png&amp;amp;random=0.46086954360338583&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;figcaption&gt; &lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一般面试题是这么问的：HikariCP 为什么快呢？&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;主要有三个方面：&lt;/span&gt;&lt;/h2&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;它使用 FastList 替代 ArrayList，通过初始化的默认值，减少了越界检查的操作&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;优化并精简了字节码，通过使用 Javassist，减少了动态代理的性能损耗，比如使用 invokestatic 指令代替 invokevirtual 指令&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;实现了无锁的 ConcurrentBag，减少了并发场景下的锁竞争&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;HikariCP 对性能的一些优化操作，是非常值得我们借鉴的，在之后的博客中，我们将详细分析几个优化场景。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;数据库连接池同样面临一个最大值（maximumPoolSize）和最小值（minimumIdle）的问题。这里同样有一个非常高频的面试题：你平常会把连接池设置成多大呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;很多同学认为，连接池的大小设置得越大越好，有的同学甚至把这个值设置成 1000 以上，这是一种误解。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;根据经验，数据库连接，只需要 20~50 个就够用了。具体的大小，要根据业务属性进行调整，但大得离谱肯定是不合适的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;HikariCP 官方是不推荐设置 minimumIdle 这个值的，它将被默认设置成和 maximumPoolSize 一样的大小。如果你的数据库Server端连接资源空闲较大，不妨也可以去掉连接池的动态调整功能。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;另外，根据数据库查询和事务类型，一个应用中是可以配置多个数据库连接池的，这个优化技巧很少有人知道，在此简要描述一下。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;业务类型通常有两种：一种需要快速的响应时间，把数据尽快返回给用户；另外一种是可以在后台慢慢执行，耗时比较长，对时效性要求不高。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果这两种业务类型，共用一个数据库连接池，就容易发生资源争抢，进而影响接口响应速度。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;虽然微服务能够解决这种情况，但大多数服务是没有这种条件的，这时就可以对连接池进行拆分。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如图，在同一个业务中，根据业务的属性，我们分了两个连接池，就是来处理这种情况的。&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3425925925925926&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/tO7NEN7wjr4hbzZaEYFPvcXibSoIaSNW3CUVN1lIcsOl2822cjjap3hMcWJpPXHKApLbLaom1xH25ZJjSOibLaTw/640?wx_fmt=png&amp;amp;random=0.1597479679866669&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;HikariCP 还提到了另外一个知识点，在 JDBC4 的协议中，通过 Connection.isValid() 就可以检测连接的有效性。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这样，我们就不用设置一大堆的 test 参数了，HikariCP 也没有提供这样的参数。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;结果缓存池&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;到了这里你可能会发现池（Pool）与缓存（Cache）有许多相似之处。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;它们之间的一个共同点，就是将对象加工后，存储在相对高速的区域。我习惯性将缓存看作是数据对象，而把池中的对象看作是执行对象。缓存中的数据有一个命中率问题，而池中的对象一般都是对等的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;考虑下面一个场景，jsp 提供了网页的动态功能，它可以在执行后，编译成 class 文件，加快执行速度；再或者，一些媒体平台，会将热门文章，定时转化成静态的 html 页面，仅靠 nginx 的负载均衡即可应对高并发请求（动静分离）。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这些时候，你很难说清楚，这是针对缓存的优化，还是针对对象进行了池化，它们在本质上只是保存了某个执行步骤的结果，使得下次访问时不需要从头再来。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我通常把这种技术叫作结果缓存池（Result Cache Pool），属于多种优化手段的综合。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;小结&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下面我来简单总结一下本文的内容重点：我们从 Java 中最通用的公用池化包 Commons Pool 2 说起，介绍了它的一些实现细节，并对一些重要参数的应用做了讲解。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Jedis 就是在 Commons Pool 2 的基础上封装的，通过 JMH 测试，我们发现对象池化之后，有了接近 5 倍的性能提升。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;接下来介绍了数据库连接池中速度很快的 HikariCP ，它在池化技术之上，又通过编码技巧进行了进一步的性能提升，HikariCP 是我重点研究的类库之一，我也建议你加入自己的任务清单中。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;总体来说，当你遇到下面的场景，就可以考虑使用池化来增加系统性能：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;对象的创建或者销毁，需要耗费较多的系统资源&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;对象的创建或者销毁，耗时长，需要繁杂的操作和较长时间的等待&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;对象创建后，通过一些状态重置，可被反复使用&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;将对象池化之后，只是开启了第一步优化。要想达到最优性能，就不得不调整池的一些关键参数，合理的池大小加上合理的超时时间，就可以让池发挥更大的价值。和缓存的命中率类似，对池的监控也是非常重要的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如下图，可以看到数据库连接池连接数长时间保持在高位不释放，同时等待的线程数急剧增加，这就能帮我们快速定位到数据库的事务问题。&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.26296296296296295&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/tO7NEN7wjr4hbzZaEYFPvcXibSoIaSNW3LkJFASMnVuQIvqAznPTibemWjjoGXJjIMedoOichnoMHDFwwQLkakWtg/640?wx_fmt=png&amp;amp;random=0.8543590938968197&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;平常的编码中，有很多类似的场景。比如 Http 连接池，Okhttp 和 Httpclient 就都提供了连接池的概念，你可以类比着去分析一下，关注点也是在连接大小和超时时间上。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在底层的中间件，比如 RPC，也通常使用连接池技术加速资源获取，比如 Dubbo 连接池、 Feign 切换成 httppclient 的实现等技术。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;你会发现，在不同资源层面的池化设计也是类似的。比如线程池，通过队列对任务进行了二层缓冲，提供了多样的拒绝策略等，线程池我们将在后续的文章中进行介绍。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;线程池的这些特性，你同样可以借鉴到连接池技术中，用来缓解请求溢出，创建一些溢出策略。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;现实情况中，我们也会这么做。那么具体怎么做？有哪些做法？这部分内容就留给大家思考了。&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>22a84db7cfefa9b2f14ed77a29c2bba1</guid>
<title>我为什么放弃 C++，选择 C 语言编写个人项目？</title>
<link>https://toutiao.io/k/5pvbjp6</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                                       &quot; id=&quot;js_content&quot;&gt;&lt;p data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;span&gt;↓&lt;/span&gt;&lt;span&gt;推荐关注↓&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mp-common-profile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzAxNDI5NzEzNg==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/pldYwMfYJpia3uWic6GbPCC1LgjBWzkBVqYrMfbfT6o9uMDnlLELGNgYDP496LvDfiaAiaOt0cZBlBWw4icAs6OHg8Q/0?wx_fmt=png&quot; data-nickname=&quot;CPP开发者&quot; data-alias=&quot;cppFans&quot; data-signature=&quot;我们在 Github 维护着 9000+ star 的C语言/C++开发资源。日常分享 C语言 和 C++ 开发相关技术文章，每篇文章都经过精心筛选，一篇文章讲透一个知识点，让读者读有所获～&quot; data-from=&quot;0&quot; data-is_biz_ban=&quot;0&quot;/&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-mpa-category=&quot;正文&quot; data-mpa-template-id=&quot;1440&quot;&gt;&lt;section label=&quot;powered by 135editor.com&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;【编者按】一直以来，C 和 C++ 都是非常优秀的编程语言。不过，两种语言虽名称有些相似，但应用场景存在巨大的不同。对于 C 语言而言，其主要被用于操作系统、容器、物联网、数据库等领域的开发，而 C++ 则是开发桌面软件、图形处理、游戏、网站的最佳工具。在本文中，作者原以为 C++ 在开发基础设施时会更胜一筹，然而经过与 C 语言的尝试对比，发现事实并非如此。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;以下为翻译正文：&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;首先声明，在整个职业生涯中，我一直在使用C++，而且在做大多数项目时，&lt;/span&gt;&lt;span&gt;C++仍然是我的首选语言。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;因此，在开始构建&lt;/span&gt;&lt;span&gt;个人项目ZeroMQ（可伸缩的分布式或并发应用程序设计的高性能异步消息库）时，我也选用了C++，主要原因如下：&lt;/span&gt;&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;C&lt;/span&gt;&lt;span&gt;++包含一些数据结构和算法库。&lt;/span&gt;&lt;span&gt;如果使用C语言，我将不得不依赖第三方库，或者自己动手编写基本算法。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;C++会强制我在编程风格上保持一些基本的统一性。&lt;/span&gt;&lt;span&gt;例如，this参数不允许使用几种不同的机制将指针传递给正在处理的对象，而这个问题在C项目中很常见。&lt;/span&gt;&lt;span&gt;同样，不可以明确将成员变量标记为私有，此外还有C++的一些其他特征。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;使用C语言实现虚函数非常复杂，会导致理解和管理代码的难度加剧。&lt;/span&gt;&lt;span&gt;不过，严格来说，这个问题其实是上一个问题的一个子集，但我觉得有必要单独指出。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;最后，每个人都喜欢在代码的末尾自动调用析构函数。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;span/&gt;&lt;span&gt;然而，事到如今，我不得不承认C++是一个糟糕的选择。&lt;/span&gt;&lt;span&gt;下面，我来解释一下原因。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;首先，我的个人项目ZeroMQ是一个持续运行的基础设施，永远不应该出故障，永远不应该表现出未定义的行为。因此，错误处理至关重要，必须做到明确且严格。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;然而，&lt;strong&gt;C++的异常处理并不能满足我的需求&lt;/strong&gt;。如果程序不会出错，那么选择C++没有任何问题，只需将main函数包装在try/catch中，集中在一个地方处理所有错误。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如果你的目标是保证不会出现未定义的行为，那么C++的异常处理就会变成一场噩梦。由于C++解耦了异常的发生与处理，因此错误处理非常容易，但也造成了你几乎不可能保证程序永远不会运行未定义的行为。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在C语言中，错误的产生和处理是紧密结合的，在同一块源代码中。因此，在出错时很容易理解发生了什么：&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;int rc = fx ();&lt;br/&gt;&lt;span&gt;if&lt;/span&gt; (rc != 0)&lt;br/&gt;handle_error ();&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;而在C++中，你只能抛出错误，却不清楚究竟发生了什么：&lt;/span&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;int rc = fx ();&lt;br/&gt;&lt;span&gt;if&lt;/span&gt; (rc != 0)&lt;br/&gt;throw std::exception ();&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;问题在于，你并不清楚在哪里处理异常。&lt;/span&gt;&lt;span&gt;处理错误的代码在同一个函数中会更加方便理解，尽管不太方便阅读：&lt;/span&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;try {&lt;br/&gt;...&lt;br/&gt;int rc = fx ();&lt;br/&gt;&lt;span&gt;if&lt;/span&gt; (rc != 0)&lt;br/&gt;throw std::exception (&lt;span&gt;&quot;Error!&quot;&lt;/span&gt;);&lt;br/&gt;...&lt;br/&gt;catch (std::exception &amp;amp;e) {&lt;br/&gt;handle_exception ();&lt;br/&gt;}&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;然而，我们来考虑同一个函数抛出两个不同的错误，结果会怎么样：&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;class exception1 {};&lt;br/&gt;class exception2 {};&lt;br/&gt;try {&lt;br/&gt;...&lt;br/&gt;&lt;span&gt;if&lt;/span&gt; (condition1)&lt;br/&gt;throw my_exception1 ();&lt;br/&gt;...&lt;br/&gt;&lt;span&gt;if&lt;/span&gt; (condition2)&lt;br/&gt;throw my_exception2 ();&lt;br/&gt;...&lt;br/&gt;}&lt;br/&gt;catch (my_exception1 &amp;amp;e) {&lt;br/&gt;handle_exception1 ();&lt;br/&gt;}&lt;br/&gt;catch (my_exception2 &amp;amp;e) {&lt;br/&gt;handle_exception2 ();&lt;br/&gt;}&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;以下是等效的C代码：&lt;/span&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;...&lt;br/&gt;&lt;span&gt;if&lt;/span&gt; (condition1)&lt;br/&gt;handle_exception1 ();&lt;br/&gt;...&lt;br/&gt;&lt;span&gt;if&lt;/span&gt; (condition2)&lt;br/&gt;handle_exception2 ();&lt;br/&gt;...&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;相较之下，C语言更加方便阅读，而且编译器也会生成更高效的代码。&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;然而，C++的问题还不仅限于此。考虑某个函数会引发异常，但不会处理异常的情况。在这种情况下，错误的处理可以放到任何地方，具体取决于从哪里调用该函数。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;针对不同的情况，采用不同的方式处理异常？这种方法听起来似乎很有道理，但很快就会变成一场噩梦。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在修复某个Bug时，你会发现许多其他地方也有相同的Bug，因为它们都复制了同一段错误处理代码。每当添加一个函数调用，就有可能增加一个新异常，如果调用函数的代码没有妥善处理该异常，就意味着增加了一个新Bug。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如果你还想坚持“没有未定义的行为”原则，就不得不引入新异常，以便区分不同的故障模式。但是，添加新异常就意味着，它会上升到不同的地方。你必须在所有地方添加相应的异常处理，否则就会出现未定义的行为。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;看到这里，你可能想说：这就是异常的正确用法啊？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;然而问题在于，&lt;strong&gt;异常只是一个工具，目的是用更系统的方式管理呈现指数增长的错误处理代码，但它并不能解决根本的问题。&lt;/strong&gt;甚至可以说，异常有可能导致情况恶化，因为你不仅需要编写新的异常类型，还需要针对新类型编写异常处理代码。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;考虑到上述问题，我决定使用C++，但不使用异常。如今我的这个项目就是这样实现的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;不幸的是，问题并没有就此止步……&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;考虑一下，如果对象的初始化失败，会发生什么？构造函数没有返回值，因此只能通过抛出异常来报告失败。但是，我决定不使用异常。所以，我们必须像下面这样处理：&lt;/span&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;class foo&lt;br/&gt;{&lt;br/&gt;public:&lt;br/&gt;foo ();&lt;br/&gt;int init ();&lt;br/&gt;...&lt;br/&gt;};&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;在创建实例时，会调用构造函数（这个函数不会失败），然后调用init函数（这个函数可能会失败）。&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;与C语言相比，C++代码更复杂：&lt;/span&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;struct foo&lt;br/&gt;{&lt;br/&gt;...&lt;br/&gt;};&lt;br/&gt;int foo_init (struct foo *self);&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;然而，C++代码真正的问题在于，如果开发人员在构造函数中编写一些代码，会发生什么？&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在这种情况下，会出现一个特殊的新对象状态。由于对象已构造，但尚未调用init函数，因此是“半初始化”状态。我们应该修改对象（特别是析构函数）来处理这个新状态。这意味着，给每个方法添加新条件。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;有人可能想说，这还不是因为你人为地添加了不使用异常的限制？！如果构造函数中抛出异常，C++运行时会正确地清理对象，不会出现“半初始化”状态。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;话虽如此，然而问题在于，如果使用异常，如上所述，就必须处理所有与异常相关的复杂性。对于一个需要在遇到故障时表现出优秀的健壮性的基础设施组件来说，这不是一个合理的选择。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;此外，即使初始化没有问题，对象的销毁也绝对会遇到问题。你不能在析构函数中抛出异常。这可不是我强加的人为限制，而是因为如果在进程中调用析构函数，或者恢复栈时恰好抛出异常，就会导致整个进程崩溃。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;因此，如果销毁可能失败，你就需要两个单独的函数来处理它：&lt;/span&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;class foo&lt;br/&gt;{&lt;br/&gt;public:&lt;br/&gt;...&lt;br/&gt;int term ();&lt;br/&gt;~foo ();&lt;br/&gt;};&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;这就遇到了与初始化相同的问题：&lt;/span&gt;&lt;span&gt;一个“半终止”状态，我们必须以某种方式处理，向各个成员函数添加新条件。&lt;/span&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;class foo&lt;br/&gt;{&lt;br/&gt;public:&lt;br/&gt;foo () : state (semi_initialised)&lt;br/&gt;{&lt;br/&gt;...&lt;br/&gt;}&lt;br/&gt;int &lt;span&gt;&lt;span&gt;init&lt;/span&gt;&lt;/span&gt; ()&lt;br/&gt;{&lt;br/&gt;&lt;span&gt;if&lt;/span&gt; (state != semi_initialised)&lt;br/&gt;handle_state_error ();&lt;br/&gt;...&lt;br/&gt;state = intitialised;&lt;br/&gt;}&lt;br/&gt;int &lt;span&gt;&lt;span&gt;term&lt;/span&gt;&lt;/span&gt; ()&lt;br/&gt;{&lt;br/&gt;&lt;span&gt;if&lt;/span&gt; (state != initialised)&lt;br/&gt;handle_state_error ();&lt;br/&gt;...&lt;br/&gt;state = semi_terminated;&lt;br/&gt;}&lt;br/&gt;~&lt;span&gt;&lt;span&gt;foo&lt;/span&gt;&lt;/span&gt; ()&lt;br/&gt;{&lt;br/&gt;&lt;span&gt;if&lt;/span&gt; (state != semi_terminated)&lt;br/&gt;handle_state_error ();&lt;br/&gt;...&lt;br/&gt;}&lt;br/&gt;int &lt;span&gt;&lt;span&gt;bar&lt;/span&gt;&lt;/span&gt; ()&lt;br/&gt;{&lt;br/&gt;&lt;span&gt;if&lt;/span&gt; (state != initialised)&lt;br/&gt;handle_state_error ();&lt;br/&gt;...&lt;br/&gt;}&lt;br/&gt;};&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;与之相比，C语言的代码如下。&lt;/span&gt;&lt;span&gt;其中只有两种状态。&lt;/span&gt;&lt;span&gt;未初始化对象/内存，我们无需担心上述问题，而且结构可以包含任意数据。&lt;/span&gt;&lt;span&gt;而且只要对象进入已初始化的状态，就可以正常工作。&lt;/span&gt;&lt;span&gt;因此，对象中不需要状态机：&lt;/span&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;struct foo&lt;br/&gt;{&lt;br/&gt;...&lt;br/&gt;};&lt;br/&gt;int &lt;span&gt;&lt;span&gt;foo_init&lt;/span&gt;&lt;/span&gt; ()&lt;br/&gt;{&lt;br/&gt;...&lt;br/&gt;}&lt;br/&gt;int &lt;span&gt;&lt;span&gt;foo_term&lt;/span&gt;&lt;/span&gt; ()&lt;br/&gt;{&lt;br/&gt;...&lt;br/&gt;}&lt;br/&gt;int &lt;span&gt;&lt;span&gt;foo_bar&lt;/span&gt;&lt;/span&gt; ()&lt;br/&gt;{&lt;br/&gt;...&lt;br/&gt;}&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;考虑一下，如果在上述代码中添加继承，会发生什么。&lt;/span&gt;&lt;span&gt;C++允许将基类初始化为派生类构造函数的一部分。&lt;/span&gt;&lt;span&gt;如果抛出异常，就会破坏已成功初始化的对象：&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;class foo : public bar&lt;br/&gt;{&lt;br/&gt;public:&lt;br/&gt;foo () : &lt;span&gt;&lt;span&gt;bar&lt;/span&gt;&lt;/span&gt; () {}&lt;br/&gt;...&lt;br/&gt;};&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;然而，一旦引入单独的init函数，状态的数量就会开始增长。&lt;/span&gt;&lt;span&gt;除了未初始化、半初始化、初始化和半终止状态之外，你还会遇到这些状态的组合。&lt;/span&gt;&lt;span&gt;你可以想象一个基类已完全初始化、但派生类半初始化的对象。&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;对于这样的对象，几乎不可能确保其行为不出问题。对象的半初始化和半终止部分有很多不同的组合，并且鉴于它们只在非常罕见的情况下才会引发故障，因此大多数相关代码可能未经测试就进入了生产。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;综上所述，我认为，如果你的需求是不允许出现未定义的行为，则不适合面向对象的编程。这个问题不仅限于C++，任何具有构造函数和析构函数的面向对象语言都不适合。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;因此，更适合面向对象语言的项目是：对开发速度有要求、但对“不存在未定义的行为”没有太高要求。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这个问题没有灵丹妙药。系统编程选择C语言更为合适。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;原文链接：https://250bpm.com/blog:4/?continueFlag=c778b3c9525d12a012a35269d830ebcc&lt;/span&gt;&lt;em&gt;&lt;span/&gt;&lt;/em&gt;&lt;/p&gt;&lt;blockquote class=&quot;js_blockquote_wrap&quot; data-type=&quot;2&quot; data-url=&quot;&quot; data-author-name=&quot;&quot; data-content-utf8-length=&quot;27&quot; data-source-title=&quot;&quot;&gt;&lt;section class=&quot;js_blockquote_digest&quot;&gt;&lt;section&gt;&lt;span&gt;作者：Martin Sústrik&lt;/span&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;译者：CSDN - 弯月&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;span&gt;- EOF -&lt;/span&gt;&lt;/p&gt;&lt;section donone=&quot;shifuMouseDownCard(&#x27;shifu_c_030&#x27;)&quot; label=&quot;Copyright Reserved by PLAYHUDONG.&quot;&gt;&lt;section&gt;&lt;span&gt;推荐阅读&lt;/span&gt;  &lt;span&gt;点击标题可跳转&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;1、&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzAxODI5ODMwOA==&amp;amp;mid=2666565043&amp;amp;idx=2&amp;amp;sn=3d367e584c5858dbf715093cacce57a8&amp;amp;chksm=80dc4918b7abc00ef117d81fe0a9e67af7a585ef8f7f38cf6c69b619afb4765276106506a79f&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;面试常问的 16 个 C 语言问题，你能答上来几个？&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;面试常问的 16 个 C 语言问题，你能答上来几个？&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2、&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzAxODI5ODMwOA==&amp;amp;mid=2666564095&amp;amp;idx=2&amp;amp;sn=29eca450f4471d24fef4cdbbedddb07d&amp;amp;chksm=80dc4d54b7abc442124bce37ec9d7d4d7baf1bd18a1964542079a525ba3d8e97a663c9bd8479&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;C 语言各数据类型的内存映像&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;C 语言各数据类型的内存映像&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;3、&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzAxODI5ODMwOA==&amp;amp;mid=2666565124&amp;amp;idx=1&amp;amp;sn=9c9da632a56293b52db5a0994e403f8e&amp;amp;chksm=80dc4aafb7abc3b908d84667d8fda0300f0f9f2ed53fed9ee0c656e23872787924848ed9e028&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;一位国外老程序员的反思：C、Python、Java 不可兼得，专心学好一门编程语言就行！&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;一位国外老程序员的反思：C、Python、Java 不可兼得，专心学好一门编程语言就行！&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;↓推荐关注↓&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mp-common-profile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-id=&quot;MzAxNDI5NzEzNg==&quot; data-pluginname=&quot;mpprofile&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/pldYwMfYJpia3uWic6GbPCC1LgjBWzkBVqYrMfbfT6o9uMDnlLELGNgYDP496LvDfiaAiaOt0cZBlBWw4icAs6OHg8Q/0?wx_fmt=png&quot; data-nickname=&quot;CPP开发者&quot; data-alias=&quot;cppFans&quot; data-signature=&quot;我们在 Github 维护着 9000+ star 的C语言/C++开发资源。日常分享 C语言 和 C++ 开发相关技术文章，每篇文章都经过精心筛选，一篇文章讲透一个知识点，让读者读有所获～&quot; data-from=&quot;2&quot; data-is_biz_ban=&quot;0&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;「CPP开发者」在 Github 维护着 9000+ star 的C/C++开发资源。日常分享 C语言 和 C++ 开发相关技术文章，每篇文章都经过精心筛选，一篇文章讲透一个知识点，让读者读有所获～&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;点赞和在看就是最大的支持❤️&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;

          

          
          &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>