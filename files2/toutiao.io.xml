<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>b92b914eb9627e712ba8345afd3e066a</guid>
<title>优质网站同好者周刊（第 111 期） | 倾城博客</title>
<link>https://toutiao.io/k/g1765df</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;content&quot;&gt;&lt;p&gt;&lt;a href=&quot;https://nicelinks.site/?utm_source=weekly&quot;&gt;倾城之链&lt;/a&gt;作为一个开放平台，旨在云集全球&lt;strong&gt;优秀网站&lt;/strong&gt;，探索互联网中更广阔的世界。此周刊，将汇聚过去一周&lt;a href=&quot;https://nicelinks.site/?utm_source=weekly&quot;&gt;倾城&lt;/a&gt;所收录的内容，以飨同好；欢迎推荐或自荐（仅限有独立域名的网站，可以是二级域名）。您如果要了解收录要求，请参见&lt;a href=&quot;https://nicelinks.site/about?utm_source=weekly&quot;&gt;关于倾城&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;备注&lt;/strong&gt;：本周刊&lt;strong&gt;每周五&lt;/strong&gt;生成，首发于个人微信公众号&lt;a href=&quot;https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzI5MDIwMzM2Mg==&amp;amp;action=getalbum&amp;amp;album_id=1530765143352082433&amp;amp;scene=173&amp;amp;from_msgid=2650641087&amp;amp;from_itemidx=1&amp;amp;count=3#wechat_redirect&quot;&gt;晚晴幽草轩&lt;/a&gt;、博客&lt;a href=&quot;https://www.jeffjade.com&quot;&gt;晚晴幽草轩&lt;/a&gt;，以及&lt;a href=&quot;https://forum.lovejade.cn/&quot;&gt;悠然宜想亭&lt;/a&gt;社区；此一键生成脚本基于 &lt;a href=&quot;https://nicelinks.site/post/602d30aad099ff5688618591&quot;&gt;Deno&lt;/a&gt; 编写，并在 Github 开源：&lt;a href=&quot;https://github.com/nicejade/nicelinks-weekly&quot;&gt;nicejade/nicelinks-weekly&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/%E7%BB%84%E4%BB%B6&quot;&gt;&lt;code&gt;组件&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/Svelte&quot;&gt;&lt;code&gt;Svelte&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/Markdown&quot;&gt;&lt;code&gt;Markdown&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Combine svelte and markdown in the same file. Live your dreams!&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/mdsvex.com.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 - mdsvex - markdown in svelte!&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/redirect?url=https://mdsvex.com/&quot;&gt;MDSvex&lt;/a&gt; 是一个基于 &lt;a href=&quot;https://nicelinks.site/tags/Markdown&quot;&gt;Markdown&lt;/a&gt; 和 &lt;a href=&quot;https://nicelinks.site/tags/Svelte&quot;&gt;Svelte&lt;/a&gt; 技术栈的工具，可以将 Markdown 文档转换为可交互的组件化 UI。该工具允许开发者以类似于编写 React 组件的方式编写 Markdown 文件，并支持在 Markdown 中嵌入 Svelte 组件。MDSvex 的主要特点如下：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;strong&gt;基于 Markdown&lt;/strong&gt;：MDSvex 使用 Markdown 作为文档格式，并支持 GitHub Flavored Markdown 标准。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;支持 Svelte 组件&lt;/strong&gt;：开发者可以在 Markdown 中嵌入 Svelte 组件，并通过 props 实现组件之间的数据传递和状态管理。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;可交互性&lt;/strong&gt;：由于 MDSvex 可以将 Markdown 转换为组件化 UI，因此可以实现更加丰富和动态的用户交互体验。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;灵活性&lt;/strong&gt;：MDSvex 支持自定义配置和插件，可以根据项目需求进行灵活扩展和定制化。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;a href=&quot;https://nicelinks.site/redirect?url=https://mdsvex.com/&quot;&gt;MDSvex&lt;/a&gt; 基本上是 Svelte 的 &lt;a href=&quot;https://nicelinks.site/post/63e4e3eee63ccd089dee6686&quot;&gt;MDX&lt;/a&gt; ，允许您在 markdown 中使用 Svelte 组件，或在 Svelte 组件中使用 markdown。mdsvex 支持所有 Svelte 语法和_几乎_所有 markdown 语法。有关详细信息，请参阅 &lt;a href=&quot;https://mdsvex.com/docs/#limitations&quot;&gt;限制&lt;/a&gt; ，下面是使用示例：&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script&amp;gt;
    import { Chart } from &quot;../components/Chart.svelte&quot;;
&amp;lt;/script&amp;gt;

# Here’s a chart
The chart is rendered inside our MDsveX document.

&amp;lt;Chart /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;近期有基于 &lt;a href=&quot;https://nicelinks.site/post/62a9c2ad90509e23cea772c0&quot;&gt;Svelte&lt;/a&gt; 、 &lt;a href=&quot;https://nicelinks.site/post/5fd20cb4c06d6302c1907ec7&quot;&gt;TailwindCSS&lt;/a&gt; 、 &lt;a href=&quot;https://nicelinks.site/post/6010e1b10c71de1fb957b64e&quot;&gt;Vite&lt;/a&gt; 开发一款 &lt;a href=&quot;https://nicelinks.site/tags/ChatGPT&quot;&gt;ChatGPT&lt;/a&gt; 相关的 Web 应用： &lt;a href=&quot;https://chatgpt.nicelinks.site/&quot;&gt;素问智聊斋&lt;/a&gt; ；其中 &lt;a href=&quot;https://chatgpt.nicelinks.site/#/about&quot;&gt;关于&lt;/a&gt; 、 &lt;a href=&quot;https://chatgpt.nicelinks.site/#/sponsor&quot;&gt;赞助&lt;/a&gt; 等页面，基于 Markdown、 &lt;a href=&quot;https://nicelinks.site/post/5fd20cb4c06d6302c1907ec7&quot;&gt;TailwindCSS&lt;/a&gt; 、和 &lt;a href=&quot;https://nicelinks.site/redirect?url=https://mdsvex.com/&quot;&gt;MDSvex&lt;/a&gt; 来开发，配置简单，效率贼高，效果很棒，体验极好；颇为赞叹。下面是 Sponsor（赞助）页面的代码：&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script&amp;gt;
import Sponsor from &#x27;./../markdown/Sponsor.md&#x27;
&amp;lt;/script&amp;gt;

&amp;lt;div class=&quot;flex-col justify-between mx-auto my-4 prose page-warpper lg:prose-xl md:prose-sm&quot;&amp;gt;
  &amp;lt;Sponsor /&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;使用 MDSvex 可以帮助开发者快速构建可交互的文档和演示页面，同时&lt;strong&gt;提高开发效率&lt;/strong&gt;和&lt;strong&gt;代码复用性&lt;/strong&gt;，强烈推荐；该项目在 &lt;a href=&quot;https://github.com/pngwn/mdsvex&quot;&gt;Github 开源&lt;/a&gt; ，感兴趣的朋友可移步以了解更多。&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/642598ca2d6c9c63445c8862&quot;&gt;倾城之链 - mdsvex - markdown in svelte!&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/%E7%BC%96%E8%BE%91%E5%99%A8&quot;&gt;&lt;code&gt;编辑器&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/AI&quot;&gt;&lt;code&gt;AI&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/ChatGPT&quot;&gt;&lt;code&gt;ChatGPT&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Refactor, understand, and write code effortlessly with Cursor.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/www.cursor.so.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 - Cursor | Build Fast&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/redirect?url=https://www.cursor.so/&quot;&gt;Cursor&lt;/a&gt; 是一款专为 &lt;a href=&quot;https://nicelinks.site/tags/AI&quot;&gt;AI&lt;/a&gt; 编程而生的编辑器，配置非常简单，因为内置了 &lt;a href=&quot;https://nicelinks.site/tags/ChatGPT&quot;&gt;ChatGPT&lt;/a&gt; 的能力，所以下载即用，通过 &lt;code&gt;Ctrl+k&lt;/code&gt; 调出对话框进行会话，输入 prompts 即可得到结果。现在 cursor 还处于早期阶段，但现在它可以帮助您做一些事情，诸如：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;编写&lt;/strong&gt;：使用比 Copilot 更智能的 AI 生成 10-100 行代码；&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Diff&lt;/strong&gt;：要求 AI 编辑一段代码，只查看建议的更改；&lt;/li&gt;&lt;li&gt;&lt;strong&gt;聊天&lt;/strong&gt;：了解您当前文件的 ChatGPT 风格界面；&lt;/li&gt;&lt;li&gt;&lt;strong&gt;还有更多&lt;/strong&gt;：要求修复 lint 错误，在悬停时生成测试/评论等。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;实际体验，当输入 prompts 进行会话时，它要求登录从而使用 AI 功能，理由是避免滥用它们后台；当然，Cursor 有其 AI 提供了另一种方式，即需要用户输入自己的 Open API key。&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://nicelinks.site/post/5af55777979f626ea3d37917&quot;&gt;VSCode&lt;/a&gt; 有提供名为 CodeGPT 的扩展，也是需要用户输入 &lt;code&gt;OpenAI API&lt;/code&gt; 密钥，才能使用；有感兴趣的网友，对两者进行了测试，认为 Cursor 的体验要略胜一筹。毫不疑问，如今的 AI 已强大非常，可以帮各种用户做更多工作；推荐有条件的朋友，可以用起来，以提升效率、节省时间、启发灵感。如果您对 Cursor 感兴趣，可移步至 &lt;a href=&quot;https://github.com/getcursor/cursor&quot;&gt;Github 开源仓库&lt;/a&gt;从而了解更多。&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/642573d62d6c9c63445c835c&quot;&gt;倾城之链 - Cursor | Build Fast&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/%E6%95%B0%E6%8D%AE%E5%BA%93&quot;&gt;&lt;code&gt;数据库&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E6%90%9C%E7%B4%A2&quot;&gt;&lt;code&gt;搜索&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/AI&quot;&gt;&lt;code&gt;AI&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Weaviate is an open-source vector database. It allows you to store data objects and vector embeddings from your favorite ML-models, and scale seamlessly into billions of data objects.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/weaviate.io.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 - Welcome | Weaviate - vector database&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/redirect?url=https://weaviate.io/&quot;&gt;Weaviate&lt;/a&gt; 是一个基于向量搜索 (vector search) 和自然语言处理 (NLP) 技术的开源向量数据库。它不仅可以存储、管理和查询向量，还可以自动学习向量之间的关系和上下文，从而支持更智能的搜索和推荐。Weaviate 具有如下功能特征：&lt;/p&gt;&lt;h3 id=&quot;矢量搜索&quot;&gt;&lt;a href=&quot;#%E7%9F%A2%E9%87%8F%E6%90%9C%E7%B4%A2&quot; aria-label=&quot;矢量搜索 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;矢量搜索&lt;/h3&gt;&lt;p&gt;无论您是自带向量还是使用其中一个向量化模块，您都可以为数十亿个数据对象建立索引以进行搜索。&lt;/p&gt;&lt;h3 id=&quot;混合搜索&quot;&gt;&lt;a href=&quot;#%E6%B7%B7%E5%90%88%E6%90%9C%E7%B4%A2&quot; aria-label=&quot;混合搜索 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;混合搜索&lt;/h3&gt;&lt;p&gt;结合多种搜索技术，例如基于关键字的搜索和矢量搜索，以提供最先进的搜索体验。&lt;/p&gt;&lt;h3 id=&quot;生成搜索&quot;&gt;&lt;a href=&quot;#%E7%94%9F%E6%88%90%E6%90%9C%E7%B4%A2&quot; aria-label=&quot;生成搜索 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;生成搜索&lt;/h3&gt;&lt;p&gt;通过 GPT-3 等 LLM 模型输送搜索结果来改进您的搜索结果，以创建下一代搜索体验。&lt;/p&gt;&lt;h3 id=&quot;超越搜索&quot;&gt;&lt;a href=&quot;#%E8%B6%85%E8%B6%8A%E6%90%9C%E7%B4%A2&quot; aria-label=&quot;超越搜索 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;超越搜索&lt;/h3&gt;&lt;p&gt;Weaviate 支持闪电般快速的矢量搜索，但它的功能远不止于此。它的其他一些超能力包括推荐、总结以及与神经搜索框架的集成。&lt;/p&gt;&lt;p&gt;官方网站 &lt;a href=&quot;https://nicelinks.site/redirect?url=https://weaviate.io/&quot;&gt;Weaviate&lt;/a&gt; 提供了丰富的文档资料、教程和示例代码，可以帮助开发者更好地理解和使用 Weaviate。同时，官网还提供了 Weaviate Playground 工具，可以在线试用和体验 Weaviate 的功能和接口。&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://nicelinks.site/redirect?url=https://weaviate.io/&quot;&gt;Weaviate&lt;/a&gt; 的应用场景非常广泛，可以用于各种不同的领域，如企业搜索、医疗健康、金融服务、新闻媒体等。它可以帮助企业和机构快速地找到所需的信息和数据，提高工作效率和准确率。同样地，在医疗和健康领域，它可以帮助医生和研究人员快速地查找和分析相关文献和数据，支持疾病预防和诊断。&lt;/p&gt;&lt;p&gt;总之， &lt;a href=&quot;https://nicelinks.site/redirect?url=https://weaviate.io/&quot;&gt;Weaviate&lt;/a&gt; 提供了丰富的文档和的资源，帮助用户更好地理解 Weaviate 数据库的功能和优势，从而支持开发者快速构建智能应用，提高数据查询和处理的准确率。同时，由于 Weaviate 是开源项目，用户可以在 &lt;a href=&quot;https://github.com/weaviate/weaviate&quot;&gt;GitHub 上获取其源代码&lt;/a&gt; ，并对其进行自定义和扩展。&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/6422e0762d6c9c63445c73ed&quot;&gt;倾城之链 - Welcome | Weaviate - vector database&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/JavaScript&quot;&gt;&lt;code&gt;JavaScript&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E5%B7%A5%E5%85%B7&quot;&gt;&lt;code&gt;工具&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91&quot;&gt;&lt;code&gt;前端开发&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;JavaScript Obfuscator is a free online tool that obfuscates your source code, preventing it from being stolen and used without permission.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/obfuscator.io.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 - JavaScript Obfuscator Tool&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/redirect?url=https://obfuscator.io/&quot;&gt;JavaScript Obfuscator Tool&lt;/a&gt; ，是一个在线代码混淆工具，免费且高效；它可以将 &lt;a href=&quot;https://nicelinks.site/tags/JavaScript&quot;&gt;JavaScript&lt;/a&gt; 、 &lt;a href=&quot;https://nicelinks.site/tags/CSS&quot;&gt;CSS&lt;/a&gt; 和 &lt;a href=&quot;https://nicelinks.site/tags/HTML&quot;&gt;HTML&lt;/a&gt; 代码进行混淆，从而防止源代码被恶意利用或破解。它提供了多种混淆选项，如随机变量名、删除空格、注释等等，以此增加被攻击者解密的难度，提高代码的安全性。同时，该工具还支持在线预览和多款编码风格的选择，可以方便地查看和选择混淆后的代码风格，以及调整混淆程度。&lt;/p&gt;&lt;p&gt;值得一提的是，该网站的服务是基于&lt;strong&gt;加密算法&lt;/strong&gt;实现的，因此不需要上传代码即可进行混淆，确保了用户的代码的隐私和安全（这也是跟类似产品如 UglifyJS、Closure Compiler 不同的地方）。另外，该网站还提供了 Chrome 插件，可以在开发过程中直接使用，非常方便。&lt;/p&gt;&lt;p&gt;需要注意的是，代码混淆只能增加被攻击者破解的难度，但并不能完全保证代码不被破解。高度复杂的代码混淆对代码的可读性和可维护性也会带来影响。因此，在实际开发中，需要根据实际情况选择适当的混淆方式。同时，还需要采取其他安全措施，如加密和防火墙等，以提高代码的安全性。&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/6422da402d6c9c63445c7319&quot;&gt;倾城之链 - JavaScript Obfuscator Tool&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/%E5%B7%A5%E5%85%B7&quot;&gt;&lt;code&gt;工具&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E5%B9%B3%E5%8F%B0&quot;&gt;&lt;code&gt;平台&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E5%B7%A5%E5%85%B7%E7%AE%B1&quot;&gt;&lt;code&gt;工具箱&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;关键字&lt;/strong&gt;：工具平台，帮小忙&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;帮小忙，腾讯 QQ 浏览器工具箱平台。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/tool.browser.qq.com.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 -  帮小忙，腾讯QQ浏览器在线工具箱平台 &quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/redirect?url=https://tool.browser.qq.com/&quot;&gt;帮小忙&lt;/a&gt; ，友腾讯 QQ 浏览器团队推出的在线工具箱平台，功能较为齐全，有图片加水印、数据换算、生活娱乐、教育、文本工具、证件生成、、文字提取、今天吃什么、亲戚关系计算、字帖生成、文档转换、开发工具、视频和 PDF 转换工具等等，分免费的和限时免费。类似工具聚合平台较多，诸如 &lt;a href=&quot;https://nicelinks.site/post/5a5cc0b60aee782ded3e7b6b&quot;&gt;在线工具 - 程序员的工具箱&lt;/a&gt; 、 &lt;a href=&quot;https://nicelinks.site/post/62727acd7d02b74eba0f09d9&quot;&gt;即时工具-致力打造即用即走型在线工具箱&lt;/a&gt; 等等，您可按需选择典藏、使用。&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/641e8f67abfccb2329b4e383&quot;&gt;倾城之链 - 帮小忙，腾讯QQ浏览器在线工具箱平台&lt;/a&gt;&lt;/p&gt;&lt;p&gt;对倾城之链感兴趣的朋友，可通过 Web，小程序，快应用等渠道进行访问(后续将支持更多，如 VsCode 插件，Chrome 扩展等)。您有任何问题，欢迎随时向我们反馈（您可以通过官网反馈渠道，或添加如下客服微信），🤲 。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://image.nicelinks.site/%E5%80%BE%E5%9F%8E%E4%B9%8B%E9%93%BE-%E5%BE%AE%E4%BF%A1-mini.jpeg&quot; alt=&quot;倾城之链 - 客服微信&quot;/&gt;&lt;/p&gt;&lt;h2 id=&quot;本期文末寄语&quot;&gt;&lt;a href=&quot;#%E6%9C%AC%E6%9C%9F%E6%96%87%E6%9C%AB%E5%AF%84%E8%AF%AD&quot; aria-label=&quot;本期文末寄语 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;本期文末寄语&lt;/h2&gt;&lt;p&gt;风急天高猿啸哀，渚清沙白鸟飞回。&lt;br/&gt;无边落木萧萧下，不尽长江滚滚来。&lt;br/&gt;万里悲秋常作客，百年多病独登台。&lt;br/&gt;艰难苦恨繁霜鬓，潦倒新停浊酒杯。&lt;br/&gt;── 唐朝 · 杜甫 《登高》&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://nicelinks.site/?utm_source=weekly&quot;&gt;倾城之链&lt;/a&gt;作为一个开放平台，旨在云集全球&lt;strong&gt;优秀网站&lt;/strong&gt;，探索互联网中更广阔的世界；在这里，你可以轻松发现、学习、分享更多有用或有趣的事物。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://image.nicelinks.site/nicelinks-miniprogram-code.jpeg?imageView2/1/w/250/h/250/interlace/1/ignore-error/1&quot; alt=&quot;小程序码 - 倾城之链&quot;/&gt;&lt;/p&gt;&lt;h2 id=&quot;您可能感兴趣的文章&quot;&gt;&lt;a href=&quot;#%E6%82%A8%E5%8F%AF%E8%83%BD%E6%84%9F%E5%85%B4%E8%B6%A3%E7%9A%84%E6%96%87%E7%AB%A0&quot; aria-label=&quot;您可能感兴趣的文章 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;您可能感兴趣的文章&lt;/h2&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>cffd6fbe4b8407d98521c18aa98e1b63</guid>
<title>鲵凹凹：凹语言电子化身自我介绍_哔哩哔哩_bilibili</title>
<link>https://toutiao.io/k/vw61npv</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div id=&quot;v_desc&quot; class=&quot;video-desc-v1&quot; data-v-6c6a5aea=&quot;&quot;&gt;&lt;p class=&quot;desc-info desc-v2&quot;&gt;&lt;span class=&quot;desc-info-text&quot;&gt;鲵凹凹 是国产编程语言 凹语言 的电子化身，它的形象源自中国大鲵（娃娃鱼）。
凹语言是一门面向WebAssembly设计的、开源的、静态数据类型的、编译型国产开源通用编程语言。
官方网站：https://www.wa-lang.org
仓库地址：https://gitee.com/wa-lang/wa&lt;/span&gt;&lt;/p&gt;&lt;p report-id=&quot;abstract_unspread&quot; class=&quot;toggle-btn&quot;&gt;&lt;span&gt;收起&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>f9b1596bd0e7a0a3bf6140b1804c1674</guid>
<title>连接 AI，NebulaGraph Python ORM 项目 Carina 简化 Web 开发</title>
<link>https://toutiao.io/k/ol4fi9h</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;post&quot; itemprop=&quot;articleBody&quot;&gt;
          &lt;p&gt;&lt;img src=&quot;https://nebula-website-cn.oss-cn-hangzhou.aliyuncs.com/nebula-blog/nebula-python-orm.jpg&quot; alt=&quot;&quot; role=&quot;presentation&quot;/&gt;&lt;/p&gt;
&lt;p&gt;作者：Steam &amp;amp; Hao&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;本文整理自社区第 7 期会议中 13‘21″ 到 44’11″ 的 Python ORM 的分享，视频见 &lt;a href=&quot;https://www.bilibili.com/video/BV1s8411N7Cw&quot;&gt;https://www.bilibili.com/video/BV1s8411N7Cw&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在做业务开发时，NebulaGraph Python ORM 项目作者：Sword Elucidator（下文简称：Hao）发现图数据库在某些场景下有比较不错的应用实践，而 NebulaGraph 是他觉得不错、较为先进的一款图数据库产品。在 Hao 的开发过程中，他发现：虽然&lt;a href=&quot;https://discuss.nebula-graph.com.cn/c/blog/47-category/47&quot;&gt;图数据库被应用在多个业务场景&lt;/a&gt;中，但对于像是 App 开发之类的 ISO/OSI 高层实践的话，nebula-python 之类的客户端就略显笨重。&lt;/p&gt;
&lt;p&gt;而 ORM 作为一个能简化 CURD 操作、免去繁琐的查询语句编写的存在，是被广大的 Web 开发者所熟知。但是，目前 NebulaGraph 社区有 Golang 版本的 ORM &lt;a href=&quot;https://github.com/zhihu/norm&quot;&gt;norm&lt;/a&gt;、Java ORM &lt;a href=&quot;https://github.com/nebula-contrib/ngbatis&quot;&gt;NGBatis&lt;/a&gt; 和 &lt;a href=&quot;https://github.com/nebula-contrib/graph-ocean&quot;&gt;graph-ocean&lt;/a&gt; 唯独没有 Hao 所熟悉的 Python 语言的 ORM。&lt;/p&gt;
&lt;p&gt;于是，做一个 NebulaGraph Python ORM 的想法便诞生了。&lt;/p&gt;
&lt;h2&gt;
&lt;a name=&quot;nebulagraph-python-orm-1&quot; class=&quot;anchor&quot; href=&quot;#nebulagraph-python-orm-1&quot;/&gt;NebulaGraph Python ORM&lt;/h2&gt;
&lt;h3&gt;
&lt;a name=&quot;nebula-carina-2&quot; class=&quot;anchor&quot; href=&quot;#nebula-carina-2&quot;/&gt;Nebula Carina 名字的由来&lt;/h3&gt;
&lt;p&gt;NebulaGraph Python ORM，又名 &lt;a href=&quot;https://github.com/nebula-contrib/nebula-carina&quot;&gt;nebula-carina&lt;/a&gt;，虽然目前只是一个雏形，但是已经基本上具备了一个 ORM 的基础功能。在命名 Python ORM 项目之时，Hao 先想到了 nebula-model，见名便知这是一个 ORM，搞了一些封装。但它不够优雅（&lt;s&gt;cool&lt;/s&gt;），所以 nebula-carina 便诞生了。&lt;/p&gt;
&lt;p&gt;Carina 船底座，/kəˈriːnə/，意为龙骨，是南半球可见最大的星云。而一个组件能成为一个 Nebula（星云）还挺酷的。&lt;/p&gt;
&lt;h3&gt;
&lt;a name=&quot;python-orm-3&quot; class=&quot;anchor&quot; href=&quot;#python-orm-3&quot;/&gt;Python ORM 功能设计&lt;/h3&gt;
&lt;p&gt;Nebula Carina 是用 Python 开发的针对 NebulaGraph + Python 的 ORM 框架。在设计上没有局限于 Web 框架，因此可以被应用在 Django、FastAPI 和 Flask 等主流框架上。&lt;/p&gt;
&lt;p&gt;目前，Nebula Carina 包含了常规的 schema 定义、对象管理器 object manager（雏形）、Model Builder（雏形），以及常见的图语言、MATCH 语句封装。雏形的意思是，这些功能具备了，但是暂时只有一、两个方法在里面，欢迎阅读本文的你一起来完善。除了基础功能之外，Nebula Carina 还支持了简单的 migration 功能，能够自动计算 schema model 结构与 DB schema 的差异，并同步 schema 到当前 space。但相较于其他成熟的 ORM 项目，例如：Django ORM，Nebula Carina 缺少可回溯性及树状结构来支持 migration 包含依赖、merge 数据。所以，Nebula Carina 未来考虑设计和支持包含依赖关系的 migration 系统。如果你对此有兴趣的话，欢迎来项目：&lt;a href=&quot;https://github.com/nebula-contrib/nebula-carina&quot;&gt;https://github.com/nebula-contrib/nebula-carina&lt;/a&gt; issue 区交流下。&lt;/p&gt;
&lt;h3&gt;
&lt;a name=&quot;python-orm-4&quot; class=&quot;anchor&quot; href=&quot;#python-orm-4&quot;/&gt;Python ORM 的神奇之处&lt;/h3&gt;
&lt;p&gt;上面简单说了下 Nebula Carina 是什么，有什么功能。在这里，我们来解决下“为什么要用 Nebula Carina”的问题。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Nebula Carina 首要应对的问题是快速解决轻量级 App 开发的常规需求&lt;/strong&gt;，虽然 NebulaGraph 具有极好的性能，诸如美团、快手等大企业都在使用。但大企业和小公司不同，大企业用图数据库会用非常重，像美团就直接开发了个图平台对接集团上百的业务线。而小公司的轻量级应用来说，它需要一个快速地生成简洁 schema。小公司的 Web 开发人员能非常容易地定义常用的、供于业务逻辑使用的 schema，再一键快速将 schema 同步到 space，而不需要去写些 SQL（这里指的是查询语句）来处理这些事项。此外，应对小公司的轻量级 App 开发需求，还需要支持 JSON 序列化和逆序列化来简化接口，不需要在接口处封装各类东西。最后，也是最重要的，为什么不用 Golang 之类的语言 ORM。Nebula Carina 采用了易于使用的 Python Data Model。Python 使用人员可以方便地用 Python 来调用、控制程序，像是打印，或者是在 Python Model 里面将 Dictionary 展开时拥有的 fields 都可以符合标准 Python 规范进行使用。&lt;/p&gt;
&lt;p&gt;此外，除了适用于任何的 Python Web Framework，Nebula Carina 也适用于裸 Python 开发，可与 AI 行业快速集成。毕竟像是 Machine Learning 之类的，十有八九是 Python 语言搞的，Nebula Carina 就可以轻松应用在 GNN、NLP 这些用图数据比较多的技术领域。&lt;/p&gt;
&lt;p&gt;总之，Nebula Carina 让 Python 开发者使用 NebulaGraph 时能把更多精力运用在业务/模型上，而非繁琐的数据库操作。&lt;/p&gt;
&lt;h3&gt;
&lt;a name=&quot;python-orm-5&quot; class=&quot;anchor&quot; href=&quot;#python-orm-5&quot;/&gt;Python ORM 设计实现&lt;/h3&gt;
&lt;p&gt;目前，Carina 的实现比较简单粗暴，由 4 个部分组成：&lt;strong&gt;settings&lt;/strong&gt;、&lt;strong&gt;nGQL 层&lt;/strong&gt;、&lt;strong&gt;model 层&lt;/strong&gt;和&lt;strong&gt;其他&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://nebula-website-cn.oss-cn-hangzhou.aliyuncs.com/nebula-blog/nebula-carina-feature.png&quot; alt=&quot;&quot; role=&quot;presentation&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;settings&lt;/strong&gt;，搞环境变量。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;nGQL 层&lt;/strong&gt;，有 connection、query、record、schema 和 statement：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;query，主要是 condition / match / … 语句封装&lt;/li&gt;
&lt;li&gt;record，主要是 vertex / edge 语句封装&lt;/li&gt;
&lt;li&gt;schema，封装了 Data Types、schema 语句、space 语句封装&lt;/li&gt;
&lt;li&gt;statements，主要是 Order By、Limit、Edge 定义、Edge Value、TTL、Alter 等 statements 的语句封装，statement 的意思是 state 某类行为；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;model 层&lt;/strong&gt;，主要是调用 nGQL 层的封装的 class 和当中的方法，来解决一些具体上层的问题。它包括 nebula-python 的 vertex / edge 转成 Carina 的 vertex model / edge model 的 &lt;strong&gt;protocol&lt;/strong&gt;，以及 field 和 model（schema model &amp;amp; data model）的封装，同绝大数编程语言的 ORM 类似，定义成某类语言常见的 class 进行封装，参见下方 Figure 类的示例说明；&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-python&quot;&gt;class Figure(models.TagModel):
    name: str = _(data_types.FixedString(30), ..., )
    age: int = _(data_types.Int16, ..., )
    valid_until: int = _(data_types.Int64, None, )
    hp: int = _(data_types.Int16, 100, )
    style: str = _(data_types.FixedString(10), &#x27;rap&#x27;, )
    is_virtual: bool = _(data_types.Bool, True)
    created_on: datetime = _(data_types.Datetime, data_types.Datetime.auto)
    some_dt: datetime = _(data_types.Datetime, datetime(2022, 1, 1))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;上述示例代码，用 Figure class 继承 TagModel，在当中定义 tag 所需的这些 field，比如：name、age…Carina 就是采用这种方式来处理 NebulaGraph 中 Schema 结构；&lt;/p&gt;
&lt;p&gt;model 层中的 model builder 则是位于 nGQL 和纯 model 层之间的桥梁。它可以用来描述高层和低层之间的某种行为，比如说，下面的代码就定义了一个全局 MATCH 语句，而所有的 MATCH 语句都会走这样一个函数同 nGQL 层交互：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-python&quot;&gt;def match(
    pattern: str, to_model_dict: dict[str, Type[NebulaConvertableProtocol]],
    *, distinct_field: str = None,
    condition: Condition = None, order_by: OrderBy = None, limit: Limit = None
) -&amp;gt; Iterable[SingleMatchResult]:  # should be model
    output = &#x27;, &#x27;.join(
    (&quot;DISTINCT &quot; if key == distinct_field else &quot;&quot;) + key
    for key in to_model_dict.keys()
)
results = match(pattern, output, condition, order_by, limit)
return (
    SingleMatchResult({
        key: to_model_dict[key].from_nebula_db_cls(value.value)
        for key, value in zip(results.keys(), row.values) if key in to_model_dict
    }) for row in results.rows()
) 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;而 model 层的 object manager 会根据应用场景，基于 schema 为出发点，对 model builder 具体 match 语句进行操作，对这些操作行为搞了个高级封装；migrations 则负责封装 schema model 的变更并同步给数据库；&lt;/p&gt;
&lt;p&gt;在&lt;strong&gt;其他模块&lt;/strong&gt;，则是 Django 适配的 apps 和 setting。因为要支持 Django，它的思路同 FastAPI 不同，所以需要做适配来让 Carina 无缝衔接 Django；&lt;/p&gt;
&lt;h2&gt;
&lt;a name=&quot;nebula-carina-6&quot; class=&quot;anchor&quot; href=&quot;#nebula-carina-6&quot;/&gt;Nebula Carina 使用&lt;/h2&gt;
&lt;p&gt;下面举些例子来让大家了解下 Carina 的使用，主要还是摘录自 Carina 的 README：&lt;a href=&quot;https://github.com/nebula-contrib/nebula-carina&quot;&gt;https://github.com/nebula-contrib/nebula-carina&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
&lt;a name=&quot;nebula-carina-7&quot; class=&quot;anchor&quot; href=&quot;#nebula-carina-7&quot;/&gt;安装 Nebula Carina&lt;/h3&gt;
&lt;p&gt;一句命令搞定&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-shell&quot;&gt;pip install nebula-carina
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果你用的是 Django，那么需要将 nebula_carina 添加到 INSTALLED_APPS，像是这样：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-shell&quot;&gt;INSTALLED_APPS = [
    ...
    &#x27;nebula_carina&#x27;,
    ...
]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;再在 &lt;code&gt;settings.py&lt;/code&gt; 文件中设置 CARINA_SETTINGS，主要配置一些同 NebulaGraph 有关的信息。像是这样：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-shell&quot;&gt;CARINA_SETTINGS = {
    &quot;auto_create_default_space_with_vid_desc&quot;: &quot;FIXED_STRING(20)&quot;, #创建默认图空间
    &quot;default_space&quot;: &quot;main&quot;, #图空间名
    &quot;max_connection_pool_size&quot;: 10, #连接数大小
    &quot;model_paths&quot;: [&quot;nebula.carina&quot;], #model 路径
    &quot;user_name&quot;: &quot;root&quot;, #登陆 NebulaGraph 的用户名
    &quot;password&quot;: &quot;1234&quot;, #登陆 NebulaGraph 的密码
    &quot;servers&quot;: [&quot;192.168.31.248:9669&quot;], # NebulaGraph graphd 服务所在服务器信息，可配置多个
    &quot;timezone_name&quot;: &quot;UTC&quot;, #服务器所用时区
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;目前 Carina 只有支持上述信息，后续会再增加其他字段。&lt;/p&gt;
&lt;p&gt;如果你用的是 FastAPI 之类的，用环境变量即可，具体的话可以参考项目文档：&lt;a href=&quot;https://github.com/nebula-contrib/nebula-carina#by-environment-variables&quot;&gt;https://github.com/nebula-contrib/nebula-carina#by-environment-variables&lt;/a&gt;。&lt;/p&gt;
&lt;h3&gt;
&lt;a name=&quot;h-8&quot; class=&quot;anchor&quot; href=&quot;#h-8&quot;/&gt;图空间创建&lt;/h3&gt;
&lt;p&gt;你可以通过下面 Python 语句来创建 Space，当然你也可以像上面 CARINA_SETTINGS 一样，用 &lt;code&gt;&quot;auto_create_default_space_with_vid_desc&quot;: &quot;FIXED_STRING(20)&quot;&lt;/code&gt; 自动创建一个默认图空间。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-python&quot;&gt;from nebula_carina.ngql.schema.space import create_space, show_spaces, VidTypeEnum

main_space_name = &quot;main&quot;

if main_space_name not in show_spaces():
    create_space(main_space_name, (VidTypeEnum.FIXED_STRING, 20))
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;
&lt;a name=&quot;schema-9&quot; class=&quot;anchor&quot; href=&quot;#schema-9&quot;/&gt;点边 schema 定义&lt;/h3&gt;
&lt;p&gt;同点 vertex 不同，一条边只有一个 edgetype，而一个点可以拥有多个 tag。所以在 Carina 中，Model 层的封装，&lt;code&gt;models.py&lt;/code&gt; 文件里引入了 &lt;code&gt;VirtualCharacter&lt;/code&gt; 的概念，在 &lt;code&gt;VirtualCharacter&lt;/code&gt; 类里，定义这个点拥有那些 tag。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-python&quot;&gt;class VirtualCharacter(models.VertexModel):
    figure: Figure
    source: Source
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;一个 &lt;code&gt;figure&lt;/code&gt; 就是一个 tag，&lt;code&gt;source&lt;/code&gt; 是另外一个 tag 的名字。这里 Figure 和 Source 都是具体的某个 tag 在 Carina 中的映射类名，在示例中，它就叫 Figure、Source。&lt;/p&gt;
&lt;h3&gt;
&lt;a name=&quot;h-10&quot; class=&quot;anchor&quot; href=&quot;#h-10&quot;/&gt;点边数据操作&lt;/h3&gt;
&lt;p&gt;上文提过 &lt;code&gt;VirtualCharacter&lt;/code&gt; 的概念，在 Data Model Mathod 里，像下面这种代码：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-auto&quot;&gt;VirtualCharacter(
    vid=&#x27;char_test1&#x27;, figure=Figure(
        name=&#x27;test1&#x27;, age=100, is_virtual=False, some_dt=datetime(2021, 3, 3, 0, 0, 0, 12)
    ), source=Source(name=&#x27;movie1&#x27;)
).save()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;是定义了一个 VID（唯一标识）为 char_test1 的点，它拥有个名为 Figure 的 tag，这个 tag 中有 name、age、is_virtual 之类的属性。此外，它还有一个 tag Source，Source tag 的属性 name 是 movie1。而 .save() 则是保存这段代码。&lt;/p&gt;
&lt;p&gt;同点类似，边的定义是这样的：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-python&quot;&gt;EdgeModel(src_vid=&#x27;char_test1&#x27;, dst_vid=&#x27;char_test2&#x27;, ranking=0, edge_type=Love(way=&#x27;gun&#x27;, times=40)).save()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这个语句主要表达了一条边的起点是 char_test1，终点是 char_test2，边的 rank 是 0，类型是 Love。而 Love 边类型有 2 个属性 way 和 times，&lt;img src=&quot;https://discuss-cdn.nebula-graph.com.cn/images/emoji/apple/joy.png?v=12&quot; title=&quot;:joy:&quot; class=&quot;emoji&quot; alt=&quot;:joy:&quot; loading=&quot;lazy&quot;/&gt; 也许这是一对相杀相爱的恋人，滚了 40 次。&lt;/p&gt;
&lt;h2&gt;
&lt;a name=&quot;nebula-carina-11&quot; class=&quot;anchor&quot; href=&quot;#nebula-carina-11&quot;/&gt;Nebula Carina 再升级&lt;/h2&gt;
&lt;p&gt;因为个人能力有限，在这里希望借助大家的力量。对 Nebula Carina 的未来规划，主要集中在这些方面&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;connection pool (v3.3.0)&lt;/li&gt;
&lt;li&gt;Indexes&lt;/li&gt;
&lt;li&gt;Go / Fetch /  Lookup statements封装&lt;/li&gt;
&lt;li&gt;Bulk操作封装&lt;/li&gt;
&lt;li&gt;Generic Vertex Model&lt;/li&gt;
&lt;li&gt;advanced migrations&lt;br/&gt;
…&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;nebula-python 在 v3.3.0 中对 connection pool 做了原生支持，希望在未来 Carina 能结合这块内容更加完善。&lt;/p&gt;
&lt;p&gt;再者就是索引，上面其实提到过，Carina 目前就封装了 MATCH 语句，后续将会对 LOOKUP、GO、FETCH 之类的 statement 字句进行封装。&lt;/p&gt;
&lt;p&gt;然后是 Bulk 操作的封装，可以处理一次性创建大量数据。&lt;/p&gt;
&lt;p&gt;Generic Vertex Model 则是再抽象 vertex，用户不需要告诉程序它想得到什么样的 vertex，它的结构是如何的。直接通过虚拟结构进行定义，像是上面提到的 Figuer 和 Source，现在我不定义了，Generic Vertex Model 可以把这块抽象好，自己就搞定了。&lt;/p&gt;
&lt;p&gt;最后，之前也提到过的 advanced migrations，树状的 migration 可以搞定依赖关系。&lt;/p&gt;
&lt;p&gt;以上，便是 Hao 贡献的 NebulaGraph Python ORM 的简单介绍。如果你有改进、优化它的 idea，欢迎来 Carina issue 和 pr 区交流哟 &lt;a href=&quot;https://github.com/nebula-contrib/nebula-carina/issues/new&quot;&gt;https://github.com/nebula-contrib/nebula-carina/issues/new&lt;/a&gt;~&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;&lt;strong&gt;谢谢你读完本文&lt;/strong&gt; (///▽///)&lt;/p&gt;
&lt;p&gt;NebulaGraph Desktop，Windows 和 macOS 用户安装图数据库的绿色通道，10s 拉起搞定海量数据的图服务。通道传送门：&lt;a href=&quot;http://c.nxw.so/c0svX&quot; class=&quot;inline-onebox&quot;&gt;入门概览 - NebulaGraph Database 手册&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;想看源码的小伙伴可以前往 GitHub 阅读、使用、(^з^)-☆ star 它 → &lt;a href=&quot;http://c.nxw.so/8yTlk&quot;&gt;GitHub&lt;/a&gt;；和其他的 NebulaGraph 用户一起交流图数据库技术和应用技能，留下&lt;a href=&quot;http://c.nxw.so/9jvQN&quot;&gt;「你的名片」&lt;/a&gt;一起玩耍呢~&lt;/p&gt;
        &lt;/div&gt;

        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>42a7eb3f942c6e7f780f1b7fe2d47bc5</guid>
<title>官方文档 | 【JVM调优体系】「GC底层调优实战」XPocket为终结性能问题而生 — 可以试试看_洛神灬殇的博客-CSDN博客</title>
<link>https://toutiao.io/k/y74nf9w</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div id=&quot;content_views&quot; class=&quot;markdown_views prism-atom-one-dark&quot;&gt;
                    &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;
                        &lt;path stroke-linecap=&quot;round&quot; d=&quot;M5,0 0,2.5 5,5z&quot; id=&quot;raphael-marker-block&quot;/&gt;
                    &lt;/svg&gt;
                    &lt;h1&gt;&lt;a id=&quot;XPocket__0&quot;/&gt;XPocket 用户文档&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/img_convert/f5bd00dea58a57cbcd2ea5c410e3f3e8.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;XPocket&lt;/code&gt; 是PerfMa为终结性能问题而生的开源的插件容器，它是性能领域的乐高，将定位或者解决各种性能问题的常见的Linux命令，JDK工具，知名性能工具等适配成各种XPocket插件，并让它们可以相互联动一键解决特定的性能问题。 目前XPocket插件生态已经实现了HSDB、JDB、JConsole、Perf、Arthas等多个优秀的开源性能工具的插件化集成，现阶段主要侧重性能领域。&lt;/p&gt; 
&lt;p&gt;当你遇到以下类似问题时，&lt;code&gt;XPocket&lt;/code&gt;可以帮助到你：&lt;/p&gt; 
&lt;ol&gt;&lt;li&gt;系统存在性能问题？&lt;/li&gt;&lt;li&gt;问题排查时一头雾水，无从下手？&lt;/li&gt;&lt;li&gt;使用一个新的工具，下载、文档、安装完就下班了？&lt;/li&gt;&lt;li&gt;好不容易用起来，只因输出不合理就又要去找新工具？&lt;/li&gt;&lt;li&gt;有些自己实现的小工具散落各处？&lt;/li&gt;&lt;li&gt;排查过的问题记不记住全凭脑子？&lt;/li&gt;&lt;/ol&gt; 
&lt;p&gt;&lt;code&gt;XPocket&lt;/code&gt;支持JDK 8+，支持Linux/Mac/Windows，采用命令行交互模式，提供丰富的 &lt;code&gt;Tab&lt;/code&gt; 自动补全功能，支持管道操作。&lt;/p&gt; 
&lt;h2&gt;&lt;a id=&quot;_16&quot;/&gt;插件开源生态&lt;/h2&gt; 
 
&lt;h2&gt;&lt;a id=&quot;XPocket_26&quot;/&gt;XPocket在线教程&lt;/h2&gt; 
 
&lt;h2&gt;&lt;a id=&quot;XPocket_30&quot;/&gt;XPocket官方网站&lt;/h2&gt; 
 
&lt;h2&gt;&lt;a id=&quot;XPocket_34&quot;/&gt;XPocket插件中心&lt;/h2&gt; 
 
&lt;h2&gt;&lt;a id=&quot;_40&quot;/&gt;快速开始&lt;/h2&gt; 
&lt;h3&gt;&lt;a id=&quot;1_42&quot;/&gt;1.下载模拟程序，解压并运行&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;prism language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;wget&lt;/span&gt; https://a.perfma.net/xpocket/download/XPocket-demo.tar.gz
&lt;span class=&quot;token function&quot;&gt;tar&lt;/span&gt; -xvf  XPocket-demo.tar.gz
&lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; simulator
&lt;span class=&quot;token function&quot;&gt;sh&lt;/span&gt; run.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;a id=&quot;2xpocket_50&quot;/&gt;2.下载xpocket，然后解压并运行&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;prism language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;wget&lt;/span&gt; https://a.perfma.net/xpocket/download/XPocket.tar.gz
&lt;span class=&quot;token function&quot;&gt;tar&lt;/span&gt; -xvf  XPocket.tar.gz
&lt;span class=&quot;token function&quot;&gt;sh&lt;/span&gt; xpocket/xpocket.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;启动成功后如下所示&lt;br/&gt; [外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-6NJeWr3B-1680153824337)(resourse/start.png)]&lt;/p&gt; 
&lt;h3&gt;&lt;a id=&quot;3_60&quot;/&gt;3.使用插件&lt;/h3&gt; 
&lt;p&gt;1.查看插件列表&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;prism language-bash&quot;&gt;plugins
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;列表如下图所示&lt;br/&gt; [外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-tqrBCUFX-1680153824342)(resourse/plugins.png)]&lt;/p&gt; 
&lt;p&gt;2.使用命令 use + pluginName 或者 use + pluginName@NameSpace 来使用插件，例&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;prism language-bash&quot;&gt;use jdb@JDK
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;a id=&quot;4_73&quot;/&gt;4.切换插件&lt;/h3&gt; 
&lt;ul&gt;&lt;li&gt;查看插件列表&lt;/li&gt;&lt;li&gt;使用 use + pluginName 或者 use + pluginName@NameSpace 来使用插件&lt;/li&gt;&lt;/ul&gt; 
&lt;h3&gt;&lt;a id=&quot;5_77&quot;/&gt;5.获取帮助&lt;/h3&gt; 
&lt;p&gt;利用help命令来获取更多帮助信息&lt;/p&gt; 
&lt;ul&gt;&lt;li&gt;获取插件相关的帮助信息 : help + pluginName@NameSpace ，例如。&lt;/li&gt;&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;prism language-bash&quot;&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;help&lt;/span&gt; jdb@JDK
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt;&lt;li&gt;获取命令相关的帮助信息 : help + pluginName.commandName （如果已经切换到插件的操作空间下，可以直接使用 help + commandName 的方式）,例如。&lt;/li&gt;&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;prism language-bash&quot;&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;help&lt;/span&gt; jdb.cont
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt;&lt;li&gt;切换到某个插件的操作空间下后，可以通过help命令查看当前插件的命令列表。&lt;/li&gt;&lt;/ul&gt; 
&lt;h3&gt;&lt;a id=&quot;6_92&quot;/&gt;6.管道操作&lt;/h3&gt; 
&lt;p&gt;场景：当前插件位于JConsole下，需要attach上我们的demo程序。&lt;/p&gt; 
&lt;ul&gt;&lt;li&gt; &lt;p&gt;常规操作（jps -&amp;gt; 获取demo程序的pid -&amp;gt; 使用attach命令attach目标进程）。&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;XPocket的管道操作只需一条命令即可（jps | grep demo | split -i 0 | attach），如下所示。&lt;br/&gt; [外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-SJhTXiLh-1680153824358)(resourse/pipe.png)]&lt;/p&gt; &lt;/li&gt;&lt;/ul&gt; 
&lt;h3&gt;&lt;a id=&quot;7_100&quot;/&gt;7.退出插件&lt;/h3&gt; 
&lt;p&gt;XPocket退出插件的方式很简单，只需要使用命令 &lt;code&gt;cd&lt;/code&gt; 即可，cd命令可以退出当前插件，使得当前的操作空间回到系统层，如下图所示。&lt;br/&gt; [外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-6Ii1H6kR-1680153824375)(resourse/cd.png)]&lt;/p&gt; 
&lt;h3&gt;&lt;a id=&quot;8XPocket_104&quot;/&gt;8.退出XPocket&lt;/h3&gt; 
&lt;p&gt;退出XPocket使用命令 &lt;code&gt;quit&lt;/code&gt; 即可，如下图所示&lt;/p&gt; 
&lt;p&gt;[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-TJ0IpaDM-1680153824383)(resourse/quit.jpg)]&lt;/p&gt; 
&lt;h2&gt;&lt;a id=&quot;_110&quot;/&gt;运行模式&lt;/h2&gt; 
&lt;h3&gt;&lt;a id=&quot;1_telnet_server_111&quot;/&gt;1. telnet server模式&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;prism language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sh&lt;/span&gt; xpocket.sh -run_mode telnet -port &lt;span class=&quot;token number&quot;&gt;9527&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt;&lt;li&gt;该模式会启动一个静默模式的XPocket，以对应端口的Telnet Server接受外部链接并使用，适用于远程执行操作的场景。&lt;/li&gt;&lt;/ul&gt; 
&lt;h3&gt;&lt;a id=&quot;2_run_once__117&quot;/&gt;2. run once 模式&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;prism language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sh&lt;/span&gt; xpocket.sh -run_mode once &lt;span class=&quot;token string&quot;&gt;&quot;echo test&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt;&lt;li&gt;该模式是启动XPocket运行完指定命令以后直接退出，适用于外部调用完成单次操作的场景。&lt;/li&gt;&lt;/ul&gt; 
&lt;h3&gt;&lt;a id=&quot;3_Java_Agent_123&quot;/&gt;3. Java Agent模式&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;prism language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sh&lt;/span&gt; xpocket.sh -run_mode agent-launcher -pid &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; -port &lt;span class=&quot;token number&quot;&gt;9527&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt;&lt;li&gt;该模式与telnet模式类似，但是是将XPocket整体作为一个Java Agent挂载到目标进程上运行，适用于容器类场景，并且可以获取更多JVM运行时信息。&lt;/li&gt;&lt;/ul&gt; 
&lt;h2&gt;&lt;a id=&quot;_129&quot;/&gt;插件开发&lt;/h2&gt; 
&lt;p&gt;详情请见&lt;a href=&quot;https://xpocket.perfma.com/docs/developer/&quot;&gt;开发者指南&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;a id=&quot;_133&quot;/&gt;现有插件&lt;/h2&gt; 
&lt;h3&gt;&lt;a id=&quot;HSDB_134&quot;/&gt;HSDB&lt;/h3&gt; 
&lt;h4&gt;&lt;a id=&quot;_135&quot;/&gt;简介&lt;/h4&gt; 
&lt;p&gt;探索JVM的运行时数据，强大的JVM运行时状态分析工具（注：由于jdk8以上开始实施模块化，导致HSDB与其的运行机制不兼容）。&lt;/p&gt; 
&lt;h4&gt;&lt;a id=&quot;_138&quot;/&gt;操作指南&lt;/h4&gt; 
&lt;pre&gt;&lt;code&gt;Command-Name                   Command-Description
  hsdb                         hsdb [path of sa-jdi.jar] start hsdb command line
  
Tips:
  only support Windows platform
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;更多操作以及介绍请参考&lt;a href=&quot;https://docs.oracle.com/javase/jp/8/docs/serviceabilityagent/sun/jvm/hotspot/HSDB.html&quot;&gt;官方介绍&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/perfma/xpocket-plugin-hsdb&quot;&gt;插件仓库&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://plugin.xpocket.perfma.com/plugin/54&quot;&gt;插件概况&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;a id=&quot;JDB_152&quot;/&gt;JDB&lt;/h3&gt; 
&lt;h4&gt;&lt;a id=&quot;_153&quot;/&gt;简介&lt;/h4&gt; 
&lt;p&gt;Java调试器（JDB）是Java类在命令行中调试程序的工具， 它实现了Java平台调试器体系结构， 它有助于使用Java调试接口（JDI）检测和修复Java程序中的错误。&lt;/p&gt; 
&lt;h4&gt;&lt;a id=&quot;_156&quot;/&gt;操作指南&lt;/h4&gt; 
&lt;pre&gt;&lt;code&gt; Command-Name                   Command-Description
   jdb                          jdb &amp;lt;options&amp;gt; &amp;lt;class&amp;gt; &amp;lt;arguments&amp;gt;

 Tips:
 1.使用jdb -help获取详细帮助信息。
 2.使用jdb -listconnectors 获取当前支持的所有连接器。
 3.可以使用例如 jdb -connect com.sun.jdi.SocketAttach:hostname=127.0.0.1,port=8000 链接已经开启debug模式的java进程。
 4.使用jdb -classspath .:$CLASS_PATH 来启动jdb会话（windows上需要使用;分隔多个路径），然后通过stop in/at 设置断点并使用run启动一个可以被debug的java进程。
 5.启动jdb会话以后也可以通过help命令获取详细帮助。
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;更多操作以及介绍请参考&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/technotes/tools/windows/jdb.html&quot;&gt;官方介绍&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/perfma/xpocket-plugin-jdb&quot;&gt;插件仓库&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://plugin.xpocket.perfma.com/plugin/56&quot;&gt;插件概况&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;a id=&quot;Perf_174&quot;/&gt;Perf&lt;/h3&gt; 
&lt;h4&gt;&lt;a id=&quot;_175&quot;/&gt;简介&lt;/h4&gt; 
&lt;p&gt;Perf功能强大，它可以检测CPU性能计数器，跟踪点，kprobes和uprobes（动态跟踪），它能够进行轻量级分析。它也包含在Linux内核的tools / perf下，并且经常更新和增强，&lt;br/&gt; Perf最初是在Linux中使用性能计数器子系统的工具，并且进行了各种增强以添加跟踪功能，更详细的内容请参考&lt;a href=&quot;https://perf.wiki.kernel.org/index.php/Main_Page&quot;&gt;Perf介绍&lt;/a&gt;。&lt;/p&gt; 
&lt;h4&gt;&lt;a id=&quot;_179&quot;/&gt;操作指南&lt;/h4&gt; 
&lt;pre&gt;&lt;code&gt;  Command-Name                   Command-Description
  config                         Get and set variables in a configuration file.
  context-switches               process context-switches detail
  page-faults                    process page-faults detail
  lock                           Analyze lock events
  ftrace                         simple wrapper for kernel&#x27;s ftrace functionality
  report                         Read perf.data (created by perf record) and display the profile
  analyze                        analyze process cpu usage
  record                         Run a command and record its profile into perf.data
  sched                          Tool to trace/measure scheduler properties (latencies)
  probe                          Define new dynamic tracepoints
  script                         Read perf.data (created by perf record) and display trace output
  version                        display the version of perf binary
  list                           List all symbolic event types
  annotate                       Read perf.data (created by perf record) and display annotated code
  create-java-perf-map           generate /tmp/perf-&amp;lt;pid&amp;gt;.map files for just-in-time(JIT)-compiled methods for use with perf
  stat                           Run a command and gather performance counter statistics
  proc-stat                      process performance stats
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Perf插件集成了PerfMa自己增加的几条命令如：analyze命令：&lt;br/&gt; analyze -p [pid] （-p 指定进程采集热点）&lt;br/&gt; analyze -detail 查看进程CPU热点抓取结果&lt;br/&gt; 同时支持perf原生的命令和参数，并且针对java程序集成了perf-map-agent 这个工具，可以协助显示java的调用栈信息.具体使用方式见命令的帮助信息(如 help analyze)&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/perfma/xpocket-plugin-perf&quot;&gt;插件仓库&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://plugin.xpocket.perfma.com/plugin/57&quot;&gt;插件概况&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;a id=&quot;Arthas_209&quot;/&gt;Arthas&lt;/h3&gt; 
&lt;h4&gt;&lt;a id=&quot;_210&quot;/&gt;简介&lt;/h4&gt; 
&lt;p&gt;Arthas 是Alibaba开源的Java诊断工具，深受开发者喜爱，支持JDK 6+，支持Linux/Mac/Windows，采用命令行交互模式，同时提供丰富的 Tab 自动补全功能，进一步方便进行问题的定位和诊断。&lt;/p&gt; 
&lt;h4&gt;&lt;a id=&quot;_213&quot;/&gt;操作指南&lt;/h4&gt; 
&lt;pre&gt;&lt;code&gt; Command-Name                   Command-Description
   attach                       attach [pid],attach a java process and start the Arthas server in localhost 3658,then connect it

 Tips:
 Arthas allows developers to troubleshoot production issues for Java applications without modifying code or restarting servers.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;XPocket管控了Arthas在attach进程之前的输入输出，attach之后的具体使用请参考&lt;a href=&quot;https://arthas.aliyun.com/doc/&quot;&gt;Arthas官方文档&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/alibaba/arthas&quot;&gt;Arthas&lt;/a&gt;&lt;br/&gt; &lt;a href=&quot;https://github.com/perfma/xpocket-plugin-arthas&quot;&gt;插件仓库&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://plugin.xpocket.perfma.com/plugin/52&quot;&gt;插件概况&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;a id=&quot;JConsole_229&quot;/&gt;JConsole&lt;/h3&gt; 
&lt;h4&gt;&lt;a id=&quot;_230&quot;/&gt;简介&lt;/h4&gt; 
&lt;p&gt;JConsole 是一个内置Java性能分析器，用于对JVM中内存，线程和类等的监控，这款工具的好处在于，占用系统资源少，而且结合Jstat，可以有效监控到java内存的变动情况，以及引起变动的原因。在项目追踪内存泄露问题时，很实用。&lt;/p&gt; 
&lt;h4&gt;&lt;a id=&quot;_233&quot;/&gt;操作指南&lt;/h4&gt; 
&lt;pre&gt;&lt;code&gt; Command-Name                   Command-Description
   attach                       attach &amp;lt;local jvm pid&amp;gt;
  
 Tips:
 1.使用help获取帮助信息。
 2.更详细的功能，请attach一个进程后使用
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;注：插件化后的JConsole相比gui版本的JConsole在显示与操作上有所区别，但是数据的采集方式是一样的。&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/perfma/xpocket-plugin-jconsole&quot;&gt;插件仓库&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://plugin.xpocket.perfma.com/plugin/55&quot;&gt;插件概况&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;a id=&quot;VJMap_249&quot;/&gt;VJMap&lt;/h3&gt; 
&lt;h4&gt;&lt;a id=&quot;_250&quot;/&gt;简介&lt;/h4&gt; 
&lt;p&gt;分代版的jmap（新生代，存活区，老生代），是排查内存缓慢泄露，老生代增长过快原因的利器。因为jmap -histo PID 打印的是整个Heap的对象统计信息，而为了定位上面的问题，我们需要专门查看OldGen对象，和Survivor区大龄对象的工具。&lt;br/&gt; vjmap的原始思路来源于R大的TBJMap ，翻新后支持JDK8，支持Survivor区大龄对象过滤。&lt;br/&gt; 注意：因为VJMap的原理，只支持CMS和ParallelGC，不支持G1。&lt;/p&gt; 
&lt;h4&gt;&lt;a id=&quot;_255&quot;/&gt;操作指南&lt;/h4&gt; 
&lt;pre&gt;&lt;code&gt; Command-Name                   Command-Description
   vjmap                        vjmap 1.0.9 - prints per GC generation (Eden, Survivor, OldGen) object details of a given process.

 Tips:
 Usage: vjmap &amp;lt;options&amp;gt; &amp;lt;PID&amp;gt;
 Usage: vjmap &amp;lt;options&amp;gt; &amp;lt;executable java path&amp;gt; &amp;lt;coredump file path&amp;gt;
 Usage &quot;help vjmap&quot; show options info
 
 Example:
  打印整个堆中对象的统计信息，按对象的total size排序:
  vjmap -all PID &amp;gt; /tmp/histo.log
  
  推荐，打印老年代的对象统计信息，按对象的oldgen size排序，比-all快很多，暂时只支持CMS:
  vjmap -old PID &amp;gt; /tmp/histo-old.log
  
  推荐，打印Survivor区的对象统计信息，默认age&amp;gt;=3
  vjmap -sur PID &amp;gt; /tmp/histo-sur.log
  
  推荐，打印Survivor区的对象统计信息，查看age&amp;gt;=4的对象
  vjmap -sur:minage=4 PID &amp;gt; /tmp/histo-sur.log
  
  推荐，打印Survivor区的对象统计信息，单独查看age＝4的对象:
  vjmap -sur:age=4 PID &amp;gt; /tmp/histo-sur.log
 
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/vipshop/vjtools/tree/master/vjmap&quot;&gt;VJMap&lt;/a&gt;&lt;br/&gt; &lt;a href=&quot;https://github.com/perfma/xpocket-plugin-vjmap&quot;&gt;插件仓库&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://plugin.xpocket.perfma.com/plugin/58&quot;&gt;插件概况&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;a id=&quot;Doraemon_288&quot;/&gt;Doraemon&lt;/h3&gt; 
&lt;h4&gt;&lt;a id=&quot;_289&quot;/&gt;简介&lt;/h4&gt; 
&lt;p&gt;Doraemon是PerfMa开发的一款链接性能分析产品的体验工具，操作简单，功能强大，提供jvm参数分析，线程离线分析以及内存离线分析的功能&lt;/p&gt; 
&lt;h4&gt;&lt;a id=&quot;_292&quot;/&gt;操作指南&lt;/h4&gt; 
&lt;pre&gt;&lt;code&gt;  Command-Name                   Command-Description
    attach                         attach &amp;lt;local jvm pid&amp;gt;
    detach                         detach
    analyse                        use &#x27;analyse &amp;lt;AbsolutePath&amp;gt;&#x27; to analyse memory dump file
    help                           command help info
    
  Tips:
  1.更丰富的操作，请先attach一个进程
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://plugin.xpocket.perfma.com/plugin/53&quot;&gt;插件概况&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;a id=&quot;_306&quot;/&gt;插件中心&lt;/h3&gt; 
&lt;p&gt;更丰富的内容，建议您前往&lt;a href=&quot;https://plugin.xpocket.perfma.com/&quot;&gt;插件中心&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;a id=&quot;Tips_309&quot;/&gt;Tips&lt;/h2&gt; 
&lt;ul&gt;&lt;li&gt;sa-jdi.jar 主要用于支持插件VJMap的正常使用（注：由于jdk8以上开始实施模块化，导致VJMap的运行机制不兼容）。&lt;/li&gt;&lt;li&gt;框架扩展开发的包依赖: com.perfma.xlab:xpocket-framework-spi:2.0.0-RELEASE&lt;/li&gt;&lt;/ul&gt; 
&lt;h2&gt;&lt;a id=&quot;_313&quot;/&gt;镜像仓库&lt;/h2&gt; 

                &lt;/div&gt;
                
                
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>aed033ef5429f1e7daba3344847ab3b9</guid>
<title>AI提示词工程师/AIGC提示词工程师/prompt工程师/AI训练师学习路线图（元壤教育） - 知乎</title>
<link>https://toutiao.io/k/k4v9l0v</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;Post-content&quot; data-zop-usertoken=&quot;{&amp;quot;userToken&amp;quot;:&amp;quot;&amp;quot;}&quot; data-zop=&quot;{&amp;quot;authorName&amp;quot;:&amp;quot;元壤教育&amp;quot;,&amp;quot;itemId&amp;quot;:618390844,&amp;quot;title&amp;quot;:&amp;quot;AI提示词工程师/AIGC提示词工程师/prompt工程师/AI训练师学习路线图（元壤教育）&amp;quot;,&amp;quot;type&amp;quot;:&amp;quot;article&amp;quot;}&quot;&gt;&lt;article class=&quot;Post-Main Post-NormalMain&quot; tabindex=&quot;-1&quot;&gt;&lt;p role=&quot;button&quot; tabindex=&quot;0&quot; class=&quot;ContentItem-time&quot;&gt;编辑于 2023-03-31 10:35・IP 属地新加坡&lt;/p&gt;&lt;/article&gt;&lt;p class=&quot;Post-Sub Post-NormalSub&quot;/&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>