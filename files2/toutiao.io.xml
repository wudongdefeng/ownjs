<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>1d6acd48b74c8a8681ba0486c825203c</guid>
<title>MySQL 中这 14 个小玩意，让人眼前一亮</title>
<link>https://toutiao.io/k/bdvzoas</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;/h2&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;大家好，我是苏三，又跟大家见面了。&lt;/span&gt;&lt;/h2&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;前言&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我最近几年用&lt;code&gt;MYSQL&lt;/code&gt;数据库挺多的，发现了一些非常有用的小玩意，今天拿出来分享到大家，希望对你会有所帮助。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;1.group_concat&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在我们平常的工作中，使用&lt;code&gt;group by&lt;/code&gt;进行分组的场景，是非常多的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如想统计出用户表中，名称不同的用户的具体名称有哪些？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;具体sql如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;select&lt;/span&gt; &lt;span&gt;name&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; &lt;span&gt;`user`&lt;/span&gt;&lt;br/&gt;&lt;span&gt;group&lt;/span&gt; &lt;span&gt;by&lt;/span&gt; &lt;span&gt;name&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但如果想把name相同的code拼接在一起，放到另外一列中该怎么办呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;答：使用&lt;code&gt;group_concat&lt;/code&gt;函数。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;例如：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;select&lt;/span&gt; &lt;span&gt;name&lt;/span&gt;,&lt;span&gt;group_concat&lt;/span&gt;(code) &lt;span&gt;from&lt;/span&gt; &lt;span&gt;`user`&lt;/span&gt;&lt;br/&gt;&lt;span&gt;group&lt;/span&gt; &lt;span&gt;by&lt;/span&gt; &lt;span&gt;name&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;执行结果：&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3055555555555556&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ibJZVicC7nz5jCDA5gqGg5txINBrQaWepDb0YYOF5FtibiaHBtYn7EbPjVWIcH9WpAiapRVmFjGptb9icic3sPm420x8A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;432&quot;/&gt;使用&lt;code&gt;group_concat&lt;/code&gt;函数，可以轻松的把分组后，name相同的数据拼接到一起，组成一个字符串，用&lt;code&gt;逗号&lt;/code&gt;分隔。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;2.char_length&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有时候我们需要获取字符的&lt;code&gt;长度&lt;/code&gt;，然后根据字符的长度进行&lt;code&gt;排序&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;MYSQL给我们提供了一些有用的函数，比如：&lt;code&gt;char_length&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过该函数就能获取字符长度。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;获取字符长度并且排序的sql如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;select&lt;/span&gt; * &lt;span&gt;from&lt;/span&gt; brand &lt;span&gt;where&lt;/span&gt; &lt;span&gt;name&lt;/span&gt; &lt;span&gt;like&lt;/span&gt; &lt;span&gt;&#x27;%苏三%&#x27;&lt;/span&gt; &lt;br/&gt;&lt;span&gt;order&lt;/span&gt; &lt;span&gt;by&lt;/span&gt; &lt;span&gt;char_length&lt;/span&gt;(&lt;span&gt;name&lt;/span&gt;) &lt;span&gt;asc&lt;/span&gt; &lt;span&gt;limit&lt;/span&gt; &lt;span&gt;5&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;执行效果如图所示：&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.2907801418439716&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ibJZVicC7nz5jCDA5gqGg5txINBrQaWepDxyRxSca1wic61iamRAgicFkTqYxet0Mepc7pgwEClonicE7PR7Nkwpz6pg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;846&quot;/&gt;name字段使用关键字&lt;code&gt;模糊查询&lt;/code&gt;之后，再使用&lt;code&gt;char_length&lt;/code&gt;函数获取name字段的字符长度，然后按长度&lt;code&gt;升序&lt;/code&gt;。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;3.locate&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有时候我们在查找某个关键字，比如：&lt;code&gt;苏三&lt;/code&gt;，需要明确知道它在某个字符串中的位置时，该怎么办呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;答：使用&lt;code&gt;locate&lt;/code&gt;函数。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用locate函数改造之后sql如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;select&lt;/span&gt; * &lt;span&gt;from&lt;/span&gt; brand &lt;span&gt;where&lt;/span&gt; &lt;span&gt;name&lt;/span&gt; &lt;span&gt;like&lt;/span&gt; &lt;span&gt;&#x27;%苏三%&#x27;&lt;/span&gt; &lt;br/&gt;&lt;span&gt;order&lt;/span&gt; &lt;span&gt;by&lt;/span&gt; &lt;span&gt;char_length&lt;/span&gt;(&lt;span&gt;name&lt;/span&gt;) &lt;span&gt;asc&lt;/span&gt;, &lt;span&gt;locate&lt;/span&gt;(&lt;span&gt;&#x27;苏三&#x27;&lt;/span&gt;,&lt;span&gt;name&lt;/span&gt;) &lt;span&gt;asc&lt;/span&gt; &lt;span&gt;limit&lt;/span&gt; &lt;span&gt;5&lt;/span&gt;,&lt;span&gt;5&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;执行结果：&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.2825112107623318&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ibJZVicC7nz5jCDA5gqGg5txINBrQaWepDvIY89rES2RacQial94cfmtwE0Kk2yq85vZFSncWPn2urgphyqicjEHxg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;892&quot;/&gt;先按长度排序，小的排在前面。如果长度相同，则按关键字从左到右进行排序，越靠左的越排在前面。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;除此之外，我们还可以使用：&lt;code&gt;instr&lt;/code&gt;和&lt;code&gt;position&lt;/code&gt;函数，它们的功能跟&lt;code&gt;locate&lt;/code&gt;函数类似，在这里我就不一一介绍了，感兴趣的小伙伴可以找我私聊。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;4.replace&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们经常会有替换字符串中部分内容的需求，比如：将字符串中的字符A替换成B。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这种情况就能使用&lt;code&gt;replace&lt;/code&gt;函数。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;例如：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;update&lt;/span&gt; brand &lt;span&gt;set&lt;/span&gt; &lt;span&gt;name&lt;/span&gt;=&lt;span&gt;REPLACE&lt;/span&gt;(&lt;span&gt;name&lt;/span&gt;,&lt;span&gt;&#x27;A&#x27;&lt;/span&gt;,&lt;span&gt;&#x27;B&#x27;&lt;/span&gt;) &lt;br/&gt;&lt;span&gt;where&lt;/span&gt; &lt;span&gt;id&lt;/span&gt;=&lt;span&gt;1&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这样就能轻松实现字符替换功能。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;也能用该函数去掉&lt;code&gt;前后空格&lt;/code&gt;：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;update&lt;/span&gt; brand &lt;span&gt;set&lt;/span&gt; &lt;span&gt;name&lt;/span&gt;=&lt;span&gt;REPLACE&lt;/span&gt;(&lt;span&gt;name&lt;/span&gt;,&lt;span&gt;&#x27; &#x27;&lt;/span&gt;,&lt;span&gt;&#x27;&#x27;&lt;/span&gt;) &lt;span&gt;where&lt;/span&gt; &lt;span&gt;name&lt;/span&gt; &lt;span&gt;like&lt;/span&gt; &lt;span&gt;&#x27; %&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;update&lt;/span&gt; brand &lt;span&gt;set&lt;/span&gt; &lt;span&gt;name&lt;/span&gt;=&lt;span&gt;REPLACE&lt;/span&gt;(&lt;span&gt;name&lt;/span&gt;,&lt;span&gt;&#x27; &#x27;&lt;/span&gt;,&lt;span&gt;&#x27;&#x27;&lt;/span&gt;) &lt;span&gt;where&lt;/span&gt; &lt;span&gt;name&lt;/span&gt; &lt;span&gt;like&lt;/span&gt; &lt;span&gt;&#x27;% &#x27;&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用该函数还能替换&lt;code&gt;json格式&lt;/code&gt;的数据内容，真的非常有用。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;5.now&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;时间是个好东西，用它可以快速缩小数据范围，我们经常有获取当前时间的需求。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在MYSQL中获取&lt;code&gt;当前时间&lt;/code&gt;，可以使用&lt;code&gt;now()&lt;/code&gt;函数，例如：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;select&lt;/span&gt; &lt;span&gt;now&lt;/span&gt;() &lt;span&gt;from&lt;/span&gt; brand &lt;span&gt;limit&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;返回结果为下面这样的：&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.22596153846153846&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ibJZVicC7nz5jCDA5gqGg5txINBrQaWepDUlhibvDewCwzfegybBqZcpicZpsxGPk1PBn7D9qfGrMJAVeYD5shzCdw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;416&quot;/&gt;它会包含&lt;code&gt;年月日时分秒&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果你还想返回&lt;code&gt;毫秒&lt;/code&gt;，可以使用&lt;code&gt;now(3)&lt;/code&gt;，例如：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;select&lt;/span&gt; &lt;span&gt;now&lt;/span&gt;(&lt;span&gt;3&lt;/span&gt;) &lt;span&gt;from&lt;/span&gt; brand &lt;span&gt;limit&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;返回结果为下面这样的：&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.2926829268292683&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ibJZVicC7nz5jCDA5gqGg5txINBrQaWepDVWr4ldQNmlwJibLhS2Tk3NOsJkAMQtzaF6Mib48A9pjFXcmY2Asia5adA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;328&quot;/&gt;使用起来非常方便好记。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;6.insert into ... select&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在工作中很多时候需要&lt;code&gt;插入数据&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;传统的插入数据的sql是这样的：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;INSERT&lt;/span&gt; &lt;span&gt;INTO&lt;/span&gt; &lt;span&gt;`brand`&lt;/span&gt;(&lt;span&gt;`id`&lt;/span&gt;, &lt;span&gt;`code`&lt;/span&gt;, &lt;span&gt;`name`&lt;/span&gt;, &lt;span&gt;`edit_date`&lt;/span&gt;) &lt;br/&gt;&lt;span&gt;VALUES&lt;/span&gt; (&lt;span&gt;5&lt;/span&gt;, &lt;span&gt;&#x27;108&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;苏三&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;2022-09-02 19:42:21&#x27;&lt;/span&gt;);&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;它主要是用于插入少量并且已经确定的数据。但如果有大批量的数据需要插入，特别是是需要插入的数据来源于，另外一张表或者多张表的结果集中。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这种情况下，使用传统的插入数据的方式，就有点束手无策了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这时候就能使用MYSQL提供的：&lt;code&gt;insert into ... select&lt;/code&gt;语法。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;例如：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;INSERT&lt;/span&gt; &lt;span&gt;INTO&lt;/span&gt; &lt;span&gt;`brand`&lt;/span&gt;(&lt;span&gt;`id`&lt;/span&gt;, &lt;span&gt;`code`&lt;/span&gt;, &lt;span&gt;`name`&lt;/span&gt;, &lt;span&gt;`edit_date`&lt;/span&gt;) &lt;br/&gt;&lt;span&gt;select&lt;/span&gt; &lt;span&gt;null&lt;/span&gt;,code,&lt;span&gt;name&lt;/span&gt;,&lt;span&gt;now&lt;/span&gt;(&lt;span&gt;3&lt;/span&gt;) &lt;span&gt;from&lt;/span&gt; &lt;span&gt;`order`&lt;/span&gt; &lt;span&gt;where&lt;/span&gt; code &lt;span&gt;in&lt;/span&gt; (&lt;span&gt;&#x27;004&#x27;&lt;/span&gt;,&lt;span&gt;&#x27;005&#x27;&lt;/span&gt;);&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这样就能将order表中的部分数据，非常轻松插入到brand表中。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;7.insert into ... ignore&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不知道你有没有遇到过这样的场景：在插入1000个品牌之前，需要先根据name，判断一下是否存在。如果存在，则不插入数据。如果不存在，才需要插入数据。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果直接这样插入数据：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;INSERT&lt;/span&gt; &lt;span&gt;INTO&lt;/span&gt; &lt;span&gt;`brand`&lt;/span&gt;(&lt;span&gt;`id`&lt;/span&gt;, &lt;span&gt;`code`&lt;/span&gt;, &lt;span&gt;`name`&lt;/span&gt;, &lt;span&gt;`edit_date`&lt;/span&gt;) &lt;br/&gt;&lt;span&gt;VALUES&lt;/span&gt; (&lt;span&gt;123&lt;/span&gt;, &lt;span&gt;&#x27;108&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;苏三&#x27;&lt;/span&gt;, &lt;span&gt;now&lt;/span&gt;(&lt;span&gt;3&lt;/span&gt;));&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;肯定不行，因为brand表的name字段创建了唯一索引，同时该表中已经有一条name等于苏三的数据了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;执行之后直接报错了：&lt;img data-ratio=&quot;0.04078947368421053&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ibJZVicC7nz5jCDA5gqGg5txINBrQaWepDQFSu4vYPN4VxKX2ibvgmWHBYKgcn3ASbQcMfjIaOBZdZEDIbh4RrUZw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1520&quot;/&gt;这就需要在插入之前加一下判断。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当然很多人通过在sql语句后面拼接&lt;code&gt;not exists&lt;/code&gt;语句，也能达到防止出现重复数据的目的，比如：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;INSERT&lt;/span&gt; &lt;span&gt;INTO&lt;/span&gt; &lt;span&gt;`brand`&lt;/span&gt;(&lt;span&gt;`id`&lt;/span&gt;, &lt;span&gt;`code`&lt;/span&gt;, &lt;span&gt;`name`&lt;/span&gt;, &lt;span&gt;`edit_date`&lt;/span&gt;) &lt;br/&gt;&lt;span&gt;select&lt;/span&gt; &lt;span&gt;null&lt;/span&gt;,&lt;span&gt;&#x27;108&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;苏三&#x27;&lt;/span&gt;,&lt;span&gt;now&lt;/span&gt;(&lt;span&gt;3&lt;/span&gt;) &lt;br/&gt;&lt;span&gt;from&lt;/span&gt; dual &lt;span&gt;where&lt;/span&gt;  &lt;span&gt;not&lt;/span&gt; &lt;span&gt;exists&lt;/span&gt; (&lt;span&gt;select&lt;/span&gt; * &lt;span&gt;from&lt;/span&gt; &lt;span&gt;`brand`&lt;/span&gt; &lt;span&gt;where&lt;/span&gt; &lt;span&gt;name&lt;/span&gt;=&lt;span&gt;&#x27;苏三&#x27;&lt;/span&gt;);&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这条sql确实能够满足要求，但是总觉得有些麻烦。那么，有没有更简单的做法呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;答：可以使用&lt;code&gt;insert into ... ignore&lt;/code&gt;语法。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;例如：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;INSERT&lt;/span&gt; &lt;span&gt;ignore&lt;/span&gt; &lt;span&gt;INTO&lt;/span&gt; &lt;span&gt;`brand`&lt;/span&gt;(&lt;span&gt;`id`&lt;/span&gt;, &lt;span&gt;`code`&lt;/span&gt;, &lt;span&gt;`name`&lt;/span&gt;, &lt;span&gt;`edit_date`&lt;/span&gt;) &lt;br/&gt;&lt;span&gt;VALUES&lt;/span&gt; (&lt;span&gt;123&lt;/span&gt;, &lt;span&gt;&#x27;108&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;苏三&#x27;&lt;/span&gt;, &lt;span&gt;now&lt;/span&gt;(&lt;span&gt;3&lt;/span&gt;));&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这样改造之后，如果brand表中没有name为苏三的数据，则可以直接插入成功。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但如果brand表中已经存在name为苏三的数据了，则该sql语句也能正常执行，并不会报错。因为它会忽略异常，返回的执行结果影响行数为0，它不会重复插入数据。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;8.select ... for update&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;MYSQL数据库自带了&lt;code&gt;悲观锁&lt;/code&gt;，它是一种排它锁，根据锁的粒度从大到小分为：&lt;code&gt;表锁&lt;/code&gt;、&lt;code&gt;间隙锁&lt;/code&gt;和&lt;code&gt;行锁&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在我们的实际业务场景中，有些情况并发量不太高，为了保证数据的正确性，使用悲观锁也可以。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如：用户扣减积分，用户的操作并不集中。但也要考虑系统自动赠送积分的并发情况，所以有必要加悲观锁限制一下，防止出现积分加错的情况发生。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这时候就可以使用MYSQL中的&lt;code&gt;select ... for update&lt;/code&gt;语法了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;例如：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;begin&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;select&lt;/span&gt; * &lt;span&gt;from&lt;/span&gt; &lt;span&gt;`user`&lt;/span&gt; &lt;span&gt;where&lt;/span&gt; &lt;span&gt;id&lt;/span&gt;=&lt;span&gt;1&lt;/span&gt; &lt;br/&gt;&lt;span&gt;for&lt;/span&gt; &lt;span&gt;update&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;//业务逻辑处理&lt;br/&gt;&lt;br/&gt;&lt;span&gt;update&lt;/span&gt; &lt;span&gt;`user`&lt;/span&gt; &lt;span&gt;set&lt;/span&gt; score=score&lt;span&gt;-1&lt;/span&gt; &lt;span&gt;where&lt;/span&gt; &lt;span&gt;id&lt;/span&gt;=&lt;span&gt;1&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;commit&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这样在一个事务中使用&lt;code&gt;for update&lt;/code&gt;锁住一行记录，其他事务就不能在该事务提交之前，去更新那一行的数据。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;需要注意的是for update前的id条件，必须是表的&lt;code&gt;主键&lt;/code&gt;或者&lt;code&gt;唯一索引&lt;/code&gt;，不然行锁可能会失效，有可能变成&lt;code&gt;表锁&lt;/code&gt;。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;9.on duplicate key update&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通常情况下，我们在插入数据之前，一般会先查询一下，该数据是否存在。如果不存在，则插入数据。如果已存在，则不插入数据，而直接返回结果。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在没啥并发量的场景中，这种做法是没有什么问题的。但如果插入数据的请求，有一定的并发量，这种做法就可能会产生重复的数据。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当然防止重复数据的做法很多，比如：&lt;code&gt;加唯一索引&lt;/code&gt;、&lt;code&gt;加分布式锁&lt;/code&gt;等。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但这些方案，都没法做到让第二次请求也更新数据，它们一般会判断已经存在就直接返回了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这种情况可以使用&lt;code&gt;on duplicate key update&lt;/code&gt;语法。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;该语法会在插入数据之前判断，如果主键或唯一索引不存在，则插入数据。如果主键或唯一索引存在，则执行更新操作。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;具体需要更新的字段可以指定，例如：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;INSERT&lt;/span&gt;  &lt;span&gt;INTO&lt;/span&gt; &lt;span&gt;`brand`&lt;/span&gt;(&lt;span&gt;`id`&lt;/span&gt;, &lt;span&gt;`code`&lt;/span&gt;, &lt;span&gt;`name`&lt;/span&gt;, &lt;span&gt;`edit_date`&lt;/span&gt;) &lt;br/&gt;&lt;span&gt;VALUES&lt;/span&gt; (&lt;span&gt;123&lt;/span&gt;, &lt;span&gt;&#x27;108&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;苏三&#x27;&lt;/span&gt;, &lt;span&gt;now&lt;/span&gt;(&lt;span&gt;3&lt;/span&gt;))&lt;br/&gt;&lt;span&gt;on&lt;/span&gt; &lt;span&gt;duplicate&lt;/span&gt; &lt;span&gt;key&lt;/span&gt; &lt;span&gt;update&lt;/span&gt; &lt;span&gt;name&lt;/span&gt;=&lt;span&gt;&#x27;苏三&#x27;&lt;/span&gt;,edit_date=&lt;span&gt;now&lt;/span&gt;(&lt;span&gt;3&lt;/span&gt;);&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这样一条语句就能轻松搞定需求，既不会产生重复数据，也能更新最新的数据。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但需要注意的是，在高并发的场景下使用&lt;code&gt;on duplicate key update&lt;/code&gt;语法，可能会存在&lt;code&gt;死锁&lt;/code&gt;的问题，所以要根据实际情况酌情使用。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;10.show create table&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有时候，我们想快速查看某张表的字段情况，通常会使用&lt;code&gt;desc&lt;/code&gt;命令，比如：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;desc `order`;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果如图所示：&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.2688679245283019&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ibJZVicC7nz5jCDA5gqGg5txINBrQaWepD8WF63DiauzNoLzNbrXkkSrMvpEu7I6jqBfpiaWv9BQQBia8xg3cv8k6YQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;848&quot;/&gt;确实能够看到order表中的字段名称、字段类型、字段长度、是否允许为空，是否主键、默认值等信息。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但看不到该表的索引信息，如果想看创建了哪些索引，该怎么办呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;答：使用&lt;code&gt;show index&lt;/code&gt;命令。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;show&lt;/span&gt; &lt;span&gt;index&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; &lt;span&gt;`order`&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;也能查出该表所有的索引：&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.1626984126984127&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ibJZVicC7nz5jCDA5gqGg5txINBrQaWepDf9ndibVBccNZtvgHGJaOGrKmibhvpeQNWICGJAicfLiaZiaglClUD8Q6U4g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1512&quot;/&gt;但查看字段和索引数据呈现方式，总觉得有点怪怪的，有没有一种更直观的方式？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;答：这就需要使用&lt;code&gt;show create table&lt;/code&gt;命令了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;例如：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;show&lt;/span&gt; &lt;span&gt;create&lt;/span&gt; &lt;span&gt;table&lt;/span&gt; &lt;span&gt;`order`&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;执行结果如图所示：&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.1305732484076433&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ibJZVicC7nz5jCDA5gqGg5txINBrQaWepDWElIHdXWACrv12ANaZqdcl0Kj4iaO5F2HopSnJaS38VCj9hVDDicTE5w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;628&quot;/&gt;其中&lt;code&gt;Table&lt;/code&gt;表示&lt;code&gt;表名&lt;/code&gt;，&lt;code&gt;Create Table&lt;/code&gt;就是我们需要看的&lt;code&gt;建表信息&lt;/code&gt;，将数据展开：&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3620689655172414&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ibJZVicC7nz5jCDA5gqGg5txINBrQaWepDibyzybO0cTYRPfOS3eUo8o2ajmIJaROfx42KDyYSaTJemYXhVibbVGGA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1044&quot;/&gt;我们能够看到非常完整的建表语句，表名、字段名、字段类型、字段长度、字符集、主键、索引、执行引擎等都能看到。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;非常直接明了。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;11.create table ... select&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有时候，我们需要快速备份表。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通常情况下，可以分两步走：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;创建一张临时表&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;将数据插入临时表&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;创建临时表可以使用命令：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;create&lt;/span&gt; &lt;span&gt;table&lt;/span&gt; order_2022121819 &lt;span&gt;like&lt;/span&gt; &lt;span&gt;`order`&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;创建成功之后，就会生成一张名称叫：order_2022121819，表结构跟order一模一样的&lt;code&gt;新表&lt;/code&gt;，只是该表的&lt;code&gt;数据为空&lt;/code&gt;而已。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;接下来使用命令：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;insert&lt;/span&gt; &lt;span&gt;into&lt;/span&gt; order_2022121819 &lt;span&gt;select&lt;/span&gt; * &lt;span&gt;from&lt;/span&gt; &lt;span&gt;`order`&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;执行之后就会将order表的数据插入到order_2022121819表中，也就是实现数据备份的功能。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但有没有命令，一个命令就能实现上面这两步的功能呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;答：用&lt;code&gt;create table ... select&lt;/code&gt;命令。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;例如：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;create&lt;/span&gt; &lt;span&gt;table&lt;/span&gt; order_2022121820 &lt;br/&gt;&lt;span&gt;select&lt;/span&gt; * &lt;span&gt;from&lt;/span&gt; &lt;span&gt;`order`&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;执行完之后，就会将order_2022121820表创建好，并且将order表中的数据自动插入到新创建的order_2022121820中。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一个命令就能轻松搞定&lt;code&gt;表备份&lt;/code&gt;。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;12.explain&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;很多时候，我们优化一条sql语句的性能，需要查看&lt;code&gt;索引&lt;/code&gt;执行情况。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;答：可以使用&lt;code&gt;explain&lt;/code&gt;命令，查看mysql的&lt;code&gt;执行计划&lt;/code&gt;，它会显示&lt;code&gt;索引的使用情况&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;例如：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;explain&lt;/span&gt; &lt;span&gt;select&lt;/span&gt; * &lt;span&gt;from&lt;/span&gt; &lt;span&gt;`order`&lt;/span&gt; &lt;span&gt;where&lt;/span&gt; code=&lt;span&gt;&#x27;002&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果：&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.0712962962962963&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ibJZVicC7nz5jCDA5gqGg5txINBrQaWepDiaYrqTHuiaGHBA03gv4rfymx6gBD3tUrLQMcXXSvoUppno8WtTvGI3bA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过这几列可以判断索引使用情况，执行计划包含列的含义如下图所示：&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.1130434782608696&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ibJZVicC7nz5jCDA5gqGg5txINBrQaWepDUk3oDMDUqGKZL8ghsFpGA9nUQ1tnxiaN639iaXMvyBcic0TjkzicCC1usg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;920&quot;/&gt;如果你想进一步了解explain的详细用法，可以看看我的另一篇文章《&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzkwNjMwMTgzMQ==&amp;amp;mid=2247490262&amp;amp;idx=1&amp;amp;sn=a67f610afa984ecca130a54a3be453ab&amp;amp;chksm=c0ebc23ef79c4b2869dea998e413c5cbea6aeeea01ee74efc7c1a5fc228baa7beca215adf3ea&amp;amp;token=751314179&amp;amp;lang=zh_CN&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;explain | 索引优化的这把绝世好剑，你真的会用吗？&lt;/a&gt;》&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;说实话，sql语句没有走索引，排除没有建索引之外，最大的可能性是索引失效了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下面说说索引失效的常见原因：&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7129629629629629&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ibJZVicC7nz5jCDA5gqGg5txINBrQaWepDPGRdYVwu2Ltajr3TqSIzNzZfqD9iak1cnlXrtic6Wr3LSqUxJ82Sg2rQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;如果不是上面的这些原因，则需要再进一步排查一下其他原因。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;13.show processlist&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有些时候我们线上sql或者数据库出现了问题。比如出现了数据库连接过多问题，或者发现有一条sql语句的执行时间特别长。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这时候该怎么办呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;答：我们可以使用&lt;code&gt;show processlist&lt;/code&gt;命令查看&lt;code&gt;当前线程执行情况&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如图所示：&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.20277777777777778&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ibJZVicC7nz5jCDA5gqGg5txINBrQaWepDzGa04dWaVTwp1rCfHknibBRH90KNvdqLZdlRmz5DgAYkZZqsYAjiaHtg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;从执行结果中，我们可以查看当前的连接状态，帮助识别出有问题的查询语句。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;id 线程id&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;User 执行sql的账号&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Host 执行sql的数据库的ip和端号&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;db 数据库名称&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Command 执行命令，包括：Daemon、Query、Sleep等。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Time 执行sql所消耗的时间&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;State 执行状态&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;info 执行信息，里面可能包含sql信息。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果发现了异常的sql语句，可以直接kill掉，确保数据库不会出现严重的问题。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;14.mysqldump&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有时候我们需要导出MYSQL表中的数据。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这种情况就可以使用&lt;code&gt;mysqldump&lt;/code&gt;工具，该工具会将数据查出来，转换成insert语句，写入到某个文件中，相当于&lt;code&gt;数据备份&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们获取到该文件，然后执行相应的insert语句，就能创建相关的表，并且写入数据了，这就相当于&lt;code&gt;数据还原&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;mysqldump命令的语法为：&lt;code&gt;mysqldump -h主机名 -P端口 -u用户名 -p密码 参数1,参数2.... &amp;gt; 文件名称.sql&lt;/code&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;备份远程数据库中的数据库：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;mysqldump -h &lt;span&gt;192.22&lt;/span&gt;&lt;span&gt;.25&lt;/span&gt;&lt;span&gt;.226&lt;/span&gt; -u root -p123456 dbname &amp;gt; backup.sql&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>8272feec2825190b9c63dfd8406a4e34</guid>
<title>教你如何让 Redis 更持久</title>
<link>https://toutiao.io/k/q2zfh0f</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大家好，我是小菜。一个希望能够成为 &lt;strong&gt;吹着牛X谈架构&lt;/strong&gt; 的男人！如果你也想成为我想成为的人，不然点个关注做个伴，让小菜不再孤单！&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;本文主要介绍 &lt;code&gt;Redis 的持久化&lt;/code&gt;&lt;/p&gt;&lt;p&gt;如有需要，可以参考&lt;/p&gt;&lt;p&gt;如有帮助，不忘 &lt;strong&gt;点赞&lt;/strong&gt; ❥&lt;/p&gt;&lt;p&gt;微信公众号已开启，&lt;strong&gt;小菜良记&lt;/strong&gt;，没关注的同学们记得关注哦！&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最近在面试的路上愈走愈远了，&lt;code&gt;Redis&lt;/code&gt;肯定是一个热门面试方向。像有几种数据结构？如何实现延迟队列？淘汰机制是怎么样的？都快问到麻木，这些问题还常绕脑梁。那我们这篇就举一个比较常见且难度适中的面试题来聊聊。&lt;strong&gt;Redis&lt;/strong&gt; 的持久化策略是怎么样的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;开局问个问题，相信被问到 &lt;strong&gt;Redis 持久化&lt;/strong&gt; 的同学肯定不在少数，答对的同学肯定也不在少数，有些小伙伴说到 &lt;strong&gt;Redis持久化&lt;/strong&gt; 肯定张口就来，毕竟也就 &lt;strong&gt;AOF 和 RDB&lt;/strong&gt; 两个概念，只要你准备了面试，就不会被问的太惨。但是你是真的懂还是只是为了应付面试而去应付记忆？你知道 &lt;strong&gt;AOF&lt;/strong&gt; 和 &lt;strong&gt;RDB&lt;/strong&gt; 两个词是什么单词的缩写吗？你落地实施过吗？你真以为面试官听不出来你是背题还是实操吗？如果 4 个问题你中了一半，那不妨往下看看，也许会有些收获，起码答面试题的时候心中有小菜~！&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.928030303030303&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/P7WuIzkp9iaUXthUJVOy42tnebWbTvic1SfXa2dEzGDqEXZdo9Xnf7sL0L7oGic7XsyibKMhUicW8sls5VPt9548jIA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;264&quot;/&gt;&lt;/figure&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;Redis 持久化&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;什么是Redis持久化？&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;咱们先别记得往解决方向前行，先明白这道题的意思。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;em&gt;持久化&lt;/em&gt; 就是要让数据永久的保存下去。那什么是 &lt;em&gt;Redis 持久化&lt;/em&gt; ？那就是把Redis保存在内存的数据写到磁盘中，防止服务宕机了内存数据丢失问题。那有些小伙伴就说了，那磁盘损坏了，数据怎么持久化？就算多点备份能解决磁盘损坏问题，那如果来个多点丢失怎么整？停住停住，咱们这篇讲的是Redis内存数据-&amp;gt;磁盘的持久化问题，可别指望靠这个问题跟面试官扯半个小时~！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;咱们这篇从几个点来说明 &lt;strong&gt;Redis持久化&lt;/strong&gt; 问题。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.582716049382716&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/P7WuIzkp9iaUXthUJVOy42tnebWbTvic1Sze2wtaYLXXueOz5GHzzclPbT8Qj2bicAhmCicPibrnCONTDicf5ViaHMcTg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;405&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;也就三点大的方向，三步走战略解决你的持久化问题。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;一、RDB&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;先来解决开局的问题之一，&lt;strong&gt;RDB&lt;/strong&gt; 是什么单词的全称。RDB（&lt;strong&gt;&lt;code&gt;R&lt;/code&gt;edis&lt;/strong&gt; &lt;strong&gt;&lt;code&gt;D&lt;/code&gt;atabase&lt;/strong&gt; &lt;strong&gt;&lt;code&gt;B&lt;/code&gt;ackup file&lt;/strong&gt;）--- Redis 数据备份文件，也称为 Redis 数据快照。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个玩意就是用来将内存中的所有数据都记录到磁盘中，当 &lt;strong&gt;Redis&lt;/strong&gt; 实例故障重启后，从磁盘读取快照文件，从而恢复数据。内心狂喜，看来学的第一个概念就可以解决 &lt;strong&gt;Redis&lt;/strong&gt; 持久化问题~&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在学 &lt;strong&gt;RDB&lt;/strong&gt; 之前，我们先明白两个核心概念 &lt;code&gt;fork&lt;/code&gt; 和 &lt;code&gt;cow&lt;/code&gt;，下面我们会解释，这里先卖个关子。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;RDB&lt;/strong&gt; 是 Redis 中默认的持久化机制，按照一定的时间将内存中的数据以快照的方式保存到磁盘中，它会产生一个特殊类型的文件 &lt;code&gt;.rdb&lt;/code&gt; 数据文件，同时可以通过配置文件中的 save 参数来定义快照的周期.&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5234986945169713&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/P7WuIzkp9iaUXthUJVOy42tnebWbTvic1SScqib8kVvKtJRUibmLFqES1nqlHQIlqBs9gh0w5BjYshG6Rz3XeicgXUw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;766&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们从配置文件中的两个配置参数入手，首先是 &lt;code&gt;save&lt;/code&gt; 配置。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个指令是由 &lt;strong&gt;Redis&lt;/strong&gt; 主进程来执行RDB，会阻塞所有命令&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.2995391705069124&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/P7WuIzkp9iaUXthUJVOy42tnebWbTvic1SQle1Qmv5MZseJkTKwoDkQb7PAYiahJM2vdLgIKX4IEY8IHOM3RUGzVw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;217&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们在配置文件中找到有关于 &lt;strong&gt;sava&lt;/strong&gt; 的配置&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1、&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;dbfilename dump.rdb&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;该配置项的作用便是用来定义 &lt;strong&gt;rdb 文件名&lt;/strong&gt;（需要注意该名称不能定义为路径，只能定义为文件名称）&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当我们执行完 &lt;code&gt;save&lt;/code&gt; 命令后，便可在 &lt;strong&gt;redis&lt;/strong&gt; 文件夹中看到一个 &lt;code&gt;dump.rdb&lt;/code&gt;   文件&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.10625&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/P7WuIzkp9iaUXthUJVOy42tnebWbTvic1SZF92743XVFYPRAKWiaTthGib1nlkgjDeLLB7WQ0D7AEKvJ9R4Y7hx1gA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;800&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2、&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;save &lt;span&gt;&amp;lt;&lt;span&gt;seconds&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;span&gt;changes&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;该配置项的作用是用来定义多长时间内发生多少次变化便会执行 &lt;strong&gt;bgsave&lt;/strong&gt;，如果是 &lt;code&gt;save &quot;&quot;&lt;/code&gt; 则表示禁用 &lt;strong&gt;RDB&lt;/strong&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们接下来打开 &lt;strong&gt;save 配置&lt;/strong&gt;进行测试&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;dbfilename dump-test.rdb  &lt;span&gt;# 文件名为 dump-test.rdb&lt;/span&gt;&lt;br/&gt;save 3600 1  &lt;span&gt;# 在 3600 秒内发生一次更改，便会执行 bgsave&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们通过 &lt;code&gt;redis-cli&lt;/code&gt; 进入操作&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.3281653746770026&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/P7WuIzkp9iaUXthUJVOy42tnebWbTvic1SMRVECiaJ72icBXOkrFLic4eCNN8ibc5Hpx0SicIkA0FF4LLAUgtNsJIgJLw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;387&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然后我们退出后便可在当前目录下看到刚刚生成的 &lt;em&gt;&lt;code&gt;dump-test.rdb&lt;/code&gt;&lt;/em&gt; 文件&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.10922330097087378&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/P7WuIzkp9iaUXthUJVOy42tnebWbTvic1Swk0YTc8kzlQPljye6PsibciaibicIwibWJj5fibpj5J7LZmC7hJadAGyiciaCA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;824&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;说明我们配置是生效的，接着我们直接重启 &lt;strong&gt;Redis&lt;/strong&gt; ，看是否还存在我们刚刚保存的数据&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.19732441471571907&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/P7WuIzkp9iaUXthUJVOy42tnebWbTvic1SELsIribuvLzVPX7TibvCJQBwQrtwYNwiaafvQic2zaV4MialbmhsibLzuLkQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;299&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;看到我们的数据，就说明 redis 持久化成功了。然后我们把刚刚生成的  &lt;em&gt;&lt;code&gt;dump-test.rdb&lt;/code&gt;&lt;/em&gt; 文件删除后重启 &lt;strong&gt;redis&lt;/strong&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.18032786885245902&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/P7WuIzkp9iaUXthUJVOy42tnebWbTvic1Stns8WSEgEEibnunjdTlpVGmMWpwaSh05tVxymJ9ucromPFdmc7TAu1g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;305&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这可以说明&lt;strong&gt;Redis&lt;/strong&gt; 启动时是靠 &lt;strong&gt;.rdb&lt;/strong&gt; 来恢复文件数据的。那我们上面一直说到的 &lt;code&gt;bgsave&lt;/code&gt;，那 &lt;code&gt;bgsave&lt;/code&gt; 又是如何执行的呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们在前面有说过两个概念 &lt;code&gt;fork&lt;/code&gt; 和 &lt;code&gt;cow&lt;/code&gt;，不知道是否还有印象，这两个概念便是关键~！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;bgsave&lt;/code&gt; 开始的时候会 &lt;strong&gt;fork&lt;/strong&gt; 主进程得到一个新的子进程，而 &lt;strong&gt;子进程&lt;/strong&gt; 是 &lt;code&gt;共享&lt;/code&gt; 主进程的内存数据的。子进程会将数据写到磁盘上的一个临时的 &lt;code&gt;.rdb&lt;/code&gt; 文件中，当子进程写完临时文件后，会将原来的 &lt;code&gt;.rdb&lt;/code&gt;文件替换掉。这个就是 &lt;strong&gt;fork&lt;/strong&gt; 的核心，那什么是 &lt;strong&gt;cow&lt;/strong&gt; 呢？&lt;strong&gt;cow&lt;/strong&gt; 全称 &lt;code&gt;copy-on-write&lt;/code&gt; 技术，当主进程执行读操作的时候是访问共享内存的，而主进程执行写操作的时候，则会拷贝一份数据，执行写操作。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;具体流程如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.36529126213592233&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/P7WuIzkp9iaUXthUJVOy42tnebWbTvic1Sc07RI4VDibOMd5GhWsbAQlibVA9PRWupAo6a4CnrCNfnxzmMch2mIBEw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;824&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这种持久化方式有什么优点呢？&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;方便持久化，只有一个 &lt;code&gt;dump.rdb&lt;/code&gt; 文件&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;容灾性好，可以将文件保存到安全的磁盘中&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;性能最大化，&lt;strong&gt;fork&lt;/strong&gt; 子进程来完成写操作，让主进程继续处理命令，将 &lt;strong&gt;IO&lt;/strong&gt; 最大化，保证 &lt;strong&gt;Redis&lt;/strong&gt; 的高性能&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;缺点也是有的：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;数据安全性低，&lt;strong&gt;RDB&lt;/strong&gt; 是间隔一段时间来持久化 （save&lt;seconds&gt;&lt;change&gt;） ，如果持久化期间 &lt;strong&gt;Redis&lt;/strong&gt; 发生故障，那么就会造成数据丢失，所以这种方式适用于数据要求不是很严谨的情况下使用&lt;/change&gt;&lt;/seconds&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;保存时间长，如果数据量很大，保存快照的时间就会很长，会占用磁盘空间&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;优劣均沾，斟酌使用&lt;/strong&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;二、AOF&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;AOF&lt;/strong&gt; 全称 &lt;strong&gt;&lt;code&gt;A&lt;/code&gt;ppend&lt;/strong&gt; &lt;strong&gt;&lt;code&gt;O&lt;/code&gt;nly&lt;/strong&gt; &lt;strong&gt;&lt;code&gt;F&lt;/code&gt;ile&lt;/strong&gt; (追加文件)。作用便是 &lt;strong&gt;Redis&lt;/strong&gt; 处理的每一个写命令都会记录在 &lt;strong&gt;AOF&lt;/strong&gt; 文件中，可以看做是命令日志文件。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;该功能默认是关闭的，我们可以在 &lt;code&gt;redis.conf&lt;/code&gt; 文件中查看有关于 &lt;strong&gt;AOF&lt;/strong&gt; 相关的配置项&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1、&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;appendonly yes   # 开启 AOF 日志记录功能，默认是关闭的&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2、&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;appendfilename &lt;span&gt;&quot;appendonly.aof&quot;&lt;/span&gt;  # AOF 文件的名称&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以上两个配置项便是用来开启 &lt;strong&gt;AOF&lt;/strong&gt; 日志记录，那么还有个额外的配置项也需要了解&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;3、&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;appendfsync everysec   # AOF 命令记录的频率&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;该配置项有三个可选值&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;配置项&lt;/th&gt;&lt;th&gt;刷盘时机&lt;/th&gt;&lt;th&gt;优点&lt;/th&gt;&lt;th&gt;缺点&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;Always&lt;/td&gt;&lt;td&gt;同步刷盘&lt;/td&gt;&lt;td&gt;可靠性高，几乎不会丢失数据&lt;/td&gt;&lt;td&gt;性能影响较大&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;everysec&lt;/td&gt;&lt;td&gt;每秒刷盘&lt;/td&gt;&lt;td&gt;性能适中&lt;/td&gt;&lt;td&gt;最多丢失1秒的数据&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;no&lt;/td&gt;&lt;td&gt;操作系统控制&lt;/td&gt;&lt;td&gt;性能最好&lt;/td&gt;&lt;td&gt;可靠性较差，可能丢失大量的数据&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有了解 &lt;strong&gt;Mysql&lt;/strong&gt; 中 &lt;strong&gt;relay log&lt;/strong&gt; 日志的同学，就不会对这种模型很陌生。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;原理：它是将写命令追加到 AOF 文件的末尾，使用 &lt;strong&gt;AOF&lt;/strong&gt; 持久化需要设置同步选项，从而确保写命令同步到磁盘文件上的时机，这是因为对文件进行写入并不会马上将内存同步到磁盘上，而是先存储到缓存区中，然后由操作系统决定什么时候同步到磁盘。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们开启 AOF 记录功能查看下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;1.181081081081081&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/P7WuIzkp9iaUXthUJVOy42tnebWbTvic1S5o5LYjiaXVdTDvWo0o42zC7f8yQoYgTibs8jJVjSb8iayOJV6V5P8VpQA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;370&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以看出我们的每一个操作都已经记录到 &lt;strong&gt;AOF 文件中&lt;/strong&gt;，我们这边通过重启 &lt;strong&gt;Redis&lt;/strong&gt; 也一样能获取到刚刚存储的数据，说明持久化是有生效的~&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.281786941580756&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/P7WuIzkp9iaUXthUJVOy42tnebWbTvic1S9t0xNXnGzGGtsrdqJAVfeZo4eCxECDVfFbeahTs1pKEqUm7IuPL3ow/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;291&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们看到上面的 &lt;strong&gt;AOF&lt;/strong&gt; 记录文件是不是觉得很规整？但是在线上环境中越规整反而不好，因为这文件主要是给机器看的，而不是跟我们看的，因此我们最好能够进行压缩。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为了解决AOF文件体积不断增大的问题，用户可以向&lt;strong&gt;Redis&lt;/strong&gt;发送 &lt;strong&gt;bgrewriteaof&lt;/strong&gt;命令，这个命令会通过 &lt;strong&gt;通过移除AOF文件中的冗余命令&lt;/strong&gt; 来重写（rewrite）&lt;strong&gt;AOF&lt;/strong&gt;文件，使&lt;strong&gt;AOF&lt;/strong&gt;文件的体积变得尽可能地小。&lt;strong&gt;bgrewriteaof&lt;/strong&gt;的工作原理和 &lt;strong&gt;bgsave&lt;/strong&gt; 创建快照的工作原理非常相似：&lt;strong&gt;Redis&lt;/strong&gt;会创建一个子进程，然后由子进程负责对AOF文件进行重写。因为AOF文件重写也需要用到子进程，所以快照持久化因为创建子进程而导致的&lt;code&gt;性能问题和内存占用问题&lt;/code&gt;，在AOF持久化中也同样存在。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;既然存在手动触发压缩，那也存在自动触发压缩，这就得说到配置文件中的两个配置项&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;auto-aof-rewrite-percentage 100&lt;br/&gt;auto-aof-rewrite-min-size 64mb&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;该配置项的意思为当AOF文件的体积大于64MB，并且AOF文件的体积比上一次重写之后的体积大了至少一倍（100%）的时候，Redis将执行&lt;strong&gt;bgrewriteaof&lt;/strong&gt;命令。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;总结下，它的优点如下：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;数据安全。AOF 持久化可以配置 &lt;strong&gt;appendfsync&lt;/strong&gt; 属性中的 &lt;code&gt;always&lt;/code&gt;，每进行一次写命令操作就会记录到 &lt;strong&gt;AOF&lt;/strong&gt; 文件中一次&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;一致性。通过 append 模型写文件，即使中途服务器宕机，也可以通过 &lt;code&gt;redis-check-aof&lt;/code&gt; 工具来解决数据一致性问题&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;缺点如下：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;AOF&lt;/strong&gt; 文件比 &lt;strong&gt;RDB&lt;/strong&gt; 文件大，而且恢复速度慢&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;数据集大的时候比 &lt;strong&gt;RDB&lt;/strong&gt; 文件启动效率低&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;同样是优劣均沾，斟酌使用&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;三、两者区别&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;分别介绍了两者，我们回顾一下两者有什么区别？&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;方面&lt;/th&gt;&lt;th&gt;RDB&lt;/th&gt;&lt;th&gt;AOF&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;持久化方式&lt;/td&gt;&lt;td&gt;定时对整个内存做快照&lt;/td&gt;&lt;td&gt;记录每一次执行的命令&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;数据完整性&lt;/td&gt;&lt;td&gt;不完整，两次备份之间会丢失&lt;/td&gt;&lt;td&gt;相对完整。取决于刷盘策略&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;文件大小&lt;/td&gt;&lt;td&gt;会有压缩，文件体积小&lt;/td&gt;&lt;td&gt;记录命令，文件体积很大&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;宕机恢复速度&lt;/td&gt;&lt;td&gt;很快&lt;/td&gt;&lt;td&gt;慢&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;数据恢复优先级&lt;/td&gt;&lt;td&gt;低，因为数据完整性不如AOF&lt;/td&gt;&lt;td&gt;高，因为数据完整性更高&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;系统资源占用&lt;/td&gt;&lt;td&gt;高，大量CPU和内存消耗&lt;/td&gt;&lt;td&gt;低，主要是磁盘IO资源。且 AOF 重写时会占用大量CPU和内存资源&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;使用场景&lt;/td&gt;&lt;td&gt;可以容忍数分钟的数据丢失，追求更快的启动速度&lt;/td&gt;&lt;td&gt;对数据安全性要求较高&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;看完上面后，想必对两种持久化机制都有一定的了解了。两者都有优劣势，那我们该如何选择？这里给出几点意见~&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;如果可以忍受一小段时间内的数据丢失，可以使用 &lt;strong&gt;RDB&lt;/strong&gt;  机制，定时生成 &lt;strong&gt;RDB&lt;/strong&gt; 快照， 并且 RDB 恢复数据集的速度也要比 AOF 恢复的速度要快&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;但是如果单单使用 &lt;strong&gt;RDB&lt;/strong&gt; 机制，可能导致丢失很多数据，因此我们需要综合使用 &lt;strong&gt;AOF&lt;/strong&gt; 和 &lt;strong&gt;RDB&lt;/strong&gt; 两种持久化机制，用 &lt;strong&gt;AOF&lt;/strong&gt; 来保证数据不丢失，作为数据恢复的第一选择；用 &lt;strong&gt;RDB&lt;/strong&gt; 来做不同程度的冷备份，在 &lt;strong&gt;AOF&lt;/strong&gt; 文件都丢失或损坏不可用的情况下，可以使用 &lt;strong&gt;RDB&lt;/strong&gt; 来进行快速的数据恢复&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;我们可以利用 &lt;strong&gt;RDB&lt;/strong&gt; 来快速恢复数据，并用 &lt;strong&gt;AOF&lt;/strong&gt; 来补全数据&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们到这里就讲述了 &lt;strong&gt;Redis&lt;/strong&gt; 持久化机制的配置，通过这篇文章的学习，我相信到时候面试的时候遇到这个问题也不至于那么手足无措~！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不要空谈，不要贪懒，和小菜一起做个&lt;code&gt;吹着牛X做架构&lt;/code&gt;的程序猿吧~点个关注做个伴，让小菜不再孤单。咱们下文见！&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.948&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/P7WuIzkp9iaUXthUJVOy42tnebWbTvic1S0B1bUvJZpvEM0fRmGEJcVQRklSlZINd9pP1qZwfWYQ3GNeAHgibL1IQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;250&quot;/&gt;&lt;/figure&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;今天的你多努力一点，明天的你就能少说一句求人的话！&lt;br/&gt;&lt;em&gt;我是小菜，一个和你一起变强的男人。&lt;/em&gt; &lt;code&gt;💋&lt;br/&gt;&lt;/code&gt;&lt;span&gt;微信公众号已开启，&lt;/span&gt;&lt;strong&gt;小菜良记&lt;/strong&gt;&lt;span&gt;，没关注的同学们记得关注哦！&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>3ce09a00665ef5909c16ccc8e47b8083</guid>
<title>如何形成统一设计风格（实践篇）</title>
<link>https://toutiao.io/k/mlm66xf</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content js_underline_content             autoTypeSetting24psection&amp;#10;            &quot; id=&quot;js_content&quot;&gt;&lt;section data-role=&quot;outer&quot; label=&quot;edit by 135editor&quot;&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.42314814814814816&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/I8SfHxT94hXTic2HemgChQibhFB6RVGZKicXIB2QGf3T8pC58q6GPYKblR7liafRZ2N1eNnS6FjqLQjdgw8kBdBtxA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;br/&gt;&lt;span&gt;在上一篇《&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU3NzczMDI4Ng==&amp;amp;mid=2247485901&amp;amp;idx=1&amp;amp;sn=a00ccfafd3eb82d074b6edc91507f661&amp;amp;chksm=fd016a4cca76e35a5da61155a381f815b5f67d675ef9200e706e3c7e3d474b8a5c8cb5abe2dc&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;业务团队如何统一架构设计风格？&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;11&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;业务团队如何统一架构设计风格？&lt;/a&gt;》中，探讨了一种业务架构的设计规范，以期达到这些目标：用标准约束技术细节；用技术工具而非文档推行标准；持续重构而非造新轮子；重视业务建模。但通篇表述较为抽象。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;本篇将总结团队近来的架构演进工作，以更具体的技术细节，详细阐释该理念，作为“统一业务设计风格”的实践篇。文中详述了多个层面的设计规约和基于规约的搭建方式，并在末尾回答了上一篇的诸多疑问。&lt;/span&gt;&lt;/section&gt;&lt;section data-role=&quot;title&quot; data-tools=&quot;135编辑器&quot; data-id=&quot;119028&quot;&gt;&lt;section&gt;&lt;section data-darkmode-bgcolor-16678013048235=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)&quot;&gt;&lt;section data-darkmode-bgcolor-16678013048235=&quot;rgb(187, 191, 195)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)&quot;&gt;&lt;section hm_fix=&quot;218:327&quot; data-darkmode-bgcolor-16678013048235=&quot;rgb(187, 191, 195)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)&quot;&gt;&lt;section data-darkmode-bgcolor-16678013048235=&quot;rgb(187, 191, 195)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)&quot;&gt;&lt;section data-darkmode-bgcolor-16678013048235=&quot;rgb(187, 191, 195)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)&quot; data-darkmode-color-16678013048235=&quot;rgb(6, 84, 234)&quot; data-darkmode-original-color-16678013048235=&quot;#fff|rgb(6, 84, 234)&quot;&gt;&lt;strong data-darkmode-bgcolor-16678013048235=&quot;rgb(187, 191, 195)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)&quot; data-darkmode-color-16678013048235=&quot;rgb(6, 84, 234)&quot; data-darkmode-original-color-16678013048235=&quot;#fff|rgb(6, 84, 234)&quot;&gt;01&lt;/strong&gt;&lt;/section&gt;&lt;section data-width=&quot;100%&quot; data-darkmode-bgcolor-16678013048235=&quot;rgb(149, 208, 205)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)|rgb(176, 245, 242)&quot;&gt;&lt;br data-darkmode-bgcolor-16678013048235=&quot;rgb(149, 208, 205)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)|rgb(176, 245, 242)&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-darkmode-bgcolor-16678013048235=&quot;rgb(187, 191, 195)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)&quot; data-darkmode-color-16678013048235=&quot;rgb(6, 84, 234)&quot; data-darkmode-original-color-16678013048235=&quot;#fff|rgb(6, 84, 234)&quot;&gt;&lt;span&gt;&lt;strong&gt;总览&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section data-role=&quot;list&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.6157407407407407&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/I8SfHxT94hXTic2HemgChQibhFB6RVGZKicLtrypAjNecHuKEaywSW2Hvoj4JT0HPy0DxlRTibjWibiaw9uvp9DAxh6Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;上图以电商产品为例，展示了一套标准框架的各层设计单元。先简单了解下概念，下一章节会详细解释各层的设计规约和搭建方式：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;沉淀的能力包括但不局限于：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;产品模式层&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;以产品合约描述完整的功能列表；以签署人身份来定位产品功能的适用场景；以合约分组来描述一个独立完备的功能域，分组的集合就是产品功能的范围和边界。通过对合约分组进行组装，可以快速搭建商业产品。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;业务模型层&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;为了减少不同技术同学对领域进行建模的风格差异，我们对业务模型的使用场景做了诸多约定，串联起仓储管理/业务流程/业务组件等基础模块。所有人更关注于业务在模型上的表达，而大大减少了对实现细节的关注。基于对领域的分析，可以快速搭建业务模型。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;业务流程层&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;用一套标准的业务流程框架，描述业务模型的完整执行流程：业务组件是一套高内聚的业务功能集合，基于组件配置将业务模型的信息适配为标准参数，交由基础设施执行具体功能；流程引擎负责创建和管理流程实例，接收指令来触发组件动作的执行，并实现状态推进/条件跳转和异常处理等分支管控的需求。通过对业务组件/基础设施的抽象和沉淀，可以快速搭建业务流程。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;数据视图层&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;用一套标准的数据流机制，来满足视图层的定制化需求：数据流订阅器用于采集数据，物理来源包含区块链跨链数据/业务DB数据/文件系统数据/离线任务数据等；数据流消费器用来加工原始数据，生成展示层数据/待核对数据/数据指标等等。订阅器确保了数据来源的稳定和低成本的快速接入，消费器则交由技术同学自行定制业务逻辑。在不干扰领域建模的基础上，可以快速搭建数据视图。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-role=&quot;title&quot; data-tools=&quot;135编辑器&quot; data-id=&quot;119028&quot;&gt;&lt;section&gt;&lt;section data-darkmode-bgcolor-16678013048235=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)&quot;&gt;&lt;section data-darkmode-bgcolor-16678013048235=&quot;rgb(187, 191, 195)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)&quot;&gt;&lt;section hm_fix=&quot;218:327&quot; data-darkmode-bgcolor-16678013048235=&quot;rgb(187, 191, 195)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)&quot;&gt;&lt;section data-darkmode-bgcolor-16678013048235=&quot;rgb(187, 191, 195)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)&quot;&gt;&lt;section data-darkmode-bgcolor-16678013048235=&quot;rgb(187, 191, 195)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)&quot; data-darkmode-color-16678013048235=&quot;rgb(6, 84, 234)&quot; data-darkmode-original-color-16678013048235=&quot;#fff|rgb(6, 84, 234)&quot;&gt;&lt;strong data-darkmode-bgcolor-16678013048235=&quot;rgb(187, 191, 195)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)&quot; data-darkmode-color-16678013048235=&quot;rgb(6, 84, 234)&quot; data-darkmode-original-color-16678013048235=&quot;#fff|rgb(6, 84, 234)&quot;&gt;02&lt;/strong&gt;&lt;/section&gt;&lt;section data-width=&quot;100%&quot; data-darkmode-bgcolor-16678013048235=&quot;rgb(149, 208, 205)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)|rgb(176, 245, 242)&quot;&gt;&lt;br data-darkmode-bgcolor-16678013048235=&quot;rgb(149, 208, 205)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)|rgb(176, 245, 242)&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-darkmode-bgcolor-16678013048235=&quot;rgb(187, 191, 195)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)&quot; data-darkmode-color-16678013048235=&quot;rgb(6, 84, 234)&quot; data-darkmode-original-color-16678013048235=&quot;#fff|rgb(6, 84, 234)&quot;&gt;&lt;span&gt;&lt;strong&gt;规约详解&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section data-role=&quot;list&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section data-role=&quot;title&quot; data-tools=&quot;135编辑器&quot; data-id=&quot;119027&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;strong data-brushtype=&quot;text&quot; hm_fix=&quot;174:315&quot;&gt;产品模式——产品合约 &lt;/strong&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section&gt;&lt;strong&gt; PRODUCT&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1）规约&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;h4&gt;&lt;span/&gt;&lt;/h4&gt;&lt;h4&gt;&lt;span&gt;产品合约以全局视角，描述完整的业务模式，包括：服务的目标客户，依赖的业务领域，输出的服务等等&lt;/span&gt;&lt;/h4&gt;&lt;h4&gt;&lt;span&gt;产品合约的内容是一份静态描述文件，需要由签署身份列表来界定使用场景&lt;/span&gt;&lt;/h4&gt;&lt;h4&gt;&lt;br/&gt;&lt;/h4&gt;&lt;h4&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;2）实例&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;p&gt;&lt;span&gt;以电商产品为例，商家单独签署的产品合约被作为商家合约，描述了商品的上架要求；商家+平台+买家共同签署的产品合约，则适用于交易下单场景。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.43425925925925923&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/I8SfHxT94hXTic2HemgChQibhFB6RVGZKiclHvebqbUQtYFJyLHKYZ71YvwTIc8nBbvdldo4ttusPcUH4FIlPVM0w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h4&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;3）搭建&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;/h4&gt;&lt;h4&gt;&lt;span/&gt;&lt;/h4&gt;&lt;h4&gt;&lt;span&gt;低代码：基于业务需求，在产品中心设计产品模板，明确合约分组和具体内容&lt;/span&gt;&lt;/h4&gt;&lt;h4&gt;&lt;span&gt;接入时编码，一次性：在业务系统内编写对应产品合约和签署身份的模型类，完成和产品中心的对接，包括合约的创建/失效，基于签署身份的合约查询等等&lt;/span&gt;&lt;/h4&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;h3&gt;&lt;br/&gt;&lt;/h3&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section data-role=&quot;title&quot; data-tools=&quot;135编辑器&quot; data-id=&quot;119027&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;strong data-brushtype=&quot;text&quot; hm_fix=&quot;174:315&quot;&gt;产品模式——合约分组 &lt;/strong&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section&gt;&lt;strong&gt; PRODUCT&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1）规约&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;合约分组以局部视角，描述某个高度内聚的业务领域所提供的功能和依赖的配置信息，包括：&lt;/span&gt;&lt;span&gt;业务模型，业务服务，业务流程，业务组件等等&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;多个合约分组共同组成一个可交付业务的产品合约&lt;/span&gt;&lt;/p&gt;&lt;h4&gt;&lt;br/&gt;&lt;/h4&gt;&lt;h4&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;2）实例&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;span&gt;电商产品合约下，商品分组描述了商品上架的流程和配置，下单分组约束了订单创建的流程和服务信息，退货分组则说明了退货流程和买家能够享受的客户服务。&lt;/span&gt;&lt;/p&gt;&lt;h4/&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.77&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/I8SfHxT94hXTic2HemgChQibhFB6RVGZKicXNNKKUic0wgDF4ACA6DmzmNTEUrS8ApsiakIDPrcHtPHfNgNMf0Fs2tQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;800&quot;/&gt;&lt;/p&gt;&lt;h4&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;&lt;h4&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;3）搭建&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;p&gt;&lt;span&gt;低代码：以元数据的方式定义一个合约分组，包含模型/流程/配置等等，每一个配置都可以用键路径/配置值类型和限制等描述&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;硬编码：在业务系统内定义合约分组的模型类，完成与产品合约内容交互的写入和读取，在业务代码处显式获取业务分组实例&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;低代码：搭建合约查询-&amp;gt;分组解析-&amp;gt;配置获取的通用框架(引入缓存避免重复查询)，业务层只需要通过元数据描述，就可以获取对应分组内的配置信息&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;h2&gt;&lt;br/&gt;&lt;/h2&gt;&lt;h2/&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section data-role=&quot;title&quot; data-tools=&quot;135编辑器&quot; data-id=&quot;119027&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;strong data-brushtype=&quot;text&quot; hm_fix=&quot;174:315&quot;&gt;业务领域——模型 &lt;/strong&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section&gt;&lt;strong&gt; MODEL&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1）规约&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;h4&gt;&lt;span&gt;业务模型描述一个领域内的核心业务实体，是唯一贯通业务流程和业务组件的业务实例&lt;/span&gt;&lt;/h4&gt;&lt;h4&gt;&lt;span&gt;一个业务模型内可以关联其他模型，但应避免出现循环依赖&lt;/span&gt;&lt;/h4&gt;&lt;h4&gt;&lt;span&gt;一个完备的业务模型描述需要包含：数据模型，视图模型，业务模型/数据模型/视图模型的三者转换，业务模型仓储等&lt;/span&gt;&lt;/h4&gt;&lt;h4&gt;&lt;br/&gt;&lt;/h4&gt;&lt;h4&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;2）实例&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;p&gt;&lt;span&gt;退货业务，基于退货单推进业务流程，各业务组件从退货单获取必要的业务信息，执行退货/退款/通知等业务功能；退货单关联自一个正向订单，但正向订单不可反向依赖退货单；一个退货单模型对应一张主单据表和多张退货明细表，仓储需要负责完成业务模型&amp;lt;-&amp;gt;数据模型的双向读写。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.4444444444444444&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/I8SfHxT94hXTic2HemgChQibhFB6RVGZKic8mxKrqFBXibO8cjdRICmhc2YZ8usOkEMQDuRd8mybuZGaW277mvVGcQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h4&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;3）搭建&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;h4&gt;&lt;span&gt;硬编码：编写业务模型(Model)/数据模型(DO)/数据交互(Mapper)/视图模型(VO)/转换层(Converter)/仓储(Repository)等等&lt;/span&gt;&lt;/h4&gt;&lt;h4&gt;&lt;span&gt;低代码：用元数据描述，自动生成DO/VO/Mapper/Converter；基于底座提供的仓储组件，也可以通过元数据描述，自动生成业务模型仓储的实例&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section data-role=&quot;title&quot; data-tools=&quot;135编辑器&quot; data-id=&quot;119027&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;strong data-brushtype=&quot;text&quot; hm_fix=&quot;174:315&quot;&gt;&lt;strong data-brushtype=&quot;text&quot; hm_fix=&quot;174:315&quot;&gt;业务领域——&lt;/strong&gt;服务 &lt;/strong&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section&gt;&lt;strong&gt; SERVE&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1）规约&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;业务服务是一套以业务领域为单位(interface)作聚合，开放给内外所有使用方的最小业务功能单元(method)&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;业务服&lt;/span&gt;&lt;span&gt;务需要一套定义规范(annotation/aop等)，对每一个功能单元有清晰直观的元数据描述，用以实现服务发现/文档生成/权限管控/稳定性保障等等。&lt;/span&gt;&lt;span&gt;元数据包括：&lt;/span&gt;&lt;span&gt;业务域，业务动作，读/写，错误码范围，返回值模型等等&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;业务服务的入参，限制为一个sysParam和一个bizParam，前者为调用来源/幂等ID/产品码/租户ID等系统参数，后者为各业务自行定义的模型参数，建议为可全链路透传(rpc-&amp;gt;api-&amp;gt;flow-&amp;gt;component)的POJO&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;业务服务以Result形式返回，错误码尽量控制在元数据描述的范围内，不泄漏任何exception给调用方。&lt;/span&gt;&lt;span&gt;返回的业务信息，建议为POJO或VO&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;业务服务不局限于调用方的物理来源，只需要在对接层增加简单的转换逻辑，做授权管控即可&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;写服务的实现，需要有事务管理机制&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4&gt;&lt;br/&gt;&lt;/h4&gt;&lt;h4&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;2）实例&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;java&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-snippet__class&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;DemoOrderService&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     * &lt;span class=&quot;code-snippet__doctag&quot;&gt;@param&lt;/span&gt; bizParam bizParam&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     * &lt;span class=&quot;code-snippet__doctag&quot;&gt;@return&lt;/span&gt; result&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__meta&quot;&gt;@ApiFunction&lt;/span&gt;(apiType = ApiType.SUBMIT, funcBiz = &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;ORDER&quot;&lt;/span&gt;,funcAction = &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;APPLY&quot;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            returnType = OrderApplyResponse.class, errorCodeType = CommonErrorCodeEnum.class)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__function&quot;&gt;CommonResult&amp;lt;OrderApplyResponse&amp;gt; &lt;span class=&quot;code-snippet__title&quot;&gt;apply&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(ApiReqSysParam sysParam, OrderApplyInfo bizParam)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;h4&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;3）搭建&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;p&gt;&lt;span&gt;定义-低代码：&lt;/span&gt;&lt;span&gt;基于元数据描述，自动生成interface+method+errorcode+POJO等等&lt;/span&gt;&lt;span&gt;实现&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;硬编码：&lt;/span&gt;&lt;span&gt;简单需求/不可模板化/无法流程化的业务需求，直接编码&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;低代码：&lt;/span&gt;&lt;span&gt;对于标准的流程发起服务(申请上架/申请下单/申请退货)，用模板实现合约分组加载-&amp;gt;流程配置加载-&amp;gt;流程初始化(幂等)-&amp;gt;流程触发-&amp;gt;结果处理；&lt;/span&gt;&lt;span&gt;对于标准的流程推进服务(通知回执/调度推进)，用模板实现流程配置加载-&amp;gt;流程触发-&amp;gt;结果处理等等。&lt;/span&gt;&lt;span&gt;随着更多服务场景的出现，可以有更多模板化的业务服务。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;硬编码：&lt;/span&gt;&lt;span&gt;与所有interface的使用一样，组装请求-&amp;gt;调用-&amp;gt;处理结果&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;低代码：&lt;/span&gt;&lt;span&gt;基于元数据描述和业务配置，将当前业务对象/外部参数映射为服务入参的POJO，异常处理模板化，成功返回的结果以同样方式映射回业务对象或外部响应&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section data-role=&quot;title&quot; data-tools=&quot;135编辑器&quot; data-id=&quot;119027&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;strong data-brushtype=&quot;text&quot; hm_fix=&quot;174:315&quot;&gt;&lt;strong data-brushtype=&quot;text&quot; hm_fix=&quot;174:315&quot;&gt;业务领域——&lt;/strong&gt;流程 &lt;/strong&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section&gt;&lt;strong&gt; PROCESS&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;h4&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1）规约&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Flow用于描述一个完整的业务流程，基于单个业务模型，推进一个或多个业务子环节&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;对于单个业务模型的同一类型业务流程，可以有多个Flow定义，以满足不同业务模式的定制需求&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Flow包含迁转 (transition) ，组件 (component) 和动作 (action) 三级结构，运作原理如下：每次触发 (operate) 对应于组件的一次action，所有action都成功的component会完结，而所有component都成功的transition将会触发Flow和业务模型的状态迁转。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Flow的目标是将复杂流程拆解成多个原子化的业务动作，相互解耦&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Flow需要结合业务服务/消息/调度等调用入口的触发，才能实现完备的流程推进&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Flow需要依赖外部调用方提供事务管理机制(通常是业务服务)，需要依赖业务模型仓储来控制模型的加载和存储&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4&gt;&lt;br/&gt;&lt;/h4&gt;&lt;h4&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;2）实例&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;xml&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;flow&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;OrderApply&quot;&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;version&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;001&quot;&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;desc&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;标准下单流程&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;config&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;model&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;xxx.xxx.Order&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;config&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;init&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;INIT&quot;&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;desc&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;初始化&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;action&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;operate&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;INIT.INIT&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;init&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;transitions&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;transition&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;from&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;INIT&quot;&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;to&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;ITEM_OCCUPIED&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;component&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;ITEM&quot;&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;desc&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;扣减库存&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;action&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;operate&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;ITEM.OCCUPY&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;component&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;transition&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;transition&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;from&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;ITEM_OCCUPIED&quot;&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;to&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;DISCOUNT_OCCUPIED&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;component&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;DISCOUNT&quot;&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;desc&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;扣减优惠&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;action&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;operate&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;DISCOUNT.OCCUPY&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;component&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;transition&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;transition&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;from&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;DISCOUNT_OCCUPIED&quot;&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;to&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;SUCCESS&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;component&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;NOTIFY&quot;&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;desc&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;下单成功通知&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;action&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;operate&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;NOTIFY.SELLER&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;action&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;operate&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;NOTIFY.BUYER&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;              &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;component&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;transition&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;transitions&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;flow&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;h4&gt;&lt;br/&gt;&lt;/h4&gt;&lt;h4&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;3）搭建&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;span&gt;低代码：Flow自身的运作由底座组件支撑，只需一次性编码；若需要定义业务流程，可基于业务组件模板和业务模型，动态生成Flow配置文件；加上版本控制和隔离机制，就可以防止兼容性问题&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;硬编码：Flow初始化场景，从当前业务领域的合约分组中，获取需要的Flow配置，初始化流程并推进；Flow推进场景，基于modelId+modelType+operate+request，可以用模版化代码自动触发&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;低代码：通过对合约分组中Flow配置的标准化，可以将Flow初始化场景也以模板化的方式实现；当一个现有业务服务需要支持新定制的业务流程时，只需调整合约内的配置即可。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section data-role=&quot;title&quot; data-tools=&quot;135编辑器&quot; data-id=&quot;119027&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;strong data-brushtype=&quot;text&quot; hm_fix=&quot;174:315&quot;&gt;&lt;strong data-brushtype=&quot;text&quot; hm_fix=&quot;174:315&quot;&gt;业务领域——&lt;/strong&gt;组件 &lt;/strong&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section&gt;&lt;strong&gt; COMPONENTS&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;h4&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1）规约&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;/h4&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;业务组件&lt;/span&gt;&lt;span&gt;是某一类业务动作的聚合，面向业务功能设计，不局限于任何一个业务模型&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;业务组件的业务动作，是原子化的最小业务单元，粒度暂无强制要求，但以解耦和复用程度为衡量依据；建议其依赖一个到多个基础设施/业务服务，以模板化的方式提供标准的业务动作实现&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;对于某个业务模型，业务组件通过开放适配器(详见【基础设施-适配】)的方式支持受控定制，或以完全复写的方式实现排他定制(不允许其他业务复用)&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;所有的核心业务逻辑，都应收归到业务组件层及其以下(无流程的简单业务服务除外)，包括但不限于：参数校验，业务校验，重入/幂等控制，业务模型变更，合约分组变更，计算规则，外部服务交互等等&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;业务组件需要一套定义规范(xml/annotation等)，对其支持的业务动作和业务模型有清晰直观的元数据描述，用以搭建业务流程。元数据包括：业务动作列表和对应的触发点(operate)，支持的业务模型列表&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4&gt;&lt;br/&gt;&lt;/h4&gt;&lt;h4&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;2）实例&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;span&gt;核身组件定义类&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;java&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-snippet__class&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;BizModelDiscountComponent&lt;/span&gt;&amp;lt;&lt;span class=&quot;code-snippet__title&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;BizModel&lt;/span&gt;&amp;gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;BizModelComponent&lt;/span&gt;&amp;lt;&lt;span class=&quot;code-snippet__title&quot;&gt;T&lt;/span&gt;&amp;gt; &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     * 占用优惠&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     * &lt;span class=&quot;code-snippet__doctag&quot;&gt;@param&lt;/span&gt; context&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;occupy&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(FlowContext context)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     * 退回优惠&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     * &lt;span class=&quot;code-snippet__doctag&quot;&gt;@param&lt;/span&gt; context&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;refund&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(FlowContext context)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;核身组件元数据配置&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;xml&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;componentTemplate&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;DISCOUNT&quot;&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;desc&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;优惠&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;xxx.xxx.BizModelDiscountComponent&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;bizModelMappings&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;bizModelMapping&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;bizModel&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;xxx.xxx.Order&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;componentEntry&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;orderDiscountComponent&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;bizModelMapping&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;bizModelMapping&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;bizModel&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;xxx.xxx.RefundOrder&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;componentEntry&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;refundOrderDiscountComponent&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;bizModelMapping&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;bizModelMappings&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;triggerMappings&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;triggerMapping&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;triggerTemplate&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;operatePostfix&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;OCCUPY&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;methodEntry&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;occupy&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;triggerMapping&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;triggerMapping&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;triggerTemplate&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;operatePostfix&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;REFUND&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;methodEntry&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;refund&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;triggerMapping&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;triggerMappings&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;componentTemplate&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;核身组件模板化实现&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;适配器Adapter的解释，详见【模型适配】小节&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;java&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;code-snippet__class&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;AbstractBizModelDiscountComponent&lt;/span&gt;&amp;lt;&lt;span class=&quot;code-snippet__title&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;BizModel&lt;/span&gt;&amp;gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;BizModelDiscountComponent&lt;/span&gt;&amp;lt;&lt;span class=&quot;code-snippet__title&quot;&gt;T&lt;/span&gt;&amp;gt; &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__meta&quot;&gt;@Resource&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;private&lt;/span&gt; DiscountApiService discountApiService;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;occupy&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(FlowContext context)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__comment&quot;&gt;// TODO AdapterConfigInfo根据context从当前合约中获取&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        T bizModel = (T) context.getBizModel();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        getDiscountAdapter().processOnOccupyResult(&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                bizModel,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                discountApiService.occupy(getDiscountAdapter().toOccupyInfo(bizModel, &lt;span class=&quot;code-snippet__keyword&quot;&gt;new&lt;/span&gt; AdapterConfigInfo()))&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        );&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;refund&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(FlowContext context)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__comment&quot;&gt;// TODO AdapterConfigInfo根据context从当前合约中获取&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        T bizModel = (T) context.getBizModel();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        getDiscountAdapter().processOnRefundResult(&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                bizModel,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                discountApiService.refund(getDiscountAdapter().toRefundInfo(bizModel, &lt;span class=&quot;code-snippet__keyword&quot;&gt;new&lt;/span&gt; AdapterConfigInfo()))&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        );&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__meta&quot;&gt;@SuppressWarnings&lt;/span&gt;(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;unchecked&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;protected&lt;/span&gt; BizModelToDiscountAdapter&amp;lt;T&amp;gt; &lt;span class=&quot;code-snippet__title&quot;&gt;getDiscountAdapter&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; (BizModelToDiscountAdapter&amp;lt;T&amp;gt;) FlowInstanceFactory.instanceBizAdapter(&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;DISCOUNT&quot;&lt;/span&gt;, (Class&amp;lt;? extends BizModel&amp;gt;) TypeUtils.getRealClassOfParameterizedType(&lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;));&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h4&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;3）搭建&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;p&gt;&lt;span&gt;硬编码：全新业务组件基本无法低代码化，需要开发有足够的设计思维和大局观，权衡复用度和成本后实现初版；随着业务发展，逐步抽象出模板化的业务组件实现；很多场景下，如果避免不了复杂的定制逻辑，可以自行以策略/职责链/工厂等多种设计模式落地，这依赖于开发者的建模能力，不做强制要求&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;低代码：已有的业务组件应用于新业务模型的场景，如果已经抽象出合约配置+适配器+基础设施的标准模板，只需做合约配置即可(通知/核身/存证上链等场景适合)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;低代码：在Flow底座中完成业务组件的编排/发现和触发，一次性编码；完成Flow配置，即完成业务组件的装配。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section data-role=&quot;title&quot; data-tools=&quot;135编辑器&quot; data-id=&quot;119027&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;strong data-brushtype=&quot;text&quot; hm_fix=&quot;174:315&quot;&gt;&lt;strong data-brushtype=&quot;text&quot; hm_fix=&quot;174:315&quot;&gt;基础设施&lt;/strong&gt; &lt;/strong&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section&gt;&lt;strong&gt; INFRASTRUCTURE&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;注：此处的基础设施与DDD中的概念有很大差异，请勿混淆&lt;/span&gt;&lt;/p&gt;&lt;h4&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1）规约&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;基础设施是&lt;/span&gt;&lt;span&gt;一套以高复用高内聚低变化的外部服务能力为单位(interface)作聚合，开放给业务服务/业务组件使用的最小功能单元(method)&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;基础设施可以是对渠道能力的封装，如外部商家渠道服务/跨境渠道服务等；&lt;/span&gt;&lt;span&gt;也可以是对通用技术能力的封装，如优惠服务/商品服务/客户服务等&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;基础设施和业务服务的差异在于：&lt;/span&gt;&lt;span&gt;前者的核心功能通常由外部服务提供，在当前系统内的核心职责是参数组装/场景识别/返回解析和异常处理&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;基础设施的定义不依赖于外部服务，入参为自行定义的标准POJO，返回值同样以Result封装，屏蔽外部服务的exception和业务异常，业务返回同样是标准POJO&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4&gt;&lt;br/&gt;&lt;/h4&gt;&lt;h4&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;2）实例&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;&lt;h4&gt;&lt;span&gt;基础设施-信息通知&lt;/span&gt;&lt;/h4&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;java&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-snippet__class&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;NotifyGateway&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     * 通知(邮件/短信/站内信)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     * &lt;span class=&quot;code-snippet__doctag&quot;&gt;@param&lt;/span&gt; notifyInfo&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     * &lt;span class=&quot;code-snippet__doctag&quot;&gt;@return&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__function&quot;&gt;CommonResult&amp;lt;NotifyResponse&amp;gt; &lt;span class=&quot;code-snippet__title&quot;&gt;notify&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(NotifyInfo notifyInfo)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;h4&gt;&lt;br/&gt;&lt;/h4&gt;&lt;h4&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;3）搭建&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;span/&gt;&lt;span&gt;硬编码：&lt;/span&gt;&lt;span&gt;基础设施的接入通常是一次性的，低代码的价值不易发挥&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span/&gt;&lt;span&gt;硬编码：&lt;/span&gt;&lt;span&gt;在业务服务/业务组件等调用方代码中，组装入参-&amp;gt;调用-&amp;gt;解析返回&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;低代码：&lt;/span&gt;&lt;span&gt;在业务组件中，基于下文将介绍的适配机制，可以实现：&lt;/span&gt;&lt;span&gt;合约配置+模板化业务组件，低代码复用现有基础设施&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;h2&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section data-role=&quot;title&quot; data-tools=&quot;135编辑器&quot; data-id=&quot;119027&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;strong data-brushtype=&quot;text&quot; hm_fix=&quot;174:315&quot;&gt;&lt;strong data-brushtype=&quot;text&quot; hm_fix=&quot;174:315&quot;&gt;模型适配&lt;/strong&gt; &lt;/strong&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section&gt;&lt;strong&gt; MODEL&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/h2&gt;&lt;h4&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1）规约&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;&lt;h4&gt;&lt;span&gt;模型适配用于衔接业务模型和基础设施/业务服务，实现模型-&amp;gt;入参和返回-&amp;gt;模型的双向处理&lt;/span&gt;&lt;/h4&gt;&lt;h4&gt;&lt;span&gt;在模板化的业务组件中，适配器和基础设施/业务服务的调用链已经固化，各业务模型的组件实例只需要实现对应的适配器，即可完成业务定制&lt;/span&gt;&lt;/h4&gt;&lt;h4&gt;&lt;span&gt;适配器通常与产品合约配置结合，描述业务模型-&amp;gt;基础设施/业务服务入参的映射关系&lt;/span&gt;&lt;/h4&gt;&lt;h4&gt;&lt;br/&gt;&lt;/h4&gt;&lt;h4&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;2）实例&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;&lt;h4&gt;&lt;span&gt;适配器-业务模型-&amp;gt;网银签名&lt;/span&gt;&lt;/h4&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;java&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;code-snippet__class&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;BizModelToDiscountAdapter&lt;/span&gt;&amp;lt;&lt;span class=&quot;code-snippet__title&quot;&gt;U&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;BizModel&lt;/span&gt;&amp;gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;BizModelAdapter&lt;/span&gt;&amp;lt;&lt;span class=&quot;code-snippet__title&quot;&gt;U&lt;/span&gt;&amp;gt; &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;code-snippet__title&quot;&gt;getType&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;DISCOUNT&quot;&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     * 生成扣减申请&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     * &lt;span class=&quot;code-snippet__doctag&quot;&gt;@param&lt;/span&gt; bizModel&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     * &lt;span class=&quot;code-snippet__doctag&quot;&gt;@return&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; OccupyInfo &lt;span class=&quot;code-snippet__title&quot;&gt;toOccupyInfo&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(U bizModel, AdapterConfigInfo configInfo)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     * 处理扣减结果&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     * &lt;span class=&quot;code-snippet__doctag&quot;&gt;@param&lt;/span&gt; bizModel&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     * &lt;span class=&quot;code-snippet__doctag&quot;&gt;@param&lt;/span&gt; result&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;processOnOccupyResult&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(U bizModel, CommonResult&amp;lt;OccupyResponse&amp;gt; result)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__comment&quot;&gt;//...&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;h4&gt;&lt;span&gt;订单模型Order，需要使用优惠扣减服务时，需要实现适配器BizModelToDiscountAdapter：&lt;/span&gt;&lt;/h4&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;java&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;@BizAdapter&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-snippet__class&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;OrderToDiscountAdapter&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;BizModelToDiscountAdapter&lt;/span&gt;&amp;lt;&lt;span class=&quot;code-snippet__title&quot;&gt;Order&lt;/span&gt;&amp;gt; &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; List&amp;lt;ConfigDef&amp;gt; &lt;span class=&quot;code-snippet__title&quot;&gt;getConfigDefs&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; Lists.newArrayList(&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                ConfigEnum.DISCOUNT_TYPE,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                ConfigEnum.DISCOUNT_TERM&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        );&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; OccupyInfo &lt;span class=&quot;code-snippet__title&quot;&gt;toOccupyInfo&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(Order bizModel, AdapterConfigInfo configInfo)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__comment&quot;&gt;// 解析出客户选择的优惠类型&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;new&lt;/span&gt; OccupyInfo();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;processOnOccupyResult&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(Order bizModel, CommonResult&amp;lt;OccupyResponse&amp;gt; result)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__comment&quot;&gt;// TODO 根据扣减成功的优惠,重新计算订单金额&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__comment&quot;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;h4&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;3）搭建&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;&lt;h4&gt;&lt;span&gt;定义-硬编码：当业务组件和基础设施/业务服务出现调用关系时首次定义，通常不再变更&lt;/span&gt;&lt;/h4&gt;&lt;h4&gt;&lt;span&gt;实现-低代码：可以用一套灵活的合约配置描述映射关系，实现一次编码后只需配置维护；但是，这既依赖于DSL级别的描述能力，也需要业务模型和基础设施/业务服务的设计者，都具备较高的抽象能力，成本较高&lt;/span&gt;&lt;/h4&gt;&lt;h4&gt;&lt;span&gt;硬编码：当业务开发抽象出可模板化的业务组件时，即完成了首次接入；当基础设施/业务服务出现新模式时，需要进行适配调整&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section data-role=&quot;title&quot; data-tools=&quot;135编辑器&quot; data-id=&quot;119028&quot;&gt;&lt;section&gt;&lt;section data-darkmode-bgcolor-16678013048235=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)&quot;&gt;&lt;section data-darkmode-bgcolor-16678013048235=&quot;rgb(187, 191, 195)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)&quot;&gt;&lt;section hm_fix=&quot;218:327&quot; data-darkmode-bgcolor-16678013048235=&quot;rgb(187, 191, 195)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)&quot;&gt;&lt;section data-darkmode-bgcolor-16678013048235=&quot;rgb(187, 191, 195)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)&quot;&gt;&lt;section data-darkmode-bgcolor-16678013048235=&quot;rgb(187, 191, 195)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)&quot; data-darkmode-color-16678013048235=&quot;rgb(6, 84, 234)&quot; data-darkmode-original-color-16678013048235=&quot;#fff|rgb(6, 84, 234)&quot;&gt;&lt;strong data-darkmode-bgcolor-16678013048235=&quot;rgb(187, 191, 195)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)&quot; data-darkmode-color-16678013048235=&quot;rgb(6, 84, 234)&quot; data-darkmode-original-color-16678013048235=&quot;#fff|rgb(6, 84, 234)&quot;&gt;04&lt;/strong&gt;&lt;/section&gt;&lt;section data-width=&quot;100%&quot; data-darkmode-bgcolor-16678013048235=&quot;rgb(149, 208, 205)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)|rgb(176, 245, 242)&quot;&gt;&lt;br data-darkmode-bgcolor-16678013048235=&quot;rgb(149, 208, 205)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)|rgb(176, 245, 242)&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-darkmode-bgcolor-16678013048235=&quot;rgb(187, 191, 195)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)&quot; data-darkmode-color-16678013048235=&quot;rgb(6, 84, 234)&quot; data-darkmode-original-color-16678013048235=&quot;#fff|rgb(6, 84, 234)&quot;&gt;&lt;strong&gt;总结&lt;/strong&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section data-role=&quot;list&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;啰嗦了这么多，为避免被过度细节冲淡主题。最后以几个问题做个小结：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;h2&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1  业务设计规范体现在哪里？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;section&gt;&lt;span&gt;架构层面，从产品合约-&amp;gt;业务领域-&amp;gt;基础设施，我们对应用做了模块拆解，在不同层面设计了业务规约，约束了各模块的职责；技术层面，通过多个底座组件，一定程度上实现了平台和业务定制的隔离，限制了业务细节的无序散布。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;h2&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;2  业务设计只有合适没有标准，为何要强制规范？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;section&gt;&lt;span&gt;规范的目的不是标准本身，本文提出的标准也未必适合所有问题域。想传达的是，团队内需要有业务设计的某种共识和沉淀，在每次迭代需求和每次项目产出的基础上，持续积累持续重构持续优化，这对新人融入/个人成长和团队协作都很有帮助。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;h2&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;3  如何快速支撑业务，研发效能提升体现在哪里？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;section&gt;&lt;span&gt;需要明确的是，对于全新的业务需求，不会带来明显的效能提升，甚至会为了满足设计规范，带来一定程度的额外成本。但当多人协作，工作交接，或是现有功能部分可复用的场景下，会减少很多不必要的沟通和维护成本。举例来说，当一个业务需求出现时，研发人员需要做如下判断：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;业务模型：是否需要新的业务模型，是否需要调整现有模型&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;业务服务：xxx业务服务，xxx现有服务&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;业务流程：xxx业务流程，xxx现有流程&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;业务组件：xxx业务组件，xxx现有组件&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;基础设施：xxx基础设施，xxx现有设施&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;产品合约/合约分组：基于上述判断，评估产品合约和合约分组的组装&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;带来的效能提升有这样几点：业务领域的每个模块互相解耦，研发过程并行化，投入人员1+1可以=2；改造范围更易于定位，资源评估更为准确，进度把控更加清晰；针对频繁变动且成本过高的模块，进行针对性的重构，影响范围可控；上文中的很多处规约，都有潜在的低代码化可能，能进一步提升搭建效率。&lt;/span&gt;&lt;span/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;section data-darkmode-bgcolor-16575230563660=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16575230563660=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16575230563660=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16575230563660=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16587294727069=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16587294727069=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16587294727069=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16587294727069=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16593397383442=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16593397383442=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16593397383442=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16593397383442=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16599445342001=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16599445342001=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16599445342001=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16599445342001=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16605471479291=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16605471479291=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16605471479291=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16605471479291=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16665918596777=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16665918596777=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16665918596777=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16665918596777=&quot;#fff|rgb(34, 34, 34)&quot; data-style=&quot;margin-bottom: 0em; outline: 0px; max-width: 100%; box-sizing: border-box; color: rgb(34, 34, 34); letter-spacing: 0.544px; white-space: normal; caret-color: rgb(34, 34, 34); text-size-adjust: inherit; background-color: rgb(255, 255, 255); font-size: 16px; font-family: system-ui, -apple-system, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; overflow-wrap: break-word !important;&quot;&gt;&lt;section data-darkmode-bgcolor-16575230563660=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16575230563660=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16575230563660=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16575230563660=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16587294727069=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16587294727069=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16587294727069=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16587294727069=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16593397383442=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16593397383442=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16593397383442=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16593397383442=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16599445342001=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16599445342001=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16599445342001=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16599445342001=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16605471479291=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16605471479291=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16605471479291=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16605471479291=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16665918596777=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16665918596777=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16665918596777=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16665918596777=&quot;#fff|rgb(34, 34, 34)&quot;&gt;&lt;section data-darkmode-bgcolor-16575230563660=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16575230563660=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16575230563660=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16575230563660=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16587294727069=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16587294727069=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16587294727069=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16587294727069=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16593397383442=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16593397383442=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16593397383442=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16593397383442=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16599445342001=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16599445342001=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16599445342001=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16599445342001=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16605471479291=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16605471479291=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16605471479291=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16605471479291=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16665918596777=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16665918596777=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16665918596777=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16665918596777=&quot;#fff|rgb(34, 34, 34)&quot;&gt;&lt;section data-darkmode-bgcolor-16575230563660=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16575230563660=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16575230563660=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16575230563660=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16587294727069=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16587294727069=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16587294727069=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16587294727069=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16593397383442=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16593397383442=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16593397383442=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16593397383442=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16599445342001=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16599445342001=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16599445342001=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16599445342001=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16605471479291=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16605471479291=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16605471479291=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16605471479291=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16665918596777=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16665918596777=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16665918596777=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16665918596777=&quot;#fff|rgb(34, 34, 34)&quot;&gt;&lt;section data-darkmode-bgcolor-16575230563660=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16575230563660=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16575230563660=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16575230563660=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16587294727069=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16587294727069=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16587294727069=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16587294727069=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16593397383442=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16593397383442=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16593397383442=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16593397383442=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16599445342001=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16599445342001=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16599445342001=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16599445342001=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16605471479291=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16605471479291=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16605471479291=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16605471479291=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16665918596777=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16665918596777=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16665918596777=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16665918596777=&quot;#fff|rgb(34, 34, 34)&quot;&gt;&lt;section data-darkmode-bgcolor-16518176071663=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16518176071663=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-bgcolor-16526830592083=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16526830592083=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16526830592083=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16526830592083=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16532902304850=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16532902304850=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16532902304850=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16532902304850=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16538961289579=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16538961289579=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16538961289579=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16538961289579=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16544970019867=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16544970019867=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16544970019867=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16544970019867=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16569143641019=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16569143641019=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16569143641019=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16569143641019=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16575230563660=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16575230563660=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16575230563660=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16575230563660=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16587294727069=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16587294727069=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16587294727069=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16587294727069=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16593397383442=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16593397383442=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16593397383442=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16593397383442=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16599445342001=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16599445342001=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16599445342001=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16599445342001=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16605471479291=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16605471479291=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16605471479291=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16605471479291=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16665918596777=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16665918596777=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16665918596777=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16665918596777=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16678013048235=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16678013048235=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16678013048235=&quot;#fff|rgb(25, 25, 25)&quot;&gt;&lt;section data-darkmode-bgcolor-16518176071663=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16518176071663=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-bgcolor-16526830592083=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16526830592083=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16526830592083=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16526830592083=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16532902304850=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16532902304850=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16532902304850=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16532902304850=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16538961289579=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16538961289579=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16538961289579=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16538961289579=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16544970019867=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16544970019867=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16544970019867=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16544970019867=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16569143641019=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16569143641019=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16569143641019=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16569143641019=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16575230563660=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16575230563660=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16575230563660=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16575230563660=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16587294727069=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16587294727069=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16587294727069=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16587294727069=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16593397383442=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16593397383442=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16593397383442=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16593397383442=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16599445342001=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16599445342001=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16599445342001=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16599445342001=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16605471479291=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16605471479291=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16605471479291=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16605471479291=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16665918596777=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16665918596777=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16665918596777=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16665918596777=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16678013048235=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16678013048235=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16678013048235=&quot;#fff|rgb(25, 25, 25)&quot;&gt;&lt;svg viewbox=&quot;0 0 1 1&quot; data-darkmode-bgcolor-16518176071663=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16518176071663=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-bgcolor-16526830592083=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16526830592083=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16526830592083=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16526830592083=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16532902304850=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16532902304850=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16532902304850=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16532902304850=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16538961289579=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16538961289579=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16538961289579=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16538961289579=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16544970019867=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16544970019867=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16544970019867=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16544970019867=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16569143641019=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16569143641019=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16569143641019=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16569143641019=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16575230563660=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16575230563660=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16575230563660=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16575230563660=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16587294727069=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16587294727069=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16587294727069=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16587294727069=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16593397383442=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16593397383442=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16593397383442=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16593397383442=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16599445342001=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16599445342001=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16599445342001=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16599445342001=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16605471479291=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16605471479291=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16605471479291=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16605471479291=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16665918596777=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16665918596777=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16665918596777=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16665918596777=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16678013048235=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16678013048235=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16678013048235=&quot;#fff|rgb(25, 25, 25)&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-darkmode-bgcolor-16575230563660=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16575230563660=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16575230563660=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16575230563660=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16587294727069=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16587294727069=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16587294727069=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16587294727069=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16593397383442=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16593397383442=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16593397383442=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16593397383442=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16599445342001=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16599445342001=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16599445342001=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16599445342001=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16605471479291=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16605471479291=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16605471479291=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16605471479291=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16665918596777=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16665918596777=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16665918596777=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16665918596777=&quot;#fff|rgb(34, 34, 34)&quot;&gt;&lt;section data-darkmode-bgcolor-16575230563660=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16575230563660=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16575230563660=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16575230563660=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16587294727069=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16587294727069=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16587294727069=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16587294727069=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16593397383442=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16593397383442=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16593397383442=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16593397383442=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16599445342001=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16599445342001=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16599445342001=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16599445342001=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16605471479291=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16605471479291=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16605471479291=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16605471479291=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16665918596777=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16665918596777=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16665918596777=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16665918596777=&quot;#fff|rgb(34, 34, 34)&quot;&gt;&lt;section data-darkmode-bgcolor-16575230563660=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16575230563660=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16575230563660=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16575230563660=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16587294727069=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16587294727069=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16587294727069=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16587294727069=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16593397383442=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16593397383442=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16593397383442=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16593397383442=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16599445342001=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16599445342001=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16599445342001=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16599445342001=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16605471479291=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16605471479291=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16605471479291=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16605471479291=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16665918596777=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16665918596777=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16665918596777=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16665918596777=&quot;#fff|rgb(34, 34, 34)&quot;&gt;&lt;section data-darkmode-bgcolor-16518176071663=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16518176071663=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-bgcolor-16526830592083=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16526830592083=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16526830592083=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16526830592083=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16532902304850=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16532902304850=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16532902304850=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16532902304850=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16538961289579=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16538961289579=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16538961289579=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16538961289579=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16544970019867=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16544970019867=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16544970019867=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16544970019867=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16569143641019=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16569143641019=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16569143641019=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16569143641019=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16575230563660=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16575230563660=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16575230563660=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16575230563660=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16587294727069=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16587294727069=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16587294727069=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16587294727069=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16593397383442=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16593397383442=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16593397383442=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16593397383442=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16599445342001=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16599445342001=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16599445342001=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16599445342001=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16605471479291=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16605471479291=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16605471479291=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16605471479291=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16665918596777=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16665918596777=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16665918596777=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16665918596777=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16678013048235=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16678013048235=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16678013048235=&quot;#fff|rgb(25, 25, 25)&quot;&gt;&lt;section data-darkmode-bgcolor-16518176071663=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16518176071663=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-bgcolor-16526830592083=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16526830592083=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16526830592083=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16526830592083=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16532902304850=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16532902304850=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16532902304850=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16532902304850=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16538961289579=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16538961289579=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16538961289579=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16538961289579=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16544970019867=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16544970019867=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16544970019867=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16544970019867=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16569143641019=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16569143641019=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16569143641019=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16569143641019=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16575230563660=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16575230563660=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16575230563660=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16575230563660=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16587294727069=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16587294727069=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16587294727069=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16587294727069=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16593397383442=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16593397383442=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16593397383442=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16593397383442=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16599445342001=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16599445342001=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16599445342001=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16599445342001=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16605471479291=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16605471479291=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16605471479291=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16605471479291=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16665918596777=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16665918596777=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16665918596777=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16665918596777=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16678013048235=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16678013048235=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16678013048235=&quot;#fff|rgb(25, 25, 25)&quot;&gt;&lt;section data-darkmode-bgcolor-16518176071663=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16518176071663=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-bgcolor-16526830592083=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16526830592083=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16526830592083=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16526830592083=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16532902304850=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16532902304850=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16532902304850=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16532902304850=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16538961289579=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16538961289579=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16538961289579=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16538961289579=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16544970019867=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16544970019867=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16544970019867=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16544970019867=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16569143641019=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16569143641019=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16569143641019=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16569143641019=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16575230563660=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16575230563660=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16575230563660=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16575230563660=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16587294727069=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16587294727069=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16587294727069=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16587294727069=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16593397383442=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16593397383442=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16593397383442=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16593397383442=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16599445342001=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16599445342001=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16599445342001=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16599445342001=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16605471479291=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16605471479291=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16605471479291=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16605471479291=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16665918596777=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16665918596777=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16665918596777=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16665918596777=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16678013048235=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16678013048235=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16678013048235=&quot;#fff|rgb(25, 25, 25)&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.1503267973856209&quot; data-type=&quot;gif&quot; data-w=&quot;306&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_gif/I8SfHxT94hVCpsg0j390w6mNUrLXEicv7IzQCSd37F6kibGnqCe8PGp0iazd8Eo5ichyjuJmC6cWx9KDAJLXpPglDg/640?wx_fmt=gif&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-darkmode-bgcolor-16575230563660=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16575230563660=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16575230563660=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16575230563660=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16587294727069=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16587294727069=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16587294727069=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16587294727069=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16593397383442=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16593397383442=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16593397383442=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16593397383442=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16599445342001=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16599445342001=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16599445342001=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16599445342001=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16605471479291=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16605471479291=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16605471479291=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16605471479291=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16665918596777=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16665918596777=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16665918596777=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16665918596777=&quot;#fff|rgb(34, 34, 34)&quot;&gt;&lt;section data-darkmode-bgcolor-16575230563660=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16575230563660=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16575230563660=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16575230563660=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16587294727069=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16587294727069=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16587294727069=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16587294727069=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16593397383442=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16593397383442=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16593397383442=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16593397383442=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16599445342001=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16599445342001=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16599445342001=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16599445342001=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16605471479291=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16605471479291=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16605471479291=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16605471479291=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16665918596777=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16665918596777=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16665918596777=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16665918596777=&quot;#fff|rgb(34, 34, 34)&quot;&gt;&lt;section data-darkmode-bgcolor-16518176071663=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16518176071663=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-bgcolor-16526830592083=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16526830592083=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16526830592083=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16526830592083=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16532902304850=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16532902304850=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16532902304850=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16532902304850=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16538961289579=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16538961289579=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16538961289579=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16538961289579=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16544970019867=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16544970019867=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16544970019867=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16544970019867=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16569143641019=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16569143641019=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16569143641019=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16569143641019=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16575230563660=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16575230563660=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16575230563660=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16575230563660=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16587294727069=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16587294727069=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16587294727069=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16587294727069=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16593397383442=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16593397383442=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16593397383442=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16593397383442=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16599445342001=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16599445342001=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16599445342001=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16599445342001=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16605471479291=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16605471479291=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16605471479291=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16605471479291=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16665918596777=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16665918596777=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16665918596777=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16665918596777=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16678013048235=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16678013048235=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16678013048235=&quot;#fff|rgb(25, 25, 25)&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-darkmode-bgcolor-16665918596777=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16665918596777=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16665918596777=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16665918596777=&quot;#fff|rgb(34, 34, 34)&quot; data-style=&quot;margin-top: 8px; margin-bottom: 0em; outline: 0px; max-width: 100%; color: rgb(34, 34, 34); letter-spacing: 0.544px; white-space: normal; text-align: left; caret-color: rgb(34, 34, 34); text-size-adjust: inherit; background-color: rgb(255, 255, 255); font-family: system-ui, -apple-system, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;&lt;section data-role=&quot;title&quot; data-tools=&quot;135编辑器&quot; data-id=&quot;120481&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong data-brushtype=&quot;text&quot;&gt;更多代码设计内容&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU3NzczMDI4Ng==&amp;amp;mid=2247485901&amp;amp;idx=1&amp;amp;sn=a00ccfafd3eb82d074b6edc91507f661&amp;amp;chksm=fd016a4cca76e35a5da61155a381f815b5f67d675ef9200e706e3c7e3d474b8a5c8cb5abe2dc&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;业务团队如何统一架构设计风格？&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;11&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;业务团队如何统一架构设计风格？&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU3NzczMDI4Ng==&amp;amp;mid=2247485714&amp;amp;idx=1&amp;amp;sn=ebacd3dc35d1188598ef9b18284905ca&amp;amp;chksm=fd016a93ca76e385c15defbc8c2504923ca4d512fe0446682df9cb9fd46fef8930081426540b&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;这么设计服务的幂等性就对了！&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;这么设计服务的幂等性就对了！&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU3NzczMDI4Ng==&amp;amp;mid=2247485635&amp;amp;idx=1&amp;amp;sn=1eb844a012e3d68f9b08dcb3bd5d98d2&amp;amp;chksm=fd016b42ca76e2547ab662890e9b50d6ec64060103f62b888cdeaab41b2902ffa2b3f205ef45&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;如何通过代码重构让你的代码赏心悦目？&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;如何通过代码重构让你的代码赏心悦目？&lt;/a&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;mp-common-profile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-weui-theme=&quot;light&quot; data-id=&quot;MzU3NzczMDI4Ng==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/sz_mmbiz_png/I8SfHxT94hU6P7Y4EMhbdHr7WDSMZt9wjEZfR28HDTcOac5u4A8ibiaIR2Miad2cCILq1FCH6NHZesEoOXLeuBopA/0?wx_fmt=png&quot; data-nickname=&quot;蚂蚁研发效能&quot; data-alias=&quot;AntLinkE&quot; data-signature=&quot;蚂蚁集团研发效能部有业界领先的工程和学术造诣，致力于为蚂蚁和多家金融企业提供核电级的全生命周期研发产品。&quot; data-from=&quot;0&quot; data-is_biz_ban=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;mp-style-type data-value=&quot;3&quot;/&gt;&lt;/p&gt;&lt;/div&gt;

          
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>c640d5d8c4098a410c339d599dd0652c</guid>
<title>详解数据仓库和数据集市：ODS、DW、DWD、DWM、DWS、ADS</title>
<link>https://toutiao.io/k/dtop9pr</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content js_underline_content             autoTypeSetting24psection&amp;#10;            &quot; id=&quot;js_content&quot;&gt;&lt;h2 data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/h2&gt;&lt;h2&gt;&lt;span&gt;01&lt;/span&gt;&lt;/h2&gt;&lt;h2&gt;&lt;span&gt;数据流向&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-croporisrc=&quot;https://mmbiz.qpic.cn/sz_mmbiz_jpg/krYX9qLk0KjKy35xHUOb4iaVWK4b3OL598lI8d2wDCUdNFsFSYbMNq19DU3IkBpPDN9t2zQ76qrGGW2e5W8dOyQ/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-cropx1=&quot;78.99117276166456&quot; data-cropx2=&quot;995.5611601513241&quot; data-cropy1=&quot;0&quot; data-cropy2=&quot;1033.7370753323487&quot; data-ratio=&quot;1.1275899672846237&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/p2v54xNeNEY74ClO39rH6CBICPFv4uvjSnbsh5tpTnzRfCtNyf92ZibddbiajWM9anWEqJbuPyzIHmekGpVrDplg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;917&quot;/&gt;&lt;/p&gt;&lt;h2&gt;&lt;span&gt;02&lt;/span&gt;&lt;/h2&gt;&lt;h2&gt;&lt;span&gt;应用示例&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-croporisrc=&quot;https://mmbiz.qpic.cn/sz_mmbiz_jpg/krYX9qLk0KjKy35xHUOb4iaVWK4b3OL59epZ9OGetibtCNyia6Ob0Iy6bjDtCPGhpbwBF9hC78EdxgRzwXDGKZlNA/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-cropx1=&quot;0&quot; data-cropx2=&quot;651&quot; data-cropy1=&quot;0&quot; data-cropy2=&quot;705&quot; data-ratio=&quot;1.0814132104454686&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/p2v54xNeNEY74ClO39rH6CBICPFv4uvjygT6ptKcm15boh2ErQhtl6gtOOSfJUounPfpM46RG6tRriaex12sBBQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;651&quot;/&gt;&lt;/p&gt;&lt;h2&gt;&lt;span&gt;03&lt;/span&gt;&lt;/h2&gt;&lt;h2&gt;&lt;span&gt;何为数仓DW&lt;/span&gt;&lt;/h2&gt;&lt;h2&gt;&lt;span/&gt;&lt;/h2&gt;&lt;h2&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;Data warehouse（可简写为DW或者DWH）数据仓库，是在数据库已经大量存在的情况下，它是一整套包括了etl、调度、建模在内的完整的理论体系。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;数据仓库的方案建设的目的，是为前端查询和分析作为基础，主要应用于OLAP（on-line Analytical Processing），支持复杂的分析操作，侧重决策支持，并且提供直观易懂的查询结果。目前行业比较流行的有：AWS Redshift，Greenplum，Hive等。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;数据仓库并不是数据的最终目的地，而是为数据最终的目的地做好准备，这些准备包含：清洗、转义、分类、重组、合并、拆分、统计等&lt;/span&gt;&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;&lt;span&gt;主要特点&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;h3&gt;&lt;span&gt;与数据库的对比&lt;/span&gt;&lt;/h3&gt;&lt;h2&gt;&lt;span&gt;04&lt;/span&gt;&lt;/h2&gt;&lt;h2&gt;&lt;span&gt;为何要分层&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;数据仓库中涉及到的问题：&lt;/span&gt;&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;为什么要做数据仓库？&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;为什么要做数据质量管理？&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;为什么要做元数据管理？&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;数仓分层中每个层的作用是什么？&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;…...&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;span&gt;在实际的工作中，我们都希望自己的数据能够有顺序地流转，设计者和使用者能够清晰地知道数据的整个声明周期，比如下面左图。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;但是，实际情况下，我们所面临的数据状况很有可能是复杂性高、且层级混乱的，我们可能会做出一套表依赖结构混乱，且出现循环依赖的数据体系，比如下面的右图。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-croporisrc=&quot;https://mmbiz.qpic.cn/sz_mmbiz_jpg/krYX9qLk0KjKy35xHUOb4iaVWK4b3OL59HGRVhRjzbFOAO9fmPhtYI3phEYEFdKwGenPSGJbPR4SUMMfciaEATtQ/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-cropx1=&quot;0&quot; data-cropx2=&quot;720&quot; data-cropy1=&quot;0&quot; data-cropy2=&quot;238.2274741506647&quot; data-ratio=&quot;0.33055555555555555&quot; data-type=&quot;jpeg&quot; data-w=&quot;720&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/p2v54xNeNEY74ClO39rH6CBICPFv4uvjibK32Wic6IwtaicCMicr2D432YoMPlwgnxNcvtU90FLRlU7FS6hu1LhzhA/640?wx_fmt=jpeg&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;为了解决我们可能面临的问题，需要一套行之有效的数据组织、管理和处理方法，来让我们的数据体系更加有序，这就是&lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI0Mjc0MDU2NQ==&amp;amp;mid=2247490980&amp;amp;idx=1&amp;amp;sn=d26fba75ef60658edd9779a374f43807&amp;amp;chksm=e976e19ede016888e413191ee8f3f8b626c8ef57e6ddb9877c79a1990a4fccbb9a40ed5af757&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;数据分层&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;&lt;span&gt;数据分层&lt;/span&gt;&lt;/a&gt;&lt;span&gt;。数据分层的好处：&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;清晰数据结构：让每个数据层都有自己的作用和职责，在使用和维护的时候能够更方便和理解&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;复杂问题简化：将一个复杂的任务拆解成多个步骤来分步骤完成，每个层只解决特定的问题&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;统一数据口径：通过数据分层，提供统一的数据出口，统一输出口径&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;减少重复开发：规范数据分层，开发通用的中间层，可以极大地减少重复计算的工作&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;&lt;span&gt;05&lt;/span&gt;&lt;/h2&gt;&lt;h2&gt;&lt;span&gt;数据分层&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;每个公司的业务都可以根据自己的业务需求分层不同的层次；目前比较成熟的数据分层：数据运营层ODS、数据仓库层DW、数据服务层ADS(APP)。&lt;/span&gt;&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;&lt;span&gt;数据运营层ODS&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;数据运营层：Operation Data Store 数据准备区，也称为贴源层。数据源中的数据，经过抽取、洗净、传输，也就是ETL过程之后进入本层。该层的主要功能：&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;ODS是后面数据仓库层的准备区&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;为DWD层提供原始数据&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;减少对业务系统的影响&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;在源数据装入这一层时，要进行诸如去噪（例如有一条数据中人的年龄是 300 岁，这种属于异常数据，就需要提前做一些处理）、去重(例如在个人资料表中，同一 ID 却有两条重复数据，在接入的时候需要做一步去重)、字段命名规范等一系列操作。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;但是为了考虑后续可能需要追溯数据问题，因此对于这一层就不建议做过多的数据清洗工作，原封不动地接入原始数据也可以，根据业务具体分层的需求来做。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这层的数据是后续数据仓库加工数据的来源。数据来源的方式：&lt;/span&gt;&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;&lt;span&gt;数据仓库层&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;数据仓库层从上到下，又可以分为3个层：数据细节层DWD、数据中间层DWM、数据服务层DWS。&lt;/span&gt;&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;&lt;span&gt;数据细节层DWD&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;数据细节层：data warehouse details，DWD(数据清洗/DWI)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;该层是业务层和数据仓库的隔离层，保持和ODS层一样的数据颗粒度；主要是对ODS数据层做一些数据的清洗和规范化的操作，比如去除空数据、脏数据、离群值等。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;为了提高数据明细层的易用性，该层通常会才采用一些维度退化方法，将维度退化至事实表中，减少事实表和维表的关联。&lt;/span&gt;&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;&lt;span&gt;数据中间层DWM&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;数据中间层：Data Warehouse Middle，DWM&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;该层是在DWD层的数据基础上，对数据做一些轻微的聚合操作，生成一些列的中间结果表，提升公共指标的复用性，减少重复加工的工作。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;简答来说，对通用的核心维度进行聚合操作，算出相应的统计指标。&lt;/span&gt;&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;&lt;span&gt;数据服务层DWS&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;数据服务层：Data Warehouse Service，DWS(宽表-用户行为，轻度聚合)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;该层是基于DWM上的基础数据，整合汇总成分析某一个主题域的数据服务层，一般是宽表，用于提供后续的业务查询，&lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI0Mjc0MDU2NQ==&amp;amp;mid=2247485083&amp;amp;idx=1&amp;amp;sn=75a094511944c1d0e3f1d8f47f447313&amp;amp;chksm=e976faa1de0173b7dac853363c836b9bc579684eb8ead0652d752baf0875ba406937e842e5a3&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;OLAP&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;&lt;span&gt;OLAP&lt;/span&gt;&lt;/a&gt;&lt;span&gt;分析，数据分发等。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;一般来说，该层的数据表会相对较少；一张表会涵盖比较多的业务内容，由于其字段较多，因此一般也会称该层的表为宽表。&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;用户行为，轻度聚合对DWD&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;主要对ODS/DWD层数据做一些轻度的汇总。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;&lt;strong&gt;&lt;span&gt;数据应用层ADS&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;数据应用层：Application Data Service，ADS(APP/DAL/DF)-出报表结果&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;该层主要是提供给数据产品和数据分析使用的数据，一般会存放在ES、&lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI0Mjc0MDU2NQ==&amp;amp;mid=2247483857&amp;amp;idx=1&amp;amp;sn=c995e37b278604bec7f04e3f249a6a7a&amp;amp;chksm=e976fdebde0174fd902614dbdb63e7ff407f15ae6b0db3fed4a76f472325502a8f63854b9a1d&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;Redis&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;&lt;span&gt;Redis&lt;/span&gt;&lt;/a&gt;&lt;span&gt;、PostgreSql等系统中供线上系统使用；也可能存放在&lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI0Mjc0MDU2NQ==&amp;amp;mid=2247486633&amp;amp;idx=1&amp;amp;sn=0749c4f7eaac7886fd9a27b351b96538&amp;amp;chksm=e976f093de017985f37fd384c8482cab04b9f9f0e0509eb960844fd3fd8f45872171961342c0&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;hive&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;&lt;span&gt;hive&lt;/span&gt;&lt;/a&gt;&lt;span&gt;或者Druid中，供数据分析和数据挖掘使用，比如常用的数据报表就是存在这里的。&lt;/span&gt;&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;&lt;span&gt;事实表 Fact Table&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;事实表是指存储有事实记录的表，比如系统日志、销售记录等。事实表的记录在不断地增长，比如电商的商品订单表，就是类似的情况，所以事实表的体积通常是远大于其他表。&lt;/span&gt;&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;&lt;span&gt;维表层Dimension（DIM）&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;维度表（Dimension Table）或维表，有时也称查找表（Lookup Table），是与事实表相对应的一种表；它保存了维度的属性值，可以跟事实表做关联，相当于将事实表上经常重复出现的属性抽取、规范出来用一张表进行管理。维度表主要是包含两个部分：&lt;/span&gt;&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;&lt;span&gt;临时表TMP&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;每一层的计算都会有很多临时表，专设一个DWTMP层来存储我们数据仓库的临时表&lt;/span&gt;&lt;/p&gt;&lt;h2&gt;&lt;span&gt;06&lt;/span&gt;&lt;/h2&gt;&lt;h2&gt;&lt;span&gt;数据集市&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;狭义ADS层；广义上指hadoop从DWD DWS &lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI0Mjc0MDU2NQ==&amp;amp;mid=2247488579&amp;amp;idx=1&amp;amp;sn=6369000867b9a24cf2278020f2ea2adc&amp;amp;chksm=e976e879de01616f98a2b0d2c9557d43345afe8c192de7f7e349d2a56a934a66f14b27db6ab2&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;ADS&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;&lt;span&gt;ADS&lt;/span&gt;&lt;/a&gt;&lt;span&gt; 同步到RDS的数据&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;数据集市（Data Mart），也叫数据市场，数据集市就是满足特定的部门或者用户的需求，按照多维的方式进行存储，包括定义维度、需要计算的指标、维度的层次等，生成面向决策分析需求的数据立方体。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;从范围上来说，数据是从企业范围的数据库、数据仓库，或者是更加专业的数据仓库中抽取出来的。数据中心的重点就在于它迎合了专业用户群体的特殊需求，在分析、内容、表现，以及易用方面。数据中心的用户希望数据是由他们熟悉的术语表现的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;带有数据集市的数据仓储结构&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-croporisrc=&quot;https://mmbiz.qpic.cn/sz_mmbiz_jpg/krYX9qLk0KjKy35xHUOb4iaVWK4b3OL599zrYxbsFXvXiagkgl4jBSNhYCeNAdeBp7Y4SIcUpReuicur5CBZM2T5g/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-cropx1=&quot;0&quot; data-cropx2=&quot;354&quot; data-cropy1=&quot;0&quot; data-cropy2=&quot;357&quot; data-ratio=&quot;1.0056497175141244&quot; data-type=&quot;jpeg&quot; data-w=&quot;354&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/p2v54xNeNEY74ClO39rH6CBICPFv4uvj4ARz9COYibK9uvotlRhvvg3MkfkrJ0P2PZcQgjaAyIRFVrqoOwm4xKw/640?wx_fmt=jpeg&quot;/&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;区别数据仓库&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/figure&gt;&lt;p&gt;&lt;span&gt;数据集市就是企业级数据仓库的一个子集，它主要面向部门级业务，并且只面向某个特定的主题。为了解决灵活性与性能之间的矛盾，数据集市就是数据仓库体系结构中增加的一种小型的部门或工作组级别的数据仓库。数据集市存储为特定用户预先计算好的数据，从而满足用户对性能的需求。数据集市可以在一定程度上缓解访问数据仓库的瓶颈。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;理论上讲，应该有一个总的数据仓库的概念，然后才有数据集市。实际建设数据集市的时候，国内很少这么做。国内一般会先从数据集市入手，就某一个特定的主题（比如企业的客户信息）先做数据集市，再建设数据仓库。数据仓库和数据集市建立的先后次序之分，是和设计方法紧密相关的。而数据仓库作为工程学科，并没有对错之分。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在数据结构上，数据仓库是面向主题的、集成的数据的集合。而数据集市通常被定义为星型结构或者&lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI0Mjc0MDU2NQ==&amp;amp;mid=2247488589&amp;amp;idx=1&amp;amp;sn=8825644356f0f238038c2376c7e2b911&amp;amp;chksm=e976e877de016161e72be42b17e06853d9c92e2b8e54f10265a218c42ea5d13db62c7170a917&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;雪花型&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;&lt;span&gt;雪花型&lt;/span&gt;&lt;/a&gt;&lt;span&gt;数据结构，数据集市一般是由一张事实表和几张维表组成的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-croporisrc=&quot;https://mmbiz.qpic.cn/sz_mmbiz_jpg/krYX9qLk0KjKy35xHUOb4iaVWK4b3OL59PFXcbztIwdzpVhibtic8reFZH2cF6E0uean6KgZIrVJk4PhBw0JVYpCQ/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-cropx1=&quot;0&quot; data-cropx2=&quot;815&quot; data-cropy1=&quot;0&quot; data-cropy2=&quot;382.82127031019206&quot; data-ratio=&quot;0.4687116564417178&quot; data-type=&quot;jpeg&quot; data-w=&quot;815&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/p2v54xNeNEY74ClO39rH6CBICPFv4uvj7g9Zs0hj4fhoPWX36OzWYEEdcPXSTweAvicX3zHia5GP8iaqDcl30qQkQ/640?wx_fmt=jpeg&quot;/&gt;&lt;/p&gt;&lt;h2&gt;&lt;span&gt;07&lt;/span&gt;&lt;/h2&gt;&lt;h2&gt;&lt;span&gt;问题总结&lt;/span&gt;&lt;/h2&gt;&lt;h3&gt;&lt;span&gt;ODS与DWD区别？&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;问：还是不太明白 ods 和 dwd 层的区别，有了 ods 层后感觉 dwd 没有什么用了。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;答：嗯，我是这样理解的，站在一个理想的角度来讲，如果 ods 层的数据就非常规整，基本能满足我们绝大部分的需求，这当然是好的，这时候 dwd 层其实也没太大必要。但是现实中接触的情况是 ods 层的数据很难保证质量，毕竟数据的来源多种多样，推送方也会有自己的推送逻辑，在这种情况下，我们就需要通过额外的一层 dwd 来屏蔽一些底层的差异。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;问：我大概明白了，是不是说 dwd 主要是对 ods 层做一些数据清洗和规范化的操作，dws 主要是对 ods 层数据做一些轻度的汇总?&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;答：对的，可以大致这样理解。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;APP层干什么的？&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;问：感觉DWS层是不是没地方放了，各个业务的DWS表是应该在 DWD还是在 app?&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;答：这个问题不太好回答，我感觉主要就是明确一下DWS层是干什么的，如果你的DWS层放的就是一些可以供业务方使用的宽表表，放在 app 层就行。如果你说的数据集市是一个比较泛一点的概念，那么其实 dws、dwd、app 这些合起来都算是数据集市的内容。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;问：那存到 Redis、ES 中的数据算是 app层吗?&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;答：算是的，我个人的理解，app 层主要存放一些相对成熟的表，能供业务侧使用的。这些表可以在 Hive 中，也可以是从 Hive 导入 Redis 或者 ES 这种查询性能比较好的系统中。&lt;/span&gt;&lt;/p&gt;&lt;h2&gt;&lt;span&gt;08&lt;/span&gt;&lt;/h2&gt;&lt;h2&gt;&lt;span&gt;附录&lt;/span&gt;&lt;/h2&gt;&lt;h3&gt;&lt;strong&gt;&lt;span&gt;1. ETL&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;ETL ：Extract-Transform-Load，用于描述将数据从来源端经过抽取、转换、加载到目的端的过程。&lt;/span&gt;&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;&lt;span&gt;2. 宽表&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;h3&gt;&lt;strong&gt;&lt;span&gt;3. 主题（Subject）&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;是在较高层次上将企业信息系统中的数据进行综合、归类和分析利用的一个抽象概念，每一个主题基本对应一个宏观的分析领域。在逻辑意义上，它是对应企业中某一宏观分析领域所涉及的分析对象。例如“销售分析”就是一个分析领域，因此这个数据仓库应用的主题就是“销售分析”。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;【END】&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;mp-common-profile class=&quot;custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-weuitheme=&quot;light&quot; data-id=&quot;MzA3NjIzNjMwOA==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/hXibVSNciaXhzia07WkYkDfaRxHUiaDaNc5x3xTNO1RlNBRhPnxpEzoemhsn7ofat4pVwVgOktaveEtu6IKzzLONQQ/0?wx_fmt=png&quot; data-nickname=&quot;数据治理体系&quot; data-alias=&quot;DGsystem&quot; data-signature=&quot;持续完善数据治理实战体系，数据仓库、标签、数字体系，实现业务数字化，数字资产化，资产业务化，资产资本化；回归业务场景的数字化案例才最具参考价值，最容易理解和借鉴的。&quot; data-from=&quot;0&quot; data-weui-theme=&quot;light&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;mp-style-type data-value=&quot;3&quot;/&gt;&lt;/p&gt;&lt;/div&gt;

          
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>5709a90b958d444690d9e4974cbc29aa</guid>
<title>一文读懂数据库优化之分库分表</title>
<link>https://toutiao.io/k/h8ei24c</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.1575&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/j3gficicyOvasIjZpiaTNIPReJVWEJf7UGpmokI3LL4NbQDb8fO48fYROmYPXUhXFN8IdDqPcI1gA6OfSLsQHxB4w/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;400&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;作者：tayroctang，腾讯 PCG 后台开发工程师&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;本文从 5W1H 角度介绍了分库分表手段，其在解决如 IO 瓶颈、读写性能、物理存储瓶颈、内存瓶颈、单机故障影响面等问题的同时也带来如事务性、主键冲突、跨库 join、跨库聚合查询等问题。anyway，在综合业务场景考虑，正如缓存的使用一样，本着非必须勿使用原则。如数据库确实成为性能瓶颈时，在设计分库分表方案时也应充分考虑方案的扩展性，或者考虑采用成熟热门的分布式数据库解决方案，如 TiDB。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;阅读此文你将了解：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;什么是分库分表以及为什么分库分表&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如何分库分表&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;分库分表常见几种方式以及优缺点&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如何选择分库分表的方式&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;strong&gt;数据库常见优化方案&lt;/strong&gt;&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于后端程序员来说，绕不开数据库的使用与方案选型，那么随着业务规模的逐渐扩大，其对于存储的使用上也需要随之进行升级和优化。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;随着规模的扩大，数据库面临如下问题：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;读压力：并发 QPS、索引不合理、SQL 语句不合理、锁粒度&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;写压力：并发 QPS、事务、锁粒度&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;物理性能：磁盘瓶颈、CPU 瓶颈、内存瓶颈、IO 瓶颈&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;其他：宕机、网络异常&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;面对上述问题，常见的优化手段有：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5472703062583223&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/j3gficicyOvaty2bicRwSMXohe1GFDfCH4kAtbLbmBK0zHX53rZ5lBFQ8yrf8XfRHHrS66fL3VNBA3ycWYYyGy8AQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1502&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;索引优化、主从同步、缓存、分库分表每个技术手段都可以作为一个专题进行讲解，本文主要介绍分库分表的技术方案实现。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;strong&gt;什么是分库分表？&lt;/strong&gt;&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于阅读本文的读者来说，分库分表概念应该并不会陌生，其拆开来讲是分库和分表两个手段：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;分表：将一个表中的数据按照某种规则分拆到多张表中，&lt;strong&gt;降低锁粒度以及索引树&lt;/strong&gt;，提升数据查询效率。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;分库：将一个数据库中的数据按照某种规则分拆到多个数据库中，以&lt;strong&gt;缓解单服务器的压力&lt;/strong&gt;（CPU、内存、磁盘、IO）。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;strong&gt;为什么分库分表？&lt;/strong&gt;&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;性能角度：CPU、内存、磁盘、IO 瓶颈&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;随&lt;/span&gt;&lt;span&gt;着业务体量扩大，数据规模达到百万行，数据库索引树庞大，查询性能出现瓶颈。&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;用户并发流量规模扩大，由于单库(单服务器)物理性能限制也无法承载大流量。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;可用性角度：单机故障率影响面&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;如&lt;span&gt;果&lt;/span&gt;&lt;span&gt;是单库，数据库宕机会导致 100%服务不可用，N 库则可以将影响面降低 N 倍。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;strong&gt;分库分表带来的问题？&lt;/strong&gt;&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;事务性问题&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;方案一：&lt;/span&gt;&lt;span&gt;在进行分库分表方案设计过程中，从业务角度出发，尽可能保证一个事务所操作的表分布在一个库中，从而实现数据库层面的事务保证。&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;方案二：方式一无法实现的情况下，业务层引入分布式事务组件保证事务性，如事务性消息、TCC、Seata 等分布式事务方式实现数据最终一致性。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;分库&lt;strong&gt;可能&lt;/strong&gt;导致执行一次事务所需的数据分布在不同服务器上，数据库层面无法实现事务性操作，需要更上层业务引入分布式事务操作，难免会给业务带来一定复杂性，那么要想解决事务性问题一般有两种手段：&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;主键(自增 ID)唯一性问题&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;在数据库表设计时，经常会使用自增 ID 作为数据主键，这就导致后续在迁库迁表、或者分库分表操作时，会因为主键的变化或者主键不唯一产生冲突，要解决主键不唯一问题，有如下方案：&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;方案一：自增 ID 做主键时，设置自增步长，采用等差数列递增，避免各个库表的主键冲突。但是这个方案仍然无法解决迁库迁表、以及分库分表扩容导致主键 ID 变化问题&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;方案二：主键采用全局统一 ID 生成机制：如 UUID、雪花算法、数据库号段等方式。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;跨库多表 join 问题&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;首先来自大厂 DBA 的建议是，线上服务尽可能不要有表的 join 操作，join 操作往往会给后续的分库分表操作带来各种问题，可能导致数据的死锁。&lt;/span&gt;&lt;span&gt;可以采用多次查询业务层进行数据组装(需要考虑业务上多次查询的事务性的容忍度)&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;跨库聚合查询问题&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;分库分表会导致常规聚合查询操作，如 group by，order by 等变的异常复杂。需要复杂的业务代码才能实现上述业务逻辑，其常见操作方式有：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;§ 方案一：赛道赛马机制，每次从 N 个库表中查询出 TOP N 数据，然后在业务层代码中进行聚合合并操作。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;§  假设： 以2库1表为例，每次分页查询N条数据。&lt;br/&gt;§&lt;br/&gt;§  第一次查询：&lt;br/&gt;§  ① 每个表中分别查询出N条数据：&lt;br/&gt;§  SELECT * FROM db1_table1 &lt;span&gt;where&lt;/span&gt; &lt;span&gt;$col&lt;/span&gt; &amp;gt; 0 order by &lt;span&gt;$col&lt;/span&gt;   LIMITT  0,N&lt;br/&gt;§  SELECT * FROM db2_table1 &lt;span&gt;where&lt;/span&gt; &lt;span&gt;$col&lt;/span&gt; &amp;gt; 0 order by &lt;span&gt;$col&lt;/span&gt;   LIMITT  0,N&lt;br/&gt;§  ② 业务层代码对上述两者做归并排序，假设最终取db1数据K1条，取db2数据K2条，则K1+K2 = N&lt;br/&gt;§  此时的DB1 可以计算出OffSet为K1 ，DB2计算出Offset为K2&lt;br/&gt;§  将获取的N条数据以及相应的Offset  K1/K2返回给 端上。&lt;br/&gt;§&lt;br/&gt;§  第二次查询：&lt;br/&gt;§  ① 端上将上一次查询对应的数据库的Offset  K1/K2 传到后端&lt;br/&gt;§  ② 后端根据Offset构造查询语句查询分别查询出N条语句&lt;br/&gt;§  SELECT * FROM db1_table1 &lt;span&gt;where&lt;/span&gt; &lt;span&gt;$col&lt;/span&gt; &amp;gt; 0 order by &lt;span&gt;$col&lt;/span&gt;   LIMITT  &lt;span&gt;$K1&lt;/span&gt;,N&lt;br/&gt;§  SELECT * FROM db2_table1 &lt;span&gt;where&lt;/span&gt; &lt;span&gt;$col&lt;/span&gt; &amp;gt; 0 order by &lt;span&gt;$col&lt;/span&gt;   LIMITT  &lt;span&gt;$K2&lt;/span&gt;,N&lt;br/&gt;§  ③ 再次使用归并排序，获取TOP N数据，将获取的N条数据以及相应的Offset  K1/K2返回给 端上。&lt;br/&gt;§&lt;br/&gt;§  第三次查询:&lt;br/&gt;依次类推.......&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;§ 方案二：可以将经常使用到 groupby,orderby 字段存储到一个单一库表(可以是 REDIS、ES、MYSQL)中，业务代码中先到单一表中根据查询条件查询出相应数据，然后根据查询到的主键 ID，到分库分表中查询详情进行返回。2 次查询操作难点会带来接口耗时的增加，以及极端情况下的数据不一致问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;strong&gt;什么是好的分库分表方案？&lt;/strong&gt;&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;满足业务场景需要&lt;/strong&gt;：根据业务场景的不同选择不同分库分表方案：比如按照时间划分、按照用户 ID 划分、按照业务能力划分等&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;方案可持续性&lt;/strong&gt;：&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;何为可持续性？其实就是：业务数据量级和流量量级未来进一步达到新的量级的时候，我们的分库分表方案可以持续灵活扩容处理。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;最小化数据迁移&lt;/strong&gt;：扩容时一般涉及到历史数据迁移，其扩容后需要迁移的数据量越小其可持续性越强，理想的迁移前后的状态是（同库同表&amp;gt;同表不同库&amp;gt;同库不同表&amp;gt;不同库不同表）&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;数据偏斜&lt;/strong&gt;：数据在库表中分配的均衡性，尽可能保证数据流量在各个库表中保持等量分配，避免热点数据对于单库造成压力。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;最大数据偏斜率：（数据量最大样本 - 数据量最小样本）/ 数据量最小样本。一般来说，如果我们的最大数据偏斜率在 5%以内是可以接受的。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;strong&gt;如何分库分表&lt;/strong&gt;&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.692167577413479&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/j3gficicyOvaty2bicRwSMXohe1GFDfCH4kb0OqpTPHib4yazrLDll9KIBTtDib1Y2F3m54hjuSSGBXNZBTGqNevy2Q/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1098&quot;/&gt;&lt;/figure&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;垂直拆分：&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;垂直拆表&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;即大表拆小表，将一张表中数据不同”字段“分拆到多张表中，比如商品库将商品基本信息、商品库存、卖家信息等分拆到不同库表中。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;考虑因素有将&lt;strong&gt;不常用&lt;/strong&gt;的，&lt;strong&gt;数据较大&lt;/strong&gt;，&lt;strong&gt;长度较长&lt;/strong&gt;（比如 text 类型字段）的拆分到“扩展表“，表和表之间通过”主键外键“进行关联。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;好处：降低表数据规模，提升查询效率，也避免查询时数据量太大造成的“跨页”问题。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;垂直拆库&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;垂直拆库则在垂直拆表的基础上，将一个系统中的不同业务场景进行拆分，比如订单表、用户表、商品表。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;好处：降低单数据库服务的压力（物理存储、内存、IO 等）、降低单机故障的影响面&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;水平拆分：&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;操作：将总体数据按照某种维度(时间、用户)等分拆到多个库中或者表中，典型特征不同的库和表结构完全一下，如订单按照(日期、用户 ID、区域)分库分表。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;水平拆表&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;将数据按照某种维度拆分为多张表，但是由于多张表还是从属于&lt;strong&gt;一个库&lt;/strong&gt;，其降低&lt;strong&gt;锁粒度&lt;/strong&gt;，一定程度提升查询性能，但是仍然会有 IO 性能瓶颈。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;水平拆库&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;将数据按照某种维度分拆到多个库中，降低单机单库的压力，提升读写性能。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;strong&gt;常见水平拆分手段&lt;/strong&gt;&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;range 分库分表&lt;/span&gt;&lt;span/&gt;&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;顾名思义，该方案根据数据范围划分数据的存放位置。&lt;/p&gt;&lt;h6 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;strong&gt;思路一：时间范围分库分表&lt;/strong&gt;&lt;/span&gt;&lt;span/&gt;&lt;/h6&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;举个最简单例子，我们可以把订单表按照年份为单位，每年的数据存放在单独的库（或者表）中。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;时下非常流行的分布式数据库：TiDB 数据库，针对 TiKV 中数据的打散，也是基于 Range 的方式进行，将不同范围内的[StartKey,EndKey)分配到不同的 Region 上。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;缺点：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;需要提前建库或表。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;数据热点问题：当前时间的数据会集中落在某个库表。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;分页查询问题：涉及到库表中间分界线查询较复杂。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;例子：交易系统流水表则是按照天级别分表。&lt;/p&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;hash 分库分表&lt;/span&gt;&lt;span/&gt;&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;hash 分表是使用最普遍的使用方式，其根据“主键”进行 hash 计算数据存储的库表索引。原理可能大家都懂，但有时拍脑袋决定的分库分表方案可能会导致严重问题。&lt;/p&gt;&lt;h6 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;思路一：独立 hash&lt;/span&gt;&lt;span/&gt;&lt;/h6&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于分库分表，最常规的一种思路是通过主键计算 hash 值，然后 hash 值分别对库数和表数进行取余操作获取到库索引和表索引。比如：电商订单表，按照用户 ID 分配到 10 库 100 表中。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;const (&lt;br/&gt;        // DbCnt 库数量&lt;br/&gt;        DbCnt = 10&lt;br/&gt;        // TableCnt 表数量&lt;br/&gt;        TableCnt = 100&lt;br/&gt;)&lt;br/&gt;&lt;br/&gt;// GetTableIdx 根据用户 ID 获取分库分表索引&lt;br/&gt;func GetTableIdx(userID int64) (int64, int64) {&lt;br/&gt;    &lt;span&gt;hash&lt;/span&gt; := hashCode(userID)&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;hash&lt;/span&gt; % DbCnt, &lt;span&gt;hash&lt;/span&gt; % TableCnt&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上述是伪代码实现，大家可以先思考一下上述代码可能会产生什么问题？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如 1000? 1010?，1020 库表索引是多少？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;思考一下........&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;思考一下........&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;思考一下........&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;思考一下........&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;思考一下........&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;思考一下........&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;答：数据偏斜问题。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4051627384960718&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/j3gficicyOvaty2bicRwSMXohe1GFDfCH4kRpn6Tia94ialUTYjr0scxhmiaUQtvoev5sofeA0vE8dv8TazNhVZHTibTg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1782&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;非互质关系导致的数据偏斜问题证明：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;假设分库数分表数最大公约数为a，则分库数表示为 m*a , 分表数为 n*a （m,n为正整数）&lt;br/&gt;&lt;br/&gt;某条数据的&lt;span&gt;hash&lt;/span&gt;规则计算的值为H，&lt;br/&gt;&lt;br/&gt;若某条数据在库D中，则H mod (m*a) == D 等价与  H=M*m*a+D （M为整数）&lt;br/&gt;&lt;br/&gt;则表序号为 T = H % (n*a) = (M*m*a+D)%(n*a)&lt;br/&gt;&lt;br/&gt;如果D==0 则T= [(M*m)%n]*a&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h6 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;思路二：统一 hash&lt;/span&gt;&lt;span/&gt;&lt;/h6&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;思路一中，由于库和表的 hash 计算中存在公共因子，导致数据偏斜问题，那么换种思考方式：10 个库 100 张表，一共 1000 张表，那么从 0 到 999 排序，根据 hash 值对 1000 取余，得到[0,999]的索引，似乎就可以解决数据偏斜问题：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;// GetTableIdx 根据用户 ID 获取分库分表索引&lt;br/&gt;// 例子：1123011 -&amp;gt; 1,1&lt;br/&gt;func GetTableIdx(userID int64) (int64, int64) {&lt;br/&gt;    &lt;span&gt;hash&lt;/span&gt; := hashCode(userID)&lt;br/&gt;    slot := DbCnt * TableCnt&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;hash&lt;/span&gt; % slot % DbCnt, &lt;span&gt;hash&lt;/span&gt; % slot / DbCnt&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上面会带来的问题？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如 1123011 号用户，扩容前是 1 库 1 表，扩容后是 0 库 11 表&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6041308089500861&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/j3gficicyOvaty2bicRwSMXohe1GFDfCH4kBvEPafQaEgGezjNLicmVM5icSOTuJaA51zhI6Gic2LxU03gdSERgLmGrg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1162&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;扩展性问题证明。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;某条数据的&lt;span&gt;hash&lt;/span&gt;规则计算的值为H，分库数为D，分表数为T&lt;br/&gt;&lt;br/&gt;扩容前：&lt;br/&gt;分片序号K1 = H % (D*T),则H = M*DT + K1 ，且K1 一定是小于（D*T）&lt;br/&gt;D1 = K1 % D&lt;br/&gt;T1 = K1 / D&lt;br/&gt;&lt;br/&gt;扩容后：&lt;br/&gt;如果M为偶数，即M= 2*N&lt;br/&gt;K2 = H% (2DT) = (2NDT+K1)%(2DT) = K1%(2DT) ,K1 一定小于（2DT）,所以K2=K1&lt;br/&gt;D2 = K2%（2D） = K1 %（2D）&lt;br/&gt;T2 = K2/(2D) = K1 / （2D）&lt;br/&gt;&lt;br/&gt;如果M为奇数，即M = 2*N+1&lt;br/&gt;K2 = H%（2DT） = (2NDT +DT +K1)%(2DT) = (DT+K1)%(2DT) = DT + K1&lt;br/&gt;D2 = K2 %(2D) = (DT+K1) % (2D)&lt;br/&gt;T2 = K2 /(2D) = (DT+K1) / (2D)&lt;br/&gt;&lt;br/&gt;结论：扩容后库序号和表序号都变化&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h6 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;思路三：二次分片法&lt;/span&gt;&lt;span/&gt;&lt;/h6&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;思路二中整体思路正确，只是最后计算库序号和表序号的时候，使用了库数量作为影响表序号的因子，导致扩容时表序号偏移而无法进行。事实上，我们只需要换种写法，就能得出一个比较大众化的分库分表方案。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;func GetTableIdx(userId int64){&lt;br/&gt;        //①算Hash&lt;br/&gt;        &lt;span&gt;hash&lt;/span&gt;:=hashCode(userId)&lt;br/&gt;        //②分片序号&lt;br/&gt;        slot:=&lt;span&gt;hash&lt;/span&gt;%(DbCnt*TableCnt)&lt;br/&gt;        //③重新修改二次求值方案&lt;br/&gt;        dbIdx:=slot/TableCnt&lt;br/&gt;        tblIdx:=slot%TableCnt&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; dbIdx,tblIdx&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从上述代码中可以看出，其唯一不同是在计算库索引和表索引时，采用 TableCnt 作为基数（注：扩容操作时，一般采用库个数 2 倍扩容），这样在扩容时，表个数不变，则表索引不会变。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以做简要的证明：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;某条数据的&lt;span&gt;hash&lt;/span&gt;规则计算的值为H，分库数为D，分表数为T&lt;br/&gt;&lt;br/&gt;扩容前：&lt;br/&gt;分片序号K1 = H % (D*T),则H =  M*DT + K1 ，且K1 一定是小于（D*T）&lt;br/&gt;D1 = K1 / T&lt;br/&gt;T1 = K1 % T&lt;br/&gt;&lt;br/&gt;扩容后：&lt;br/&gt;如果M为偶数，即M= 2*N&lt;br/&gt;K2 =  H% (2DT) = (2NDT+K1)%(2DT) = K1%(2DT) ,K1 一定小于（2DT）,所以K2=K1&lt;br/&gt;D2 = K2/T  = K1 /T = D1&lt;br/&gt;T2 = K2%T = K1 % T = T1&lt;br/&gt;&lt;br/&gt;如果M为奇数，即M = 2*N+1&lt;br/&gt;K2 = H%（2DT） = (2NDT +DT +K1)%(2DT) = (DT+K1)%(2DT) = DT + K1&lt;br/&gt;D2 = K2 /T = (DT+K1) / T = D + K1/T = D + D1&lt;br/&gt;T2 = K2 %T = (DT+K1) % T = K1 %T = T1&lt;br/&gt;&lt;br/&gt;结论：&lt;br/&gt;M为偶数时，扩容前后库序号和表序号都不变&lt;br/&gt;M为奇数时，扩容前后表序号不变，库序号会变化。&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h6 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;思路四：基因法&lt;/span&gt;&lt;span/&gt;&lt;/h6&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由思路二启发，我们发现案例一不合理的主要原因，就是因为库序号和表序号的计算逻辑中，有公约数这个因子在影响库表的独立性。那么我们是否可以换一种思路呢？我们使用相对独立的 Hash 值来计算库序号和表序号呢？&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;func GetTableIdx(userID int64)(int64,int64){&lt;br/&gt;        &lt;span&gt;hash&lt;/span&gt; := hashCode(userID)&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; atoi(&lt;span&gt;hash&lt;/span&gt;[0:4]) % DbCnt,atoi(&lt;span&gt;hash&lt;/span&gt;[4:])%TableCnt&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这也是一种常用的方案，我们称为基因法，即使用原分片键中的某些基因（例如前四位）作为库的计算因子，而使用另外一些基因作为表的计算因子。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在使用基因法时，要主要计算 hash 值的片段保持充分的随机性，避免造成严重数据偏斜问题。&lt;/p&gt;&lt;h6 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;思路五：关系表冗余&lt;/span&gt;&lt;span/&gt;&lt;/h6&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;按照索引的思想，可以通过分片的键和库表索引建立一张索引表，我们把这张索引表叫做“路由关系表”。每次查询操作，先去路由表中查询到数据所在的库表索引，然后再到库表中查询详细数据。同时，对于写入操作可以采用随机选择或者顺序选择一个库表进入写入。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那么由于路由关系表的存在，我们在数据扩容时，无需迁移历史数据。同时，我们可以为每个库表指定一个权限，通过权重的比例调整来调整每个库表的写入数据量。从而实现库表数据偏斜率调整。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;此种方案的缺点是每次查询操作，需要先读取一次路由关系表，所以请求耗时可能会有一定增加。本身由于写索引表和写库表操作是不同库表写操作，需要引入分布式事务保证数据一致性，极端情况可能带来数据的不一致。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;且索引表本身没有分库分表，自身可能会存在性能瓶颈，可以通过存储在 redis 进行优化处理。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.0314814814814814&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/j3gficicyOvaty2bicRwSMXohe1GFDfCH4kBYhPNdLO8Omxnk08Om1iag8KQvwJ9HBwRxqhcyW4uXEiarrXd01xCRgg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot;/&gt;&lt;/figure&gt;&lt;h6 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;思路六：分段索引关系表&lt;/span&gt;&lt;span/&gt;&lt;/h6&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;思路五中，需要将全量数据存在到路由关系表中建立索引，再结合 range 分库分表方案思想，其实有些场景下完全没有必要全部数据建立索引，可以按照号段式建立区间索引，我们可以将分片键的区间对应库的关系通过关系表记录下来，每次查询操作，先去路由表中查询到数据所在的库表索引，然后再到库表中查询详细数据。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.0314814814814814&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/j3gficicyOvaty2bicRwSMXohe1GFDfCH4k8oEVZ8Uia1atVca7YoKAg8PcEdW6QgaVH3ibkWCM8IdQj7MicklZ4vcrg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot;/&gt;&lt;/figure&gt;&lt;h6 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;思路七：一致性 Hash 法&lt;/span&gt;&lt;span/&gt;&lt;/h6&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一致性 Hash 算法也是一种比较流行的集群数据分区算法，比如 RedisCluster 即是通过一致性 Hash 算法，使用 16384 个虚拟槽节点进行每个分片数据的管理。关于一致性 Hash 的具体原理这边不再重复描述，读者可以自行翻阅资料。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其思想和思路五有异曲同工之妙。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;总结&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本文从 5W1H 角度介绍了分库分表手段，其在&lt;strong&gt;解决&lt;/strong&gt;如 IO 瓶颈、读写性能、物理存储瓶颈、内存瓶颈、单机故障影响面等&lt;strong&gt;问题的同时&lt;/strong&gt;，&lt;strong&gt;也带来&lt;/strong&gt;如事务性、主键冲突、跨库 join、跨库聚合查询&lt;strong&gt;等问题&lt;/strong&gt;。anyway，在综合业务场景考虑，正如缓存的使用一样，非必须使用分库分表，则不应过度设计采用分库分表方案。如数据库确实成为性能瓶颈时，在设计分库分表方案时也应充分考虑方案的扩展性。或者说可以考虑采用成熟热门的分布式数据库解决方案，如 TiDB。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;section&gt;&lt;mp-common-profile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-weui-theme=&quot;light&quot; data-id=&quot;MjM5ODYwMjI2MA==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/j3gficicyOvaucOLGrSdOD99g8RPhbZiaRR2Q7TLue7A2K5P7ReBgEIkxeDFPB8A9p7bibHwYOuBAibzkhgkE9h2ozw/0?wx_fmt=png&quot; data-nickname=&quot;腾讯技术工程&quot; data-alias=&quot;Tencent_TEG&quot; data-signature=&quot;腾讯技术官方号。腾讯技术创新、前沿领域发布解读平台。&quot; data-from=&quot;0&quot; data-is_biz_ban=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzA3OTQwMDcwNg==&amp;amp;mid=2650832830&amp;amp;idx=1&amp;amp;sn=f746c12abe5ba41d3622b2c680c9deb9&amp;amp;chksm=8440c5d3b3374cc59e6c1320e29b73160c87f93c9d9142447270f55b4e80e4160c730c29658f&amp;amp;mpshare=1&amp;amp;scene=21&amp;amp;srcid=1214xzcIiCeOfmnwEfWXrSgy&amp;amp;sharer_sharetime=1671001770671&amp;amp;sharer_shareid=ab96b29cacd6db269eae0f11c6bc5c45&amp;amp;version=4.0.0.99028&amp;amp;platform=mac#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; tab=&quot;outerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1.475&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/j3gficicyOvat1vv2wmZKT6Xb18WFuiaOF3sdGznfysDJDWz4Ca3rqP0PFu3AxicLLOichtTA41icBUKaF7lpv8xciarA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;800&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;左下角阅读原文也可直达&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>