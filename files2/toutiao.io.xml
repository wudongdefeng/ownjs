<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>ee92784527374445b36f1d9ff8e7942f</guid>
<title>如何设计一个基于 Paxos 的 KV 存储系统</title>
<link>https://toutiao.io/k/66ezzup</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content js_underline_content             autoTypeSetting24psection&amp;#10;            &quot; id=&quot;js_content&quot;&gt;&lt;p&gt;&lt;span&gt;1978年5月11日，《光明日报》发表本报特约评论员文&lt;/span&gt;&lt;span&gt;章《实践是检验真理的唯一标准》，由此引发了一场关于真理标准问题的大讨论。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;在各个平台，以并发笔记的ID分享过很多关于共识算法的内容了，所以接下来我准备分享Paxos的实战内容，如何基于Paxos设计一个分布式系统。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;当然，这篇文章最主要的目的是：&lt;strong&gt;希望有更多感兴趣的小伙伴参与到这个项目来&lt;/strong&gt;，我们可以一起讨论如何优化Paxos。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;1&quot;&gt;&lt;section data-custom=&quot;#59c3f9&quot;&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;Klein介绍&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;&lt;span/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;1. 介绍&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;Kl&lt;/span&gt;&lt;/span&gt;&lt;span&gt;ein是一个基于Paxos分布式共识类库，我使用它实现了KV存储、缓存。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;span&gt;项目地址（点击阅读原文跳转）：&lt;/span&gt;&lt;span&gt;https://github.com/shihuili1218/klein&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;你可以独立部署Klein，像使用Redis一样使用它；但是仅仅是这样的话，也太没有新意了，它有趣的地方在于：Klein可以内嵌入你的项目中，你可以不依赖任何中间件，保证各个成员之间的数据一致。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;基于此，你可以有无限多的想法，例如用Klein来实现KV存储，或者用它来实现分布式缓存，甚至用它来实现分布式锁，etc anything.&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/Xxt327ybUOVabqHyxEh1A4AicUmBLibPCCCzoQtAp6Gf9mRCLL1cAuF2icrISr8AU7F7GHbTaD7lPzTQWWtAdFeMw/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;320&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;2. &lt;span&gt;玩点不一样的&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;众所周知，Paxos是&lt;/span&gt;&lt;span&gt;存在一些局限的，诸如活锁、RPC交互次数过多，这使得Paxos让人望而却步。尽管对于这些问题，已经有了标准的解决方案，但是不玩些花样，造什么轮子呢？&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;3. &lt;span&gt;愿景&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;愿景呢，当然是希望维护一个标准的共识类库，开箱即用。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;同时希望可以进入Apache孵化器。&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;1&quot;&gt;&lt;section data-custom=&quot;#59c3f9&quot;&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;进度&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;1. &lt;/span&gt;&lt;span&gt;Paxos&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;•  写请求、乱序协商，顺序确认&lt;strong&gt;&lt;span&gt;【完成】&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;•  读请求，使用协商log完成&lt;span/&gt;&lt;strong&gt;&lt;span&gt;【完成】&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;span/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;•  批量协商&lt;span/&gt;&lt;strong&gt;&lt;span&gt;【完成】&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;span/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;•  优化prepare阶段&lt;span/&gt;&lt;strong&gt;&lt;span&gt;【完成】&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;span/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;•  快照&lt;span/&gt;&lt;strong&gt;&lt;span&gt;【完成】&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;span/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;•  拆分Group，proposer等角色无须隔离，只需隔离instance&lt;span/&gt;&lt;strong&gt;&lt;span&gt;【完成】&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;span/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;•  增加Master：成员变更、优化读请求&lt;span&gt;【进行中】&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;•  成员自动发现(调研)&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;•  数据对齐：成员上线、落后成员对齐&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;•  NWR&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;•  confirm优化读请求&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;•  不存在干扰key，无需执行一轮Prepare&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;2. &lt;/span&gt;&lt;span&gt;缓存&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;•  读、写、等基础功能&lt;strong&gt;&lt;span&gt;【完成】&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;•  &lt;span&gt;配合持久化实现LRU&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;•  &lt;/span&gt;&lt;span&gt;&lt;span&gt;TT&lt;/span&gt;&lt;span&gt;L自动过&lt;/span&gt;&lt;span&gt;期&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;3&lt;/span&gt;&lt;span&gt;. &lt;/span&gt;&lt;span&gt;待优化&lt;/span&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;1&quot;&gt;&lt;section data-custom=&quot;#59c3f9&quot;&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;白嫖几个打工人&lt;strong&gt;&lt;strong&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/Xxt327ybUOVabqHyxEh1A4AicUmBLibPCCwHFmxa1mzeWAjtGoqKcu9QZo5L0RwPCvd9feFIXzesjChm0esF77uw/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;50&quot;/&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;我了解到进入Apache孵化器，需要几个主要的维护者，另外所需的导师和推荐人，我正在寻找。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;如果有希望进入Apache孵化器，参与者你将获得：&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;退居其次，未能进入Apache孵化器，你也获得丰富的共识经验，定期讨论共识算法所面临的问题，以及优化方案。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;p&gt;&lt;mp-style-type data-value=&quot;3&quot;/&gt;&lt;/p&gt;&lt;/div&gt;

          
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>38f4cf1d5b535dab69be4958005f296c</guid>
<title>多个著名 Go 开源项目被放弃，做大开源不能用爱发电，更不能只靠自己</title>
<link>https://toutiao.io/k/en7b3xy</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content js_underline_content             autoTypeSetting24psection&amp;#10;            &quot; id=&quot;js_content&quot;&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大家好，我是煎鱼。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;相信关注我的许多同学都有接触 Go 语言的开发，甚至在企业中多有实践。那么你在日常开发中，势必会接触到 &lt;span&gt;gorilla&lt;/span&gt;&lt;sup&gt;[1]&lt;/sup&gt; 组织下的各个 Go 开源项目。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.17973856209150327&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KVl0giak5ib4gwx4pliaMrUeJscQVWicPiafPLpDYbFxW0vyP0dv7ZYxXFWcUxoIn1TObCZJ8nCb6OWbCNatWHZB9dg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1836&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如下图：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5155131264916468&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KVl0giak5ib4gwx4pliaMrUeJscQVWicPiafPyztlNfhpje5wibqC3Eic1icVCXkTXicPOLpDhE6qOrkxlseqaVH55ftSwA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1676&quot;/&gt;&lt;/figure&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;gorilla/mux&lt;/span&gt;&lt;sup&gt;[2]&lt;/sup&gt;：Star：17.9k。a powerful request router for web applications。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;gorilla/websocket&lt;/span&gt;&lt;sup&gt;[3]&lt;/sup&gt;：Star：18.6k。a standards-compliant and widely used websocket library。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;gorilla/sessions&lt;/span&gt;&lt;sup&gt;[4]&lt;/sup&gt;：Star：2.5k。making cookies and session management easy。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;gorilla/handlers&lt;/span&gt;&lt;sup&gt;[5]&lt;/sup&gt;：Star：1.5k。a collection of useful middleware for Go HTTP applications。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;尤其是 gorilla/mux 和 gorilla/websocket 是很多人首选推荐的项目，在各软件库的底层作为基础得到大范围的引用。&lt;span&gt;甚至在 grpc 的实践中，http/1.1 和 grpc 和 tcp 同端口提供服务上，&lt;/span&gt;&lt;span&gt;gori&lt;/span&gt;&lt;span&gt;lla/mux 也提供了许多实践，引领了大家进步。&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;就在这两天，gorilla 组织的维护者 @Matt Silverlock 正式宣布：&lt;strong&gt;在 2022 年底，会把 Gorilla 项目下的仓库设置为 “archive mode”。也就是不再维护了&lt;/strong&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以下是这个组织的一些历史：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.38022813688212925&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KVl0giak5ib4gwx4pliaMrUeJscQVWicPiafPbKAgLPxskPMvLxMNos1MCTXZjfWbds7M7ibziaW4pA9fR1S1iamSdsJ9g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1578&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;原始作者 @
rodrigo moraes 在 2013 年就退出了，2014 年现任作者 @Matt Silverlock 开始参与。在 2021 年起寻找继承者（个人或公司），没有找到合适的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;决定在 2022 年底正式结束这长达 8 年的维护，将 gorilla 项目结束维护。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;至于为什么不再维护了呢？作者也委婉的透露了以下几个原因：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5604534005037783&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KVl0giak5ib4gwx4pliaMrUeJscQVWicPiafPYqjQM6OiczGp9j7hxUJ8ESmF6HWCLNSzwGoFIYoXpFgqRvoyvCH5A8g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1588&quot;/&gt;&lt;/figure&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;最基本的&lt;strong&gt;连对问题进行分类的积极贡献者都没有&lt;/strong&gt;。虽然有很多人表示愿意参与维护，但在他们举起手后（在 issues 中发表评论愿意），再也没有出现过。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;2018 年左右开始，现任作者 @Matt Silverlock 几乎是所有项目（除 websocket）的&lt;strong&gt;唯一维护者&lt;/strong&gt;。言语中感觉他也累了，似乎就像一个人在推一辆巨大的火车。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;现任作者&lt;strong&gt;希望探索其他方面&lt;/strong&gt;，他个人时间现在非常也有限，花了 1 年也没有找到合适的维护者。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结合现任作者在找新维护者和社区的交流过程中，虽然也有人抛出金钱作为维护的橄榄枝。但似乎作者已经疲了...&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以发现在任何项目大了后，都需要更多的团队（人）、时间、金钱来参与维护和迭代相关项目，否则是很难持续长久的。这么来看，可能也该庆幸 Go 自身不是一个纯的用爱发电的项目？毕竟 Google 发工资和招人。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;无论任何，维护一个庞大的开源项目（项目存在时间长、使用人群庞大、业内流行度高等），不能单单只靠技术角度去设计项目和团队。就像国内许多数据库项目，最后都会走出来，成为一家公司，实现专人专职。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;感谢大佬的贡献。人生有多少个 8 年？&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;参考资料&lt;/span&gt;&lt;/h3&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;span&gt;[1]&lt;/span&gt;&lt;p&gt;gorilla: &lt;em&gt;https://github.com/gorilla&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[2]&lt;/span&gt;&lt;p&gt;gorilla/mux: &lt;em&gt;https://github.com/gorilla/mux&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[3]&lt;/span&gt;&lt;p&gt;gorilla/websocket: &lt;em&gt;https://github.com/gorilla/websocket&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[4]&lt;/span&gt;&lt;p&gt;gorilla/sessions: &lt;em&gt;https://github.com/gorilla/sessions&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[5]&lt;/span&gt;&lt;p&gt;gorilla/handlers: &lt;em&gt;https://github.com/gorilla/handlers&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;关注和加煎鱼微信，&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;一手消息和知识，拉你进技术交流群&lt;span&gt;&lt;span&gt;👇&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.9988738738738738&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/KVl0giak5ib4jVkzHVvaqjo3O0BIqDRJKkEyib7SJsryxHBFGsvek0FkdiczfJP6AdbWnK25DvlX3dY8wRObPbVJQg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;888&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.07106598984771574&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/486RHs1WbcgGib6o96dHbvGUGGwPicd8wusUGH1cXR29tM4bO0lNzialzkQhvU6m5ZUdaKibmcF2OQayjMe9Bia6iaXQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;394&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;你好，我是煎鱼，&lt;span&gt;出版过 Go 畅销书《Go 语言编程之旅》，再到获得 GOP（Go 领域最有观点专家）荣誉，&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUxMDI4MDc1NA==&amp;amp;mid=2247483854&amp;amp;idx=1&amp;amp;sn=ec422fbf4d846975f2930ddeb5e81373&amp;amp;chksm=f9041493ce739d85a4b987eece14da627206cdad798f645cc770868312e4a22b6df24804f186&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;点击蓝字查看我的出书之路&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;点击蓝字查看我的出书之路&lt;/a&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;日常分享高质量文章，输出 Go 面试、工作经验、架构设计，&lt;span&gt;加微信拉读者交流群，和大家交流！&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;mp-style-type data-value=&quot;3&quot;/&gt;&lt;/p&gt;&lt;/div&gt;

          
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>db526b595da07aad2916995704708fbf</guid>
<title>ChatGPT 在信息安全领域的应用前景</title>
<link>https://toutiao.io/k/my0i3no</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content js_underline_content             autoTypeSetting24psection&amp;#10;            &quot; id=&quot;js_content&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.146875&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/hiayDdhDbxUb8DgnbvlczA7B0y9SdKxYFiceGlfLrCUvoNjsDkCvvktgGnibawywo0G9IACTuibiaJ3cnGlCepbZB9A/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;640&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;p powered-by=&quot;xiumi.us&quot;&gt;&lt;/p&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;一.  关于ChatGPT&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;据报道，GPT-3.5系列模型自2021年四季度就开始混合使用文本和代码进行训练[1]。而在今年11月30日，OpenAI推出了一款新的自然语言对话模型ChatGPT，该模型是对GPT-3.5中一个2022年初完成训练的模型的微调实现[2]。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;在发布至今的一周时间里，ChatGPT模型便受到全球范围的广泛关注，并获得了普遍正面的评价[3]。ChatGPT不仅能够以非常自然的词句与人类用户交流，还能保持聊天过程的上下文状态。不仅如此，ChatGPT在信息行业中的应用也非常令人惊艳，它可以在短短几秒内按照用户的要求编写简单的代码实现。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;目前，OpenAI开放了ChatGPT的WEB交互面板&lt;span&gt;https://chat.openai.com/chat&lt;/span&gt;，本文案例如无特殊标注均通过该接口运行得到。关于信息安全领域之外的应用，已有大量文章进行探讨，本文不再深入。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;二.  ChatGPT在安全行业的应用&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;2.1  &lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;安全工具开发&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;首先，既然ChatGPT能够按照用户的要求编写代码，那自然就可以用来制作安全工具（不论是用于进攻还是防御）。目前已经有人指出通过ChatGPT可以生成实际可用的漏洞利用工具[4]：&lt;/span&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.953757225433526&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hiayDdhDbxUYcAl1AGY1uw5Q8sTITYTLeo3Oq2BicQOG70IibkTtcpLGfxlmErbHGIqHVdtlQVpOOqxqhAhPjMo4w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;865&quot;/&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;图1  &lt;span&gt;通过ChatGPT生成漏洞利用代码&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;我们粗略地测试了一些用例，大部分情况下都能得到质量上乘的结果。但可能由于测试方法尚不完善，也可能是安全领域的训练样本相对较少，&lt;span lang=&quot;EN-US&quot;&gt;ChatGPT&lt;/span&gt;的发挥似乎并不是非常稳定：&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.9398843930635838&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hiayDdhDbxUYcAl1AGY1uw5Q8sTITYTLeVwKcbYgvfDicgfZENyeTicdJfuIuW5GUIS67SFpQia9c1AYM5ibHODtZCg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;865&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;图2  &lt;span&gt;非常不错的功能实现&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.0763005780346822&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hiayDdhDbxUYcAl1AGY1uw5Q8sTITYTLeqLqZZrEPj8gDUwfdmgQrY6V2YTiaGBrVEo34OZpCYr8o6SubCUvXOJQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;865&quot;/&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;图3  &lt;span&gt;虽然有待优化，但姑且实现了功能&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6959537572254335&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hiayDdhDbxUYcAl1AGY1uw5Q8sTITYTLeAgG9d9BrL0ONFK7ngsO1kf5iaN3mAkoBl8Kbe4FCbYUxzlMTBDN7R9w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;865&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;图4  &lt;span&gt;看上去有模有样，但并没有正确实现功能&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;结果看来，ChatGPT确实能够帮助用户完成相当一部分的代码编写工作，而且代码注释、变量命名等都非常完善。但由于输出质量的不稳定性，这种方法仍然对用户自身的技术水平有一定的要求，至少需要能够验证AI模型输出的代码是否正确。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;只要运用得当，ChatGPT将会大大提高安全工具的开发效率，但要想完全依赖该模型完成复杂系统的实现，目前看来还有一段距离。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;2.2  &lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;逆向分析&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span lang=&quot;EN-US&quot;&gt;ChatGPT&lt;/span&gt;还在逆向分析领域大放异彩。例如，可以用它来分析机器语言&lt;span lang=&quot;EN-US&quot;&gt;ShellCode&lt;/span&gt;的功能：&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.461271676300578&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hiayDdhDbxUYcAl1AGY1uw5Q8sTITYTLeqhODaJGVn6Ijj8fF3JWIliakYZBgNhDpxl2iaiaStOib1rMCoplCrM8qlg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;865&quot;/&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;图5  &lt;span&gt;ChatGPT解析ShellCode。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;图片扩散广泛而原始出处不详，有知情者还请留言告知&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;甚至还有人为知名逆向分析工具IDA制作了一个插件，可以通过OpenAI的API（davinci-003，为GPT-3.5系列中的一个[1]）为反编译代码生成注释描述和修复变量名[5]：&lt;/span&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.34335260115606936&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hiayDdhDbxUYcAl1AGY1uw5Q8sTITYTLe11wwtTW2R67cBSXHrxCLVjJKrBAqBDlgWEUm8MesuCwZI6LXfn9vnw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;865&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;图6  &lt;span&gt;IDA插件Gepetto&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;我们也进行了一些相关测试，要求ChatGPT对给定的反编译代码进行解释：&lt;/span&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7502890173410405&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hiayDdhDbxUYcAl1AGY1uw5Q8sTITYTLe9DIG6CvPhb4JwNd9hMAOSlJHiaAetN1FD86UXWrXqle7A5B9Zw7DkFA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;865&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;图7  &lt;span&gt;CobaltStrike Beacon中的一个函数，效果还可以&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5942196531791908&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hiayDdhDbxUYcAl1AGY1uw5Q8sTITYTLe3bfpeGX3YE7ffZ9fduyibTbemMfYJmQz2Fvbic1O8taI8ibPsos7AnIBA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;865&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;图8  &lt;span&gt;GMiner中的一个函数，效果一般&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4323699421965318&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hiayDdhDbxUYcAl1AGY1uw5Q8sTITYTLe7wLlXfiaTTpHMRYgvUe4PYN0I8tx9tWXVMeoual1Fh02COU9mY8h5yw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;865&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;图9  &lt;span&gt;来自一个加有VMP壳的恶意样本，效果不太好&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;从测试情况看来，如果代码中包含有对标准库或API函数（如上面的LoadLibraryW等）的显式调用，ChatGPT就能够从更抽象的、注重目的而非实现的角度去解释。但除此之外的情况，往往就只会按代码字面意思进行翻译：数据从哪里拷贝到哪里、做了什么加减乘除比较操作等，诸如此类。此外，由于ChatGPT目前开放的接口有输入长度的限制，每次只能输入少量代码，这导致现阶段实际使用起来还是不太方便。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;2.3  &lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;安全检查和漏洞挖掘&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;目前已有很多利用&lt;span lang=&quot;EN-US&quot;&gt;ChatGPT&lt;/span&gt;在现有代码中寻找潜在&lt;span lang=&quot;EN-US&quot;&gt;BUG&lt;/span&gt;或漏洞的成功案例。对此我们也进行了一些尝试：&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.0069364161849712&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hiayDdhDbxUYcAl1AGY1uw5Q8sTITYTLerOFwYIX60w6jDBGxLGuQyzNUB5kYYoUHCM3J3uRRLmklDWia2Kc6ZAw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;865&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;图10  &lt;span&gt;DVWA靶场中SQL注入漏洞页面high.php，ChatGPT正确识别并修复了漏洞&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8566473988439306&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hiayDdhDbxUYcAl1AGY1uw5Q8sTITYTLehGzbyXzOqNODTNMpbBqh0L6awQawnibgp6MUPghAYeIzoKdxcFBw4UA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;865&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;图11  &lt;span&gt;但ChatGPT给出的漏洞验证脚本明显是不正确的&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.42658959537572255&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hiayDdhDbxUYcAl1AGY1uw5Q8sTITYTLev1k4JpViaKV4d1uLY2lS1iaicqMupUJVXmbZdYyAq7JfMia3BqEqQ6N1og/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;865&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;图12  &lt;span&gt;DVWA靶场中命令注入漏洞页面high.php，ChatGPT正确识别了漏洞&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.0578034682080926&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hiayDdhDbxUYcAl1AGY1uw5Q8sTITYTLeyFJY84nCJahJQFVcs5zMvdXmROrbtpwYgibe7HvhKC1DPx4zzVBzcfQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;865&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;图13  &lt;span&gt;给出的测试代码虽然逻辑正确，但受页面中的过滤机制影响，实际上不可用&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.0046242774566474&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hiayDdhDbxUYcAl1AGY1uw5Q8sTITYTLeUR1bBtrs2iad7aSZ1VSc92NtjV84zJiagFVA2FjU1Mm6Q1LGrxVa5ZSA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;865&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;图14  &lt;span&gt;ChatGPT确实理解了页面中的过滤机制，但始终无法给出有效的绕过方法&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;目前看来，ChatGPT确实在一定程度上具备发现漏洞的能力，但还是不太擅长处理较为复杂的漏洞结构。如果要与代码审计等常规方法比较，ChatGPT的准确性和有效性尚需观察。除此之外，受“content policy”影响，通过ChatGPT生成漏洞利用代码时也会受到一些限制。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;但ChatGPT的一个优势是能够给出完整且定制化的修复方案。相比传统漏洞扫描或自动化SAST等给出的模板化修复方案而言，ChatGPT对于企业安全运营来说无疑是更具有吸引力的。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;2.4  &lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;安全告警评估&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;告警评估是安全运营过程中费时费力的一环，各个企业SOC至今为止已经采取了各种方法尝试进行告警筛选。ChatGPT能否用于安全告警评估呢？&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.36878612716763004&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hiayDdhDbxUYcAl1AGY1uw5Q8sTITYTLeE8ZDSWiaajDRhfIMhOBWiagwmia8m2Zgzmn5NzXW3wbKTibjtbb78JNEGg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;865&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;图15  &lt;span&gt;Jenkins RCE漏洞利用载荷，ChatGPT给出了非常准确的结论&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;看上去好像还不错？我们再试试正常业务误报告警载荷：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.823121387283237&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hiayDdhDbxUYcAl1AGY1uw5Q8sTITYTLeicAl4c7uWYPUPyvlSlVAPJmOH5wiaOTy1dbiaNB25XQMPqwspH4b2IdlQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;865&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;图16  &lt;span&gt;一个正常业务误报告警载荷，ChatGPT也给出了正确的识别结论&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;目前开放的查询接口似乎存在一些限制，查询提交经常失败（可能与包含恶意代码有关）。虽然API具备内置的Base64解码功能，但似乎表现得不太稳定：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7213872832369942&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hiayDdhDbxUYcAl1AGY1uw5Q8sTITYTLeOmtGw3v4UtppwMFTosOAb5b5vMD3HFb5F0rZicvtVhUrleia4KLtZ76Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;865&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;图17  &lt;span&gt;蚁剑WebShell列出目录操作，提交完整请求或请求体都未能正确处理&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3190751445086705&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hiayDdhDbxUYcAl1AGY1uw5Q8sTITYTLe7pDvxJN8sxI92m1YIaNykvYlnAy92dIz6dCChz9vAlDibcLO3ywEhFg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;865&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;图18  &lt;span&gt;但如果单独提交表单参数值，就能得到相对正确的识别结论&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;菜刀WebShell的情况和蚁剑差不多：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5838150289017341&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hiayDdhDbxUYcAl1AGY1uw5Q8sTITYTLep1EqtnwfaXmhkibq524z75hwZS2Ribq7bE0GLu5wdnR1AWPavZNhaRgg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;865&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;图19  &lt;span&gt;PHP中国菜刀通信，提交完整请求不能判断&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.25317919075144507&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hiayDdhDbxUYcAl1AGY1uw5Q8sTITYTLehPQqGPuB7QmYhm5H3EbKSDExy2tdA2AzDodfyf3gCYuxH8roO08yRQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;865&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;图20  &lt;span&gt;但提交请求体就可以判断了&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;我们再追加一些测试用例：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.31213872832369943&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hiayDdhDbxUYcAl1AGY1uw5Q8sTITYTLeNEhYQFyiaPgpha0ur5vJeTq6CI3A0t1SoLE11EGVN52loniabrTiaWJmA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;865&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;图21  &lt;span&gt;ThinkPHP RCE漏洞攻击（可能来自某种蠕虫），直接提交完整请求报文即可&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.31213872832369943&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hiayDdhDbxUYcAl1AGY1uw5Q8sTITYTLe1ky2niclSlLSrDsCTM7mkAjicGGf5Tp7icrzHFql4XL3KJy2jowVLr2HA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;865&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;图22  &lt;span&gt;Java反序列化RCE漏洞利用载荷片段，未能正确判断&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.20578034682080926&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hiayDdhDbxUYcAl1AGY1uw5Q8sTITYTLeqAxCIOQiaRoGSxulVmNiaNrVicKJdgxAuH892HOGaPoEvcoj2ktcMw0Dw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;865&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;图23  &lt;span&gt;GoAhread RCE漏洞利用载荷，未能正确判断&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;结果看来，ChatGPT在很多情况下确实作出了准确的判断和良好的解释，尤其是对于包含明显操作系统命令、编程语言函数和关键字的情况，几乎都能正确识别，且受混淆措施干扰较小。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;但它的效果很不稳定，对输入数据格式要求反复无常，解释信息也时好时坏。对于非文本类的载荷（比如序列化数据、ELF片段等），ChatGPT的识别能力似乎也未达预期。此外，非常致命的一点是，ChatGPT运行起来实在太慢了，根本不可能应对企业SOC庞大的告警数量和实时处理需求。综上，仅针对告警评估任务，现阶段还不适合直接投入使用。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;但ChatGPT在告警评估场景中是没有价值的吗？显然不是。长久以来，我们一直苦于无法有效地从告警载荷中提取关键信息——这是人类专家判断告警性质时最关注的因素之一。此前的难点在于，我们很难从告警数据中提取出足以适应现代信息系统复杂程度的，关于操作系统、编程语言、应用组件的知识。一段恶意代码如果成功执行会导致怎样的后果，此前所使用的模型根本不得而知，而这对于准确判断一个告警所指示网络行为的危害程度而言是不可或缺的。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;以笔者浅见，ChatGPT通过在代码项目和自然语言上进行训练，确实提炼出了这些目前告警评估任务中最缺失的知识。虽然当前这种文本到文本的聊天机器人模式未能充分满足告警评估的需要，但这种预训练方法和模型如果用于告警评估中的分类任务，想必能够成为非常强大的输入特征或系统单元。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;三.  后记和展望&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;除了上面提到的几种应用之外，目前我们也正在尝试将ChatGPT用于二进制漏洞挖掘、渗透测试用例生成、项目交付报告编写等诸多细分领域。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;风云变幻莫能测，且看今朝谁英雄。这份来自NLP学科的大礼包，也许能够给安全行业的发展带来一股新风。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;更多前沿资讯，还请继续关注绿盟科技研究通讯。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;如果您发现文中描述有不当之处，还请留言指出。在此致以真诚的感谢~&lt;/span&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;span title=&quot;&quot; opera-tn-ra-cell=&quot;_$.pages:0.layers:0.comps:59.title1&quot;&gt;&lt;p&gt;参考文献&lt;/p&gt;&lt;/span&gt; &lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span lang=&quot;EN-US&quot;&gt;[1]&lt;span&gt; &lt;/span&gt;OpenAI.
Model index for researchers[J/OL] 2022, https://beta.openai.com/docs/model-index-for-researchers.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span lang=&quot;EN-US&quot;&gt;[2]&lt;span&gt; &lt;/span&gt;OpenAI.
ChatGPT: Optimizing Language Models for Dialogue[J/OL] 2022, https://openai.com/blog/chatgpt/.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span lang=&quot;EN-US&quot;&gt;[3]&lt;span&gt; &lt;/span&gt;OpenAI.
ChatGPT[J/OL] 2022, https://en.wikipedia.org/wiki/ChatGPT.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span lang=&quot;EN-US&quot;&gt;[4]&lt;span&gt; &lt;/span&gt;dyngnosis.&lt;/span&gt;无标题&lt;span lang=&quot;EN-US&quot;&gt;[J/OL] 2022, https://twitter.com/dyngnosis/status/1598750927447502848&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span lang=&quot;EN-US&quot;&gt;[5]&lt;span&gt; &lt;/span&gt;Ivan
K. Gepetto[J/OL] 2022, https://github.com/JusticeRage/Gepetto.&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;内容编辑：创新研究院  吴复迪&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt; 责任编辑：&lt;span&gt;创新研究院&lt;/span&gt;  董炳佑&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-id=&quot;16&quot; data-tools=&quot;135编辑器&quot; data-custom=&quot;rgb(245, 245, 244)&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;本公众号原创文章仅代表作者观点，不代表绿盟科技立场。所有原创内容版权均属绿盟科技研究通讯。未经授权，严禁任何媒体以及微信公众号复制、转载、摘编或以其他方式使用，转载须注明来自绿盟科技研究通讯并附上本文链接。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;关于我们&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;绿盟科技研究通讯由绿盟科技创新研究院负责运营，绿盟科技创新研究院是绿盟科技的前沿技术研究部门，包括星云实验室、天枢实验室和孵化中心。团队成员由来自清华、北大、哈工大、中科院、北邮等多所重点院校的博士和硕士组成。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;绿盟科技创新研究院作为“中关村科技园区海淀园博士后工作站分站”的重要培养单位之一，与清华大学进行博士后联合培养，科研成果已涵盖各类国家课题项目、国家专利、国家标准、高水平学术论文、出版专业书籍等。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我们持续探索信息安全领域的前沿学术方向，从实践出发，结合公司资源和先进技术，实现概念级的原型系统，进而交付产品线孵化产品并创造巨大的经济价值。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;332&quot; data-backw=&quot;554&quot; data-before-oversubscription-url=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/hiayDdhDbxUbrbTJxY0Qv9BtgtXZsYVvaVUtlPicCUV6qDBGgZnrxicAMwvibG73JUu0w1UweTicfkuTRIyJyt77C5Q/640.jpeg?&quot; data-ratio=&quot;0.6&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/hiayDdhDbxUbrbTJxY0Qv9BtgtXZsYVvaVUtlPicCUV6qDBGgZnrxicAMwvibG73JUu0w1UweTicfkuTRIyJyt77C5Q/640.jpeg?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;jpeg&quot; data-w=&quot;900&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong data-brushtype=&quot;text&quot;&gt;长按上方二维码，即可关注我&lt;/strong&gt;&lt;/p&gt;&lt;p powered-by=&quot;xiumi.us&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;mp-style-type data-value=&quot;3&quot;/&gt;&lt;/p&gt;&lt;/div&gt;

          
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>c9d2d980bd8da8ec24ed95818c118ead</guid>
<title>分库分表经典 15 连问</title>
<link>https://toutiao.io/k/z63wulq</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;前言&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大家好，我是&lt;strong&gt;田螺&lt;/strong&gt;。我们去面试的时候，几乎都会被问到分库分表。田螺哥整理了分库分表的&lt;strong&gt;15道经典面试题&lt;/strong&gt;，大家看完肯定会有帮助的。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.4358178053830228&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpysJNsWprPhMdDhTpNHCawtnO81aTlc7TXgm76t9JTI0nnNNWAUm89pEL65Tagq5y2pyiaCqnGYRMw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1932&quot;/&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;1. 我们为什么需要分库分表&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在分库分表之前，就需要考虑为什么需要拆分。我们做一件事，肯定是有充分理由的。所以得想好分库分表的理由是什么。我们现在就从两个维度去思考它，&lt;strong&gt;为什么要分库？为什么要分表？&lt;/strong&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;1.1 为什么要分库&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果业务量剧增，数据库可能会出现性能瓶颈，这时候我们就需要考虑拆分数据库。从这两方面来看：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;业务量剧增，MySQL单机磁盘容量会撑爆，拆成多个数据库，磁盘使用率大大降低。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们知道数据库连接数是有限的。在&lt;strong&gt;高并发的场景下&lt;/strong&gt;，大量请求访问数据库，MySQL单机是扛不住的！高并发场景下，会出现&lt;code&gt;too many connections&lt;/code&gt;报错。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当前非常火的微服务架构出现，就是为了应对高并发。它把订单、用户、商品等不同模块，拆分成多个应用，并且把单个数据库也拆分成多个不同功能模块的数据库（订单库、用户库、商品库），以分担读写压力。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;1.2 为什么要分表&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;假如你的单表数据量非常大，存储和查询的性能就会遇到瓶颈了，如果你做了很多优化之后还是无法提升效率的时候，就需要考虑做分表了。一般千万级别数据量，就需要分表。&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这是因为即使&lt;code&gt;SQL&lt;/code&gt;命中了索引，如果表的数据量超过一千万的话，查询也是会明显变慢的。这是因为索引一般是&lt;code&gt;B+&lt;/code&gt;树结构，数据千万级别的话，B+树的高度会增高，查询就变慢啦。MySQL的B+树的高度怎么计算的呢？跟大家复习一下：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;InnoDB存储引擎最小储存单元是页，一页大小就是16k。B+树叶子存的是数据，内部节点存的是键值+指针。索引组织表通过非叶子节点的二分查找法以及指针确定数据在哪个页中，进而再去数据页中找到需要的数据，B+树结构图如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.28586723768736616&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpysJNsWprPhMdDhTpNHCawtWZEibwaRLKiaEluibzVZriaVbJ3QVgbLbXgwyVHZFwF5Spvbu0ZVOd4nLw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;934&quot;/&gt;&lt;/figure&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;假设B+树的高度为2的话，即有一个根结点和若干个叶子结点。这棵B+树的存放总记录数为=根结点指针数*单个叶子节点记录行数。&lt;/p&gt;&lt;p&gt;如果一行记录的数据大小为1k，那么单个叶子节点可以存的记录数  =16k/1k =16.
非叶子节点内存放多少指针呢？我们假设主键ID为bigint类型，长度为8字节(面试官问你int类型，一个int就是32位，4字节)，而指针大小在InnoDB源码中设置为6字节，所以就是 8+6=14 字节，16k/14B =16*1024B/14B = 1170&lt;/p&gt;&lt;p&gt;因此，一棵高度为2的B+树，能存放1170 * 16=18720条这样的数据记录。同理一棵高度为3的B+树，能存放1170 *1170 *16 =21902400，大概可以存放两千万左右的记录。B+树高度一般为1-3层，如果B+到了4层，查询的时候会多查磁盘的次数，SQL就会变慢。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;因此单表数据量太大，SQL查询会变慢，所以就需要考虑分表啦。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;2. 什么时候考虑分库分表？&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于&lt;code&gt;MySQL&lt;/code&gt;，&lt;code&gt;InnoDB&lt;/code&gt;存储引擎的话，单表最多可以存储&lt;code&gt;10亿&lt;/code&gt;级数据。但是的话，如果真的存储这么多，性能就会非常差。一般数据量千万级别，&lt;code&gt;B+&lt;/code&gt;树索引高度就会到&lt;code&gt;3&lt;/code&gt;层以上了，查询的时候会多查磁盘的次数，&lt;code&gt;SQL&lt;/code&gt;就会变慢。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;阿里巴巴的&lt;code&gt;《Java开发手册》&lt;/code&gt;提出：&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;单表行数超过&lt;code&gt;500万&lt;/code&gt;行或者单表容量超过&lt;code&gt;2GB&lt;/code&gt;，才推荐进行分库分表。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;那我们是不是等到数据量到达五百万，才开始分库分表呢？&lt;/strong&gt;&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;不是这样的，我们应该&lt;strong&gt;提前规划分库分表&lt;/strong&gt;，如果估算&lt;code&gt;3&lt;/code&gt;年后，&lt;strong&gt;你的表都不会到达这个五百万&lt;/strong&gt;，则不需要分库分表。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;MySQL服务器如果配置更好，是不是可以超过这个500万这个量级，才考虑分库分表？&lt;/strong&gt;&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;虽然配置更好，可能数据量大之后，性能还是不错，但是如果持续发展的话，还是要考虑分库分表&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;一般什么类型业务表需要才分库分表？&lt;/strong&gt;&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;通用是一些&lt;strong&gt;流水表、用户表&lt;/strong&gt;等才考虑分库分表，如果是一些&lt;strong&gt;配置类&lt;/strong&gt;的表，则完全不用考虑，因为不太可能到达这个量级。&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;3. 如何选择分表键&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;分表键，即用来&lt;strong&gt;分库/分表&lt;/strong&gt;的字段，换种说法就是，你以哪个维度来分库分表的。比如你&lt;strong&gt;按用户ID分表、按时间分表、按地区分表&lt;/strong&gt;，这些&lt;strong&gt;用户ID、时间、地区&lt;/strong&gt;就是分表键。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一般数据库表拆分的原则，需要先找到&lt;strong&gt;业务的主题&lt;/strong&gt;。比如你的数据库表是一张企业客户信息表，就可以考虑用了&lt;strong&gt;客户号&lt;/strong&gt;做为&lt;code&gt;分表键&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;为什么考虑用客户号做分表键呢？&lt;/strong&gt;&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;这是因为表是基于客户信息的，所以，需要将同一个客户信息的数据，落到一个表中，&lt;strong&gt;避免触发全表路由&lt;/strong&gt;。&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;4.非分表键如何查询&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;分库分表后，有时候无法避免一些业务场景，&lt;strong&gt;需要通过非分表键来查询&lt;/strong&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;假设一张用户表，根据&lt;code&gt;userId&lt;/code&gt;做分表键，来分库分表。但是用户登录时，需要根据&lt;strong&gt;用户手机号&lt;/strong&gt;来登陆。这时候，就需要通过手机号查询用户信息。而&lt;strong&gt;手机号是非分表键&lt;/strong&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;非分表键查询，一般有这几种方案：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;遍历&lt;/strong&gt;：最粗暴的方法，就是遍历所有的表，找出符合条件的手机号记录（&lt;strong&gt;不建议&lt;/strong&gt;）&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;将用户信息冗余同步到ES&lt;/strong&gt;，同步发送到ES，然后通过ES来查询（&lt;strong&gt;推荐&lt;/strong&gt;）&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其实还有&lt;strong&gt;基因法&lt;/strong&gt;：比如非分表键可以解析出分表键出来，比如常见的，订单号生成时，可以包含客户号进去，通过订单号查询，就可以解析出客户号。但是这个场景除外，&lt;strong&gt;手机号似乎不适合冗余userId&lt;/strong&gt;。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;5. 分表策略如何选择&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;5.1 range范围&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;range&lt;/code&gt;，即范围策略划分表。比如我们可以将表的主键&lt;code&gt;order_id&lt;/code&gt;，按照从&lt;code&gt;0~300万&lt;/code&gt;的划分为一个表，&lt;code&gt;300万~600万&lt;/code&gt;划分到另外一个表。如下图：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6136919315403423&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpysJNsWprPhMdDhTpNHCawtwOgUkN1YK5sD0g6tXZDh1R6UULHeX0jiasG6y7YxO7gnPZDKliaYWumw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;818&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有时候我们也可以按时间范围来划分，如不同年月的订单放到不同的表，它也是一种&lt;code&gt;range&lt;/code&gt;的划分策略。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;优点：&lt;code&gt; range&lt;/code&gt;范围分表，有利于扩容。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;缺点：可能会有热点问题。因为&lt;code&gt;订单id&lt;/code&gt;是一直在增大的，也就是说最近一段时间都是汇聚在一张表里面的。比如最近一个月的订单都在&lt;code&gt;300万~600万&lt;/code&gt;之间，平时用户一般都查最近一个月的订单比较多，请求都打到&lt;code&gt;order_1&lt;/code&gt;表啦。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;5.2 hash取模&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;hash取模策略：&lt;/strong&gt;&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;指定的路由key（一般是&lt;code&gt;user_id、order_id、customer_no&lt;/code&gt;作为key）对分表总数进行取模，把数据分散到各个表中。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如原始订单表信息，我们把它分成4张分表：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4842592592592593&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpysJNsWprPhMdDhTpNHCawtDztZDxehqDOhSxbibicYl5Zr0GTmywkDUNexJhxtMkia1ic9Dx4bLmqsPw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/figure&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;比如id=1，对4取模，就会得到1，就把它放到&lt;code&gt;t_order_1&lt;/code&gt;;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;id=3，对4取模，就会得到3，就把它放到&lt;code&gt;t_order_3;&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一般，我们会取&lt;strong&gt;哈希值，再做取余&lt;/strong&gt;：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;Math.abs(orderId.hashCode()) % table_number&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;优点：hash取模的方式，&lt;strong&gt;不会存在明显的热点问题&lt;/strong&gt;。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;缺点：如果未来某个时候，表数据量又到瓶颈了，需要扩容，就比较麻烦。所以一般建议提前规划好，一次性分够。（可以考虑&lt;strong&gt;一致性哈希&lt;/strong&gt;）&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;5.3 一致性Hash&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果&lt;strong&gt;用hash方式&lt;/strong&gt;分表，前期规划不好，需要&lt;strong&gt;扩容二次分表，表的数量需要增加，所以hash值需要重新计算&lt;/strong&gt;，这时候需要迁移数据了。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;比如我们开始分了&lt;code&gt;10&lt;/code&gt;张表，之后业务扩展需要，增加到&lt;code&gt;20&lt;/code&gt;张表。那问题就来了，之前根据&lt;code&gt;orderId&lt;/code&gt;取模&lt;code&gt;10&lt;/code&gt;后的数据分散在了各个表中，现在需要重新对所有数据重新取模&lt;code&gt;20&lt;/code&gt;来分配数据&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为了解决这个&lt;strong&gt;扩容迁移&lt;/strong&gt;问题，可以使用&lt;strong&gt;一致性hash思想&lt;/strong&gt;来解决。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;strong&gt;一致性哈希&lt;/strong&gt;：在移除或者添加一个服务器时，能够尽可能小地改变已存在的服务请求与处理请求服务器之间的映射关系。一致性哈希解决了简单哈希算法在分布式哈希表存在的&lt;strong&gt;动态伸缩&lt;/strong&gt;等问题&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;6. 如何避免热点问题数据倾斜（热点数据）&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果我们根据&lt;strong&gt;时间范围&lt;/strong&gt;分片，某电商公司&lt;code&gt;11&lt;/code&gt;月搞营销活动，那么大部分的数据都落在&lt;code&gt;11&lt;/code&gt;月份的表里面了，其他分片表可能很少被查询，即&lt;strong&gt;数据倾斜&lt;/strong&gt;了，有热点数据问题了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们可以使用&lt;code&gt;range范围+ hash哈希取模&lt;/code&gt;结合的分表策略，简单的做法就是：&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;在拆分库的时候，我们可以先用range范围方案，比如订单id在&lt;code&gt;0~4000万&lt;/code&gt;的区间，划分为订单库1;id在&lt;code&gt;4000万~8000万&lt;/code&gt;的数据，划分到&lt;code&gt;订单库2&lt;/code&gt;,将来要扩容时，id在&lt;code&gt;8000万~1.2亿&lt;/code&gt;的数据，划分到订单库3。然后订单库内，再用&lt;code&gt;hash取模&lt;/code&gt;的策略，把不同订单划分到不同的表。&lt;/p&gt;&lt;/blockquote&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.487962962962963&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpysJNsWprPhMdDhTpNHCawtulqsUQbEjgcxt6gic8dgtpVhM5oV5icsR5icSNStBp5858n7KLkZHApuw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;7.分库后，事务问题如何解决&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;分库分表后，假设两个表在不同的数据库，那么&lt;strong&gt;本地事务已经无效&lt;/strong&gt;啦，需要使用&lt;strong&gt;分布式事务&lt;/strong&gt;了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;常用的分布式事务解决方案有：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;两阶段提交&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;三阶段提交&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;TCC&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;本地消息表&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;最大努力通知&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;saga&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大家可以看下这几篇文章：&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;8. 跨节点Join关联问题&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在单库未拆分表之前，我们如果要使用&lt;code&gt;join&lt;/code&gt;关联多张表操作的话，简直&lt;code&gt;so easy&lt;/code&gt;啦。但是分库分表之后，两张表可能都不在同一个数据库中了，那么如何跨库&lt;code&gt;join&lt;/code&gt;操作呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;跨库Join的几种解决思路：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;字段冗余&lt;/strong&gt;：把需要关联的字段放入主表中，避免关联操作；比如订单表保存了卖家ID（&lt;code&gt;sellerId&lt;/code&gt;），你把卖家名字&lt;code&gt;sellerName&lt;/code&gt;也保存到订单表，这就不用去关联卖家表了。这是一种空间换时间的思想。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;全局表&lt;/strong&gt;：比如系统中所有模块都可能会依赖到的一些基础表（即全局表），在每个数据库中均保存一份。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;数据抽象同步&lt;/strong&gt;：比如A库中的a表和B库中的b表有关联，可以定时将指定的表做同步，将数据汇合聚集，生成新的表。一般可以借助&lt;code&gt;ETL&lt;/code&gt;工具。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;应用层代码组装&lt;/strong&gt;：分开多次查询，调用不同模块服务，获取到数据后，代码层进行字段计算拼装。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;9. order by,group by等聚合函数问题&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;跨节点的&lt;code&gt;count,order by,group by&lt;/code&gt;以及聚合函数等问题，都是一类的问题，它们一般都需要基于全部数据集合进行计算。可以分别在各个节点上得到结果后，再在应用程序端进行合并。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;10. 分库分表后的分页问题&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;方案1（&lt;strong&gt;全局视野法&lt;/strong&gt;）：在各个数据库节点查到对应结果后，在代码端汇聚再分页。这样优点是业务无损，精准返回所需数据；缺点则是会&lt;strong&gt;返回过多数据，增大网络传输&lt;/strong&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;比如分库分表前，你是根据&lt;strong&gt;创建时间排序&lt;/strong&gt;，然后&lt;strong&gt;获取第2页数据&lt;/strong&gt;。如果你是分了&lt;strong&gt;两个库&lt;/strong&gt;，那你就可以每个库都根据时间排序，然后都返回&lt;strong&gt;2页&lt;/strong&gt;数据，然后把两个数据库查询回来的数据&lt;strong&gt;汇总&lt;/strong&gt;，再根据创建时间进行&lt;strong&gt;内存排序&lt;/strong&gt;，最后再取第&lt;strong&gt;2&lt;/strong&gt;页的数据。&lt;/p&gt;&lt;/blockquote&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;方案2（&lt;strong&gt;业务折衷法-禁止跳页查询&lt;/strong&gt;）：这种方案需要业务妥协一下，只有上一页和下一页，不允许跳页查询了。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;这种方案，查询第一页时，是跟全局视野法一样的。但是下一页时，需要把当前最大的创建时间传过来，然后每个节点，都查询大于创建时间的一页数据，接着汇总，内存排序返回。&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;11. 分布式ID&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;数据库被切分后，不能再依赖数据库自身的主键生成机制啦，最简单可以考虑&lt;code&gt;UUID&lt;/code&gt;，或者使用&lt;strong&gt;雪花算法&lt;/strong&gt;生成&lt;code&gt;分布式ID&lt;/code&gt;。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;雪花算法是一种生成分布式全局唯一ID的算法，生成的ID称为&lt;code&gt;Snowflake IDs&lt;/code&gt;。这种算法由&lt;code&gt;Twitter&lt;/code&gt;创建，并用于推文的ID。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一个&lt;code&gt;Snowflake ID&lt;/code&gt;有&lt;code&gt;64&lt;/code&gt;位。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;第&lt;code&gt;1&lt;/code&gt;位：Java中long的最高位是符号位代表正负，正数是0，负数是1，一般生成ID都为正数，所以默认为0。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;接下来前&lt;code&gt;41&lt;/code&gt;位是时间戳，表示了自选定的时期以来的毫秒数。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;接下来的&lt;code&gt;10&lt;/code&gt;位代表计算机ID，防止冲突。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;其余&lt;code&gt;12&lt;/code&gt;位代表每台机器上生成ID的序列号，这允许在同一毫秒内创建多个Snowflake ID。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.37037037037037035&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpysJNsWprPhMdDhTpNHCawtS2gK3mhOjdCibIMDvpeMKjadl9N5Xmceaical3zQlB3n2PGWJ3Ph3umA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;12. 分库分表选择哪种中间件&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;目前流行的分库分表中间件比较多：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;Sharding-JDBC&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;cobar&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Mycat&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Atlas&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;TDDL（淘宝）&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;vitess&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7527777777777778&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpysJNsWprPhMdDhTpNHCawtdMmPGeDz4XiatjJhK6BTZ5uPplmPXPj6ZHK33iamA1LicqGvg1JyCaR9w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们项目当前就是使用&lt;code&gt;Sharding-JDBC&lt;/code&gt;实现的分库分表。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;13.如何评估分库数量&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;对于MySQL来说的话，一般单库超过&lt;code&gt;5千万&lt;/code&gt;记录，&lt;code&gt;DB&lt;/code&gt;的压力就非常大了。所以分库数量多少，需要看单库处理记录能力。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果分库数量少，达不到分散存储和减轻&lt;code&gt;DB&lt;/code&gt;性能压力的目的；如果分库的数量多，对于跨多个库的访问，应用程序需要访问多个库。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;一般是建议分&lt;code&gt;4~10&lt;/code&gt;个库，我们公司的企业客户信息，就分了&lt;code&gt;10&lt;/code&gt;个库。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;14.垂直分库、水平分库、垂直分表、水平分表的区别&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;水平分库&lt;/strong&gt;：以字段为依据，按照一定策略（hash、range等），将一个库中的数据拆分到多个库中。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;水平分表&lt;/strong&gt;：以字段为依据，按照一定策略（hash、range等），将一个表中的数据拆分到多个表中。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;垂直分库&lt;/strong&gt;：以表为依据，按照业务归属不同，将不同的表拆分到不同的库中。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;垂直分表&lt;/strong&gt;：以字段为依据，按照字段的活跃性，将表中字段拆到不同的表（主表和扩展表）中。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;15.分表要停服嘛？不停服怎么做？&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不用停服。不停服的时候，应该怎么做呢，主要分五个步骤：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;编写代理层，加个开关（控制访问新的&lt;code&gt;DAO&lt;/code&gt;还是老的&lt;code&gt;DAO&lt;/code&gt;，或者是都访问），灰度期间，还是访问老的&lt;code&gt;DAO&lt;/code&gt;。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;发版全量后，开启双写，既在旧表新增和修改，也在新表新增和修改。日志或者临时表记下新表&lt;code&gt;ID&lt;/code&gt;起始值，旧表中小于这个值的数据就是存量数据，这批数据就是要迁移的。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;通过脚本把旧表的存量数据写入新表。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;停读旧表改读新表，此时新表已经承载了所有读写业务，但是这时候不要立刻停写旧表，需要保持双写一段时间。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;当读写新表一段时间之后，如果没有业务问题，就可以停写旧表啦&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>15e978c249fc54711b02c07d8cda7a28</guid>
<title>浅谈携程大住宿研发效能提升实践</title>
<link>https://toutiao.io/k/3erbzpo</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content js_underline_content             autoTypeSetting24psection&amp;#10;            &quot; id=&quot;js_content&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;作者简介&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;Mia ，携程高级项目经理，负责酒店Devops实践，关注Devops/敏捷等领域&lt;/span&gt;。&lt;/p&gt;&lt;p&gt;&lt;span&gt;YY，携程敏捷教练，负责团队敏捷转型，研发效能提升实践，关注Agile、Devops、研发效能等领域。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;h1&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;一、前言&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span/&gt;&lt;/h1&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;管理大师彼得·德鲁克在《有效的主管》一书中简明扼要地指出：“效率是‘以正确的方式做事’，效能则是‘做正确的事’。效率和效能不应偏废，我们希望同时提高效率和效能，但若效率与效能无法兼得时，我们首先应着眼于效能的提升”。携程大住宿研发效能提升的指导思想就是基于做正确的事展开，并&lt;strong&gt;以“持续快速，高质量的交付有效价值”作为研发效能改进的核心目标。&lt;/strong&gt;通过持续不断的改进探索，让团队思考更加有效，工作更加高效。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;在落地研发效能提升的过程中，我们遇到了很多的挑战，总结下来核心的现象有以下四种：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1. 目标不一致，导致协作低效：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;大住宿拥有36个规模大小不一的敏捷团队。有小型的10以下的特性团队，也有50人以上的全功能敏捷团队。各团队相对独立又存在无法规避的协作关系。当A团队的目标依赖B团队的支持，就会存在取舍和协同。当AB团队目标不对齐时，先完成自身目标还是支持对方完成目标的过程会增加非常多额外的协作沟通成本。&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;2. 视角割裂，产生无效价值：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;产品只负责产出需求，开发只管任务完成，最终交付验收发现不是想要的功能。这是大住宿在敏捷转型前遇到最频繁的问题。团队成员&lt;/span&gt;&lt;/span&gt;&lt;span&gt;视角&lt;/span&gt;&lt;span&gt;割裂导致各角色只关注于自己熟悉的领域，而忽略目标价值的交付，最终会产生非必要的浪费。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;3. 基建薄弱，导致额外成本增加：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;有一种误会是只要转型敏捷研发效率就能10倍数提升。实践发现，&lt;/span&gt;&lt;span&gt;基建的薄弱在一定程度上反而增加团队的负担。比如为了持续频繁的发布，自动化测试的缺失带来额外的人工回归成本；比如代码质量不可靠导致测试频繁的返工等，在一定程度上不仅影响了团队交付效率，还导致了用户满意度的下降。&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;4. 度量困难，缺少客观衡量数据：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;大住宿的敏捷转型试点，从一块物理白板，一堆便签，几只油性笔开始。缺少电子信息的沉淀，需要完成度量的费力度和成本非常的高。当时为了收集度量的数据，需要人工记录过程信息，然后通过Excel梳理整合，再进行分析处理。人为的记录和分析让数据缺失一定的客观性，无法很好的衡量团队的改进效果，也无法有效引导团队改进方向。&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;为了改善以上问题，我们从想好、做好、做快这几个维度齐头并进，持续优化，深度耕耘：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;使用OKR工作法拉通产研，深度协作&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;使用MVP实践，围绕价值交付&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;通过深度敏捷实践，打造敏捷企业文化&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;通过DevOps实践，支撑团队快速交付&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.33925049309664695&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/kEeDgfCVf1fZZiaLfInDsHPOBMCwXPcVJNJvl6iawIfJ3EzmaBKr2nJOYia2bBwdA0nkiaib1T8s9URmInfI8tLcK4w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1014&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;h1&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;二、OKR工作法-上下同欲、对齐目标  &lt;/span&gt;&lt;/strong&gt;&lt;span&gt;  &lt;/span&gt;&lt;/span&gt;&lt;span&gt; &lt;p/&gt;&lt;/span&gt;&lt;/h1&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;明确一致的目标是组织内各个部门和全体成员的合作基础，共同的目标是组织建立和存在的客观基础，是完善和发展组织的客观依据，也是为组织创造更大价值的必备因素。OKR工作法（Objectives&amp;amp;KeyResult，目标与关键结果）是一种企业、团队、员工个人目标设定与沟通的最佳实践与工具，是通过结果去衡量过程的方法与实践。同时，OKR还是一种能够促进员工与团队协同工作的思维模式。大住宿OKR工作法的落地推进，有效的促进了团队成员间的紧密协作，同时也迎来了更多的挑战： &lt;/span&gt;   &lt;/span&gt;&lt;p/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;如何让整个组织的力量都聚焦在重要事项上，助力战略落地&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;&lt;p/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;如何管理组织内的目标横向对齐，消除“部门墙”的障碍，协作更高效&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;如何透明化组织、团队的目标，暴露重复、多余、无价的任务，节省成本&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;面对挑战，大住宿正在持续不断的探索改进中：&lt;p/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1. 推行产研一体，聚焦整体价值交付。&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;以敏捷团队为单位，团队的PO/TO与团队共创价值，将每个人的工作与团队目标联系起来。以季度为周期进行规划复盘，月度review进度和风险的节奏实施落地。无论是技术还是业务的需求，都聚焦到价值的交付上，团队内部形成良性平衡。&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;p/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;2. 试点部门级别产研一体的季度OKR复盘活动。&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;为了更好的达到上下和左右对齐目标，提高协作效率，大住宿从今年Q1开始试行部门级产研一体的季度规划和复盘活动。各团队会前准备好复盘材料；会上回顾复盘材料并进行讨论、反馈和建议；会后根据会议内容形成下一季度的OKR调整内容和建议。通过活动让大家看到各部门、岗位等相关方的相互依赖关系，明确自己的价值定位、实现团队间的紧密高效协作。从而打破筒仓效应，最大程度整合组织资源。&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;p/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;3. 借助IDEV目标管理工具更有效的透明OKR。&lt;/span&gt;&lt;/strong&gt;&lt;span lang=&quot;EN-US&quot;&gt;IDEV是公司提供的统一产品研发管理平台，大住宿在去年接入IDEV后，不仅提高了产品研发过程的透明性，也率先实现了需求数字化管理。结合实践管理发现需求目标的明确，可以更好的支撑需求的交付。经过沟通和设计，IDEV平台开发目标管理功能来支持团队的数字化目标管理。通过每个需求关联专属的KR对齐目标，并使用关联功能管理依赖团队间的需求。工具支撑的信息透明让团队更高效的彼此对齐，相互支撑，保证了团队步调一致，从而完成最终目标的实现。&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;p/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.5455820476858345&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/kEeDgfCVf1fZZiaLfInDsHPOBMCwXPcVJapkGUDmfsLwDUmKEXAjYYhGrrPejFodzeWCrf4hKKGpgeomV9jDeoA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;713&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;h1&gt;&lt;span&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot;&gt;三、MVP实践-共识价值，杜绝浪费&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h1&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;O代表一种追求和方向，KR是衡量目标达成的关键结果&lt;span&gt;。&lt;/span&gt;为了更好地支持KR的达成，团队&lt;span&gt;统一使用&lt;/span&gt;MVP思维。在规定的时间盒内&lt;span&gt;选取最&lt;span&gt;合适的&lt;span&gt;需求，并用&lt;span&gt;最&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;低的成本，最快的速度，向用户交付产品的主要功能及特色信息，&lt;span&gt;并&lt;/span&gt;通过及早的接触用户，获取客户反馈和市场验证来改进产品，迭代升级，以避免做无效需求。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;为了更好的落地MVP实践，大住宿主要采取了以下2个措施：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1. 合理拆分需求&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;，降低试错成本。&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;需求&lt;span&gt;拆分越小，需求越容易理解，改动成本越低，缺陷暴露越早，价值流动越快，也能更早的交付给用户，提前得到反馈。&lt;span&gt;但如果需求拆分的过小，分批开发也会带来测试和发布的成本增加。如何通过合理的拆分需求，降低试错成本&lt;span&gt;？&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;大住宿研发效能改进计划实施中首先对产研需求进行了规范化的治理，共同约定&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;IDEV上创建的每一个需求都是最小维度的可独立交付，可独立验收且可独立衡量价值维度。由于产研视角上的差异会产生不合理的拆分需求，研发团队如果无脑的接受产品拆分，会缺失对需求整体性的认知，也会面临技术实现相互冲突，还可能会对代码架构造成影响。在规范化需求后大住宿又&lt;span&gt;进一步培训加强&lt;/span&gt;产研团队共同拆分需求机制&lt;span&gt;落地。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot;&gt;2. MVP&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;思维贯穿需求整个生命周期。&lt;/span&gt;&lt;/strong&gt;&lt;span lang=&quot;EN-US&quot;&gt;MVP在实际实践中容易陷入一个误区，做完一个MVP就没有后续。大住宿在 MVP实践中提倡将思想贯彻到产品的整个生命周期当中。上线的MVP及时的验证并基于反馈快速的调整寻找下一个方向，迭代循环，&lt;span&gt;最终达成目标。敏捷团队在需求评审会上共识&lt;span&gt;第一次价值，然后在需求上线后及时的&lt;span&gt;验收&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;，进行第二次价值同步。针对没有达到目标需求，快速调研分析后会尽快在最近的迭代周期内安排再次上线验证。整个团队均始终围绕价值持续交付&lt;/span&gt;&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;h1&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;四、敏捷实践-&lt;/span&gt;&lt;span&gt;敏捷升级，助力效能&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h1&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;敏捷是研发效能提升的又一助力工具。敏捷开发是一种应对快速变化需求的软件开发模式，核心是小步快跑，快速迭代。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;大住宿从2014年开始推行敏捷转型，敏捷让团队实现价值驱动管理。传统开发模式除了瀑布接力开发外，还有一个是任务驱动管理。任务驱动管理模式下，客户第一次看到实现的功能可能是在验收阶段，这时候发生需求变化或功能新增都会让开发团队的返工成本变得无法预估。还可能为了赶进度，牺牲掉质量。而敏捷开发模式帮助团队重心放在实现对客户有价值的需求上，让团队关注真正有价值的东西。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;大住宿的敏捷转型是从Scrum开始试点，研发团队从只关注怎么实现需求到共同关注优先要实现哪些需求，如何更快的实现。但一支高效能的敏捷团队，不仅需要高有效的执行落地能力还需要持续不断的改进能力。缺失任何一种能力，都只会让敏捷停留在“伪敏捷”上。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;酒店研发在转型路上，也常会因为执行落地不到位而遭遇一些低效的情况：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot;&gt;   &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;针对以上问题我们做了如下的改进措施来帮助团队提高执行，持续改进。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.4157706093189964&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/kEeDgfCVf1cH0vXqedyjOUbBxOq3oa73ZHura4Q1QwHVuy8V8fGwbgqKzTXS9xHqslHURoPDXiaEqPGKIqpp0bQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1116&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;早期的Scrum团队更多的关注在软件过程中的活动，而忽略了开发过程中的各种等待时长。Kanban方法的加入帮助酒店团队看清各种等待不增值的环节。通过Kanban方法拉通产品、设计、交互、开发、测试、BI等各职能各环节的价值流动，并通过IDEV需求管理平台实现上下游价值的流动可视化。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;改进前团队的关注重心从“敏捷排期”阶段到“待验收”上线阶段。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.5055821371610846&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/kEeDgfCVf1fZZiaLfInDsHPOBMCwXPcVJAMajWNzZzGb7cCJOxxz1Uh5afDZ79BaoKg0iaXwksA3JUvuaQ5icGhnw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1254&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;改进后团队的关注重心从“需求规划”阶段开始到“完成”阶段的整个产品生命周期。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.2910094637223975&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/kEeDgfCVf1fZZiaLfInDsHPOBMCwXPcVJc63icRZCYiaSKK6nWos1nSytbEIPgicx9QRo4h53U9Kks0LdF6uySqmyw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1268&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;Scrum和Kanban都是帮助团队尽早交付和持续改进的过程方法，方法各有千秋，合适的才是最好的。只有不断的实践，不断的总结，不断的调整，才能真正意义上帮助团队提升。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;酒&lt;/span&gt;&lt;span&gt;店研发&lt;/span&gt;&lt;span&gt;在方法的选择上，&lt;/span&gt;&lt;span&gt;也&lt;/span&gt;&lt;span&gt;是基于团队自身情况进行决策，比如：&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;有版本限制的团队，采用Scrum，节奏感可以帮助团队提高协作效率。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;创新型业务，关注快速交付的团队，采用Kanban，重点&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;聚焦需求价值流动和及时反馈。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;单周交付的团队，采用了&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot;&gt;Scrum+Kanban&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;混合方式，有效平衡速度和节奏要求。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; align=&quot;center&quot;&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot;&gt;Scrum&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot;&gt;Kanban&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;section&gt;&lt;span&gt;实践核心：化繁为简&lt;/span&gt;&lt;/section&gt;&lt;/td&gt;&lt;td&gt;&lt;section&gt;&lt;span&gt;实践核心：可视化价值流&lt;/span&gt;&lt;/section&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;section&gt;&lt;span&gt;定义团队角色：Scrum Master、PO、Team&lt;/span&gt;&lt;/section&gt;&lt;/td&gt;&lt;td&gt;&lt;section&gt;&lt;span&gt;无特殊规则&lt;/span&gt;&lt;/section&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;section&gt;&lt;span&gt;定义迭代，固定时间盒概念（两周迭代）&lt;/span&gt;&lt;/section&gt;&lt;/td&gt;&lt;td&gt;&lt;section&gt;&lt;span&gt;限制WIP（work in progress）&lt;/span&gt;&lt;/section&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;section&gt;&lt;span&gt;Sprint开始后建议不允许新增需求&lt;/span&gt;&lt;/section&gt;&lt;/td&gt;&lt;td&gt;&lt;section&gt;&lt;span&gt;只要生产力允许，即可新增需求&lt;/span&gt;&lt;/section&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;section&gt;&lt;span&gt;尽早交付价值&lt;/span&gt;&lt;/section&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;section&gt;&lt;span&gt;持续改进&lt;/span&gt;&lt;/section&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;八年的敏捷文化熏陶，大住宿大部分的敏捷团队已从“守”的阶段进入“破”和“离”的阶段。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1. 守， 团队能按照scrum的流程去实施敏捷，如团队中有三个角色(PO\SM\Team)，团队按照四会（站会，计划会，评审会，回顾会）开展工作等等。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;2. 破， 团队能根据自身的状况，去突破敏捷原有的部分规则，去到更高的层次，比如根据敏捷的价值观去增加其它的一些东西，例如增加TO的角色、增加code-review会议等。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;3. 离， 团队的成员已经非常熟悉敏捷的流程和规范，对敏捷的价值观驾轻就熟。团队根据自身状况制定相关的实践，比如PO/TO共创团队OKR等。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;敏捷实践的升级让端到端的产品、开发、利益相关人更顺滑的聚合在一起，采用合作共赢的协作方式帮助团队价值最大化。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;五、DevOps实践-提升质量，加速交付&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;除了采用目标对齐，共识价值，高效的敏捷实践等改进措施，想要达到持续频繁的交付还需要持续集成持续发布能力的支撑。DevOps强调通过一系列手段来实现既快又稳的工作流程，使每个想法（比如一个新的软件功能，一个功能增强请求或者一个
bug 修复）在从开发到生产环境部署的整个流程中，都能不断地为用户带来价值。CI/CD作为DevOps的重要组成部分，核心价值便是效能与质量，一方面将整个软件研发流程自动化，降低人力成本，另一方面提供了相应的质量检查与测试工具，以期建立一个完整的质量度量体系。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;酒店研发引入公司CI/CD解决方案，建立完善的准备环境/测试/资源构建/镜像构建一整个流程的链路，使它可帮助项目以更快的速度和更高的质量来交付。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;以大住宿某前端研发团队的流水线为例，团队从以下三个目标出发：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;通过设置代码规范检查，单元测试、UI测试、性能测试等任务来提升自动化覆盖率，提升集成效&lt;/span&gt;&lt;span&gt;率，强化整体代码质量，提前发现问题，最终实现加快交付频率的目标。并通过采集流水线数据，可视化项目流水线执行概况、近期质量趋势，帮助团队用数据思考，利用数据，持续提升效率。&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.33607520564042304&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/kEeDgfCVf1fZZiaLfInDsHPOBMCwXPcVJwhm5H6WBxVrscPYDwNHuI303cbMKCfJhoo32PHl1c7SG4aygc0fVhw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;851&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;1.0613026819923372&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/kEeDgfCVf1fZZiaLfInDsHPOBMCwXPcVJCiaDDllhq4Rt4Com3d0x4H62abgJyMO0w9DSXXqOWl3rrgJShUkiaYXw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;522&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;小结&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：OKR工作法保障团队方向正确；MVP实践帮助团队聚焦目标价值；敏捷实践专注快速交付价值，拥抱变化；DevOps助力快速交付，强化自动化能力。四大措施持续改进，最终达到研发效能提升的目的：持续快速，高质量地向用户交付产品。&lt;/span&gt;&lt;/section&gt;&lt;h1&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h1&gt;&lt;h1&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;六、如何衡量研发效能得到了提升？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h1&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;管理大师彼得·德鲁克还说没有度量就没有管理。度量最重要的目的是洞察出问题，进行指导改进，并衡量改进的效果。数字化时代的到来，很多企业已具备自动采集效能数据以实现度量所需的各种实时数据报表。大住宿在去年接入公司统一产品研发管理平台IDEV后，不仅提高了产品研发过程的透明性，也率先实现了需求数字化管理。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;大住宿&lt;/span&gt;&lt;span&gt;借助大量的客观数据从目标、价值、质量、效率这4个维度的进行分析找到团队的痛点，并引导团队做真正能解决问题的行为来持续改善。&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;h2&gt;&lt;br/&gt;&lt;/h2&gt;&lt;h2&gt;&lt;strong&gt;&lt;span&gt;1. 核心目标占比&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/h2&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;核心目标价值的占比帮助团队对齐目标和资源整合。我们通过目标管理工具，规范需求与目标的关联，再通过度量单位时间内围绕目标的交付需求占比来反映团队的目标对齐度。试点实践中遇到最大的问题是数据的失真。数据的准确与团队关联目标的规范息息相关，需要通过对团队进行不断的培训和宣导来帮助团队养成习惯，以此保障数据的准确性。&lt;/span&gt;&lt;/section&gt;&lt;h2&gt;&lt;br/&gt;&lt;/h2&gt;&lt;h2&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;strong&gt;&lt;span&gt;2. &lt;/span&gt;需求价值指数&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;需求是价值的承载体现，假设交付需求均具有价值，那么交付需求的数量越多，代表交付的价值越多。但单以需求个数无法很好的反映团队的交付价值。每个需求的规模和价值大小不一。比如单位时间内可能只交付了一个收益很高的需求，并不能说明团队的产出变少。团队需求价值指数从更客观的维度衡量团队在单位时间内是否产出高价值的内容，以此杜绝高成本低收益的投入。需求价值指数由团队负责的需求个数、人员数、预估价值、实际价值、需求价值正态分布情况等综合评估得出
。&lt;/span&gt;&lt;/section&gt;&lt;h2&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/h2&gt;&lt;h2&gt;&lt;span&gt;&lt;strong&gt;3. 交付质量&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;研发交付质量是指用户感受到的质量，可以理解为线上用户保障的缺陷。影响交付质量的一个重要因素就是交付过程质量。大住宿主要以单位时间内的缺陷数量趋势来衡量团队交付质量。为了降低缺陷数量，研发团队通过质量内建、提前验收等各种方法来前置保障交付过程质量。并通过分析线上以及过程缺陷，进行归因改进。从自动化，Mock工具、开发自测等各个方面着手落实改进措施，持续提升交付质量。&lt;/span&gt;&lt;/section&gt;&lt;h2&gt;&lt;br/&gt;&lt;/h2&gt;&lt;h2&gt;&lt;strong&gt;&lt;span&gt;4. 响应能力&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/h2&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;需求的响应周期和团队持续发布的能力体现团队的持续和快速。交付周期指对用户需求、业务机会的响应速度。酒店研发采用从创建需求开始，到需求上线所经历的平均时长来度量交付周期；通过开始code到发布上线所经历的平均时长来度量开发周期；通过单位时间内的有效发布次数来衡量团队对外响应和价值的流动速度。经过一段时间的优化改进，大住宿2周内交付的需求占比呈稳定提升趋势。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.2566929133858268&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/kEeDgfCVf1fZZiaLfInDsHPOBMCwXPcVJ0bmoibIN3PzbmXeUCfTG7bxZxxuMibVfJFc13hT0wNk3tefhWeR5icYSg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1270&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.8057040998217468&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/kEeDgfCVf1fZZiaLfInDsHPOBMCwXPcVJIGeZcCHz1hicwnRSD0A9yGaBy7yqUIXQqynWPukwE11brXIQIruZbYA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;561&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;七、总结&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;我们可以通过各种措施来提升改进，但研发效能的提升没有“银弹”，研发效能的提升没有最好，只有更好。需要我们从目标、价值、质量、效率每一个领域都进行深入地挖掘和思考，共同努力把持续改进的焦点从局部资源效率转向价值流动效率，以此保证全局和系统的持续优化。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot;&gt;OKR&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;工作法：上下同欲、对齐目标&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot;&gt;MVP&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;实践：共识价值，消灭浪费&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;敏捷实践：敏捷升级，助力效能&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot;&gt;DevOps&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;实践：提升质量，加速交付&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;大住宿依然在探寻更好的效能提升方法的路上，就像&lt;strong&gt;敏捷宣言中提到的&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot;&gt;“我们一直在实践中探寻更好的软件开发方法，身体力行的同时也帮助他人。”&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;也希望本篇浅浅的实践总结可以帮助到对研发效能有期待有困惑的你。&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;【推荐阅读】&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;h1&gt;&lt;br/&gt;&lt;/h1&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/kEeDgfCVf1fZZiaLfInDsHPOBMCwXPcVJxjFXflpXY3LAmjyx4OTichqMfLZjCIJSu9aM0yYAEuVuJibItCGeUmWg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt; “携程技术”公众号&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;  分享，交流，成长&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;h1/&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;mp-style-type data-value=&quot;3&quot;/&gt;&lt;/p&gt;&lt;/div&gt;

          
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>