<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>ddbce4b6def51eddb1036d5b8d594dab</guid>
<title>Kubernetes网络插件详解 - Calico篇 - 网络基础</title>
<link>https://toutiao.io/k/vqnj7pn</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                           autoTypeSetting24psection&amp;#10;                          &quot; id=&quot;js_content&quot;&gt;&lt;section&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mp-common-profile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzI1MTAyMjE5MQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/8Tts2IxBm8to6kSen2ujic3iajMh2ZLbo0zVsFjvSGbXEibkxwj3iaDsF7H4SWKBZ7MGe0JSNCIYPoicqoWrQgmXaaA/0?wx_fmt=png&quot; data-nickname=&quot;巨子嘉&quot; data-alias=&quot;juzijia-club&quot; data-signature=&quot;聚焦云原生，边缘计算及物联网等前沿技术领域，结合实际项目中的产品架构实践，形成体系化的原创文章，分享给需要的人。&quot; data-from=&quot;0&quot; data-is_biz_ban=&quot;0&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;Container容器借助底层Linux操作系统的Namespace与Cgroup内核技术，实现在单一主机资源的轻量级虚拟化资源隔离，包含进程ID、主机名、用户ID、文件名、网络和进程间通信等。同时每个网络空间Network Namesapce都有独立的网络栈，包括网络接口（Network Interface）、回环设备（Lookback Device）、路由表（Routing Table）和iptables规则等，是容器网络隔离与通信的基础。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.6648148148148149&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/8Tts2IxBm8uDK3yKTvDFL32kM2tOYW8nGUB1kSiab8gRHjL9AMiapcwOhLwyzsWObNCtj8TaOF79hIveer7hUDVw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;    &lt;span&gt;Kubernetes是以Container容器技术为核心的调度引擎，将传统云计算对应的基础资源，包含计算、存储，网络进行了彻底池化统一管理，同时将运行在技术架构之上的应用和服务也进行了抽象标准化，再通过调度快速实现应用与资源的匹配，即以应用为中心构建云原生操作系统能力。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;    在Kubernetes集群内，既要解决相同宿主机多个命名空间网络栈共享底层硬件资源，同时还要解决集群内部跨宿主机网络通信的问题，面向应用提供完成的网络能力，所以容器网络是Kubernetes最复杂部分，同时也是设计精华所在：&lt;/span&gt;&lt;strong&gt;&lt;span&gt;对于相同宿主机共享底层硬件设备问题&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;，通常是借助虚拟化技术来实现，通过虚拟设备来实现灵活的管理，再将虚拟化设备连接到真实的物理设备上实现网络通信；&lt;/span&gt;&lt;strong&gt;&lt;span&gt;对于跨宿主机网络通信问题&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;，采用SDN软件定义网络的思路，灵活使用底层网络通信协议，同时结合各种虚拟化隧道通信技术，实现容器集群内外部通信。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;所以要搞清楚复杂的容器网络及各种各样的网络插件，首先需要了解网络通信基础，网络设备虚拟化以及网络隧道技术。&lt;/span&gt;&lt;/section&gt;&lt;section data-role=&quot;title&quot; data-tools=&quot;135编辑器&quot; data-id=&quot;116484&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;strong data-brushtype=&quot;text&quot;&gt;网络通信基础&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section hm_fix=&quot;408:491&quot;&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;title&quot; data-tools=&quot;135编辑器&quot; data-id=&quot;107461&quot;&gt;&lt;section hm_fix=&quot;264:484&quot;&gt;&lt;section&gt;&lt;section data-role=&quot;title&quot; data-tools=&quot;135编辑器&quot; data-id=&quot;107453&quot;&gt;&lt;section&gt;&lt;section hm_fix=&quot;327:528&quot;&gt;&lt;section&gt;&lt;strong data-original-title=&quot;&quot; title=&quot;&quot; data-num=&quot;3&quot;&gt;01&lt;/strong&gt;&lt;/section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;网络模&lt;/section&gt;&lt;/section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;    OSI网络模型&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;将网络数据发送和接收数据的过程分为7层，分别是物理层（Physical Layer），数据链路层（Data Link Layer），网络层（Network Layer），传输层（Transport Layer），会话层（Session Layer），表示层（Presentation Layer），应用层（Application Layer）。&lt;/span&gt;&lt;strong&gt;&lt;span&gt;TCP/IP协议&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;定义了一个应用于不同网络间信息传输的协议簇，对网络中各层次的通信制定了标准和方法。TCP/IP包含了很多协议，常见的协议包括IP、FTP、TCP、UDP、SMTP等。TCP/IP协议定义4层或者5层，4层主要包含链路层，网络层，传输层，应用层。OSI是开放系统的互连模型，相关的协议已经非常少使用，但是模型本身非常通用；只是由于OSI模型过于理想化，至今尚未有完整的实现。TCP/IP网络结构体系实际上是由OSI七层模型演化而来，是一个工业标准，并不是只由TCP和IP协议组成，而是由支持能够在多个不同的网络间实现信息传输的协议簇，后续的网络通信主要是基于TCP/IP协议讲解。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.45092592592592595&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/8Tts2IxBm8uDK3yKTvDFL32kM2tOYW8n4Ak1Eqs6jh7FYeu8KvfRDzEuqIu8zwSg81Ep4qzs5wN2vw8Wibuib5OA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;
&lt;section data-role=&quot;title&quot; data-tools=&quot;135编辑器&quot; data-id=&quot;107461&quot;&gt;&lt;section data-role=&quot;title&quot; data-tools=&quot;135编辑器&quot; data-id=&quot;107453&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;strong data-original-title=&quot;&quot; title=&quot;&quot; data-num=&quot;2&quot;&gt;02&lt;/strong&gt;&lt;/section&gt;&lt;section data-brushtype=&quot;text&quot; hm_fix=&quot;236:532&quot;&gt;网络数据包&lt;/section&gt;&lt;/section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/span&gt;&lt;p&gt;&lt;span&gt;    在TCP/IP通信中，网络层的作用是实现终端的点对点通信。通过IP地址将数据包发送给目的主机，在发送数据时，网络堆栈的每一层都会添加自己的报文头，包含该层需要的控制/元数据，以便在数据包穿过网络时对其进行处理，并将生成的数据包传递到堆栈的下一层。这样就产生了完整的数据包。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;p draggable=&quot;true&quot;&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.5555555555555556&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/8Tts2IxBm8uDK3yKTvDFL32kM2tOYW8nH8rWGdNSqnPiaFIRUexcYu0CSiaISJ5XyxicG7CSzkYTOTtMcG7thPiaqg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;section data-role=&quot;title&quot; data-tools=&quot;135编辑器&quot; data-id=&quot;107461&quot;&gt;&lt;section hm_fix=&quot;264:484&quot;&gt;&lt;section&gt;&lt;section data-role=&quot;title&quot; data-tools=&quot;135编辑器&quot; data-id=&quot;107453&quot;&gt;&lt;section&gt;&lt;section hm_fix=&quot;327:528&quot;&gt;&lt;section&gt;&lt;strong data-original-title=&quot;&quot; title=&quot;&quot; data-num=&quot;3&quot;&gt;03&lt;/strong&gt;&lt;/section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;IP路由&lt;/section&gt;&lt;/section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;    当网络设备收到一个数据包时，它根据数据包的目的IP地址查询路由表，如果有匹配的路由条目，就根据查询结果将数据包转发出去，如果没有任何匹配的路由条目，则将数据包丢弃，这个过程就是IP路由。除了路由器，三层交换机、防火墙、负载均衡设备甚至主机等设备都可以进行路由操作。每一个路由条目包含目的网段地址/子网掩码、路由协议、出接口、下一跳IP地址、路由优先级和度量值等信息。路由表直连路由、静态路由和动态路由三种方式获取，其中动态路由是通过动态路由协议从相邻网络设备动态学习到的路由条目。协议有OSPF，BGP ，RIP，RIPv2等。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.3111111111111111&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/8Tts2IxBm8uDK3yKTvDFL32kM2tOYW8noaqlE2DwxzqQRhJibjxy1bw4UDMekjZ7NKG4ksQ1b3bswbHaq9xUrrw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;    其中BGP协议，即边界网关协议，是一种运行于TCP上的一种能够处理因特网大小的网络协议，也是一种可以完善无关路由域间的多路连接协议。BGP主要用于与其他BGP线路建立网络连接、相互交换包括AS在内的信息。Kubernetes容器网络插件Calico，就基于此协议实现网络数据转发。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.3175925925925926&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/8Tts2IxBm8uDK3yKTvDFL32kM2tOYW8nQ3nUGicmcXLjwPqqib7XA8p2YqZ8IiazicTKapERGZaicQ67ma2MR9fkLWA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;section data-role=&quot;title&quot; data-tools=&quot;135编辑器&quot; data-id=&quot;107461&quot;&gt;&lt;section hm_fix=&quot;264:484&quot;&gt;&lt;section&gt;&lt;section data-role=&quot;title&quot; data-tools=&quot;135编辑器&quot; data-id=&quot;107453&quot;&gt;&lt;section&gt;&lt;section hm_fix=&quot;327:528&quot;&gt;&lt;section&gt;&lt;strong data-original-title=&quot;&quot; title=&quot;&quot; data-num=&quot;3&quot;&gt;04&lt;/strong&gt;&lt;/section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;NAT（Network Address Translation）&lt;/section&gt;&lt;/section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;    网络地址转换是一种地址转换技术，可以将IP数据报文头中的IP地址转换为另一个IP地址，并通过转换端口号达到地址重用的目的。&lt;/p&gt;&lt;section data-role=&quot;title&quot; data-tools=&quot;135编辑器&quot; data-id=&quot;116484&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section hm_fix=&quot;367:413&quot;&gt;&lt;strong data-brushtype=&quot;text&quot;&gt;网络设备虚拟化&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;    在没有虚拟化技术之前，计算机网络系统都只通过物理网卡，线缆介质，连接外部网络，构成庞大的网络。随着虚拟化技术的出现，网络也随之被虚拟化，相较于单一的物理网络，虚拟网络变得非常复杂。Linux虚拟网络的底层都是由一个个的虚拟设备构成的，以此来实现诸如交换、路由、隧道、隔离、聚合等多种网络功能。常见的虚拟网络设备有tap/tun、veth-pair和bridge。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.3490740740740741&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/8Tts2IxBm8uDK3yKTvDFL32kM2tOYW8nJ17Mv0gRzKj7iaWNJJvODgNuJHGeic7qjQCezIhn4972Gz4ToQ0YrOiaw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-role=&quot;title&quot; data-tools=&quot;135编辑器&quot; data-id=&quot;107461&quot;&gt;&lt;section hm_fix=&quot;264:484&quot;&gt;&lt;section&gt;&lt;section data-role=&quot;title&quot; data-tools=&quot;135编辑器&quot; data-id=&quot;107453&quot;&gt;&lt;section&gt;&lt;section hm_fix=&quot;327:528&quot;&gt;&lt;section&gt;&lt;strong data-original-title=&quot;&quot; title=&quot;&quot; data-num=&quot;3&quot;&gt;01&lt;/strong&gt;&lt;/section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;Tap/Tun&lt;/section&gt;&lt;/section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;    Tap/Tun是Linux内核实现的一对虚拟网络设备，TAP工作在二层，TUN工作在三层。Linux内核通过TAP/TUN设备向绑定该设备的用户空间程序发送数据，反之用户空间程序也可以像操作物理网络设备那样向 TAP/TUN 设备发送数据。&lt;/p&gt;&lt;section data-role=&quot;title&quot; data-tools=&quot;135编辑器&quot; data-id=&quot;107461&quot;&gt;&lt;section hm_fix=&quot;264:484&quot;&gt;&lt;section&gt;&lt;section data-role=&quot;title&quot; data-tools=&quot;135编辑器&quot; data-id=&quot;107453&quot;&gt;&lt;section&gt;&lt;section hm_fix=&quot;327:528&quot;&gt;&lt;section&gt;&lt;strong data-original-title=&quot;&quot; title=&quot;&quot; data-num=&quot;3&quot;&gt;02&lt;/strong&gt;&lt;/section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;Veth-pair&lt;/section&gt;&lt;/section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;    Veth-pair是一端连着内核协议栈，另一端连着另一个设备，一个设备收到内核发送的数据后，会发送到另一个设备上去，这种设备通常用于容器中两个namespace之间的通信。&lt;/p&gt;&lt;section data-role=&quot;title&quot; data-tools=&quot;135编辑器&quot; data-id=&quot;107461&quot;&gt;&lt;section hm_fix=&quot;264:484&quot;&gt;&lt;section&gt;&lt;section data-role=&quot;title&quot; data-tools=&quot;135编辑器&quot; data-id=&quot;107453&quot;&gt;&lt;section&gt;&lt;section hm_fix=&quot;327:528&quot;&gt;&lt;section&gt;&lt;strong data-original-title=&quot;&quot; title=&quot;&quot; data-num=&quot;3&quot;&gt;03&lt;/strong&gt;&lt;/section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;Bridge&lt;/section&gt;&lt;/section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;    Bridge是Linux内核实现的一个工作在二层的虚拟网络设备，但不同于TAP/TUN这种单端口的设备，Bridge实现为多端口，本质上是一个虚拟交换机，具备和物理交换机类似的功能。Bridge可以绑定其他Linux网络设备作为从设备，并将这些从设备虚拟化为端口，当一个从设备被绑定到Bridge上时，就相当于真实网络中的交换机端口上插入了一根连有终端的网线。&lt;/p&gt;&lt;section data-role=&quot;title&quot; data-tools=&quot;135编辑器&quot; data-id=&quot;116484&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;strong&gt;网络隧道技术&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section hm_fix=&quot;382:402&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;隧道（Tunneling）是一种网络数据通信技术，主要解决网络协议不支持，数据传输不安全等网络通信问题。将不支持的协议数据包打包成支持的协议数据包之后进行传输，或在不安全网络上提供一个安全路径。通过网络隧道技术，可以使隧道两端的网络组成一个更大的内部网络。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;    隧道协议有二层隧道协议与三层隧道协议两类，二层隧道协议对应OSI模型中数据链路层，使用帧作为数据交换单位，将数据封装在点对点协议的帧中通过互联网络发送，协议包含PPTP、L2TP、L2F等。三层隧道协议对应OSI模型中网络层，使用包作为数据交换单位，将数据包封装在附加的IP包头中通过IP网络传送，协议包含GRE、IPSec、GRE等。Linux原生支持多种三层隧道，其底层实现原理都是基于tun设备：&lt;/span&gt;&lt;/p&gt;&lt;section data-role=&quot;list&quot;&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;IPIP：&lt;/strong&gt;普通的IPIP隧道，就是在报文的基础上再封装成一个IPv4报文&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;GRE：&lt;/strong&gt;通用路由封装（Generic Routing Encapsulation），定义了在任意网络层协议上封装其他网络层协议的机制，所以对于IPv4和IPv6都适用&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;SIT：&lt;/strong&gt;主要用于IPv4报文封装IPv6报文，即IPv6 over IPv4&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;ISATAP：&lt;/strong&gt;站内自动隧道寻址协议，类似于sit也是用于IPv6的隧道封装&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;VTI：&lt;/strong&gt;即虚拟隧道接口（Virtual Tunnel Interface），是一种IPsec隧道技术。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;title&quot; data-tools=&quot;135编辑器&quot; data-id=&quot;107461&quot;&gt;&lt;section hm_fix=&quot;264:484&quot;&gt;&lt;section&gt;&lt;section data-role=&quot;title&quot; data-tools=&quot;135编辑器&quot; data-id=&quot;107453&quot;&gt;&lt;section&gt;&lt;section hm_fix=&quot;327:528&quot;&gt;&lt;section&gt;&lt;strong data-original-title=&quot;&quot; title=&quot;&quot; data-num=&quot;3&quot;&gt;01&lt;/strong&gt;&lt;/section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;VXLAN隧道技术&lt;/section&gt;&lt;/section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;    &lt;span&gt;Linux内核自3.7版本开始支持VXLAN隧道技术，是目前最流行的Overlay网络隧道协议之一，将二层以太网帧封装在四层UDP报文中，通过三层网络传输，组成一个虚拟大二层网络。VXLAN使用VTEP（VXLAN Tunnel Endpoint）来进行封包和解包：在发送端，源VTEP将原始报文封装成VXLAN报文，通过UDP发送到对端VTEP；在接收端，VTEP将解开VXLAN报文，将原始的二层数据帧转发给目的的接收方。VTEP可以是独立的网络设备，例如交换机，也可以是部署在服务器上的虚拟设备。例如使用置顶交换机（TOR）作为VTEP时，VXLAN的网络模型如下图：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.4527777777777778&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/8Tts2IxBm8uDK3yKTvDFL32kM2tOYW8nicuYNQbRTXAYKtRYKcDsmx1Fcop3lqBVMUobJLHV0RQicVd9s6Y2NdIA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;section data-role=&quot;list&quot;&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;VTEP（VXLAN tunnel endpoints）：&lt;/strong&gt;VXLAN网络的边缘设备，用来进行VXLAN报文的封包与解包。VTEP可以是网络设备（例如交换机），也可以是一台机器（例如虚拟化集群中的宿主机）。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;VNI（VXLAN network identifier）：&lt;/strong&gt;VNI是VXLAN的标识，是个24位整数，因此最大值是２的24次方个。如果一个VNI对应一个租户，那么理论上VXLAN可以支持千万级别的租户。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;VXLAN Tunnel：&lt;/strong&gt;隧道是一个逻辑上的概念，在VXLAN模型中并没有具体的物理实体相对应。隧道可以看作一个虚拟通道，VXLAN通信双方都认为自己在直接通信，并不知道底层网络的存在。从整体上看，每个VXLAN网络像是为通信的设备搭建了一个单独的通信通道，也就是隧道。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;    VXLAN的报文就是MAC in UDP，即在三层网络的基础上构建一个虚拟的二层网络。VXLAN的封包格式显示原来的二层以太网帧（包含MAC头部、IP头部和传输层头部的报文），被放在VXLAN包头里进行封装，再套到标准的UDP头部（UDP头部、IP头部和MAC头部），用来在底层网络上传输报文。VXLAN报文比原始报文多出50个字节，这降低了网络链路传输的有效数据比例，尤其是小包。UDP目的端口是接收方VTEP设备使用的端口，IANA分配了4789作为VXLAN的目的UDP端口（flannel　VXLAN模式是8472）。&lt;/p&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.43148148148148147&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/8Tts2IxBm8uDK3yKTvDFL32kM2tOYW8noSesSy9EXuDlYXlib4kE4VJWTI0Ulsz3Ad2XMMmZLiciazI6ib4Cutt96w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-role=&quot;title&quot; data-tools=&quot;135编辑器&quot; data-id=&quot;116484&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;strong&gt;最后，总结一下&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section hm_fix=&quot;382:402&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;总的来说，云原生Kubernetes并且没有创造新的网络技术，而是根据各种场景灵活的聚合使用各种网络技术。从底层通信技术来看，容器网络有Overlay模式，路由模式，以及Underlay模式三种，其中Overlay模式主要是通过虚拟化与隧道技术，屏蔽底层网络复杂路由转发，面向应用提供简单高效的通信能力。同时底层操作系统内核的网络的技术也在发展演进，各种虚拟化技术及隧道技术极其相似，又各自有细微的差别，所以才有多种容器网络插件及网络模式，所以容器网络规划选择一定要针对业务应用的场景，在灵活，高效，以及成本等多因素中权衡选择合适的网络方案。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;/div&gt;

          

          
          &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>2ce69140adaa47c26eef2a758a4dfb7f</guid>
<title>Binlog 的三个业务应用场景</title>
<link>https://toutiao.io/k/bhrm8kp</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                                       &quot; id=&quot;js_content&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;ignored&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;p&gt;&lt;span&gt;点击上方“&lt;/span&gt;&lt;span&gt;芋道源码&lt;/span&gt;&lt;span&gt;”，选择“&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247486188&amp;amp;idx=3&amp;amp;sn=f160d91ea23e5113e6077c500a2e30c4&amp;amp;chksm=fa49755dcd3efc4bf4f566fbbbf74c191d0b79f2d3222fd211bc52d80b5ef127f52b1158ed71&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-linktype=&quot;2&quot;&gt;设为星标&lt;/a&gt;”&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;管她前浪，还是后浪？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;能浪的浪，才是好浪！&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;每天 &lt;/span&gt;&lt;span&gt;&lt;strong&gt;10:33&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; 更新文章，每天掉亿点点头发...&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section data-mpa-template-id=&quot;692363&quot; data-mpa-category=&quot;fav&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;&lt;p&gt;源码精品专栏&lt;/p&gt;&lt;/span&gt; &lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;来源：www.cnblogs.com/kingszelda/p/8362612.html&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;来源：www.cnblogs.com/kingszelda&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;来源：www.cnblogs.com/kingszelda/p/8362612.html&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;/p/8362612.html&lt;/span&gt;&lt;/a&gt;&lt;span/&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/JdLkEI9sZfcJQQoZtiaCzX7AI5iazZjC02u7kQzl6zic6VQsXic9r3sVEnaxAiafEfK340Makhx5JywibLyDlAYREaAA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;458&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;section&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;chksm=fa496f8ecd3ee698f4954c00efb80fe955ec9198fff3ef4011e331aa37f55a6a17bc8c0335a8&amp;amp;scene=21&amp;amp;token=899450012&amp;amp;lang=zh_CN#wechat_redirect&quot; data-linktype=&quot;2&quot;/&gt;&lt;/section&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;binlog是mysql的一种二进制日志文件，用来记录数据的变化。mysql使用binlog进行主从复制，如图：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.41955445544554454&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdLkEI9sZfcJQQoZtiaCzX7AI5iazZjC02T5drWT3G17dgjLtuwiafJm8KdFGdXud4JASibSRy2bJmPZxAuEy3nkGw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;808&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/figure&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;客户端向master的mysql sever写入数据&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;当数据发生变化时，master将变更的数据记录写入到二进制文件中，即binlog。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;slave订阅了master的binlog，所以会通过一个I/O THREAD与master的DUMP THREAD进行通信，同步binlog&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;I/O THREAD读取到binlog后会吸入到relay log中，准备重放。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;slave会通过SQL THREAD读取relay log，重放数据的改动并执行相应的改动。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里有几点需要注意：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;主从复制不是强一致性，只能保证最终一致&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;master配合binlog复制会影响性能，所以尽量不要在master上挂太多的slave，如果对时间要求不高，可以在slave上挂slave&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;基于 Spring Boot + MyBatis Plus + Vue &amp;amp; Element 实现的后台管理系统 + 用户小程序，支持 RBAC 动态权限、多租户、数据权限、工作流、三方登录、支付、短信、商城等功能&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;项目地址：https://gitee.com/zhijiantianya/ruoyi-vue-pro&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;视频教程：https://doc.iocoder.cn/video/&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上面介绍了mysql中应用binlog的场景，而我们的业务可以伪装成master的slave节点，感知数据的变化，这就给了我们很多的业务运用空间。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;基于 Spring Cloud Alibaba + Gateway + Nacos + RocketMQ + Vue &amp;amp; Element 实现的后台管理系统 + 用户小程序，支持 RBAC 动态权限、多租户、数据权限、工作流、三方登录、支付、短信、商城等功能&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;项目地址：https://gitee.com/zhijiantianya/yudao-cloud&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;视频教程：https://doc.iocoder.cn/video/&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;经常有这样一个场景：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;原来业务是一个很单一的系统，所以表也在一起。随着业务的发展，系统开始拆分，总有一些表是各个业务都关注的表，但是对相关的字段的运用场景不同，所以这样一份元数据怎样更好的为各个系统服务就成了问题。当然，多写或者读写分离可以从物理节点上减少对数据服务器的压力，但是对业务并没有做到足够的支持，因为这些表都是一样的。因此我们可以通过binlog进行数据异构。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6071829405162739&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdLkEI9sZfcJQQoZtiaCzX7AI5iazZjC02h6FiaygUokiabt3014mxnibQZXPnzVDoHN1VIOjvIc0y0ldRnbpbdia1icQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;891&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如图所示，订单系统生成订单后，通过binlog可以解析生成用户维度的订单信息供用户中心查询、商户维度订单表供运营管理，以及搜索系统的搜索数据，提供全文搜索功能。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这样，我们就通过原始的订单数据异构到三个系统中，提供了丰富的数据访问功能。不仅从节点上降低了数据服务器的压力，数据表现形式也更贴近自己的服务，减少不必要的字段冗余。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于高并发的系统，数据库往往是系统性能的瓶颈，毕竟IO响应速度是远远小于电子的运算速度的。因此，很多查询类服务都会在CPU与数据库之间加上一层缓存。即现从缓存获取，命中后直接返回，否则从DB中获取并存入缓存后返回。而如果原始数据变化了但缓存尚未超时，则缓存中的数据就是过时的数据了。当数据有变更的时候主动修改缓存数据。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.822992700729927&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdLkEI9sZfcJQQoZtiaCzX7AI5iazZjC02pzvZFjjvEWaCkPicLUAdQn8K29MRyc1avZUibxhjEBYT5a2H0kxSJEZQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;548&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当客户端更改了数据之后，中间件系统通过binlog获得数据变更，并同步到缓存中。这样就保证了缓存中数据有效性，减少了对数据库的调用，从而提高整体性能。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有这样一个场景：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;很多系统依赖同一块重要数据，当这些数据发生变化的时候，需要调用其他相关系统的通知接口同步数据变化，或者mq消息告知变化并等待其主动同步。这两种情况都对原始系统造成了侵入，原始系统改一块数据，并不想做这么多其他的事情。所以这时候可以通过binlog进行任务分发。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6877697841726619&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdLkEI9sZfcJQQoZtiaCzX7AI5iazZjC02UfhfkHmtiaEBhXLQNNlOU6LIZXTiakiaTbdZPSJx8KZagFtkE9FQgKXXQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;695&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当原始业务系统修改数据后，不需要进行其他的业务关联。由调度系统读取binlog进行相应的任务分发、消息发送以及同步其他业务状态。这样可以将其他业务与原始业务系统解耦，并从数据的角度将所有管理功能放在了同一个调度系统中，责任清晰。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;binlog是mysql提供的数据同步机制，很好的解决了主从分离、读写库分离等业务。而我们可以构建一个中间件系统，“伪造”成master的一个slave。当读取了binlog中的数据变化后，根据相应的业务场景做各种业务处理。而目前我接触到的最常见的就是第一个场景——数据异构，可以异构到其他表中，也可以异构到其他数据引擎中，比如Elastic Search。&lt;/p&gt;&lt;/section&gt;&lt;hr/&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;ignored&quot;&gt;&lt;hr/&gt;&lt;p&gt;欢迎加入我的知识星球，一起探讨架构，交流源码。加入方式，&lt;strong&gt;&lt;span&gt;长按下方二维码噢&lt;/span&gt;&lt;/strong&gt;：&lt;/p&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;ignored&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5493333333333333&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdLkEI9sZfdCCyC6MQeHl5kNZu4u5Jdqic3MFibq3YUUtnydwWhibCBQmfOUAzRMHv3HyDD6NwsfFvtzx1eEVK1KA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;750&quot;/&gt;&lt;/p&gt;&lt;p&gt;已在知识星球更新源码解析如下：&lt;/p&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;chksm=fa496f8ecd3ee698f4954c00efb80fe955ec9198fff3ef4011e331aa37f55a6a17bc8c0335a8&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.0718475073313782&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdLkEI9sZfdCa89KZ4Ls04tTqXvgxWVian1HZ76BOz52l4pkqX0IMicM14rRFyiaO0vQENMOufUhDVVtPiadDdoKjQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1364&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;chksm=fa496f8ecd3ee698f4954c00efb80fe955ec9198fff3ef4011e331aa37f55a6a17bc8c0335a8&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.0319767441860466&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdLkEI9sZfdCa89KZ4Ls04tTqXvgxWViaExAeJx1CZeSaJ9qxh0X70s4JGjIVVlT5ZqBGu51YTedMNfO49DKb6g/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1376&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;chksm=fa496f8ecd3ee698f4954c00efb80fe955ec9198fff3ef4011e331aa37f55a6a17bc8c0335a8&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7209985315712188&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdLkEI9sZfdCa89KZ4Ls04tTqXvgxWViaCibrYIXNgebWPd5g7Or9dcToN660aLAEJEhz4wLpBBiaFhejsaGDGd2g/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1362&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;ignored&quot;&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;ignored&quot;&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;chksm=fa496f8ecd3ee698f4954c00efb80fe955ec9198fff3ef4011e331aa37f55a6a17bc8c0335a8&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.42543859649122806&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdLkEI9sZfdCa89KZ4Ls04tTqXvgxWVia4qmv743xvlia1HYmqCDPBLpo3HXtw8Hmo76GkGK5wCqvicAKxd9ET3ow/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1368&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;最近更新《芋道 SpringBoot 2.X 入门》系列&lt;/span&gt;&lt;span&gt;，已经 101 余篇，覆盖了 &lt;/span&gt;&lt;span&gt;MyBatis、Redis、MongoDB、ES、分库分表、读写分离、SpringMVC、Webflux、权限、WebSocket、Dubbo、RabbitMQ、RocketMQ、Kafka、性能测试等等内容。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;提供近 3W 行&lt;span&gt;代码&lt;/span&gt;的 SpringBoot 示例，以及超 4W 行代码的电商微服务项目。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;获取方式：点“&lt;/span&gt;&lt;span&gt;&lt;strong&gt;在看&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;”，关注公众号并回复 &lt;/span&gt;&lt;span&gt;&lt;strong&gt;666&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; 领取，更多内容陆续奉上。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;pre data-darkmode-bgcolor-15923650965579=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15923650965579=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15923650965579=&quot;rgb(167, 167, 167)&quot; data-darkmode-original-color-15923650965579=&quot;rgb(63, 63, 63)&quot; data-style=&quot;letter-spacing: 0.544px; font-size: 16px; color: rgb(63, 63, 63); word-spacing: 1px; line-height: inherit;&quot; class=&quot;js_darkmode__91&quot;&gt;&lt;p data-style=&quot;margin-right: 0.5em; margin-left: 0.5em; font-family: 微软雅黑; white-space: normal; color: rgb(0, 0, 0); letter-spacing: 0px; word-spacing: 2px; text-align: right;&quot; class=&quot;js_darkmode__100&quot; data-darkmode-bgcolor-15923650965579=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15923650965579=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15923650965579=&quot;rgb(230, 230, 230)&quot; data-darkmode-original-color-15923650965579=&quot;rgb(0, 0, 0)&quot;&gt;&lt;span data-darkmode-bgcolor-15923650965579=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15923650965579=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15923650965579=&quot;rgb(255, 41, 65)&quot; data-darkmode-original-color-15923650965579=&quot;rgb(255, 41, 65)&quot;&gt;&lt;strong data-darkmode-bgcolor-15923650965579=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15923650965579=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15923650965579=&quot;rgb(255, 41, 65)&quot; data-darkmode-original-color-15923650965579=&quot;rgb(255, 41, 65)&quot;&gt;文章有帮助的话，在看，转发吧。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-style=&quot;margin-right: 0.5em; margin-left: 0.5em; font-family: 微软雅黑; white-space: normal; color: rgb(0, 0, 0); letter-spacing: 0px; word-spacing: 2px; text-align: right;&quot; class=&quot;js_darkmode__101&quot; data-darkmode-bgcolor-15923650965579=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15923650965579=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15923650965579=&quot;rgb(230, 230, 230)&quot; data-darkmode-original-color-15923650965579=&quot;rgb(0, 0, 0)&quot;&gt;&lt;span data-darkmode-bgcolor-15923650965579=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15923650965579=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15923650965579=&quot;rgb(255, 41, 65)&quot; data-darkmode-original-color-15923650965579=&quot;rgb(255, 41, 65)&quot;&gt;&lt;strong data-darkmode-bgcolor-15923650965579=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15923650965579=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15923650965579=&quot;rgb(255, 41, 65)&quot; data-darkmode-original-color-15923650965579=&quot;rgb(255, 41, 65)&quot;&gt;谢谢支持哟 (*^__^*）&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/div&gt;

          

          
          &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>bcb572d657d5f846593dff2315de85f9</guid>
<title>独立开发变现周刊（第70期）：一年内将NotionForm的月收入从0到1万美元</title>
<link>https://toutiao.io/k/cknh848</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                                       &quot; id=&quot;js_content&quot;&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;分享独立开发、产品变现相关内容，每周五发布。&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span/&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;目录&lt;/strong&gt;&lt;/p&gt;&lt;h2&gt;1、Photoleap: 文字生成AI图像&lt;/h2&gt;&lt;p&gt;文本到图像生成功能，通过一段文字就可以创建令人难以置信的艺术和图像。还可以转换照片，如剪纸，删除背景和对象，等等。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5986394557823129&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/G4umk62oPLqia1ibIYjIhDicG5aGDPViatoALn7GT5PAxwMhbVmHTceMu7AXxNwibOpoQ7SicrHtxVZGIOMTSibeJ5icTQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;735&quot;/&gt;&lt;/p&gt;&lt;p&gt;Photoleap官网&lt;sup&gt;[1]&lt;/sup&gt;&lt;/p&gt;&lt;h2&gt;2、Crawlee: 一个高性能的Node.js开源爬虫库&lt;/h2&gt;&lt;p&gt;Crawlee是一个开源的Node.js代码库，有6K的Star，可以很方便的集成到你的项目。完全用TypeScript重写，以获得更好的开发体验，并具有更强大的防阻塞功能。&lt;/p&gt;&lt;p&gt;提供端到端的功能，并帮助你建立可靠的爬取，自动化，很快。&lt;/p&gt;&lt;p&gt;即使使用默认配置，爬虫程序也会看起来像人一样。Crawlee为您提供了抓取网络链接、抓取数据并将其存储到磁盘或云的工具，同时保持灵活可配置，以满足项目需求。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.43591905564924116&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/G4umk62oPLqia1ibIYjIhDicG5aGDPViatoAicWM8E7SsNas9vWlUkVLORib6U7dDLmPgCEq5rXP5NPLARxYtTSdsaYg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;2372&quot;/&gt;&lt;/p&gt;&lt;p&gt;Crawlee官网&lt;sup&gt;[2]&lt;/sup&gt;&lt;/p&gt;&lt;h2&gt;3、一年内将Notionform的月收入从0提升到1万美元&lt;/h2&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3333333333333333&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/G4umk62oPLqia1ibIYjIhDicG5aGDPViatoAA6SgWZDGjCHgc5rJ6mkokO0B7p1R6dicgMJGR0UtZ605BMBqrNl4xaw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1500&quot;/&gt;&lt;/p&gt;&lt;p&gt;我的名字是Julien Nahum ，是NotionForms的创始人，一个Notion上的表单构建器。在过去的一年里，我一直在独自经营SaaS。最近它达到了1万美元的MRR(每月经常性收入)里程碑。我想我应该为他们写一篇的总结，希望这能帮助和激励至少一个人。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5048484848484849&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/G4umk62oPLqia1ibIYjIhDicG5aGDPViatoAjDyKEbKvocFHM70ZGrLN6FojrBhic4a3d3a1H9JpibQtNgJb7W3E9Hicg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1650&quot;/&gt;&lt;/p&gt;&lt;h3&gt;我是如何成为一个“独立开发者”的&lt;/h3&gt;&lt;p&gt;我发现在互联网上有一个社区，人们在没有任何外部资金的情况下独自创建自己的公司。许多创始人公开分享他们的进展。每天看着这些人的进步，在网上分享他们的起起伏伏，我受到了很大的激励!&lt;/p&gt;&lt;p&gt;一年半以前，我在亚马逊公司担任软件开发工程师。这份工作很棒，我学到了很多，但我知道我最终会离开，专注于自己的项目。&lt;/p&gt;&lt;h3&gt;这个想法从何而来&lt;/h3&gt;&lt;p&gt;我搬回了女朋友工作的地方：巴黎，但我得吃饭。我有一些积蓄，但我想尽量不吃它们。&lt;/p&gt;&lt;p&gt;Twitter上最著名的独立黑客之一是Peter Levels。他发起了一个名为“12个月12家创业公司”的项目。虽然在实践中我认为这很难实现，但我真的很喜欢它所表达的想法:尝试创建新的东西，直到有一个能工作，然后专注于它。&lt;/p&gt;&lt;p&gt;我开始探索不同的东西。我创造了一些小型项目(在2-3天内完成)。我试着分享我的进展，但对于我50多名粉丝，效果基本为零。&lt;/p&gt;&lt;p&gt;然后在2021年5月13日，Notion发布了它的API。这意味着像我这样的开发者可以创造与它相关的工具和产品。这个API已经被很多Notion用户等待了很长时间，所以我立刻决定要用它来构建一些东西。&lt;/p&gt;&lt;p&gt;找到要构建的东西并不需要很长时间。五年前，我在巴黎的一家创业公司实习。在这家初创公司，他们使用Airtable，一种无代码的工具来创建协作数据库。非技术人员的大多数业务流程都依赖于这个工具。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5315151515151515&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/G4umk62oPLqia1ibIYjIhDicG5aGDPViatoAicRZwZ4KNCxFiaJ3iapYp37iaicwx8HRJA7FtrhTGsMXPpN4qCre2ic8sypw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1650&quot;/&gt;&lt;/p&gt;&lt;p&gt;最酷的部分是，通过Airtable，他们能够在几秒钟内创建。这些表单将自动为其数据库表中的每一列包含一个字段。每个表单提交都会自动进入Airtable数据库，这非常有用。&lt;/p&gt;&lt;p&gt;因为Notion的数据库和Airtable的非常相似，所以它们让我想起了这个表单功能。所以我5年前的实习给了我这个项目的灵感!&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/G4umk62oPLqia1ibIYjIhDicG5aGDPViatoAFFcuM14GlMNUPpPy3lIUGOywxhGcoq1lZmDpWoKibNX4dRARQ1IO56w/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1650&quot;/&gt;&lt;/p&gt;&lt;h3&gt;构建MVP&lt;/h3&gt;&lt;p&gt;“幸运”的是，我发现了一个很酷的产品创意，我认为它会很有用，而且我很喜欢创建它。许多人在网上解释说，最难的部分总是销售产品。他们建议你在创建之前就开始销售(比如通过登陆页面)。我同意这一点，但不幸的是，我是个工程师。我喜欢创造东西，所以我从创造产品开始。如果你能够在短时间内(最多不超过一个月)创造出一款产品，那么我认为你便能够更容易地获得一些反馈并最终验证你的想法。&#x27;&#x27; 所以我开始研究MVP。第一个版本非常简单。而且非常糟糕。用户可以创建一个帐户，连接他们的Notion帐户，选择一个数据库，用一个糟糕的表单编辑器创建一个表单，并在他们的Notion数据库中提交。该工具只支持最简单的特性。在花更多时间在上面之前，我想确保它对其他人有用。&lt;/p&gt;&lt;p&gt;我决定在Twitter上分享我的进步。只要我有视觉上的东西可以展示，我就会在推特上发布它。这条推文被转发了4次，获得了11个赞。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.323943661971831&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/G4umk62oPLqia1ibIYjIhDicG5aGDPViatoAicAVP0MgLO7NFb8ib88JlK9Zm612BNEvZPA44X2sRu0SlnBxo04qGSjg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;710&quot;/&gt;&lt;/p&gt;&lt;p&gt;最后，经过4天的编码和2天的发布，我完成了MVP的工作，并准备与世界分享!我非常兴奋，在推特上分享了我的作品。我以为它会成功发布，至少会有10个赞!不幸的是，我的观众并不支持我。我别无选择，只能专注于一件事:获取首批用户。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.3306233062330624&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/G4umk62oPLqia1ibIYjIhDicG5aGDPViatoACZOFZt54QevhUw69wq9yHX65NI3lTH8HdqN8lxb6zUYibY5zAkQ5Xew/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;738&quot;/&gt;&lt;/p&gt;&lt;h3&gt;获取第一批用户&lt;/h3&gt;&lt;p&gt;用户获取总是最困难的。我经常在社交媒体上看到人们开发产品并询问如何获得早期用户的帖子。我也不确定，所以我决定从社交媒体开始。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6527272727272727&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/G4umk62oPLqia1ibIYjIhDicG5aGDPViatoAiaibGS0CTsyuxfQ1VyWib0XoNYk7K9iajZVlUibtJ8RyzQVficdMib0iabwZwQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1650&quot;/&gt;&lt;/p&gt;&lt;p&gt;1、Reddit&lt;/p&gt;&lt;p&gt;Notion 在reddit上有一个非常活跃的专门版块，所以我决定在那里分享我的项目。我的帖子不是很成功，得到了26个赞。它在第一周就吸引了20多名用户。虽然这篇文章并不能很好地吸引我的第一批用户，但是今天它在谷歌搜索结果中位列“用Notion创建一个表单”的前5名。所以最初的获取早期用户的尝试变成了常规的获取渠道!绝对值得!&lt;/p&gt;&lt;p&gt;两个月后，另一个人在Reddit上发布了一段他们如何使用NotionForms的视频。这篇文章变得非常受欢迎(超过376个赞!)，我清楚地看到了用户注册数量的激增。我发现网上的一些陌生人比我更擅长推销我的产品!&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8490566037735849&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/G4umk62oPLqia1ibIYjIhDicG5aGDPViatoAYLPk6lFOEqTu1La4x7tLxhXbpKo1LhGAvcfpwpv13oYfPLhTKGmyxw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1272&quot;/&gt;&lt;/p&gt;&lt;p&gt;2、Facebook &lt;/p&gt;&lt;p&gt;这是一个更难发行的市场，因为你面临着所谓的“鸡和蛋的问题”。我需要找到销售产品的用户，以及购买产品的用户。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.3064814814814816&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/G4umk62oPLqia1ibIYjIhDicG5aGDPViatoAHriaSva0YrEULytNsJujibl2q9Bzku2eYO77jyAVbr4oSUK6DQIaBlaQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;我在Facebook上找到了几个专注于Notion的群组。我加入了他们所有人，并发表了同一篇文章。在最大的“Notion”小组中，人们对我的帖子反应非常积极。我获得了111个赞(包括我自己的)，还有几十个早期用户。&lt;/p&gt;&lt;p&gt;3、Product Hunt &lt;/p&gt;&lt;p&gt;ProductHunt是一个网站，产品制造商每天在上面列出他们的新产品。用户可以投票给他们最喜欢的产品。在我公开发布第一个版本的2天后，就有人盯上了NotionForms !我试着让人们为这个发布投票，但是因为它完全是随机的，所以做得并不好(只有27个赞成票)。但这是我第一次听到别人谈论我的产品，所以它给了我很大的激励!&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.9368191721132898&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/G4umk62oPLqia1ibIYjIhDicG5aGDPViatoAsraM9A1QjZDuK2kYwnWADkAyp9k3NWzqqYEL7US7licTUOCDdojrspg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;918&quot;/&gt;&lt;/p&gt;&lt;p&gt;4、Twitter &lt;/p&gt;&lt;p&gt;除了我在Twitter上尝试的 buildInPublic之外，我还尝试直接分享我的产品。我开始关注其他更受欢迎的人创建与Notion相关的工具，我开始更频繁地与他们的推文互动。我甚至试图直接寻求与其他流行的开发者的合作。这些“著名”的开发者收到了许多类似的请求，所以坚持不懈地为他们和他们的用户提供一些有价值的内容是最好的接触方式。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6470588235294118&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/G4umk62oPLqia1ibIYjIhDicG5aGDPViatoArco9duP3Iiavmhjiaepbu2DYPa5XKkgyD8CzPWiau32XibfbSdqaMhsW6A/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;918&quot;/&gt;&lt;/p&gt;&lt;p&gt;有趣的是，我现在经常和这些“网友”互动。我在现实生活中从未见过他们，但我们偶尔会聊天，互相支持。&lt;/p&gt;&lt;p&gt;当你开始从事一个项目时，确定你的用户是谁以及在哪里可以找到他们是至关重要的。为一个非常小众的用户(在我的例子中是Notion用户) 创造一个产品会让事情变得容易得多。特别是如果这个细分市场已经存在一个活跃的社区。&lt;/p&gt;&lt;h3&gt;卖掉项目吗?&lt;/h3&gt;&lt;p&gt;在不到一周的时间里，我成功地让100个人尝试了NotionFroms，这是一个伟大的里程碑。但我仍然抱着尝试许多不同项目以找到最完美的想法。不知怎么的，我对NotionForms不太确定。因为这是一个非常小众的产品，我没有想到它会发展到这么大。有一天，我在Twitter上发现了TinyAcquisition，这是一个非常酷的市场，可以买卖像NotionForms这样的小项目。&lt;/p&gt;&lt;p&gt;当时我已经在这个项目上花了一个月的时间(兼职)，它仍然是一个免费的产品——因此没有赚到任何钱。我决定在上面列出NotionForms，看看我能得到什么。当有人出价6000美元购买它时，我认为这将是一个好主意，出售🤦‍♂️&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.304&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/G4umk62oPLqia1ibIYjIhDicG5aGDPViatoAQXJ4MryB0EvzTRkEm20UEhpD9jJObGelVlN8Ru4GUsPDUibKFyaaG3A/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;750&quot;/&gt;&lt;/p&gt;&lt;p&gt;我们起草了一份意向书，TinyAcquisition的创始人Stephen Campbell帮助我们推动了这次收购。当我们接近完成交易时，我开始怀疑很多。为什么我在一个月后就放弃了一个获得关注和良好反馈的项目?为什么这个网上的陌生人愿意付我六千块买它?要么这家伙是个傻瓜，要么我是个瞎子。然后我想起了我的前任老板曾经说过的话:&lt;/p&gt;&lt;p&gt;以下是我的想法: 我并不是特别需要6000美元，至少这笔钱不会改变我的生活。再次引用杰夫的话:“我知道如果我失败了，我不会后悔，但我知道我可能会后悔的一件事就是没有去尝试。”&lt;/p&gt;&lt;p&gt;所以我最终决定不卖了。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4703030303030303&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/G4umk62oPLqia1ibIYjIhDicG5aGDPViatoA7qxCx11LoMDdhNFtf5ib3bIBUcFIichnZpGYN6wpIkFB1Ob9lsvTWC5g/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1650&quot;/&gt;&lt;/p&gt;&lt;h3&gt;添加功能和确定优先级&lt;/h3&gt;&lt;p&gt;当用户基础稳步增长时，我花了大量时间添加更多功能。已经有很多表单构建器可用，所以找到特性的想法并不困难。使用其他类似产品的用户是有期望的。我很快就对我想提供的所有功能有了一个确切的想法。我经常收到一些功能请求，以下是我的处理方法: 如果所要求的特性与我的产品愿景相差太远，我就会忽略它，并向请求者解释为什么我不会构建它。这种情况并不经常发生，但我认为说“不”很重要。我正在构建一个多面手产品，我想覆盖95%的用例，但我知道我永远无法覆盖100%的用例。&lt;/p&gt;&lt;p&gt;我有一个Notion待办表，我列出了所有的特性请求。对于每个请求，我通常会添加来自请求电子邮件/消息的截图，请求者的姓名和电子邮件，以及关于如何实现它和为什么要这样做的一些评论。如果请求是重复的，则扩展此请求的现有记录。&lt;/p&gt;&lt;p&gt;我没有一个书面的过程来决定如何优先考虑一个功能。我一个人，所以我知道这个项目的一切。所谓的一切，我的意思是我知道产品的当前状态，我知道客户是谁，他们为什么使用我的产品，我知道最需要的功能是什么，等等。&lt;/p&gt;&lt;p&gt;最后，规则是这样的: 一个功能被要求的越多，我的“感觉”就越告诉我它应该被优先考虑。如果我觉得这个功能可以让很多用户受益，而不是少数人，我会优先考虑它。如果该特性在很长一段时间内没有被要求使用，我倾向于降低它的优先级。如果一个请求存在了太长时间，这通常意味着它不值得，它永远不会是优先级，所以我就放弃它。&lt;/p&gt;&lt;p&gt;独自工作并不容易，它让我感到孤独，有时候我甚至没有足够的动力去创造一些沉重且复杂的功能。在这些日子里，我只做一些简单的事情:小的努力获得快速的胜利。每当我失意的时候，我就会抓住“容易的果实”。这对我来说很有效，它让我感觉自己每天都在进步，至少是一点点。把不紧急的留到黑暗的日子吧!&lt;/p&gt;&lt;p&gt;以下是我在发布后的一个月发布的一些功能示例:&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8569023569023569&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/G4umk62oPLqia1ibIYjIhDicG5aGDPViatoAudh3iaUCtDY63Nicd3Ag6ddajL3ich9qVgDkRb9icaNh6HanTEGRZzSqgA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1188&quot;/&gt;&lt;/p&gt;&lt;h3&gt;变现&lt;/h3&gt;&lt;p&gt;在此之前，该产品还处于“测试版”，所以对所有人都是完全免费的。有一些bug，产品也不完整，但它是免费的。一个多月后，我觉得这个产品更加稳定了，而且已经有了一些更高级的功能。我认为现在是推出付费计划的最佳时机。&lt;/p&gt;&lt;p&gt;主要有两件事要做:确定这个计划将提供什么，以及确定它收费多少。&lt;/p&gt;&lt;p&gt;大多数表单构建器提供基于使用的定价。你可以免费获得所有功能，但你需要为每个表单提交付费。我觉得这非常令人沮丧，因为你永远不知道你的表单会收到多少提交，所以你也不知道你需要支付多少费用。所以从一开始，我就知道免费计划不会有任何基于使用量的限制。&lt;/p&gt;&lt;p&gt;当产品还处于测试阶段时，对于每一个新功能，我都会决定它是否会成为付费计划的一部分。一般来说，我决定为所有与外观相关的功能定价，所有直接需要我花钱的功能(文件上传、电子邮件)或所有需要额外计算的高级功能。对我来说，重要的是该产品在没有专业人士的情况下仍然完全可用，所以所有的基本功能都在免费计划中。&lt;/p&gt;&lt;p&gt;我查看了其他表单构建器的价格:平均起价在30美元左右。我的产品是独特的，因为如果你是一个Notion用户，它是最容易使用的，但同时，它提供的功能没有Typeform提供的那么多。所以我随机决定将平均价格除以2，定价15美元。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7491694352159468&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/G4umk62oPLqia1ibIYjIhDicG5aGDPViatoAFqSKWSwy0ED69fvuEu2Gz6GGLM4QdALYtX3HCnZMYUzzBbOvxwq7Nw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1204&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;为发布做准备&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;我在产品中添加了小的“Pro”标签，就在每个即将付费的功能旁边。通过点击它，用户会知道这些功能将会被付费。在推出付费计划的前一周，我给所有用户发了一封电子邮件，解释将要发生的事情。我也给了他们40%的终身折扣券，试图激励他们并提高他们的转化率。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;发布&lt;/strong&gt; &lt;/p&gt;&lt;p&gt;我推出了Pro付费计划。然后我等待着。接下来的4个小时感觉就像一个星期。幸运的是，我出去吃午饭，当我回来时，期待已久的奇迹发生了:&lt;/p&gt;&lt;p&gt;我很高兴。我的一个法国摄影师从第一天起就一直在使用这个产品，他购买了一个年度订阅。那时，他定期在Facebook上给我发送反馈和功能请求，所以当我看到他订阅了我给他发送了一个感谢消息。令我惊讶的是，他解释说他甚至不需要Pro的功能，只是想支持我，因为我提供的“支持质量”。这让我非常感动!&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7302231237322515&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/G4umk62oPLqia1ibIYjIhDicG5aGDPViatoAiaajQ4eUMsO8wiaicA4NyNTqvfSfibpr946GAfGmLGAvZnDk11xXrMSoyw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1479&quot;/&gt;&lt;/p&gt;&lt;p&gt;回顾过去，我想我在从事NotionForms工作时的第一种“神奇的感觉”是当人们开始使用它的时候。看到我所创造的有用的东西，我受到了很大的激励。但第二个“神奇的感觉”绝对是当我获得第一个付费订阅时。以下是接下来几天的情况:&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4296969696969697&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/G4umk62oPLqia1ibIYjIhDicG5aGDPViatoApmQXzeKeuTfVLmNH8ticEG18WCFnewrp2EDicF9D7icmTOwib9D4SialtnA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1650&quot;/&gt;&lt;/p&gt;&lt;h3&gt;关于折扣&lt;/h3&gt;&lt;p&gt;如前所述，我不是一个定价向导。我知道人们喜欢折扣和免费的东西，所以我决定给折扣一个机会。首先，自从Pro计划推出以来，我系统地提供了3天的免费试用，任何人都可以免费体验所有付费功能。&lt;/p&gt;&lt;p&gt;当你尝试定价时，不要对自己太苛刻。无论你做什么，你总是会在网上惹到别人:&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.023936170212766&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/G4umk62oPLqia1ibIYjIhDicG5aGDPViatoANjSnI3SjNAJDHFYrvXr9oyoGVflmgpw4GPwuibTPABLcaQImktTdiaNA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;752&quot;/&gt;&lt;/p&gt;&lt;h3&gt;增长机器&lt;/h3&gt;&lt;p&gt;我从来没有尝试过任何NotionForms的付费营销渠道，也没有一直在制作内容。然而，在过去的12个月里，流量几乎每个月都在增长。在过去的一年里，谷歌搜索结果的NotionForms页面上有超过43k次点击，超过33.6万人访问了这个网站。以下是它的工作原理(或者至少我认为是这样的)。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4951515151515152&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/G4umk62oPLqia1ibIYjIhDicG5aGDPViatoAHy0F27u0RJYY5tKlFib0wicP2vlFArS3fnWEEO3UVnj4Its0FMDTtxeg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1650&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;病毒式循环&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;NotionForms是一个免费增值产品。它可以免费使用，没有任何限制:你可以构建无限的表单，并接收无限数量的提交，而无需支付任何费用。免费版本和付费版本的主要区别之一是，在每个表单下方都有一个指向NotionForms的链接。这个链接提供了两个巨大的好处。第一个是，当用户共享他们的表单时，用户会看到这个，并发现NotionForms。其中一些应答者稍后将使用NotionForms创建他们的表单并共享它们。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.40424242424242424&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/G4umk62oPLqia1ibIYjIhDicG5aGDPViatoA6WajibIn6uadPKwgJcxMKhic4kFrYZaezMBzQAumrLjJYKokc1ygkxgA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1650&quot;/&gt;&lt;/p&gt;&lt;p&gt;这个链接的第二个好处是它创建了指向NotionForms网站的反向链接。反向链接是从一个站点指向另一个站点的链接。有很多这样的反向链接可以创建一个强大的域名权威(或域名评级)。对于搜索引擎来说，越多的网站引用你的网站，他们就越认为你的网站提供了有价值的内容，因此他们就越会推荐你的网站。所以我们又有了一个病毒式循环:使用NotionForms的人越多，它出现在谷歌搜索结果中的次数就越多，为我们带来更多用户。因为它是一个表单构建器，所以NotionForms内置了一个病毒式循环。&lt;/p&gt;&lt;p&gt;Notion拥有一个非常活跃的社区，能够产生大量的内容。多亏了这一点，很多人创建了关于NotionForms的博客文章和视频。我联系了他们中的一些人，问他们是否有兴趣合作。我提出免费订阅，以换取一段视频。当我通过这种方式联系他们时，我发现得到回应的最好方法就是直接告诉他们你想为他们提供免费订阅服务。我还发现了一些发布几个月后的视频，我没有做任何事情!&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.628125&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/G4umk62oPLqia1ibIYjIhDicG5aGDPViatoAh5YyaoukmjEb9hJCT4NwbEuLNHHTkxvAC4BJUkPibZUS14nIACERRQg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;h3&gt;流量&lt;/h3&gt;&lt;p&gt;我们可以看到两个主要渠道是SEO和口碑。这与所描述的“病毒循环”的好处相关联。看到这个产品几乎在全球各地都被使用，这也很酷!我用我的旧Macbook创造了一个产品，被全世界33万人使用!&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3703030303030303&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/G4umk62oPLqia1ibIYjIhDicG5aGDPViatoAyNTmeoCRSCZnUhnxElbNIdPpTxtq1S4N7FlXDjmVaiaDqfwLw2wquXg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1650&quot;/&gt;&lt;/p&gt;&lt;p&gt;我还认为提供优秀的客户支持与提供优秀的产品同样重要。用户能够很容易地联系到我，我倾听他们，因为我是一个人，所以我能够很快地采取行动。用户感到参与，因为他们参与了!没有比快乐的顾客更好的推销员了。当人们寻找表单构建器时，用户经常在Twitter上提到NotionForms。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;客户支持&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.9712918660287081&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/G4umk62oPLqia1ibIYjIhDicG5aGDPViatoAUS0Uv7oGtjRzC4TBykwYlor6VV6wNc63sJzLWsZ0ped9bA6KOWwtvQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;836&quot;/&gt;&lt;/p&gt;&lt;p&gt;如前所述，我在客户支持方面投入了大量时间。以下是我为开发NotionForms的客户支持所做的一些事情: Facebook群组:我创建了一个专门的Facebook群组。我邀请所有新用户加入。它不是很活跃，但仍然是一个很好的沟通渠道。每次我们发布一个重要的新特性时，我都会发布一篇文章，上面有一张说明该特性的图片，以及相关帮助页面的链接。时不时地，用户会问一些问题。Twitter:我为NotionForms创建了一个Twitter账户，在那里我只发布关于新产品功能的推文。同样，很少有人使用这个帐户来联系我关于问题或功能请求。实时聊天和帮助台:对于实时聊天和帮助台，我都使用了我使用多年的工具Crisp。它是这样工作的: 实时聊天:在NotionForms产品中有一个实时聊天，任何人都可以使用它在任何时候给我发送消息。这是非常方便的解决事件。它让我几乎可以立即了解到问题:有时我部署的新产品更新会破坏某些功能。由于客户在聊天中提出了这个问题，我通常能够在几分钟内发现并修复这些问题。在线聊天也帮助我获得了很多新客户。事实上，有时用户在订阅前会犹豫，因为他们几乎没有什么未解的问题。我能够快速回答的事实帮助他们更好地理解我们的报价，并让他们再次确信，NotionForms是一个严肃的业务，背后有真实的人。帮助台:因为用户基础在增长，支持请求的数量也随之增长。开发一个强大的帮助中心很快成为了我的首要任务，帮助用户自助，从而减少了我的支持工作量。写帮助文章需要时间，但绝对值得。通常，每当有人问我一个我已经回答过一次的问题时，我就会为这个问题写一个帮助页面。这些不同的工具帮助我提供了一个伟大的客户支持，增加了我的产品的口碑。另一个好处是，有时你会收到非常友善和激励的信息😍&lt;/p&gt;&lt;h3&gt;理解“成功”&lt;/h3&gt;&lt;p&gt;要理解一个产品为什么有效并不总是件容易的事。我很快就想知道为什么人们在所有现有的其他formbuilder中使用NotionForms。实时客户聊天是很好的第一步。但我想做的不止这些，我想真正了解客户使用我产品的动机，这样我就可以专注于制造更好的产品。&lt;/p&gt;&lt;p&gt;为了获得更多的反馈，我设置了电子邮件自动化。根据用户的行为，我会发送电子邮件询问他们的反馈，或者如果他们不使用，我会问他们为什么。这封反馈邮件非常个性化，而且没有任何样式:它看起来就像真人发送的普通邮件，我认为这有助于获得更多的答案。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推出另一项付费计划&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3387878787878788&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/G4umk62oPLqia1ibIYjIhDicG5aGDPViatoA859lgg7JjSylreu9sCvzaNsrsTrxDPF7mNNfAg7U9IdeUgJTDibicLLw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1650&quot;/&gt;&lt;/p&gt;&lt;p&gt;Notion 是一个很棒的协作工具。你可以实时看到你的队友的变化，并通过评论与他们交流。很快，NotionForms的用户就会询问如何协作他们的表单。在此之前，人们只能创建一个单独的账户，这并不理想。用户想要的另一件事是能够上传更大的文件(Pro版本每个文件的限制是5mb)。&lt;/p&gt;&lt;p&gt;为了保持简单，我不想按用户定价。我创建了一个“企业”计划，每月花费39美元，允许无限数量的用户进行协作，上传的文件更大。至于Pro计划，我选择39这个数字并没有确切的原因。我觉得它已经足够昂贵了，但仍然是容易接近的。虽然我不确定这个新计划是否可行，但启动它显然比启动第一个付费计划压力小。今天，这个计划占到NotionForms收益的25%，所以它绝对值得加入!&lt;/p&gt;&lt;h3&gt;第一个模仿者&lt;/h3&gt;&lt;p&gt;有一天，有人在推特上给我发了一封邮件，里面有一个链接。我点击了它，然后发现有人复制了我所创建的内容。比这更糟糕的是，这个人在ProductHunt上发布了产品，它做得很好。我真的很生气。一天过去了，我平静了下来。我的朋友安慰我说:商业不仅仅是一个想法，它在很大程度上也是一种执行。尽管这个人复制了我产品的运作方式和功能，但他的用户数量没有我多，他不会与客户进行数小时的交流，他也不了解我对产品的看法!&lt;/p&gt;&lt;p&gt;模仿者总是存在的，但你不应该太担心他们。大约一个月后，一位客户给我发了一条消息，告诉我NotionForms比它的模仿者要好得多。我赢了!&lt;/p&gt;&lt;h3&gt;第一个假期&lt;/h3&gt;&lt;p&gt;在推出了NotionForms之后，我没有好好地休假。我确实旅行过，但总是带着电脑，密切关注着一切。去年2月，我决定去斯里兰卡待两周，在那里我大部分时间都无法可靠地上网。我压力很大，但我相信这对我非常有帮助。首先，它迫使我在离开之前投入更多时间使产品尽可能稳定。在我离开前一周我没有做任何部署。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.21256038647343&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/G4umk62oPLqia1ibIYjIhDicG5aGDPViatoAQYmUEQ1818AWF5WU1QBsicUfhONUhyiaXE7qM7wH4qDo0xHibbM0hE3MQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;828&quot;/&gt;&lt;/p&gt;&lt;p&gt;而且，能抽出一些真正的时间来思考SaaS之外的事情，感觉真的很棒!虽然我几乎每次有机会都会去浏览网站，但退一步让我进行了一些自我反思，我有了很多想法。最后，多亏了这次斯里兰卡之旅，我收到了迄今为止最受欢迎的推文!&lt;/p&gt;&lt;p&gt;(再次)出售公司? 我经常通过twitter或电子邮件收到收购要约。即使我不再打算出售，我也总是花时间与潜在买家讨论，可能是因为我很好奇。对你的工作进行评估也是一个跟踪你的进步的好方法。我获得的第一个正式报价(我收到了一份意向书)是6.5万美元。我拒绝了，因为我对这个倍数不感兴趣，尤其是考虑到当时的增长。&lt;/p&gt;&lt;p&gt;我上次收到的报价要高得多。不知怎么的，我没有在Twitter上分享这个消息，因为更大的收购价格有点吓到我了。报价是35万美元，我收到的时候ARR在8.5万到9万美元之间。我对潜在的买家有很好的感觉，我们进行了激动人心的谈话。但我又一次拒绝了，因为我认为这个倍数与增长不匹配。&lt;/p&gt;&lt;h3&gt;第一次招人&lt;/h3&gt;&lt;p&gt;随着时间的推移，NotionForms的积压大大增加了。在这个项目上工作了将近一年之后，我对工作的兴奋感和工作动机真的减少了。产品中有很多特性需要添加，也有很多小bug需要修复。我需要花在客户支持或其他营销相关任务上的时间也增加了。尽管它现在已经成为我的主要项目，但我从未全职投入其中。有些星期我把所有的时间都花在它上面，有些星期我只做其他项目，只做“维护”工作。&lt;/p&gt;&lt;p&gt;所以我认为通过雇佣一名开发者是一个很棒的想法。&lt;/p&gt;&lt;p&gt;与全职开发人员一起工作是非常棒的。我们进展得更快了，并且在最初的几个月内就发布了路线图中列出的所有功能。但这也是有代价的。当然有经济成本，但也有“精神”成本。与他人一起工作被迫变得更有条理，更有规律，并提前计划。我还需要尽可能地腾出时间来确保一切顺利进行。&lt;/p&gt;&lt;p&gt;现在已经3个月了，我很高兴我决定走那条路。NotionForms发展得更快，成为了一个更好的产品。我个人也成长了，学到了很多东西。&lt;/p&gt;&lt;h3&gt;$ 10 k MRR&lt;/h3&gt;&lt;p&gt;7月1日，一年多之后，NotionForms的月销售收入达到了1万美元。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.1642857142857144&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/G4umk62oPLqia1ibIYjIhDicG5aGDPViatoAgMNkZyoDvarJbxwficOCgabfGAUu6QichJzP8UpJdq9JUv1fX3a1GT6w/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;840&quot;/&gt;&lt;/p&gt;&lt;p&gt;我认为NotionForms很快就达到了“产品/市场匹配”。幸运的是，我对这个利基市场一无所知的产品想法很好。我自己也体验过这种产品的需求，我很快就能通过构建MVP来验证这个想法。产品主要是推销自己，所以我今年的主要工作是保持专注，保持动力，仔细倾听用户的意见。如果有一件事是我不后悔的，那就是我在提供优质客户支持上投入的时间。&lt;/p&gt;&lt;p&gt;这一年太棒了，我非常感激。我为自己创造了梦想的工作，在此过程中我遇到了很多了不起的人。我非常感谢我的女朋友和我的父母。你总是督促我做得更好，当我决定该走另一条路的时候，你总是支持我。我也想感谢我所有的朋友，是他们让我的旅程变得更好。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;生命短暂，敢于冒险吧!&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;Photoleap官网: https://www.photoleapapp.com/&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Crawlee官网: https://crawlee.dev/&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5OTM3NzAwNg==&amp;amp;mid=2649284439&amp;amp;idx=1&amp;amp;sn=d47d6b7f4b03fcc411bcfdf82ffe4620&amp;amp;chksm=bf201e5688579740af10b2ca244a47ffcc2a3ddedb659d5eaef5cb3d95b6bb98ea06dd843704&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;独立开发变现周刊（第69期）：语音转录浏览器扩展插件，一年获取20倍增长&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;（第69期）：语音转录浏览器扩展插件，一年获取20倍增长&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5OTM3NzAwNg==&amp;amp;mid=2649284327&amp;amp;idx=1&amp;amp;sn=aa952987ee4d0f1648d310b6b1bdb3de&amp;amp;chksm=bf201fe6885796f0028d4c5e6c325fe6480a29b18a0fd8ffdf3c531c010acb97d33972b8eb7d&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;每日看板Tabhub-浏览器新标签页，每天离不开的效率神器&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;每日看板Tabhub-浏览器新标签页，每天离不开的效率神器&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.52&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/G4umk62oPLreAJeFqhwhr5x2CVZkgNaIjhHdL2SZTB8x8677GL0gtaYrNM0Qia7ibAeBwheB9q01RURlChwR4GibA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;750&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;加入知识星球，和我一起做自己产品的独立变现&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;

          

          
          &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>ce10fc02048a65b5d9bc6725a680a328</guid>
<title>如何防止订单重复支付？</title>
<link>https://toutiao.io/k/957g6ly</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大家好，我是老三，想必大家对在线支付都不陌生，今天和大家聊聊如何防止订单重复支付。&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzkwODE5ODM0Ng==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWdFLJg0sAOqwHB1mb24icMADUgxm1qZQft5aN3H37NAmQnOvpGB7J9JVHxC6NSiacxbBP1DYdhIAeyA/0?wx_fmt=png&quot; data-nickname=&quot;三分恶&quot; data-alias=&quot;Fighter3FullStack&quot; data-signature=&quot;CSDN博客专家、优质创作者，华为云云享专家；肝过外包、混过国企，目前在一家跨境电商搬砖；写过诗，打过拳，佛系小码农。认真讲技术，随性侃人生，关注我，我们一起走的更远。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;关注公众号「&lt;strong&gt;三分恶&lt;/strong&gt;」，回复「&lt;strong&gt;666&lt;/strong&gt;」，领取七百多页独家原创面试手册！&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5145098039215686&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWfQR77RSX8KYHZVdw3JG3C4d9CLy6Pdh3lLwrvZjLYibEz4g8UWa8gH1cBCFcbha8ibAZvuncz7shQA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2550&quot;/&gt;&lt;figcaption&gt;面渣逆袭手册&lt;/figcaption&gt;&lt;/figure&gt;&lt;/blockquote&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;看看订单支付流程&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们来看看，电商订单支付的简要流程：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6928895612708018&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWfQR77RSX8KYHZVdw3JG3C4kzbXmk7uBfSGPdPfibqBW5WqvRZyWiapibPibAVPKfH7kPoXsCjDDY43uA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1322&quot;/&gt;&lt;figcaption&gt;订单钱包支付流程&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从下单/计算开始：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;下单/结算&lt;/strong&gt;：这一步虽然不是直接的支付起点，但是支付相关的金额等等信息都来自结算，此时订单的状态是未支付&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;申请支付&lt;/strong&gt;：用户选择申请支付，客户端调用支付服务，此时在系统内产生一笔支付流水，这笔流水的状态是未支付&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;发起支付&lt;/strong&gt;：支付服务调用三方支付，通常这种钱包类的支付，在发起支付这一步，会响应一些支付的链接，客户端会对链接进行对应的处理。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;钱包支付&lt;/strong&gt;：用户进行支付，通常是通过对应的钱包进行的，大家可以回忆一下自己在购物中，支付的过程，不同的端，对钱包支付的处理是不太一样的：&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7033730158730159&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWfQR77RSX8KYHZVdw3JG3C4p98ZhlTib2N8huRibwslsxx4Xp9PVic0G4GnVkoYS4N5MjBL43aQQiav6w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2016&quot;/&gt;&lt;figcaption&gt;京东PC端支付页&lt;/figcaption&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;code&gt;APP端&lt;/code&gt;: 在国内，购物大部分都是在APP端，产品经理会想法设法把用户带到APP，为什么我的示例图都用京东，不用淘宝呢？因为我拿UC打开淘宝，会直接跳转APP。&lt;/p&gt;&lt;p&gt;APP端的钱包支付，我们应该都非常熟悉，一般是拉起钱包，支付。&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8360655737704918&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWfQR77RSX8KYHZVdw3JG3C4qqz9BaMCjTVqMpNFj8KFdR1jCww9onmG9R9eHwZUhxiaCwpLdH8u5zw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1342&quot;/&gt;&lt;figcaption&gt;APP支付&lt;/figcaption&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;code&gt;WAP端&lt;/code&gt;：手机的网页站，WAP端的支付一般是直接拉起对应的钱包，如果拉起钱包失败，就跳转界面&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8528481012658228&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWfQR77RSX8KYHZVdw3JG3C431spDsyYyGQKeKPWrJruaPmVqdftL7X2upQRWUX2nAGf1rdUcbUcqQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1264&quot;/&gt;&lt;figcaption&gt;京东支付WAP端&lt;/figcaption&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;PC端&lt;/code&gt;：PC端，通常是打开收银台，展示一个二维码，通过钱包扫码支付，下面是京东的微信支付扫码页&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;支付回调&lt;/strong&gt;：用户完成支付后，三方支付平台，会回调商户，通知支付结果。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;同步订单状态&lt;/strong&gt;：支付服务在确认支付完成后，会向订单服务同步支付的结果，订单服务变更订单的状态，由未支付-》待发货，客户端通过轮询、长连接，或者服务端主动推送的方式，在界面上变更订单状态。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们再从支付流水的角度看一下支付状态的变化：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5631768953068592&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWfQR77RSX8KYHZVdw3JG3C4n3EXJ5FORcmaQJtrzcSQFy4RR7N3VRCvfl3Dat0nbhVEILf8J0Pu5w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1108&quot;/&gt;&lt;figcaption&gt;支付状态变化&lt;/figcaption&gt;&lt;/figure&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;从未支付，到有支付结果的终态，中间还有一个中间状态&lt;code&gt;支付中&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;用户通过打开钱包--》完成支付--》支付回调，这段时间的支付流水就处于&lt;code&gt;支付中&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为什么要花这么多篇幅来讲支付的业务流程、交互过程呢？因为我认为，防止订单的重复支付，不止是技术上的问题，也是业务和产品上的问题。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;为什么订单会重复支付&lt;/h1&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt; &lt;/span&gt;&lt;span/&gt;&lt;span&gt;未防重导致的重复支付&lt;/span&gt;&lt;span/&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们可以看到PC端支付，是扫描二维码，这些二维码，就是对应相应的支付流水，假如用户重复点击支付，如果不做防重的的话，会生成两笔支付流水，也就是两个不同的二维码，要是用户分别扫了两个不同的支付码，那么毫无疑问，就会产生重复支付。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt; &lt;/span&gt;&lt;span/&gt;&lt;span&gt;掉单导致的重复支付&lt;/span&gt;&lt;span/&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;“我明明付款了，为什么我的订单还没支付呢？”&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.9929328621908127&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWfQR77RSX8KYHZVdw3JG3C4nbHMZ6LyrMuT2LZQoVV2beLaQFKauPvL1WwFVjpIJ2QvEXhORlQfKQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;566&quot;/&gt;&lt;figcaption&gt;黑我钱是吧&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这就是所谓的“掉单”：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;外部掉单：三方支付的支付状态没有同步或者没有及时同步到商城，这叫外部掉单&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;内部掉单：支付服务的状态没有同步到订单，或者客户端没有及时获取到订单状态，这叫内部掉单。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用户一看，自己付了款，结果商城里订单还未付款，但是又特别想要，可能就会再下一单，这样就重复支付了。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt; &lt;/span&gt;&lt;span/&gt;&lt;span&gt;多渠道导致的重复支付&lt;/span&gt;&lt;span/&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们国内支付的体验还是非常快捷的，大家可能没有感觉，如果了解过海外支付的可能了解，很多支付的渠道，消耗的时间非常长。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如用户保罗选择了一种支付方式&lt;code&gt;Boleto&lt;/code&gt;，结果支付的网点离保罗他们村太远了，保罗又选择了&lt;code&gt;Paypal&lt;/code&gt;支付，保罗去赶集的时候，又顺手去网点把&lt;code&gt;Boleto&lt;/code&gt;的这一笔支付了，结果就重复支付了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这种情况大家可能很少遇到，我们可以用&lt;code&gt;美团&lt;/code&gt;下一个单，先打开微信支付，不要支付啊，接着回到美团，打开支付宝，用支付宝支付完成后，用微信接着支付，大家猜猜，两笔支付是不是都能成功？答案是可以。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.2465116279069768&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWfQR77RSX8KYHZVdw3JG3C4nibNPKJD5R1dAVsAaXxhpTd72iasRGib8HV7aibUpA6H8cxgLicLVema8aQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;645&quot;/&gt;&lt;figcaption&gt;美团多渠道支付&lt;/figcaption&gt;&lt;/figure&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;如何防止订单重复支付&lt;/h1&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt; &lt;/span&gt;&lt;span/&gt;&lt;span&gt;加锁&lt;/span&gt;&lt;span/&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不管是&lt;code&gt;3.申请支付&lt;/code&gt;、还是&lt;code&gt;5.支付回调&lt;/code&gt;,都应该以订单维度加锁，防止并发下的重复操作。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;加锁，毫无疑问，也是分布式锁，通常我们会选择Redis分布式锁。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.24716981132075472&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWfQR77RSX8KYHZVdw3JG3C49NibUZaTJQu3Lvow1XGgIHdFTCLMNCys8xaN39Jq6H7ghObwhwTDosA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1060&quot;/&gt;&lt;figcaption&gt;加锁&lt;/figcaption&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt; &lt;/span&gt;&lt;span/&gt;&lt;span&gt;缓存结果&lt;/span&gt;&lt;span/&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;申请支付成功，支付回调成功，都应该缓存结果。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;再申请支付，收到成功回调的时候，都应该先去检查支付的状态。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5011820330969267&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWfQR77RSX8KYHZVdw3JG3C4l8pea9uNy7F14AUrcDjjovibAnzWVQibFCuribqAcsvDCI8bUobt7bKzA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;846&quot;/&gt;&lt;figcaption&gt;在这里插入图片描述&lt;/figcaption&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt; &lt;/span&gt;&lt;span/&gt;&lt;span&gt;支付中流水取消&lt;/span&gt;&lt;span/&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;假如说，用户重复支付了，再次申请支付的时候，如果已经申请支付成功了，那么这笔支付肯定是要拒绝的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但是，要是已经存在的这笔流水还在&lt;code&gt;支付中&lt;/code&gt;呢？——我们不确定它是成功还是失败，肯定是不能拒绝支付的，因为可能用户支付失败了，但是状态还没同步，这样肯定是不行的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以，我们可以取消掉正在支付中的流水，再进行支付。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.2796005706134094&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWfQR77RSX8KYHZVdw3JG3C4vpGliafKZrWasEYB9IYXqJF2YyH9Itic3qmiamHOlHS92H5AEnzgPoqAw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1402&quot;/&gt;&lt;figcaption&gt;支付中流水取消&lt;/figcaption&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt; &lt;/span&gt;&lt;span/&gt;&lt;span&gt;已支付流水退款&lt;/span&gt;&lt;span/&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;现在又有新的问题了，假如发起支付的时候，有流水正在支付中，如果第三方支付平台不支持取消支付，或者用户新的支付是通过不同的渠道，我们希望尽可能提高用户的支付成功率，怎么办呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们可以在发起支付的时候，订单还在支付中的情况下，允许用户发起多笔支付，在支付回调的时候，检查用户是否已经有成功流水，对后来的流水进行退款处理。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.25811965811965815&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWfQR77RSX8KYHZVdw3JG3C4IdntmfsrhMkubl7icUtlKFfia9Iiaj700ZLKK5kuC8a3JZlxtTePBfZAQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1170&quot;/&gt;&lt;figcaption&gt;支付回调&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当然，退款是个很危险的操作，毕竟钱退了，可就很难追回来，一定要做好风险的控制。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt; &lt;/span&gt;&lt;span/&gt;&lt;span&gt;主动轮询&amp;amp;重试防止掉单&lt;/span&gt;&lt;span/&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;主动轮询防止外部掉单&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果因为故障没有收到回调，或者没有及时收到回调，就可能会发生所谓的外部掉单。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;防止外部掉单的关键，就在于，不能傻傻地只等三方的回调通知，而要主动去查询，用户发起支付的3s之后，就可以发起轮询了，直到拿到支付流水的最终状态，主动轮询，一般可以这么实现：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.2342857142857143&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWfQR77RSX8KYHZVdw3JG3C4mKoSobbGPcjI2icic5DDMuUEd40oraqcxiahibwPZcTQCvsJybcGFY3sMw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;700&quot;/&gt;&lt;figcaption&gt;轮询&lt;/figcaption&gt;&lt;/figure&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;定时任务轮询&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;使用定时任务，扫描表中支付中的流水，主动查询支付的状态，定时任务的实现方式有很多，线程池、调度框架、分布式调度框架等等。&lt;/p&gt;&lt;p&gt;定时任务轮询的缺点有两个：&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;对数据库有一些压力，观察监控，会发现定时任务扫表的时候，有时候会造成数据库的一些“峰刺”&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;不便调整频率，实际上，用户发起一笔支付之后，一般都会在10s-1min中完成支付，越往后，用户完成支付，所以轮询梯度进行，会更合理一些，轮询的间隔可以设置成类似这种：3s，10s，30s，3min……&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;延时消息轮询&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;另外一种方式就是使用延时消息，用户发起支付之后，发送一个延时消息，消费到延时消息之后，查询流水支付状态，没有拿到最终状态，就再发一个延时消息。延时消息的好处是对数据库的压力没有那么大，轮询的梯度也可以进行控制，缺点是实现起来复杂一些，而且要维护消息队列。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;同步+异步防止内部掉单&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;支付服务在收到异步通知回调、或者主动轮询到流水的最终状态后，要通知订单服务支付流水的变化，订单服务同步更新订单的状态，这个过程要尽可能保证通知成功，可以采用同步+异步的方式。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;同步调用：支付服务调用订单服务的通知接口，有可能会因为网络等等的原因失败，也可以重试，但是根据经验，如果网络出现一些波动，重试很可能也会失败。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;异步通知：支付服务还应该发送一个支付成功的消息，订单服务可以利用消息队列的重试机制，来尽可能保证支付状态的同步。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里还有一个问题，客户端如何同步这个状态？因为可能服务端更新了订单状态，但是客户端的界面上还是未支付，得用户主动刷新一下，才能拿到最新的状态，这样明显是不太合适的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;服务端、客户端的状态同步，无非就&lt;code&gt;拉&lt;/code&gt;和&lt;code&gt;推&lt;/code&gt;:&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;拉：很简单，就是客户端在用户跳回订单状态页的时候，轮询一会，如果用户完成支付，通常很短时间就能获取到状态的变更，当然这种方式对客户端的性能会有一些影响，而且很出现状态同步“漏网之鱼”的情况。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;推：推的实现有些麻烦，Web通常是用Websocket，对APP端的推送，一般采用第三方的推送平台。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt; &lt;/span&gt;&lt;span/&gt;&lt;span&gt;客户端支付尽可能不外跳&lt;/span&gt;&lt;span/&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不管从产品的角度，还是技术的角度，客户端发起支付这一步，其实应该尽可能地不要外跳，PC端使用支付服务生成的支付码，而不是跳转；移动端网页、APP在应用内展示支付页，当然这个是由第三方支付平台决定的。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;2.212121212121212&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWfQR77RSX8KYHZVdw3JG3C4Qquj9JOlQ8mUmicktGt4KqhWJnMicvBiaVicDicibAsd9X3DDFiapHzvUIFcA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;462&quot;/&gt;&lt;figcaption&gt;在UC内内嵌支付宝&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不知道大家留意到了没有，现在的支付宝，已经做到了不用拉起钱包，在应用内就可以完成支付，这个对于商家的意义还是比较大的，对用户体验、支付成功率，都有正面的作用，相信以国内的内卷程度，其它支付供应商，一定会“跟进”的。&lt;/p&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;好了，关于如何防止重复支付，就讲到这里。对于支付，老三也只是初窥门径，希望各位大佬不吝指教。&lt;/p&gt;&lt;br data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;big&gt;&lt;strong&gt;参考：&lt;/strong&gt;&lt;/big&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;[1]. 服务端如何防止重复支付&lt;/p&gt;&lt;br data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;big&gt;&lt;strong&gt;⭐面渣逆袭系列：&lt;/strong&gt;&lt;/big&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;添加个人微信「&lt;strong&gt;ThirdFighter&lt;/strong&gt;」,技术交流，加群讨论！&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/PMZOEonJxWeNacvtL2JaV9oyHhSVP7CAOVRdvOo9pRk4Js4kVtJblIcP4fBSf7Za5Nw0dwq2QHSYRJXvxxN6bw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;512&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzkwODE5ODM0Ng==&amp;amp;mid=2247491521&amp;amp;idx=1&amp;amp;sn=dcefc00c23d0821990f62dc3749141bb&amp;amp;chksm=c0ccf764f7bb7e72defbc937a72e9d2ec766b8de1574def67a4650c80c8329694127b01405d4&amp;amp;scene=21&amp;amp;cur_album_id=2041709347461709827#wechat_redirect&quot; data-linktype=&quot;2&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzkwODE5ODM0Ng==&amp;amp;mid=2247491521&amp;amp;idx=1&amp;amp;sn=dcefc00c23d0821990f62dc3749141bb&amp;amp;chksm=c0ccf764f7bb7e72defbc937a72e9d2ec766b8de1574def67a4650c80c8329694127b01405d4&amp;amp;scene=21&amp;amp;cur_album_id=2041709347461709827#wechat_redirect&quot; data-linktype=&quot;2&quot;/&gt;&lt;/section&gt;&lt;span&gt;- END -&lt;/span&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>af191a07dd31396771e268c3b752e6df</guid>
<title>老话新说~你真的会使用LocalStorage吗？Vben教你怎么用~</title>
<link>https://toutiao.io/k/nlymezb</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                                       &quot; id=&quot;js_content&quot;&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;mp-common-profile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;Mzg2NjY2NTcyNg==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/TZL4BdZpLdjaCTEjQdxnaIlEWiaGcw9zNV7AHZGgp5q9U0zPf3cmcIgBRYG1n2ydEBHJGgl8nEA1bKiaj1fibK2EA/0?wx_fmt=png&quot; data-nickname=&quot;前端之神&quot; data-alias=&quot;Sunshine_Lin_God&quot; data-signature=&quot;一位前端小菜鸡，写过100多篇原创文章，全网有5w+个前端朋友，梦想是成为”前端之神“~&quot; data-from=&quot;0&quot; data-is_biz_ban=&quot;0&quot;/&gt;&lt;/section&gt;&lt;h2&gt;&lt;span&gt;前言&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;大家好，我是林三心，&lt;strong&gt;用最通俗易懂的话讲最难的知识点&lt;/strong&gt;是我的座右铭，&lt;strong&gt;基础是进阶的前提&lt;/strong&gt;是我的初心。&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.010204081632653&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/TZL4BdZpLdj6KEgiaibNPWHibkyoa1vWoZXp6BoVNuoHq2XGkHy8DmzAfajxqgCftrrF7V5x9nFD8Zx6WTvKIBeEg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;196&quot;/&gt;&lt;/figure&gt;&lt;h2&gt;&lt;span&gt;vben-admin&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;很多人一直问我说怎么更进一步学习&lt;code&gt;Vue&lt;/code&gt;，我会建议你去&lt;code&gt;github&lt;/code&gt;上搜索&lt;code&gt;vben&lt;/code&gt;，因为这个项目确实能让我们学到很多的进阶知识&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.589272030651341&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/TZL4BdZpLdj6KEgiaibNPWHibkyoa1vWoZXup4ianGicYXrrCg300al51UmA1wX2L5gqD1gLlia4afOAyhfkzsx5UIYA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2610&quot;/&gt;&lt;/figure&gt;&lt;p&gt;今天就来讲讲我从这个项目学到的一点小知识&lt;/p&gt;&lt;p&gt;&lt;strong&gt;如何更高大上地去使用localStorage！！！&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;其实这个知识点我以前发过了，但是很少同学去看~~&lt;/p&gt;&lt;h2&gt;&lt;span&gt;用处&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;在平时的开发中，&lt;code&gt;localStorage、sessionStorage&lt;/code&gt;的用途是非常的多的，在我们的开发中发挥着非常重要的作用：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;1、登录完成后&lt;code&gt;token&lt;/code&gt;的存储&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;2、用户部分信息的存储，比如&lt;code&gt;昵称、头像、简介&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;3、一些项目通用参数的存储，例如&lt;code&gt;某个id、某个参数params&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;4、项目状态管理的持久化，例如&lt;code&gt;vuex的持久化、redux的持久化&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;5、项目整体的切换状态存储，例如&lt;code&gt;主题颜色、icon风格、语言标识&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;6、等等、、、、、、、、、、、、、、、、、、、、、、、、、、&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;&lt;span&gt;普通使用&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;那么，相信我们各位平时使用都是这样的（拿&lt;code&gt;localStorage&lt;/code&gt;举例）&lt;/p&gt;&lt;h3&gt;1、基础变量&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;// 当我们存基本变量时&lt;/span&gt;&lt;br/&gt;localStorage.setItem(&lt;span&gt;&#x27;基本变量&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;这是一个基本变量&#x27;&lt;/span&gt;)&lt;br/&gt;&lt;span&gt;// 当我们取值时&lt;/span&gt;&lt;br/&gt;localStorage.getItem(&lt;span&gt;&#x27;基本变量&#x27;&lt;/span&gt;)&lt;br/&gt;&lt;span&gt;// 当我们删除时&lt;/span&gt;&lt;br/&gt;localStorage.removeItem(&lt;span&gt;&#x27;基本变量&#x27;&lt;/span&gt;)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3&gt;2、引用变量&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;// 当我们存引用变量时&lt;/span&gt;&lt;br/&gt;localStorage.setItem(&lt;span&gt;&#x27;引用变量&#x27;&lt;/span&gt;, &lt;span&gt;JSON&lt;/span&gt;.stringify(data))&lt;br/&gt;&lt;span&gt;// 当我们取值时&lt;/span&gt;&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; data = &lt;span&gt;JSON&lt;/span&gt;.parse(localStorage.getItem(&lt;span&gt;&#x27;引用变量&#x27;&lt;/span&gt;))&lt;br/&gt;&lt;span&gt;// 当我们删除时&lt;/span&gt;&lt;br/&gt;localStorage.removeItem(&lt;span&gt;&#x27;引用变量&#x27;&lt;/span&gt;)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3&gt;3、清空&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;localStorage.clear()&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;&lt;span&gt;暴露出什么问题？&lt;/span&gt;&lt;/h2&gt;&lt;h3&gt;1、命名过于简单&lt;/h3&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;1、比如我们存用户信息会使用&lt;code&gt;user&lt;/code&gt;作为 key 来存储&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;2、存储主题的时候用&lt;code&gt;theme&lt;/code&gt; 作为 key 来存储&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;3、存储令牌时使用&lt;code&gt;token&lt;/code&gt;作为 key 来存储 其实这是很有问题的，咱们都知道，同源的两个项目，它们的&lt;code&gt;localStorage&lt;/code&gt;是互通的。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;我举个例子吧比如我现在有两个项目，它们在同源&lt;code&gt;https://www.sunshine.com&lt;/code&gt;下，这两个项目都需要往&lt;code&gt;localStorage&lt;/code&gt;中存储一个 key 为&lt;code&gt;name&lt;/code&gt;的值，那么这就会造成两个项目的&lt;code&gt;name&lt;/code&gt;互相顶替的现象，也就是&lt;code&gt;互相污染现象&lt;/code&gt;：&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6775862068965517&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/TZL4BdZpLdj6KEgiaibNPWHibkyoa1vWoZXrVAAjibUIKXAlhgUg2UAFVMGeDBFQ2yS4popTicWEiaF5XiaMwHzBLuXUQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;580&quot;/&gt;&lt;figcaption&gt;截屏2021-11-10 下午10.19.09.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;2、时效性&lt;/h3&gt;&lt;p&gt;咱们都知道&lt;code&gt;localStorage、sessionStorage&lt;/code&gt;这两个的生命周期分别是&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;localStorage：除非手动清除，否则一直存在&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;sessionStorage：生命结束于当前标签页的关闭或浏览器的关闭&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;其实平时普通的使用时没什么问题的，但是给某些指定缓存加上特定的时效性，是非常重要的！比如某一天：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;后端：”兄弟，你一登录我就把token给你“&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;前端：”好呀，那你应该会顺便判断token过期没吧？“&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;后端：”不行哦，放在你前端判断过期呗“&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;前端：”行吧。。。。。“&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;那这时候，因为需要在前端判断过期，所以咱们就得给&lt;code&gt;token&lt;/code&gt;设置一个时效性，或者是&lt;code&gt;1天&lt;/code&gt;，或者是&lt;code&gt;7天&lt;/code&gt;&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.549718574108818&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/TZL4BdZpLdj6KEgiaibNPWHibkyoa1vWoZXicE4GAI6xSibtuoQwTxukRibBtM4rc6iaQPBbJ5RG6h4EibQvC2PYM41Bfw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;533&quot;/&gt;&lt;figcaption&gt;截屏2021-11-10 下午10.48.50.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;3、隐秘性&lt;/h3&gt;&lt;p&gt;其实这个好理解，你们想想，当咱们把咱们想缓存的东西，存在&lt;code&gt;localStorage、sessionStorage&lt;/code&gt;中，在开发过程中，确实有利于咱们的开发，咱们想看的时候也是一目了然，点击&lt;code&gt;Application&lt;/code&gt;就可以看到。&lt;/p&gt;&lt;p&gt;但是，一旦产品上线了，用户也是可以看到缓存中的东西的，而咱们肯定是会想：有些东西可以让用户看到，但是有些东西我不想让你看到&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.553875236294896&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/TZL4BdZpLdj6KEgiaibNPWHibkyoa1vWoZXpjE87ZXsiaickg3gZAQ3PKicia8lcVTNz5nsnMlQMIuicQ7jor66oHyhJsg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;529&quot;/&gt;&lt;figcaption&gt;截屏2021-11-10 下午11.02.24.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;或者咱们在做&lt;code&gt;状态管理持久化&lt;/code&gt;时，需要把数据先存在&lt;code&gt;localStorage&lt;/code&gt;中，这个时候就很有必要对缓存进行加密了。&lt;/p&gt;&lt;h2&gt;&lt;span&gt;解决方案&lt;/span&gt;&lt;/h2&gt;&lt;h3&gt;1、命名规范&lt;/h3&gt;&lt;p&gt;我个人的看法是&lt;code&gt;项目名 + 当前环境 + 项目版本 + 缓存key&lt;/code&gt;，如果大家有其他规则的，可以评论区告诉林三心，让林三心学学&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.35268817204301073&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/TZL4BdZpLdj6KEgiaibNPWHibkyoa1vWoZXsRrpDqOrYDtJk79hr1dv5ia3A96icIRHMqic2ohWpiaD1FPLqLw8MIpYcQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;465&quot;/&gt;&lt;figcaption&gt;截屏2021-11-11 下午9.12.32.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;2、expire定时&lt;/h3&gt;&lt;p&gt;思路：设置缓存&lt;code&gt;key&lt;/code&gt;时，将&lt;code&gt;value&lt;/code&gt;包装成一个对象，对象中有相应的&lt;code&gt;时效时段&lt;/code&gt;，当下一次想获取缓存值时，判断有无超时，不超时就获取&lt;code&gt;value&lt;/code&gt;，超时就删除这个缓存&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4800637958532695&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/TZL4BdZpLdj6KEgiaibNPWHibkyoa1vWoZX0QGIAakibpiaYlXCTvG8c8ibsia3Ks5IBkkTxbwNW24ibNZdvgRkafPl0gQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;627&quot;/&gt;&lt;figcaption&gt;截屏2021-11-11 下午9.33.00.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;3、crypto加密&lt;/h3&gt;&lt;p&gt;加密很简单，直接使用&lt;code&gt;crypto-js&lt;/code&gt;进行对数据的加密，使用这个库里的&lt;code&gt;encrypt、decrypyt&lt;/code&gt;进行&lt;code&gt;加密、解密&lt;/code&gt;&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4625&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/TZL4BdZpLdj6KEgiaibNPWHibkyoa1vWoZXu1DlLbiaptW2CpUNF1HuheKtW3HPWaPEGngU9sHvyfHQcKibw4Y8uZYA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;640&quot;/&gt;&lt;figcaption&gt;截屏2021-11-11 下午9.43.16.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;h2&gt;&lt;span&gt;实践&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;其实实践的话比较简单啦，无非就是四步&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;1、与团队商讨一下&lt;code&gt;key&lt;/code&gt;的格式&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;2、与团队商讨一下&lt;code&gt;expire&lt;/code&gt;的长短&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;3、与团队商讨一下使用哪个库来对缓存进行加密（个人建议&lt;code&gt;crypto-js&lt;/code&gt;）&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;4、代码实施（不难，我这里就不写了）&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;&lt;span&gt;结语&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;点个【赞】和【在看】是对林三心最大的鼓励，林三心会非常开心的~~~&lt;/p&gt;&lt;p&gt;关注公众号【前端之神】，回复【加群】，即可获得加入【千人前端学习大群】的方式，交流找工作，摸鱼，吹水~&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mp-common-profile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;Mzg2NjY2NTcyNg==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/TZL4BdZpLdjaCTEjQdxnaIlEWiaGcw9zNV7AHZGgp5q9U0zPf3cmcIgBRYG1n2ydEBHJGgl8nEA1bKiaj1fibK2EA/0?wx_fmt=png&quot; data-nickname=&quot;前端之神&quot; data-alias=&quot;Sunshine_Lin_God&quot; data-signature=&quot;一位前端小菜鸡，写过100多篇原创文章，全网有5w+个前端朋友，梦想是成为”前端之神“~&quot; data-from=&quot;0&quot; data-is_biz_ban=&quot;0&quot;/&gt;&lt;/section&gt;&lt;/div&gt;

          

          
          &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>