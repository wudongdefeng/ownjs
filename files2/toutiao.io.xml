<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>3eec1863cad87fa32e8a92ebd8937de0</guid>
<title>一条 SQL 查询语句是如何执行的？</title>
<link>https://toutiao.io/k/8y71vds</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;MySQL是典型的&lt;code&gt;C/S架构&lt;/code&gt;（客户端/服务器架构），客户端进程向服务端进程发送一段文本（MySQL指令），服务器进程进行语句处理然后返回执行结果。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;问题来了。服务器进程对客户端发送的请求究竟做了什么处理呢？本文以查询请求为例，讲解MySQL服务器进程的处理流程。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如下图所示，服务器进程在处理客户端请求的时候，大致需要进行3个步骤：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;接下来我们来详细了解一下这3步具体都做了什么。&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8922872340425532&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/yaUVbibqGqHXQGicaqMkXicOeGMPuJKhoA3sq7NXFcFiaN6SPicb4ncga4CP1ialice94eaaQxdq88wkCl5NGvdFjrQ8g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1504&quot;/&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;1. 处理连接&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;客户端向服务器发送请求并最终收到响应，本质上是一个进程间通信的过程。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;MySQL有专门用于处理连接的模块——连接器。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;1.1 客户端和服务端的通信方式&lt;span/&gt;&lt;/h3&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;1.1.1 TCP/IP协议&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;TCP/IP&lt;/code&gt;协议是MySQL客户端和服务器最常用的通信方式。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们平时所说的MySQL服务器默认监听的端口是&lt;code&gt;3306&lt;/code&gt;，这句话的前提是客户端进程和服务器进程使用的是&lt;code&gt;TCP/IP&lt;/code&gt;协议进行通信。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们在使用&lt;code&gt;mysql&lt;/code&gt;命令启动客户端程序时，只要在&lt;code&gt;-h&lt;/code&gt;参数后跟随IP地址作为服务器进程所在的主机地址，那么通讯方式便是&lt;code&gt;TCP/IP&lt;/code&gt;协议。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;如果客户端进程和服务器进程位于同一台主机，且要使用&lt;code&gt;TCP/IP&lt;/code&gt;协议进行通信，则IP地址需要指定为127.0.0.1，而不能使用localhost&lt;/p&gt;&lt;/blockquote&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;1.1.2 UNIX域套接字&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果客户端进程和服务器进程都位于类UNIX操作系统（MacOS、Centos、Ubuntu等）的主机之上，并且在启动客户端程序时没有指定主机名，或者指定的主机名为&lt;code&gt;localhost&lt;/code&gt;，又或者指定了&lt;code&gt;--protocol=socket&lt;/code&gt;的启动参数，那么客户端进程和服务器进程就会使用&lt;code&gt;UNIX域套接字&lt;/code&gt;进行进程间通信。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;MySQL服务器进程默认监听的&lt;code&gt;UNIX域套接字&lt;/code&gt;文件为&lt;code&gt;/temp/mysql.sock&lt;/code&gt;，客户端进程启动时也默认会连接到这个UNIX域套接字文件之上。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;如果不明白&lt;code&gt;UNIX域套接字&lt;/code&gt;到底是什么也没关系，只要知道这是进程之间的一种通讯方式就可以了，这里提及的主要目的是希望读者知晓MySQL客户端和进程通讯方式不止于&lt;code&gt;TCP/IP&lt;/code&gt;协议&lt;/p&gt;&lt;/blockquote&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;1.1.3 命名管道和共享内存&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果你的MySQL是安装在Windows主机之上，客户端和服务器进程可以使用命名管道和共享内存的方式进行通信。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不过使用这些通信方式需要在服务端和客户端启动时添加一些启动参数。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;使用命名管道进行通信。需要在启动服务器时添加&lt;code&gt;--enable-named-pipe&lt;/code&gt;参数，同时在启动客户端进程时添加&lt;code&gt;--pipe&lt;/code&gt;或者&lt;code&gt;--protocol=pipe&lt;/code&gt;参数&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;使用共享内存进行通信。需要在启动服务器时添加&lt;code&gt;--shared-memory&lt;/code&gt;参数，启动成功后，共享内存便成为本地客户端程序的默认连接方式；也可以在启动客户端进程的命令中加上&lt;code&gt;--protocol=memory&lt;/code&gt;参数明确指定使用共享内存进行通信&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;如果不明白命名管道和共享内存到底是什么没关系，只要知道这是进程之间的一种通讯方式就可以了，这里提及的主要目的是希望读者知晓MySQL客户端和进程通讯方式不止于&lt;code&gt;TCP/IP&lt;/code&gt;协议&lt;/p&gt;&lt;/blockquote&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;1.2 权限验证&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;确认通信方式并且成功建立连接之后，连接器就要开始验证你的身份了，使用的信息就是你的用户名和密码。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;如果用户名或者密码错误，客户端连接会立即断开&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果用户名密码认证通过，连接器会到权限表里面查出当前登陆用户拥有的权限。之后这个连接里面的权限判断逻辑，都将依赖于此时读到的权限。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;1.3 查看MySQL连接&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;每当一个客户端连接到服务端时，服务端进程都会创建一个单独的线程来处理当前客户端的交互操作。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那么如何查看MySQL当前所有的连接？&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;mysql&amp;gt; &lt;span&gt;show&lt;/span&gt; &lt;span&gt;global&lt;/span&gt; &lt;span&gt;status&lt;/span&gt; &lt;span&gt;like&lt;/span&gt; &lt;span&gt;&#x27;Thread%&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;+&lt;span&gt;-------------------+-------+&lt;/span&gt;&lt;br/&gt;| Variable_name     | Value |&lt;br/&gt;+&lt;span&gt;-------------------+-------+&lt;/span&gt;&lt;br/&gt;| Threads_cached    | 0     |&lt;br/&gt;| Threads_connected | 1     |&lt;br/&gt;| Threads_created   | 1     |&lt;br/&gt;| Threads_running   | 1     |&lt;br/&gt;+&lt;span&gt;-------------------+-------+&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;各字段含义如下表&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;字段&lt;/th&gt;&lt;th&gt;含义&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;Threads_cached&lt;/td&gt;&lt;td&gt;缓存中的线程连接数&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Threads_connected&lt;/td&gt;&lt;td&gt;当前打开的连接数&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Threads_created&lt;/td&gt;&lt;td&gt;为处理连接创建的线程数&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Threads_running&lt;/td&gt;&lt;td&gt;非睡眠状态的连接数，通常指并发连接数&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;建立连接之后，除非客户端主动断开连接，否则服务器会等待客户端发送请求。但是线程的创建和保持是需要消耗服务器资源的，因此服务器会把长时间不活动的客户端连接断开。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有2个参数控制这个自动断开连接的行为，每个参数都默认为28800秒，8小时。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;-- 非交互式超时时间，如JDBC连接&lt;/span&gt;&lt;br/&gt;mysql&amp;gt; &lt;span&gt;show&lt;/span&gt; &lt;span&gt;global&lt;/span&gt; &lt;span&gt;variables&lt;/span&gt; &lt;span&gt;like&lt;/span&gt; &lt;span&gt;&#x27;wait_timeout&#x27;&lt;/span&gt;;&lt;br/&gt;+&lt;span&gt;---------------+-------+&lt;/span&gt;&lt;br/&gt;| Variable_name | Value |&lt;br/&gt;+&lt;span&gt;---------------+-------+&lt;/span&gt;&lt;br/&gt;| wait_timeout  | 28800 |&lt;br/&gt;+&lt;span&gt;---------------+-------+&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;-- 交互式超时时间，如数据库查看工具Navicat等&lt;/span&gt;&lt;br/&gt;mysql&amp;gt; &lt;span&gt;show&lt;/span&gt; &lt;span&gt;global&lt;/span&gt; &lt;span&gt;variables&lt;/span&gt; &lt;span&gt;like&lt;/span&gt; &lt;span&gt;&#x27;interactive_timeout&#x27;&lt;/span&gt;;&lt;br/&gt;+&lt;span&gt;---------------------+-------+&lt;/span&gt;&lt;br/&gt;| Variable_name       | Value |&lt;br/&gt;+&lt;span&gt;---------------------+-------+&lt;/span&gt;&lt;br/&gt;| interactive_timeout | 28800 |&lt;br/&gt;+&lt;span&gt;---------------------+-------+&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;既然连接消耗资源，那是不是MySQL的最大连接数也有默认限制呢？没错！默认最大连接数为151。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;mysql&amp;gt; &lt;span&gt;show&lt;/span&gt; &lt;span&gt;variables&lt;/span&gt; &lt;span&gt;like&lt;/span&gt; &lt;span&gt;&#x27;max_connections&#x27;&lt;/span&gt;;&lt;br/&gt;+&lt;span&gt;-----------------+-------+&lt;/span&gt;&lt;br/&gt;| Variable_name   | Value |&lt;br/&gt;+&lt;span&gt;-----------------+-------+&lt;/span&gt;&lt;br/&gt;| max_connections | 151   |&lt;br/&gt;+&lt;span&gt;-----------------+-------+&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;题外话：细心的读者可能会发现MySQL某些查询语句带有&lt;code&gt;global&lt;/code&gt;关键字，这个关键字有什么含义呢？&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;MySQL的系统变量有两个作用范围（不区分大小写），分别是&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;GLOBAL&lt;/code&gt;（全局范围）：变量的设置影响服务器和所有客户端&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;SESSION&lt;/code&gt;（会话范围）：变量的设置仅影响当前连接（会话）&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但是并非每个参数都具有两个作用范围，比如允许同时连接到服务器的客户端的数量&lt;code&gt;max_connections&lt;/code&gt;就只有全局级别。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当没有带作用范围关键字时，默认是&lt;code&gt;SESSION&lt;/code&gt;级别，包括查询和修改操作。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如修改一个参数之后，在当前窗口生效了，但是在其他窗口却没有生效&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;show&lt;/span&gt; &lt;span&gt;VARIABLES&lt;/span&gt; &lt;span&gt;like&lt;/span&gt; &lt;span&gt;&#x27;autocommit&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;set&lt;/span&gt; autocommit = &lt;span&gt;on&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;因此，如果只是临时修改，请使用&lt;code&gt;SESSION&lt;/code&gt;级别，如果需要当前设置在其他会话中生效，需要使用&lt;code&gt;GLOBAL&lt;/code&gt;关键字。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;到此为止，服务器进程已经和客户端进程建立了连接，下一步将处理客户端传来的请求了。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;2. 解析与优化&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;服务器收到客户端传来的请求之后，还需要经过查询缓存、词法语法解析和预处理、查询优化的处理。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.1 查询缓存&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果我们两次都执行同一条查询指令，第二次的响应时间会不会比第一次的响应时间短一些？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;之前使用过Redis缓存工具的读者应该会有这个很自然的想法，MySQL收到查询请求之后应该先到缓存中查看一下，看一下之前是不是执行过这条指令。如果缓存命中，则直接返回结果；否则重新进行查询，然后加入缓存。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;MySQL确实内部自带了一个缓存模块。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;现在有一张500W行且没有添加索引的数据表，我执行以下命令两次，第二次会不会变得很快？&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;SELECT&lt;/span&gt; * &lt;span&gt;FROM&lt;/span&gt; t_user &lt;span&gt;WHERE&lt;/span&gt; user_name = &lt;span&gt;&#x27;蝉沐风&#x27;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;并不会！说明缓存没有生效，为什么？MySQL默认是关闭自身的缓存功能的，查看一下&lt;code&gt;query_cache_type&lt;/code&gt;变量设置。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;mysql&amp;gt; &lt;span&gt;show&lt;/span&gt; &lt;span&gt;variables&lt;/span&gt; &lt;span&gt;like&lt;/span&gt; &lt;span&gt;&#x27;query_cache_type&#x27;&lt;/span&gt;;&lt;br/&gt;+&lt;span&gt;------------------------------+---------+&lt;/span&gt;&lt;br/&gt;| Variable_name                | Value   |&lt;br/&gt;+&lt;span&gt;------------------------------+---------+&lt;/span&gt;&lt;br/&gt;| query_cache_type             | OFF     |&lt;br/&gt;+&lt;span&gt;------------------------------+---------+&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;默认关闭就意味着不推荐，MySQL为什么不推荐用户使用自己的缓存功能呢？&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;MySQL自带的缓存系统应用场景非常有限，它要求SQL语句必须一模一样，多一个空格，变一个大小写都被认为是两条不同的SQL语句&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;缓存失效非常频繁。只要一个表的数据有任何修改，针对该表的所有缓存都会失效。对于更新频繁的数据表而言，缓存命中率非常低！&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以缓存的功能还是交给专业的ORM框架（比如MyBatis默认开启一级缓存）或者独立的缓存服务Redis更加适合。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;MySQL8.0已经彻底移除了缓存功能&lt;/p&gt;&lt;/blockquote&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.2 解析器 &amp;amp; 预处理器（Parser &amp;amp; Preprocessor）&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;现在跳过缓存这一步了，接下来需要做什么了？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果我随便在客户端终端里输入一个字符串&lt;code&gt;chanmufeng&lt;/code&gt;，服务器返回了一个1064的错误&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;mysql&amp;gt; chanmufeng;&lt;br/&gt;ERROR 1064 (42000): You have an error in your SQL syntax; &lt;span&gt;check&lt;/span&gt; the &lt;span&gt;manual&lt;/span&gt; that corresponds &lt;span&gt;to&lt;/span&gt; your MySQL &lt;span&gt;server&lt;/span&gt; &lt;span&gt;version&lt;/span&gt; &lt;span&gt;for&lt;/span&gt; the &lt;span&gt;right&lt;/span&gt; syntax &lt;span&gt;to&lt;/span&gt; &lt;span&gt;use&lt;/span&gt; near &lt;span&gt;&#x27;chanmufeng&#x27;&lt;/span&gt; &lt;span&gt;at&lt;/span&gt; line &lt;span&gt;1&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;服务器是怎么判断出我的输入是错误的呢？这就是MySQL的Parser解析器的作用了，它主要包含两步，分别是词法解析和语法分析。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.2.1 词法解析&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以下面的SQL语句为例&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;SELECT&lt;/span&gt; * &lt;span&gt;FROM&lt;/span&gt; t_user &lt;span&gt;WHERE&lt;/span&gt; user_name = &lt;span&gt;&#x27;蝉沐风&#x27;&lt;/span&gt; &lt;span&gt;AND&lt;/span&gt; age &amp;gt; &lt;span&gt;3&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;分析器先会做“词法分析”，就是把一条完整的SQL语句打碎成一个个单词，比如一条简单的SQL语句，会打碎成8个符号，每个符号是什么类型，从哪里开始到哪里结束。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;MySQL 从你输入的&lt;code&gt;SELECT&lt;/code&gt;这个关键字识别出来，这是一个查询语句。它也要把字符串&lt;code&gt;t_user&lt;/code&gt;识
别成“表名 t_user”，把字符串&lt;code&gt;user_name&lt;/code&gt;识别成“列 user_name&quot;。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.2.2 语法分析&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;做完词法解析，接下来需要做语法分析了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;根据词法分析的结果，语法分析器会根据语法规则，判断你输入的这个 SQL 语句是否满足 MySQL 语法，比如单引号是否闭合，关键词拼写是否正确等。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;解析器会根据SQL语句生成一个数据结构，这个数据结构我们成为解析树。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4976830398517145&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/yaUVbibqGqHXQGicaqMkXicOeGMPuJKhoA3hI6uxPJZDpb4bPnVMuGhcnWwRH6123AbQ9NwYxx6zqZdibnoo8I9pVg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2158&quot;/&gt;我故意拼错了&lt;code&gt;SELECT&lt;/code&gt;关键字，MySQL报了语法错误，就是在语法分析这一步。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;mysql&amp;gt; ELECT * FROM t_user WHERE user_name = &#x27;蝉沐风&#x27; AND age &amp;gt; 3;&lt;br/&gt;ERROR 1064 (42000): You have an error in your SQL syntax; &lt;span&gt;check&lt;/span&gt; the &lt;span&gt;manual&lt;/span&gt; that corresponds &lt;span&gt;to&lt;/span&gt; your MySQL &lt;span&gt;server&lt;/span&gt; &lt;span&gt;version&lt;/span&gt; &lt;span&gt;for&lt;/span&gt; the &lt;span&gt;right&lt;/span&gt; syntax &lt;span&gt;to&lt;/span&gt; &lt;span&gt;use&lt;/span&gt; near &lt;span&gt;&#x27;ELECT * FROM t_user WHERE user_name = &#x27;&lt;/span&gt;蝉沐风&lt;span&gt;&#x27;&#x27;&lt;/span&gt; &lt;span&gt;at&lt;/span&gt; line &lt;span&gt;1&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;词法语法分析是一个非常基础的功能，Java 的编译器、百度搜索引擎如果要识别语句，必须也要有词法语法分析功能。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;任何数据库的中间件，要解析 SQL完成路由功能，也必须要有词法和语法分析功能，比如 Mycat，Sharding-JDBC（用到了Druid Parser）等都是如此。在市面上也有很多的开源的词法解析的工具，比如 LEX，Yacc等。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.2.3 预处理器&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果我们写了一条语法和词法都没有问题的SQL，但是字段名和表名却不存在，这个错误是在哪一个阶段爆出的呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;词法解析和语法分析是无法知道数据库里有什么表，有哪些字段的。要知道这些信息还需要解析阶段的另一个工具——预处理器。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;它会检查生成的解析树，解决解析器无法解析的语义。比如，它会检查表和列名是否存在，检查名字和别名，保证没有歧义。预处理之后得到一个新的解析树。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;本质上，解析和预处理是一个编译过程，涉及到词法解析、语法和语义分析，更多细节我们不会探究，感兴趣的读者可以看一下编译原理方面的书籍。&lt;/p&gt;&lt;/blockquote&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.3 查询优化器（Optimizer）与查询执行计划&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;到了这一步，MySQL终于知道我们想查询的表和列以及相应的搜索条件了，是不是可以直接进行查询了？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;还不行。MySQL作者担心我们写的SQL太垃圾，所以有设计出一个叫做&lt;strong&gt;查询优化器&lt;/strong&gt;的东东，辅助我们提高查询效率。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.3.1 什么是查询优化器？&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一条 SQL语句是不是只有一种执行方式？或者说数据库最终执行的 SQL是不是就是我们发送的 SQL?&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不是。一条 SQL 语句是可以有很多种执行方式的，最终返回相同的结果，他们是等价的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;举一个非常简单的例子，比如你执行下面这样的语句：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;SELECT&lt;/span&gt; * &lt;span&gt;FROM&lt;/span&gt; t1, t2 &lt;span&gt;WHERE&lt;/span&gt; t1.id = &lt;span&gt;10&lt;/span&gt; &lt;span&gt;AND&lt;/span&gt; t2.id = &lt;span&gt;20&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;既可以先从表 t1 里面取出 id=10 的记录，再根据 id 值关联到表 t2，再判断 t2 里面 id 的值是否等于 20。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;也可以先从表 t2 里面取出 id=20 的记录，再根据 id 值关联到表 t1，再判断 t1 里面 id 的值是否等于 10。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这两种执行方法的逻辑结果是一样的，但是执行的效率会有不同，如果有这么多种执行方式，这些执行方式怎么得到的？最终选择哪一种去执行？根据什么判断标准去选择？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个就是 MySQL的查询优化器的模块（Optimizer）的工作。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;查询优化器的目的就是根据解析树生成不同的执行计划（Execution Plan），然后选择一种最优的执行计划，MySQL 里面使用的是基于开销（cost）的优化器，哪种执行计划开销最小，就用哪种。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.3.2 优化器究竟做了什么？&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;举两个简单的例子∶&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;当我们对多张表进行关联查询的时候，以哪个表的数据作为基准表。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;有多个索引可以使用的时候，选择哪个索引。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;实际上，对于每一种数据库来说，优化器的模块都是必不可少的，他们通过复杂的算法实现尽可能优化查询效率。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;往细节上说，查询优化器主要做了下面几方面的优化：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;子查询优化&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;等价谓词重写&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;条件化简&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;外连接消除&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;嵌套连接消除&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;连接消除&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;语义优化&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;本文不会对优化的细节展开讲解，大家先对MySQL的整体架构有所了解就可以了，具体细节之后单独开篇介绍&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但是优化器也不是万能的，如果SQL语句写得实在太垃圾，再牛的优化器也救不了你了。因此大家在编写SQL语句的时候还是要有意识地进行优化。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.3.3 执行计划&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;优化完之后，得到一个什么东西呢？优化器最终会把解析树变成一个查询执行计划。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;查询执行计划展示了接下来执行查询的具体方式，比如多张表关联查询，先查询哪张表，在执行查询的时候有多个索引可以使用，实际上该使用哪些索引。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;MySQL提供了一个查看执行计划的工具。我们在 SQL语句前面加上 &lt;code&gt;EXPLAIN&lt;/code&gt;就可以看到执行计划的信息。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;mysql&amp;gt; &lt;span&gt;EXPLAIN&lt;/span&gt; &lt;span&gt;SELECT&lt;/span&gt; * &lt;span&gt;FROM&lt;/span&gt; t_user &lt;span&gt;WHERE&lt;/span&gt; user_name = &lt;span&gt;&#x27;&#x27;&lt;/span&gt;;&lt;br/&gt;+&lt;span&gt;----+-------------+--------+------------+------+---------------+------+---------+------+------+----------+-------------+&lt;/span&gt;&lt;br/&gt;| id | select_type | table  | partitions | type | possible_keys | key  | key_len | ref  | rows | filtered | Extra       |&lt;br/&gt;+&lt;span&gt;----+-------------+--------+------------+------+---------------+------+---------+------+------+----------+-------------+&lt;/span&gt;&lt;br/&gt;|  1 | SIMPLE      | t_user | NULL       | ALL  | NULL          | NULL | NULL    | NULL |    1 |   100.00 | Using where |&lt;br/&gt;+&lt;span&gt;----+-------------+--------+------------+------+---------------+------+---------+------+------+----------+-------------+&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果要得到更加详细的信息，还可以用&lt;code&gt;FORMAT=JSON&lt;/code&gt;，或者开启&lt;code&gt;optimizer trace&lt;/code&gt;。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;mysql&amp;gt; &lt;span&gt;EXPLAIN&lt;/span&gt; &lt;span&gt;FORMAT&lt;/span&gt;=&lt;span&gt;JSON&lt;/span&gt; &lt;span&gt;SELECT&lt;/span&gt; * &lt;span&gt;FROM&lt;/span&gt; t_user &lt;span&gt;WHERE&lt;/span&gt; user_name = &lt;span&gt;&#x27;&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;文本不会带大家详细了解执行计划的每一个参数，内容很庞杂，大家先对MySQL的整体架构有所了解就可以了，具体细节之后单独开篇介绍&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;3. 存储引擎&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;经历千辛万苦，MySQL终于算出了最终的执行计划，然后就可以直接执行了吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;好吧。。。依然还不可以。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们知道，表是由一行一行的记录组成的，但这只是逻辑上的概念，或者说只是看上去是这样而已。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3.1 什么是存储引擎&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;到底该把数据存储在什么位置，是内存还是磁盘？怎么从表里读取数据，以及怎么把数据写入具体的表中，这都是&lt;code&gt;存储引擎&lt;/code&gt; 负责的事情。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;好吧，看到这里或许你还不知道存储引擎到底是什么。毕竟存储引擎这个名字听起来太玄乎了，它的前身叫做表处理器，是不是就接地气了许多呢？&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3.2 为什么需要存储引擎&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;因为存储的需求不同。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;试想一下：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;如果一张表，需要很高的访问速度，而不需要考虑持久化的问题，是不是最好把数据放在内存呢？&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;如果一张表，是用来做历史数据存档的，不需要修改，也不需要索引，那是不是要支持数据的压缩?&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;如果一张表用在读写并发很多的业务中，是不是要支持读写互不干扰，而且要保证比较高的数据一致性呢?&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大家应该明白了，为什么要支持这么多的存储引擎，因为一种存储引擎不能提供所有的特性。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;存储引擎是计算机抽象的典型代表，它的功能就是接受上层指令，然后对表中数据进行读取和写入，而这些操作对上层完全是屏蔽的。你甚至可以查阅MySQL文档定义自己的存储引擎，只要对外实现同样的接口就可以了。&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;存储引擎就是MySQL对数据进行读写的插件而已，可以根据不同目的随意更换（插拔）&lt;/p&gt;&lt;/blockquote&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3.3 存储引擎怎么用&lt;span/&gt;&lt;/h3&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3.3.1 创建表的时候指定存储引擎&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在创建表的时候可以指定当前表的存储引擎，如果没有指定，默认的存储引擎为&lt;code&gt;InnoDB&lt;/code&gt;，如果想显式指定存储引擎，可以这样&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;CREATE&lt;/span&gt; &lt;span&gt;TABLE&lt;/span&gt; &lt;span&gt;`t_user_innodb`&lt;/span&gt; (&lt;br/&gt;  &lt;span&gt;`id`&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;(&lt;span&gt;11&lt;/span&gt;) &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; AUTO_INCREMENT,&lt;br/&gt;  PRIMARY &lt;span&gt;KEY&lt;/span&gt; (&lt;span&gt;`id`&lt;/span&gt;)&lt;br/&gt;) &lt;span&gt;ENGINE&lt;/span&gt;=&lt;span&gt;innodb&lt;/span&gt; &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;CHARSET&lt;/span&gt;=utf8mb4;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3.3.2 修改表的存储引擎&lt;span/&gt;&lt;/h4&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;ALTER&lt;/span&gt; &lt;span&gt;TABLE&lt;/span&gt; 表名 &lt;span&gt;ENGINE&lt;/span&gt; = 存储引擎名称;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3.4 存储引擎底层区别&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下面我们分别创建3张设置了不同存储引擎的表，&lt;strong&gt;t_user_innodb&lt;/strong&gt;、&lt;strong&gt;t_user_myisam&lt;/strong&gt;、&lt;strong&gt;t_user_memory&lt;/strong&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.48616600790513836&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/yaUVbibqGqHXQGicaqMkXicOeGMPuJKhoA3PG5qm8VxMUGNmS73TP76PTJfloibfaPPZVs5ibOle2P5ZlfPcMicM44FA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;506&quot;/&gt;我们看一下不同存储引擎在底层存储方面的差异，首先找到MySQL的数据存储目录&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;mysql&amp;gt; &lt;span&gt;show&lt;/span&gt; &lt;span&gt;variables&lt;/span&gt; &lt;span&gt;like&lt;/span&gt; &lt;span&gt;&#x27;datadir&#x27;&lt;/span&gt;;&lt;br/&gt;+&lt;span&gt;---------------+-----------------+&lt;/span&gt;&lt;br/&gt;| Variable_name | Value           |&lt;br/&gt;+&lt;span&gt;---------------+-----------------+&lt;/span&gt;&lt;br/&gt;| datadir       | /var/lib/mysql/ |&lt;br/&gt;+&lt;span&gt;---------------+-----------------+&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;进入到目标目录之后，找到当前数据库对应的目录（MySQL会为一个数据库创建一个同名的目录），数据库中表的存储结构如下&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.27889908256880735&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/yaUVbibqGqHXQGicaqMkXicOeGMPuJKhoA39iaQ8yaYKOmonpOg77n5P7bqR7O5s8kdqqfEMF6pY12w5rnaia5eFU8Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1090&quot;/&gt;不同的存储引擎存放数据的方式不一样，产生的文件数量和格式也不一样，InnoDB文件包含2个，MEMORY文件包含1个，MYISAM文件包含3个。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3.5 常见存储引擎比较&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;首先我们查看一下当前MySQL服务器支持的存储引擎都有哪一些。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;mysql&amp;gt; &lt;span&gt;SHOW&lt;/span&gt; &lt;span&gt;ENGINES&lt;/span&gt;;&lt;br/&gt;+&lt;span&gt;--------------------+---------+--------------+------+------------+&lt;/span&gt;&lt;br/&gt;| Engine             | Support | Transactions | XA   | Savepoints |&lt;br/&gt;+&lt;span&gt;--------------------+---------+--------------+------+------------+&lt;/span&gt;&lt;br/&gt;| InnoDB             | DEFAULT | YES          | YES  | YES        |&lt;br/&gt;| MRG_MYISAM         | YES     | NO           | NO   | NO         |&lt;br/&gt;| MEMORY             | YES     | NO           | NO   | NO         |&lt;br/&gt;| BLACKHOLE          | YES     | NO           | NO   | NO         |&lt;br/&gt;| MyISAM             | YES     | NO           | NO   | NO         |&lt;br/&gt;| CSV                | YES     | NO           | NO   | NO         |&lt;br/&gt;| ARCHIVE            | YES     | NO           | NO   | NO         |&lt;br/&gt;| PERFORMANCE_SCHEMA | YES     | NO           | NO   | NO         |&lt;br/&gt;| FEDERATED          | NO      | NULL         | NULL | NULL       |&lt;br/&gt;+&lt;span&gt;--------------------+---------+--------------+------+------------+&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其中，&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;Support表示该存储引擎是否可用；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;DEFAULT表示当前MySQL服务器默认的存储引擎；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Transactions表示该存储引擎是否支持事务；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;XA表示该存储引擎是否支持分布式事务；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Savepoints表示该存储引擎是否支持事务的部分回滚。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3.5.1 MylSAM&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;应用范围比较小，表级锁定限制了读/写的性能，因此在Web和数据仓库配置中，通常用于只读或以读为主的工作。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;特点:&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;支持表级别的锁（插入和更新会锁表），不支持事务；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;拥有较高的插入（insert）和查询（select）速度；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;存储了表的行数（count速度更快）。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;怎么快速向数据库插入100万条数据？&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以先用MylSAM插入数据，然后修改存储引擎为InnoDB。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3.5.2 InnoDB&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;MySQL 5.7及更新版中的默认存储引擎。InnoDB是一个事务安全（与ACID兼容）的MySQL 存储引擎，它具有提交、回滚和崩溃恢复功能来保护用户数据。InnoDB行级锁（不升级为更粗粒度的锁）和Oracle风格的一致非锁读提高了多用户并发性。InnoDB将用户数据存储在聚集索引中，以减少基于主键的常见查询的I/O。为了保持数据完整性，InnoDB还支持外键引用完整性约束。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;特点：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;支持事务，支持外键，因此数据的完整性、一致性更高；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;支持行级别的锁和表级别的锁；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;支持读写并发，写不阻塞读（MVCC）；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;特殊的索引存放方式，可以减少IO，提升査询效率。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;番外：InnoDB本来是InnobaseOy公司开发的，它和MySQL AB公司合作开源了InnoDB的代码。但是没想到MySQL的竞争对手Oracle把InnobaseOy收购了。后来08年Sun公司（开发Java语言的Sun）收购了MySQL AB，09年Sun公司又被Oracle收购了，所以MySQL和 InnoDB又是一家了。有人觉得MySQL越来越像Oracle,其实也是这个原因。&lt;/p&gt;&lt;/blockquote&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3.5.3 Memory&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;将所有数据存储在RAM中，以便快速访问。这个引擎以前被称为堆引擎。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;特点：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;把数据放在内存里面，读写的速度很快，但是数据库重启或者崩溃，数据会全部消失；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;只适合做临时表。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3.5.4 CSV&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;它的表实际上是带有逗号分隔值的文本文件。csv表允许以CSV格式导入或转储数据, 以便与读写相同格式的脚本和应用程序交换数据。因为CSV表没有索引，所以通常在正常操作期间将数据保存在InnoDB表中，只在导入或导出阶段使用csv表。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;特点：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;不允许空行，不支持索引；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;格式通用，可以直接编辑，适合在不同数据库之间导入导出。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3.5.5 Archive&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;专用与存档，空间经过压缩，用于存储和检索大量很少引用的信息。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;特点：&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3.6 如何选择存储引擎&lt;span/&gt;&lt;/h3&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;如果对数据一致性要求比较高，需要事务支持，可以选择InnoDB。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;如果数据查询多更新少，对查询性能要求比较高，可以选择MyISAM。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;如果需要一个用于查询的临时表，可以选择Memory。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果所有的存储引擎都不能满足你的需求，并且技术能力足够，可以根据官网内部手册用C语言开发一个存储引擎：https://dev.mvsql.com/doc/internals/en/custom-engine.html&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>7fbedb8cb37a4ebedff22c479ac4c8df</guid>
<title>聊聊分布式 ID</title>
<link>https://toutiao.io/k/daqde60</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;大家好，我是G哥。本文来自苏三兄弟。&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在复杂的分布式系统中，往往需要对大量的数据和消息进行唯一标识，例如：分库分表的 ID 主键、分布式追踪的请求 ID 等等。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;于是，设计「分布式 ID 发号器」就成为了一个非常常见的系统设计问题。今天我将带大家一起学习一下，如何设计一个分布式 ID 发号器。&lt;/span&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.1001628664495113&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/AVWicyZuuClGSGnMj4XkpibKUkcwq93zzgAQyZgqcPB1QDpUogrOMVn4FGhrVrHNWhOVE4VoUWFeMKYVI1EkX7cw/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;2456&quot;/&gt;&lt;figcaption&gt;文章思维导图&lt;/figcaption&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;系统诉求&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于业务系统而言，对于全局唯一 ID 一般有如下几个需求：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;全局唯一。&lt;/strong&gt;生成的 ID 不能重复，这是最基本的要求，否则在分库分表的场景下就会造成主键冲突。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;单调递增。&lt;/strong&gt;保证下一个 ID 大于上一个 ID，这样可以保证写入数据库的时候是顺序写入，提高写入性能。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于上面两个需求来说，第一点是所有系统都要求的。而第二点则并不是所有系统都需要，例如分布式追踪的请求 ID 就可以不需要单调递增。而那些需要存到数据库里作为 ID 逐渐的场景，可能就需要保证全局唯一 ID 是单调递增的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;此外，我们可能还需要考虑安全方面的问题。如果一个全局唯一 ID 是顺序递增的，那么有可能会造成业务信息的泄露。例如订单 ID 每次递增 1，那么竞争对手直接通过订单 ID 就可以知道我们每天的订单数，这对于业务来说是不可接受的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于上述的诉求，现在市面上有非常多的唯一 ID 解决方案，其中最为常见的方案有如下 4 种：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;UUID&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;类雪花算法&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;数据库自增主键&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Redis 原子自增&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;UUID&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;UUID 全称叫 Universally Unique Identifier，即全局唯一标识符，它是 Java 中自带的 API。&lt;/strong&gt; 一个标准的 UUID 包含 32 个 16 进制的数字，以中横线作为分隔符分为 5 段，每段的长度分别为 8 字符、4 字符、4 字符、4 字符、12 字符，大小为 36 个字符，如下图所示。一个简单的 UUID 示例：630e4100-e29b-33d4-a635-246652140000。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span class=&quot;js_img_placeholder&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/AVWicyZuuClGSGnMj4XkpibKUkcwq93zzgy5ezWDxiaSrc4xckoozvmvoQGexz4fc5GbPVwN3R6ria6aocHNiaqIhmQ/640?wx_fmt=png&quot; data-index=&quot;3&quot;&gt;&lt;span/&gt;&lt;/span&gt;&lt;figcaption&gt;UUID 构成示意图&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于 UUID 这种唯一 ID 解决方案，优点是没有外部依赖，纯本地生成，因此其性能非常高。但缺点也是非常明显的：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;字段非常长，浪费存储空间。&lt;/strong&gt; UUID 一般长度为 36 个字符串，如果作为数据库主键存储，极大地增加索引的存储空间。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;非自增，降低数据库写入性能。&lt;/strong&gt; UUID 不是自增的，如果作为数据库主键，那么无法实现顺序写，从而会降低数据库写入性能。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;没有业务含义。&lt;/strong&gt; UUID 是没有业务含义的，我们无法从 UUID 中获取到任何含义。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;因此，对于 UUID 而言，其比较适用于非数据库 ID 存储的情况，例如生成一个本地的分布式追踪请求 ID。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;类雪花算法&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;雪花算法（SnowFlake）是 Twitter 开源的分布式 ID 生成算法，其思路是用 64 位来表示一个 ID，并将 64 位分割成 4 个部分，如下图所示。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.26748057713651496&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/AVWicyZuuClGSGnMj4XkpibKUkcwq93zzgBVianyW1Cy7mHqiaFEwYPhP7437lF7ia8AuhZl7icXY9ibokfr7LZng9URg/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;901&quot;/&gt;&lt;figcaption&gt;雪花算法唯一 ID 构成示意图&lt;/figcaption&gt;&lt;/figure&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;第一个部分：1 位。&lt;/strong&gt; 固定为 0，表示为正整数。二进制中最高位是符号位，1 表示负数，0 表示正数。ID 都是正整数，所以固定为 0。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;第二个部分：41 位。&lt;/strong&gt; 表示时间戳，精确到毫秒，可以使用 69 年。时间戳带有自增属性。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;第三个部分：10 位。&lt;/strong&gt; 表示 10 位的机器标识，最多支持 1024 个节点。此部分也可拆分成 5 位 datacenterId 和 5 位 workerId，datacenterId 表示机房 ID，workerId 表示机器 ID。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;第四部分：12 位。&lt;/strong&gt; 表示序列化，即一些列的自增 ID，可以支持同一节点同一毫秒生成最多 4095 个 ID 序号。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;雪花算法的优点是：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;有业务含义，并且可自定义。&lt;/strong&gt; 雪花算法的 ID 每一位都有特殊的含义，我们从 ID 的不同位数就可以推断出对应的含义。此外，我们还可根据自身需要，自行增删每个部分的位数，从而实现自定义的雪花算法。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;ID 单调增加，有利于提高写入性能。&lt;/strong&gt; 雪花算法的 ID 最后部分是递增的序列号，因此其生成的 ID 是递增的，将其作为数据库主键 ID 时可以实现顺序写入，从而提高写入性能。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;不依赖第三方系统。&lt;/strong&gt; 雪花算法的生成方式，不依赖第三方系统或中间件，因此其稳定性较高。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;解决了安全问题。&lt;/strong&gt; 雪花算法生成的 ID 是单调递增的，但其递增步长又不是确定的，因此无法从 ID 的差值推断出生成的数量，从而可以保护业务隐私。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;雪花算法几乎可以是非常完美了，但它有一个致命的缺点 —— 强依赖机器时间。&lt;/strong&gt; 如果机器上的系统时间回拨，即时间较正常的时间慢，那么就可能会出现发号重复的情况。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于这种情况，我们可以在本地维护一个文件，写入上次的时间戳，随后与当前时间戳比较。如果当前时间戳小于上次时间戳，说明系统时间出了问题，应该及时处理。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;整体而言，雪花算法不仅长度更短，而且还具有业务含义，在数据库存储的场景下还能提高写入性能，因此雪花算法生成分布式唯一 ID 受到了大家的欢迎。&lt;/strong&gt; &lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;现在许多国内大厂的开源发号器的实现，都是在雪花算法的基础上做改进，例如：百度开源的 UidGenerator、美团开源的 Leaf 等等。这些类雪花算法的核心都是将 64 位进行更合理的划分，从而使得其更适合自身场景。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;数据库自增主键&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;说起唯一 ID，我们自然会想起数据库的自增主键，因为它就是唯一的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于并发量低的情况下，我们可以直接部署 1 台机器，每次获取 ID 的时候就往数据库表插入一条数据，随后返回主键 ID。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这种方式的好处是非常简单，实现成本低。此外，生成的唯一 ID 也是单调自增的，可以满足数据库写入性能的要求。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但其缺点也非常明显，即其强依赖数据库。当数据库异常的时候，会造成整个系统不可用。即使做了高可用切换，主从切换时数据同步不一致时，仍然可能造成重复发号。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;另外，由于是单机部署，因此其性能瓶颈限制在单台 MySQL 机器的读写性能上，注定无法承担起高并发的业务场景。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于上面说到的性能问题，我们可以通过集群部署来解决。而集群部署之后的 ID 冲突问题，我们可以通过设置递增步长来解决。例如如果我们有 3 台机器，那么我们就设置递增步长为 3，每台机器的 ID 生成策略为：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;第 1 台机器，从 0 开始递增，步长为 3，生成的 ID 分别是：0、3、6、9 等等。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;第 2 台机器，从 1 开始递增，步长为 3，生成的 ID 分别是：1、4、7、10 等等。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;第 3 台机器，从 2 开始递增，步长为 3，生成的 ID 分别是：2、5、8、11 等等。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这种方式解决了集群部署以及 ID 冲突的问题，可以在一定程度上提升并发访问的容量。但其缺点也比较明显：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;只能依赖堆机器提高性能。&lt;/strong&gt; 当请求再次增多时，我们只能无限堆机器，这貌似是一种物理防御一样。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;水平扩展困难。&lt;/strong&gt; 当我们需要增加一台机器时，其处理过程非常麻烦。首先，我们需要先把新增的服务器部署好，设置新的步长，起始值要设置一个不可能达到的值。&lt;/section&gt;&lt;section&gt;当把新增的服务器部署好之后，再一台台处理旧的服务器，这个过程真的非常痛苦，可以说是人肉运维了。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;Redis 原子自增&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由于 Redis 是内存数据库，其强大的性能非常适合用来实现高并发的分布式 ID 生成。基于 Redis 实现自增 ID，其主要还是利用了 Redis 中的 INCR 命令。该命令可以将某个数自增一并返回结果，并且这个操作是原子操作。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过 Redis 实现分布式 ID 功能，其模式与通过数据库自增 ID 类似，只是存储介质从硬盘变成了内存。当单台 Redis 无法支撑并发请求的时候，Redis 同样可以通过集群部署和设置步长的方式去解决。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但数据库自增主键有的问题，Redis 自增 ID 的方式也同样会有，即只能堆机器，同时水平扩展困难。此外，比起数据库存储的持久化，Redis 是基于内存的存储，需要考虑持久化的问题，这同样是一个头疼的问题。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;总结&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;看了这么多个分布式 ID 的解决方案，那么我们到底应该选哪个呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当我们在决策的时候，我们应该确定决策的维度。对于这个问题，我们应该关注的维度大致有：研发成本、并发量、性能、运维成本。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;首先，对于 UUID 而言&lt;/strong&gt;，其在各个方面其实都不如雪花算法，唯一的优点是 JDK 自带 API。因此，如果你只是极其简单地使用，那么就直接使用 UUID 就可以，毕竟雪花算法还得写一写实现代码呢。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;其次，对于类雪花算法而言&lt;/strong&gt;，其毋庸置疑是非常好的一种实现。与 UUID 相比，其不仅有 UUID 本地生成、不依赖第三方系统的优点，还有业务含义、能提高写入性能、解决了安全问题。但其缺点在于要实现雪花算法的代码，因此其研发成本稍稍比 UUID 高一些。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;最后，对于数据库自增 ID 与 Redis 原子自增这两种方式。&lt;/strong&gt;数据库自增 ID 的方式，其优点同样在于简单方便，不需要太高的研发成本。但其缺点是支撑的并发量太低，并且后续运维成本太高。因此，数据库自增 ID 这种方式，应该适用于小规模的使用场景下。而 Redis 原子自增的方式，其优先在于能支撑高并发的场景。但缺点是需要自行处理持久化问题，运维成本可能比较高。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本人更倾向于数据库自增方式。这两种方式都是非常类似的，唯一的区别是存储介质。Redis 原子自增方式非常快，可能单机可以是数据库方式的好几倍。但是如果要考虑持久化的问题，那对于 Redis 来说就太复杂了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们把上面这四种实现方式整理一下，可以汇总成下面的对比表格：&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;实现方案&lt;/th&gt;&lt;th&gt;优点&lt;/th&gt;&lt;th&gt;缺点&lt;/th&gt;&lt;th&gt;使用场景&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;UUID&lt;/td&gt;&lt;td&gt;性能高、不依赖第三方、研发成本低&lt;/td&gt;&lt;td&gt;字段长浪费存储空间、ID 不自增写入性能差、无业务含义&lt;/td&gt;&lt;td&gt;非常简单的使用场景（用于简单测试）&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;类雪花算法&lt;/td&gt;&lt;td&gt;有业务含义、单调递增写入性能好、不依赖第三方、业务安全&lt;/td&gt;&lt;td&gt;强依赖机器时间&lt;/td&gt;&lt;td&gt;高并发、业务场景复杂、需要将 ID 暴露给外部系统&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;数据库自增 ID&lt;/td&gt;&lt;td&gt;研发成本低、单调递增写入性能好&lt;/td&gt;&lt;td&gt;依赖数据库、只能堆机器提高性能、维护成本高&lt;/td&gt;&lt;td&gt;对持久性有要求，不暴露给外部系统&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Redis 原子自增&lt;/td&gt;&lt;td&gt;高并发、单调递增写入性能好&lt;/td&gt;&lt;td&gt;依赖 Redis、有业务问题、有持久性问题&lt;/td&gt;&lt;td&gt;对持久性没要求，不暴露给外部系统&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;总的来说，如果站在长期使用考虑，那么运维成本、高并发肯定是需要考虑的。在这个基础条件下，类雪花算法与数据库自增 ID 或许是相对好的选择。&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>1853220374c0409e6327856bf498db03</guid>
<title>直播 CDN 调度技术关键挑战与架构设计</title>
<link>https://toutiao.io/k/2x5rdpo</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;preview&quot;&gt;&lt;p&gt;&lt;strong&gt;作者：胡济麟&lt;/strong&gt;&lt;/p&gt;

&lt;h1&gt;1、背景介绍&lt;/h1&gt;

&lt;h1&gt;1.1 直播业务特点&lt;/h1&gt;

&lt;p&gt;互联网视频直播是一种消息媒介形态，提供时产时消的内容，经过多年，已经发展出秀场、游戏、电商、体育等多种业务形态。主要特点是：内容实时产生实时消费，对时效性要求更高；流媒体内容占用带宽大，对网络质量要求更苛刻；一人生产、多人消费，带宽规模大。直播CDN目前是解决这种大规模分发场景最有效的技术途径，主要特点是就近接入以提供良好的接入网环境，多层汇聚以降低中心资源的分发压力，以此达到直播业务规模化和时效性的要求。&lt;/p&gt;

&lt;h1&gt;1.2 直播CDN面临的困难&lt;/h1&gt;

&lt;p&gt;由于直播业务本身对于质量和时效性的要求，CDN就需要在短时间内要找到并建立一条完整可靠的传输链路，对于链路稳定性有一定的要求。传统依赖于旁路更新的、基于链路质量的策略，寻路算法简单，不消耗太多时间，时效性有保障。但随着成本压力越来越大和可用性的要求越来越高，基于链路质量的策略的缺点就逐渐体现出来：&lt;/p&gt;

&lt;p&gt;一个是这种旁路策略第一策略时效性上存在一定的延迟，延迟大约2-3分钟，对于偶发性的质量恶化或资源偏压无法快速做出相应的策略调整；&lt;/p&gt;

&lt;p&gt;第二是基于一套统一的链路质量数据，无法兼顾资源能效，对于一些能效低的内容无法基于成本考虑做出相应的寻路策略调整，对浮动成本的控制不够精确。&lt;/p&gt;

&lt;h1&gt;1.3 解决方案&lt;/h1&gt;

&lt;p&gt;基于资源信息、链路状态、流媒体信息等多维度数据，精确计算每一路流的分发效能，将计算粒度精确到流一级。通过对能效、质量的综合计算，为每一路流动态计算接入和回源策略是解决困难的关键。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/58eb0c12dbcf4e5b84b2b97d12f1b8ff%7Etplv-k3u1fbpfcp-zoom-1.image&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;图1. 干系方&lt;/p&gt;

&lt;p&gt;调度系统通过收集、结合资源信息、链路状态、流媒体信息等，对直播接入和寻路进行控制，快速精确的调整策略，提供质量优先、成本优先、质量成本平衡等多种策略，对于在质量指标评价体系下提升分发系统的可用性和能效比提供更加精准和细粒度的控制。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  内容平台：内容平台的核心目的就是提高质量，只有提高质量流量才有保障，一套精细化的调度系统，能够做到精确接入，提升网络覆盖的准确度，快速处理短时故障，降低流量流失风险。&lt;/li&gt;
&lt;li&gt;  CDN：CDN主要目标是提高质量，降低成本。调度系统能够精确控制接入网准确度，提高接入质量，对流量进行精细化调度，提高资源复用率，降低浮动成本，进而执导建设规划，降低固定成本。&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;2、主要问题及挑战&lt;/h1&gt;

&lt;h1&gt;2.1 时效性的要求&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;  接入调度要求对业务阻塞时长不超过50ms&lt;/li&gt;
&lt;li&gt;  寻路调度要求全路径上阻塞时长不超过50ms&lt;/li&gt;
&lt;li&gt;  流媒体信息同步延迟不超过100ms&lt;/li&gt;
&lt;li&gt;  设备信息、网络质量同步延迟不超过10s&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;2.1.1 调度延迟控制&lt;/h1&gt;

&lt;p&gt;延迟不超过50ms，考虑到公网的网络本身的传输延迟，基本上不会有多余的时间进行其他系统调用和计算，需要预先准备好响应的策略，并且调度接入位置要尽量靠近调用侧。设计了策略推送、策略缓存、异步更新三种功能。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  策略推送功能在资源调度系统生成好调度策略之后，通过推送方式直接推送到接入层，接入层不主动调用其他系统，直接使用推送的调度计划返回给业务方，接入层没有业务处理延迟。&lt;/li&gt;
&lt;li&gt;  策略缓存功能在接入层收到推送调度计划之后做内存缓存，本地不落磁盘，只有推送或者异步更新触发缓存更新，调度请求直接返回缓存数据。&lt;/li&gt;
&lt;li&gt;  异步更新是在接口主动定时向资源调度发起请求获取调度数据，防止推送失败。&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;2.1.2 信息同步延迟控制&lt;/h1&gt;

&lt;p&gt;由于流媒体信息同步延迟要求100ms，考虑公网网络传输的延迟，定时采集上报的方式无法满足延迟要求，采用事件触发实时API上报的方式同步数据。设备信息、节点信息为接口调用方式取回，对于时效性要求不高，采用任务分派机制，防止数据重复取回。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  事件触发在开始、停止等事件边沿上，同步调用API上送流媒体信息，保障流媒体信息同步的及时性。&lt;/li&gt;
&lt;li&gt;  API直连触发后端业务处理，不再经过中间件，节省中间件处理延迟。&lt;/li&gt;
&lt;li&gt;  任务分派机制将数据查询任务通过MQ分派给不同的服务实例，每个实例在认领完任务之后负责将数据取回。&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;2.2 可用性要求&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;  客户之间互不影响&lt;/li&gt;
&lt;li&gt;  询源调度和接入调度互不影响&lt;/li&gt;
&lt;li&gt;  响应异常退化策略保障&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;2.2.1 接口可用性&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;隔离&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;用户隔离&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  客户一般采用id来区别身份，部分大客户可能有独立的接入域名。以id和域名为维度，部署独立的计算资源，防止单个客户访问对全体客户造成影响。&lt;/li&gt;
&lt;li&gt;  考虑到成本和可用性，大客户除了独立部署资源外，还需要在常规集群中也部署相应功能，提供主备资源保障。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;业务隔离&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  回源调度和接入调度的业务方不同，对调度的响应能力和异常处理方式也不相同，调度失效的影响范围和收益也不相同。因此按照业务方进行隔离，内容平台和CDN分别在不同的接入实例上，方便对单个业务进行扩展，也可控制业务异常影响范围。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;限流&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;当系统负载过高时，保护系统服务，提升系统恢复速度，降低系统负载，需要对系统业务流量进行限制。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;熔断&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;并发熔断&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  系统中存在很多接口调用的场景，比如统一接入调用资源调度接口获取调度计划，资源调度调用信息采集获取基础数据等。为保障后端业务服务稳定性，防止后端业务被突发增量打死，需要对后端业务并发数进行熔断，超过额定并发之后，不再允许调用后端接口，监控系统抛出异常，前端业务依据故障处理机制容忍一定的故障请求，超过容忍额度则退化到兜底策略。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;失败率熔断&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  后端业务可能短时处于不可用状态，降低后端业务在短时不可用时的请求量，能够加速后端业务恢复。当调用后端接口失败率高于阀值后，一段时间内不再调用后端接口，超过额定时间则继续探测后端业务可用性，直到业务恢复。&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;2.2.2 退化策略&lt;/h1&gt;

&lt;p&gt;无法在进行接入和询源调度服务时，需要退化为默认兜底策略，接入退化为DNS解析方式，询源退化为CDN固定询源策略，不再依赖调度系统做策略选择。&lt;/p&gt;

&lt;h1&gt;3、调度系统架构&lt;/h1&gt;

&lt;h1&gt;3.1 业务架构&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/54e754166cc34654af652161507646e6%7Etplv-k3u1fbpfcp-zoom-1.image&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;图2. 业务架构&lt;/p&gt;

&lt;p&gt;调度系统分为统一接入、运管平台、资源调度、信息采集、日志系统五个部分。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  统一接入：为内容平台提供中心化标准接入能力。考虑性能及延迟消耗，为CDN的边缘实例、二级源实例提供下沉agent接入能力。&lt;/li&gt;
&lt;li&gt;  运管平台：运管平台作为人工界面，主要提供配置能力和数据大屏。&lt;/li&gt;
&lt;li&gt;  资源调度：资源调度作为调度系统的核心单元，依据多种输入条件，针对接入和询源两种业务模式，输出不同的调度计划。&lt;/li&gt;
&lt;li&gt;  信息采集：信息采集作为数据底座，为资源调度提供必要的质量、能力、位置等输入信息。&lt;/li&gt;
&lt;li&gt;  日志系统：日志系统提供时序化的记录方式用于记录调度信息，主要用于复盘和评价调度策略。&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;3.2 信息采集系统&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6ee896630a1147c8b5378a0442c277f2%7Etplv-k3u1fbpfcp-zoom-1.image&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;图3. 信息采集系统业务架构&lt;/p&gt;

&lt;p&gt;信息采集系统作为调度系统的数据底座，主要功能是从运维系统收集设备资源情况、从业务系统收集流媒体信息，经过数据整合之后提供给资源调度使用。&lt;/p&gt;

&lt;p&gt;信息采集系统通过主动定时调用运维系统接口采集设备运行数据，包括CPU使用率、内存使用率、磁盘IO、网络IO等信息，用于评价设备的服务能力。采集节点带宽用量等信息，用于评价节点承载能力。&lt;/p&gt;

&lt;p&gt;通过主动定时调用监控系统接口采集链路质量数据，包括RTT，丢包率等信息，用于评价网络质量。&lt;/p&gt;

&lt;p&gt;通过被动等待CDN业务实例上报流媒体资源位置、下行并发、卡顿率等信息，用于评价服务质量和服务收益。&lt;/p&gt;

&lt;p&gt;这些信息被收集上来之后通过分类整合，按照节点、地区、运营商、业务形式等不同维度，形成服务能力、服务质量、服务收益的聚合数据。&lt;/p&gt;

&lt;p&gt;聚合数据最终会通过查询接口提供给资源调度系统。&lt;/p&gt;

&lt;h1&gt;3.3 资源调度系统&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f5a7f259de924910bbcb81141055fb0e%7Etplv-k3u1fbpfcp-zoom-1.image&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;图4. 资源调度系统业务架构&lt;/p&gt;

&lt;p&gt;资源调度作为调度系统核心业务模块，主要从信息采集收取必要调度依据，通过一套调度策略，输出调度计划提供给接入和询源业务。&lt;/p&gt;

&lt;p&gt;资源调度系统主要通过运管平台将个性化调度配置信息落到资源调度系统。通过查询信息采集接口，查询所需要的服务能力、服务质量、服务收益等信息。通过匹配不同的调度策略，生成静态调度计划。&lt;/p&gt;

&lt;p&gt;通过查询信息采集接口，查询流媒体资源位置及描述信息。通过匹配调度策略，生成动态调度计划。&lt;/p&gt;

&lt;p&gt;最终调度计划会以接口方式提供给业务方使用。&lt;/p&gt;

&lt;h1&gt;3.4 技术架构&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/855e838266314c08ae965800e90ba1ac%7Etplv-k3u1fbpfcp-zoom-1.image&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;图5. 技术架构&lt;/p&gt;

&lt;h1&gt;3.5 部署方案&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e9dbb0efa7d44f529a08c57faeb48a44%7Etplv-k3u1fbpfcp-zoom-1.image&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;图6. 部署方案&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>e4bcb70ad46b6f5eef7a26dca1673fc5</guid>
<title>打脸了兄弟们，Go1.20 arena 来了！</title>
<link>https://toutiao.io/k/mkyiajy</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content js_underline_content             autoTypeSetting24psection&amp;#10;            &quot; id=&quot;js_content&quot;&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大家好，我是煎鱼。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大概半年前，我写过一篇文章《&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzUxMDI4MDc1NA==&amp;amp;mid=2247494641&amp;amp;idx=1&amp;amp;sn=deb5b75689405362f7386b510749b323&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;Go 要违背初心吗？新提案：手动管理内存&lt;/a&gt;》。有兴趣了深入解的同学，可以再回顾一下。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当时我们还想着 Go 团队应该不会接纳，至少不会那么快：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.6998972250770812&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;973&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/KVl0giak5ib4gm7VFW0ibdXUlicCSUFM3EBfDOcwnbMEdpme1bY5FVCeL654p7LVicA3o9oIrnnkkbZWibReCQCT7t4w/640?wx_fmt=jpeg&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;没想到，计划赶不上变化。&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;懒得翻也可以看我再次道来，本文提到的提案《&lt;/span&gt;&lt;span&gt;proposal: arena: new package providing memory arenas&lt;/span&gt;&lt;sup&gt;[1]&lt;/sup&gt;&lt;span&gt;》，这其中的 Arena 将会是一个突破项。&lt;/span&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;快速背景&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Arena 指的是一种&lt;strong&gt;从一个连续的内存区域分配一组内存对象的方式&lt;/strong&gt;。优点比一般的内存分配更有效率，也可以一次性释放。当然了，它的重点是要&lt;strong&gt;手动管理内存&lt;/strong&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Go 团队希望加进 Go 特性中，示例代码如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;import&lt;/span&gt; (&lt;br/&gt; “arena”&lt;br/&gt; …&lt;br/&gt;)&lt;br/&gt;&lt;br/&gt;&lt;span&gt;type&lt;/span&gt; T &lt;span&gt;struct&lt;/span&gt; {&lt;br/&gt; val &lt;span&gt;int&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;func&lt;/span&gt; &lt;span&gt;main&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;&lt;/span&gt; {&lt;br/&gt; a := arena.New()&lt;br/&gt; &lt;span&gt;var&lt;/span&gt; ptrT *T&lt;br/&gt; a.New(&amp;amp;ptrT)&lt;br/&gt; ptrT.val = &lt;span&gt;1&lt;/span&gt;&lt;br/&gt;&lt;br/&gt; &lt;span&gt;var&lt;/span&gt; sliceT []T&lt;br/&gt; a.NewSlice(&amp;amp;sliceT, &lt;span&gt;100&lt;/span&gt;)&lt;br/&gt; sliceT[&lt;span&gt;99&lt;/span&gt;].val = &lt;span&gt;4&lt;/span&gt;&lt;br/&gt;&lt;br/&gt; a.Free()&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;手动调用 &lt;code&gt;arena.New&lt;/code&gt; 方法分配 arena 内存，再调用 &lt;code&gt;Free&lt;/code&gt; 方法进行释放。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;简单来讲就是可以手动管理内存，就可以做很多事了，因为可以乱来，所以也 “容易” 崩。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;最新进展&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个提案一直在 issues 上适度的争议讨论，@Michael Knyszek 大佬代码写的很快，已经直接提交上去了...直到最近被人发现，让他更新进度。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.44234800838574423&quot; data-type=&quot;png&quot; data-w=&quot;1908&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KVl0giak5ib4jG92ia02oqylf3OVgltjSgeTqZ5IoSA1QmTT5PwZkcVtAoGDPMkFqZq3clotTnkiaesDTekFnFokxA/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;已经明确：&lt;strong&gt;Go1.20 将会支持 arena 特性&lt;/strong&gt;，通过 &lt;code&gt;GOEXPERIMENT=arena&lt;/code&gt; 来打开，接受大家的 review 和使用，社区当前抗阻较小。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;已实现 API 和原提案不同的地方有：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;API 使用了泛型，例如：&lt;code&gt;arena.New[int](myArena &quot;int&quot;)&lt;/code&gt;。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Arena 的 块大小是 8 MiB 而不是 64 MiB，似乎在更多情况下提供了更好的性能。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;MSAN 和 ASAN 模式可用于识别不会导致崩溃的 use-after-free 错误（内存损坏应该仍然是不可能的）。需注意，这些模式对非 cgo 的 Go 程序几乎没有作用。Arena 是个例外。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;另外根据社区的反馈，可能还会出现配套类型的 Arena。如下函数签名：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;// MakeMap creates a new map[K]V with the provided capacity.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;// The map[K]V must not be used after the arena is freed.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;// Accessing the underlying storage of the map after free may result in a fault,&lt;/span&gt;&lt;br/&gt;&lt;span&gt;// but this fault is also not guaranteed.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;func&lt;/span&gt; &lt;span&gt;MakeMap&lt;/span&gt;[&lt;span&gt;K&lt;/span&gt; &lt;span&gt;comparable&lt;/span&gt;, &lt;span&gt;V&lt;/span&gt; &lt;span&gt;any&lt;/span&gt;]&lt;span&gt;(a *Arena, &lt;span&gt;cap&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; &quot;K comparable, V any&quot;)&lt;/span&gt; &lt;span&gt;map&lt;/span&gt;[&lt;span&gt;K&lt;/span&gt;]&lt;span&gt;V&lt;/span&gt;&lt;/span&gt; { ... }&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在 Go1.20 发布该新特性的话，按照发布周期计划，是 2 月份左右发布，相信大家很快就能用上，可以多多关注。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;总结&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一开始了解这个提案时，还想着 Go 搞了快 10 年才采纳和推进泛型。这 Arena 应该不至于这么快吧？毕竟加进去了，许多程序都可以写的复杂起来。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;没想到...现实打脸来的太快，推进的很快。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;就像其他小伙伴说的，这可以直接从代码侧优化性能，而不需要砍需求。也是一个有意思且不错的源动力！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;据小道消息，某些同学表示在框架和其它场景测过，有说变得快了，有说没差多少。比较迷，提案内暂时未提供测试报告，不好定论。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Go 1.20 Beta 将在未来几周内（2022.11 月底前）发布，让&lt;span&gt;我们拭目以待：&lt;/span&gt;&lt;span&gt;）&lt;/span&gt;&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;推荐阅读&lt;/h4&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;参考资料&lt;/span&gt;&lt;/h3&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;span&gt;[1]&lt;/span&gt;&lt;p&gt;proposal: arena: new package providing memory arenas: &lt;em&gt;https://github.com/golang/go/issues/51317&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;关注和加煎鱼微信，&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;获取一手业内消息和知识，拉你进交流群&lt;span&gt;&lt;span&gt;👇&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.9988738738738738&quot; data-type=&quot;jpeg&quot; data-w=&quot;888&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/KVl0giak5ib4jVkzHVvaqjo3O0BIqDRJKkEyib7SJsryxHBFGsvek0FkdiczfJP6AdbWnK25DvlX3dY8wRObPbVJQg/640?wx_fmt=jpeg&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;你好，我是煎鱼，&lt;span&gt;出版过 Go 畅销书《Go 语言编程之旅》，再到获得 GOP（Go 领域最有观点专家）荣誉，&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUxMDI4MDc1NA==&amp;amp;mid=2247483854&amp;amp;idx=1&amp;amp;sn=ec422fbf4d846975f2930ddeb5e81373&amp;amp;chksm=f9041493ce739d85a4b987eece14da627206cdad798f645cc770868312e4a22b6df24804f186&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;点击蓝字查看我的出书之路&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;点击蓝字查看我的出书之路&lt;/a&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;日常分享高质量文章，输出 Go 面试、工作经验、架构设计，&lt;span&gt;加微信拉读者交流群，和大家交流！&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;mp-style-type data-value=&quot;3&quot;/&gt;&lt;/p&gt;&lt;/div&gt;

          
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>2a6c47c648cb4da7812df9fe4a26aebc</guid>
<title>Python 和 Excel 的完美结合：常用操作汇总（案例详析）</title>
<link>https://toutiao.io/k/5xo78v5</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;pre&gt;&lt;pre&gt;&lt;p&gt;&lt;/p&gt;&lt;/pre&gt;&lt;/pre&gt;&lt;section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;10&quot; data-backw=&quot;550&quot; data-before-oversubscription-url=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/t8ibUxVnMTLNeTtwpBYco5T2uRET2SG9q0hebmx7RQCeGk5iaLfYvALia6KicJw9icyWSmX8LlKdWcl2ibEEusuMlIrA/640?&quot; data-oversubscription-url=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/t8ibUxVnMTLPLUyAAdaDETpj5xxGvtM5pcns01OplkMfZrYaMeHJUFDOGIAjbOpGab87wO7uZhjEwv0WnhPbq1A/0?wx_fmt=jpeg&quot; data-ratio=&quot;0.01875&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/t8ibUxVnMTLPLUyAAdaDETpj5xxGvtM5pcns01OplkMfZrYaMeHJUFDOGIAjbOpGab87wO7uZhjEwv0WnhPbq1A/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;jpeg&quot; data-w=&quot;640&quot; title=&quot;金属质感分割线&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span/&gt;&lt;span&gt;在以前，商业分析对应的英文单词是Business Analysis，大家用的分析工具是Excel，后来数据量大了，Excel应付不过来了（Excel最大支持行数为1048576行），人们开始转向python和R这样的分析工具了，这时候商业分析对应的单词是Business Analytics。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;其实python和Excel的使用准则一样，都是[We don&#x27;t repeat ourselves]，都是尽可能用更方便的操作替代机械操作和纯体力劳动。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;用python做数据分析，离不开著名的pandas包，经过了很多版本的迭代优化，pandas现在的生态圈已经相当完整了，官网还给出了它和其他分析工具的对比：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.9264305177111717&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PvP6qjUpvIoDxic4E2vnBNX99YbyRFL2QJ28uDRXWYmibFzhwM7ynia03zLOBmR94ic2l7iaWgsYzKb6mMJ29WJmAcg/640?wx_fmt=png&amp;amp;random=0.5752609670302757&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;367&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;本文用的主要也是pandas，绘图用的库是plotly，实现的Excel的常用功能有：&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Python和Excel的交互&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;vlookup函数&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;数据透视表&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;绘图&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;以后如果发掘了更多Excel的功能，会回来继续更新和补充。开始之前，首先按照惯例加载pandas包：&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;python&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;import&lt;/span&gt; numpy &lt;span class=&quot;code-snippet__keyword&quot;&gt;as&lt;/span&gt; np&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;import&lt;/span&gt; pandas &lt;span class=&quot;code-snippet__keyword&quot;&gt;as&lt;/span&gt; pd&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;pd.set_option(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;max_columns&#x27;&lt;/span&gt;, &lt;span class=&quot;code-snippet__number&quot;&gt;10&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;pd.set_option(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;max_rows&#x27;&lt;/span&gt;, &lt;span class=&quot;code-snippet__number&quot;&gt;20&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;pd.set_option(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;display.float_format&#x27;&lt;/span&gt;, &lt;span class=&quot;code-snippet__keyword&quot;&gt;lambda&lt;/span&gt; x: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;%.2f&#x27;&lt;/span&gt; % x) &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;97617&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;Python和Excel的交互&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;pandas里最常用的和Excel I/O有关的四个函数是read_csv/ read_excel/ to_csv/ to_excel，它们都有特定的参数设置，可以定制想要的读取和导出效果。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;比如说想要读取这样一张表的左上部分：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.9541484716157205&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PvP6qjUpvIoDxic4E2vnBNX99YbyRFL2QWYytODa5KjZkmauSQ8JHd6K6iaKo2TPXSZ06qBXt7eTuguBUhHoQAnQ/640?wx_fmt=png&amp;amp;random=0.30092631759217947&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;458&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;可以用pd.read_excel(&quot;test.xlsx&quot;, header=1, nrows=17, usecols=3)，返回结果：&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;properties&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;df&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;Out[]&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;       &lt;span class=&quot;code-snippet__meta&quot;&gt;工号&lt;/span&gt;   &lt;span class=&quot;code-snippet__string&quot;&gt;姓名 性别  部门&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;0&lt;/span&gt;   &lt;span class=&quot;code-snippet__string&quot;&gt;A0001   张伟  男  工程&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;1&lt;/span&gt;   &lt;span class=&quot;code-snippet__string&quot;&gt;A0002  王秀英  女  人事&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;2&lt;/span&gt;   &lt;span class=&quot;code-snippet__string&quot;&gt;A0003   王芳  女  行政&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;3&lt;/span&gt;   &lt;span class=&quot;code-snippet__string&quot;&gt;A0004   郑勇  男  市场&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;4&lt;/span&gt;   &lt;span class=&quot;code-snippet__string&quot;&gt;A0005   张丽  女  研发&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;5&lt;/span&gt;   &lt;span class=&quot;code-snippet__string&quot;&gt;A0006   王艳  女  后勤&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;6&lt;/span&gt;   &lt;span class=&quot;code-snippet__string&quot;&gt;A0007   李勇  男  市场&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;7&lt;/span&gt;   &lt;span class=&quot;code-snippet__string&quot;&gt;A0008   李娟  女  工程&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;8&lt;/span&gt;   &lt;span class=&quot;code-snippet__string&quot;&gt;A0009   张静  女  人事&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;9&lt;/span&gt;   &lt;span class=&quot;code-snippet__string&quot;&gt;A0010   王磊  男  行政&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;10&lt;/span&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;A0011   李娜  女  市场&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;11&lt;/span&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;A0012  刘诗雯  女  研发&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;12&lt;/span&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;A0013   王刚  男  后勤&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;13&lt;/span&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;A0014   叶倩  女  后勤&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;14&lt;/span&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;A0015  金雯雯  女  市场&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;15&lt;/span&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;A0016  王超杰  男  工程&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;16&lt;/span&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;A0017   李军  男  人事&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;输出函数也同理，使用多少列，要不要index，标题怎么放，都可以控制。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;97617&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;vlookup函数&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;vlookup号称是Excel里的神器之一，用途很广泛，下面的例子来自豆瓣，VLOOKUP函数最常用的10种用法，你会几种?&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;案例一&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;问题：A3:B7单元格区域为字母等级查询表，表示60分以下为E级、60~69分为D级、70~79分为C级、80~89分为B级、90分以上为A级。D:G列为初二年级1班语文测验成绩表，如何根据语文成绩返回其字母等级？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5700712589073634&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PvP6qjUpvIoDxic4E2vnBNX99YbyRFL2QUibAT6gaCDvB9LmNLGf3R7oTZc74zEibibOeIZrXmaRVdYBu9g42IhykA/640?wx_fmt=png&amp;amp;random=0.5158933727994217&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;421&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;方法：在H3:H13单元格区域中输入=VLOOKUP（G3, $A$3:$B$7, 2）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;python实现：&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;properties&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;df&lt;/span&gt; = &lt;span class=&quot;code-snippet__string&quot;&gt;pd.read_excel(&quot;test.xlsx&quot;, sheet_name=0)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;grade_to_point(x):&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__attr&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;x &amp;gt;= 90:&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;A&#x27;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__attr&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;x &amp;gt;= 80:&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;B&#x27;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__attr&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;x &amp;gt;= 70:&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;C&#x27;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__attr&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;x &amp;gt;= 60:&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;D&#x27;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__attr&quot;&gt;else&lt;/span&gt;:&lt;span class=&quot;code-snippet__string&quot;/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;E&#x27;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;df[&#x27;等级&#x27;]&lt;/span&gt; = &lt;span class=&quot;code-snippet__string&quot;&gt;df[&#x27;语文&#x27;].apply(grade_to_point)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;df&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;Out[]&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     &lt;span class=&quot;code-snippet__meta&quot;&gt;学号&lt;/span&gt;   &lt;span class=&quot;code-snippet__string&quot;&gt;姓名 性别   语文 等级&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;0&lt;/span&gt;   &lt;span class=&quot;code-snippet__string&quot;&gt;101  王小丽  女   69  D&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;1&lt;/span&gt;   &lt;span class=&quot;code-snippet__string&quot;&gt;102  王宝勤  男   85  B&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;2&lt;/span&gt;   &lt;span class=&quot;code-snippet__string&quot;&gt;103  杨玉萍  女   49  E&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;3&lt;/span&gt;   &lt;span class=&quot;code-snippet__string&quot;&gt;104  田东会  女   90  A&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;4&lt;/span&gt;   &lt;span class=&quot;code-snippet__string&quot;&gt;105  陈雪蛟  女   73  C&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;5&lt;/span&gt;   &lt;span class=&quot;code-snippet__string&quot;&gt;106  杨建丰  男   42  E&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;6&lt;/span&gt;   &lt;span class=&quot;code-snippet__string&quot;&gt;107  黎梅佳  女   79  C&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;7&lt;/span&gt;   &lt;span class=&quot;code-snippet__string&quot;&gt;108   张兴   男   91  A&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;8&lt;/span&gt;   &lt;span class=&quot;code-snippet__string&quot;&gt;109  马进春  女   48  E&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;9&lt;/span&gt;   &lt;span class=&quot;code-snippet__string&quot;&gt;110  魏改娟  女  100  A&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;10&lt;/span&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;111  王冰研  女   64  D&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;案例二&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;问题：在Sheet1里面如何查找折旧明细表中对应编号下的月折旧额？（跨表查询）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.37906137184115524&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PvP6qjUpvIoDxic4E2vnBNX99YbyRFL2QTDrORPicemY3icKNRib9zMhdZrZx6O8FpxSTCNZFFflnfYatibRTRMqumg/640?wx_fmt=png&amp;amp;random=0.4996836729413032&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;554&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.34782608695652173&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PvP6qjUpvIoDxic4E2vnBNX99YbyRFL2QfeKjiajlTNGt5Z5HHDp6bMXHH6fpeMC8MrsSMncUicqiaGyaU4BQIR6pQ/640?wx_fmt=png&amp;amp;random=0.25874754496891894&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;253&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;方法：在Sheet1里面的C2:C4单元格输入 =VLOOKUP(A2, 折旧明细表!A$2:$G$12, 7, 0)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;python实现：使用merge将两个表按照编号连接起来就行&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;nginx&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attribute&quot;&gt;df1&lt;/span&gt; = pd.read_excel(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;test.xlsx&quot;&lt;/span&gt;, sheet_name=&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;折旧明细表&#x27;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;df2 = pd.read_excel(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;test.xlsx&quot;&lt;/span&gt;, sheet_name=&lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt;) &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;df2.merge(df1[[&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;编号&#x27;&lt;/span&gt;, &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;月折旧额&#x27;&lt;/span&gt;]], how=&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;left&#x27;&lt;/span&gt;, &lt;span class=&quot;code-snippet__literal&quot;&gt;on&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;编号&#x27;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;Out[]: &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    编号   资产名称  月折旧额&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;0&lt;/span&gt;  YT001    电动门   &lt;span class=&quot;code-snippet__number&quot;&gt;1399&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt;  YT005  桑塔纳轿车  &lt;span class=&quot;code-snippet__number&quot;&gt;1147&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;2&lt;/span&gt;  YT008    打印机    &lt;span class=&quot;code-snippet__number&quot;&gt;51&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;案例三&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;问题：类似于案例二，但此时需要使用近似查找&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.37906137184115524&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PvP6qjUpvIoDxic4E2vnBNX99YbyRFL2QTDrORPicemY3icKNRib9zMhdZrZx6O8FpxSTCNZFFflnfYatibRTRMqumg/640?wx_fmt=png&amp;amp;random=0.6840115277109096&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;554&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8333333333333334&quot; data-type=&quot;png&quot; data-w=&quot;174&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PvP6qjUpvIoDxic4E2vnBNX99YbyRFL2QY6gG4O3lXKJNqzibQAfVRP5GbADEX6Q60vic0xfIb2ict8MLnqOIibAiaPQ/640?wx_fmt=png&amp;amp;random=0.059006915539179916&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;方法：在B2:B7区域中输入公式&lt;/span&gt;&lt;code&gt;&lt;span&gt;=VLOOKUP(A2&amp;amp;&quot;*&quot;, 折旧明细表!$B$2:$G$12, 6, 0)&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;python实现：这个比起上一个要麻烦一些，需要用到一些pandas的使用技巧&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;python&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;df1 = pd.read_excel(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;test.xlsx&quot;&lt;/span&gt;, sheet_name=&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;折旧明细表&#x27;&lt;/span&gt;) &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;df3 = pd.read_excel(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;test.xlsx&quot;&lt;/span&gt;, sheet_name=&lt;span class=&quot;code-snippet__number&quot;&gt;3&lt;/span&gt;) &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;df3[&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;月折旧额&#x27;&lt;/span&gt;] = &lt;span class=&quot;code-snippet__number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;code-snippet__keyword&quot;&gt;in&lt;/span&gt; range(len(df3[&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;资产名称&#x27;&lt;/span&gt;])):&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    df3[&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;月折旧额&#x27;&lt;/span&gt;][i] = df1[df1[&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;资产名称&#x27;&lt;/span&gt;].map(&lt;span class=&quot;code-snippet__keyword&quot;&gt;lambda&lt;/span&gt; x:df3[&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;资产名称&#x27;&lt;/span&gt;][i] &lt;span class=&quot;code-snippet__keyword&quot;&gt;in&lt;/span&gt; x)][&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;月折旧额&#x27;&lt;/span&gt;]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;df3&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;Out[]: &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  资产名称   月折旧额&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;0&lt;/span&gt;   电动   &lt;span class=&quot;code-snippet__number&quot;&gt;1399&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt;   货车   &lt;span class=&quot;code-snippet__number&quot;&gt;2438&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;2&lt;/span&gt;   惠普    &lt;span class=&quot;code-snippet__number&quot;&gt;132&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;3&lt;/span&gt;   交联  &lt;span class=&quot;code-snippet__number&quot;&gt;10133&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;4&lt;/span&gt;  桑塔纳   &lt;span class=&quot;code-snippet__number&quot;&gt;1147&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;5&lt;/span&gt;   春兰    &lt;span class=&quot;code-snippet__number&quot;&gt;230&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;案例四&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;问题：在Excel中录入数据信息时，为了提高工作效率，用户希望通过输入数据的关键字后，自动显示该记录的其余信息，例如，输入员工工号自动显示该员工的信命，输入物料号就能自动显示该物料的品名、单价等。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如图所示为某单位所有员工基本信息的数据源表，在“2010年3月员工请假统计表”工作表中，当在A列输入员工工号时，如何实现对应员工的姓名、身份证号、部门、职务、入职日期等信息的自动录入？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6473779385171791&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PvP6qjUpvIoDxic4E2vnBNX99YbyRFL2Qk50lhKy9Xjv66SCEtoXtc5VyPbtb9G5dYJX7YFoEWWPMyKGeJCQ4oQ/640?wx_fmt=png&amp;amp;random=0.11327406624267833&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;553&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.36823104693140796&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PvP6qjUpvIoDxic4E2vnBNX99YbyRFL2QhySSeCwWic8o8ibia2wiafT4lMDAPBE4Coic3yBtMfxoJick8pD6XVm1l7Lg/640?wx_fmt=png&amp;amp;random=0.5242439013968889&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;554&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;方法：使用VLOOKUP+MATCH函数，在“2010年3月员工请假统计表”工作表中选择B3:F8单元格区域，输入下列公式=IF($A3=&quot;&quot;,&quot;&quot;,VLOOKUP($A3,员工基本信息!$A:$H,MATCH(B$2,员工基本信息!$2:$2,0),0))，按下【Ctrl+Enter】组合键结束。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;python实现：上面的Excel的方法用得很灵活，但是pandas的想法和操作更简单方便些&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;nginx&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attribute&quot;&gt;df4&lt;/span&gt; = pd.read_excel(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;test.xlsx&quot;&lt;/span&gt;, sheet_name=&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;员工基本信息表&#x27;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;df5 = pd.read_excel(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;test.xlsx&quot;&lt;/span&gt;, sheet_name=&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;请假统计表&#x27;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;df5.merge(df4[[&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;工号&#x27;&lt;/span&gt;, &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;姓名&#x27;&lt;/span&gt;, &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;部门&#x27;&lt;/span&gt;, &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;职务&#x27;&lt;/span&gt;, &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;入职日期&#x27;&lt;/span&gt;]], &lt;span class=&quot;code-snippet__literal&quot;&gt;on&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;工号&#x27;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;Out[]: &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      工号   姓名  部门   职务       入职日期&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;0&lt;/span&gt;  A0004  龚梦娟  后勤   主管 &lt;span class=&quot;code-snippet__number&quot;&gt;2006&lt;/span&gt;-&lt;span class=&quot;code-snippet__number&quot;&gt;11&lt;/span&gt;-&lt;span class=&quot;code-snippet__number&quot;&gt;20&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt;  A0003   赵敏  行政   文员 &lt;span class=&quot;code-snippet__number&quot;&gt;2007&lt;/span&gt;-&lt;span class=&quot;code-snippet__number&quot;&gt;02&lt;/span&gt;-&lt;span class=&quot;code-snippet__number&quot;&gt;16&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;2&lt;/span&gt;  A0005   黄凌  研发  工程师 &lt;span class=&quot;code-snippet__number&quot;&gt;2009&lt;/span&gt;-&lt;span class=&quot;code-snippet__number&quot;&gt;01&lt;/span&gt;-&lt;span class=&quot;code-snippet__number&quot;&gt;14&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;3&lt;/span&gt;  A0007   王维  人事   经理 &lt;span class=&quot;code-snippet__number&quot;&gt;2006&lt;/span&gt;-&lt;span class=&quot;code-snippet__number&quot;&gt;07&lt;/span&gt;-&lt;span class=&quot;code-snippet__number&quot;&gt;24&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;4&lt;/span&gt;  A0016  张君宝  市场  工程师 &lt;span class=&quot;code-snippet__number&quot;&gt;2007&lt;/span&gt;-&lt;span class=&quot;code-snippet__number&quot;&gt;08&lt;/span&gt;-&lt;span class=&quot;code-snippet__number&quot;&gt;14&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;5&lt;/span&gt;  A0017   秦羽  人事  副经理 &lt;span class=&quot;code-snippet__number&quot;&gt;2008&lt;/span&gt;-&lt;span class=&quot;code-snippet__number&quot;&gt;03&lt;/span&gt;-&lt;span class=&quot;code-snippet__number&quot;&gt;06&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;案例五&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;问题：用VLOOKUP函数实现批量查找，VLOOKUP函数一般情况下只能查找一个，那么多项应该怎么查找呢？如下图，如何把张一的消费额全部列出？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7091503267973857&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PvP6qjUpvIoDxic4E2vnBNX99YbyRFL2QmRabBr0gR3poUoX0qNoBZXjtiaOBkKAqgpayQDRiaiamJuqpqehLAGkqw/640?wx_fmt=png&amp;amp;random=0.7050349929891075&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;306&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;方法：在C9：C11单元格里面输入公式&lt;/span&gt;&lt;code&gt;&lt;span&gt;=VLOOKUP(B$9&amp;amp;ROW(A1),IF({1,0},$B$2:$B$6&amp;amp;COUNTIF(INDIRECT(&quot;b2:b&quot;&amp;amp;ROW($2:$6)),B$9),$C$2:$C$6),2,)&lt;/span&gt;&lt;/code&gt;&lt;span&gt;，按SHIFT+CTRL+ENTER键结束。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;python实现：vlookup函数有两个不足（或者算是特点吧），一个是被查找的值一定要在区域里的第一列，另一个是只能查找一个值，剩余的即便能匹配也不去查找了，这两点都能通过灵活应用if和indirect函数来解决，不过pandas能做得更直白一些。&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;markdown&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;df6 = pd.read&lt;span class=&quot;code-snippet__emphasis&quot;&gt;_excel(&quot;test.xlsx&quot;, sheet_&lt;/span&gt;name=&#x27;消费额&#x27;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;df6[&lt;span class=&quot;code-snippet__string&quot;&gt;df6[&#x27;姓名&#x27;&lt;/span&gt;] == &#x27;张一&#x27;][[&#x27;姓名&#x27;, &#x27;消费额&#x27;]]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;Out[]: &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   姓名   消费额&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;0  张一   100&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;2  张一   300&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;4  张一  1000&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;97617&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;数据透视表&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;数据透视表是Excel的另一个神器，本质上是一系列的表格重组整合的过程。这里用的案例来自知乎，Excel数据透视表有什么用途：（&lt;/span&gt;&lt;span&gt;https://www.zhihu.com/question/22484899/answer/39933218&lt;/span&gt;&lt;span&gt; ）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;问题：需要汇总各个区域，每个月的销售额与成本总计，并同时算出利润&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6485355648535565&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PvP6qjUpvIoDxic4E2vnBNX99YbyRFL2QZ1mt6dAtceaA6icZMhEz3HxlI6uWoEaT5Q7Efv2XKibW4PwMvSARL0icQ/640?wx_fmt=png&amp;amp;random=0.5416523843755106&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;478&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;通过Excel的数据透视表的操作最终实现了下面这样的效果：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7716346153846154&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PvP6qjUpvIoDxic4E2vnBNX99YbyRFL2QiaaL0mz5mW2Ggly2AoCOh0ftQN12wmyTZUnw02gFgITdrBuLUhRImjg/640?wx_fmt=png&amp;amp;random=0.5020913717680762&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;416&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;python实现：对于这样的分组的任务，首先想到的就是pandas的groupby，代码写起来也简单，思路就是把刚才Excel的点鼠标的操作反映到代码命令上：&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cs&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;df = pd.read_excel(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;test.xlsx&#x27;&lt;/span&gt;, sheet_name=&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;销售统计表&#x27;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;df[&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;订购月份&#x27;&lt;/span&gt;] = df[&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;订购日期&#x27;&lt;/span&gt;].apply(lambda x:x.month)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;df2 = df.groupby([&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;订购月份&#x27;&lt;/span&gt;, &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;所属区域&#x27;&lt;/span&gt;])[[&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;销售额&#x27;&lt;/span&gt;, &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;成本&#x27;&lt;/span&gt;]].agg(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;sum&#x27;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;df2[&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;利润&#x27;&lt;/span&gt;] = df2[&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;销售额&#x27;&lt;/span&gt;] - df2[&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;成本&#x27;&lt;/span&gt;]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;df2&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;Out[]: &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                 销售额         成本        利润&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;订购月份 所属区域                                &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt;    南京    &lt;span class=&quot;code-snippet__number&quot;&gt;134313.61&lt;/span&gt;   &lt;span class=&quot;code-snippet__number&quot;&gt;94967.84&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;39345.77&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     常熟    &lt;span class=&quot;code-snippet__number&quot;&gt;177531.47&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;163220.07&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;14311.40&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     无锡    &lt;span class=&quot;code-snippet__number&quot;&gt;316418.09&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;231822.28&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;84595.81&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     昆山    &lt;span class=&quot;code-snippet__number&quot;&gt;159183.35&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;145403.32&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;13780.03&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     苏州    &lt;span class=&quot;code-snippet__number&quot;&gt;287253.99&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;238812.03&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;48441.96&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;2&lt;/span&gt;    南京    &lt;span class=&quot;code-snippet__number&quot;&gt;187129.13&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;138530.42&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;48598.71&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     常熟    &lt;span class=&quot;code-snippet__number&quot;&gt;154442.74&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;126834.37&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;27608.37&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     无锡    &lt;span class=&quot;code-snippet__number&quot;&gt;464012.20&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;376134.98&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;87877.22&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     昆山    &lt;span class=&quot;code-snippet__number&quot;&gt;102324.46&lt;/span&gt;   &lt;span class=&quot;code-snippet__number&quot;&gt;86244.52&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;16079.94&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     苏州    &lt;span class=&quot;code-snippet__number&quot;&gt;105940.34&lt;/span&gt;   &lt;span class=&quot;code-snippet__number&quot;&gt;91419.54&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;14520.80&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;             ...        ...       ...&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;11&lt;/span&gt;   南京    &lt;span class=&quot;code-snippet__number&quot;&gt;286329.88&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;221687.11&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;64642.77&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     常熟   &lt;span class=&quot;code-snippet__number&quot;&gt;2118503.54&lt;/span&gt; &lt;span class=&quot;code-snippet__number&quot;&gt;1840868.53&lt;/span&gt; &lt;span class=&quot;code-snippet__number&quot;&gt;277635.01&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     无锡    &lt;span class=&quot;code-snippet__number&quot;&gt;633915.41&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;536866.77&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;97048.64&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     昆山    &lt;span class=&quot;code-snippet__number&quot;&gt;351023.24&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;342420.18&lt;/span&gt;   &lt;span class=&quot;code-snippet__number&quot;&gt;8603.06&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     苏州   &lt;span class=&quot;code-snippet__number&quot;&gt;1269351.39&lt;/span&gt; &lt;span class=&quot;code-snippet__number&quot;&gt;1144809.83&lt;/span&gt; &lt;span class=&quot;code-snippet__number&quot;&gt;124541.56&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;12&lt;/span&gt;   南京    &lt;span class=&quot;code-snippet__number&quot;&gt;894522.06&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;808959.32&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;85562.74&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     常熟    &lt;span class=&quot;code-snippet__number&quot;&gt;324454.49&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;262918.81&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;61535.68&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     无锡   &lt;span class=&quot;code-snippet__number&quot;&gt;1040127.19&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;856816.72&lt;/span&gt; &lt;span class=&quot;code-snippet__number&quot;&gt;183310.48&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     昆山   &lt;span class=&quot;code-snippet__number&quot;&gt;1096212.75&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;951652.87&lt;/span&gt; &lt;span class=&quot;code-snippet__number&quot;&gt;144559.87&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     苏州    &lt;span class=&quot;code-snippet__number&quot;&gt;347939.30&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;302154.25&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;45785.05&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;[&lt;span class=&quot;code-snippet__meta&quot;&gt;60 rows x 3 columns&lt;/span&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;也可以使用pandas里的pivot_table函数来实现：&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;df3 = pd.pivot_table(df, &lt;span class=&quot;code-snippet__keyword&quot;&gt;values&lt;/span&gt;=[&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;销售额&#x27;&lt;/span&gt;, &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;成本&#x27;&lt;/span&gt;], &lt;span class=&quot;code-snippet__keyword&quot;&gt;index&lt;/span&gt;=[&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;订购月份&#x27;&lt;/span&gt;, &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;所属区域&#x27;&lt;/span&gt;] , aggfunc=&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;sum&#x27;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;df3[&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;利润&#x27;&lt;/span&gt;] = df3[&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;销售额&#x27;&lt;/span&gt;] - df3[&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;成本&#x27;&lt;/span&gt;]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;df3 &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;Out&lt;/span&gt;[]: &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                  成本        销售额        利润&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;订购月份 所属区域                                &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt;    南京     &lt;span class=&quot;code-snippet__number&quot;&gt;94967.84&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;134313.61&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;39345.77&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     常熟    &lt;span class=&quot;code-snippet__number&quot;&gt;163220.07&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;177531.47&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;14311.40&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     无锡    &lt;span class=&quot;code-snippet__number&quot;&gt;231822.28&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;316418.09&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;84595.81&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     昆山    &lt;span class=&quot;code-snippet__number&quot;&gt;145403.32&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;159183.35&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;13780.03&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     苏州    &lt;span class=&quot;code-snippet__number&quot;&gt;238812.03&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;287253.99&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;48441.96&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;2&lt;/span&gt;    南京    &lt;span class=&quot;code-snippet__number&quot;&gt;138530.42&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;187129.13&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;48598.71&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     常熟    &lt;span class=&quot;code-snippet__number&quot;&gt;126834.37&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;154442.74&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;27608.37&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     无锡    &lt;span class=&quot;code-snippet__number&quot;&gt;376134.98&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;464012.20&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;87877.22&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     昆山     &lt;span class=&quot;code-snippet__number&quot;&gt;86244.52&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;102324.46&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;16079.94&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     苏州     &lt;span class=&quot;code-snippet__number&quot;&gt;91419.54&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;105940.34&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;14520.80&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;             ...        ...       ...&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;11&lt;/span&gt;   南京    &lt;span class=&quot;code-snippet__number&quot;&gt;221687.11&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;286329.88&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;64642.77&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     常熟   &lt;span class=&quot;code-snippet__number&quot;&gt;1840868.53&lt;/span&gt; &lt;span class=&quot;code-snippet__number&quot;&gt;2118503.54&lt;/span&gt; &lt;span class=&quot;code-snippet__number&quot;&gt;277635.01&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     无锡    &lt;span class=&quot;code-snippet__number&quot;&gt;536866.77&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;633915.41&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;97048.64&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     昆山    &lt;span class=&quot;code-snippet__number&quot;&gt;342420.18&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;351023.24&lt;/span&gt;   &lt;span class=&quot;code-snippet__number&quot;&gt;8603.06&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     苏州   &lt;span class=&quot;code-snippet__number&quot;&gt;1144809.83&lt;/span&gt; &lt;span class=&quot;code-snippet__number&quot;&gt;1269351.39&lt;/span&gt; &lt;span class=&quot;code-snippet__number&quot;&gt;124541.56&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;12&lt;/span&gt;   南京    &lt;span class=&quot;code-snippet__number&quot;&gt;808959.32&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;894522.06&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;85562.74&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     常熟    &lt;span class=&quot;code-snippet__number&quot;&gt;262918.81&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;324454.49&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;61535.68&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     无锡    &lt;span class=&quot;code-snippet__number&quot;&gt;856816.72&lt;/span&gt; &lt;span class=&quot;code-snippet__number&quot;&gt;1040127.19&lt;/span&gt; &lt;span class=&quot;code-snippet__number&quot;&gt;183310.48&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     昆山    &lt;span class=&quot;code-snippet__number&quot;&gt;951652.87&lt;/span&gt; &lt;span class=&quot;code-snippet__number&quot;&gt;1096212.75&lt;/span&gt; &lt;span class=&quot;code-snippet__number&quot;&gt;144559.87&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     苏州    &lt;span class=&quot;code-snippet__number&quot;&gt;302154.25&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;347939.30&lt;/span&gt;  &lt;span class=&quot;code-snippet__number&quot;&gt;45785.05&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;[&lt;span class=&quot;code-snippet__number&quot;&gt;60&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;rows&lt;/span&gt; x &lt;span class=&quot;code-snippet__number&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;columns&lt;/span&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;pandas的pivot_table的参数index/ columns/ values和Excel里的参数是对应上的（当然，我这话说了等于没说，数据透视表里不就是行/列/值吗还能有啥。）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7570498915401301&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PvP6qjUpvIoDxic4E2vnBNX99YbyRFL2QgbicG07S3sZiaN9aAhICxJ2tk6pBUARGtsbnLwcha5UPW90ymVt33tvg/640?wx_fmt=png&amp;amp;random=0.30302015305286867&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;461&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;但是我个人还是更喜欢用groupby，因为它运算速度非常快。我在打kaggle比赛的时候，有一张表是贷款人的行为信息，大概有2700万行，用groupby算了几个聚合函数，几秒钟就完成了。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;groupby的功能很全面，内置了很多aggregate函数，能够满足大部分的基本需求，如果你需要一些其他的函数，可以搭配使用apply和lambda。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;不过pandas的官方文档说了，groupby之后用apply速度非常慢，aggregate内部做过优化，所以很快，apply是没有优化的，所以建议有问题先想想别的方法，实在不行的时候再用apply。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我打比赛的时候，为了生成一个新变量，用了groupby的apply，写了这么一句：&lt;/span&gt;&lt;code&gt;&lt;span&gt;ins[&#x27;weight&#x27;] = ins[[&#x27;SK_ID_PREV&#x27;&lt;/span&gt;&lt;/code&gt;&lt;span&gt;， &lt;/span&gt;&lt;code&gt;&lt;span&gt;&#x27;DAYS_ENTRY_PAYMENT&#x27;]].groupby(&#x27;SK_ID_PREV&#x27;).apply(lambda x: 1-abs(x)/x.sum().abs()).iloc[:,1]&lt;/span&gt;&lt;/code&gt;&lt;span&gt;，1000万行的数据，足足算了十多分钟，等得我心力交瘁。&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;97617&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;绘图&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;因为Excel画出来的图能够交互，能够在图上进行一些简单操作，所以这里用的python的可视化库是plotly，案例就用我这个学期发展经济学课上的作业吧，当时的图都是用Excel画的，现在用python再画一遍。开始之前，首先加载plotly包。&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;import&lt;/span&gt; plotly.offline &lt;span class=&quot;code-snippet__keyword&quot;&gt;as&lt;/span&gt; off&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;import&lt;/span&gt; plotly.graph_objs &lt;span class=&quot;code-snippet__keyword&quot;&gt;as&lt;/span&gt; go&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;off.init_notebook_mode()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;柱状图&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;当时用Excel画了很多的柱状图，其中的一幅图是&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3968609865470852&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PvP6qjUpvIoDxic4E2vnBNX99YbyRFL2QibsF3zKRyS7wpeZRAEicwgmv7thgKXcgn0q3sAec78wRmnjAors5LMXw/640?wx_fmt=png&amp;amp;random=0.7272539676452854&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;1338&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;下面用plotly来画一下&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4057734204793028&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PvP6qjUpvIoDxic4E2vnBNX99YbyRFL2Qr2U27ayITickQA4GkDNfD9jib475ykYQNV78kILS458AL2Z9NQQorwBA/640?wx_fmt=png&amp;amp;random=0.3482342249503594&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;1836&quot;/&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;properties&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;df&lt;/span&gt; = &lt;span class=&quot;code-snippet__string&quot;&gt;pd.read_excel(&quot;plot.xlsx&quot;, sheet_name=&#x27;高等教育入学率&#x27;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;trace1&lt;/span&gt; = &lt;span class=&quot;code-snippet__string&quot;&gt;go.Bar(&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;x&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;df[&#x27;国家&#x27;],&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;y&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;df[1995],&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;1995&#x27;,&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;opacity&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;0.6,&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;marker&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;dict(&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                &lt;span class=&quot;code-snippet__attr&quot;&gt;color&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;powderblue&#x27;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                &lt;span class=&quot;code-snippet__attr&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;trace2&lt;/span&gt; = &lt;span class=&quot;code-snippet__string&quot;&gt;go.Bar(&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;x&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;df[&#x27;国家&#x27;],&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;y&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;df[2005],&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;2005&#x27;,&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;opacity&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;0.6,&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;marker&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;dict(&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                &lt;span class=&quot;code-snippet__attr&quot;&gt;color&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;aliceblue&#x27;,&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                &lt;span class=&quot;code-snippet__attr&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;trace3&lt;/span&gt; = &lt;span class=&quot;code-snippet__string&quot;&gt;go.Bar(&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;x&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;df[&#x27;国家&#x27;],&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;y&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;df[2014],&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;2014&#x27;,&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;opacity&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;0.6,&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;marker&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;dict(&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                &lt;span class=&quot;code-snippet__attr&quot;&gt;color&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;royalblue&#x27;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                &lt;span class=&quot;code-snippet__attr&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;layout&lt;/span&gt; = &lt;span class=&quot;code-snippet__string&quot;&gt;go.Layout(barmode=&#x27;group&#x27;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;data&lt;/span&gt; = &lt;span class=&quot;code-snippet__string&quot;&gt;[trace1, trace2, trace3]&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;fig&lt;/span&gt; = &lt;span class=&quot;code-snippet__string&quot;&gt;go.Figure(data, layout)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;off.plot(fig)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;雷达图&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;用Excel画的：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.517503805175038&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PvP6qjUpvIoDxic4E2vnBNX99YbyRFL2Q4ujrtmSuibE6cvkkdReXRyWyD4TUOytf4InPbGEjIYKkMfRGHKpIn9A/640?wx_fmt=png&amp;amp;random=0.5737945371892248&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;1314&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;用python画的：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5174777244688142&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PvP6qjUpvIoDxic4E2vnBNX99YbyRFL2QBczqsA8anqOFW6KtNPzKdlvnFibd3UTz9GaCTtgqEJngvnf0pm2Fb4w/640?wx_fmt=png&amp;amp;random=0.2874224792853035&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;1459&quot;/&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;properties&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;df&lt;/span&gt; = &lt;span class=&quot;code-snippet__string&quot;&gt;pd.read_excel(&#x27;plot.xlsx&#x27;, sheet_name=&#x27;政治治理&#x27;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;theta&lt;/span&gt; = &lt;span class=&quot;code-snippet__string&quot;&gt;df.columns.tolist()&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;theta.append(theta[0])&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;names&lt;/span&gt; = &lt;span class=&quot;code-snippet__string&quot;&gt;df.index&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;df[&#x27;&#x27;]&lt;/span&gt; = &lt;span class=&quot;code-snippet__string&quot;&gt;df.iloc[:,0]&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;df&lt;/span&gt; = &lt;span class=&quot;code-snippet__string&quot;&gt;np.array(df)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;trace1&lt;/span&gt; = &lt;span class=&quot;code-snippet__string&quot;&gt;go.Scatterpolar(&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;r&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;df[0],&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;theta&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;theta,&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;names[0]&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;trace2&lt;/span&gt; = &lt;span class=&quot;code-snippet__string&quot;&gt;go.Scatterpolar(&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;r&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;df[1],&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;theta&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;theta,&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;names[1]&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;trace3&lt;/span&gt; = &lt;span class=&quot;code-snippet__string&quot;&gt;go.Scatterpolar(&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;r&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;df[2],&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;theta&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;theta,&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;names[2]&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;trace4&lt;/span&gt; = &lt;span class=&quot;code-snippet__string&quot;&gt;go.Scatterpolar(&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;r&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;df[3],&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;theta&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;theta,&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;names[3]&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;data&lt;/span&gt; = &lt;span class=&quot;code-snippet__string&quot;&gt;[trace1, trace2, trace3, trace4]&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;layout&lt;/span&gt; = &lt;span class=&quot;code-snippet__string&quot;&gt;go.Layout(&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;polar&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;dict(&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                &lt;span class=&quot;code-snippet__attr&quot;&gt;radialaxis&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;dict(&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                        &lt;span class=&quot;code-snippet__attr&quot;&gt;visible&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;True,&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                        &lt;span class=&quot;code-snippet__attr&quot;&gt;range&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;[0,1]&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                        &lt;span class=&quot;code-snippet__attr&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                &lt;span class=&quot;code-snippet__attr&quot;&gt;),&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;showlegend&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;fig&lt;/span&gt; = &lt;span class=&quot;code-snippet__string&quot;&gt;go.Figure(data, layout)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;off.plot(fig)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;画起来比Excel要麻烦得多。&lt;/span&gt;&lt;br/&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;总体而言，如果画简单基本的图形，用Excel是最方便的，如果要画高级一些的或者是需要更多定制化的图形，使用python更合适。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>