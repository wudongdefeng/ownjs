<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>dac3c230a29e36861d4cf54797ad4826</guid>
<title>一文读懂 | Linux系统启动过程</title>
<link>https://toutiao.io/k/tiobp8c</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                                       &quot; id=&quot;js_content&quot;&gt;&lt;p&gt;如果有一天你们公司很重要的一台Linux服务器突然启动不了了，重装系统又浪费时间，如果是启动过程有问题，那么你知道启动过程可以快速定位系统问题，很快就可以解决。&lt;/p&gt;&lt;p&gt; &lt;/p&gt;&lt;section data-class=&quot;_mbEditor&quot; data-id=&quot;4283&quot;&gt;&lt;section&gt;&lt;h2&gt;&lt;span&gt;&lt;strong&gt;1. 上电加载BIOS&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.13144058885383805&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Wc8GWqUU6ccoWCj6NGfxRd99CqUlQgftHYebLMwLFJLOcGYhIupI1Ymic2qMhDibvBh08y1PsHjz6RQj3FDliaWBw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;951&quot;/&gt;&lt;/p&gt;&lt;p&gt;首先肯定是上电，当按下计算机的电源，计算机就会首先加载&lt;strong&gt;BIOS&lt;/strong&gt;系统，&lt;strong&gt;BIOS&lt;/strong&gt;(&lt;strong&gt;Basic Input Output System&lt;/strong&gt;)是基本输入输出系统，主要就是进行硬件检测，检测硬件能否满足运行的基本条件，叫做“硬件自检(&lt;strong&gt;Power-OnSelf-Test&lt;/strong&gt;)”，简称&lt;strong&gt;POST&lt;/strong&gt;，所以，计算机要顺利启动，就需要首先加载BIOS信息，在计算机还没加载操作系统的时候控制计算机。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;BIOS&lt;/strong&gt;程序一般被存放在主板ROM(只读存储芯片)中，即使关机或掉电，该程序也不会丢失。&lt;/p&gt;&lt;p&gt; &lt;/p&gt;&lt;section data-class=&quot;_mbEditor&quot; data-id=&quot;4283&quot;&gt;&lt;section&gt;&lt;h2&gt;&lt;span&gt;&lt;strong&gt;2. 加载MBR到内存&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.13144058885383805&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Wc8GWqUU6ccoWCj6NGfxRd99CqUlQgftKUSxOkrShud68ByhQ8DKfj4DIzghODwxMRo7DPzYej9DXVPrHjBiceA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;951&quot;/&gt;&lt;/p&gt;&lt;p&gt;在&lt;strong&gt;BIOS&lt;/strong&gt;程序的最后，将会指向计算机硬盘的&lt;strong&gt;MBR&lt;/strong&gt;(&lt;strong&gt;Master Boot Record&lt;/strong&gt;)主引导扇区，就是启动盘的第一个扇区，硬盘上的&lt;strong&gt;MBR&lt;/strong&gt;包含基本的Boot Loader(446字节)和一个小的分区表(64字节)及分隔标识(2字节)，它是一个512字节大小的扇区。&lt;/p&gt;&lt;p&gt;                                                                       &lt;/p&gt;&lt;p&gt;系统读取到&lt;strong&gt;BIOS&lt;/strong&gt;所指向的硬盘的&lt;strong&gt;MBR&lt;/strong&gt;后，就会将其load到内存(RAM)中，然后&lt;strong&gt;BIOS&lt;/strong&gt;就会将控制权转交给&lt;strong&gt;MBR&lt;/strong&gt;。&lt;/p&gt;&lt;p&gt; &lt;/p&gt;&lt;section data-class=&quot;_mbEditor&quot; data-id=&quot;4283&quot;&gt;&lt;section&gt;&lt;h2&gt;&lt;span&gt;&lt;strong&gt;3. GRUB引导&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; &lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.13144058885383805&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Wc8GWqUU6ccoWCj6NGfxRd99CqUlQgft4ibCOc3VWNlyKlI0uYLKFkn6RlDERibhtWzicAA2VQ4ySlribaA3FDDlpQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;951&quot;/&gt;&lt;/p&gt;&lt;p&gt;在Linux资料中，被俗称&lt;strong&gt;GRUB&lt;/strong&gt;的就是Boot Loader，&lt;strong&gt;GRUB&lt;/strong&gt;是GRand Unified Bootloader的缩写，&lt;strong&gt;MBR&lt;/strong&gt;的前446字节存放的就是&lt;strong&gt;GRUB&lt;/strong&gt;程序的一部分，它是一个多重操作系统启动管理器，用来引导不同系统，&lt;strong&gt;GRUB&lt;/strong&gt;是目前Linux环境中最流行的启动管理器。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;如果你的计算机上配置了双操作系统，使用者就是在&lt;strong&gt;GRUB&lt;/strong&gt;中进行选择究竟启动哪个操作系统。&lt;/p&gt;&lt;p&gt; &lt;/p&gt;&lt;section data-class=&quot;_mbEditor&quot; data-id=&quot;4283&quot;&gt;&lt;section&gt;&lt;h2&gt;&lt;span&gt;&lt;strong&gt;4. 加载内核(Kernel)&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.14931650893796003&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Wc8GWqUU6ccoWCj6NGfxRd99CqUlQgftYx7pqcDgJczCRyaKNL7asMbFVa49WYLTO3cphyBgUCtNQzURjD3EVA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;951&quot;/&gt;&lt;/p&gt;&lt;p&gt;系统启动到这一步，首先会加载系统的&lt;strong&gt;Kernel&lt;/strong&gt;，&lt;strong&gt;Kernel&lt;/strong&gt;是现代操作系统的核心，直接负责管理硬件。&lt;/p&gt;&lt;p&gt; &lt;/p&gt;&lt;section data-class=&quot;_mbEditor&quot; data-id=&quot;4283&quot;&gt;&lt;section&gt;&lt;h2&gt;&lt;span&gt;&lt;strong&gt;5. 设定Inittab运行等级&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.29232386961093587&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Wc8GWqUU6ccoWCj6NGfxRd99CqUlQgftXg7Gu0t3mD9wEXib7m2ica7k8OGfAYqJkGOEiciaEwFaWcJnAkblk0dpLg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;951&quot;/&gt;&lt;/p&gt;&lt;p&gt;在内核加载完毕后，会启动Linux操作系统第一个守护进程init，这个进程的PID是1，所有的进程都是它的子进程。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;通过这个进程读取/etc/inittab文件，/etc/inittab文件的作用是设定Linux的运行等级，文件内容大致如下：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;# Default runlevel. The runlevels used by RHS are:&lt;br/&gt;#   &lt;span&gt;0&lt;/span&gt; - halt (Do NOT &lt;span&gt;set&lt;/span&gt; initdefault to this)&lt;br/&gt;#   &lt;span&gt;1&lt;/span&gt; - Single user mode&lt;br/&gt;#   &lt;span&gt;2&lt;/span&gt; - Multiuser, without NFS (The same as &lt;span&gt;3&lt;/span&gt;, &lt;span&gt;if&lt;/span&gt; you &lt;span&gt;do&lt;/span&gt; not have networking)&lt;br/&gt;#   3 - Full multiuser mode&lt;br/&gt;#   4 - unused&lt;br/&gt;#   5 - X11&lt;br/&gt;#   6 - reboot (Do NOT &lt;span&gt;set&lt;/span&gt; initdefault to this)&lt;br/&gt;&lt;span&gt;# &lt;br/&gt;id:3:initdefault:&lt;/span&gt;&lt;br/&gt; &lt;br/&gt;...&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;从文件内容知道Linux系统运行等级一共有7种：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span&gt;0：关机模式，运行等级为0，系统会立即关机，在系统启动后可以利用这种等级对系统进行关机操作，但是不允许将系统下次启动时的等级设定为0，否则系统将无法正常启动（启动后立即关机）。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;1：单用户模式，类似于windows系统下的安全模式，具有ROOT权限。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2：无网络支持的多用户模式，顾名思义就是支持多用户登录&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;3：字符界面多用户模式，文本命令行界面，一般服务器都是此模式&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;4：保留，未使用模式&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;5：图形界面多用户模式，系统启动之后会进入到图形化桌面系统中&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;6：重新引导系统，重启模式，千万不要设置为6，和0相似。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;/etc/inittab文件内容中的设定的行：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;id:&lt;span&gt;3&lt;/span&gt;:initdefault:&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;表示启动的层级为3，即图形界面多用户模式。一般3和5比较常用，如果需要其它等级，可以手动修改这个值。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;每一个运行级别都在/etc目录下有一个对应的子目录，可以指定每一个运行级别需要加载哪些程序，rcN.d的字母d是directory的意思，表示这是一个目录。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.44935064935064933&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Wc8GWqUU6ccoWCj6NGfxRd99CqUlQgft5p32wlo80WaibyTcMIELUGKyK9LQgs3SHxmfiaFzhiaiam6NiaibzSOxfMNQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;385&quot;/&gt;&lt;/p&gt;&lt;p&gt; &lt;/p&gt;&lt;section data-class=&quot;_mbEditor&quot; data-id=&quot;4283&quot;&gt;&lt;section&gt;&lt;h2&gt;&lt;span&gt;&lt;strong&gt;6. 加载rc.sysinit&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.29232386961093587&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Wc8GWqUU6ccoWCj6NGfxRd99CqUlQgft2nib2oVWNa0Q83lXjY9OuJKmOvWCmSyR227hcD2kwxnTqaCTVWH09sw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;951&quot;/&gt;&lt;/p&gt;&lt;p&gt;读取完运行等级后，Linux系统就会运行第一个用户层进程：/etc/rc.d/rc.sysinit，该进程的功能是设定PATH变量、设定网络配置、启动/swap分区、设定/proc、系统函数和Selinux等等。&lt;/p&gt;&lt;p&gt; &lt;/p&gt;&lt;section data-class=&quot;_mbEditor&quot; data-id=&quot;4283&quot;&gt;&lt;section&gt;&lt;h2&gt;&lt;span&gt;&lt;strong&gt;7. 加载内核模块&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.29232386961093587&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Wc8GWqUU6ccoWCj6NGfxRd99CqUlQgftMke4liaN8jPm42u0uvKsKhanPIWBYIWwlsEmMDiaWAIiap6mh1VIibUc0A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;951&quot;/&gt;&lt;/p&gt;&lt;p&gt;完成上述流程后，会读取/etc/modules.conf文件以及/etc/modules.c目录下的文件来加载系统的内核模块。&lt;/p&gt;&lt;p&gt; &lt;/p&gt;&lt;section data-class=&quot;_mbEditor&quot; data-id=&quot;4283&quot;&gt;&lt;section&gt;&lt;h2&gt;&lt;span&gt;&lt;strong&gt;8. 启动运行级别程序&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.29232386961093587&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Wc8GWqUU6ccoWCj6NGfxRd99CqUlQgftU5wOTl1ol5qoqA1wQZohVp1AsNjGqG8iadJVEcdrwgyPIjicpNe5QibkQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;951&quot;/&gt;&lt;/p&gt;&lt;p&gt;根据前面设定的运行等级，系统会执行/etc/rc0.d/到/etc/rc6.d/中相应的脚本程序，来完成相应的初始化工作和启动相应的服务，都是一些服务程序。其中以&lt;strong&gt;S&lt;/strong&gt;开头表示系统即将启动的程序，如果以&lt;strong&gt;K&lt;/strong&gt;开头，则代表停止该服务。&lt;strong&gt;S&lt;/strong&gt;和&lt;strong&gt;K&lt;/strong&gt;后紧跟的数字为启动顺序编号。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.6891891891891891&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Wc8GWqUU6ccoWCj6NGfxRd99CqUlQgftib3g0JbasKQCyUMicQRfcDiaalYn788zSUq5ibsTYnMQyM1TJCDiaP3q9Ag/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;962&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;前面提到，每一个运行级别都在/etc目录下有一个对应的子目录，但是如果每一个运行级别都要执行同一个程序，那就要每一个子目录里面都要拷贝一个这个程序进去，那这样就会有一个问题：如果要修改一个程序，修改完岂不是每一个子目录里面都要修改一遍或者都要重新拷贝一遍？&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;所以Linux的解决办法就是每一个/etc/rcN.d目录下的文件都设为链接文件，下图中看到箭头指向/etc/init.d目录下的文件，所以实际执行的是/etc/init.d目录下的文件，只需要修改一次/etc/init.d目录下的程序就搞定了。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.694954128440367&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Wc8GWqUU6ccoWCj6NGfxRd99CqUlQgftiaGM18YniaaqdHmvO5rxVJbGMGE9Tu63icpM3ACkZqGbTgPr0Pe4uGibZQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;872&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;至于什么是链接文件，可以看之前写的&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzIwNDQwMjIwNQ==&amp;amp;mid=2247483954&amp;amp;idx=1&amp;amp;sn=2fe835d6ca01817557e836bee6f157c5&amp;amp;chksm=96c1f940a1b6705655bc1cb58a2a0e4bdb0000f965a0b8b58a3ab5f27ebc1b6446a40d606011&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;彻底明白Linux硬链接和软链接&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;&lt;strong&gt;彻底明白Linux硬链接和软链接&lt;/strong&gt;&lt;/span&gt;&lt;/a&gt;就可以明白。&lt;/p&gt;&lt;p&gt; &lt;/p&gt;&lt;section data-class=&quot;_mbEditor&quot; data-id=&quot;4283&quot;&gt;&lt;section&gt;&lt;h2&gt;&lt;span&gt;&lt;strong&gt;9. 读取rc.local文件&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.4216614090431125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Wc8GWqUU6ccoWCj6NGfxRd99CqUlQgftt1wmkPibfKiarU2YC3ib0p74pRHXeOrbgmPjeM0LJtdVwiaChxts4XfwhQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;951&quot;/&gt;&lt;/p&gt;&lt;p&gt;启动完服务程序后，会读取执行/etc/rc.d/rc.local文件，我们可以对该文件设定一些关键核心业务开机自启，也就是Linux留给用户进行个性化的地方，你可以把你想要设置和启动的东西放到这里。&lt;/p&gt;&lt;p&gt; &lt;/p&gt;&lt;section data-class=&quot;_mbEditor&quot; data-id=&quot;4283&quot;&gt;&lt;section&gt;&lt;h2&gt;&lt;span&gt;&lt;strong&gt;10. 执行/bin/login&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.4216614090431125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Wc8GWqUU6ccoWCj6NGfxRd99CqUlQgftDRquibuthwBVia42kuiao2HPRwRdBcsvbM2bxUhebWYjaJBJZFvSwJWiaA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;951&quot;/&gt;&lt;/p&gt;&lt;p&gt;到这里，Linux系统启动结束，最后执行/bin/login程序，启动到系统登录界面，等待用户输入用户名和密码，然后就可登录到&lt;strong&gt;Shell&lt;/strong&gt;终端。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-id=&quot;89429&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;span&gt;end&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-tools-id=&quot;74666&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;一口Linux &lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;关注，回复【&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1024&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;】海量Linux资料赠送&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mp-common-profile class=&quot;js_uneditable js_wx_tap_highlight&quot; data-id=&quot;MzUxMjEyNDgyNw==&quot; data-pluginname=&quot;mpprofile&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/icRxcMBeJfc8535w2vKlsLPf5hwdMjpYrzuVCHx0rcQmvv8rYqTFtIyic5qErtciaibqaIOWgeKkDsOMeae4HciaUaw/0?wx_fmt=png&amp;amp;wx_head=1&quot; data-nickname=&quot;一口Linux&quot; data-alias=&quot;yikoulinux&quot; data-signature=&quot;一起学习嵌入式，Linux，网络，驱动，arm知识。&quot; data-from=&quot;2&quot; data-is_biz_ban=&quot;0&quot; has-insert-preloading=&quot;1&quot; data-index=&quot;0&quot; data-origin_num=&quot;219&quot; data-isban=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;精彩文章合集&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;文章推荐&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;☞&lt;/span&gt;【专辑】&lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzUxMjEyNDgyNw==&amp;amp;action=getalbum&amp;amp;album_id=1614665559315382276#wechat_redirect&quot; textvalue=&quot;从0学ARM&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot;&gt;&lt;span&gt;ARM&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;☞&lt;/span&gt;【专辑】&lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzUxMjEyNDgyNw==&amp;amp;action=getalbum&amp;amp;album_id=1629876820810465283#wechat_redirect&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot;&gt;&lt;span&gt;粉丝问答&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;☞&lt;/span&gt;【专辑】&lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzUxMjEyNDgyNw==&amp;amp;action=getalbum&amp;amp;album_id=1479949091139813387#wechat_redirect&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot;&gt;所有原创&lt;/a&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;☞&lt;/span&gt;【&lt;span&gt;专辑&lt;/span&gt;】&lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzUxMjEyNDgyNw==&amp;amp;action=getalbum&amp;amp;album_id=1507350615537025026#wechat_redirect&quot; textvalue=&quot;linux&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot;&gt;&lt;span&gt;linux&lt;/span&gt;&lt;/a&gt;&lt;span&gt;入门&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;☞&lt;/span&gt;【&lt;span&gt;专辑&lt;/span&gt;】&lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzUxMjEyNDgyNw==&amp;amp;action=getalbum&amp;amp;album_id=1598710257097179137#wechat_redirect&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot;&gt;计算机网络&lt;/a&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;☞&lt;/span&gt;【&lt;span&gt;专辑&lt;/span&gt;】&lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzUxMjEyNDgyNw==&amp;amp;action=getalbum&amp;amp;album_id=1502410824114569216#wechat_redirect&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot;&gt;&lt;span&gt;Linux驱动&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;☞&lt;/span&gt;【干货】&lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUxMjEyNDgyNw==&amp;amp;mid=2247496985&amp;amp;idx=1&amp;amp;sn=c3d5e8406ff328be92d3ef4814108cd0&amp;amp;chksm=f96b87edce1c0efb6f60a6a0088c714087e4a908db1938c44251cdd5175462160e26d50baf24&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;&lt;span&gt;嵌入式驱动工程师学习路线&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;☞&lt;/span&gt;【干货】&lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUxMjEyNDgyNw==&amp;amp;mid=2247497822&amp;amp;idx=1&amp;amp;sn=1e2aed9294f95ae43b1ad057c2262980&amp;amp;chksm=f96b8aaace1c03bc2c9b0c3a94c023062f15e9ccdea20cd76fd38967b8f2eaad4dfd28e1ca3d&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;&lt;span&gt;Linux嵌入式所有知识点-思维导图&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/div&gt;

          

          



                    
          &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>0927adfd9edbf245bb65de949472ba6e</guid>
<title>聊聊异步编程的 7 种实现方式</title>
<link>https://toutiao.io/k/gz8v798</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                                       &quot; id=&quot;js_content&quot;&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;&lt;span&gt;大家好，我是 Tom哥&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最近有很多小伙伴给我留言，能不能总结下异步编程，今天就和大家简单聊聊这个话题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;早期的系统是同步的，容易理解，我们来看个例子&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;同步编程&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;1.0350109409190371&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/2KTof9YshwfJypqK9F6GHjia2dpB3O0dIKZiazre70MKYVbZ7qiaiapovwDIWiaNeywfxic12rBHibib4L399CcR2IqdSw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;914&quot;/&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当用户创建一笔电商交易订单时，要经历的业务逻辑流程还是很长的，每一步都要耗费一定的时间，那么整体的RT就会比较长。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;于是，聪明的人们开始思考能不能将一些非核心业务从主流程中剥离出来，于是有了&lt;code&gt;异步编程&lt;/code&gt;雏形。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;异步编程是让程序并发运行的一种手段。它允许多个事件同时发生，当程序调用需要长时间运行的方法时，它不会阻塞当前的执行流程，程序可以继续运行。&lt;/p&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;1.1508620689655173&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/2KTof9YshwfJypqK9F6GHjia2dpB3O0dIQbp3pVw5scBs2QQo8TsfJXWaSqAk549MWN5AvmQMoUCSe9xUNVvsPw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;928&quot;/&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;核心思路：采用多线程优化性能，将串行操作变成并行操作。异步模式设计的程序可以显著减少线程等待，从而在高吞吐量场景中，极大提升系统的整体性能，显著降低时延。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;接下来，我们来讲下异步有哪些编程实现方式&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;一、线程 Thread&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;直接继承 &lt;code&gt;Thread类&lt;/code&gt; 是创建异步线程最简单的方式。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;首先，创建Thread子类，普通类或匿名内部类方式；然后创建子类实例；最后通过start()方法启动线程。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;public class AsyncThread extends Thread{&lt;br/&gt;    @Override&lt;br/&gt;    public void &lt;span&gt;&lt;span&gt;run&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;        System.out.println(&lt;span&gt;&quot;当前线程名称:&quot;&lt;/span&gt; + this.getName() + &lt;span&gt;&quot;, 执行线程名称:&quot;&lt;/span&gt; + Thread.currentThread().getName() + &lt;span&gt;&quot;-hello&quot;&lt;/span&gt;);&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;public static void main(String[] args) {&lt;br/&gt;&lt;br/&gt;  // 模拟业务流程&lt;br/&gt;  // .......&lt;br/&gt;  &lt;br/&gt;    // 创建异步线程 &lt;br/&gt;    AsyncThread asyncThread = new AsyncThread();&lt;br/&gt;&lt;br/&gt;    // 启动异步线程&lt;br/&gt;    asyncThread.start();&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当然如果每次都创建一个 &lt;code&gt;Thread线程&lt;/code&gt;，频繁的创建、销毁，浪费系统资源。我们可以采用线程池&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;@Bean(name = &lt;span&gt;&quot;executorService&quot;&lt;/span&gt;)&lt;br/&gt;public ExecutorService &lt;span&gt;&lt;span&gt;downloadExecutorService&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; new ThreadPoolExecutor(20, 40, 60, TimeUnit.SECONDS, new ArrayBlockingQueue&amp;lt;&amp;gt;(2000),&lt;br/&gt;            new ThreadFactoryBuilder().setNameFormat(&lt;span&gt;&quot;defaultExecutorService-%d&quot;&lt;/span&gt;).build(),&lt;br/&gt;            (r, executor) -&amp;gt; log.error(&lt;span&gt;&quot;defaultExecutor pool is full! &quot;&lt;/span&gt;));&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;将业务逻辑封装到 &lt;code&gt;Runnable&lt;/code&gt; 或 &lt;code&gt;Callable&lt;/code&gt; 中，交由 &lt;code&gt;线程池&lt;/code&gt; 来执行&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.534375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/2KTof9YshwfJypqK9F6GHjia2dpB3O0dIlIyj733jvWGfVCWnejzKS73xL3rIicrpP3b12KfFXs1F52iaibJic5mjeQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;二、Future&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上述方式虽然达到了多线程并行处理，但有些业务不仅仅要执行过程，还要获取执行结果。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Java 从1.5版本开始，提供了 &lt;code&gt;Callable&lt;/code&gt; 和 &lt;code&gt;Future&lt;/code&gt;，可以在任务执行完毕之后得到任务执行结果。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当然也提供了其他功能，如：取消任务、查询任务是否完成等&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Future类位于java.util.concurrent包下，接口定义：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;public interface Future&amp;lt;V&amp;gt; {&lt;br/&gt;    boolean cancel(boolean mayInterruptIfRunning);&lt;br/&gt;    boolean isCancelled();&lt;br/&gt;    boolean isDone();&lt;br/&gt;    V get() throws InterruptedException, ExecutionException;&lt;br/&gt;    V get(long timeout, TimeUnit unit)&lt;br/&gt;        throws InterruptedException, ExecutionException, TimeoutException;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;方法描述：&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;cancel()：取消任务，如果取消任务成功返回true，如果取消任务失败则返回false&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;isCancelled()：表示任务是否被取消成功，如果在任务正常完成前被取消成功，则返回 true&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;isDone()：表示任务是否已经完成，如果完成，返回true&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;get()：获取执行结果，这个方法会产生阻塞，会一直等到任务执行完毕才返回&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;get(long timeout, TimeUnit unit)：用来获取执行结果，如果在指定时间内，还没获取到结果，就直接返回null&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;代码示例：&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;public class CallableAndFuture {&lt;br/&gt;&lt;br/&gt;    public static ExecutorService executorService = new ThreadPoolExecutor(4, 40,&lt;br/&gt;            0L, TimeUnit.MILLISECONDS,&lt;br/&gt;            new LinkedBlockingQueue&amp;lt;Runnable&amp;gt;(1024), new ThreadFactoryBuilder()&lt;br/&gt;            .setNameFormat(&lt;span&gt;&quot;demo-pool-%d&quot;&lt;/span&gt;).build(), new ThreadPoolExecutor.AbortPolicy());&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;    static class MyCallable implements Callable&amp;lt;String&amp;gt; {&lt;br/&gt;        @Override&lt;br/&gt;        public String call() throws Exception {&lt;br/&gt;            &lt;span&gt;return&lt;/span&gt; &lt;span&gt;&quot;异步处理，Callable 返回结果&quot;&lt;/span&gt;;&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    public static void main(String[] args) {&lt;br/&gt;        Future&amp;lt;String&amp;gt; future = executorService.submit(new MyCallable());&lt;br/&gt;        try {&lt;br/&gt;            System.out.println(future.get());&lt;br/&gt;        } catch (Exception e) {&lt;br/&gt;            // nodo&lt;br/&gt;        } finally {&lt;br/&gt;            executorService.shutdown();&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Future 表示一个可能还没有完成的异步任务的结果，通过 &lt;code&gt;get&lt;/code&gt; 方法获取执行结果，该方法会阻塞直到任务返回结果。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;三、FutureTask&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;FutureTask&lt;/code&gt; 实现了 &lt;code&gt;RunnableFuture&lt;/code&gt; 接口，则 &lt;code&gt;RunnableFuture&lt;/code&gt; 接口继承了 &lt;code&gt;Runnable&lt;/code&gt; 接口和 &lt;code&gt;Future&lt;/code&gt; 接口，所以可以将 &lt;code&gt;FutureTask&lt;/code&gt; 对象作为任务提交给 &lt;code&gt;ThreadPoolExecutor&lt;/code&gt; 去执行，也可以直接被 &lt;code&gt;Thread&lt;/code&gt; 执行；又因为实现了 &lt;code&gt;Future&lt;/code&gt; 接口，所以也能用来获得任务的执行结果。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;FutureTask 构造函数：&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;public FutureTask(Callable&amp;lt;V&amp;gt; callable)&lt;br/&gt;public FutureTask(Runnable runnable, V result)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;FutureTask 常用来封装 &lt;code&gt;Callable&lt;/code&gt; 和 &lt;code&gt;Runnable&lt;/code&gt;，可以作为一个任务提交到线程池中执行。除了作为一个独立的类之外，也提供了一些功能性函数供我们创建自定义 task 类使用。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;FutureTask 线程安全由CAS来保证。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;ExecutorService executor = Executors.newCachedThreadPool();&lt;br/&gt;// FutureTask包装callbale任务，再交给线程池执行&lt;br/&gt;FutureTask&amp;lt;Integer&amp;gt; futureTask = new FutureTask&amp;lt;&amp;gt;(() -&amp;gt; {&lt;br/&gt;    System.out.println(&lt;span&gt;&quot;子线程开始计算：&quot;&lt;/span&gt;);&lt;br/&gt;    Integer sum = 0;&lt;br/&gt;    &lt;span&gt;for&lt;/span&gt; (int i = 1; i &amp;lt;= 100; i++)&lt;br/&gt;        sum += i;&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; sum;&lt;br/&gt;});&lt;br/&gt;&lt;br/&gt;// 线程池执行任务， 运行结果在 futureTask 对象里面&lt;br/&gt;executor.submit(futureTask);&lt;br/&gt;&lt;br/&gt;try {&lt;br/&gt;    System.out.println(&lt;span&gt;&quot;task运行结果计算的总和为：&quot;&lt;/span&gt; + futureTask.get());&lt;br/&gt;} catch (Exception e) {&lt;br/&gt;    e.printStackTrace();&lt;br/&gt;}&lt;br/&gt;executor.shutdown();&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;Callable 和 Future 的区别：Callable 用于产生结果，Future 用于获取结果&lt;/p&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;1.0985401459854014&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/2KTof9YshwfJypqK9F6GHjia2dpB3O0dIt5iaQqw18JTB8oKpCIvaTAmHMgRpXm9qJ3wMLM2BRCLIVs7B1S9kHUA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1096&quot;/&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果是对多个任务多次自由串行、或并行组合，涉及多个线程之间同步阻塞获取结果，Future 代码实现会比较繁琐，需要我们手动处理各个交叉点，很容易出错。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;四、异步框架 CompletableFuture&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Future 类通过 &lt;code&gt;get()&lt;/code&gt; 方法阻塞等待获取异步执行的运行结果，性能比较差。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;JDK1.8 中，Java 提供了 &lt;code&gt;CompletableFuture&lt;/code&gt; 类，它是基于异步函数式编程。相对阻塞式等待返回结果，&lt;code&gt;CompletableFuture&lt;/code&gt; 可以通过回调的方式来处理计算结果，实现了异步非阻塞，性能更优。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;优点&lt;/strong&gt;：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;异步任务结束时，会自动回调某个对象的方法&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;异步任务出错时，会自动回调某个对象的方法&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;主线程设置好回调后，不再关心异步任务的执行&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;泡茶示例：&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.6552315608919382&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/2KTof9YshwfJypqK9F6GHjia2dpB3O0dIGS8Btb3ndG3Shj2XxibYDyleFJ74DOtUibykrMEYP2icFCPrvktHkF6jw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1166&quot;/&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;(内容摘自：极客时间的《Java 并发编程实战》)&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;//任务1：洗水壶-&amp;gt;烧开水&lt;br/&gt;CompletableFuture&amp;lt;Void&amp;gt; f1 =&lt;br/&gt;        CompletableFuture.runAsync(() -&amp;gt; {&lt;br/&gt;            System.out.println(&lt;span&gt;&quot;T1:洗水壶...&quot;&lt;/span&gt;);&lt;br/&gt;            sleep(1, TimeUnit.SECONDS);&lt;br/&gt;&lt;br/&gt;            System.out.println(&lt;span&gt;&quot;T1:烧开水...&quot;&lt;/span&gt;);&lt;br/&gt;            sleep(15, TimeUnit.SECONDS);&lt;br/&gt;        });&lt;br/&gt;&lt;br/&gt;//任务2：洗茶壶-&amp;gt;洗茶杯-&amp;gt;拿茶叶&lt;br/&gt;CompletableFuture&amp;lt;String&amp;gt; f2 =&lt;br/&gt;        CompletableFuture.supplyAsync(() -&amp;gt; {&lt;br/&gt;            System.out.println(&lt;span&gt;&quot;T2:洗茶壶...&quot;&lt;/span&gt;);&lt;br/&gt;            sleep(1, TimeUnit.SECONDS);&lt;br/&gt;&lt;br/&gt;            System.out.println(&lt;span&gt;&quot;T2:洗茶杯...&quot;&lt;/span&gt;);&lt;br/&gt;            sleep(2, TimeUnit.SECONDS);&lt;br/&gt;&lt;br/&gt;            System.out.println(&lt;span&gt;&quot;T2:拿茶叶...&quot;&lt;/span&gt;);&lt;br/&gt;            sleep(1, TimeUnit.SECONDS);&lt;br/&gt;            &lt;span&gt;return&lt;/span&gt; &lt;span&gt;&quot;龙井&quot;&lt;/span&gt;;&lt;br/&gt;        });&lt;br/&gt;&lt;br/&gt;//任务3：任务1和任务2完成后执行：泡茶&lt;br/&gt;CompletableFuture&amp;lt;String&amp;gt; f3 =&lt;br/&gt;        f1.thenCombine(f2, (__, tf) -&amp;gt; {&lt;br/&gt;            System.out.println(&lt;span&gt;&quot;T1:拿到茶叶:&quot;&lt;/span&gt; + tf);&lt;br/&gt;            System.out.println(&lt;span&gt;&quot;T1:泡茶...&quot;&lt;/span&gt;);&lt;br/&gt;            &lt;span&gt;return&lt;/span&gt; &lt;span&gt;&quot;上茶:&quot;&lt;/span&gt; + tf;&lt;br/&gt;        });&lt;br/&gt;&lt;br/&gt;//等待任务3执行结果&lt;br/&gt;System.out.println(f3.join());&lt;br/&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;CompletableFuture 提供了非常丰富的API，大约有50种处理串行，并行，组合以及处理错误的方法。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;更多内容移步之前写的一篇文章，&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=Mzg2NzYyNjQzNg==&amp;amp;mid=2247489365&amp;amp;idx=1&amp;amp;sn=b0866f630a79e882b71d95b5bd3ed815&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;搞定 CompletableFuture，并发异步编程和编写串行程序还有什么区别？&lt;/a&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;五、 SpringBoot 注解 @Async&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;除了硬编码的异步编程处理方式，SpringBoot 框架还提供了 &lt;code&gt;注解式&lt;/code&gt; 解决方案，以 &lt;code&gt;方法体&lt;/code&gt; 为边界，方法体内部的代码逻辑全部按异步方式执行。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;首先，使用 &lt;code&gt;@EnableAsync&lt;/code&gt; 启用异步注解&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;@SpringBootApplication&lt;br/&gt;@EnableAsync&lt;br/&gt;public class StartApplication {&lt;br/&gt;&lt;br/&gt;    public static void main(String[] args) {&lt;br/&gt;        SpringApplication.run(StartApplication.class, args);&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;自定义线程池：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;@Configuration&lt;br/&gt;@Slf4j&lt;br/&gt;public class ThreadPoolConfiguration {&lt;br/&gt;&lt;br/&gt;    @Bean(name = &lt;span&gt;&quot;defaultThreadPoolExecutor&quot;&lt;/span&gt;, destroyMethod = &lt;span&gt;&quot;shutdown&quot;&lt;/span&gt;)&lt;br/&gt;    public ThreadPoolExecutor &lt;span&gt;&lt;span&gt;systemCheckPoolExecutorService&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; new ThreadPoolExecutor(3, 10, 60, TimeUnit.SECONDS,&lt;br/&gt;                new LinkedBlockingQueue&amp;lt;Runnable&amp;gt;(10000),&lt;br/&gt;                new ThreadFactoryBuilder().setNameFormat(&lt;span&gt;&quot;default-executor-%d&quot;&lt;/span&gt;).build(),&lt;br/&gt;                (r, executor) -&amp;gt; log.error(&lt;span&gt;&quot;system pool is full! &quot;&lt;/span&gt;));&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在异步处理的方法上添加注解 &lt;code&gt;@Async&lt;/code&gt; ，当对 &lt;code&gt;execute 方法&lt;/code&gt; 调用时，通过自定义的线程池 &lt;code&gt;defaultThreadPoolExecutor&lt;/code&gt; 异步化执行  &lt;code&gt;execute 方法&lt;/code&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;@Service&lt;br/&gt;public class AsyncServiceImpl implements AsyncService {&lt;br/&gt;&lt;br/&gt;    @Async(&lt;span&gt;&quot;defaultThreadPoolExecutor&quot;&lt;/span&gt;)&lt;br/&gt;    public Boolean execute(Integer num) {&lt;br/&gt;        System.out.println(&lt;span&gt;&quot;线程：&quot;&lt;/span&gt; + Thread.currentThread().getName() + &lt;span&gt;&quot; , 任务：&quot;&lt;/span&gt; + num);&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用 @Async 注解标记的方法，称为异步方法。在spring boot应用中使用 @Async 很简单：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;调用异步方法类上或者启动类加上注解 @EnableAsync&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;在需要被异步调用的方法外加上 @Async&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;所使用的 @Async 注解方法的类对象应该是Spring容器管理的bean对象；&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;六、Spring ApplicationEvent 事件&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;事件机制在一些大型项目中被经常使用，Spring 专门提供了一套事件机制的接口，满足了架构原则上的解耦。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;ApplicationContext&lt;/code&gt; 通过 &lt;code&gt;ApplicationEvent&lt;/code&gt; 类和 &lt;code&gt;ApplicationListener&lt;/code&gt; 接口进行事件处理。如果将实现 &lt;code&gt;ApplicationListener&lt;/code&gt; 接口的 bean 注入到上下文中，则每次使用 &lt;code&gt;ApplicationContext&lt;/code&gt; 发布 &lt;code&gt;ApplicationEvent&lt;/code&gt; 时，都会通知该 bean。本质上，这是标准的&lt;code&gt;观察者设计模式&lt;/code&gt;。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;ApplicationEvent 是由 Spring 提供的所有 Event 类的基类&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;首先，自定义业务事件子类，继承自 &lt;code&gt;ApplicationEvent&lt;/code&gt;，通过泛型注入业务模型参数类。相当于 MQ 的消息体。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;public class OrderEvent extends AbstractGenericEvent&amp;lt;OrderModel&amp;gt; {&lt;br/&gt;    public OrderEvent(OrderModel &lt;span&gt;source&lt;/span&gt;) {&lt;br/&gt;        super(&lt;span&gt;source&lt;/span&gt;);&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然后，编写事件监听器。&lt;code&gt;ApplicationListener&lt;/code&gt; 接口是由 Spring 提供的事件订阅者必须实现的接口，我们需要定义一个子类，继承 &lt;code&gt;ApplicationListener&lt;/code&gt;。相当于 MQ 的消费端&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;@Component&lt;br/&gt;public class OrderEventListener implements ApplicationListener&amp;lt;OrderEvent&amp;gt; {&lt;br/&gt;    @Override&lt;br/&gt;    public void onApplicationEvent(OrderEvent event) {&lt;br/&gt;&lt;br/&gt;        System.out.println(&lt;span&gt;&quot;【OrderEventListener】监听器处理！&quot;&lt;/span&gt; + JSON.toJSONString(event.getSource()));&lt;br/&gt;&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最后，发布事件，把某个事件告诉所有与这个事件相关的监听器。相当于 MQ 的生产端。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;OrderModel orderModel = new OrderModel();&lt;br/&gt;orderModel.setOrderId((long) i);&lt;br/&gt;orderModel.setBuyerName(&lt;span&gt;&quot;Tom-&quot;&lt;/span&gt; + i);&lt;br/&gt;orderModel.setSellerName(&lt;span&gt;&quot;judy-&quot;&lt;/span&gt; + i);&lt;br/&gt;orderModel.setAmount(100L);&lt;br/&gt;// 发布Spring事件通知&lt;br/&gt;SpringUtils.getApplicationContext().publishEvent(new OrderEvent(orderModel));&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;加个餐：&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;[消费端]线程：http-nio-8090-exec-1，消费事件 {&lt;span&gt;&quot;amount&quot;&lt;/span&gt;:100.0,&lt;span&gt;&quot;buyerName&quot;&lt;/span&gt;:&lt;span&gt;&quot;Tom-1&quot;&lt;/span&gt;,&lt;span&gt;&quot;orderId&quot;&lt;/span&gt;:1,&lt;span&gt;&quot;sellerName&quot;&lt;/span&gt;:&lt;span&gt;&quot;judy-1&quot;&lt;/span&gt;}&lt;br/&gt;[生产端]线程：http-nio-8090-exec-1，发布事件 1&lt;br/&gt;[消费端]线程：http-nio-8090-exec-1，消费事件 {&lt;span&gt;&quot;amount&quot;&lt;/span&gt;:100.0,&lt;span&gt;&quot;buyerName&quot;&lt;/span&gt;:&lt;span&gt;&quot;Tom-2&quot;&lt;/span&gt;,&lt;span&gt;&quot;orderId&quot;&lt;/span&gt;:2,&lt;span&gt;&quot;sellerName&quot;&lt;/span&gt;:&lt;span&gt;&quot;judy-2&quot;&lt;/span&gt;}&lt;br/&gt;[生产端]线程：http-nio-8090-exec-1，发布事件 2&lt;br/&gt;[消费端]线程：http-nio-8090-exec-1，消费事件 {&lt;span&gt;&quot;amount&quot;&lt;/span&gt;:100.0,&lt;span&gt;&quot;buyerName&quot;&lt;/span&gt;:&lt;span&gt;&quot;Tom-3&quot;&lt;/span&gt;,&lt;span&gt;&quot;orderId&quot;&lt;/span&gt;:3,&lt;span&gt;&quot;sellerName&quot;&lt;/span&gt;:&lt;span&gt;&quot;judy-3&quot;&lt;/span&gt;}&lt;br/&gt;[生产端]线程：http-nio-8090-exec-1，发布事件 3&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上面是跑了个demo的运行结果，我们发现无论生产端还是消费端，使用了同一个线程 &lt;code&gt;http-nio-8090-exec-1&lt;/code&gt;，Spring 框架的事件机制默认是同步阻塞的。只是在代码规范方面做了解耦，有较好的扩展性，但底层还是采用同步调用方式。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;那么问题来了，如果想实现异步调用，如何处理？&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们需要手动创建一个 &lt;code&gt;SimpleApplicationEventMulticaster&lt;/code&gt;，并设置 &lt;code&gt;TaskExecutor&lt;/code&gt;，此时所有的消费事件采用异步线程执行。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;@Component&lt;br/&gt;public class SpringConfiguration {&lt;br/&gt;&lt;br/&gt;    @Bean&lt;br/&gt;    public SimpleApplicationEventMulticaster applicationEventMulticaster(@Qualifier(&lt;span&gt;&quot;defaultThreadPoolExecutor&quot;&lt;/span&gt;) ThreadPoolExecutor defaultThreadPoolExecutor) {&lt;br/&gt;        SimpleApplicationEventMulticaster simpleApplicationEventMulticaster = new SimpleApplicationEventMulticaster();&lt;br/&gt;        simpleApplicationEventMulticaster.setTaskExecutor(defaultThreadPoolExecutor);&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; simpleApplicationEventMulticaster;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们看下改造后的运行结果：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;[生产端]线程：http-nio-8090-exec-1，发布事件 1&lt;br/&gt;[生产端]线程：http-nio-8090-exec-1，发布事件 2&lt;br/&gt;[生产端]线程：http-nio-8090-exec-1，发布事件 3&lt;br/&gt;[消费端]线程：default-executor-1，消费事件 {&lt;span&gt;&quot;amount&quot;&lt;/span&gt;:100.0,&lt;span&gt;&quot;buyerName&quot;&lt;/span&gt;:&lt;span&gt;&quot;Tom-2&quot;&lt;/span&gt;,&lt;span&gt;&quot;orderId&quot;&lt;/span&gt;:2,&lt;span&gt;&quot;sellerName&quot;&lt;/span&gt;:&lt;span&gt;&quot;judy-2&quot;&lt;/span&gt;}&lt;br/&gt;[消费端]线程：default-executor-2，消费事件 {&lt;span&gt;&quot;amount&quot;&lt;/span&gt;:100.0,&lt;span&gt;&quot;buyerName&quot;&lt;/span&gt;:&lt;span&gt;&quot;Tom-1&quot;&lt;/span&gt;,&lt;span&gt;&quot;orderId&quot;&lt;/span&gt;:1,&lt;span&gt;&quot;sellerName&quot;&lt;/span&gt;:&lt;span&gt;&quot;judy-1&quot;&lt;/span&gt;}&lt;br/&gt;[消费端]线程：default-executor-0，消费事件 {&lt;span&gt;&quot;amount&quot;&lt;/span&gt;:100.0,&lt;span&gt;&quot;buyerName&quot;&lt;/span&gt;:&lt;span&gt;&quot;Tom-3&quot;&lt;/span&gt;,&lt;span&gt;&quot;orderId&quot;&lt;/span&gt;:3,&lt;span&gt;&quot;sellerName&quot;&lt;/span&gt;:&lt;span&gt;&quot;judy-3&quot;&lt;/span&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;&lt;code&gt;SimpleApplicationEventMulticaster&lt;/code&gt; 这个我们自己实例化的 Bean 与系统默认的加载顺序如何？会不会有冲突？&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;查了下 Spring 源码，处理逻辑在 &lt;code&gt;AbstractApplicationContext#initApplicationEventMulticaster&lt;/code&gt; 方法中，通过 beanFactory 查找是否有自定义的 Bean，如果没有，容器会自己 new 一个 &lt;code&gt;SimpleApplicationEventMulticaster&lt;/code&gt; 对象注入到容器中。&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.38254310344827586&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/2KTof9YshwfJypqK9F6GHjia2dpB3O0dIr1ZCMAODXUwvwbnsPanvr8PxcJreLEC75sImiceVSibkuuKsPGbw62yw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;928&quot;/&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;代码地址：https://github.com/aalansehaiyang/wx-project&lt;/p&gt;&lt;/blockquote&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;七、消息队列&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;异步架构是互联网系统中一种典型架构模式，与同步架构相对应。而消息队列天生就是这种异步架构，具有超高吞吐量和超低时延。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;消息队列异步架构的主要角色包括消息生产者、消息队列和消息消费者。&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.53515625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/2KTof9YshwfJypqK9F6GHjia2dpB3O0dIg6QqIZ5qyUXgNQ6pkYiaicU9dsEPIUiaEibQOCo2YOfdWXtnQP6BgRugXQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;消息生产者就是主应用程序，生产者将调用请求封装成消息发送给消息队列。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;消息队列的职责就是缓冲消息，等待消费者消费。根据消费方式又分为&lt;code&gt;点对点模式&lt;/code&gt;和&lt;code&gt;发布订阅模式&lt;/code&gt;两种。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;消息消费者，用来从消息队列中拉取、消费消息，完成业务逻辑处理。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当然市面上消息队列框架非常多，常见的有RabbitMQ、Kafka、RocketMQ、ActiveMQ 和 Pulsar 等&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.8893756845564075&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/2KTof9YshwfJypqK9F6GHjia2dpB3O0dINcjicn0LQHvGqv4yiabagAWHTrEp4UjE347BFjUrSWq7QqfuEuF3IRNg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;913&quot;/&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不同的消息队列的功能特性会略有不同，但整体架构类似，这里就不展开了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们只需要记住一个关键点，借助消息队列这个中间件可以高效的实现异步编程。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;/section&gt;&lt;hr/&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;关于我：&lt;/span&gt;&lt;span&gt;Tom哥，前阿里P7技术专家，offer收割机，参加多次淘宝双11大促活动。&lt;/span&gt;&lt;span&gt;欢迎关注，我会持续输出更多经典原创文章，为你晋级大厂助力&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;NaN&quot;&gt;&lt;span mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;NaN&quot;&gt;&lt;strong mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;NaN&quot;&gt;扫码 &lt;/strong&gt;&lt;/span&gt;&lt;span mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;NaN&quot;&gt;&lt;strong mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;NaN&quot;&gt;&lt;span mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;NaN&quot;&gt;免费 &lt;/span&gt;&lt;span mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;NaN&quot;&gt;获取 &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;NaN&quot;&gt;50&lt;/span&gt;&lt;span mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;NaN&quot;&gt;0+页&lt;/span&gt;&lt;span mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;NaN&quot;&gt;&lt;strong mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;NaN&quot;&gt; Tom哥原创精品文章汇总 PDF&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;NaN&quot;&gt;&lt;/p&gt;&lt;section mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1.092130518234165&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/2KTof9YshwdaSEqIP60fNXXqd7e15vycGo75wsfR2yTDKxOpJaKG0BKzFod8CQxLtibu2vMp1GKBMDJRbk3rpLw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;521&quot;/&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;img class=&quot;__bg_gif rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-type=&quot;gif&quot; data-w=&quot;300&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/4Acg4lxHhCmfrJ0pDVibHNTZT9yPjQDtW34fia88kcXic4lkhDKpD2D43m2ZIFmK06HQtTiaFaiawhHfqgh3JJzcFDA/640?wx_fmt=gif&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;原创技术文章汇总&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1.722672064777328&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/2KTof9YshweffIcjQwS29BaV8WhicuPIU95yibnYCCFkUc0zLRFW0sIiavnv0zyIJPE3JRCfVzM9PBHVibbiamhickjg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;494&quot;/&gt;&lt;/p&gt;&lt;pre&gt;&lt;p&gt;&lt;small&gt;&lt;br/&gt;&lt;/small&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img __bg_gif&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.2777777777777778&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/CKvMdchsUwlkU1ysoMgG69dVYbCQcI6Byneb8ibzZWPfUCr3T8CuBicCSGyFE6SpAtxpxtDCp6VlZ4F1hEL1BNyg/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/div&gt;

          

          



                    
          &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>8bd097df62277bd4a1a107de43d76ffe</guid>
<title>公司新来了一个同事，把权限系统设计的炉火纯青！</title>
<link>https://toutiao.io/k/6gp2yxu</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                                       &quot; id=&quot;js_content&quot;&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;点击&lt;strong&gt;&lt;span&gt;关注&lt;/span&gt;&lt;/strong&gt;公众号：&lt;/span&gt;&lt;/strong&gt;互联网架构师，后台回复&lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzI2MTIzMzY3Mw==&amp;amp;mid=2247487508&amp;amp;idx=1&amp;amp;sn=78cf235aa9ba5f988c6922ca98f8bfd6&amp;amp;chksm=ea5cdd72dd2b54647cf55b4a73dcafa69fc7228205ad39ecc98fe57b39cdecb21c238c6d6cb6&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot; 2T&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot;&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;&lt;strong&gt;2T&lt;/strong&gt;&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;获取&lt;/span&gt;&lt;/strong&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzI2MTIzMzY3Mw==&amp;amp;mid=2247487508&amp;amp;idx=1&amp;amp;sn=78cf235aa9ba5f988c6922ca98f8bfd6&amp;amp;chksm=ea5cdd72dd2b54647cf55b4a73dcafa69fc7228205ad39ecc98fe57b39cdecb21c238c6d6cb6&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;2TB&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;2TB&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/a&gt;&lt;strong&gt;&lt;span&gt;学习资源！&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;上一篇：&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2MTIzMzY3Mw==&amp;amp;mid=2247523205&amp;amp;idx=1&amp;amp;sn=89b261f829ce6c3487ce8b2ccf3ed06b&amp;amp;chksm=ea5f56e3dd28dff5238989d3e07d775d34c04a4e80a166059e92e84379274819203d72d1dc1d&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;Alibaba开源内网高并发编程手册.pdf&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;Alibaba开源内网高并发编程手册.pdf&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;思维导图如&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;231&quot; data-backw=&quot;578&quot; data-croporisrc=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/TNUwKhV0JpQx3Ir44Gwv9j1XrrcbIrgw7gcKichWNPlm9OuvRJ7Eaian0u9X31q1V3nQcDZyb4Trd1jicMr6h3vjg/640?wx_fmt=jpeg&amp;amp;random=0.9117244731305991&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-cropx1=&quot;0&quot; data-cropx2=&quot;732&quot; data-cropy1=&quot;67.12110726643598&quot; data-cropy2=&quot;245.68858131487892&quot; data-ratio=&quot;0.24453551912568305&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/9mQQWOf4KRJcbGP8zTtDLibaib89uEfBDYaEu8MKcABXPhES99JPnPXqhYDxYh89TCXiaicPDICtKANV1224FbrxIA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;732&quot;/&gt;&lt;/figure&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;&lt;span&gt;RBAC权限分析&lt;/span&gt;&lt;/strong&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;RBAC 全称为基于角色的权限控制，本段将会从什么是RBAC，模型分类，什么是权限，用户组的使用，实例分析等几个方面阐述RBAC&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;思维导图&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;绘制思维导图如下&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-croporisrc=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/TNUwKhV0JpQx3Ir44Gwv9j1XrrcbIrgw64a4hibEPjvkvnqIJ7IgKohrwEmic1f4hH09S6iazDaibebpZZZicZGT7OQ/640?wx_fmt=jpeg&amp;amp;random=0.7791560087464733&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-cropx1=&quot;0&quot; data-cropx2=&quot;613&quot; data-cropy1=&quot;64.37899543378995&quot; data-cropy2=&quot;292.9710806697108&quot; data-ratio=&quot;0.3719412724306688&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/9mQQWOf4KRJcbGP8zTtDLibaib89uEfBDYia9AAuWa6RcQdkuPhHdSE0mLBpEjykXs1SlyPEDBwjb21gicH1Jl1DJw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;613&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;什么是RBAC&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;RBAC 全称为用户角色权限控制，通过角色关联用户，角色关联权限，这种方式，间阶的赋予用户的权限，如下图所示&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/9mQQWOf4KRJcbGP8zTtDLibaib89uEfBDYky6WTQrJQBlyYJTOASPKxmyBdkMsRWKdLwk46Wy95g01bDx4wk7bcQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot;/&gt;&lt;/p&gt;&lt;section&gt;对于通常的系统而言，存在多个用户具有相同的权限，在分配的时候，要为指定的用户分配相关的权限，修改的时候也要依次的对这几个用户的权限进行修改，有了角色这个权限，在修改权限的时候，只需要对角色进行修改，就可以实现相关的权限的修改。这样做增加了效率，减少了权限漏洞的发生。&lt;/section&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;模型分类&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于RBAC模型来说，分为以下几个模型 分别是RBAC0，RBAC1，RBAC2，RBAC3，这四个模型，这段将会依次介绍这四个模型，其中最常用的模型有RBAC0.&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;RBAC0&lt;/span&gt;&lt;/h3&gt;&lt;section&gt;RBAC0是最简单的RBAC模型，这里面包含了两种。&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用户和角色是多对一的关系，即一个用户只充当一种角色，一个角色可以有多个角色的担当。用户和角色是多对多的关系，即，一个用户可以同时充当多个角色，一个角色可以有多个用户。 &lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;此系统功能单一，人员较少，这里举个栗子，张三既是行政，也负责财务，此时张三就有俩个权限，分别是行政权限，和财务权限两个部分。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;RBAC1&lt;/span&gt;&lt;/h3&gt;&lt;section&gt;相对于RBAC0模型来说，增加了子角色，引入了继承的概念。&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/9mQQWOf4KRJcbGP8zTtDLibaib89uEfBDYyF7okn93H6o3eWnMMUdOicvbcVQZtL9GYX8OcpI9eiatwSzgZ1q2y9Mw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot;/&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;RBAC2 模型&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里RBAC2模型，在RBAC0模型的基础上，增加了一些功能，以及限制&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;角色互斥&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;即，同一个用户不能拥有两个互斥的角色，举个例子，在财务系统中，一个用户不能拥有会计员和审计这两种角色。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;基数约束&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;即，用一个角色，所拥有的成员是固定的，例如对于CEO这种角色，同一个角色，也只能有一个用户。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;先决条件&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;即，对于该角色来说，如果想要获得更高的角色，需要先获取低一级别的角色。举个栗子，对于副总经理和经理这两个权限来说，需要先有副总经理权限，才能拥有经理权限，其中副总经理权限是经理权限的先决条件。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;运行时互斥&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;即，一个用户可以拥有两个角色，但是这俩个角色不能同时使用，需要切换角色才能进入另外一个角色。举个栗子，对于总经理和专员这两个角色，系统只能在一段时间，拥有其一个角色，不能同时对这两种角色进行操作。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;RBAC3模型&lt;/span&gt;&lt;/h3&gt;&lt;section&gt;即，RBAC1，RBAC2，两者模型全部累计，称为统一模型。&lt;/section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;332&quot; data-backw=&quot;578&quot; data-croporisrc=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/TNUwKhV0JpQx3Ir44Gwv9j1XrrcbIrgwszxiaExX5Qv6ISS90crbvVB3cwiaBNBxsO9XD4fhFqtzTeqQ6e3ogDIQ/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-cropx1=&quot;0&quot; data-cropx2=&quot;501&quot; data-cropy1=&quot;23.40311418685121&quot; data-cropy2=&quot;259.16782006920414&quot; data-ratio=&quot;0.47105788423153694&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/9mQQWOf4KRJcbGP8zTtDLibaib89uEfBDYgm9NHUuHY1qNpyxbN8H07eexhr9SHesBkk0bCdjTtTlJ4oCQ9SJmpg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;501&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;什么是权限&lt;/span&gt;&lt;/h3&gt;&lt;section&gt;权限是资源的集合，这里的资源指的是软件中的所有的内容，即，对页面的操作权限，对页面的访问权限，对数据的增删查改的权限。举个栗子。对于下图中的系统而言，&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/9mQQWOf4KRJcbGP8zTtDLibaib89uEfBDY1G6zBcgUqoztEBBEwSiaSxzp2qicggSPRNibQyX3Y74zelQuWOhb7YXpQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot;/&gt;&lt;/p&gt;&lt;section&gt;拥有，计划管理，客户管理，合同管理，出入库通知单管理，粮食安全追溯，粮食统计查询，设备管理这几个页面，对这几个页面的访问，以及是否能够访问到菜单，都属于权限。&lt;/section&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;用户组的使用&lt;/span&gt;&lt;/h3&gt;&lt;section&gt;对于用户组来说，是把众多的用户划分为一组，进行批量授予角色，即，批量授予权限。举个栗子，对于部门来说，一个部门拥有一万多个员工，这些员工都拥有相同的角色，如果没有用户组，可能需要一个个的授予相关的角色，在拥有了用户组以后，只需要，把这些用户全部划分为一组，然后对该组设置授予角色，就等同于对这些用户授予角色。&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;优点：减少工作量，便于理解，增加多级管理，等。&lt;span/&gt;&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;&lt;span&gt;SpringSecurity 简单使用&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;首先添加依赖&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span&gt;&amp;lt;/&lt;span&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;spring-boot-starter-security&lt;span&gt;&amp;lt;/&lt;span&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;section&gt;然后添加相关的访问接口&lt;/section&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;package&lt;/span&gt; com.example.demo.web;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; org.springframework.web.bind.&lt;span&gt;annotation&lt;/span&gt;.RequestMapping;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; org.springframework.web.bind.&lt;span&gt;annotation&lt;/span&gt;.RestController;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;@RestController&lt;/span&gt;&lt;br/&gt;&lt;span&gt;@RequestMapping(&lt;span&gt;&quot;/test&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;Test&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;@RequestMapping(&lt;span&gt;&quot;/test&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;public&lt;/span&gt; String test(){&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;&quot;test&quot;&lt;/span&gt;;&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;section&gt;最后启动项目，在日志中查看相关的密码&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/9mQQWOf4KRJcbGP8zTtDLibaib89uEfBDYzP1yaAvxb6cX1Rfqu6H9LPytM5MvtibhDf5jiao3v0M8KibN46GbyGB5g/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot;/&gt;&lt;/p&gt;&lt;section&gt;访问接口，可以看到相关的登录界面&lt;/section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-croporisrc=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/TNUwKhV0JpQx3Ir44Gwv9j1XrrcbIrgw3TDQrArmNE5iaPXLMOichWzagADr2MMamwESUITib4eYCTCkAhmwozV5w/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-cropx1=&quot;0&quot; data-cropx2=&quot;732&quot; data-cropy1=&quot;0&quot; data-cropy2=&quot;215.03196347031962&quot; data-ratio=&quot;0.2937158469945355&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/9mQQWOf4KRJcbGP8zTtDLibaib89uEfBDYcfyUiadUfzvPEEZZUNLPZQ5WoNOxOawjk0Xl2UsQsjZ1HUuAlTPQFSw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;732&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;输入用户名和相关的密码&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;用户名：user&lt;br/&gt;密码 984cccf2-ba82-468e-a404-7d32123d0f9c&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;202&quot; data-backw=&quot;578&quot; data-croporisrc=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/TNUwKhV0JpQx3Ir44Gwv9j1XrrcbIrgwKvX6QNPeJBTg9T4mxtvnPyt9mib3ohde1DFSViaYKmeBtqz91QX7Igrw/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-cropx1=&quot;0&quot; data-cropx2=&quot;611.6885813148789&quot; data-cropy1=&quot;0&quot; data-cropy2=&quot;169.70242214532874&quot; data-ratio=&quot;0.2765957446808511&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/9mQQWOf4KRJcbGP8zTtDLibaib89uEfBDYGib6Lj2ibQ8QINiaaWkVs6ibXe4tpAu36mMnaKg55IqxPiavmO9ZLcKTvaQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;611&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;登录成功&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;增加用户名和密码&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在配置文件中，书写相关的登录和密码&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;spring:&lt;br/&gt;  security:&lt;br/&gt;    user:&lt;br/&gt;      name: ming&lt;br/&gt;      password: 123456&lt;br/&gt;      roles: admin&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;section&gt;在登录页面，输入用户名和密码，即可正常登录。&lt;/section&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;基于内存的认证&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;需要自定义类继承 WebSecurityConfigurerAdapter 代码如下&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;package&lt;/span&gt; com.example.demo.config;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; org.springframework.context.annotation.&lt;span&gt;Bean&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; org.springframework.context.annotation.&lt;span&gt;Configuration&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; org.springframework.security.config.annotation.authentication.builders.&lt;span&gt;AuthenticationManagerBuilder&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; org.springframework.security.config.annotation.web.configuration.&lt;span&gt;WebSecurityConfigurerAdapter&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; org.springframework.security.crypto.password.&lt;span&gt;NoOpPasswordEncoder&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; org.springframework.security.crypto.password.&lt;span&gt;PasswordEncoder&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;@Configuration&lt;/span&gt;&lt;br/&gt;public &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;MyWebSecurityConfig&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;WebSecurityConfigurerAdapter&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;@Bean&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;PasswordEncoder&lt;/span&gt; passwordEncoder(){&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;NoOpPasswordEncoder&lt;/span&gt;.getInstance();&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;protected&lt;/span&gt; void configure(&lt;span&gt;AuthenticationManagerBuilder&lt;/span&gt; auth) &lt;span&gt;throws&lt;/span&gt; &lt;span&gt;Exception&lt;/span&gt; {&lt;br/&gt;        auth.inMemoryAuthentication()&lt;br/&gt;                .withUser(&lt;span&gt;&quot;admin&quot;&lt;/span&gt;).password(&lt;span&gt;&quot;123&quot;&lt;/span&gt;).roles(&lt;span&gt;&quot;admin&quot;&lt;/span&gt;);&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;section&gt;即，配置的用户名为admin，密码为123，角色为admin&lt;/section&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;HttpSecurity&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;这里对一些方法进行拦截&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;package com.ming.demo.interceptor;&lt;br/&gt;&lt;br/&gt;import org.springframework.beans.factory.annotation.Autowired;&lt;br/&gt;import org.springframework.context.annotation.Bean;&lt;br/&gt;import org.springframework.context.annotation.Configuration;&lt;br/&gt;import org.springframework.http.HttpMethod;&lt;br/&gt;import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;&lt;br/&gt;import org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity;&lt;br/&gt;import org.springframework.security.config.annotation.web.builders.HttpSecurity;&lt;br/&gt;import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;&lt;br/&gt;import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;&lt;br/&gt;import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;&lt;br/&gt;import org.springframework.security.crypto.password.PasswordEncoder;&lt;br/&gt;import org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices;&lt;br/&gt;&lt;br/&gt;@Configuration&lt;br/&gt;@EnableWebSecurity&lt;br/&gt;public class SecurityConfig  extends WebSecurityConfigurerAdapter {&lt;br/&gt;    //基于内存的用户存储&lt;br/&gt;    @Override&lt;br/&gt;    public void configure(AuthenticationManagerBuilder auth) throws Exception {&lt;br/&gt;        auth.inMemoryAuthentication()&lt;br/&gt;                .withUser(&quot;itguang&quot;).password(&quot;123456&quot;).roles(&quot;USER&quot;).and()&lt;br/&gt;                .withUser(&quot;admin&quot;).password(&quot;{noop}&quot; + &quot;123456&quot;).roles(&quot;ADMIN&quot;);&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    //请求拦截&lt;br/&gt;    @Override&lt;br/&gt;    protected void configure(HttpSecurity http) throws Exception {&lt;br/&gt;        http.authorizeRequests()&lt;br/&gt;                .anyRequest().permitAll()&lt;br/&gt;                .and()&lt;br/&gt;                .formLogin()&lt;br/&gt;                .permitAll()&lt;br/&gt;                .and()&lt;br/&gt;                .logout()&lt;br/&gt;                .permitAll();&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;section&gt;即，这里完成了对所有的方法访问的拦截。&lt;/section&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;&lt;span&gt;SpringSecurity 集成JWT&lt;/span&gt;&lt;/strong&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这是一个小demo，目的，登录以后返回jwt生成的token&lt;span/&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;导入依赖&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;添加web依赖&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-croporisrc=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/TNUwKhV0JpQx3Ir44Gwv9j1XrrcbIrgwxCF383RoC311g1X6T6USUScGG1IibWRPP2UbKSPj6zfn0dr2PicSIzoQ/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-cropx1=&quot;0&quot; data-cropx2=&quot;732&quot; data-cropy1=&quot;0&quot; data-cropy2=&quot;440.0913242009132&quot; data-ratio=&quot;0.6010928961748634&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/9mQQWOf4KRJcbGP8zTtDLibaib89uEfBDYg3kFTeTHSxG2uUO3hG0Rt67hhr5PqvxzO0ej93HiawDaDULCrSV5YRg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;732&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;导入JWT和Security依赖&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt; &lt;span&gt;&amp;lt;!-- https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt --&amp;gt;&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;&amp;lt;&lt;span&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;&amp;lt;&lt;span&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;io.jsonwebtoken&lt;span&gt;&amp;lt;/&lt;span&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;&amp;lt;&lt;span&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;jjwt&lt;span&gt;&amp;lt;/&lt;span&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;&amp;lt;&lt;span&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;0.9.1&lt;span&gt;&amp;lt;/&lt;span&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;&amp;lt;/&lt;span&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;&amp;lt;!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-security --&amp;gt;&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;&amp;lt;&lt;span&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;&amp;lt;&lt;span&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span&gt;&amp;lt;/&lt;span&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;&amp;lt;&lt;span&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;spring-boot-starter-security&lt;span&gt;&amp;lt;/&lt;span&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;&amp;lt;&lt;span&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;2.3.1.RELEASE&lt;span&gt;&amp;lt;/&lt;span&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;&amp;lt;/&lt;span&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;创建一个JwtUser实现UserDetails&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;创建 一个相关的JavaBean&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;package com.example.demo;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; org.springframework.security.core.GrantedAuthority;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; org.springframework.security.core.userdetails.UserDetails;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; java.util.Collection;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; JwtUser &lt;span&gt;implements&lt;/span&gt; UserDetails {&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;String&lt;/span&gt; username;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;String&lt;/span&gt; password;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; Integer state;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; Collection&amp;lt;? &lt;span&gt;extends&lt;/span&gt; GrantedAuthority&amp;gt; authorities;&lt;br/&gt;    &lt;span&gt;public&lt;/span&gt; JwtUser(){&lt;br/&gt;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;public&lt;/span&gt; JwtUser(&lt;span&gt;String&lt;/span&gt; username, &lt;span&gt;String&lt;/span&gt; password, Integer state,  Collection&amp;lt;? &lt;span&gt;extends&lt;/span&gt; GrantedAuthority&amp;gt; authorities){&lt;br/&gt;        &lt;span&gt;this&lt;/span&gt;.username = username;&lt;br/&gt;        &lt;span&gt;this&lt;/span&gt;.password = password;&lt;br/&gt;        &lt;span&gt;this&lt;/span&gt;.state = state;&lt;br/&gt;        &lt;span&gt;this&lt;/span&gt;.authorities = authorities;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;public&lt;/span&gt; Collection&amp;lt;? &lt;span&gt;extends&lt;/span&gt; GrantedAuthority&amp;gt; getAuthorities() {&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; authorities;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;String&lt;/span&gt; getPassword() {&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;.password;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;String&lt;/span&gt; getUsername() {&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;.username;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt; isAccountNonExpired() {&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt; isAccountNonLocked() {&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt; isCredentialsNonExpired() {&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt; isEnabled() {&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;;&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;编写工具类生成令牌&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;编写工具类，用来生成token，以及刷新token，以及验证token&lt;span/&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;package com.example.demo;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; io.jsonwebtoken.Claims;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; io.jsonwebtoken.Jwts;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; io.jsonwebtoken.SignatureAlgorithm;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; org.springframework.security.core.userdetails.UserDetails;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; java.io.Serializable;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; java.util.Date;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; java.util.HashMap;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; java.util.Map;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; JwtTokenUtil &lt;span&gt;implements&lt;/span&gt; Serializable {&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;String&lt;/span&gt; secret;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; Long expiration;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;String&lt;/span&gt; header;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;String&lt;/span&gt; generateToken(Map&amp;lt;&lt;span&gt;String&lt;/span&gt;, &lt;span&gt;Object&lt;/span&gt;&amp;gt; claims) {&lt;br/&gt;        &lt;span&gt;Date&lt;/span&gt; expirationDate = &lt;span&gt;new&lt;/span&gt; &lt;span&gt;Date&lt;/span&gt;(System.currentTimeMillis() + expiration);&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; Jwts.builder().setClaims(claims).setExpiration(expirationDate).signWith(SignatureAlgorithm.HS512, secret).compact();&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; Claims getClaimsFromToken(&lt;span&gt;String&lt;/span&gt; token) {&lt;br/&gt;        Claims claims;&lt;br/&gt;        &lt;span&gt;try&lt;/span&gt; {&lt;br/&gt;            claims = Jwts.parser().setSigningKey(secret).parseClaimsJws(token).getBody();&lt;br/&gt;&lt;br/&gt;        } &lt;span&gt;catch&lt;/span&gt; (Exception e) {&lt;br/&gt;            claims = &lt;span&gt;null&lt;/span&gt;;&lt;br/&gt;        }&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; claims;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;String&lt;/span&gt; generateToken(UserDetails userDetails) {&lt;br/&gt;        Map&amp;lt;&lt;span&gt;String&lt;/span&gt;, &lt;span&gt;Object&lt;/span&gt;&amp;gt; claims = &lt;span&gt;new&lt;/span&gt; HashMap&amp;lt;&amp;gt;(&lt;span&gt;2&lt;/span&gt;);&lt;br/&gt;        claims.put(&lt;span&gt;&quot;sub&quot;&lt;/span&gt;, userDetails.getUsername());&lt;br/&gt;        claims.put(&lt;span&gt;&quot;created&quot;&lt;/span&gt;, &lt;span&gt;new&lt;/span&gt; &lt;span&gt;Date&lt;/span&gt;());&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; generateToken(claims);&lt;br/&gt;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;String&lt;/span&gt; getUsernameFromToken(&lt;span&gt;String&lt;/span&gt; token) {&lt;br/&gt;        &lt;span&gt;String&lt;/span&gt; username;&lt;br/&gt;        &lt;span&gt;try&lt;/span&gt; {&lt;br/&gt;            Claims claims = getClaimsFromToken(token);&lt;br/&gt;            username = claims.getSubject();&lt;br/&gt;&lt;br/&gt;        } &lt;span&gt;catch&lt;/span&gt; (Exception e) {&lt;br/&gt;            username = &lt;span&gt;null&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;        }&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; username;&lt;br/&gt;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;Boolean&lt;/span&gt; isTokenExpired(&lt;span&gt;String&lt;/span&gt; token) {&lt;br/&gt;        &lt;span&gt;try&lt;/span&gt; {&lt;br/&gt;            Claims claims = getClaimsFromToken(token);&lt;br/&gt;            &lt;span&gt;Date&lt;/span&gt; expiration = claims.getExpiration();&lt;br/&gt;            &lt;span&gt;return&lt;/span&gt; expiration.before(&lt;span&gt;new&lt;/span&gt; &lt;span&gt;Date&lt;/span&gt;());&lt;br/&gt;        } &lt;span&gt;catch&lt;/span&gt; (Exception e) {&lt;br/&gt;            &lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;;&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;String&lt;/span&gt; refreshToken(&lt;span&gt;String&lt;/span&gt; token) {&lt;br/&gt;        &lt;span&gt;String&lt;/span&gt; refreshedToken;&lt;br/&gt;        &lt;span&gt;try&lt;/span&gt; {&lt;br/&gt;            Claims claims = getClaimsFromToken(token);&lt;br/&gt;            claims.put(&lt;span&gt;&quot;created&quot;&lt;/span&gt;, &lt;span&gt;new&lt;/span&gt; &lt;span&gt;Date&lt;/span&gt;());&lt;br/&gt;            refreshedToken = generateToken(claims);&lt;br/&gt;&lt;br/&gt;        } &lt;span&gt;catch&lt;/span&gt; (Exception e) {&lt;br/&gt;            refreshedToken = &lt;span&gt;null&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;        }&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; refreshedToken;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;Boolean&lt;/span&gt; validateToken(&lt;span&gt;String&lt;/span&gt; token, UserDetails userDetails) {&lt;br/&gt;        JwtUser user = (JwtUser) userDetails;&lt;br/&gt;        &lt;span&gt;String&lt;/span&gt; username = getUsernameFromToken(token);&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; (username.equals(user.getUsername()) &amp;amp;&amp;amp; !isTokenExpired(token));&lt;br/&gt;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;编写拦截器&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;编写Filter 用来检测JWT&lt;span/&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;package com.example.demo;&lt;br/&gt;&lt;br/&gt;import org.apache.commons.lang.StringUtils;&lt;br/&gt;import org.springframework.beans.factory.annotation.Autowired;&lt;br/&gt;import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;&lt;br/&gt;import org.springframework.security.core.context.SecurityContextHolder;&lt;br/&gt;import org.springframework.security.core.userdetails.UserDetails;&lt;br/&gt;import org.springframework.security.core.userdetails.UserDetailsService;&lt;br/&gt;import org.springframework.security.web.authentication.WebAuthenticationDetailsSource;&lt;br/&gt;import org.springframework.stereotype.Component;&lt;br/&gt;import org.springframework.web.filter.OncePerRequestFilter;&lt;br/&gt;&lt;br/&gt;import javax.servlet.FilterChain;&lt;br/&gt;import javax.servlet.ServletException;&lt;br/&gt;import javax.servlet.http.HttpServletRequest;&lt;br/&gt;import javax.servlet.http.HttpServletResponse;&lt;br/&gt;import java.io.IOException;&lt;br/&gt;&lt;br/&gt;@Component&lt;br/&gt;public class JwtAuthenticationTokenFilter  extends OncePerRequestFilter {&lt;br/&gt;    @Autowired&lt;br/&gt;    private UserDetailsService userDetailsService;&lt;br/&gt;    @Autowired&lt;br/&gt;    private JwtTokenUtil jwtTokenUtil;&lt;br/&gt;&lt;br/&gt;    @Override&lt;br/&gt;    protected void doFilterInternal(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, FilterChain filterChain) throws ServletException, IOException {&lt;br/&gt;        String authHeader = httpServletRequest.getHeader(jwtTokenUtil.getHeader());&lt;br/&gt;        if (authHeader != null &amp;amp;&amp;amp; StringUtils.isNotEmpty(authHeader)) {&lt;br/&gt;            String username = jwtTokenUtil.getUsernameFromToken(authHeader);&lt;br/&gt;            if (username != null &amp;amp;&amp;amp; SecurityContextHolder.getContext().getAuthentication() == null) {&lt;br/&gt;                UserDetails userDetails = this.userDetailsService.loadUserByUsername(username);&lt;br/&gt;                if (jwtTokenUtil.validateToken(authHeader, userDetails)) {&lt;br/&gt;                    UsernamePasswordAuthenticationToken authentication  =&lt;br/&gt;                    new UsernamePasswordAuthenticationToken(userDetails,null,userDetails.getAuthorities());&lt;br/&gt;                    authentication.setDetails(new WebAuthenticationDetailsSource().buildDetails(httpServletRequest));&lt;br/&gt;                    SecurityContextHolder.getContext().setAuthentication(authentication);&lt;br/&gt;&lt;br/&gt;                }&lt;br/&gt;            }&lt;br/&gt;        }&lt;br/&gt;        filterChain.doFilter(httpServletRequest, httpServletResponse);&lt;br/&gt;&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;编写userDetailsService的实现类&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在上方代码中，编写userDetailsService，类，实现其验证过程&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;package com.example.demo;&lt;br/&gt;&lt;br/&gt;import org.springframework.beans.factory.annotation.Autowired;&lt;br/&gt;import org.springframework.security.core.authority.SimpleGrantedAuthority;&lt;br/&gt;import org.springframework.security.core.userdetails.User;&lt;br/&gt;import org.springframework.security.core.userdetails.UserDetails;&lt;br/&gt;import org.springframework.security.core.userdetails.UserDetailsService;&lt;br/&gt;import org.springframework.security.core.userdetails.UsernameNotFoundException;&lt;br/&gt;import org.springframework.stereotype.Service;&lt;br/&gt;&lt;br/&gt;import javax.management.relation.Role;&lt;br/&gt;import java.util.List;&lt;br/&gt;&lt;br/&gt;@Service&lt;br/&gt;public class JwtUserDetailsServiceImpl  implements UserDetailsService {&lt;br/&gt;    @Autowired&lt;br/&gt;    private UserMapper userMapper;&lt;br/&gt;&lt;br/&gt;    @Override&lt;br/&gt;    public UserDetails loadUserByUsername(String s) throws UsernameNotFoundException {&lt;br/&gt;        User user = userMapper.selectByUserName(s);&lt;br/&gt;        if (user == null) {&lt;br/&gt;            throw new UsernameNotFoundException(String.format(&quot;&#x27;%s&#x27;.这个用户不存在&quot;, s));&lt;br/&gt;&lt;br/&gt;        }&lt;br/&gt;        List&amp;lt;SimpleGrantedAuthority&amp;gt; collect = user.getRoles().stream().map(Role::getRolename).map(SimpleGrantedAuthority::new).collect(Collectors.toList());&lt;br/&gt;        return new JwtUser(user.getUsername(), user.getPassword(), user.getState(), collect);&lt;br/&gt;&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;编写登录&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;编写登录业务的实现类 其login方法会返回一个JWTUtils 的token&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;@Service&lt;/span&gt;&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;UserServiceImpl&lt;/span&gt;  &lt;span&gt;implements&lt;/span&gt; &lt;span&gt;UserService&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;@Autowired&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; UserMapper userMapper;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Autowired&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; AuthenticationManager authenticationManager;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Autowired&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; UserDetailsService userDetailsService;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Autowired&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; JwtTokenUtil jwtTokenUtil;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; User &lt;span&gt;findByUsername&lt;/span&gt;&lt;span&gt;(String username)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        User user = userMapper.selectByUserName(username);&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; user;&lt;br/&gt;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; RetResult &lt;span&gt;login&lt;/span&gt;&lt;span&gt;(String username, String password)&lt;/span&gt; &lt;span&gt;throws&lt;/span&gt; AuthenticationException &lt;/span&gt;{&lt;br/&gt;        UsernamePasswordAuthenticationToken upToken = &lt;span&gt;new&lt;/span&gt; UsernamePasswordAuthenticationToken(username, password);&lt;br/&gt;        &lt;span&gt;final&lt;/span&gt; Authentication authentication = authenticationManager.authenticate(upToken);&lt;br/&gt;        SecurityContextHolder.getContext().setAuthentication(authentication);&lt;br/&gt;        UserDetails userDetails = userDetailsService.loadUserByUsername(username);&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; RetResult(RetCode.SUCCESS.getCode(),jwtTokenUtil.generateToken(userDetails));&lt;br/&gt;&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;最后配置Config&lt;/span&gt;&lt;/h2&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;@EnableGlobalMethodSecurity(prePostEnabled = true)&lt;br/&gt;@EnableWebSecurity&lt;br/&gt;public class WebSecurity extends WebSecurityConfigurerAdapter {&lt;br/&gt;    @Autowired&lt;br/&gt;    private UserDetailsService userDetailsService;&lt;br/&gt;    @Autowired&lt;br/&gt;    private JwtAuthenticationTokenFilter jwtAuthenticationTokenFilter;&lt;br/&gt;&lt;br/&gt;    @Autowired&lt;br/&gt;    public void configureAuthentication(AuthenticationManagerBuilder authenticationManagerBuilder) throws Exception {&lt;br/&gt;        authenticationManagerBuilder.userDetailsService(this.userDetailsService).passwordEncoder(passwordEncoder());&lt;br/&gt;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    @Bean(name = BeanIds.AUTHENTICATION_MANAGER)&lt;br/&gt;&lt;br/&gt;    @Override&lt;br/&gt;    public AuthenticationManager authenticationManagerBean() throws Exception {&lt;br/&gt;        return super.authenticationManagerBean();&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    @Bean&lt;br/&gt;    public PasswordEncoder passwordEncoder() {&lt;br/&gt;        return new BCryptPasswordEncoder();&lt;br/&gt;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    @Override&lt;br/&gt;    protected void configure(HttpSecurity http) throws Exception {&lt;br/&gt;        http.csrf().disable().sessionManagement().sessionCreationPolicy(SessionCreationPolicy.STATELESS)&lt;br/&gt;                .and().authorizeRequests()&lt;br/&gt;                .antMatchers(HttpMethod.OPTIONS, &quot;/**&quot;).permitAll()&lt;br/&gt;                .antMatchers(&quot;/auth/**&quot;).permitAll()&lt;br/&gt;                .anyRequest().authenticated()&lt;br/&gt;                .and().headers().cacheControl();&lt;br/&gt;&lt;br/&gt;        http.addFilterBefore(jwtAuthenticationTokenFilter, UsernamePasswordAuthenticationFilter.class);&lt;br/&gt;&lt;br/&gt;        ExpressionUrlAuthorizationConfigurer&amp;lt;HttpSecurity&amp;gt;.ExpressionInterceptUrlRegistry registry = http.authorizeRequests();&lt;br/&gt;&lt;br/&gt;        registry.requestMatchers(CorsUtils::isPreFlightRequest).permitAll();&lt;br/&gt;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    @Bean&lt;br/&gt;    public CorsFilter corsFilter() {&lt;br/&gt;        final UrlBasedCorsConfigurationSource urlBasedCorsConfigurationSource = new UrlBasedCorsConfigurationSource();&lt;br/&gt;        final CorsConfiguration cors = new CorsConfiguration();&lt;br/&gt;        cors.setAllowCredentials(true);&lt;br/&gt;        cors.addAllowedOrigin(&quot;*&quot;);&lt;br/&gt;        cors.addAllowedHeader(&quot;*&quot;);&lt;br/&gt;        cors.addAllowedMethod(&quot;*&quot;);&lt;br/&gt;        urlBasedCorsConfigurationSource.registerCorsConfiguration(&quot;/**&quot;, cors);&lt;br/&gt;        return new CorsFilter(urlBasedCorsConfigurationSource);&lt;br/&gt;&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;运行，返回token&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;运行，返回结果为token&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/9mQQWOf4KRJcbGP8zTtDLibaib89uEfBDYxmhqv9uzlKHEtibpFGDn1tldBsyU6E9Q3tGYetPw9zPGRQrxjGic4u4A/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot;/&gt;&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;&lt;span&gt;SpringSecurity JSON登录&lt;/span&gt;&lt;/strong&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里配置SpringSecurity之JSON登录&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里需要重写UsernamePasswordAnthenticationFilter类，以及配置SpringSecurity&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;重写UsernamePasswordAnthenticationFilter&lt;/span&gt;&lt;/h2&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;public &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;CustomAuthenticationFilter&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;UsernamePasswordAuthenticationFilter&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    public &lt;span&gt;Authentication&lt;/span&gt; attemptAuthentication(&lt;span&gt;HttpServletRequest&lt;/span&gt; request, &lt;span&gt;HttpServletResponse&lt;/span&gt; response) &lt;span&gt;throws&lt;/span&gt; &lt;span&gt;AuthenticationException&lt;/span&gt; {&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;//attempt Authentication when Content-Type is json&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt;(request.getContentType().equals(&lt;span&gt;MediaType&lt;/span&gt;.&lt;span&gt;APPLICATION_JSON_UTF8_VALUE&lt;/span&gt;)&lt;br/&gt;                ||request.getContentType().equals(&lt;span&gt;MediaType&lt;/span&gt;.&lt;span&gt;APPLICATION_JSON_VALUE&lt;/span&gt;)){&lt;br/&gt;&lt;br/&gt;            &lt;span&gt;//use jackson to deserialize json&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;ObjectMapper&lt;/span&gt; mapper = &lt;span&gt;new&lt;/span&gt; &lt;span&gt;ObjectMapper&lt;/span&gt;();&lt;br/&gt;            &lt;span&gt;UsernamePasswordAuthenticationToken&lt;/span&gt; authRequest = &lt;span&gt;null&lt;/span&gt;;&lt;br/&gt;            &lt;span&gt;try&lt;/span&gt; (&lt;span&gt;InputStream&lt;/span&gt; is = request.getInputStream()){&lt;br/&gt;                &lt;span&gt;AuthenticationBean&lt;/span&gt; authenticationBean = mapper.readValue(is,&lt;span&gt;AuthenticationBean&lt;/span&gt;&lt;span&gt;.&lt;span&gt;class&lt;/span&gt;)&lt;/span&gt;;&lt;br/&gt;                authRequest = &lt;span&gt;new&lt;/span&gt; &lt;span&gt;UsernamePasswordAuthenticationToken&lt;/span&gt;(&lt;br/&gt;                        authenticationBean.getUsername(), authenticationBean.getPassword());&lt;br/&gt;            }&lt;span&gt;catch&lt;/span&gt; (&lt;span&gt;IOException&lt;/span&gt; e) {&lt;br/&gt;                e.printStackTrace();&lt;br/&gt;                authRequest = &lt;span&gt;new&lt;/span&gt; &lt;span&gt;UsernamePasswordAuthenticationToken&lt;/span&gt;(&lt;br/&gt;                        &lt;span&gt;&quot;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&quot;&lt;/span&gt;);&lt;br/&gt;            }&lt;span&gt;finally&lt;/span&gt; {&lt;br/&gt;                setDetails(request, authRequest);&lt;br/&gt;                &lt;span&gt;return&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;.getAuthenticationManager().authenticate(authRequest);&lt;br/&gt;            }&lt;br/&gt;        }&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;//transmit it to UsernamePasswordAuthenticationFilter&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;else&lt;/span&gt; {&lt;br/&gt;            &lt;span&gt;return&lt;/span&gt; &lt;span&gt;super&lt;/span&gt;.attemptAuthentication(request, response);&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;配置SecurityConfig&lt;/span&gt;&lt;/h2&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;@Override&lt;br/&gt;protected void configure(HttpSecurity http) throws Exception {&lt;br/&gt;    http&lt;br/&gt;            .cors().and()&lt;br/&gt;            .antMatcher(&quot;/**&quot;).authorizeRequests()&lt;br/&gt;            .antMatchers(&quot;/&quot;, &quot;/login**&quot;).permitAll()&lt;br/&gt;            .anyRequest().authenticated()&lt;br/&gt;            //这里必须要写formLogin()，不然原有的UsernamePasswordAuthenticationFilter不会出现，也就无法配置我们重新的UsernamePasswordAuthenticationFilter&lt;br/&gt;            .and().formLogin().loginPage(&quot;/&quot;)&lt;br/&gt;            .and().csrf().disable();&lt;br/&gt;&lt;br/&gt;    //用重写的Filter替换掉原有的UsernamePasswordAuthenticationFilter&lt;br/&gt;    http.addFilterAt(customAuthenticationFilter(),&lt;br/&gt;    UsernamePasswordAuthenticationFilter.class);&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;//注册自定义的UsernamePasswordAuthenticationFilter&lt;br/&gt;@Bean&lt;br/&gt;CustomAuthenticationFilter customAuthenticationFilter() throws Exception {&lt;br/&gt;    CustomAuthenticationFilter filter = new CustomAuthenticationFilter();&lt;br/&gt;    filter.setAuthenticationSuccessHandler(new SuccessHandler());&lt;br/&gt;    filter.setAuthenticationFailureHandler(new FailureHandler());&lt;br/&gt;    filter.setFilterProcessesUrl(&quot;/login/self&quot;);&lt;br/&gt;&lt;br/&gt;    //这句很关键，重用WebSecurityConfigurerAdapter配置的AuthenticationManager，不然要自己组装AuthenticationManager&lt;br/&gt;    filter.setAuthenticationManager(authenticationManagerBean());&lt;br/&gt;    return filter;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这样就完成使用json登录SpringSecurity。&lt;span/&gt;&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;&lt;span&gt;Spring Security 密码加密方式&lt;/span&gt;&lt;/strong&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;需要在Config 类中配置如下内容&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt; &lt;span&gt;/**&lt;br/&gt;     * 密码加密&lt;br/&gt;     */&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;@Bean&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;public&lt;/span&gt; BCryptPasswordEncoder passwordEncoder(){&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; BCryptPasswordEncoder();&lt;br/&gt;    }&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;即，使用此方法，对密码进行加密， 在业务层的时候，使用此加密的方法&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;@Service&lt;/span&gt;&lt;br/&gt;&lt;span&gt;@Transactional&lt;/span&gt;&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;UserServiceImpl&lt;/span&gt; &lt;span&gt;implements&lt;/span&gt; &lt;span&gt;UserService&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Resource&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; UserRepository userRepository;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Resource&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; BCryptPasswordEncoder bCryptPasswordEncoder;  &lt;span&gt;//注入bcryct加密&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; User &lt;span&gt;add&lt;/span&gt;&lt;span&gt;(User user)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        user.setPassword(bCryptPasswordEncoder.encode(user.getPassword())); &lt;span&gt;//对密码进行加密&lt;/span&gt;&lt;br/&gt;        User user2 = userRepository.save(user);&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; user2;&lt;br/&gt;    }&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; ResultInfo &lt;span&gt;login&lt;/span&gt;&lt;span&gt;(User user)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        ResultInfo resultInfo=&lt;span&gt;new&lt;/span&gt; ResultInfo();&lt;br/&gt;        User user2 = userRepository.findByName(user.getName());&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (user2==&lt;span&gt;null&lt;/span&gt;) {&lt;br/&gt;            resultInfo.setCode(&lt;span&gt;&quot;-1&quot;&lt;/span&gt;);&lt;br/&gt;            resultInfo.setMessage(&lt;span&gt;&quot;用户名不存在&quot;&lt;/span&gt;);&lt;br/&gt;            &lt;span&gt;return&lt;/span&gt; resultInfo;&lt;br/&gt;        }&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;//判断密码是否正确&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (!bCryptPasswordEncoder.matches(user.getPassword(),user2.getPassword())) {&lt;br/&gt;            resultInfo.setCode(&lt;span&gt;&quot;-1&quot;&lt;/span&gt;);&lt;br/&gt;            resultInfo.setMessage(&lt;span&gt;&quot;密码不正确&quot;&lt;/span&gt;);&lt;br/&gt;            &lt;span&gt;return&lt;/span&gt; resultInfo;&lt;br/&gt;        }&lt;br/&gt;        resultInfo.setMessage(&lt;span&gt;&quot;登录成功&quot;&lt;/span&gt;);&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; resultInfo;&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;section&gt;即，使用BCryptPasswordEncoder 对密码进行加密，保存数据库&lt;/section&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;使用数据库认证&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里使用数据库认证SpringSecurity&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;设计数据表&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里设计数据表&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-croporisrc=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/TNUwKhV0JpQx3Ir44Gwv9j1XrrcbIrgwnO0DN83ic6b4TaYGqGTFf0s7NIVrVUSYk0gmlEeeZKdplFt6o1x9fWA/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-cropx1=&quot;0&quot; data-cropx2=&quot;547.2602739726027&quot; data-cropy1=&quot;0&quot; data-cropy2=&quot;398.10502283105023&quot; data-ratio=&quot;0.7276051188299817&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/9mQQWOf4KRJcbGP8zTtDLibaib89uEfBDY7oB5MAibic3dxC3LcXlpBD9XTNbohyzLicR3ZnFBC1ia5FP01wBUQWtE1A/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;547&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;着重配置SpringConfig&lt;/span&gt;&lt;/h2&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;@Configurable&lt;/span&gt;&lt;br/&gt;public &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;WebSecurityConfig&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;WebSecurityConfigurerAdapter&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;@Autowired&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;UserService&lt;/span&gt; userService;    &lt;span&gt;// service 层注入&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Bean&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;PasswordEncoder&lt;/span&gt; passwordEncoder(){&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; &lt;span&gt;BCryptPasswordEncoder&lt;/span&gt;();&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;protected&lt;/span&gt; void configure(&lt;span&gt;AuthenticationManagerBuilder&lt;/span&gt; auth) &lt;span&gt;throws&lt;/span&gt; &lt;span&gt;Exception&lt;/span&gt; {&lt;br/&gt;        &lt;span&gt;// 参数传入Service，进行验证&lt;/span&gt;&lt;br/&gt;        auth.userDetailsService(userService);&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;protected&lt;/span&gt; void configure(&lt;span&gt;HttpSecurity&lt;/span&gt; http) &lt;span&gt;throws&lt;/span&gt; &lt;span&gt;Exception&lt;/span&gt; {&lt;br/&gt;        http.authorizeRequests()&lt;br/&gt;                .antMatchers(&lt;span&gt;&quot;/admin/**&quot;&lt;/span&gt;).hasRole(&lt;span&gt;&quot;admin&quot;&lt;/span&gt;)&lt;br/&gt;                .anyRequest().authenticated()&lt;br/&gt;                .and()&lt;br/&gt;                .formLogin()&lt;br/&gt;                .loginProcessingUrl(&lt;span&gt;&quot;/login&quot;&lt;/span&gt;).permitAll()&lt;br/&gt;                .and()&lt;br/&gt;                .csrf().disable();&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里着重配置SpringConfig&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;&lt;span&gt;小结&lt;/span&gt;&lt;/strong&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;着重讲解了RBAC的权限配置，以及简单的使用SpringSecurity，以及使用SpringSecurity + JWT 完成前后端的分离，以及配置json登录，和密码加密方式。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;作者：小小____&lt;/span&gt;&lt;br/&gt;&lt;span&gt;来源：segmentfault.com/a/1190000023052493&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;&lt;span&gt;-End-&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot; mpa-paragraph-type=&quot;ignored&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mpa-template-id=&quot;527&quot; data-mpa-category=&quot;image&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mpa-template-id=&quot;1357582&quot; data-mpa-category=&quot;image&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;span&gt;最后，关注公众号互联网架构师，在后台回复：2T，可以获取我整理的 Java 系列面试题和答案，非常齐全&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.1423611111111112&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/9mQQWOf4KRI2cbvKcYHPMKYlo4ibO3ZXG4kRnuC195QBJzMR0VLd7p08kYInDEEiasufnLsY7LhFwPIml2fPergw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;288&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;正文结束&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;推荐阅读 ↓↓↓&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;1.&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2MTIzMzY3Mw==&amp;amp;mid=2247527958&amp;amp;idx=1&amp;amp;sn=6d407650c574b304b681aecbf5c1323b&amp;amp;chksm=ea5fa370dd282a66a8b6463fb60ad850d47cc35d727ac4b66fdf29f88ce30eef400287b1b746&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;全新 IDEA 2022.2 正式发布，新特性真香！&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;全新 IDEA 2022.2 正式发布，新特性真香！&lt;/a&gt;&lt;/p&gt;&lt;p&gt;2&lt;span&gt;.&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2MTIzMzY3Mw==&amp;amp;mid=2247488035&amp;amp;idx=1&amp;amp;sn=5300893903094128bdc20ce2a5717a50&amp;amp;chksm=ea5cdf45dd2b56531ac0c3a8fb8b56b06bc546785f8772a4d02e2ca87c4e30f25b24bf21f784&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-itemshowtype=&quot;0&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;从零开始搭建创业公司后台技术栈&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;3&lt;span&gt;.&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2MTIzMzY3Mw==&amp;amp;mid=2247488928&amp;amp;idx=1&amp;amp;sn=4c56dd675e1b32a73b698df3d5e8609f&amp;amp;chksm=ea5cd8c6dd2b51d05e6d6d715418241f471ccb3002719263b2d0e092763f68f3691249970a08&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-itemshowtype=&quot;0&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;程序员一般可以从什么平台接私活？&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;4&lt;span&gt;.&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2MTIzMzY3Mw==&amp;amp;mid=2247527535&amp;amp;idx=1&amp;amp;sn=6cb6c086057aebaedc47859518eb80da&amp;amp;chksm=ea5fa109dd28281f3a90a36ea1deb7e8d1658d221f718ea15023b0345b53fc496c137496d10d&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;Spring中毒太深，离开Spring我连最基本的CRUD都不会写了...&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;Spring中毒太深，离开Spring我连最基本的CRUD都不会写了...&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;5.&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2MTIzMzY3Mw==&amp;amp;mid=2247513283&amp;amp;idx=1&amp;amp;sn=3b3d8e893a1241cf5af2150370ae9d71&amp;amp;chksm=ea5f79a5dd28f0b3a7603b1fbdb306f77ac64223bd05c4b7f0dc0469f77a68359810c5de2a01&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;为什么国内 996 干不过国外的 955呢？&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;为什么国内 996 干不过国外的 955呢？&lt;/a&gt;&lt;/p&gt;&lt;p&gt;6&lt;span&gt;.&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2MTIzMzY3Mw==&amp;amp;mid=2247528236&amp;amp;idx=1&amp;amp;sn=c675d5d3aede21b4b7ebbba21eadf96c&amp;amp;chksm=ea5fa24add282b5cfb13757cd534ec600fb910f9dcb7f3ee3dea5e7929e0fbbd22381625ff20&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;中国的铁路订票系统在世界上属于什么水平？&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;中国的铁路订票系统在世界上属于什么水平？&lt;/a&gt;                        &lt;/span&gt;&lt;/p&gt;&lt;p&gt;7&lt;span&gt;.&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2MTIzMzY3Mw==&amp;amp;mid=2247488564&amp;amp;idx=1&amp;amp;sn=256862239b12a1313919ee3ea6ff0d1c&amp;amp;chksm=ea5cd952dd2b50443feec88eb893233d2f6cf33f89e2ce72192c98035fd26cb0eb797a86f8f0&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-itemshowtype=&quot;0&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;15张图看懂瞎忙和高效的区别！&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&lt;img class=&quot;__bg_gif rich_pages wxw-img&quot; data-fileid=&quot;100030073&quot; data-ratio=&quot;0.1328125&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/3GQek52mKtWDXtSkfViaQ2FZ2ZfSyjBcSkArjQVCMH4a7uxg6Vkibiaiciaiae2uxvzia7yib04tleLiaqcFVGUf2vcMf4A/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;640&quot;/&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;/p&gt;&lt;/div&gt;

          

          



                    
          &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>0189751a978a702e1837c149c69c56b9</guid>
<title>15分钟20图学懂从0到1搭建企业级数据治理体系【建议收藏】</title>
<link>https://toutiao.io/k/ibfmokh</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mp-common-profile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzUyMDA4OTY3MQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/TwK74MzofXdtvHKjv7OHYYSTQ2QOVuyAia3LaU56kibxKLlX5Lo9bgeUfz1R4JDmdW7ZGYSLqsiaBl3nTOwOmFOFQ/0?wx_fmt=png&quot; data-nickname=&quot;浪尖聊大数据&quot; data-alias=&quot;bigdatatip&quot; data-signature=&quot;主要分享大数据框架，如spark，flink，kafka，hbase原理源码，同时会分享数据仓库，图计算等浪尖擅长领域。&quot; data-from=&quot;0&quot; data-is_biz_ban=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;数据治理是企业数据建设必不可少的一个环节。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;好的数据治理体系可以盘活整条数据链路，最大化保障企业数据的&lt;code&gt;采集&lt;/code&gt;、&lt;code&gt;存储&lt;/code&gt;、&lt;code&gt;计算&lt;/code&gt;和&lt;code&gt;使用&lt;/code&gt;过程的可控和可追溯。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如何构建企业数据治理体系？企业数据治理过程需要注意哪些问题？总体而言，不能一口一个胖子，路要一步一步地走。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下面我将结合&lt;code&gt;企业级数据治理&lt;/code&gt;经验，详细介绍&lt;code&gt;从0到1&lt;/code&gt;搭建数据治理体系全流程，帮你梳理数据治理的主要内容以及过程中会遇到的哪些坑。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如有遗漏之处，欢迎留言评论区探讨。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.29856115107913667&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/icgPoXwUicOgU20v7jWoQPjwYWQkXqMSgNh0oxd6LW4ibahfibx7nicBv4TV3NXHjsl93GMfX35kPIo9E8JJ6ITs2eA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1390&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;1 数据治理到底是在做什么&lt;/span&gt;&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;1.1  一个小故事&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在正文之前，我先介绍一个小故事。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;年底了，企业财务管理员小张需要统计公司的金融财务情况。忙碌了一年，公司老板亟需知道公司目前的运营状况。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;小张需要考虑哪几个点呢：&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;“&lt;/span&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;公司目前有哪些财产？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;这些财产从哪里来？用到了哪些地方？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;是否所有财产的使用均符合规范和制度？&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;span&gt;”&lt;/span&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;幸好小张年初已经制定了一套管理标准。每笔财产的出入都有记录且严格把控使用情况，过程可追溯可审查。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最后，小张得到了领导们的一致好评。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;1.2 数据治理做的事情&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;故事中的小张监管着公司所有金融财产活动，确保财产使用的有序高效。这也是数据治理角色的类似功能。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;“&lt;/span&gt;&lt;p&gt;&lt;strong&gt;数据治理的核心工作：&lt;/strong&gt;&lt;span&gt; 在企业的数据建设进程中，保障企业的数据资产得到正确有效&lt;/span&gt;地&lt;span&gt;管理。&lt;/span&gt;&lt;/p&gt;&lt;span&gt;”&lt;/span&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一般来说，数据从外部或者内部产生后，经过大数据手段处理，流转到不同的业务端，为企业的上层应用提供数据赋能。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.38328530259365995&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/icgPoXwUicOgU20v7jWoQPjwYWQkXqMSgNxvqlHhOzosVJiccj94TyFiboq2tOCTLdicXpoExTnyz8jRVwN4xvNjBvw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1041&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;整个过程，如图所示。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;我们先做一些类似数据同步的工作将数据放入到大数据系统中&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;数据进来后需要管理和存储，即参考建模理论和实际场景建设数仓&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;经过主题规划、维度确定、标签计算输出等步骤处理&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;数据输出到报表、应用端使用&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;整体流程数据治理体系将全程监管。要确认进出系统的&lt;code&gt;数据质量&lt;/code&gt;怎么样？是否可转化&lt;code&gt;数据资产&lt;/code&gt;？&lt;code&gt;数据血缘&lt;/code&gt;是否可追溯、&lt;code&gt;数据安全&lt;/code&gt;等问题。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;“&lt;/span&gt;&lt;p&gt;脏乱差的数据是无法使用的，甚至严重埋雷。&lt;/p&gt;&lt;span&gt;”&lt;/span&gt;&lt;/blockquote&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;2 为什么要做数据治理&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有一些企业对这个问题的概念很模糊，认为目前的数据规模很小，人为可控，暂时不需要做数据治理。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但是在实际使用中还是会遇到很多问题：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;数据监管力度不够，出现脏数据&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;数据体系逐渐规模变大，管理混乱&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;数据的血缘丢失，无法回溯旧、老的数据&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;无论企业的数据规模如何，我认为还是提起做好数据治理的规划。考虑到成本的问题，可以分阶段进行。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;“&lt;/span&gt;&lt;p&gt;&lt;strong&gt;为什么要进行数据治理：&lt;/strong&gt;&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;你的数据是否真的可用，缺失和异常值怎么办？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;数据从哪里来到哪里去，血缘信息是否丢失&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;数据访问是否安全，明文标识还是加密？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;新的数据加工参考什么规范，维度和标签管理是否存在标准？&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;span&gt;”&lt;/span&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;有剑在手不用和无剑可用是两回事&lt;/code&gt;。提前做好数据治理规划，会节省后续的改造成本，避免过程冗余重构或者推倒重来等情况的发生。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7075630252100841&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/icgPoXwUicOgU20v7jWoQPjwYWQkXqMSgNlMncb3ItaybSSbuPiaQtlia3ot7pnhQ6qLuu9494Cx4oEvWZbMRoJqkg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;595&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;数据治理可以有效保障数据建设过程在一个合理高效的监管体系下进行，最终提供&lt;code&gt;高质量&lt;/code&gt;、&lt;code&gt;安全&lt;/code&gt;、&lt;code&gt;流程可追溯&lt;/code&gt;的业务数据。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;3 数据治理体系&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;企业数据治理体系包括&lt;code&gt;数据质量管理&lt;/code&gt;、&lt;code&gt;元数据管理&lt;/code&gt;、&lt;code&gt;主数据管理&lt;/code&gt;、&lt;code&gt;数据资产管理&lt;/code&gt;、&lt;code&gt;数据安全&lt;/code&gt;及&lt;code&gt;数据标准&lt;/code&gt;等内容。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5592654424040067&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/icgPoXwUicOgU20v7jWoQPjwYWQkXqMSgNrpPzMKFWabscviboGHa98qO5KkgQHqWYTUwLj5yjwu3sZibH7MFr6vLg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1198&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;1）数据质量&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一般采用业内常用的标准来衡量数据质量的好坏：&lt;code&gt;完整性&lt;/code&gt;、&lt;code&gt;准确性&lt;/code&gt;、&lt;code&gt;一致性&lt;/code&gt;和&lt;code&gt;及时性&lt;/code&gt;。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;完整性：数据的记录和信息是否完整，是否存在缺失情况&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;准确性：数据汇总记录的信息和数据是否准确，是否存在异常或者错误&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;一致性：多个业务数仓间的公共数据，必须在各个数据仓库中保持一致&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;及时性：数据能及时产出和预警&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4424552429667519&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/icgPoXwUicOgU20v7jWoQPjwYWQkXqMSgNI0fofLxwlQ9BNBEOLT4GcrbCSuaAn6qDqjnLyJYmO1xxFiaJus1kriaw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;782&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;2）元数据管理&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;元数据是关于数据的组织、数据域及其关系的信息，通俗理解，元数据就是描述数据的数据。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5949044585987261&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/icgPoXwUicOgU20v7jWoQPjwYWQkXqMSgNZZciaDThP7fKYdkbPiavy9pibKwxZFrWfLGvUyF8VibNfpj9jew0ibHh3dg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;785&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;元数据包含&lt;code&gt;技术元数据&lt;/code&gt;和&lt;code&gt;业务元数据&lt;/code&gt;。可以帮助数据分析人员清楚了解企业拥有什么数据，它们存储在哪里，如何抽取、清理、维护z这类数据，也即&lt;code&gt;数据血缘&lt;/code&gt;。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;帮助构建业务知识体系，确立数据业务含义可解释性&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;提升数据整合和溯源能力，血缘关系可维护&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;建立数据质量稽核体系，分类管理监控&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;3）主数据管理&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;企业主数据指企业内一致并共享的业务主体，大白话理解就是各专业公司和业务系统间共享的数据。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;常见的主数据比如公司的&lt;code&gt;员工&lt;/code&gt;、&lt;code&gt;客户数据&lt;/code&gt;、&lt;code&gt;机构信息&lt;/code&gt;、&lt;code&gt;供应商信息&lt;/code&gt;等。这些数据具有权威性和全局性，可归约至公司的企业资产。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一般主数据管理需要遵循如下几点：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;管理和监管各组织机构、子公司、部门对主数据的访问，制定访问规范和管理原则&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;定期进行主数据评估，判断既定目标的完善程度&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;组织相关人员和机构，统一完善主数据建设&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;提供技术和业务流程支持，全集团集中统筹&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;4）数据资产管理&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一般企业在数字化转型时都会考虑数据资产梳理。你的数据有没有被合理利用？如何产生最大价值？这是数据资产管理关心的核心工作。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在构建企业资产时一般会考虑不同角度，即业务角度和技术角度，最后进行合并，输出统一的&lt;code&gt;数据资产分析&lt;/code&gt;，并向外提供统一的数据资产查询服务。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.24672489082969432&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/icgPoXwUicOgU20v7jWoQPjwYWQkXqMSgNSmqvYicepmMP7fUujbvIddaImfawkicUYOBg1ibnjTxHhLBgic2a53gMHw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;916&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如何盘活数据，形成数据资产，提供完整的数据资产全景视图，可方便运营者全局、宏观地掌控企业资产动态。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;5）数据安全&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;数据安全是企业数据建设必不可少的一环，我们的数据都存储在大大小小的磁盘中，对外提供不同程度的查询和计算服务。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;需要定时对数据进行&lt;code&gt;核查&lt;/code&gt;、&lt;code&gt;敏感字段加密&lt;/code&gt;、&lt;code&gt;访问权限&lt;/code&gt;控制，确保数据能够被安全地使用。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;6）数据标准&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大白话理解，我们需要在组织内定义一套关于数据的规范，好让我们都能理解这些数据的含义。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;今天张三说这个客户号是办理银行卡的客户，明天李四又说是借贷过的客户。对比一看，两者的字段类型和长度一致，到底要采纳哪个意见呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;数据标准是保障数据的内外部使用和交换的一致性和准确性的规范性约束，通过&lt;code&gt;统一规范&lt;/code&gt;，消除&lt;code&gt;二义性&lt;/code&gt;。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;4 企业数据治理实施过程&lt;/span&gt;&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;4.1 数据治理实施框架&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;数据治理体系是为了规范业务数据规范、数据标准、数据质量和数据安全中的各类管理任务活动而建立的组织、流程与工具。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过一个常态化的数据治理组织，建立数据&lt;code&gt;集中管理&lt;/code&gt;长效机制，规范数据管控流程，提升数据质量，促进数据标准一致，保障数据共享与使用安全，从而提高企业运营效率和管理水平。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5693916349809885&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/icgPoXwUicOgU20v7jWoQPjwYWQkXqMSgN7tdvic596sMaCIiaNP8fwzLxaQZDRfEbHHuykmLGP1xKFqz0QXcs2dVg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1052&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;4.2 数据治理组织架构&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;企业数据治理体系除了在技术方面的&lt;code&gt;实施架构&lt;/code&gt;，还需要管理方面的&lt;code&gt;组织架构&lt;/code&gt;支撑。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一般在数据治理建设初期，集团会先成立数据治理管理委员会。从上至下由&lt;code&gt;决策层&lt;/code&gt;、&lt;code&gt;管理层&lt;/code&gt;、&lt;code&gt;执行层&lt;/code&gt;构成。决策层决策、管理层制定方案、执行层实施。层级管理、统一协调。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;4.2.1 组织架构&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;1）决策层&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;提供数据标准管理的决策职能，通俗理解即拍板定方案。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;2）管理层&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;审议数据标准管理相关制度&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;对跨部门难的数据标准管理争议事项进行讨论并决策&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;管理重大数据标准事项，提交信息科技管理委员会审议&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;3）执行层&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;业务部门：负责业务线数据标准的制定、修改、复审，推广落实数据标准等&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;科技开发：承担治理平台、数据标准、数据质量等实施工作；系统设计和开发工作中遵循数据标准&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;科技运营：负责技术标准的制定和技术推广&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7669345579793341&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/icgPoXwUicOgU20v7jWoQPjwYWQkXqMSgNpZYFzPElynsmg1h6iaVGe4VsTpZnRAPZhRwoGQ6ibYJMMtzcNaBza3CA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;871&quot;/&gt;&lt;/figure&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;4.2.2 管理层职责&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;1）项目经理&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;确定项目目标、范围和计划&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;制定项目里程碑&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;管理跨项目协同&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;2）专家评审组&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;评审项目方案，确定方案的合理性&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;3）PMO&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;确保项目按计划执行&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;管理项目重大风险&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;执行跨项目协同、沟通&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;组织项目关键评审&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;3）数据治理专项组&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;执行各项目的落地实施和运营推广，推动执行层的实施数据治理技术落地和项目进展。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4255983350676379&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/icgPoXwUicOgU20v7jWoQPjwYWQkXqMSgNh6x9ibueddtzjWVrEYNM49ouLayI4EfzyI34nbxG5PYQsDTKL7K8beQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;961&quot;/&gt;&lt;/figure&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;4.2.3 执行层职责&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;数据架构师、数据治理专家和业务专员形成数据治理&quot;铁三角&quot;，紧密协作，推进数据治理与数据架构落地。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.46511627906976744&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/icgPoXwUicOgU20v7jWoQPjwYWQkXqMSgN0SUI6uiammt66eUqR0ZEkBdP3rIVaRdKVQXMpZabFXBJRMibibW51jg5g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;860&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;1）业务专员&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;业务专员作为业务部门数据治理的接口人，在&lt;code&gt;标准&lt;/code&gt;、&lt;code&gt;质量&lt;/code&gt;、&lt;code&gt;应用&lt;/code&gt;等领域组织业务人员开展工作&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;2）数据治理专家&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;数据治理专家作为数据治理组成员，负责设计数据架构，运营数据资产；牵头组织业务、IT达成数据治理目标。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;3）数据架构师&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;数据架构师作为IT开发部门的专家，承担数据标准落地、模型落地的重任，协助解决数据质量问题。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;4.3 数据治理平台&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在确定了技术实施方案和组织管理架构，下面需要进行数据治理体系的落地实施。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在大型企业中一般会开发一个完整的&lt;code&gt;数据治理平台&lt;/code&gt;，囊括所有数据治理功能，对外提供平台服务。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;1）核心功能&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;数据治理平台作为数据治理的产品体系，旨在保障数据平台的数据是安全、可靠的、标准的、有价值的。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.40924092409240925&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/icgPoXwUicOgU20v7jWoQPjwYWQkXqMSgNY9IrdiaZjUKyH0hlicRRPlzLoPHIkW351ZKtgNoiceSGicCqU4iaw34Azuw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;909&quot;/&gt;&lt;/figure&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;数据资产管理&lt;/code&gt;：提供面向用户的场景化搜素，提供全景数据资产地图，方便快速查找资产和资产分析&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;数据标准管理&lt;/code&gt;：统一定制数据标准，提高包括字段、码值、数据字典管理，保障业务数据和中台数据的统一标准&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;数据质量监控&lt;/code&gt;：提供事前、事中、事后的数据质量体系，支持数据质量监控规则配置、告警管理等功能&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;数据安全&lt;/code&gt;：提供数据安全脱敏、安全分级和监控&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;数据建模中心&lt;/code&gt;：统一建模，提供业务系统建模和模型管理&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;2）元数据管理&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;元数据管理系统作为数据治理平台的前端展示门户，帮助实现对数据资产的&lt;code&gt;快速检索&lt;/code&gt;能力，提高数据使用有效性和效率。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过建立完整且一致的元数据管理策略，提供集中、统一、规范的元数据信息访问、查询和调用功能。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3097165991902834&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/icgPoXwUicOgU20v7jWoQPjwYWQkXqMSgN2dRTrRn3xTRCJG2D4icYNE7arfHNu5WBOfhK7UFT2zKChszLN3rostg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1482&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;3）数据质量&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;数据质量监控：支持所有用户进行数据质量监控规则配置&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;规则阻断：配置数据质量监控阻断规则，数据质量出现差异可实时阻断下游作业运行，屏蔽错误结果链路扩散。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;告警：数据质量出现预设偏差，及时发出预警通知及时修复&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5091240875912408&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/icgPoXwUicOgU20v7jWoQPjwYWQkXqMSgNDU2cyP7wWqcuwicgZ5ttleE7IFNW7W9YNHuHO7ajBBpqgKNQdUvfFzw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;548&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;4）数据标准&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;支持定制统一的数据标准平台，包括字段标准管理，码值标准管理以及字典管理，业务源数据和中台数据统一标准。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3850129198966408&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/icgPoXwUicOgU20v7jWoQPjwYWQkXqMSgN4GvUC4OrUtVQIOcyoFsDicMokkFLCGIljCuiczK4YEo77rtGNO24SSdg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;774&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;5）数据安全&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;基于集团数据资产实现数据安全分级管理，自动识别安全信息；提供数据访问安全行为监测，及时识别访问风险。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4506089309878214&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/icgPoXwUicOgU20v7jWoQPjwYWQkXqMSgNIrbkmzCNwAmibVvC7Pic9jN2VUqLRCq45czLZ500fr0d9EHHA9qFTmeQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;739&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;4.4 数据治理评估&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;数据治理平台开发完成并运行，需要对整体数据治理体系的效果进行验证和评估。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;“&lt;/span&gt;&lt;p&gt;1）数据是否可以消除&quot;脏、乱、差&quot;的现象&lt;br/&gt;2）数据资产是否最大价值化&lt;br/&gt;3）所有数据的血缘是否完整可追溯。。。&lt;/p&gt;&lt;span&gt;”&lt;/span&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;1）数据资产&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过构建数据资产管理体系，实现资产全覆盖，并支持全局搜索和精准定位目标资产。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;实现全局搜索，面向用户提供场景化检索服务&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;支持标签、数据地图、表名和字段名等多种检索维度&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;支持进行数据地图，源业务数据字典的结果筛选&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;比如支持PV/UV用户搜索和资产展示，明确服务目标&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7063197026022305&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/icgPoXwUicOgU20v7jWoQPjwYWQkXqMSgNeUMoF1JGQniah0c4PwtQYg3YybyZdIt3CxAf8Wnlm6QFr2sdJ1AgFBg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;807&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;2）数据标准&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;新旧数据标准沉淀，打通了数据建模工具、数据标准库和词根标准库，落地数据标准和词根。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;实现数据标准库100%拉通&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;智能识别数据标准和引用&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;客户端同步更新数据标准、词根&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.28774928774928776&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/icgPoXwUicOgU20v7jWoQPjwYWQkXqMSgNnt9nLicgYLCKbEwSqVzTEuJrdNpHMuVvkeht9rFQ2bqAR31j00Y6fmg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1053&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;3）数据安全&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;保持&lt;code&gt;事前制度建设&lt;/code&gt;、&lt;code&gt;事中技术管控&lt;/code&gt;、&lt;code&gt;事后监控审计&lt;/code&gt;的原则建立全流程数据安全管控体系。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;基于以上数据安全管控体系，支持数据安全定级，构建灵活的数据安全共享流程。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.34267515923566877&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/icgPoXwUicOgU20v7jWoQPjwYWQkXqMSgNnBvX01pBxADJaPAAr2CesP6JoqePrWiaEXia09gAbiaiaHwNaNPdffpAlw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;785&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;4）数据质量&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过数据质量雷达图，定期进行数据和任务质量打分，综合考察数据质量效果。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;数据完整性：查看数据项信息是否全面、完整无缺失&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;告警响应程度：日常管理、应急响应、降低影响；避免数据损毁和丢失&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;监控覆盖程度：确保数据遵循统一的数据标准和规范要求&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;作业稳定性：监控作业稳定性，是否存在作业异常等问题&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;作业时效性：检查任务对应的数据项信息获取是否满足预期要求&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8035087719298246&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/icgPoXwUicOgU20v7jWoQPjwYWQkXqMSgN0HqQP0Mbt6gvu9I0IIZ2pzmAnUaYmfNT1GCmC63JUMKJq5iaDfaUvDQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;855&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;5 数据治理的几点误区&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;1）数据治理是否要做得大而全&lt;/strong&gt;&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;“&lt;/span&gt;&lt;p&gt;这是一个经典问题，一般对于不同阶段和规模的企业，数据治理的实施程度会有所不同。一般建议先根据自身的数据状况分阶段进行，避免盲目铺开规模，过程中可调整。&lt;/p&gt;&lt;span&gt;”&lt;/span&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;2）数据治理只是技术考虑的事情&lt;/strong&gt;&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;“&lt;/span&gt;&lt;p&gt;正如文中所说，数据治理不仅仅是技术团队的事情，而是整个集团一起协作完成。其中就包括各业务线以及其他管理组织，没有一个好的实施方案和协作机制，往往事倍功半。&lt;/p&gt;&lt;span&gt;”&lt;/span&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;3）数据治理可以短期见效&lt;/strong&gt;&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;“&lt;/span&gt;&lt;p&gt;数据治理是个长期过程，会跟随着企业数据的规模和数仓规划的变更同步调整，部分功能可能会在短期内卓有成效，完整体系搭建短期很难实现。&lt;/p&gt;&lt;span&gt;”&lt;/span&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;4）必须得有工具平台，才能开展数据治理&lt;/strong&gt;&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;“&lt;/span&gt;&lt;p&gt;俗话说工欲善其事必先利其器，有好的工具当然是更好，前提是已经有了成熟的数据治理体系规划和策略。工具和技术手段目前市面上很成熟，先把理论给铺垫好。&lt;/p&gt;&lt;span&gt;”&lt;/span&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;5）数据治理感觉很模糊？不知道最后的落地结果&lt;/strong&gt;&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;“&lt;/span&gt;&lt;p&gt;数据治理是一个长期工作，需要相关从业者根据企业的数据现状和管理模式去构建和调整，建议边做实践边总结归纳，小步慢跑是一个很好的方式。&lt;/p&gt;&lt;span&gt;”&lt;/span&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>0c3f0f1c73edbbba789cf30431ec24f1</guid>
<title>译文推荐｜详解 Pulsar Broker 负载均衡</title>
<link>https://toutiao.io/k/a9q18te</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                                       &quot; id=&quot;js_content&quot;&gt;&lt;blockquote&gt;&lt;p&gt;#本文翻译自 StreamNative 博客《Achieving Broker Load Balancing with Apache Pulsar》。&lt;/p&gt;&lt;p&gt;作者 Heesung Sohn、王锴，StreamNative 开发工程师。&lt;/p&gt;&lt;p&gt;校对与整理：StreamNative。&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;h1&gt;译者简介&lt;/h1&gt;&lt;p&gt;王中兴，eBay 消息中间件团队成员。&lt;/p&gt;&lt;/blockquote&gt;&lt;h1&gt;简介&lt;/h1&gt;&lt;p&gt;本文将探讨负载均衡在分布式计算系统中的重要性，并深入分析 Pulsar 处理 Broker 负载均衡的方式。首先我们介绍 Pulsar 中的 Topic-Bundle 分组、Bundle-Broker 归属关系以及负载数据模型。然后讲解 Pulsar 的负载均衡逻辑，通过时序图来展示 Bundle 的分配、拆分和缩减过程。通过本文，你将了解 Pulsar Broker 是如何做到动态均衡的。&lt;/p&gt;&lt;p&gt;在深入探讨 Pulsar Broker 负载均衡的细节之前，我们先简要讨论分布式计算的挑战，特别是单体架构系统的挑战。&lt;/p&gt;&lt;h2&gt;分布式流系统中负载均衡的挑战&lt;/h2&gt;&lt;p&gt;负载均衡是分布式计算中的一大关键挑战。分布式系统需要在服务器之间平均分配消息负载，以避免出现服务器过载，从而导致故障并损害集群性能。一个自然而然的合理选择是根据主题来对消息进行拆分，因为同一主题（或主题分区）下的消息可以组织到一起并分配给单个逻辑服务器处理。包括 Pulsar 在内的多数分布式流系统将主题或一组主题视为负载均衡的实体，系统需要在服务器之间平均分配主题或一组主题的消息负载。&lt;/p&gt;&lt;p&gt;当主题负载不可预测时，如何做好主题负载均衡可能会形成挑战。当某些主题的负载增加时，这些主题必须直接卸载或者重新分区，以便将负载重新分配到其他机器。另一种情况是，某些机器流量非常低，甚至空闲，集群需要重平衡来避免服务器资源浪费。&lt;/p&gt;&lt;p&gt;动态重平衡在单体架构中可能会很困难，因为消息在同一个有状态的服务器中处理以及持久化。在单体流式系统中，重平衡通常涉及将消息从一台服务器复制到另一台服务器。管理员必须仔细计算初始主题分布，尽可能避免将来发生重平衡。在许多情况下，管理员需要仔细编排才能执行主题重平衡操作。&lt;/p&gt;&lt;h2&gt;Pulsar 负载均衡概览&lt;/h2&gt;&lt;p&gt;相比之下，Apache Pulsar 则实现了 Broker 的动态负载均衡，无需管理员手工干预。Pulsar 从架构上分离了存储层和计算层，可以更加灵活地分配 Broker 与主题的映射关系。Pulsar Broker 将消息持久化保存到存储服务器，当在 Broker 之间重平衡主题时，无需将消息从一个 Broker 复制到另一个 Broker。在这种情况下，新加入的 Broker 只需要查找 Metadata Store 并指向主题消息所在的正确存储服务器即可。&lt;/p&gt;&lt;p&gt;这里简要讨论一下 Pulsar 的存储架构，以便全面地了解 Pulsar 的扩展能力。在存储层，主题消息被分割成多个 Ledger，这些 Ledger 分布到多个 BookKeeper 服务器，即 Bookie。Pulsar 通过水平扩展 Bookie，即可存储尽可能多的 Ledger（Segment）条目。&lt;/p&gt;&lt;p&gt;对于高写入负载，如果所有 Bookie 都已满，只需增加更多的 Bookie，新的消息条目（即新的 Ledger）即可存储到这些新的 Bookie 上。通过这种分段设计，在存储扩展期间 Pulsar 无需从 Bookie 中重新复制旧消息。对于高读取负载，Pulsar 将消息缓存在 Broker 内存中，所以 Bookie 的读负载会显著卸载到 Broker 上，而 Broker 是负载均衡的。你可以在这篇关于&lt;span&gt;对比 Pulsar 与 Kafka &lt;sup&gt;[1]&lt;/sup&gt;&lt;/span&gt; 的博文中了解更多关于 Pulsar 存储架构以及扩展能力的信息。&lt;/p&gt;&lt;h1&gt;在 Bundle 级别分配主题到 Broker&lt;/h1&gt;&lt;p&gt;从客户端的角度来看，Pulsar 主题是客户端发布和消费消息的基本单元。在 Broker 端，单个 Broker 处理所有客户端对某个主题的所有消息请求。主题可以被分区，而分区可以分布在多个 Broker 上。你可以将主题分区视为一个主题，而将被分区的主题视为一组主题。&lt;/p&gt;&lt;p&gt;由于每个 Broker 只处理一个主题效率较低，所以一般 Broker 需要同时处理多个主题。对于这种多主题归属关系，Pulsar 引入了 Bundle 的概念来作为一种中间层组。&lt;/p&gt;&lt;p&gt;在 Pulsar 中，相关的主题可以在逻辑上归到一个命名空间中。命名空间是一个管理单元，例如可以设置一套配置策略，应用到命名空间中的所有主题上。命名空间内部被分成多个分片，即 Bundle，每个 Bundle 是负载均衡的分配单元。&lt;/p&gt;&lt;p&gt;Pulsar 使用 Bundle 来对主题进行分片，这有助于减少要跟踪的信息量。例如，Pulsar LoadManager 聚合了主题负载统计信息，比如 Bundle 层的消息速率，这有助于减少要监控的负载样本数量。此外，Pulsar 需要跟踪当前是哪个 Broker 服务于特定主题。得益于 Bundle，Pulsar 可以减少维护这种归属关系所需的存储空间。&lt;/p&gt;&lt;p&gt;&lt;span&gt;Pulsar 使用哈希算法将主题映射到 Bundle。&lt;/span&gt;&lt;span&gt;如下是一个命名空间包含两个 Bundle 的示例。&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;&lt;span/&gt;&lt;code&gt;Bundle_Key_Partitions: [0x00000000, 0x80000000, 0xFFFFFFFF]&lt;br/&gt;Bundle1_Key_Range: [0x00000000, 0x80000000)&lt;br/&gt;Bundle2_Key_Range: [0x80000000, 0xFFFFFFFF]&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Pulsar 通过 &lt;code&gt;Long hashcode = hash(topicName)&lt;/code&gt; 来计算给定主题名的哈希码。假设 &lt;code&gt;hash(“my-topic”) = 0x0000000F&lt;/code&gt;，在已知 Bundle Key 范围的情况下，Pulsar 可通过 &lt;code&gt;NamespaceBundle getBundle(hashCode)&lt;/code&gt; 进行二分搜索，找到主题所属的 Bundle。在此示例中，“my-topic” 属于 “Bundle1”。&lt;/p&gt;&lt;h1&gt;Bundle 按需动态归属到 Broker&lt;/h1&gt;&lt;p&gt;Pulsar 计算层（Broker）和存储层（Bookie）分离的一大优势是 Pulsar Broker 是无状态的，基于动态 Bundle 归属可以实现良好的水平扩展性。当 Broker 过载后，可以轻松地将更多 Broker 加入集群并重新分配 Bundle 归属关系。&lt;/p&gt;&lt;p&gt;Pulsar 使用服务端发现机制来发现给定主题当前的 Bundle-Broker 归属关系，将客户端重定向到 Owner Broker 的 URL。这种发现逻辑需要知道：&lt;/p&gt;&lt;p&gt;Pulsar 将 Bundle 范围和归属关系存储在 Metadata Store 中，例如 ZooKeeper 或 etcd，这些信息也会缓存在每个 Broker 中。&lt;/p&gt;&lt;h1&gt;负载数据模型&lt;/h1&gt;&lt;p&gt;负载均衡决策中至关重要的一点是从 Broker 端收集最新的负载信息。Pulsar 不断将以下负载数据更新到内存缓存和 Metadata Store 中，并将其复制到 Leader Broker。基于这些负载数据，Leader Broker 执行 Topic-Broker 分配、Bundle 拆分以及卸载逻辑：&lt;/p&gt;&lt;h1&gt;负载均衡时序图&lt;/h1&gt;&lt;p&gt;本节将通过时序图来展示负载均衡逻辑：&lt;br/&gt;1.将主题动态分配到 Broker（&lt;span&gt;阅读完整文档&lt;sup&gt;[2]&lt;/sup&gt;&lt;/span&gt;）。&lt;br/&gt;2.拆分过载的 Bundle（&lt;span&gt;阅读完整文档&lt;sup&gt;[3]&lt;/sup&gt;&lt;/span&gt;）。&lt;br/&gt;3.从过载的 Broker 中卸载 Bundle（&lt;span&gt;阅读完整文档&lt;sup&gt;[4]&lt;/sup&gt;&lt;/span&gt;）。&lt;/p&gt;&lt;h2&gt;将主题动态分配到 Broker&lt;/h2&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;313&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.5412244897959184&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/0EIbbCE3P2ZC8AKWRnnRuWq7Sjl9ondBicfY25BxgbmpxljibSbntduiaHmrsDU1rJkk6nkVfjicbhTOGuRsicyskvA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1225&quot;/&gt;&lt;/p&gt;&lt;p&gt;假设某客户端想要读写主题，现在试图连接到一个 Broker。该客户端先会连接到一个随机的 Broker，该 Broker 首先根据主题的哈希码以及命名空间的 Bundle 范围搜索匹配的 Bundle。然后，该 Broker 会查询 Metadata Store，检查所匹配的 Bundle 是否属于某 Broker。如果已经归属，该 Broker 会将客户端重定向到 Owner URL。否则，会将客户端重定向到 Leader 以进行 Broker 分配。Broker 分配逻辑如下：Leader 首先基于配置好的规则过滤出可用的 Broker 列表，然后随机选择一个负载最少的 Broker 分配给 Bundle（如下文第一步所示），并返回该 Broker 的 URL；Leader 将客户端重定向到该 URL，客户端即可连接到分配的 Broker。新的 Broker-Bundle 归属关系会在 Metadata Store 中创建一个临时锁，一旦 Owner 不可用之后该锁会自动释放。&lt;/p&gt;&lt;h3&gt;第一步：选定 Broker&lt;/h3&gt;&lt;p&gt;这一步从已过滤的可用 Broker 列表中选定一个 Broker，使用 &lt;code&gt;ModularLoadManagerStrategy&lt;/code&gt;（默认为 &lt;code&gt;LeastLongTermMessageRate&lt;/code&gt;）。&lt;code&gt;LeastLongTermMessageRate&lt;/code&gt; 策略计算 Broker 的负载分数，并从分数最小的 Broker 中随机选择一个，计分规则如下：&lt;/p&gt;&lt;h2&gt;拆分过载的 Bundle&lt;/h2&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;277&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.47985781990521326&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/0EIbbCE3P2ZC8AKWRnnRuWq7Sjl9ondBfYx78amv7d5xXib8iclGCrZKwtoPlKxClxtuqSO0yRgfPaS5PDia3rBJw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;844&quot;/&gt;&lt;/p&gt;&lt;p&gt;Leader Broker 根据 Bundle 负载数据判断哪些 Bundle 的负载超过阈值（见第二步），并要求 Owner Broker 进行 Bundle 拆分。具体的拆分逻辑如下：Owner Broker 首先计算拆分位置（见第三步），然后据此重新拆分目标 Bundle（见第四步）；完成拆分之后，Owner Broker 将最新的 Bundle 归属关系和范围更新到 Metadata Store 中。如果启用了 &lt;code&gt;LoadBalancerAutoUnloadSplitBundlesEnabled&lt;/code&gt;，新拆分的 Bundle 可以从 Owner Broker 中自动卸载。&lt;/p&gt;&lt;h3&gt;第二步：查找目标 Bundle&lt;/h3&gt;&lt;pre&gt;&lt;code/&gt;&lt;/pre&gt;&lt;p&gt;如果启用了 &lt;code&gt;loadBalancerAutoBundleSplitEnabled&lt;/code&gt;（默认为 true），则启用自动拆分 Bundle 功能，Leader Broker 会判断是否有 Bundle 的负载超过 &lt;code&gt;LoadBalancerNamespaceBundle&lt;/code&gt;* 配置的阈值。&lt;/p&gt;&lt;pre&gt;&lt;span/&gt;&lt;code&gt;Defaults&lt;br/&gt;LoadBalancerNamespaceBundleMaxTopics = 1000&lt;br/&gt;LoadBalancerNamespaceBundleMaxSessions = 1000&lt;br/&gt;LoadBalancerNamespaceBundleMaxMsgRate = 30000&lt;br/&gt;LoadBalancerNamespaceBundleMaxBandwidthMbytes = 100&lt;br/&gt;LoadBalancerNamespaceMaximumBundles = 128&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果命名空间中的 Bundle 个数已经达到或超过 &lt;code&gt;MaximumBundles&lt;/code&gt;，则会跳过拆分逻辑。&lt;/p&gt;&lt;h3&gt;第三步：计算 Bundle 拆分边界&lt;/h3&gt;&lt;p&gt;接下来计算目标 Bundle 的拆分边界。Bundle 拆分边界算法可通过 &lt;code&gt;supportedNamespaceBundleSplitAlgorithms&lt;/code&gt; 配置。假设某个命名空间有两个 Bundle 范围，范围分布是 (0x0000, 0X8000, 0xFFFF)，现在要拆分第一个 Bundle 范围 (0x0000, 0x8000)，可使用如下拆分算法：&lt;/p&gt;&lt;p&gt;RANGE_EQUALLY_DIVIDE_NAME（默认算法）：该算法将目标 Bundle 拆分为具有相同哈希范围大小的两个部分，例如要拆分的目标 Bundle 为 (0x0000, 0x8000)，则拆分边界为 [0x4000]。&lt;/p&gt;&lt;p&gt;&lt;span&gt;TOPIC_COUNT_EQUALLY_DIVIDE：&lt;/span&gt;&lt;span&gt;该算法将目标 Bundle 拆分为具有相同主题数的两个部分。&lt;/span&gt;&lt;span&gt;假设在目标 Bundle [0x0000, 0x8000) 中有 6 个主题：&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;&lt;span/&gt;&lt;code&gt;hash(topic1) = 0x0000&lt;br/&gt;hash(topic2) = 0x0005&lt;br/&gt;hash(topic3) = 0x0010&lt;br/&gt;hash(topic4) = 0x0015&lt;br/&gt;hash(topic5) = 0x0020&lt;br/&gt;hash(topic6) = 0x0025&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这种情况会在 0x0012 处进行拆分，使左右两边的主题数相同。如果要拆分的目标 Bundle 为 [0x0000, 0x8000)，则拆分边界为 [0x0012]。&lt;/p&gt;&lt;h3&gt;第四步：根据边界拆分 Bundle&lt;/h3&gt;&lt;p&gt;&lt;span&gt;示例：&lt;/span&gt;&lt;br/&gt;&lt;span&gt;1.给定 Bundle 分区为 [0x0000, 0x8000, 0xFFFF]，拆分边界为 [0x4000]。&lt;/span&gt;&lt;br/&gt;&lt;span&gt;2.拆分后的 Bundle 分布为 [0x0000, 0x4000, 0x8000, 0xFFFF]。&lt;/span&gt;&lt;br/&gt;&lt;span&gt;3.拆分后的 Bundle 范围为 [[0x0000, 0x4000), [0x4000, 0x8000), [0x8000, 0xFFFF]]。&lt;/span&gt;&lt;/p&gt;&lt;h2&gt;从过载的 Broker 中缩减（卸载）Bundle&lt;/h2&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;177&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.3070539419087137&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/0EIbbCE3P2ZC8AKWRnnRuWq7Sjl9ondBKUn4T6t953S2tW3l5ppAG1xW1rbbS31XYRGMZ99qIKmuyIOib4s4Oxg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;964&quot;/&gt;&lt;/p&gt;&lt;p&gt;Leader Broker 根据从所有 Broker 中收集的负载信息，识别出哪些 Broker 已经过载，并触发 Bundle 卸载操作，目的是为了重平衡整个集群的流量。&lt;/p&gt;&lt;p&gt;Leader Broker 默认使用 &lt;code&gt;ThresholdShedder&lt;/code&gt; 策略，计算 CPU、内存以及网络 IO 之间最大资源使用率的平均值。之后，Leader 找到那些负载高于此基于平均值阈值的 Broker（见第五步）。找到过载的 Broker 之后，Leader 要求它们从高吞吐量的主题开始卸载一些主题 Bundle，直至将 Broker 负载降低到临界阈值以下。收到卸载请求后，Owner Broker 从 Metadata Store 中移除目标 Bundle 的归属信息，并关闭客户端的主题连接。&lt;span&gt;然后客户端重新启动 Broker 发现机制。&lt;/span&gt;&lt;span&gt;最终，Leader 将负载较少的 Broker 分配给被卸载的 Bundle，客户端则连接到新的 Broker。&lt;/span&gt;&lt;/p&gt;&lt;h3&gt;第五步：ThresholdShedder：查找过载的 Broker&lt;/h3&gt;&lt;p&gt;ThresholdShedder 首先使用如下公式计算出所有 Broker 的平均资源使用率。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;对每个 Broker： &lt;br/&gt;    usage =  &lt;br/&gt;    max (&lt;br/&gt;    %cpu * cpuWeight&lt;br/&gt;    %memory * memoryWeight,&lt;br/&gt;    %bandwidthIn * bandwidthInWeight,&lt;br/&gt;    %bandwidthOut * bandwidthOutWeight) / 100;&lt;br/&gt;&lt;br/&gt;    usage = x * prevUsage + (1 - x) * usage&lt;br/&gt;&lt;br/&gt;    avgUsage = sum(usage) / numBrokers &lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果 Broker 的资源使用率大于 avgUsage + y，则被认为过载。&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;• 资源使用率的权重（Weight）默认为 1.0，可通过 &lt;code&gt;loadBalancerResourceWeight&lt;/code&gt; 进行配置。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;• 历史使用率乘子 x 可通过 &lt;code&gt;loadBalancerHistoryResourcePercentage&lt;/code&gt; 进行配置。其默认值是 0.9，历史使用率比最近使用率的权重更大。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;• &lt;code&gt;avgUsage&lt;/code&gt; 缓冲值 y 可通过 &lt;code&gt;loadBalancerBrokerThresholdShedderPercentage&lt;/code&gt; 进行配置，默认值是 10%。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h1&gt;总结&lt;/h1&gt;&lt;p&gt;在本博文中，我们回顾了 Pulsar Broker 的负载均衡逻辑，重点关注其时序图。我认为 Broker 负载均衡行为有如下几个要点。&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;• Pulsar 通过 Bundle 将主题分组以便于跟踪，并在 Broker 之间动态地分配和平衡 Bundle。如果特定的 Bundle 发生过载，则自动进行拆分，将分配单元维护在合理的流量水平。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;• Pulsar 将 Broker 全局负载数据（CPU、内存以及网络使用率）以及 Bundle 负载数据（消息输入/输出速率）收集到 Leader Broker，以运行负载均衡算法逻辑：执行 Bundle-Broker 分配、Bundle 拆分和卸载（缩减）。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;• Bundle-Broker 分配逻辑随机选择负载最少的 Broker，并将客户端重定向到分配的 Broker URL。Broker-Bundle 归属关系会在 Metadata Store 中创建临时锁，如果 Owner 不可用（失去归属权）则会自动释放锁。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;• Bundle 拆分逻辑根据 LoadBalancerNamespaceBundle* 配置的阈值查找目标 Bundle，默认情况下 Bundle 范围被平均拆分。拆分后，Owner 默认自动卸载新拆分的 Bundle。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;• Bundle 自动卸载逻辑默认使用 LoadSheddingStrategy，根据 CPU、内存以及网络 IO 的最大资源使用率平均值来查找过载的 Broker。然后 Leader 要求过载的 Broker 卸载一些高负载的主题 Bundle。被卸载的 Bundle 对应的客户端主题连接会被关闭，并重新发起 Bundle-Broker 分配。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4&gt;引用链接&lt;/h4&gt;&lt;p&gt;&lt;code&gt;[1]&lt;/code&gt; 对比 Pulsar 与 Kafka : &lt;em&gt;https://www.splunk.com/en_us/blog/it/comparing-pulsar-and-kafka-how-a-segment-based-architecture-delivers-better-performance-scalability-and-resilience.html&lt;/em&gt;&lt;br/&gt;&lt;code&gt;[2]&lt;/code&gt; 阅读完整文档: &lt;em&gt;https://pulsar.apache.org/docs/administration-load-balance/#assign-topics-to-brokers-dynamically&lt;/em&gt;&lt;br/&gt;&lt;code&gt;[3]&lt;/code&gt; 阅读完整文档: &lt;em&gt;https://pulsar.apache.org/docs/administration-load-balance/#split-namespace-bundles&lt;/em&gt;&lt;br/&gt;&lt;code&gt;[4]&lt;/code&gt; 阅读完整文档: &lt;em&gt;https://pulsar.apache.org/docs/administration-load-balance/#shed-load-automatically&lt;/em&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;▼&lt;/span&gt;&lt;span&gt;&lt;strong&gt;关注「&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;Apache Pulsar&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;」，获取干货与动态&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; ▼&lt;/span&gt;&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mp-common-profile class=&quot;js_uneditable js_wx_tap_highlight&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzUyMjkzMjA1Ng==&quot; data-alias=&quot;ApachePulsar&quot; data-from=&quot;2&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/4ibRRsibIGr0Y7icPiahxgXFRw8a0xAIxOhPqYtRDr0IRNpGRl2oSfGHuvkG9VtahW9thH3btBGXJu9y2dZgb3oOuQ/0?wx_fmt=png&amp;amp;wx_head=1&quot; data-nickname=&quot;ApachePulsar&quot; data-signature=&quot;Apache 软件基金会顶级项目，下一代云原生分布式消息流平台，集消息、存储、轻量化函数式计算为一体，采用计算与存储分离架构设计，支持多租户、持久化存储、多机房跨区域数据复制，具有强一致性、高吞吐、低延时及高可扩展性等流数据存储特性。&quot; has-insert-preloading=&quot;1&quot; data-index=&quot;0&quot; data-origin_num=&quot;235&quot; data-is_biz_ban=&quot;0&quot; data-isban=&quot;0&quot;/&gt;&lt;/section&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;👇🏻&lt;/span&gt;&lt;span&gt;&lt;strong&gt;加入 &lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;Apache Pulsar &lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;中文交流群&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/span&gt;&lt;span&gt;👇🏻&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;‍&lt;/span&gt;&lt;span&gt;‍&lt;/span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/4ibRRsibIGr0ZSe03QyMcdYDoPThku7hjSJibg8nI1vtB8bde5jr1XSdz5iaPJDp7y1aOHupWAIQT1Qr3c1iafE5HXw/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-w=&quot;430&quot;/&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;

          

          



                    
          &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>