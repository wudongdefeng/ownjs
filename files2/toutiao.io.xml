<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>bdf2f9778f557e375411654b9f42f990</guid>
<title>优质网站同好者周刊（第 083 期） | 倾城博客</title>
<link>https://toutiao.io/k/6ncndou</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;content&quot;&gt;&lt;p&gt;&lt;a href=&quot;https://nicelinks.site/?utm_source=weekly&quot;&gt;倾城之链&lt;/a&gt;作为一个开放平台，旨在云集全球&lt;strong&gt;优秀网站&lt;/strong&gt;，探索互联网中更广阔的世界。此周刊，将汇聚过去一周&lt;a href=&quot;https://nicelinks.site/?utm_source=weekly&quot;&gt;倾城&lt;/a&gt;所收录的内容，以飨同好；欢迎推荐或自荐（仅限有独立域名的网站，可以是二级域名）。您如果要了解收录要求，请参见&lt;a href=&quot;https://nicelinks.site/about?utm_source=weekly&quot;&gt;关于倾城&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;备注&lt;/strong&gt;：本周刊&lt;strong&gt;每周五&lt;/strong&gt;生成，首发于个人微信公众号&lt;a href=&quot;https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzI5MDIwMzM2Mg==&amp;amp;action=getalbum&amp;amp;album_id=1530765143352082433&amp;amp;scene=173&amp;amp;from_msgid=2650641087&amp;amp;from_itemidx=1&amp;amp;count=3#wechat_redirect&quot;&gt;晚晴幽草轩&lt;/a&gt;、博客&lt;a href=&quot;https://www.jeffjade.com&quot;&gt;晚晴幽草轩&lt;/a&gt;，以及&lt;a href=&quot;https://forum.lovejade.cn/&quot;&gt;悠然宜想亭&lt;/a&gt;社区；此一键生成脚本基于 &lt;a href=&quot;https://nicelinks.site/post/602d30aad099ff5688618591&quot;&gt;Deno&lt;/a&gt; 编写，并在 Github 开源：&lt;a href=&quot;https://github.com/nicejade/nicelinks-weekly&quot;&gt;nicejade/nicelinks-weekly&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/%E5%AD%A6%E4%B9%A0&quot;&gt;&lt;code&gt;学习&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E8%A7%86%E9%A2%91&quot;&gt;&lt;code&gt;视频&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E6%9C%89%E8%B6%A3&quot;&gt;&lt;code&gt;有趣&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;关键字&lt;/strong&gt;：渐构, 视频, 可交互, YJango, 渐构 Modevol, 有趣, 新颖, 学习方法, 消除误区与偏见, 学习能力&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;生命的遗产是对知识的更新。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/www.modevol.com.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 - 渐构 Modevol&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;： &lt;a href=&quot;https://nicelinks.site/redirect?url=https://www.modevol.com/&quot;&gt;渐构 Modevol&lt;/a&gt; ， 一款新颖、有趣 &lt;a href=&quot;https://nicelinks.site/tags/%E8%A7%86%E9%A2%91&quot;&gt;视频&lt;/a&gt; 学习型网站；由西安电子科技大学教师  YJango（Bilibili 《学习观》UP 主 &lt;a href=&quot;https://nicelinks.site/redirect?url=https://space.bilibili.com/344849038&quot;&gt;@YJango&lt;/a&gt; ） 搭建；它以可交互的&lt;strong&gt;视频&lt;/strong&gt;形式，告诉大家学习存在的误区，以及该如何消除大众对学习的误区与偏见。&lt;/p&gt;&lt;h3 id=&quot;搭建渐构动机&quot;&gt;&lt;a href=&quot;#%E6%90%AD%E5%BB%BA%E6%B8%90%E6%9E%84%E5%8A%A8%E6%9C%BA&quot; aria-label=&quot;搭建渐构动机 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;搭建「渐构」动机&lt;/h3&gt;&lt;p&gt;为何要搭建「渐构」，YJango 在视频 &lt;a href=&quot;https://www.modevol.com/episode/cl3gp88zu004e01s81nu9czm9&quot;&gt;为什么科技还未改变教学方式？&lt;/a&gt; 中，做了详细的阐述；下面是对视频内容部分摘述：&lt;/p&gt;&lt;p&gt;纵观整个生命史，每一次学习系统的升级，都会伴随着生命的一次跃升。毫无疑问，&lt;strong&gt;学习能力&lt;/strong&gt;是这一切的推动力，是生命得以适应世界、改造世界的前提。我们也正处在下一次跃升的进程中。&lt;/p&gt;&lt;p&gt;然而，现在我却怀疑自己是否能在有生之年见证下一次的升级，因为我没有感到人们的学习因为科技的进步变得更容易，学生们的学习也没有因为使用了网课而变得更轻松；不仅如此，人们的注意力反而缩短了，阅读的专注力似乎还下降了；网络讨论中越来越多是互相瞧不起；稀缺的也不再是知识，反而因网络内容太多，人们难以区分和筛选知识；让我觉得自己必须要做些什么，来推进学习系统的升级，尽管自己的力量微乎其微，但个体对知识的贡献，可以承载着自己曾存在过的证明，打破寿命的限制，流向未来，让我感到自己作为生命长河中的一粒沙尘，其短暂的存在不是没有意义的。这便是为何我的视频末尾会有「生命的遗产是对知识的更新」这句话。&lt;/p&gt;&lt;p&gt;但是，又要如何推进呢？目标并不单单是让部分人的学习变得更容易，而是「让所有人的学习都变得更容易，以量变引起质变的方式，推进下一次的升级」。说实话，我也不知道该如何实现这个目标，但我知道这个目标并不是虚无缥缈的，哪怕提高一点点效率就算是推进，不断地积累，终将引起质变。&lt;/p&gt;&lt;p&gt;基于发现的问题，YJango 思考之余，做了多次不同尝试；并且意识到，想要推进和见证下一次跃升，并不能单靠一人之力，而应该与愿意为该目标而付出的人一起努力。于是，勇敢迈上了这个领域。&lt;/p&gt;&lt;h3 id=&quot;渐构要完成的事情&quot;&gt;&lt;a href=&quot;#%E6%B8%90%E6%9E%84%E8%A6%81%E5%AE%8C%E6%88%90%E7%9A%84%E4%BA%8B%E6%83%85&quot; aria-label=&quot;渐构要完成的事情 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;「渐构」要完成的事情&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;首先是：解决知识类视频的障碍，对知识类内容的呈现做专门的优化；&lt;/li&gt;&lt;li&gt;随后是：不断试验，将高效的学习方法直接融入播放器中，通过「对媒介的升级」让学习变得更容易；&lt;/li&gt;&lt;li&gt;最后是：让做这件事本身能创造收益，让更多志同道合的人可以一起推进学习系统的升级。&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;关于名称地址的由来&quot;&gt;&lt;a href=&quot;#%E5%85%B3%E4%BA%8E%E5%90%8D%E7%A7%B0%E5%9C%B0%E5%9D%80%E7%9A%84%E7%94%B1%E6%9D%A5&quot; aria-label=&quot;关于名称地址的由来 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;关于名称地址的由来&lt;/h3&gt;&lt;p&gt;中文名叫「渐构」，「渐」代表「逐渐演变（evolve）」，与「构」共同表达「迭代式建构」的意思。网站域名：&lt;code&gt;modevol.com&lt;/code&gt;，「modevol」是「model（建模）」和「evolve（演化）」两个单词合成的动词。因为这两个词很好地描述了学习行为最核心的两个特征：学习不是复制信息，而是在「用片面的材料来建构全面的认识」，好比是在用几张平面照片来建构立体模型；而这种建构过程也并非是一次性的，会随着新经验、新材料的纳入，不断迭代更新，变得越来越立体，如同生命的一次次演化。&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://nicelinks.site/redirect?url=https://www.modevol.com/&quot;&gt;渐构 Modevol&lt;/a&gt; 所要实现的直接目的是：「&lt;strong&gt;用工具让学习变得更容易&lt;/strong&gt;」，为此他们对学习行为进行了建模，即在宏观上，将「线上知识分享」抽象为「通过网络将知识从一个大脑迁移到另一个大脑」，迁移的实现需要一种「载体」，相当于软件安装包，我们统称为「学习材料（materials）」，简称「材料」，而围绕学习材料，又可将分享过程拆成三个环节：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;由传授者制作学习材料；&lt;/li&gt;&lt;li&gt;由网络媒介呈现学习材料；&lt;/li&gt;&lt;li&gt;由学习者用学习材料建构知识；&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;那么，想用工具让学习变得更容易，自然也就是针对这三个环节来做优化。而 &lt;a href=&quot;https://nicelinks.site/redirect?url=https://www.modevol.com/&quot;&gt;渐构 Modevol&lt;/a&gt; 所做的最主要的事情，便是对「媒介（medium）呈现环节」的优化；而这也是「渐构」给我第一印象是新奇的原因。&lt;/p&gt;&lt;p&gt;除此之外， &lt;a href=&quot;https://nicelinks.site/redirect?url=https://www.modevol.com/&quot;&gt;渐构 Modevol&lt;/a&gt; 有非常多值得称赞的点，比如：内容优质，值得学习；可以展开视频内容文本；双击文本区内容，可以跳转至该进度；支持摘抄以及注释；视频拥有 PPT 一样的目录，可拖动、操作（双击则跳转至该段视频）；支持多种方式生成&lt;strong&gt;派生视频&lt;/strong&gt;；.... 实在太多，感兴趣朋友，可前往 &lt;a href=&quot;https://www.modevol.com/episode/cl3gp8ns7004h01s8179zhpre&quot;&gt;网站使用教程 ｜ 渐构 Modevol&lt;/a&gt; 了解更多。&lt;code&gt;渐构&lt;/code&gt; 一款很棒的网站，设计理念和功能颇为复杂，但想要做好关于它的推荐介绍，实在有些疲惫；想知道葡萄什么味儿，最好的方式是尝起来；朋友们 &lt;a href=&quot;https://nicelinks.site/redirect?url=https://www.modevol.com/&quot;&gt;渐构 Modevol&lt;/a&gt; 值得你“尝”起来。&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/632334e56d57c401f21d6727&quot;&gt;倾城之链 - 渐构 Modevol&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/%E5%BC%80%E5%8F%91%E8%80%85&quot;&gt;&lt;code&gt;开发者&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E7%A4%BE%E5%8C%BA&quot;&gt;&lt;code&gt;社区&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E5%B9%B3%E5%8F%B0&quot;&gt;&lt;code&gt;平台&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;关键字&lt;/strong&gt;：Hacker Talk, 黑客说, 开发者, 定制, 交流平台, 技术驱动&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;黑客说（HackerTalk），是一个为开发者定制的交流平台，我们希望通过技术驱动优质交流，高度定制的编辑器和一对一的实时聊天会给你全新的交流体验。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/hackertalk.net.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 - Hacker Talk ｜ 黑客说&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/redirect?url=https://hackertalk.net/&quot;&gt;黑客说（HackerTalk）&lt;/a&gt; ，是一个为开发者定制的交流平台，基于 &lt;a href=&quot;https://nicelinks.site/post/5b1294b5e93ed2618cfac134&quot;&gt;React&lt;/a&gt; 、 &lt;a href=&quot;https://nicelinks.site/post/5fd20cb4c06d6302c1907ec7&quot;&gt;Tailwind CSS&lt;/a&gt; 而构建，由深圳市通感科技有限公司提供的互联网技术服务，2021 年 6 月 6 日 正式上线。该团队希望通过&lt;code&gt;技术驱动&lt;/code&gt;优质交流，高度定制的编辑器和一对一的实时聊天，会给你全新的交流体验。&lt;/p&gt;&lt;h3 id=&quot;背景故事&quot;&gt;&lt;a href=&quot;#%E8%83%8C%E6%99%AF%E6%95%85%E4%BA%8B&quot; aria-label=&quot;背景故事 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;背景故事&lt;/h3&gt;&lt;p&gt;网站创始人，考虑到同类型的网站已经很多，但都不能满足&lt;strong&gt;程序员群体的定制&lt;/strong&gt;需求，或多或少存在些许问题，譬如说：不能很好地支持 Markdown、实时性不够、关注点分散，容易跑偏话题（知乎）、交互性不强（掘金、SegmentFault、CSDN ）、设计交互体验不足题（V2ex）等等。基于想要解决这些问题，故而才会做 &lt;a href=&quot;https://nicelinks.site/redirect?url=https://hackertalk.net/&quot;&gt;黑客说（HackerTalk）&lt;/a&gt; 这样一个新网站。&lt;/p&gt;&lt;h3 id=&quot;网站亮点&quot;&gt;&lt;a href=&quot;#%E7%BD%91%E7%AB%99%E4%BA%AE%E7%82%B9&quot; aria-label=&quot;网站亮点 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;网站亮点&lt;/h3&gt;&lt;ol&gt;&lt;li&gt;&lt;strong&gt;高度定制的 markdown 编辑器，所见即所得，交流更方便&lt;/strong&gt;；&lt;/li&gt;&lt;li&gt;&lt;strong&gt;更加现代化的 UI&lt;/strong&gt;：充分展示信息、更友好的回复体验、暗黑模式等；&lt;/li&gt;&lt;li&gt;&lt;strong&gt;更加公平、透明、友好的用户管理&lt;/strong&gt;（赞👍）；&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;近期，有注册并初步体验；提及其他平台存在的问题，在 &lt;a href=&quot;https://nicelinks.site/redirect?url=https://hackertalk.net/&quot;&gt;HackerTalk&lt;/a&gt; 确实已得到解决，而且吸取了值得学习部分；在人性化设计、访问性能、公平透明用户管理都做得较好，值得称赞；此外，它专属于为 &lt;a href=&quot;https://nicelinks.site/tags/%E7%A8%8B%E5%BA%8F%E5%91%98&quot;&gt;程序员&lt;/a&gt; 定制社区，如果您也从事编程开发，可以考虑入驻，以便与志同道合的朋友畅聊。&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/6321f3336d57c401f21d6725&quot;&gt;倾城之链 - Hacker Talk ｜ 黑客说&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0&quot;&gt;&lt;code&gt;深度学习&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E8%AF%97%E8%AF%8D&quot;&gt;&lt;code&gt;诗词&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/AI&quot;&gt;&lt;code&gt;AI&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;关键字&lt;/strong&gt;：人工智能, 写诗, 清华大学, 自然语言处理, 九歌, jiuge, 深度学习, AI, 多模态输入, 多体裁, 多风格, 藏头诗, 律诗, 绝句, 风格绝句, 生成系统&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;九歌，是清华大学自然语言处理与社会人文计算实验室研发的人工智能诗歌写作系统。该系统采用最新的深度学习技术，结合多个为诗歌生成专门设计的模型，基于超过 80 万首人类诗人创作的诗歌进行训练学习。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/jiuge.thunlp.org.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 - 九歌&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/redirect?url=http://jiuge.thunlp.org/&quot;&gt;九歌&lt;/a&gt; ，人工智能（AI）诗歌写作系统，由清华大学自然语言处理与社会人文计算实验室研发；该系统采用最新的深度学习技术，结合多个为诗歌生成专门设计的模型，基于超过 80 万首人类诗人创作的诗歌，进行训练学习。&lt;/p&gt;&lt;p&gt;区别于其他诗歌生成系统，&lt;a href=&quot;https://nicelinks.site/redirect?url=http://jiuge.thunlp.org/&quot;&gt;九歌&lt;/a&gt; 具有多模态输入、多体裁多风格、人机交互创作模式等特点。九歌系统及其研发团队，致力于探索 AI 技术和人文领域的结合，助力 AI 赋能文学教育，为中华优秀诗词文化的传承与发展贡献力量。&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://nicelinks.site/redirect?url=http://jiuge.thunlp.org/&quot;&gt;九歌&lt;/a&gt;，可以创作&lt;code&gt;绝句&lt;/code&gt;、&lt;code&gt;风格绝句&lt;/code&gt;（分五言、七言；可选意境有：萧瑟凄凉、忆旧感喟、孤寂惆怅、思乡忧老、渺远孤逸）、&lt;code&gt;藏头诗&lt;/code&gt;（五言、七言）、&lt;code&gt;律诗&lt;/code&gt;（五言、七言）、&lt;code&gt;集句&lt;/code&gt;以及&lt;code&gt;词&lt;/code&gt;等体裁。只需要输入 1～4 字，点击「生成诗歌」按钮，几秒钟就能得到结果。而且，还会给出机器评分（由A～D），关于通顺性、连贯性、新颖性、意境四个不同维度。其中，&lt;strong&gt;藏头诗&lt;/strong&gt;，还给出“情感控制”的选项，由悲伤、中性、到喜悦，分五个等级；倘若不通诗文音律，用这工具，为心仪之人，选造一首好的藏头诗，想来也蛮有意思。&lt;/p&gt;&lt;p&gt;有输入“&lt;code&gt;轩帅&lt;/code&gt;”二字玩儿下，得 &lt;code&gt;绝句&lt;/code&gt; 两三首，其前两首读来略有些意思，在此分享给朋友们：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;自昔轩中士，无惭卫霍功；  
文章追贾谊，肝胆一时忠；  
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;机器评分：通顺性：A；连贯性：A；新颖性：A； 意境：D。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;地僻轩无客，言寻海上仙；
读书云满室，岁月五湖船。
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;机器评分：通顺性：A；连贯性：B；新颖性：A； 意境：D。&lt;/p&gt;&lt;p&gt;值得一提的是，&lt;a href=&quot;https://nicelinks.site/redirect?url=http://jiuge.thunlp.org/&quot;&gt;九歌&lt;/a&gt; 对于生成的诗词，还可以做额外操作，如根据推荐做局部修改，隐藏相似古人诗作、分享诗歌、诗词评价等。玩味之下，虽有勉强押韵、达意不通之作；但亦有对仗工整、意境深远的上品，颇有些古诗之风；整体而言，超出预期。感兴趣的朋友，闲来无事，或可品玩。&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/6321a34a6d57c401f21d671d&quot;&gt;倾城之链 - 九歌&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/AI&quot;&gt;&lt;code&gt;AI&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E4%BD%B3%E5%8F%A5&quot;&gt;&lt;code&gt;佳句&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E4%BA%BA%E6%96%87&quot;&gt;&lt;code&gt;人文&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;关键字&lt;/strong&gt;：WantQuotes, 名言, 名句, 语录, 谚语, 歇后语, 古诗词, 俗语, 熟语, 惯用语, 台词, 语言, 写作, 清华大学, 自然语言处理, 汉语, Chinese, quotes, want quotes&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;WantQuotes 可以通过描述的意思来查找名句，包括名人名言、古诗词和文言文名句、谚语俗语歇后语等。WantQuotes 基于最先进的人工智能算法实现，由清华大学自然语言处理实验室出品。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/wantquotes.net.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 - WantQuotes 据意查句&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/redirect?url=https://wantquotes.net/&quot;&gt;WantQuotes&lt;/a&gt; ，是一款可通过描述的意思（或关键字），来查找名句（包括名人名言、古诗词和文言文名句、谚语俗语歇后语等）的 Web 应用。WantQuotes 基于先进的人工智能（AI）算法实现，由清华大学自然语言处理实验室出品。&lt;/p&gt;&lt;h3 id=&quot;wantquotes-可以做些什么&quot;&gt;&lt;a href=&quot;#wantquotes-%E5%8F%AF%E4%BB%A5%E5%81%9A%E4%BA%9B%E4%BB%80%E4%B9%88&quot; aria-label=&quot;wantquotes 可以做些什么 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;WantQuotes 可以做些什么？&lt;/h3&gt;&lt;p&gt;WantQuotes 可以根据你输入描述的意思，来查找相应的名言名句，例如输入“树立远大志向”，可以查到歌德的名言：“人生之要事在于确立伟大的目标与实现这目标的决心”（现代类名句）；刘禹锡的诗句“少年负志气，信道不从时。”（古诗文类名句）；“人起心发，树起根发”（熟语类名句）等。&lt;/p&gt;&lt;h3 id=&quot;wantquotes-能查哪些类型的名句&quot;&gt;&lt;a href=&quot;#wantquotes-%E8%83%BD%E6%9F%A5%E5%93%AA%E4%BA%9B%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%90%8D%E5%8F%A5&quot; aria-label=&quot;wantquotes 能查哪些类型的名句 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;WantQuotes 能查哪些类型的名句？&lt;/h3&gt;&lt;p&gt;截止目前（2022.09），包含 4 大类 13 小类的名句：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;现代&lt;/strong&gt;大类：对应现代汉语名言名句，下分&lt;strong&gt;名言&lt;/strong&gt;（指严肃经典名人名言）、&lt;strong&gt;佳句&lt;/strong&gt;（包括当代文学、网文、现代诗歌、歌词等中的名句）、&lt;strong&gt;网络&lt;/strong&gt;（来自网络的句子）、&lt;strong&gt;台词&lt;/strong&gt;（包括影视剧、动漫、综艺等的经典台词）；&lt;/li&gt;&lt;li&gt;&lt;strong&gt;古诗文&lt;/strong&gt;大类：对应古代名言名句，包括来自古诗词、文言文等的名句；&lt;/li&gt;&lt;li&gt;&lt;strong&gt;熟语&lt;/strong&gt;大类：包括谚语、俗语、惯用语三个小类；&lt;/li&gt;&lt;li&gt;&lt;strong&gt;歇后语&lt;/strong&gt;大类：对应歇后语。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;如今（2022.09）WantQuotes 仍为测试版本，可能会出现维护、停机更新等不稳定的情况，望知悉；此外，您可以给语义相关的名句进行操作，诸如：点赞👍、复制、在某度进行搜索、查找此句的近义句、反馈名句的错误等等；如果您对网站有何意见或建议，可直接在网站上进行「反馈」，以促进 WantQuotes 变得更好。&lt;/p&gt;&lt;p&gt;有输入些测试性文字/句子，诸如：&lt;code&gt;休息&lt;/code&gt;、&lt;code&gt;养身&lt;/code&gt;、&lt;code&gt;工作&lt;/code&gt;、“如何让人生具有价值”等，&lt;a href=&quot;https://nicelinks.site/redirect?url=https://wantquotes.net/&quot;&gt;WantQuotes&lt;/a&gt; 所给出的结果，个人感觉是比「搜索引擎」给出的要好，也略高于预期；如果您是学生、或文字工作者，我想 WantQuotes 应该会有所帮助。&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/6321a24e6d57c401f21d671b&quot;&gt;倾城之链 - WantQuotes 据意查句&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/%E5%BA%94%E7%94%A8&quot;&gt;&lt;code&gt;应用&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/iOS&quot;&gt;&lt;code&gt;iOS&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E9%AB%98%E6%95%88&quot;&gt;&lt;code&gt;高效&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;关键字&lt;/strong&gt;：Lock,Screen, launcher,widget, 锁屏, 锁屏启动, 启动器, 小组件, iOS, iOS16, 提醒, App, 下载, 小程序, 健康码&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Launch anything with just one touch.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/locklauncher.com.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 - Lock Launcher - An iOS 16 Lock Screen widget.&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/redirect?url=https://locklauncher.com/&quot;&gt;Lock Launcher&lt;/a&gt; ，是一款快速的 &lt;a href=&quot;https://nicelinks.site/tags/iOS&quot;&gt;iOS&lt;/a&gt; 16 锁屏启动器（一款基于 &lt;a href=&quot;https://nicelinks.site/tags/iOS&quot;&gt;iOS&lt;/a&gt; 16 锁屏小组件产品）；您可以在锁定屏幕上添加任何内容，只需轻轻一按即可立即启动。它完美支持各种应用程序、网站、快捷方式和自定义 URL 方案。一键享受所有动作。比如可一键启动：&lt;strong&gt;健康码&lt;/strong&gt; / &lt;strong&gt;行程码&lt;/strong&gt; / 付款码 / 快捷指令 / &lt;code&gt;Web Apps&lt;/code&gt; / URL Scheme 等，让锁屏界面更强大。&lt;/p&gt;&lt;p&gt;近期，因为司空见惯的原因，需要较为频繁出示 &lt;code&gt;健康码&lt;/code&gt;、核酸码、付款码，以及在各种场景下 &lt;code&gt;扫码&lt;/code&gt; 等，基于 &lt;a href=&quot;https://nicelinks.site/redirect?url=https://locklauncher.com/&quot;&gt;Lock Launcher&lt;/a&gt; 来配置下快速打开方式，亲测有效，确实能省些不必要的步骤。当然，它的使用，对于没怎么玩儿过小组件朋友，显得略有些繁琐，探索了下，如下步骤可快速顺利启动：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;打开 App Store，搜索 &lt;code&gt;Lock Launcher&lt;/code&gt; 并下载；&lt;/li&gt;&lt;li&gt;打开应用，设置「锁屏启动」项（按需、跟着引导操作即可）；&lt;/li&gt;&lt;li&gt;打开「设置」=&amp;gt; 「墙纸」，自定义，将添加的小组件到桌面；&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;具体操作和最终运行效果，可参加 &lt;a href=&quot;https://nicelinks.site/redirect?url=https://locklauncher.com/&quot;&gt;Lock Launcher&lt;/a&gt; 官网录制的视频（或者直接打开 &lt;a href=&quot;https://lovejade.oss-cn-shenzhen.aliyuncs.com/LockLauncherRunAction.mp4&quot;&gt;Lock Launcher 使用及效果视频[.MP4]&lt;/a&gt;）；当然，也可以添加小组件到&lt;code&gt;正一屏&lt;/code&gt;，从这里打开也方便。感兴趣的朋友，可以下载体验（目前@2022/09/13，该应用新上架，正在做双限免活动，包含下载和内购 ）。&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/632086ee6d57c401f21d6717&quot;&gt;倾城之链 - Lock Launcher - An iOS 16 Lock Screen widget.&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/%E5%88%9B%E6%84%8F&quot;&gt;&lt;code&gt;创意&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E6%9C%89%E8%B6%A3&quot;&gt;&lt;code&gt;有趣&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E5%B9%B3%E5%8F%B0&quot;&gt;&lt;code&gt;平台&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;关键字&lt;/strong&gt;：线圈, 有趣, 创意, 发现, 分享, 交流圈, 平台, 独立开发者, 展现, 国产 Product Hunt, 程序, 应用, 推广, 营销, 互联网精神, 个人中心&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;最有趣的作品与创意都在这里, 来见识更广阔的世界吧！&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/xquan.net.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 - 线圈 - 创意交汇之处 | 最有趣的作品与创意都在这里&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/redirect?url=https://xquan.net/&quot;&gt;线圈&lt;/a&gt; 是一个将人与项目连线，通过 &lt;strong&gt;“发现”&lt;/strong&gt; 与 &lt;strong&gt;“分享”&lt;/strong&gt; 的内核孵化出的创意交流圈。简单来说的话，你可以将 &lt;a href=&quot;https://nicelinks.site/redirect?url=https://xquan.net/&quot;&gt;线圈&lt;/a&gt; 当成是一个能够展示你个人、以及项目的&lt;strong&gt;平台&lt;/strong&gt;，甚至将其当成你的&lt;code&gt;互联网名片&lt;/code&gt;来使用也没有问题。可以在这里创建、发现有趣的项目、点子，发表你的评论，自行构筑只属于你一个人的个人中心。&lt;/p&gt;&lt;h3 id=&quot;线圈创作背景&quot;&gt;&lt;a href=&quot;#%E7%BA%BF%E5%9C%88%E5%88%9B%E4%BD%9C%E8%83%8C%E6%99%AF&quot; aria-label=&quot;线圈创作背景 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;线圈创作背景&lt;/h3&gt;&lt;p&gt;创作者的心头恨是什么？&lt;strong&gt;那就是做出来的东西没人看，没人用，没人玩，没地方展示&lt;/strong&gt;。 &lt;a href=&quot;https://nicelinks.site/redirect?url=https://xquan.net/&quot;&gt;线圈&lt;/a&gt; 想要实现的是：一个面向国内全体创作者的、能够让他们方便快捷的记录项目进展，展示进度成果，展示最终成品，并且可以得到来自用户（或粉丝）以及其他创作者们的反馈交流的平台。&lt;strong&gt;不让创意蒙尘&lt;/strong&gt;，是 &lt;a href=&quot;https://nicelinks.site/redirect?url=https://xquan.net/&quot;&gt;线圈&lt;/a&gt; 的核心追求。&lt;/p&gt;&lt;h3 id=&quot;解决哪些痛点&quot;&gt;&lt;a href=&quot;#%E8%A7%A3%E5%86%B3%E5%93%AA%E4%BA%9B%E7%97%9B%E7%82%B9&quot; aria-label=&quot;解决哪些痛点 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;解决哪些痛点？&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://nicelinks.site/redirect?url=https://xquan.net/&quot;&gt;线圈&lt;/a&gt; 创作团队认为，目前市场上的、服务创作者的产品有好些痛点没有被满足，诸如以下几点：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;固然国内近几年冒出了几个打通创作者和粉丝关系的订阅制付费平台，但他们在本质上还只能说是一个工具，而不能称之为社区。&lt;/li&gt;&lt;li&gt;许多项目没有一个类似于“应用商店”的 主页 来承载项目详情，导致许多人都需要以图文的形式来第三方平台发布。&lt;/li&gt;&lt;li&gt;作为创作者 没有根据地与讨论地，只能私底下口口相传划分为小圈子。&lt;/li&gt;&lt;li&gt;除自媒体外，很难有能做到可以全方位展示 创作者本身这个人 的产品，展示欲难以释放。&lt;/li&gt;&lt;li&gt;无处寻求战友、寻求组织，在业余领域和爱好者领域中往团队中招募成员是非常困难的。归根结底，还是上边提到的没有根据地的原因。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;a href=&quot;https://nicelinks.site/redirect?url=https://xquan.net/&quot;&gt;线圈&lt;/a&gt; 旨在想要针对这些痛点去尝试解决。实打实地去让那些创意工作者们有一个可以立足的根据地。 并可以和一群志同道合的人聚集在一起。&lt;code&gt;线圈&lt;/code&gt;在此提供了多样化、展示友好且易传播的个人/项目主页构筑方案。助力&lt;strong&gt;创作&lt;/strong&gt;、助力&lt;strong&gt;展示&lt;/strong&gt;、助力&lt;strong&gt;营销&lt;/strong&gt;。&lt;/p&gt;&lt;h3 id=&quot;用户在线圈可得到什么&quot;&gt;&lt;a href=&quot;#%E7%94%A8%E6%88%B7%E5%9C%A8%E7%BA%BF%E5%9C%88%E5%8F%AF%E5%BE%97%E5%88%B0%E4%BB%80%E4%B9%88&quot; aria-label=&quot;用户在线圈可得到什么 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;用户在线圈可得到什么？&lt;/h3&gt;&lt;ol&gt;&lt;li&gt;你可以在 &lt;a href=&quot;https://nicelinks.site/redirect?url=https://xquan.net/&quot;&gt;线圈&lt;/a&gt; 观看、浏览、并且和人一起讨论这个世界上的所有创意，还能够以你自己的形式去支持他；&lt;/li&gt;&lt;li&gt;你可以在 &lt;a href=&quot;https://nicelinks.site/redirect?url=https://xquan.net/&quot;&gt;线圈&lt;/a&gt; 构筑全网独一无二的的个性化主页，互联网名片；&lt;/li&gt;&lt;li&gt;如你自身有需要宣传、分享的作品或项目，你可以方便且简单的搭建出定制化的 “项目详情” 。&lt;/li&gt;&lt;/ol&gt;&lt;h3 id=&quot;什么样的人会需要线圈&quot;&gt;&lt;a href=&quot;#%E4%BB%80%E4%B9%88%E6%A0%B7%E7%9A%84%E4%BA%BA%E4%BC%9A%E9%9C%80%E8%A6%81%E7%BA%BF%E5%9C%88&quot; aria-label=&quot;什么样的人会需要线圈 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;什么样的人会需要线圈？&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://nicelinks.site/redirect?url=https://xquan.net/&quot;&gt;线圈&lt;/a&gt; 创作团队认为，在当今这个人人都是创作者的时代，其实任何人都可以使用线圈；因为无论是多么不起眼，多么小的作品也好，都能在此进行分享，从而让更多人知晓。不过，如果你是以下类型的创意工作者的话，那么可能你会更需要一些。譬如：、&lt;strong&gt;自媒体&lt;/strong&gt;、&lt;strong&gt;写作爱好者、作家&lt;/strong&gt;、&lt;strong&gt;独立开发者&lt;/strong&gt;、&lt;strong&gt;独立游戏制作人&lt;/strong&gt;、&lt;strong&gt;绘画师、设计师&lt;/strong&gt;、&lt;strong&gt;视频特效、剪辑、字幕能力持有者&lt;/strong&gt;、&lt;strong&gt;剧本家&lt;/strong&gt;、&lt;strong&gt;摄影爱好者&lt;/strong&gt;、&lt;strong&gt;音乐人&lt;/strong&gt;、&lt;strong&gt;配音工作者&lt;/strong&gt;等等。&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://nicelinks.site/redirect?url=https://xquan.net/&quot;&gt;线圈&lt;/a&gt; 不仅不会禁止你营销，甚至还会鼓励你、将线圈站内的用户引导至外部（比如你的自媒体账号、开发的游戏/软件等）。就比如以下几个很简单的场景：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;某画师/设计师想要展示自己的作品；&lt;/li&gt;&lt;li&gt;某自媒体工作者想要展示自己的创作的某个系列视频；&lt;/li&gt;&lt;li&gt;某独立游戏制作人，想要展示自己的游戏；&lt;/li&gt;&lt;li&gt;某独立开发者，想要推广自己的应用程序；&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;创造者完全可以在 &lt;a href=&quot;https://nicelinks.site/redirect?url=https://xquan.net/&quot;&gt;线圈&lt;/a&gt; 建立一个页面，快捷方便的对外宣传展现。 &lt;a href=&quot;https://nicelinks.site/redirect?url=https://xquan.net/&quot;&gt;线圈&lt;/a&gt; 创作团队欲要在这个时代，绽放终极的互联网精神。笔者近期有注册®️并使用 &lt;a href=&quot;https://nicelinks.site/redirect?url=https://xquan.net/&quot;&gt;线圈&lt;/a&gt; （发布项目：&lt;a href=&quot;https://xquan.net/@main/nicelinks&quot;&gt;倾城之链 NICE LINKS&lt;/a&gt;），无论是作为&lt;code&gt;用户&lt;/code&gt;访问探索，亦或者&lt;code&gt;创作者&lt;/code&gt;发布项目（动态），体验堪称优良，颇有 &lt;a href=&quot;https://nicelinks.site/post/5f40d0bf15435e0906a0a26f&quot;&gt;Product Hunt&lt;/a&gt; 之风；此外，几乎可以说没什么限制，无论是软件应用、音乐视频、专栏文章，甚至是一个公众号、一幅画、一个动态壁纸，皆可在&lt;a href=&quot;https://nicelinks.site/redirect?url=https://xquan.net/&quot;&gt;线圈&lt;/a&gt; 进行分享；如果您对线圈感兴趣，并期望了解更多，可参见：&lt;a href=&quot;https://nicelinks.site/redirect?url=https://xquan.net/help?tab=submit-guide&quot;&gt;新人指南 &amp;amp; 项目提交指南 - 线圈&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/631ebcae6d57c401f21d6713&quot;&gt;倾城之链 - 线圈 - 创意交汇之处 | 最有趣的作品与创意都在这里&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/%E6%9C%8D%E5%8A%A1&quot;&gt;&lt;code&gt;服务&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E4%BA%91%E6%9C%8D%E5%8A%A1&quot;&gt;&lt;code&gt;云服务&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;关键字&lt;/strong&gt;：TOP云, 拓普云, ZUNTOP, 云服务器租用, 物理服务器租用, 云主机, 模板建站, 自助建站, 阿里云代理商, 腾讯云代理商&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;TOP云（拓普云）-尊享顶级企业云计算服务，TOP 企业云是阿里云、腾讯云、华为云、天翼云核心代理商，TOP 云携手合作伙伴为用户提供高性价比云服务器、物理服务器租用、云安全、云数据库、负载均衡、对象存储、SSL证书、商标注册、虚拟主机、域名注册、智能建站等优质产品服务。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/topyun.vip.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 - TOP云-尊享顶级云计算服务，云服务器、物理服务器租用，阿里云、腾讯云、华为云、天翼云核心代理商-拓普云&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/redirect?url=https://topyun.vip/&quot;&gt;TOP 云&lt;/a&gt; 隶属于尊托云数科技旗下的云计算服务平台，&lt;code&gt;TOP 云&lt;/code&gt;专注为个人开发者用户、中小型、大型企业用户提供一站式核心网络云端部署服务，促使用户云端部署化简为零，轻松快捷运用云计算。&lt;/p&gt;&lt;p&gt;TOP 云为用户提供低价高性能云计算产品，致力于云计算应用的易用性开发，并引导云计算在国内普及。目前公司研发以及运营云服务基础设施服务平台（LaaS）以及企业智能云建站平台（SaaS），面向全球客户提供基于云计算的 IT 解决方案与客户服务，拥有丰富的国内 BGP、双线高防、香港 CN2 等优质的 IDC 资源。&lt;/p&gt;&lt;p&gt;用户选购云产品与服务时，除了&lt;strong&gt;价格因素&lt;/strong&gt;之外，最重要的就是云服务器的&lt;strong&gt;安全稳定运行&lt;/strong&gt;，能够保证用户业务的安全稳定可持续在线运行，对于用户来说非常重要，特别对于企业用户更是如此。&lt;/p&gt;&lt;p&gt;TOP 企业云的弹性云服务器、云虚拟主机、裸金属服务器、企业智能建站（包括小程序）等产品，都是跟业内一流云计算大厂及各大顶级数据中心机房直接合作的云计算产品；TOP 企业云合作伙伴包括：中国电信天翼云、百度智能云、华为云、小鸟云、腾讯云、阿里云等知名云服务商。&lt;/p&gt;&lt;p&gt;TOP 企业云与合作伙伴一起为广大中小企业用户提供一流的企业上云解决方案，降低企业上云成本，助力解决企业上云技术难题等，在不太长的时间里，TOP 企业云深受数千家企业用户的信赖和选择。&lt;/p&gt;&lt;p&gt;在云服务器领域，已经有非常多可供选择云服务商；笔者有使用&lt;a href=&quot;https://nicelinks.site/post/5b3e412d615bf842b6091041&quot;&gt;阿里云&lt;/a&gt;、腾讯云、&lt;a href=&quot;https://portal.qiniu.com/signup?code=3liqwdn9cfwia&quot;&gt;七牛云&lt;/a&gt;、&lt;a href=&quot;https://m.do.co/c/046a8e6b255c&quot;&gt;DigitalOcean&lt;/a&gt;。个人感受是：价格而言，腾讯云有吸引力；稳定性方面，阿里云和 DigitalOcean 都挺靠谱。全球化方面，DigitalOcean 更具优势；TOP 云暂时未接触更多，有使用经验的朋友，欢请留言评论分享。&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/631e00a76d57c401f21d6711&quot;&gt;倾城之链 - TOP云-尊享顶级云计算服务，云服务器、物理服务器租用，阿里云、腾讯云、华为云、天翼云核心代理商-拓普云&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/%E4%B8%8B%E8%BD%BD&quot;&gt;&lt;code&gt;下载&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E8%BD%AF%E4%BB%B6&quot;&gt;&lt;code&gt;软件&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E5%B9%B3%E5%8F%B0&quot;&gt;&lt;code&gt;平台&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;关键字&lt;/strong&gt;：下载, 免费软件, 软件下载, 免费下载, 腾讯软件中心, 腾讯电脑管家, 手机软件中心, 电脑软件中心&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;腾讯软件中心提拱海量免费软件安全下载，全部软件都已经过安全杀毒检测。手机、电脑客户端版应用软件大全，最新最快速的软件下载中心。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/pc.qq.com.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 - 腾讯软件中心-海量软件高速下载&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/post/631de3196d57c401f21d670f&quot;&gt;腾讯软件中心&lt;/a&gt; ，是腾讯公司旗下的一款具有办公特色的即时通讯平台；提拱海量免费软件安全下载，并且做了详细分类，而且提供内置搜索功能；您可以根据需要，在这里找到您需要的软件；尤其在修理电脑之后，需要重装很多软件时，非常有价值。需要说明的是&lt;a href=&quot;https://nicelinks.site/post/631de3196d57c401f21d670f&quot;&gt;腾讯软件中心&lt;/a&gt; 所提供的主要是 Windows 系统软件，如果您使用的是 MacOS 系统，可前往&lt;a href=&quot;https://mac.qq.com/&quot;&gt;腾讯 Mac 软件中心&lt;/a&gt; 、软件官网或苹果应用商店（App Store）。&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/631de3196d57c401f21d670f&quot;&gt;倾城之链 - 腾讯软件中心-海量软件高速下载&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/%E5%8D%A1%E9%80%9A&quot;&gt;&lt;code&gt;卡通&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E5%A4%B4%E5%83%8F&quot;&gt;&lt;code&gt;头像&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E5%85%8D%E8%B4%B9&quot;&gt;&lt;code&gt;免费&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Want a stunning avatar or make an NFT? Try AvaMaker, a free avatar &amp;amp; NFT maker online. Trendy avatar styles &amp;amp; numerous elements are ready for use!&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/avamake.com.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 - Ava Maker - Free Avatar Maker Online&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/redirect?url=https://avamake.com/&quot;&gt;Ava Maker&lt;/a&gt; 是一个制作&lt;strong&gt;卡通头像&lt;/strong&gt;的免费线上工具；提供四种卡通类型，支持细化调整以建立出独特、与众不同且&lt;strong&gt;个性化虚拟头像&lt;/strong&gt;。可自订脸型、肤色、发型、眉毛、眼睛、嘴巴、衣服、性别及鼻子等，而且可以调整每个部位的颜色；让使用者通过鼠标自由选择搭配，只需短短时间，就可以组合出一个具有独特风格的头像。&lt;/p&gt;&lt;p&gt;如果没有想法也没关系，&lt;a href=&quot;https://nicelinks.site/redirect?url=https://avamake.com/&quot;&gt;Ava Maker&lt;/a&gt; 提供随机组合产生器，可快速建立各种外观。另外值的一提的是，&lt;a href=&quot;https://nicelinks.site/redirect?url=https://avamake.com/&quot;&gt;Ava Maker&lt;/a&gt; 有 PNG 或 SVG 两种格式，可供用户选择下载（100% 免费，界面清爽无广告）；下载也无须注册，头像内容也没有水印，让后续的应用更为简便，实在业界良心。如果您有创建卡通虚拟头像的需求，&lt;code&gt;ava maker&lt;/code&gt; 是笔者强烈推荐的首选工具。&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/631cb6d692583d0ec9c367bf&quot;&gt;倾城之链 - Ava Maker - Free Avatar Maker Online&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/%E5%AF%BC%E8%88%AA&quot;&gt;&lt;code&gt;导航&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E7%BD%91%E7%AB%99&quot;&gt;&lt;code&gt;网站&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E5%88%86%E4%BA%AB&quot;&gt;&lt;code&gt;分享&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;关键字&lt;/strong&gt;：网址导航, 创意导航, 梦想导航&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;梦想导航，搜集小众新站，推荐优质网站。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/nav.dreamthere.cn.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 - 梦想导航 | nav.dreamthere.cn&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/redirect?url=https://nav.dreamthere.cn/&quot;&gt;梦想导航&lt;/a&gt;，基于 jQuery、Bootstrap 等工具库搭建的网站；旨在：&lt;strong&gt;搜集小众新站，推荐优质网站&lt;/strong&gt;。该站主要分为发现、精品、热搜等板块。对收录的每条网站，提供有标题、链接、描述、ICON 以及相似网站推荐。此外，梦想导航提供站内搜索🔍，您可以根据关键字，检索您想要的内容。&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/631ca82292583d0ec9c367bd&quot;&gt;倾城之链 - 梦想导航 | nav.dreamthere.cn&lt;/a&gt;&lt;/p&gt;&lt;p&gt;对倾城之链感兴趣的朋友，可通过 Web，小程序，快应用等渠道进行访问(后续将支持更多，如 VsCode 插件，Chrome 扩展等)。您有任何问题，欢迎随时向我们反馈（您可以通过官网反馈渠道，或添加如下客服微信），🤲 。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://image.nicelinks.site/%E5%80%BE%E5%9F%8E%E4%B9%8B%E9%93%BE-%E5%BE%AE%E4%BF%A1-mini.jpeg&quot; alt=&quot;倾城之链 - 客服微信&quot;/&gt;&lt;/p&gt;&lt;h2 id=&quot;本期文末寄语&quot;&gt;&lt;a href=&quot;#%E6%9C%AC%E6%9C%9F%E6%96%87%E6%9C%AB%E5%AF%84%E8%AF%AD&quot; aria-label=&quot;本期文末寄语 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;本期文末寄语&lt;/h2&gt;&lt;p&gt;情之同处即为性，舍情则性不可见，欲之公处即为理，舍欲则理不可明。故君子不能灭情，惟事平情而已；不能绝欲，惟期寡欲而已。──明 · 洪应明《菜根谭》&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://nicelinks.site/?utm_source=weekly&quot;&gt;倾城之链&lt;/a&gt;作为一个开放平台，旨在云集全球&lt;strong&gt;优秀网站&lt;/strong&gt;，探索互联网中更广阔的世界；在这里，你可以轻松发现、学习、分享更多有用或有趣的事物。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://image.nicelinks.site/nicelinks-miniprogram-code.jpeg?imageView2/1/w/250/h/250/interlace/1/ignore-error/1&quot; alt=&quot;小程序码 - 倾城之链&quot;/&gt;&lt;/p&gt;&lt;h2 id=&quot;您可能感兴趣的文章&quot;&gt;&lt;a href=&quot;#%E6%82%A8%E5%8F%AF%E8%83%BD%E6%84%9F%E5%85%B4%E8%B6%A3%E7%9A%84%E6%96%87%E7%AB%A0&quot; aria-label=&quot;您可能感兴趣的文章 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;您可能感兴趣的文章&lt;/h2&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>772f217fa773509d41f4d07cf1b677d4</guid>
<title>震惊了，原来这才是Kafka的“真面目”？！</title>
<link>https://toutiao.io/k/0i3e88l</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                           autoTypeSetting24psection&amp;#10;                          &quot; id=&quot;js_content&quot;&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;点击&lt;strong&gt;&lt;span&gt;关注&lt;/span&gt;&lt;/strong&gt;公众号：&lt;/span&gt;&lt;/strong&gt;互联网架构师，后台回复&lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzI2MTIzMzY3Mw==&amp;amp;mid=2247487508&amp;amp;idx=1&amp;amp;sn=78cf235aa9ba5f988c6922ca98f8bfd6&amp;amp;chksm=ea5cdd72dd2b54647cf55b4a73dcafa69fc7228205ad39ecc98fe57b39cdecb21c238c6d6cb6&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot; 2T&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot;&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;&lt;strong&gt;2T&lt;/strong&gt;&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;获取&lt;/span&gt;&lt;/strong&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzI2MTIzMzY3Mw==&amp;amp;mid=2247487508&amp;amp;idx=1&amp;amp;sn=78cf235aa9ba5f988c6922ca98f8bfd6&amp;amp;chksm=ea5cdd72dd2b54647cf55b4a73dcafa69fc7228205ad39ecc98fe57b39cdecb21c238c6d6cb6&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;2TB&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;2TB&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/a&gt;&lt;strong&gt;&lt;span&gt;学习资源！&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;上一篇：&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2MTIzMzY3Mw==&amp;amp;mid=2247523205&amp;amp;idx=1&amp;amp;sn=89b261f829ce6c3487ce8b2ccf3ed06b&amp;amp;chksm=ea5f56e3dd28dff5238989d3e07d775d34c04a4e80a166059e92e84379274819203d72d1dc1d&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;Alibaba开源内网高并发编程手册.pdf&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;Alibaba开源内网高并发编程手册.pdf&lt;/a&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;&lt;section&gt;“&lt;/section&gt;&lt;/span&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;Kafka 是一个分布式消息队列，具有高性能、持久化、多副本备份、横向扩展能力。生产者往队列里写消息，消费者从队列里取消息进行业务逻辑。一般在架构设计中起到解耦、削峰、异步处理的作用。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Kafka 对外使用 Topic 的概念，生产者往 Topic 里写消息，消费者从中读消息。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;为了做到水平扩展，一个 Topic 实际是由多个 Partition 组成的，遇到瓶颈时，可以通过增加 Partition 的数量来进行横向扩容。单个 Parition 内是保证消息有序。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;每新写一条消息，Kafka 就是在对应的文件 append 写，所以性能非常高。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;Kafka 的总体数据流是这样的：&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/yNKv1P4Q9eUdpbcDU4LclwZOGWlNWkBLNHzh6acDCFnEiblF676zaaLCDickSczRq2ibU8rAa5CzyBFBl7bawia5qw/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-ratio=&quot;0.8671875&quot; data-w=&quot;640&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;大概用法就是，Producers 往 Brokers 里面的指定 Topic 中写消息，Consumers 从 Brokers 里面拉取指定 Topic 的消息，然后进行业务处理。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;图中有两个 Topic，Topic0 有两个 Partition，Topic1 有一个 Partition，三副本备份。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;可以看到 Consumer Gourp1 中的 Consumer2 没有分到 Partition 处理，这是有可能出现的，下面会讲到。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;关于 Broker、Topics、Partitions 的一些元信息用 ZK 来存，监控和路由啥的也都会用到 ZK。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;生产&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;基本流程是这样的：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.616&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/yNKv1P4Q9eUdpbcDU4LclwZOGWlNWkBLBo26n2lw6vzIsdZDyoVHl2K7o7vupLMbFFw6n1dY9EacjEEM0ztekA/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;创建一条记录，记录中一个要指定对应的 Topic 和 Value，Key 和 Partition 可选。 &lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;先序列化，然后按照 Topic 和 Partition，放进对应的发送队列中。Kafka Produce 都是批量请求，会积攒一批，然后一起发送，不是调 send() 就立刻进行网络发包。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如果 Partition 没填，那么情况会是这样的：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这些要发往同一个 Partition 的请求按照配置，攒一波，然后由一个单独的线程一次性发过去。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;strong/&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;API&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;有 High Level API，替我们把很多事情都干了，Offset，路由啥都替我们干了，用起来很简单。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;还有 Simple API，Offset 啥的都是要我们自己记录。（注：消息消费的时候，首先要知道去哪消费，这就是路由，消费完之后，要记录消费单哪，就是 Offset）&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;strong/&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;Partition&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;当存在多副本的情况下，会尽量把多个副本，分配到不同的 Broker 上。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Kafka 会为 Partition 选出一个 Leader，之后所有该 Partition 的请求，实际操作的都是 Leader，然后再同步到其他的 Follower。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;当一个 Broker 歇菜后，所有 Leader 在该 Broker 上的 Partition 都会重新选举，选出一个 Leader。（这里不像分布式文件存储系统那样会自动进行复制保持副本数）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;然后这里就涉及两个细节：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;关于 Partition 的分配，还有 Leader 的选举，总得有个执行者。在 Kafka 中，这个执行者就叫 Controller。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Kafka 使用 ZK 在 Broker 中选出一个 Controller，用于 Partition 分配和 Leader 选举。&lt;/span&gt;&lt;/p&gt;&lt;h3&gt;&lt;span&gt;Partition 的分配：&lt;/span&gt;&lt;/h3&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;将所有 Broker（假设共 n 个 Broker）和待分配的 Partition 排序。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;将第 i 个 Partition 分配到第（i mod n）个 Broker 上 （这个就是 Leader）。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;将第 i 个 Partition 的第 j 个 Replica 分配到第（(i + j) mode n）个 Broker 上。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;&lt;br/&gt;&lt;/h3&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;strong/&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;Leader 容灾&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;Controller 会在 ZK 的 /brokers/ids 节点上注册 Watch，一旦有 Broker 宕机，它就能知道。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;当 Broker 宕机后，Controller 就会给受到影响的 Partition 选出新 Leader。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Controller 从 &lt;span&gt;ZK &lt;/span&gt;的 /brokers/topics/[topic]/partitions/[partition]/state 中，&lt;/span&gt;&lt;span&gt;读取对应 Partition 的 ISR（in-sync replica 已同步的副本）列表，选一个出来做 Leader。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;选出 Leader 后，更新 ZK，然后发送 LeaderAndISRRequest 给受影响的 Broker，让它们知道改变这事。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;为什么这里不是使用 ZK 通知，而是直接给 Broker 发送 RPC 请求，我的理解可能是这样做 ZK 有性能问题吧。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如果 ISR 列表是空，那么会根据配置，随便选一个 Replica 做 Leader，或者干脆这个 Partition 就是歇菜。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如果 ISR 列表的有机器，但是也歇菜了，那么还可以等 ISR 的机器活过来。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;strong/&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;多副本同步&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;这里的策略，服务端这边的处理是 Follower 从 Leader 批量拉取数据来同步。但是具体的可靠性，是由生产者来决定的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;生产者生产消息的时候，通过 request.required.acks 参数来设置数据的可靠性。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.40601503759398494&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/yNKv1P4Q9eUdpbcDU4LclwZOGWlNWkBL0C1IsBGkanAuiadOBaCJ4VNjepmw4wH7YXQNn14KZr2Vn9wTttiaVLibA/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;1064&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;在 Acks=-1 的时候，如果 ISR 少于 min.insync.replicas 指定的数目，那么就会返回不可用。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;这里 ISR 列表中的机器是会变化的，根据配置 replica.lag.time.max.ms，多久没同步，就会从 ISR 列表中剔除。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;以前还有根据落后多少条消息就踢出 ISR，在 1.0 版本后就去掉了，因为这个值很难取，在高峰的时候很容易出现节点不断的进出 ISR 列表。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;从 ISA 中选出 Leader 后，Follower 会把自己日志中上一个高水位后面的记录去掉，然后去和 Leader 拿新的数据。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;因为新的 Leader 选出来后，Follower 上面的数据，可能比新 Leader 多，所以要截取。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这里高水位的意思，对于 Partition 和 Leader，就是所有 ISR 中都有的最新一条记录。消费者最多只能读到高水位。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;从 Leader 的角度来说高水位的更新会延迟一轮，例如写入了一条新消息，ISR 中的 Broker 都 Fetch 到了，但是 ISR 中的 Broker 只有在下一轮的 Fetch 中才能告诉 Leader。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;也正是由于这个高水位延迟一轮，在一些情况下，Kafka 会出现丢数据和主备数据不一致的情况，0.11 开始，使用 Leader Epoch 来代替高水位。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;思考：当 Acks=-1 时&lt;/span&gt;&lt;/p&gt;&lt;h3&gt;&lt;br/&gt;&lt;/h3&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;消费&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;订阅 Topic 是以一个消费组来订阅的，一个消费组里面可以有多个消费者。同一个消费组中的两个消费者，不会同时消费一个 Partition。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;换句话来说，就是一个 Partition，只能被消费组里的一个消费者消费，但是可以同时被多个消费组消费。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;因此，如果消费组内的消费者如果比 Partition 多的话，那么就会有个别消费者一直空闲。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.655436447166922&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/MOwlO0INfQpTkwUYjTT3wwaytZsoWxhHpZ4Fz7LPGibTvbpV9ia1M5bYYZqjDicjMDSwVX1bRApDDGqICyvKRkwXg/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;653&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;strong/&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;API&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;订阅 Topic 时，可以用正则表达式，如果有新 Topic 匹配上，那能自动订阅上。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;Offset 的保存&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;一个消费组消费 Partition，需要保存 Offset 记录消费到哪，以前保存在 ZK 中，由于 ZK 的写性能不好，以前的解决方法都是 Consumer 每隔一分钟上报一次。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这里 ZK 的性能严重影响了消费的速度，而且很容易出现重复消费。&lt;/span&gt;&lt;span&gt;在 0.10 版本后，Kafka 把这个 Offset 的保存，从 ZK 总剥离，保存在一个名叫 consumeroffsets topic 的 Topic 中。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;写进消息的 Key 由 Groupid、Topic、Partition 组成，Value 是偏移量 Offset。Topic 配置的清理策略是 Compact。总是保留最新的 Key，其余删掉。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;一般情况下，每个 Key 的 Offset 都是缓存在内存中，查询的时候不用遍历 Partition，如果没有缓存，第一次就会遍历 Partition 建立缓存，然后查询返回。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;确定 Consumer Group 位移信息写入 consumers_offsets 的哪个 Partition，具体计算公式：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;pre&gt;&lt;code&gt;__consumers_offsets partition =&lt;br/&gt;           Math.&lt;span&gt;abs&lt;/span&gt;(groupId.hashCode() % groupMetadataTopicPartitionCount)   &lt;br/&gt;&lt;span&gt;//groupMetadataTopicPartitionCount由offsets.topic.num.partitions指定，默认是50个分区。&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;思考：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;如果正在跑的服务，修改了 offsets.topic.num.partitions，那么 Offset 的保存是不是就乱套了？&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;strong/&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;分配 Partition—Reblance&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;生产过程中 Broker 要分配 Partition，消费过程这里，也要分配 Partition 给消费者。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;类似 Broker 中选了一个 Controller 出来，消费也要从 Broker 中选一个 Coordinator，用于分配 Partition。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;下面从顶向下，分别阐述一下：&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;怎么选 Coordinator&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;交互流程&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;Reblance 的流程&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;&lt;br/&gt;&lt;/h3&gt;&lt;h3&gt;&lt;strong&gt;&lt;span&gt;①选 Coordinator：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;看 Offset 保存在那个 Partition；该 Partition Leader 所在的 Broker 就是被选定的 Coordinator。&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这里我们可以看到，Consumer Group 的 Coordinator，和保存 Consumer Group Offset 的 Partition Leader 是同一台机器。&lt;/span&gt;&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;&lt;span&gt;②交互流程：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;把 Coordinator 选出来之后，就是要分配了。&lt;/span&gt;&lt;span&gt;整个流程是这样的：&lt;/span&gt;&lt;/h3&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Consumer 启动、或者 Coordinator 宕机了，Consumer 会任意请求一个 Broker，发送 ConsumerMetadataRequest 请求。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Broker 会按照上面说的方法，选出这个 Consumer 对应 Coordinator 的地址。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Consumer 发送 Heartbeat 请求给 Coordinator，返回 IllegalGeneration 的话，就说明 Consumer 的信息是旧的了，需要重新加入进来，进行 Reblance。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;返回成功，那么 Consumer 就从上次分配的 Partition 中继续执行。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;③Reblance 流程：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Consumer 给 Coordinator 发送 JoinGroupRequest 请求。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;这时其他 Consumer 发 Heartbeat 请求过来时，Coordinator 会告诉他们，要 Reblance 了。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;其他 Consumer 发送 JoinGroupRequest 请求。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;所有记录在册的 Consumer 都发了 JoinGroupRequest 请求之后，Coordinator 就会在这里 Consumer 中随便选一个 Leader。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;然后回 JoinGroupRespone，这会告诉 Consumer 你是 Follower 还是 Leader，对于 Leader，还会把 Follower 的信息带给它，让它根据这些信息去分配 Partition。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Consumer 向 Coordinator 发送 SyncGroupRequest，其中 Leader 的 SyncGroupRequest 会包含分配的情况。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Coordinator 回包，把分配的情况告诉 Consumer，包括 Leader。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;当 Partition 或者消费者的数量发生变化时，都得进行 Reblance。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;列举一下会 Reblance 的情况：&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;增加 Partition&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;增加消费者&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;消费者主动关闭&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;消费者宕机了&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;Coordinator 自己也宕机了&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;&lt;br/&gt;&lt;/h3&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;消息投递语义&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;Kafka 支持 3 种消息投递语义：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在业务中，常常都是使用 At least once 的模型，如果需要可重入的话，往往是业务自己实现。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;strong/&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;At least once&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;先获取数据，再进行业务处理，业务处理成功后 Commit Offset：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;At most once&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;先获取数据，再 Commit Offset，最后进行业务处理：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;strong/&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;Exactly once&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;思路是这样的，首先要保证消息不丢，再去保证不重复。所以盯着 At least once 的原因来搞。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;首先想出来的：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;由于业务接口是否幂等，不是 Kafka 能保证的，所以 Kafka 这里提供的 Exactly once 是有限制的，消费者的下游也必须是 Kafka。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;所以以下讨论的，没特殊说明，消费者的下游系统都是 Kafka（注：使用 Kafka Conector，它对部分系统做了适配，实现了 Exactly once）。生产者幂等性好做，没啥问题。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;解决重复消费有两个方法：&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;下游系统保证幂等性，重复消费也不会导致多条记录。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;把 Commit Offset 和业务处理绑定成一个事务。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;本来 Exactly once 实现第 1 点就 OK 了。&lt;/span&gt;&lt;span&gt;但是在一些使用场景下，我们的数据源可能是多个 Topic，处理后输出到多个 Topic，这时我们会希望输出时要么全部成功，要么全部失败。这就需要实现事务性。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;既然要做事务，那么干脆把重复消费的问题从根源上解决，把 Commit Offset 和输出到其他 Topic 绑定成一个事务。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;strong/&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;生产幂等性&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;思路是这样的，为每个 Producer 分配一个 Pid，作为该 Producer 的唯一标识。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Producer 会为每一个&lt;/span&gt;&lt;topic&gt;&lt;span&gt;维护一个单调递增的 Seq。类似的，Broker 也会为每个&lt;/span&gt;&lt;pid&gt;&lt;span&gt;记录下最新的 Seq。&lt;/span&gt;&lt;/pid&gt;&lt;/topic&gt;&lt;/p&gt;&lt;p&gt;&lt;topic&gt;&lt;pid&gt;&lt;span&gt;当 req_seq == broker_seq+1 时，Broker 才会接受该消息，因为：&lt;/span&gt;&lt;/pid&gt;&lt;/topic&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.5745967741935485&quot; data-type=&quot;png&quot; data-w=&quot;496&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/yNKv1P4Q9eUdpbcDU4LclwZOGWlNWkBL7LAjfj8ohr9pVMXEsunTTOqekhdTWPQibvb63p2Fg1apLeX1rHUHPpA/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;strong/&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;事务性/原子性广播&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;场景是这样的：&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;先从多个源 Topic 中获取数据。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;做业务处理，写到下游的多个目的 Topic。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;更新多个源 Topic 的 Offset。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;其中第 2、3 点作为一个事务，要么全成功，要么全失败。这里得益于 Offset 实际上是用特殊的 Topic 去保存，这两点都归一为写多个 Topic 的事务性处理。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7141203703703703&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/yNKv1P4Q9eUdpbcDU4LclwZOGWlNWkBLIGCavaG2OMIXReTlCHV1FDlRBMH9C56S0GtAmcdhh6pOd7EJ7jawLA/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;864&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;基本思路是这样的：&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;引入 Tid（transaction id），和 Pid 不同，这个 ID 是应用程序提供的，用于标识事务，和 Producer 是谁并没关系。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;就是任何 Producer 都可以使用这个 Tid 去做事务，这样进行到一半就死掉的事务，可以由另一个 Producer 去恢复。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;同时为了记录事务的状态，类似对 Offset 的处理，引入 Transaction Coordinator 用于记录 Transaction Log。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在集群中会有多个 Transaction Coordinator，每个 Tid 对应唯一一个 Transaction Coordinator。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;注：Transaction Log 删除策略是 Compact，已完成的事务会标记成 Null，Compact 后不保留。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;做事务时，先标记开启事务，写入数据，全部成功就在 Transaction Log 中记录为 Prepare Commit 状态，否则写入 Prepare Abort 的状态。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;之后再去给每个相关的 Partition 写入一条 Marker（Commit 或者 Abort）消息，标记这个事务的 Message 可以被读取或已经废弃。成功后在 Transaction Log记录下 Commit/Abort 状态，至此事务结束。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7583333333333333&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/yNKv1P4Q9eUdpbcDU4LclwZOGWlNWkBLCgqUYNBrs8CMiaW6Ndes3SiaOt0TGxickdYib6XcDACnXvpJzkbDyqDmSw/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;720&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;数据流：&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;首先使用 Tid 请求任意一个 Broker（代码中写的是负载最小的 Broker），找到对应的 Transaction Coordinator。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;请求 Transaction Coordinator 获取到对应的 Pid，和 Pid 对应的 Epoch，这个 Epoch 用于防止僵死进程复活导致消息错乱。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;当消息的 Epoch 比当前维护的 Epoch 小时，拒绝掉。Tid 和 Pid 有一一对应的关系，这样对于同一个 Tid 会返回相同的 Pid。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Client 先请求 Transaction Coordinator 记录&lt;/span&gt;&lt;topic&gt;&lt;span&gt;的事务状态，初始状态是 Begin，如果是该事务中第一个到达的&lt;/span&gt;&lt;topic&gt;&lt;span&gt;，同时会对事务进行计时。&lt;/span&gt;&lt;/topic&gt;&lt;/topic&gt;&lt;/p&gt;&lt;p&gt;&lt;topic&gt;&lt;topic&gt;&lt;span&gt;Client 输出数据到相关的 Partition 中；Client 再请求 Transaction Coordinator 记录 Offset 的&lt;/span&gt;&lt;topic&gt;&lt;span&gt;事务状态；Client 发送 Offset Commit 到对应 Offset Partition。&lt;/span&gt;&lt;/topic&gt;&lt;/topic&gt;&lt;/topic&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Client 发送 Commit 请求，Transaction Coordinator 记录 Prepare Commit/Abort，然后发送 Marker 给相关的 Partition。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;全部成功后，记录 Commit/Abort 的状态，最后这个记录不需要等待其他 Replica 的 ACK，因为 Prepare 不丢就能保证最终的正确性了。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这里 Prepare 的状态主要是用于事务恢复，例如给相关的 Partition 发送控制消息，没发完就宕机了，备机起来后，Producer 发送请求获取 Pid 时，会把未完成的事务接着完成。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;当 Partition 中写入 Commit 的 Marker 后，相关的消息就可被读取。所以 Kafka 事务在 Prepare Commit 到 Commit 这个时间段内，消息是逐渐可见的，而不是同一时刻可见。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;strong/&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;消费事务&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;前面都是从生产的角度看待事务。还需要从消费的角度去考虑一些问题。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;消费时，Partition 中会存在一些消息处于未 Commit 状态，即业务方应该看不到的消息，需要过滤这些消息不让业务看到，Kafka 选择在消费者进程中进行过来，而不是在 Broker 中过滤，主要考虑的还是性能。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Kafka 高性能的一个关键点是 Zero Copy，如果需要在 Broker 中过滤，那么势必需要读取消息内容到内存，就会失去 Zero Copy 的特性。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;文件组织&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;Kafka 的数据，实际上是以文件的形式存储在文件系统的。Topic 下有 Partition，Partition 下有 Segment，Segment 是实际的一个个文件，Topic 和 Partition 都是抽象概念。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在目录 /partitionid}/ 下，存储着实际的 Log 文件（即 Segment），还有对应的索引文件。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;每个 Segment 文件大小相等，文件名以这个 Segment 中最小的 Offset 命名，文件扩展名是 .log。&lt;/span&gt;&lt;span&gt;Segment 对应的索引的文件名字一样，扩展名是 .index。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;有两个 Index 文件：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;总体的组织是这样的：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.813&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/yNKv1P4Q9eUdpbcDU4LclwZOGWlNWkBLO7wGNGVTIek4WFxxynB8NSDu7bYQaibcpl8KV0Lw0vbBnrewpicXOP6A/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;为了减少索引文件的大小，降低空间使用，方便直接加载进内存中，这里的索引使用稀疏矩阵，不会每一个 Message 都记录下具体位置，而是每隔一定的字节数，再建立一条索引。 &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;索引包含两部分：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;查找 Offset 对应的记录时，会先用二分法，找出对应的 Offset 在哪个 Segment 中，然后使用索引，在定位出 Offset 在 Segment 中的大概位置，再遍历查找 Message。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;常用配置项&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;strong/&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;Broker 配置&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.2814070351758794&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/yNKv1P4Q9eUdpbcDU4LclwZOGWlNWkBLnqWutedLmHJdP8icicFEXxXD3aKLqp1l7TeZpyKiaFtL5qMiaVI8WdN44Q/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;796&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;strong/&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;Topic 配置&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5257214554579673&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/yNKv1P4Q9eUdpbcDU4LclwZOGWlNWkBLXWSLxSZ1iaJrl7MdYDfOIyP2v05y6khfdia5RZ1zhKiaoJib88ne9VDDqg/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;797&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;关于日志清理，默认当前正在写的日志，是怎么也不会清理掉的。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;还有 0.10 之前的版本，时间看的是日志文件的 Mtime，但这个值是不准确的，有可能文件被 Touch 一下，Mtime 就变了。因此从 0.10 版本开始，改为使用该文件最新一条消息的时间来判断。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;按大小清理这里也要注意，Kafka 在定时任务中尝试比较当前日志量总大小是否超过阈值至少一个日志段的大小。如果超过但是没超过一个日志段，那么就不会删除。&lt;/span&gt;&lt;/p&gt;&lt;blockquote data-type=&quot;2&quot; data-url=&quot;&quot; data-author-name=&quot;&quot; data-content-utf8-length=&quot;120&quot; data-source-title=&quot;&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;作者：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;郑杰文，腾讯云存储，高级后台工程师，2014 年毕业加入腾讯，先后从事增值业务开发、腾讯云存储开发。对业务性、技术平台型后台架构设计都有深入的探索实践。对架构的海量并发、高可用、可扩展性都有相当的经验，目前主要研究分布式领域和存储领域。&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;-End-&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot; mpa-paragraph-type=&quot;ignored&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mpa-template-id=&quot;527&quot; data-mpa-category=&quot;image&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mpa-template-id=&quot;1357582&quot; data-mpa-category=&quot;image&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;span&gt;最后，关注公众号互联网架构师，在后台回复：2T，可以获取我整理的 Java 系列面试题和答案，非常齐全&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.1423611111111112&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/9mQQWOf4KRI2cbvKcYHPMKYlo4ibO3ZXG4kRnuC195QBJzMR0VLd7p08kYInDEEiasufnLsY7LhFwPIml2fPergw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;288&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;正文结束&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;推荐阅读 ↓↓↓&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;1.&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2MTIzMzY3Mw==&amp;amp;mid=2247529588&amp;amp;idx=1&amp;amp;sn=9adea3eb1f5116dddf21513bfa0bedec&amp;amp;chksm=ea5fb912dd28300494cd8252da922f1fc6cf5a884436fd0534e25db5e910cd46567477a6fc05&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;求求你别在用SpringMVC了，太Low了！Spring又官宣了一个更牛逼的替代框架！&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;求求你别在用SpringMVC了，太Low了！Spring又官宣了一个更牛逼的替代框架！&lt;/a&gt;&lt;/p&gt;&lt;p&gt;2&lt;span&gt;.&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2MTIzMzY3Mw==&amp;amp;mid=2247488035&amp;amp;idx=1&amp;amp;sn=5300893903094128bdc20ce2a5717a50&amp;amp;chksm=ea5cdf45dd2b56531ac0c3a8fb8b56b06bc546785f8772a4d02e2ca87c4e30f25b24bf21f784&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-itemshowtype=&quot;0&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;从零开始搭建创业公司后台技术栈&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;3&lt;span&gt;.&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2MTIzMzY3Mw==&amp;amp;mid=2247488928&amp;amp;idx=1&amp;amp;sn=4c56dd675e1b32a73b698df3d5e8609f&amp;amp;chksm=ea5cd8c6dd2b51d05e6d6d715418241f471ccb3002719263b2d0e092763f68f3691249970a08&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-itemshowtype=&quot;0&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;程序员一般可以从什么平台接私活？&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;4&lt;span&gt;.&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2MTIzMzY3Mw==&amp;amp;mid=2247530269&amp;amp;idx=1&amp;amp;sn=9f4f45fe6e961b139fb0f4448b339ca4&amp;amp;chksm=ea5fba7bdd28336d2a1a4b0234c6a1a4375668213c49b3579352a0bff57af09661cd66d4d094&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;Spring Boot+Redis+拦截器+自定义Annotation实现接口自动幂等&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;Spring Boot+Redis+拦截器+自定义Annotation实现接口自动幂等&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;5.&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2MTIzMzY3Mw==&amp;amp;mid=2247513283&amp;amp;idx=1&amp;amp;sn=3b3d8e893a1241cf5af2150370ae9d71&amp;amp;chksm=ea5f79a5dd28f0b3a7603b1fbdb306f77ac64223bd05c4b7f0dc0469f77a68359810c5de2a01&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;为什么国内 996 干不过国外的 955呢？&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;为什么国内 996 干不过国外的 955呢？&lt;/a&gt;&lt;/p&gt;&lt;p&gt;6&lt;span&gt;.&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2MTIzMzY3Mw==&amp;amp;mid=2247528236&amp;amp;idx=1&amp;amp;sn=c675d5d3aede21b4b7ebbba21eadf96c&amp;amp;chksm=ea5fa24add282b5cfb13757cd534ec600fb910f9dcb7f3ee3dea5e7929e0fbbd22381625ff20&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;中国的铁路订票系统在世界上属于什么水平？&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;中国的铁路订票系统在世界上属于什么水平？&lt;/a&gt;                        &lt;/span&gt;&lt;/p&gt;&lt;p&gt;7&lt;span&gt;.&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2MTIzMzY3Mw==&amp;amp;mid=2247488564&amp;amp;idx=1&amp;amp;sn=256862239b12a1313919ee3ea6ff0d1c&amp;amp;chksm=ea5cd952dd2b50443feec88eb893233d2f6cf33f89e2ce72192c98035fd26cb0eb797a86f8f0&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-itemshowtype=&quot;0&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;15张图看懂瞎忙和高效的区别！&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&lt;img class=&quot;__bg_gif rich_pages wxw-img&quot; data-fileid=&quot;100030073&quot; data-ratio=&quot;0.1328125&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/3GQek52mKtWDXtSkfViaQ2FZ2ZfSyjBcSkArjQVCMH4a7uxg6Vkibiaiciaiae2uxvzia7yib04tleLiaqcFVGUf2vcMf4A/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;640&quot;/&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/div&gt;

          

          
          &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>aa92cf7e9e0a01e3ed29ff6abd32cf2e</guid>
<title>学 SQL 必须了解的 10 个高级概念</title>
<link>https://toutiao.io/k/sfo5p5p</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section&gt;&lt;pre&gt;&lt;pre&gt;&lt;pre&gt;&lt;pre&gt;&lt;h1&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;ignored&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;ignored&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;ignored&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;ignored&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;ignored&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;ignored&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;ignored&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;ignored&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;ignored&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;ignored&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;ignored&quot;&gt;&lt;section&gt;&lt;span&gt;&lt;blockquote class=&quot;js_blockquote_wrap&quot; data-type=&quot;2&quot; data-url=&quot;&quot; data-author-name=&quot;&quot; data-content-utf8-length=&quot;210&quot; data-source-title=&quot;&quot;&gt;&lt;section class=&quot;js_blockquote_digest&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;《Ten Advanced SQL Concepts You Should Know for Data Science Interviews》&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;原文链接：https://towardsdatascience.com/ten-advanced-sql-concepts-you-should-know-for-data-science-interviews-4d7015ec74b0&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/h1&gt;&lt;/pre&gt;&lt;/pre&gt;&lt;/pre&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;随着数据量持续增长，对合格数据专业人员的需求也会增长。具体而言，对SQL流利的专业人士的需求日益增长，而不仅仅是在初级层面。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;因此，Stratascratch的创始人Nathan Rosidi以及我觉得我认为10个最重要和相关的中级到高级SQL概念。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;1.常见表表达式（CTEs）&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果您想要查询子查询，那就是CTEs施展身手的时候 - CTEs基本上创建了一个临时表。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用常用表表达式（CTEs）是模块化和分解代码的好方法，与您将文章分解为几个段落的方式相同。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;请在Where子句中使用子查询进行以下查询。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;SELECT &lt;br/&gt; name,&lt;br/&gt; salary &lt;br/&gt;FROM&lt;br/&gt; People &lt;br/&gt;WHERE&lt;br/&gt; NAME IN ( SELECT DISTINCT NAME FROM population WHERE country = &lt;span&gt;&quot;Canada&quot;&lt;/span&gt; AND city = &lt;span&gt;&quot;Toronto&quot;&lt;/span&gt; ) &lt;br/&gt; AND salary &amp;gt;= (&lt;br/&gt; SELECT&lt;br/&gt;  AVG( salary ) &lt;br/&gt; FROM&lt;br/&gt;  salaries &lt;br/&gt;WHERE&lt;br/&gt; gender = &lt;span&gt;&quot;Female&quot;&lt;/span&gt;)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这似乎似乎难以理解，但如果在查询中有许多子查询，那么怎么样？这就是CTEs发挥作用的地方。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;with toronto_ppl as (&lt;br/&gt;   SELECT DISTINCT name&lt;br/&gt;   FROM population&lt;br/&gt;   WHERE country = &lt;span&gt;&quot;Canada&quot;&lt;/span&gt;&lt;br/&gt;         AND city = &lt;span&gt;&quot;Toronto&quot;&lt;/span&gt;&lt;br/&gt;)&lt;br/&gt;, avg_female_salary as (&lt;br/&gt;   SELECT AVG(salary) as avgSalary&lt;br/&gt;   FROM salaries&lt;br/&gt;   WHERE gender = &lt;span&gt;&quot;Female&quot;&lt;/span&gt;&lt;br/&gt;)&lt;br/&gt;SELECT name&lt;br/&gt;       , salary&lt;br/&gt;FROM People&lt;br/&gt;WHERE name &lt;span&gt;in&lt;/span&gt; (SELECT DISTINCT FROM toronto_ppl)&lt;br/&gt;      AND salary &amp;gt;= (SELECT avgSalary FROM avg_female_salary)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;现在很清楚，Where子句是在多伦多的名称中过滤。如果您注意到，CTE很有用，因为您可以将代码分解为较小的块，但它们也很有用，因为它允许您为每个CTE分配变量名称（即toronto_ppl和avg_female_salary）&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;同样，CTEs允许您完成更高级的技术，如创建递归表。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;2.递归CTEs.&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;递归CTE是引用自己的CTE，就像Python中的递归函数一样。递归CTE尤其有用，它涉及查询组织结构图，文件系统，网页之间的链接图等的分层数据，尤其有用。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;递归CTE有3个部分：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;锚构件：返回CTE的基本结果的初始查询&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;递归成员：引用CTE的递归查询。这是所有与锚构件的联盟&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;停止递归构件的终止条件&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以下是获取每个员工ID的管理器ID的递归CTE的示例：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;with org_structure as (&lt;br/&gt;   SELECT id&lt;br/&gt;          , manager_id&lt;br/&gt;   FROM staff_members&lt;br/&gt;   WHERE manager_id IS NULL&lt;br/&gt;   UNION ALL&lt;br/&gt;   SELECT sm.id&lt;br/&gt;          , sm.manager_id&lt;br/&gt;   FROM staff_members sm&lt;br/&gt;   INNER JOIN org_structure os&lt;br/&gt;      ON os.id = sm.manager_id&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3.临时函数&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果您想了解有关临时函数的更多信息，请检查此项，但知道如何编写临时功能是重要的原因：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;它允许您将代码的块分解为较小的代码块&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;它适用于写入清洁代码&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;它可以防止重复，并允许您重用类似于使用Python中的函数的代码。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;考虑以下示例：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;SELECT name&lt;br/&gt;       , CASE WHEN tenure &amp;lt; 1 THEN &lt;span&gt;&quot;analyst&quot;&lt;/span&gt;&lt;br/&gt;              WHEN tenure BETWEEN 1 and 3 THEN &lt;span&gt;&quot;associate&quot;&lt;/span&gt;&lt;br/&gt;              WHEN tenure BETWEEN 3 and 5 THEN &lt;span&gt;&quot;senior&quot;&lt;/span&gt;&lt;br/&gt;              WHEN tenure &amp;gt; 5 THEN &lt;span&gt;&quot;vp&quot;&lt;/span&gt;&lt;br/&gt;              ELSE &lt;span&gt;&quot;n/a&quot;&lt;/span&gt;&lt;br/&gt;         END AS seniority &lt;br/&gt;FROM employees&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;相反，您可以利用临时函数来捕获案例子句。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;CREATE TEMPORARY FUNCTION get_seniority(tenure INT64) AS (&lt;br/&gt;   CASE WHEN tenure &amp;lt; 1 THEN &lt;span&gt;&quot;analyst&quot;&lt;/span&gt;&lt;br/&gt;        WHEN tenure BETWEEN 1 and 3 THEN &lt;span&gt;&quot;associate&quot;&lt;/span&gt;&lt;br/&gt;        WHEN tenure BETWEEN 3 and 5 THEN &lt;span&gt;&quot;senior&quot;&lt;/span&gt;&lt;br/&gt;        WHEN tenure &amp;gt; 5 THEN &lt;span&gt;&quot;vp&quot;&lt;/span&gt;&lt;br/&gt;        ELSE &lt;span&gt;&quot;n/a&quot;&lt;/span&gt;&lt;br/&gt;   END&lt;br/&gt;);&lt;br/&gt;SELECT name&lt;br/&gt;       , get_seniority(tenure) as seniority&lt;br/&gt;FROM employees&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过临时函数，查询本身更简单，更可读，您可以重复使用资历函数！&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;4.使用CASE WHEN枢转数据&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;您很可能会看到许多要求在陈述时使用CASE WHEN的问题，这只是因为它是一种多功能的概念。如果要根据其他变量分配某个值或类，则允许您编写复杂的条件语句。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;较少众所周知，它还允许您枢转数据。例如，如果您有一个月列，并且您希望为每个月创建一个单个列，则可以使用语句追溯数据的情况。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;示例问题：编写SQL查询以重新格式化表，以便每个月有一个收入列。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;Initial table:  &lt;br/&gt;+------+---------+-------+  &lt;br/&gt;| id   | revenue | month |  &lt;br/&gt;+------+---------+-------+  &lt;br/&gt;| 1    | 8000    | Jan   |  &lt;br/&gt;| 2    | 9000    | Jan   |  &lt;br/&gt;| 3    | 10000   | Feb   |  &lt;br/&gt;| 1    | 7000    | Feb   |  &lt;br/&gt;| 1    | 6000    | Mar   |  &lt;br/&gt;+------+---------+-------+  &lt;br/&gt;  &lt;br/&gt;Result table:  &lt;br/&gt;+------+-------------+-------------+-------------+-----+-----------+  &lt;br/&gt;| id   | Jan_Revenue | Feb_Revenue | Mar_Revenue | ... | Dec_Revenue |  &lt;br/&gt;+------+-------------+-------------+-------------+-----+-----------+  &lt;br/&gt;| 1    | 8000        | 7000        | 6000        | ... | null        |  &lt;br/&gt;| 2    | 9000        | null        | null        | ... | null        |  &lt;br/&gt;| 3    | null        | 10000       | null        | ... | null        |  &lt;br/&gt;+------+-------------+-------------+-------------+-----+-----------+&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;5.EXCEPT vs NOT IN&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;除了几乎不相同的操作。它们都用来比较两个查询/表之间的行。所说，这两个人之间存在微妙的细微差别。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;首先，除了过滤删除重复并返回不同的行与不在中的不同行。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;同样，除了在查询/表中相同数量的列，其中不再与每个查询/表比较单个列。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;6.自联结&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一个SQL表自行连接自己。你可能会认为没有用，但你会感到惊讶的是这是多么常见。在许多现实生活中，数据存储在一个大型表中而不是许多较小的表中。在这种情况下，可能需要自我连接来解决独特的问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;让我们来看看一个例子。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;示例问题：给定下面的员工表，写出一个SQL查询，了解员工的工资，这些员工比其管理人员工资更多。对于上表来说，Joe是唯一一个比他的经理工资更多的员工。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;+----+-------+--------+-----------+  &lt;br/&gt;| Id | Name  | Salary | ManagerId |  &lt;br/&gt;+----+-------+--------+-----------+  &lt;br/&gt;| 1  | Joe   | 70000  | 3         |  &lt;br/&gt;| 2  | Henry | 80000  | 4         |  &lt;br/&gt;| 3  | Sam   | 60000  | NULL      |  &lt;br/&gt;| 4  | Max   | 90000  | NULL      |  &lt;br/&gt;+----+-------+--------+-----------+Answer:  &lt;br/&gt;SELECT  &lt;br/&gt;    a.Name as Employee  &lt;br/&gt;FROM  &lt;br/&gt;    Employee as a  &lt;br/&gt;    JOIN Employee as b on a.ManagerID = b.Id  &lt;br/&gt;WHERE a.Salary &amp;gt; b.Salary&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;7.Rank vs Dense Rank vs Row Number&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;它是一个非常常见的应用，对行和价值进行排名。以下是公司经常使用排名的一些例子：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;按购物，利润等数量排名最高值的客户&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;排名销售数量的顶级产品&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;以最大的销售排名顶级国家&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;排名在观看的分钟数，不同观众的数量等观看的顶级视频。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在SQL中，您可以使用几种方式将“等级”分配给行，我们将使用示例进行探索。考虑以下Query和结果：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;SELECT Name  &lt;br/&gt; , GPA  &lt;br/&gt; , ROW_NUMBER() OVER (ORDER BY GPA desc)  &lt;br/&gt; , RANK() OVER (ORDER BY GPA desc)  &lt;br/&gt; , DENSE_RANK() OVER (ORDER BY GPA desc)  &lt;br/&gt;FROM student_grades&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.28888888888888886&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/RQueXibgo0KPq4lvUrW3icFhUiaQNEiaaM5zOCdiaBuJnR5CGuY7eclqRNibUhcibicsic0Bs2ar9bqEwBfMVOtNZkjlVfQ/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;ROW_NUMBER（）返回每行开始的唯一编号。当存在关系时（例如，BOB vs Carrie），ROW_NUMBER（）如果未定义第二条标准，则任意分配数字。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Rank（）返回从1开始的每行的唯一编号，除了有关系时，等级（）将分配相同的数字。同样，差距将遵循重复的等级。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;dense_rank（）类似于等级（），除了重复等级后没有间隙。请注意，使用dense_rank（），Daniel排名第3，而不是第4位（）。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;8.计算Delta值&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;另一个常见应用程序是将不同时期的值进行比较。例如，本月和上个月的销售之间的三角洲是什么？或者本月和本月去年这个月是什么？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在将不同时段的值进行比较以计算Deltas时，这是Lead（）和LAG（）发挥作用时。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这是一些例子：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;# Comparing each month&#x27;s sales to last month  &lt;/span&gt;&lt;br/&gt;SELECT month  &lt;br/&gt;       , sales  &lt;br/&gt;       , sales - LAG(sales, 1) OVER (ORDER BY month)  &lt;br/&gt;FROM monthly_sales  &lt;br/&gt;&lt;span&gt;# Comparing each month&#x27;s sales to the same month last year  &lt;/span&gt;&lt;br/&gt;SELECT month  &lt;br/&gt;       , sales  &lt;br/&gt;       , sales - LAG(sales, 12) OVER (ORDER BY month)  &lt;br/&gt;FROM monthly_sales&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;9.计算运行总数&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果你知道关于row_number（）和lag（）/ lead（），这可能对您来说可能不会惊喜。但如果你没有，这可能是最有用的窗口功能之一，特别是当您想要可视化增长！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用具有SUM（）的窗口函数，我们可以计算运行总数。请参阅下面的示例：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;SELECT Month  &lt;br/&gt;       , Revenue  &lt;br/&gt;       , SUM(Revenue) OVER (ORDER BY Month) AS Cumulative  &lt;br/&gt;FROM monthly_revenue&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6338672768878718&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/RQueXibgo0KPq4lvUrW3icFhUiaQNEiaaM5z4DHNMibzClf3GnXeEC9ibbPIkSOEk4akVXgl5o9JejcNcheFfJwtSBaQ/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;jpeg&quot; data-w=&quot;874&quot;/&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;10.日期时间操纵&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;您应该肯定会期望某种涉及日期时间数据的SQL问题。例如，您可能需要将数据分组组或将可变格式从DD-MM-Yyyy转换为简单的月份。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;您应该知道的一些功能是：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;提炼&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;日元&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;date_add，date_sub.&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;date_trunc.&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;示例问题：给定天气表，写一个SQL查询，以查找与其上一个（昨天）日期相比的温度较高的所有日期的ID。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;+---------+------------------+------------------+  &lt;br/&gt;| Id(INT) | RecordDate(DATE) | Temperature(INT) |  &lt;br/&gt;+---------+------------------+------------------+  &lt;br/&gt;|       1 |       2015-01-01 |               10 |  &lt;br/&gt;|       2 |       2015-01-02 |               25 |  &lt;br/&gt;|       3 |       2015-01-03 |               20 |  &lt;br/&gt;|       4 |       2015-01-04 |               30 |  &lt;br/&gt;+---------+------------------+------------------+Answer:  &lt;br/&gt;SELECT  &lt;br/&gt;    a.Id  &lt;br/&gt;FROM  &lt;br/&gt;    Weather a,  &lt;br/&gt;    Weather b  &lt;br/&gt;WHERE  &lt;br/&gt;    a.Temperature &amp;gt; b.Temperature  &lt;br/&gt;    AND DATEDIFF(a.RecordDate, b.RecordDate) = 1&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;就这样！我希望这有助于您在面试准备中 - 我相信，如果您知道这10个内部概念，那么在那里大多数SQL问题时，你会做得很好。 &lt;/p&gt;&lt;pre&gt;&lt;pre&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;pre&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;109531&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;strong data-brushtype=&quot;text&quot;&gt;END&lt;/strong&gt;&lt;/section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;往期推荐&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img __bg_gif&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;578&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;47&quot; data-ratio=&quot;0.08148148148148149&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/bsIqp34icDAgp8Jl95vOP1MiaEfSueibqnDQjkFaq7Uf31BNwpg6gSy15a1JV7wmibt1KQwA4n5ViaJQUMJwAYoJapQ/640?wx_fmt=gif&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&quot; data-type=&quot;gif&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;/pre&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>2d9fd7dee21fa9af44dcf90f875b25a6</guid>
<title>一个不错的开源项目风控引擎（Radar）</title>
<link>https://toutiao.io/k/85syqza</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                           autoTypeSetting24psection&amp;#10;                          &quot; id=&quot;js_content&quot;&gt;&lt;h2&gt;项目介绍&lt;/h2&gt;&lt;p&gt;一款基于java语言，使用Springboot + Mongodb + Groovy + Es等框架搭建的轻量级实时风控引擎，适用于反欺诈应用场景，极简的配置，真正做到了开箱即用。&lt;br/&gt;通过学习本项目能快速了解&lt;span&gt;风险的定义&lt;/span&gt;，进而&lt;span&gt;量化风险&lt;/span&gt; ，最后达到&lt;span&gt;集中管理风险&lt;/span&gt;的目的。&lt;br/&gt;A real-time risk analysis engine,which can update risk rule in real-time and make it effective immediately.&lt;br/&gt;It applies to the anti-fraud application perfectly. The project code called Radar, like the code, monitor the transaction at the back.&lt;/p&gt;&lt;h2&gt;项目特点&lt;/h2&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;实时风控，特殊场景可以做到100ms内响应&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;可视化规则编辑器，丰富的运算符、计算规则灵活&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;支持中文，易用性更强&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;自定义规则引擎，更加灵活，支持复杂多变的场景&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;插件化的设计，快速接入其它数据能力平台&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;NoSQL，易扩展，高性能&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;配置简单，开箱即用！&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;相关站点&lt;/h2&gt;&lt;pre&gt;&lt;span&gt;Gitee:  https://gitee.com/freshday/radar     &lt;/span&gt;&lt;br/&gt;&lt;span&gt;Github: https://github.com/wfh45678/radar // github 为镜像网站，贡献代码请提交到 gitee  &lt;/span&gt;&lt;br/&gt;&lt;span&gt;官网：  https://www.riskengine.cn  &lt;/span&gt;&lt;br/&gt;&lt;span&gt;Wiki:   https://gitee.com/freshday/radar/wikis/home&lt;/span&gt;&lt;/pre&gt;&lt;h2&gt;背景&lt;/h2&gt;&lt;p&gt;伴随着移动互联网的高速发展，羊毛党快速崛起，从一平台到另一个平台，所过之处一地鸡毛，这还不是最可怕的， 随之而来的黑产令大部分互联网应用为之胆寒，通常新上线的APP的福利比较大，风控系统不完善，BUG 被发现的频率也比较高， 黑产利用BUG短时间给平台带来了巨大的损失，某多多的（100元测试优惠券，一夜损失上百万W）就是一例。 针对这一现象， 拥有一款实时的风控引擎是所有带有金融性质的APP 的当务之急，Radar应景而生。&lt;br/&gt;Radar前身是笔者前公司的一个内部研究项目，由于众多原因项目商业化失败，考虑到项目本身的价值，弃之可惜， 现使用Springboot进行重构，删除了很多本地化功能，只保留风控引擎核心，更加通用，更加轻量，二次开发成本低， 开源出来，希望能给有风控需求的你们带来一些帮助。&lt;/p&gt;&lt;h2&gt;项目初衷&lt;/h2&gt;&lt;p&gt;我们知道企业做大后，会有很多产品线，而几乎每一个产品都需要做风险控制，通常我们都是把风险控制的逻辑写在相应的业务功能代码里， 大量重复的风控逻辑代码耦合在我们的业务逻辑里面，随着时间的累积，代码会变得异常复杂，会给后期的维护造成巨大的人力成本和风险。&lt;/p&gt;&lt;p&gt;所以风险的集中化管理势在必行，只有通过一个统一的管理平台，使用规则引擎，采用可视化配置的形式， 平台化管理不同产品的风控策略才是一种更好的方式, 而这正是Radar的初衷。&lt;/p&gt;&lt;h2&gt;项目架构&lt;/h2&gt;&lt;p&gt;前后端分离架构&lt;/p&gt;&lt;p&gt;后端技术框架： SpringBoot + Mybatis + tkMapper + Mysql + MongoDB + Redis + Groovy + ES + Swagger&lt;/p&gt;&lt;p&gt;前端技术框架： React(SPA)&lt;/p&gt;&lt;h3&gt;架构图&lt;/h3&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.865814696485623&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Wc4rFKffLwS9nVbU8f4kichStibib9Sc56vPOiaSvPFVnrfEPLzWSomGRnEO5icQ74ucbv7fneN9dKuHq4VYd8dFuVw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;626&quot;/&gt;&lt;/p&gt;&lt;h2&gt;技术选型&lt;/h2&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;Springboot：笔者是java 出生， 选择 Springboot 理所当然，方便自己， 也方便其他Java使用者进行扩展。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Mybatis + tkMapper： 持久层框架， tkMapper 提供mapper 通用模板功能，减少重复代码的生成。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Mysql ： 本项目中关系数据库，主要用于存放 风险模型的元信息。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;MongoDB： 用于存放事件JSON， 提供基本统计学计算（例如：max, min, sum, avg,）， 复杂的统计学概念（sd,variance, etc...）在内存中计算。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;ES： 提供数据查询和规则命中报表服务。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Redis： 提供缓存支持，Engine 利用发布订阅特性监听管理端相关配置的更新&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Groovy： 规则引擎，风控规则最后都生成 groovy 脚本， 实时编辑，动态生成，即时生效。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Swagger: Rest API 管理&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;hr/&gt;&lt;h2&gt;使用手册&lt;/h2&gt;&lt;p&gt;使用手册里面有大量的图片，为了方便国内用户使用，故推荐码云的wiki 链接,&lt;br/&gt;https://gitee.com/freshday/radar/wikis/manual&lt;/p&gt;&lt;h2&gt;演示入口&lt;/h2&gt;&lt;p&gt;通过管理端能够快速了解系统是怎么从风险的定义到风险的量化再到风险的集中管理的整个工作流程。&lt;br/&gt;为了更好的体验，请花一分钟观看 使用手册&lt;br/&gt;Demo URL： https://www.riskengine.cn&lt;br/&gt;建议大家自行注册用户，避免使用同样的测试账号受干扰.&lt;/p&gt;&lt;h2&gt;相关文档&lt;/h2&gt;&lt;p&gt;WIKI: https://gitee.com/freshday/radar/wikis/home?sort_id=1637444&lt;/p&gt;&lt;/div&gt;

          

          
          &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>2c3b70fb3d9ac26d4fc029a43efd5b4e</guid>
<title>Vue3中watch与watchEffect有什么区别？</title>
<link>https://toutiao.io/k/fs2lyqr</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mp-common-profile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;Mzg5ODA5MzQ2Mw==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/XP4dRIhZqqWEVfzE7Mf5ohF9icRZVaOMhgFtwZfOV9wvgQrcGELRiczHGbmL1OngZ5vNibSQaxJhtALMHIE215A9Q/0?wx_fmt=png&quot; data-nickname=&quot;前端下午茶&quot; data-alias=&quot;qianduanxiawucha&quot; data-signature=&quot;分享前端技术博客、精选文章&quot; data-from=&quot;0&quot; data-is_biz_ban=&quot;0&quot;/&gt;&lt;/section&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section&gt;&lt;span&gt;作者：Anthony Fu&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;原文：https://www.zhihu.com/question/462378193/answer/1916657458&lt;/span&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;你可以认为他们是同一个功能的两种不同形态，底层的实现是一样的。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;watch&lt;/code&gt;- 显式指定依赖源，依赖源更新时执行回调函数&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;watchEffect&lt;/code&gt; - 自动收集依赖源，依赖源更新时重新执行自身&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;响应式依赖收集&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;首先先需要了解一下 Vue 3 的&lt;span&gt;响应式&lt;/span&gt;&lt;sup&gt;[1]&lt;/sup&gt; 是怎么工作的。我想很多文章都详细的讲过这个部分了，这里就简单带过一下。这里有个简化版的 &lt;code&gt;ref&lt;/code&gt; 的实现：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;const&lt;/span&gt; ref = &lt;span&gt;(&lt;span&gt;initialValue&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;br/&gt;  &lt;span&gt;let&lt;/span&gt; _value = initialValue&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; {&lt;br/&gt;    &lt;span&gt;get&lt;/span&gt; value() {&lt;br/&gt;      track(&lt;span&gt;this&lt;/span&gt;, &lt;span&gt;&#x27;value&#x27;&lt;/span&gt;) &lt;span&gt;// 收集依赖&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;return&lt;/span&gt; _value&lt;br/&gt;    },&lt;br/&gt;    &lt;span&gt;set&lt;/span&gt; value() {&lt;br/&gt;      _value = value&lt;br/&gt;      trigger(&lt;span&gt;this&lt;/span&gt;, &lt;span&gt;&#x27;value&#x27;&lt;/span&gt;) &lt;span&gt;// 触发依赖&lt;/span&gt;&lt;br/&gt;    }&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;访问数据时，&lt;code&gt;track&lt;/code&gt; 被呼叫并记录下访问了的字段。而当写入数据时，&lt;code&gt;trigger&lt;/code&gt; 被呼叫并触发之前所依赖了这个字段所绑定事件更新（即 &lt;code&gt;effect&lt;/code&gt; - &lt;code&gt;computed&lt;/code&gt;, &lt;code&gt;watch&lt;/code&gt;, &lt;code&gt;watchEffect&lt;/code&gt; 底层都是 &lt;code&gt;effect&lt;/code&gt;），他们会被记录在一个全局的 WeakMap 中，这里就不展开了，感兴趣可以去看源码。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;const&lt;/span&gt; counter = ref(&lt;span&gt;1&lt;/span&gt;)&lt;br/&gt;&lt;br/&gt;&lt;span&gt;console&lt;/span&gt;.log(counter.value) &lt;span&gt;// `track()` 被呼叫&lt;/span&gt;&lt;br/&gt;counter.value = &lt;span&gt;2&lt;/span&gt; &lt;span&gt;// `trigger()` 被呼叫&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当我们需要函数里的依赖时，只需要记录函数执行的过程中 &lt;code&gt;track()&lt;/code&gt;被呼叫的次数（和对应的对象与字段）即可。例如：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;const&lt;/span&gt; counter = ref(&lt;span&gt;1&lt;/span&gt;)&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;function&lt;/span&gt; &lt;span&gt;foo&lt;/span&gt;(&lt;span/&gt;) &lt;/span&gt;{&lt;br/&gt;  &lt;span&gt;console&lt;/span&gt;.log(counter.value)&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;function&lt;/span&gt; &lt;span&gt;collectDeps&lt;/span&gt;(&lt;span/&gt;) &lt;/span&gt;{&lt;br/&gt;  startTracking()&lt;br/&gt;  foo() &lt;span&gt;// 在这个过程中，counter 被收集&lt;/span&gt;&lt;br/&gt;  stopTracking()&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这样便可以知道 &lt;code&gt;foo&lt;/code&gt; 这个函数依赖了 &lt;code&gt;counter&lt;/code&gt;。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;Watch&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一个 generalised 的 &lt;code&gt;watch&lt;/code&gt; API 应该是这样的（其他类似直接接受 ref 或者 reactive 作为参数的其实都是糖）&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;watch(&lt;br/&gt;  &lt;span&gt;&lt;span&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; { &lt;span&gt;/* 依赖源收集函数 */&lt;/span&gt; },&lt;br/&gt;  &lt;span&gt;&lt;span&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; { &lt;span&gt;/* 依赖源改变时的回调函数 */&lt;/span&gt; }&lt;br/&gt;)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里的依赖源函数只会执行一次，回调函数会在每次依赖源改变的时候触发，但是并不对回调函数进行依赖收集。也就是说，依赖源和回调函数之间并不一定要有直接关系。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;WatchEffect&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;watchEffect&lt;/code&gt; 相当于将 &lt;code&gt;watch&lt;/code&gt; 的依赖源和回调函数合并，当任何你有用到的响应式依赖更新时，该回调函数便会重新执行。不同于 &lt;code&gt;watch&lt;/code&gt;，&lt;code&gt;watchEffect&lt;/code&gt; 的回调函数会被立即执行（即 &lt;code&gt;{ immediate: true }&lt;/code&gt;）&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;watchEffect(&lt;br/&gt;  &lt;span&gt;&lt;span&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; { &lt;span&gt;/* 依赖源同时是回调函数 */&lt;/span&gt; }&lt;br/&gt;)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以下两种用法在行为上基本等价&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;watchEffect(&lt;br/&gt;  &lt;span&gt;&lt;span&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; &lt;span&gt;console&lt;/span&gt;.log(counter.value)&lt;br/&gt;)&lt;br/&gt;&lt;br/&gt;watch(&lt;br/&gt;  &lt;span&gt;&lt;span&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; counter.value,&lt;br/&gt;  &lt;span&gt;&lt;span&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; &lt;span&gt;console&lt;/span&gt;.log(counter.value),&lt;br/&gt;  { immediate: &lt;span&gt;true&lt;/span&gt; }&lt;br/&gt;)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;与 &lt;code&gt;watch&lt;/code&gt; 不同的一点是，在 &lt;code&gt;watchEffect&lt;/code&gt; 中依赖源会被重复执行，动态新增加的依赖也会被收集，例如&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;const&lt;/span&gt; counter = ref(&lt;span&gt;0&lt;/span&gt;)&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; enabled = ref(&lt;span&gt;false&lt;/span&gt;)&lt;br/&gt;&lt;br/&gt;watchEffect(&lt;span&gt;&lt;span&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt; (enabled.value)&lt;br/&gt;    &lt;span&gt;console&lt;/span&gt;.log(counter.value)&lt;br/&gt;})&lt;br/&gt;&lt;br/&gt;&lt;span&gt;// (以下忽略 nextTick)&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;// watchEffect 会被立即执行，因为 “enabled“ 为 false, 此时仅收集到 “enabled“ 依赖&lt;/span&gt;&lt;br/&gt;counter.value += &lt;span&gt;1&lt;/span&gt; &lt;span&gt;// 无反应&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;enabled.value = &lt;span&gt;true&lt;/span&gt; &lt;span&gt;// Effect 触发，控制台出 &quot;1&quot;&lt;/span&gt;&lt;br/&gt;counter.value += &lt;span&gt;1&lt;/span&gt; &lt;span&gt;// “counter“ 被作为新的依赖被收集，控制台出 &quot;2&quot;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;enabled.value = &lt;span&gt;false&lt;/span&gt; &lt;span&gt;// 函数被重新执行，无输出&lt;/span&gt;&lt;br/&gt;counter.value += &lt;span&gt;1&lt;/span&gt; &lt;span&gt;// 函数被重新执行，无输出 (虽然 counter 已经没有用了，但是作为依赖还是会触发函数）&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;顺带一提，&lt;code&gt;[computed](https://www.zhihu.com/search?q=computed&amp;amp;search_source=Entity&amp;amp;hybrid_search_source=Entity&amp;amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A1916657458%7D &quot;computed&quot;)&lt;/code&gt; 其实类似一个带输出的同步版本的 &lt;code&gt;watchEffect&lt;/code&gt;。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;什么时候用什么？&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;推荐在大部分时候用 &lt;code&gt;watch&lt;/code&gt; 显式的指定依赖以避免不必要的重复触发，也避免在后续代码修改或重构时不小心引入新的依赖。&lt;code&gt;watchEffect&lt;/code&gt; 适用于一些逻辑相对简单，依赖源和逻辑强相关的场景（或者懒惰的场景 ）。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果对这个主题感兴趣的话，也可以参考我的&lt;span&gt;博文&lt;/span&gt;&lt;sup&gt;[2]&lt;/sup&gt;，教你如何手写 Watch (英文)&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;参考资料&lt;/span&gt;&lt;/h3&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;span&gt;[1] &lt;/span&gt;&lt;p&gt;响应式: &lt;span&gt;https://www.zhihu.com/search?q=%E5%93%8D%E5%BA%94%E5%BC%8F&amp;amp;search_source=Entity&amp;amp;hybrid_search_source=Entity&amp;amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A1916657458%7D&lt;/span&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[2] &lt;/span&gt;&lt;p&gt;博文: &lt;span&gt;https://antfu.me/posts/watch-with-reactivity&lt;/span&gt;&lt;/p&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>