<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>bcc1df8172995b2d04d8e3e5f62b74ad</guid>
<title>高并发下如何保证接口的幂等性？</title>
<link>https://toutiao.io/k/mjihi83</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzUxODkzNTQ3Nw==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/uL371281oDFEpxenPicr7Kh8c9P0I97yVWw9JfljjPy5gVBLDiaIrWkzAGHGib09Kib4TQtyw8jpLicW3yoyibMY8yMA/0?wx_fmt=png&quot; data-nickname=&quot;苏三说技术&quot; data-alias=&quot;&quot; data-signature=&quot;「苏三说技术」 维护者目前就职于某知名互联网公司，从事开发、架构和部分管理工作。实战经验丰富，对jdk、spring、springboot、springcloud、mybatis等开源框架源码有一定研究，欢迎关注，和我一起交流。&quot;/&gt;&lt;/section&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;前言&lt;br/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;接口幂等性&lt;/code&gt;问题，对于开发人员来说，是一个跟语言无关的公共问题。本文分享了一些解决这类问题非常实用的办法，绝大部分内容我在项目中实践过的，给有需要的小伙伴一个参考。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不知道你有没有遇到过这些场景：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;有时我们在填写某些&lt;code&gt;form表单&lt;/code&gt;时，保存按钮不小心快速点了两次，表中竟然产生了两条重复的数据，只是id不一样。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;我们在项目中为了解决&lt;code&gt;接口超时&lt;/code&gt;问题，通常会引入了&lt;code&gt;重试机制&lt;/code&gt;。第一次请求接口超时了，请求方没能及时获取返回结果（此时有可能已经成功了），为了避免返回错误的结果（这种情况不可能直接返回失败吧？），于是会对该请求重试几次，这样也会产生重复的数据。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;mq消费者在读取消息时，有时候会读取到&lt;code&gt;重复消息&lt;/code&gt;（至于什么原因这里先不说，有兴趣的小伙伴，可以找我私聊），如果处理不好，也会产生重复的数据。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;没错，这些都是幂等性问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;接口幂等性&lt;/code&gt;是指用户对于同一操作发起的一次请求或者多次请求的结果是一致的，不会因为多次点击而产生了副作用。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这类问题多发于接口的：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;insert&lt;/code&gt;操作，这种情况下多次请求，可能会产生重复数据。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;update&lt;/code&gt;操作，如果只是单纯的更新数据，比如：&lt;code&gt;update user set status=1 where id=1&lt;/code&gt;，是没有问题的。如果还有计算，比如：&lt;code&gt;update user set status=status+1 where id=1&lt;/code&gt;，这种情况下多次请求，可能会导致数据错误。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那么我们要如何保证接口幂等性？本文将会告诉你答案。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;1. insert前先select&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通常情况下，在保存数据的接口中，我们为了防止产生重复数据，一般会在&lt;code&gt;insert&lt;/code&gt;前，先根据&lt;code&gt;name&lt;/code&gt;或&lt;code&gt;code&lt;/code&gt;字段&lt;code&gt;select&lt;/code&gt;一下数据。如果该数据已存在，则执行&lt;code&gt;update&lt;/code&gt;操作，如果不存在，才执行  &lt;code&gt;insert&lt;/code&gt;操作。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;1.0972762645914398&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDEulLjl08cXVC1y0sFSlxNrFw4QIBGFicltUPsasY7lgUVEK7cVLS1GK3mibMW5Jcy4t1TvNmaBnGew/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;514&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;该方案可能是我们平时在防止产生重复数据时，使用最多的方案。但是该方案不适用于并发场景，在并发场景中，要配合其他方案一起使用，否则同样会产生重复数据。我在这里提一下，是为了避免大家踩坑。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2. 加悲观锁&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在支付场景中，用户A的账号余额有150元，想转出100元，正常情况下用户A的余额只剩50元。一般情况下，sql是这样的：&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;nginx&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attribute&quot;&gt;update&lt;/span&gt; user amount = amount-&lt;span class=&quot;code-snippet__number&quot;&gt;100&lt;/span&gt; where id=&lt;span class=&quot;code-snippet__number&quot;&gt;123&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果出现多次相同的请求，可能会导致用户A的余额变成负数。这种情况，用户A来可能要哭了。于此同时，系统开发人员可能也要哭了，因为这是很严重的系统bug。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为了解决这个问题，可以加悲观锁，将用户A的那行数据锁住，在同一时刻只允许一个请求获得锁，更新数据，其他的请求则等待。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通常情况下通过如下sql锁住单行数据：&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;select&lt;/span&gt; * &lt;span class=&quot;code-snippet__keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;code-snippet__number&quot;&gt;123&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;update&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;具体流程如下：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.9544554455445544&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDEulLjl08cXVC1y0sFSlxNrlFMScuviaupFRboxZnOVWkojRVNxya7e2a0BUvnU7cwcAw9jYMLvJXw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1010&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;具体步骤：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;多个请求同时根据id查询用户信息。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;判断余额是否不足100，如果余额不足，则直接返回余额不足。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果余额充足，则通过for update再次查询用户信息，并且尝试获取锁。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;只有第一个请求能获取到行锁，其余没有获取锁的请求，则等待下一次获取锁的机会。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;第一个请求获取到锁之后，判断余额是否不足100，如果余额足够，则进行update操作。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果余额不足，说明是重复请求，则直接返回成功。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;需要特别注意的是：如果使用的是mysql数据库，存储引擎必须用innodb，因为它才支持事务。此外，这里id字段一定要是主键或者唯一索引，不然会锁住整张表。&lt;/p&gt;&lt;/blockquote&gt;&lt;section&gt;&lt;span&gt;悲观锁需要在同一个事务操作过程中锁住一行数据，如果事务耗时比较长，会造成大量的请求等待，影响接口性能&lt;/span&gt;。&lt;/section&gt;&lt;section&gt;此外，每次请求接口很难保证都有相同的返回值，所以不适合幂等性设计场景，但是在防重场景中是可以的使用的。&lt;/section&gt;&lt;section&gt;&lt;span&gt;在这里顺便说一下，&lt;/span&gt;&lt;code&gt;防重设计&lt;/code&gt;&lt;span&gt; 和 &lt;/span&gt;&lt;code&gt;幂等设计&lt;/code&gt;&lt;span&gt;，其实是有区别的。&lt;/span&gt;&lt;span&gt;防重设计主要为了避免产生重复数据，对接口返回没有太多要求。&lt;/span&gt;&lt;span&gt;而幂等设计除了避免产生重复数据之外，还要求每次请求都返回一样的结果。&lt;/span&gt;&lt;/section&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;3. 加乐观锁&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;既然悲观锁有性能问题，为了提升接口性能，我们可以使用乐观锁。需要在表中增加一个&lt;code&gt;timestamp&lt;/code&gt;或者&lt;code&gt;version&lt;/code&gt;字段，这里以&lt;code&gt;version&lt;/code&gt;字段为例。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在更新数据之前先查询一下数据：&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;id&lt;/span&gt;,amount,&lt;span class=&quot;code-snippet__keyword&quot;&gt;version&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;code-snippet__number&quot;&gt;123&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果数据存在，假设查到的&lt;code&gt;version&lt;/code&gt;等于&lt;code&gt;1&lt;/code&gt;，再使用&lt;code&gt;id&lt;/code&gt;和&lt;code&gt;version&lt;/code&gt;字段作为查询条件更新数据：&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;nginx&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attribute&quot;&gt;update&lt;/span&gt; user set amount=amount+&lt;span class=&quot;code-snippet__number&quot;&gt;100&lt;/span&gt;,version=version+&lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;where id=&lt;span class=&quot;code-snippet__number&quot;&gt;123&lt;/span&gt; and version=&lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;更新数据的同时&lt;code&gt;version+1&lt;/code&gt;，然后判断本次&lt;code&gt;update&lt;/code&gt;操作的影响行数，如果大于0，则说明本次更新成功，如果等于0，则说明本次更新没有让数据变更。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由于第一次请求&lt;code&gt;version&lt;/code&gt;等于&lt;code&gt;1&lt;/code&gt;是可以成功的，操作成功后&lt;code&gt;version&lt;/code&gt;变成&lt;code&gt;2&lt;/code&gt;了。这时如果并发的请求过来，再执行相同的sql：&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;nginx&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;span class=&quot;code-snippet__attribute&quot;&gt;update&lt;/span&gt; user set amount=amount+&lt;span class=&quot;code-snippet__number&quot;&gt;100&lt;/span&gt;,version=version+&lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;where id=&lt;span class=&quot;code-snippet__number&quot;&gt;123&lt;/span&gt; and version=&lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;该&lt;code&gt;update&lt;/code&gt;操作不会真正更新数据，最终sql的执行结果影响行数是&lt;code&gt;0&lt;/code&gt;，因为&lt;code&gt;version&lt;/code&gt;已经变成&lt;code&gt;2&lt;/code&gt;了，&lt;code&gt;where&lt;/code&gt;中的&lt;code&gt;version=1&lt;/code&gt;肯定无法满足条件。但为了保证接口幂等性，接口可以直接返回成功，因为&lt;code&gt;version&lt;/code&gt;值已经修改了，那么前面必定已经成功过一次，后面都是重复的请求。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;具体流程如下：&lt;img data-ratio=&quot;1.5942028985507246&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDEulLjl08cXVC1y0sFSlxNrVUKwejvF2k3OTVPD2JPAiaV5diaMl16ictoclcWwgcvJsMV8mibVOartVg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;552&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;具体步骤：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;先根据id查询用户信息，包含version字段&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;根据id和version字段值作为where条件的参数，更新用户信息，同时version+1&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;判断操作影响行数，如果影响1行，则说明是一次请求，可以做其他数据操作。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果影响0行，说明是重复请求，则直接返回成功。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;4. 加唯一索引&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;绝大数情况下，为了防止重复数据的产生，我们都会在表中加唯一索引，这是一个非常简单，并且有效的方案。&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;alter table &lt;span class=&quot;code-snippet__string&quot;&gt;`order`&lt;/span&gt; add UNIQUE KEY &lt;span class=&quot;code-snippet__string&quot;&gt;`un_code`&lt;/span&gt; (&lt;span class=&quot;code-snippet__string&quot;&gt;`code`&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;加了唯一索引之后，第一次请求数据可以插入成功。但后面的相同请求，插入数据时会报&lt;code&gt;Duplicate entry &#x27;002&#x27; for key &#x27;order.un_code&lt;/code&gt;异常，表示唯一索引有冲突。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;虽说抛异常对数据来说没有影响，不会造成错误数据。但是为了保证接口幂等性，我们需要对该异常进行捕获，然后返回成功。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果是&lt;code&gt;java&lt;/code&gt;程序需要捕获：&lt;code&gt;DuplicateKeyException&lt;/code&gt;异常，如果使用了&lt;code&gt;spring&lt;/code&gt;框架还需要捕获：&lt;code&gt;MySQLIntegrityConstraintViolationException&lt;/code&gt;异常。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;具体流程图如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;1.47766323024055&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDEulLjl08cXVC1y0sFSlxNrs24WBMr0ktqAewryz7neZsASO9B8Qseqb8ict8CyLyia8lzv2YlY5LQQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;582&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;具体步骤：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;用户通过浏览器发起请求，服务端收集数据。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;将该数据插入mysql&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;判断是否执行成功，如果成功，则操作其他数据（可能还有其他的业务逻辑）。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果执行失败，捕获唯一索引冲突异常，直接返回成功。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;5. 建防重表&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有时候表中并非所有的场景都不允许产生重复的数据，只有某些特定场景才不允许。这时候，直接在表中加唯一索引，显然是不太合适的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;针对这种情况，我们可以通过&lt;code&gt;建防重表&lt;/code&gt;来解决问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;该表可以只包含两个字段：&lt;code&gt;id&lt;/code&gt; 和 &lt;code&gt;唯一索引&lt;/code&gt;，唯一索引可以是多个字段比如：name、code等组合起来的唯一标识，例如：susan_0001。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;具体流程图如下：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;1.198952879581152&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDEulLjl08cXVC1y0sFSlxNrbAGE1PLlnV6ibnZcTeNeyic7bv6jewYbu1Tfo7KO99iciaZcbf5icgSPovA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;764&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;具体步骤：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;用户通过浏览器发起请求，服务端收集数据。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;将该数据插入mysql防重表&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;判断是否执行成功，如果成功，则做mysql其他的数据操作（可能还有其他的业务逻辑）。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果执行失败，捕获唯一索引冲突异常，直接返回成功。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;需要特别注意的是：防重表和业务表必须在同一个数据库中，并且操作要在同一个事务中。&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;6. 根据状态机&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;很多时候业务表是有状态的，比如订单表中有：1-下单、2-已支付、3-完成、4-撤销等状态。如果这些状态的值是有规律的，按照业务节点正好是从小到大，我们就能通过它来保证接口的幂等性。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;假如id=123的订单状态是&lt;code&gt;已支付&lt;/code&gt;，现在要变成&lt;code&gt;完成&lt;/code&gt;状态。&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;update&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;`order`&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;status&lt;/span&gt;=&lt;span class=&quot;code-snippet__number&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;code-snippet__number&quot;&gt;123&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;status&lt;/span&gt;=&lt;span class=&quot;code-snippet__number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;第一次请求时，该订单的状态是&lt;code&gt;已支付&lt;/code&gt;，值是&lt;code&gt;2&lt;/code&gt;，所以该&lt;code&gt;update&lt;/code&gt;语句可以正常更新数据，sql执行结果的影响行数是&lt;code&gt;1&lt;/code&gt;，订单状态变成了&lt;code&gt;3&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;后面有相同的请求过来，再执行相同的sql时，由于订单状态变成了&lt;code&gt;3&lt;/code&gt;，再用&lt;code&gt;status=2&lt;/code&gt;作为条件，无法查询出需要更新的数据，所以最终sql执行结果的影响行数是&lt;code&gt;0&lt;/code&gt;，即不会真正的更新数据。但为了保证接口幂等性，影响行数是&lt;code&gt;0&lt;/code&gt;时，接口也可以直接返回成功。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;具体流程图如下：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;1.5646551724137931&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDEulLjl08cXVC1y0sFSlxNrWHME47uFVibJDCibIPILsuFib5nq3batoka8m58tN42JdX4HgKSrKiaF9A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;464&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;具体步骤：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;用户通过浏览器发起请求，服务端收集数据。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;根据id和当前状态作为条件，更新成下一个状态&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;判断操作影响行数，如果影响了1行，说明当前操作成功，可以进行其他数据操作。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果影响了0行，说明是重复请求，直接返回成功。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;主要特别注意的是，该方案仅限于要更新的&lt;code&gt;表有状态字段&lt;/code&gt;，并且刚好要更新&lt;code&gt;状态字段&lt;/code&gt;的这种特殊情况，并非所有场景都适用。&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;7. 加分布式锁&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其实前面介绍过的&lt;code&gt;加唯一索引&lt;/code&gt;或者&lt;code&gt;加防重表&lt;/code&gt;，本质是使用了&lt;code&gt;数据库&lt;/code&gt;的&lt;code&gt;分布式锁&lt;/code&gt;，也属于分布式锁的一种。但由于&lt;code&gt;数据库分布式锁&lt;/code&gt;的性能不太好，我们可以改用：&lt;code&gt;redis&lt;/code&gt;或&lt;code&gt;zookeeper&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;鉴于现在很多公司分布式配置中心改用&lt;code&gt;apollo&lt;/code&gt;或&lt;code&gt;nacos&lt;/code&gt;，已经很少用&lt;code&gt;zookeeper&lt;/code&gt;了，我们以&lt;code&gt;redis&lt;/code&gt;为例介绍分布式锁。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;目前主要有三种方式实现redis的分布式锁：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;setNx命令&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;set命令&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Redission框架&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;每种方案各有利弊，具体实现细节我就不说了，有兴趣的朋友可以加我微信找我私聊。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;具体流程图如下：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;1.2676470588235293&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDEulLjl08cXVC1y0sFSlxNrkm3ibIJnLzKpwSdxcSPGh8lfuCCGLO2QVnYp2msIvLgoLuHsyOjHdWQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;680&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;具体步骤：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;用户通过浏览器发起请求，服务端会收集数据，并且生成订单号code作为唯一业务字段。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;使用redis的set命令，将该订单code设置到redis中，同时设置超时时间。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;判断是否设置成功，如果设置成功，说明是第一次请求，则进行数据操作。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果设置失败，说明是重复请求，则直接返回成功。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;需要特别注意的是：分布式锁一定要设置一个合理的过期时间，如果设置过短，无法有效的防止重复请求。如果设置过长，可能会浪费&lt;code&gt;redis&lt;/code&gt;的存储空间，需要根据实际业务情况而定。&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;8. 获取token&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;除了上述方案之外，还有最后一种使用&lt;code&gt;token&lt;/code&gt;的方案。该方案跟之前的所有方案都有点不一样，需要两次请求才能完成一次业务操作。&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;第一次请求获取&lt;code&gt;token&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;第二次请求带着这个&lt;code&gt;token&lt;/code&gt;，完成业务操作。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;具体流程图如下：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;第一步，先获取token。&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>03419fdfa92fe506caa5e87581e0d039</guid>
<title>Elasticsearch Head 插件使用小结</title>
<link>https://toutiao.io/k/itpgo7c</link>
<content:encoded>&lt;div&gt;&lt;div&gt;
  &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>b07b32d5593fc3efdc59846cd08db769</guid>
<title>阿里二面：用过 GC 日志可视化工具进行 JVM 调优吗？</title>
<link>https://toutiao.io/k/7qyo540</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;大家好，我是不才陈某~&lt;/span&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上周&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzU3MDAzNDg1MA==&amp;amp;mid=2247518914&amp;amp;idx=1&amp;amp;sn=b3fdfd78c32b15077ac67535ccc10a00&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;知识星球&lt;/a&gt;的小伙伴面了阿里，在二面中被问到GC日志分析，感觉回答的不是很好，过来找我复盘，大致听了他的回答，虽然回答出了部分，但是没抓到重点。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;GC日志分析算是JVM调优中比较难的部分，今天这篇文章就来聊聊如何利用JDK现有的命令并且借助可视化工具如何去分析GC日志。&lt;/p&gt;&lt;/section&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;JVM实践调优主要步骤&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;默认的策略是最普用，但不是最佳的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;第一步&lt;/span&gt;：监控分析GC日志&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;第二步&lt;/span&gt;：判断JVM问题：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;如果各项参数设置合理，系统没有超时日志出现，GC频率不高，GC耗时不高，那么没有必要进行GC优化;如果GC时间超过1-3秒，或者频繁GC，则必须优化。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;第三步&lt;/span&gt;：确定调优目标&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;第四步&lt;/span&gt;：调整参数&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;调优一般是从满足程序的内存使用需求开始，之后是时间延迟要求，最后才是吞吐量要求，要基于这个步骤来不断优化，每一个步骤都是进行下一步的基础，不可逆行之。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;第五步&lt;/span&gt;：对比调优前后差距&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;第六步&lt;/span&gt;：重复：1 、 2 、 3 、 4 、 5 步骤&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;第七步&lt;/span&gt;：应用JVM到应用服务器：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;找到最合适的参数，将这些参数应用到所有服务器，并进行后续跟踪。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以上，就是我们进行jvm调优得一些步骤了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那我们就从第一步开始喽！！！^_^&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;分析GC日志&lt;/span&gt;&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;初始参数设置&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;机器环境：&lt;/span&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;指标&lt;/th&gt;&lt;th&gt;参数&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;机器&lt;/td&gt;&lt;td&gt;CPU 12核，内存16GB&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;集群规模&lt;/td&gt;&lt;td&gt;单机&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;seqb_web版本&lt;/td&gt;&lt;td&gt;1.0&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;数据库&lt;/td&gt;&lt;td&gt;4核 16G&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Jvm调优典型参数设置;&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;-Xms堆内存的最小值：&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;默认情况下，当堆中可用内存小于40%时，堆内存会开始增加，一直增加到-Xmx的大小。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;-Xmx堆内存的最大值：&lt;/span&gt; 默认值是总内存/64（且小于1G）&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;默认情况下，当堆中可用内存大于70%时，堆内存会开始减少，一直减小到-Xms的大小；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;-Xmn新生代内存的最大值：&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;包括Eden区和两个Survivor区的总和&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;配置写法如：-Xmn1024k，-Xmn1024m，-Xmn1g&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ol start=&quot;7&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;-Xss每个线程的栈内存：&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;默认1M，一般来说是不需要改。线程栈越小意味着可以创建的线程数越多&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;整个堆的大小 = 年轻代大小 + 年老代大小，堆的大小不包含元空间大小，如果增大了年轻代，年老代相应就会减小，官方默认的配置为年老代大小/年轻代大小=2/1左右；关注公众号：码猿技术专栏，回复关键词 1111 获取阿里内部java性能调优手册&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;建议在开发测试环境可以用Xms和Xmx分别设置最小值最大值，但是在线上生产环境，&lt;span&gt;Xms和Xmx设置的值必须一样，防止抖动；&lt;/span&gt;&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;这里比较重要喔，一般我们都是将Xms和Xmx的值设置为一样的！！！&lt;/p&gt;&lt;/blockquote&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.9863945578231292&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/19cc2hfD2rD74nX01ONhAWdK2Hh8GrCYEeibg8RxVOF7GkJdibZmJdoxhfkvozkOCpBR7761PFXu6iaENmVibwglHQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;147&quot;/&gt;&lt;figcaption&gt;比较重要喔&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;JVM调优设置合大小堆内存空间，既不能太大，也不能太小。那么应该设置为多少呢？&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;默认的配置是否存在性能瓶颈。&lt;span&gt;关注公众号：&lt;/span&gt;&lt;span&gt;码猿技术专栏，回复关键词 1111 获取阿里内部java性能调优手册；&lt;/span&gt;如果想要确定JVM性能问题瓶颈，需要进一步分析&lt;span&gt;GC日志&lt;/span&gt;&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;-XX:+PrintGCDetails&lt;/span&gt; 开启GC日志创建更详细的GC日志 ，默认情况下，GC日志是关闭的&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;-XX:+PrintGCTimeStamps，-XX:+PrintGCDateStamps&lt;/span&gt; 开启GC时间提示&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;开启时间便于我们更精确地判断几次GC操作之间的时两个参数的区别&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;时间戳是相对于 0 （依据JVM启动的时间）的值，而日期戳（date stamp）是实际的日期字符串&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;由于日期戳需要进行格式化，所以它的效率可能会受轻微的影响，不过这种操作并不频繁，它造成的影响也很难被我们感知。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;-XX:+PrintHeapAtGC&lt;/span&gt; 打印堆的GC日志&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;-Xloggc:./logs/gc.log&lt;/span&gt; 指定GC日志路径&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里，我们是在window下面进行测试，idea配置如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5047862156987875&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/19cc2hfD2rD74nX01ONhAWdK2Hh8GrCYU32edOMYwAYuvaaCe6vkw8SZCWIM8mVGPdprj2rRQgk0C4V1IXLu9g/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1567&quot;/&gt;&lt;figcaption&gt;idea配置&lt;/figcaption&gt;&lt;/figure&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;-XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -XX:+PrintHeapAtGC -Xloggc:E:/logs/gc-default.log&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这样就会在e盘下logs文件夹下面，生成&lt;code&gt;gc-default.log&lt;/code&gt;日志&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7110481586402266&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/19cc2hfD2rD74nX01ONhAWdK2Hh8GrCY8Yic3Zsa6iavYPZj5LYJSQrKfegBI3bHkJWcu5fc8b1QGCKKUYc1zUDQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1059&quot;/&gt;&lt;figcaption&gt;gc-default.log&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;GC日志解读&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;Young GC 日志含义&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;2022&lt;/span&gt;-&lt;span&gt;08&lt;/span&gt;-&lt;span&gt;05&lt;/span&gt;T13:&lt;span&gt;45&lt;/span&gt;:&lt;span&gt;23.336&lt;/span&gt;+&lt;span&gt;0800&lt;/span&gt;: &lt;span&gt;4.866&lt;/span&gt;: [GC (Metadata GC Threshold) [PSYoungGen: &lt;span&gt;136353&lt;/span&gt;K-&amp;gt;&lt;span&gt;20975&lt;/span&gt;K(&lt;span&gt;405504&lt;/span&gt;K)] &lt;span&gt;160049&lt;/span&gt;K-&amp;gt;&lt;span&gt;48437&lt;/span&gt;K(&lt;span&gt;720384&lt;/span&gt;K), &lt;span&gt;0.0092260&lt;/span&gt; secs] [Times: user=&lt;span&gt;0.00&lt;/span&gt; sys=&lt;span&gt;0.02&lt;/span&gt;, real=&lt;span&gt;0.02&lt;/span&gt; secs] &lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里的内容，我们一个一个解析：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;2022&lt;/span&gt;-&lt;span&gt;08&lt;/span&gt;-&lt;span&gt;05&lt;/span&gt;T13:&lt;span&gt;45&lt;/span&gt;:&lt;span&gt;23.336&lt;/span&gt;+&lt;span&gt;0800&lt;/span&gt;: 本次GC发生时间&lt;br/&gt;&lt;span&gt;4.866&lt;/span&gt;: 举例启动应用的时间&lt;br/&gt;[GC【表示GC的类型，youngGC】 (Metadata GC Threshold) 元空间超阈值&lt;br/&gt;[PSYoungGen: &lt;span&gt;136353&lt;/span&gt;K-&amp;gt;&lt;span&gt;20975&lt;/span&gt;K(&lt;span&gt;405504&lt;/span&gt;K年轻代总空间)] &lt;span&gt;160049&lt;/span&gt;K-&amp;gt;&lt;span&gt;48437&lt;/span&gt;K(&lt;span&gt;720384&lt;/span&gt;K)整堆), &lt;span&gt;0.0092260&lt;/span&gt; secs本次垃圾回收耗时]&lt;br/&gt;[Times: user=&lt;span&gt;0.00&lt;/span&gt;本次GC消耗CPU的时间 sys=&lt;span&gt;0.02&lt;/span&gt;系统暂停时间, real=&lt;span&gt;0.02&lt;/span&gt; secs实际应用暂停时间]&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;这里的解析，应该很详细了吧，还有谁看不懂的呢？&lt;/p&gt;&lt;/blockquote&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.1411764705882352&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/19cc2hfD2rD74nX01ONhAWdK2Hh8GrCYwjVIhDXjibNyiceEibPxGHA0mGLWicrdYXtVNP1X8xN5Ev7aSxdMOTXPQg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;170&quot;/&gt;&lt;figcaption&gt;有谁看不懂&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;FullGC 日志含义&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;2022&lt;/span&gt;-&lt;span&gt;08&lt;/span&gt;-&lt;span&gt;05&lt;/span&gt;T20:&lt;span&gt;24&lt;/span&gt;:&lt;span&gt;47.815&lt;/span&gt;+&lt;span&gt;0800&lt;/span&gt;: &lt;span&gt;6.955&lt;/span&gt;: [&lt;span&gt;Full &lt;span&gt;GC&lt;/span&gt; &lt;span&gt;(Metadata GC Threshold)&lt;/span&gt; [PSYoungGen: 701K-&amp;gt;0&lt;span&gt;K&lt;/span&gt;&lt;span&gt;(&lt;span&gt;72704&lt;/span&gt;K)&lt;/span&gt;] [ParOldGen: 38678K-&amp;gt;35960&lt;span&gt;K&lt;/span&gt;&lt;span&gt;(&lt;span&gt;175104&lt;/span&gt;K)&lt;/span&gt;] 39380K-&amp;gt;35960&lt;span&gt;K&lt;/span&gt;&lt;span&gt;(&lt;span&gt;247808&lt;/span&gt;K)&lt;/span&gt;, [Metaspace: 56706K-&amp;gt;56706&lt;span&gt;K&lt;/span&gt;&lt;span&gt;(&lt;span&gt;1099776&lt;/span&gt;K)&lt;/span&gt;], 0.1921975 secs] [Times: user&lt;/span&gt;=&lt;span&gt;1.03&lt;/span&gt; sys=&lt;span&gt;0.00&lt;/span&gt;, real=&lt;span&gt;0.19&lt;/span&gt; secs] &lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里的内容，我们也是一个一个解析：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;2022&lt;/span&gt;-&lt;span&gt;08&lt;/span&gt;-&lt;span&gt;05&lt;/span&gt;T20:&lt;span&gt;24&lt;/span&gt;:&lt;span&gt;47.815&lt;/span&gt;+&lt;span&gt;0800&lt;/span&gt;:&lt;br/&gt;&lt;span&gt;6.955&lt;/span&gt;: 刚启动服务就Full GC【整堆回收！！】&lt;br/&gt;&lt;br/&gt;[&lt;span&gt;Full &lt;span&gt;GC&lt;/span&gt; &lt;span&gt;(Metadata GC Threshold)&lt;/span&gt; Metaspace空间超限！&lt;br/&gt;[PSYoungGen: 701K-&amp;gt;0&lt;span&gt;K&lt;/span&gt;&lt;span&gt;(&lt;span&gt;72704&lt;/span&gt;K)&lt;/span&gt;] 年轻代没有回收空间&lt;br/&gt;[ParOldGen: 38678K-&amp;gt;35960&lt;span&gt;K&lt;/span&gt;&lt;span&gt;(&lt;span&gt;175104&lt;/span&gt;K)&lt;/span&gt;] 39380K-&amp;gt;35960&lt;span&gt;K&lt;/span&gt;&lt;span&gt;(&lt;span&gt;247808&lt;/span&gt;K)&lt;/span&gt;, 老年代也没有到阈值，整堆更没有到阈值&lt;br/&gt;[Metaspace: 56706K-&amp;gt;56706&lt;span&gt;K&lt;/span&gt;&lt;span&gt;(&lt;span&gt;1099776&lt;/span&gt;K)&lt;/span&gt;], 0.1921975 secs]&lt;br/&gt;[Times: user&lt;/span&gt;=&lt;span&gt;1.03&lt;/span&gt;本次GC消耗CPU的时间 sys=&lt;span&gt;0.00&lt;/span&gt;系统暂停时间, real=&lt;span&gt;0.19&lt;/span&gt; secs实际应用暂停时间] &lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;看到这里，有些哥们就会说，这么看，也太恶心了吧，密密麻麻的日志，看着头疼！！！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那么接下来我们来学一个GC日志可视化工具&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;GC日志可视化分析&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;分析GC日志，就必须让GC日志输出到一个文件中，然后使用GC日志分析工具（&lt;span&gt;gceasy.io&lt;/span&gt;：&lt;code&gt;https://gceasy.io/&lt;/code&gt;) 进行分析&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.46510416666666665&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/19cc2hfD2rD74nX01ONhAWdK2Hh8GrCYv9jjupRxbiafjibCzulMmIjcwKfCzFXc3bxKeV8DZ2KHWM6X8MggdL9w/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1920&quot;/&gt;&lt;figcaption&gt;GC日志可视化分析&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里分析完之后，可以下载分析报告&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.26670910248249524&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/19cc2hfD2rD74nX01ONhAWdK2Hh8GrCYTGjvMqT59Z0NMzQiaEdSrpXmjvDtDL6eVHFT9yBLDt9ELN3P7Gxbu3g/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1571&quot;/&gt;&lt;figcaption&gt;下载分析报告&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;JVM内存占用情况&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.38052530429212045&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/19cc2hfD2rD74nX01ONhAWdK2Hh8GrCYnRp7RJRZ4VxVJjfEJiaaibWiciatt3OsghIm3SIsqt1wnHToluuHto7ITg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1561&quot;/&gt;&lt;figcaption&gt;JVM内存占用情况&lt;/figcaption&gt;&lt;/figure&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Generation【区域】&lt;/th&gt;&lt;th&gt;Allocated【最大值】&lt;/th&gt;&lt;th&gt;Peak【占用峰值】&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;Young Generation【年轻代】&lt;/td&gt;&lt;td&gt;74.5 mb&lt;/td&gt;&lt;td&gt;74.47 mb&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Old Generation【老年轻代】&lt;/td&gt;&lt;td&gt;171 mb&lt;/td&gt;&lt;td&gt;95.62 mb&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Meta Space【元空间】&lt;/td&gt;&lt;td&gt;1.05 gb&lt;/td&gt;&lt;td&gt;55.38 mb&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Young + Old + Meta space【整体】&lt;/td&gt;&lt;td&gt;1.3 gb&lt;/td&gt;&lt;td&gt;212.64 mb&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;关键性能指标&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4788273615635179&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/19cc2hfD2rD74nX01ONhAWdK2Hh8GrCYWDJQEyiaKMrlLe8RbpT82pMQQLCOwwyyIq7Oss3WicUPdICaj3NLibmSg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1535&quot;/&gt;&lt;figcaption&gt;关键性能指标&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1 、&lt;span&gt;吞吐量&lt;/span&gt;：百分比越高表明GC开销越低。这个指标反映了JVM的吞吐量。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2 、&lt;span&gt;GC 延迟&lt;/span&gt;：&lt;span&gt;Latency&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Avg Pause GC Time&lt;/code&gt;：&lt;span&gt;7.80 ms&lt;/span&gt; 平均GC暂停时间&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Max Pause GC Time&lt;/code&gt;：&lt;span&gt;190 ms&lt;/span&gt; 最大GC暂停时间&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;GC 可视化交互聚合结果&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.48152948801036943&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/19cc2hfD2rD74nX01ONhAWdK2Hh8GrCYoXuAcg8KM3Y3TIl4U2X0zJx2jK8EqlmiaCscIxQZRh5eicOickhAhLoqw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1543&quot;/&gt;&lt;figcaption&gt;可视化交互聚合结果&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由上图可以看到，发生了3次full gc&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;存在问题：一开始就发生了 3 次full gc , 很明显不太正常；&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;GC 统计&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6587755102040816&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/19cc2hfD2rD74nX01ONhAWdK2Hh8GrCYBDgk3sciazsSia7olyERiaGDUnbOmKKxIZWibXE0ibq5Yq9NX4ROZPRbdfw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1225&quot;/&gt;&lt;figcaption&gt;GC 统计&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;GC Statistics&lt;/span&gt;：GC统计&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由上图可以得到，发生gc的总次数，young gc，full gc的统计，gc 暂停时间统计。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;GC原因&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3652230122818358&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/19cc2hfD2rD74nX01ONhAWdK2Hh8GrCYdsCZD7IM039iahHlAibxQBibcDfmUmwScrnmEvhjITfsSLpP9MgxLKCbA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1547&quot;/&gt;&lt;figcaption&gt;GC原因&lt;/figcaption&gt;&lt;/figure&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;原因&lt;/th&gt;&lt;th&gt;次数&lt;/th&gt;&lt;th&gt;平均时间&lt;/th&gt;&lt;th&gt;最大时间&lt;/th&gt;&lt;th&gt;总耗时&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;Metadata GC Threshold&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;43.3 ms&lt;/td&gt;&lt;td&gt;190 ms&lt;/td&gt;&lt;td&gt;260 ms&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Allocation Failure&lt;/td&gt;&lt;td&gt;53&lt;/td&gt;&lt;td&gt;3.77 ms&lt;/td&gt;&lt;td&gt;10.0 ms&lt;/td&gt;&lt;td&gt;200 ms&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里对这些原因解析一下：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Metadata GC Threshold&lt;/span&gt;：元空间超阈值&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Allocation Failure&lt;/span&gt; ：年轻代空间不足&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里补充一个原因，本案例还没出现的：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Ergonomics&lt;/span&gt;：译文是“人体工程学”，GC中的Ergonomics含义是负责自动调解gc暂停时间和吞吐量之间平衡从而产生的GC。&lt;span&gt;关注公众号：&lt;/span&gt;&lt;span&gt;码猿技术专栏，回复关键词 1111 获取阿里内部java性能调优手册；&lt;/span&gt;目的是使得虚拟机性能更好的一种做法。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由此可见，通过可视化的工具，可以快速的帮我们分析GC的日志。我们得善于利用工具。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;因为gc的日志文件，内容太多，都是密密麻麻的数字，文本。看得实在是头疼。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有了&lt;span&gt;gc easy&lt;/span&gt;可视化工具，而且还是在线的，十分的方便。&lt;span&gt;GC日志分析是免费的&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由于jvm调优实践的分析，篇幅比较长，所以今天就先到这里，剩下的留着下次分享了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;来源：https://juejin.cn/post/7128377003224334373&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>eb1259915ce5721847a9035e648ad226</guid>
<title>一万字带你入门 Activiti 工作流，通俗易懂</title>
<link>https://toutiao.io/k/fdxklic</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content js_underline_content             autoTypeSetting24psection&amp;#10;            &quot; id=&quot;js_content&quot;&gt;&lt;section data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;strong&gt;&lt;span&gt;&lt;span/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;👇推荐大家关注一个公众号👇&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;mp-common-profile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-weui-theme=&quot;light&quot; data-id=&quot;MzIzNjM3MDEyMg==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/sz_mmbiz_png/gHvX5TiczgWlCsOPBib3qa34WKGOy72FcvqTvt9icWjB0223JqDtJtD25EmBcaFxlJJ8P2r6KEADI3KYw7H1zuMRg/0?wx_fmt=png&quot; data-nickname=&quot;顶级架构师&quot; data-alias=&quot;TopFramework&quot; data-signature=&quot;顶级架构师，专注分享架构技术干货，企业架构、系统架构、网站架构、大规模分布式架构、高可用架构等架构讨论，以及结合互联网技术的架构调整。欢迎有想法、乐于分享的架构师朋友们交流学习。&quot; data-from=&quot;0&quot; data-is_biz_ban=&quot;0&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;点击上方 &quot;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI5ODI5NDkxMw==&amp;amp;mid=2247490920&amp;amp;idx=2&amp;amp;sn=84fa3d94375cac784eeb24472f885020&amp;amp;chksm=eca95686dbdedf90db774b5e1b09caaffbb95e72513a579a5c37c16325ccde7e1d75f0a4e736&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;编程技术圈&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;编程技术圈&lt;/a&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&quot;关注, &lt;span&gt;星标或置顶一起成长&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;后台回复“&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;大礼包&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;”有惊喜礼包！&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;figure&gt;&lt;figure&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;每&lt;/strong&gt;&lt;strong&gt;日英文&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Sometime you just have to hold your head up high, blink away the tears and say good-bye. &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;有时候，我们只需高高地扬起头，甩掉泪水，跟过去说再见。&lt;/span&gt; &lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;每日掏心话&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;你一定得认识到自己想往哪个方向发展，然后一定要对准那个方向出发，要马上。你再也浪费不起多一秒的时间了，你浪费不起。&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/figure&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span&gt;责编：乐乐 | 来&lt;/span&gt;&lt;span&gt;自：&lt;span&gt;blog.csdn.net/Mr_97xu/article/details/112899079&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI5ODI5NDkxMw==&amp;amp;mid=2247489132&amp;amp;idx=1&amp;amp;sn=c15c4bf118abad5bea9afc287585f760&amp;amp;chksm=eca95d82dbded494d33755649ad9879e32a3fe8b287cb2ecadb173238aa4ac65df3b6cf16aa7&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;程序员小乐(ID:study_tech)第 918 次推文  图源：百度&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;编程技术圈(ID:study_tech)&lt;/a&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI5ODI5NDkxMw==&amp;amp;mid=2247489132&amp;amp;idx=1&amp;amp;sn=c15c4bf118abad5bea9afc287585f760&amp;amp;chksm=eca95d82dbded494d33755649ad9879e32a3fe8b287cb2ecadb173238aa4ac65df3b6cf16aa7&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;程序员小乐(ID:study_tech)第 918 次推文  图源：百度&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;第 1790&lt;/a&gt; &lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI5ODI5NDkxMw==&amp;amp;mid=2247489132&amp;amp;idx=1&amp;amp;sn=c15c4bf118abad5bea9afc287585f760&amp;amp;chksm=eca95d82dbded494d33755649ad9879e32a3fe8b287cb2ecadb173238aa4ac65df3b6cf16aa7&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;程序员小乐(ID:study_tech)第 918 次推文  图源：百度&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;期推文&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;figure&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;figure&gt;&lt;p&gt;&lt;span&gt;往日回顾：&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI5ODI5NDkxMw==&amp;amp;mid=2247627522&amp;amp;idx=1&amp;amp;sn=9f65677c9717af6159c265b000acfbb3&amp;amp;chksm=eca4b8ecdbd331fadbd789904572b3a0192239109aa1506504c2351939d957e54a3984f8eeb5&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;刘强东分享感染新冠经历！王石也发声&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;刘强东分享感染新冠经历！王石也发声&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;figure&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;figure&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;figure&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;figure&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;figure&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;figure&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;figure&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;figure&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;figure&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;figure&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;figure&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;figure&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;figure&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;figure&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;figure&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;figure&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;figure&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;figure&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>2313299882779e0152ff15cfdccc6d3e</guid>
<title>Solidity 非权威开发指南（4）： OpenGSN</title>
<link>https://toutiao.io/k/6mt8ad5</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;container wrapper post&quot;&gt;

&lt;div class=&quot;post-header&quot;&gt;
&lt;h1 class=&quot;title&quot;&gt;Solidity 非权威开发指南（4）： OpenGSN&lt;/h1&gt;
&lt;p class=&quot;meta&quot;&gt;胡键 Posted at — Dec 10, 2022
&lt;span class=&quot;meta&quot; id=&quot;busuanzi_container_page_pv&quot;&gt;阅读 &lt;span id=&quot;busuanzi_value_page_pv&quot;/&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;p class=&quot;share-component&quot; data-sites=&quot;qq,weibo,wechat,douban,twitter,facebook&quot; data-description=&quot;Share.js - 一键分享到微博，QQ空间，腾讯微博，人人，豆瓣&quot;/&gt;


&lt;div class=&quot;markdown&quot;&gt;
&lt;p&gt;OpenZepplin 虽然提供了支持元交易的工具类（metatx 目录下），但并未对元交易场景提供完整的支持，甚至在其 MinimalForwarder.sol 的源代码的注释中都建议采用别的框架。这个框架就是本文主题：&lt;a href=&quot;https://opengsn.org/&quot;&gt;OpenGSN&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;OpenGSN 是元交易规范 ERC2771 的参考实现，它要解决的核心问题就是：如何让以太坊的用户在不交 gas fee 的前提下完成交易。也就是其官网的宣传语：“ETHless transactions made possible.”。&lt;/p&gt;
&lt;h2 id=&quot;元交易&quot;&gt;元交易&lt;/h2&gt;
&lt;p&gt;一个简单的类比：元交易提供了一种代付服务。其中涉及三方：交易发起方、元交易服务和交易执行方。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在元交易服务和交易执行方之间，依旧遵循以太坊的规则：凡交易必有 gas fee。&lt;/li&gt;
&lt;li&gt;在交易发起方和元交易服务之间，如何结算和支付由元交易服务支付的 gas fee 则具体情况具体分析，但有一点可以肯定：绝对不是 gas fee 形式。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;基本架构&quot;&gt;基本架构&lt;/h2&gt;
&lt;p&gt;它的实现机制可从其官网的架构图了解：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./imgs/opengsn-arch.jpg&quot; alt=&quot;OpenGSN Architecture&quot;/&gt;&lt;/p&gt;
&lt;p&gt;关键组件:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Client：发送和签名交易，接收方为 relay server。注意，它俩之间一定不是通过 contract 完成交互，通常是通过 http 实现。为简化编程，OpenGSN 提供了 provider 包。&lt;/li&gt;
&lt;li&gt;Relay Server：交易转发和支付 gas fee。&lt;/li&gt;
&lt;li&gt;Paymaster：实现支付逻辑。&lt;/li&gt;
&lt;li&gt;Forwarder：验证元交易的签名，将交易转发到实际的接收者。&lt;/li&gt;
&lt;li&gt;Recipient Contract：执行实际交易，必须继承 ERC2771Recipient。&lt;/li&gt;
&lt;li&gt;RelayHub：整体流程的协调者。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;整个交互过程如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./imgs/opengsn-flow.png&quot; alt=&quot;OpenGSN Flow&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;实现步骤&quot;&gt;实现步骤&lt;/h2&gt;
&lt;h3 id=&quot;contract&quot;&gt;Contract&lt;/h3&gt;
&lt;p&gt;有两个关键 contract 需要实现：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;recipient，使 contract 支持 ERC2771：继承 ERC2771Recipient 。
&lt;ul&gt;
&lt;li&gt;主要功能是确定实际的交易发起人，而不是简单地只看 msg.sender。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;paymaster，实现支付逻辑： 继承 BasePaymaster，覆盖：
&lt;ul&gt;
&lt;li&gt;_preRelayedCall，交易前逻辑，实现是否愿意为此交易支付。&lt;/li&gt;
&lt;li&gt;_postRelayedCall，交易后逻辑，完成退款逻辑。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注意，上面的 recipient 不必是全新的合约，它也可以是现有合约。ERC2771Recipient 的一个特点就是：它会自动判断 recipient 接收到的交易：到底是来自直接调用，还是从 relay service 发起。这样，使得 recipent 可以无缝应用于两种场景：支付和代付 gas fee。&lt;/p&gt;
&lt;p&gt;在部署时，需在 recipient 构造函数中设置可信的 forwarder。&lt;/p&gt;
&lt;p&gt;同时，OpenGSN 提供了现有的 paymaster，在决定自行实现之前，先查看是否有满足需要的现成合约。&lt;/p&gt;
&lt;h3 id=&quot;client&quot;&gt;Client&lt;/h3&gt;
&lt;p&gt;在 dapp 中引入：@opengsn/provider。然后在其中设置：web3 provder 和 paymaster 地址。也可以设置 relay server ，但这是可选的。&lt;/p&gt;
&lt;p&gt;整个集成过程可以查看 OpenGSN 文档的&lt;a href=&quot;https://docs.opengsn.org/javascript-client/tutorial.html&quot;&gt;这个教程&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&quot;relay-server&quot;&gt;Relay Server&lt;/h3&gt;
&lt;p&gt;通常情况下，使用现成的 Relay Server 就行了，但对于特殊需要、想自立门户的，可以选择自建。这一点跟 WalletConnect 的 bridge server 类似。&lt;/p&gt;
&lt;p&gt;其过程可以从&lt;a href=&quot;https://docs.opengsn.org/relay-server/tutorial.html&quot;&gt;此文档&lt;/a&gt;查看。&lt;/p&gt;
&lt;h2 id=&quot;结语&quot;&gt;结语&lt;/h2&gt;
&lt;p&gt;本文对元交易框架 OpenGSN 提供了一个简要的整体介绍，目标是帮助开发者快速建立整体概念，降低上手的障碍。但要真正实际使用，还需自行阅读文档和研究代码。&lt;/p&gt;
&lt;p&gt;与 OpenZepplin 的性质不同，OpenGSN 框架对于一般的合约编写并非必不可少，但假若你打算使你的 contract 能支持更多场景，简化目标客户使用系统的摩擦，它是一个不错的选择。&lt;/p&gt;
&lt;p&gt;

&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>