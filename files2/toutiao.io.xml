<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>b894b22996b1c55e83a306f72982df3c</guid>
<title>这么设计服务的幂等性就对了</title>
<link>https://toutiao.io/k/odpb7yb</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content js_underline_content             autoTypeSetting24psection&amp;#10;            &quot; id=&quot;js_content&quot;&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span data-style=&quot;background-color: rgb(255, 255, 255); letter-spacing: 1px; color: rgb(0, 128, 255); outline: 0px; max-width: 100%; font-size: 14px; caret-color: red; visibility: visible; font-family: &amp;quot;Tahoma For Number&amp;quot;, &amp;quot;Chinese Quote&amp;quot;, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Segoe UI&amp;quot;, Roboto, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__37&quot;/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.425&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/I8SfHxT94hWzMcDiax89miaZV8v6OfSyvWa5NcByxuWBHPST0WLPquoUyVPd565Z5EAzEyvFGEtZz04ZVGUE1rJQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span data-style=&quot;background-color: rgb(255, 255, 255); letter-spacing: 1px; color: rgb(0, 128, 255); outline: 0px; max-width: 100%; font-size: 14px; caret-color: red; visibility: visible; font-family: &amp;quot;Tahoma For Number&amp;quot;, &amp;quot;Chinese Quote&amp;quot;, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Segoe UI&amp;quot;, Roboto, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__37&quot;&gt;对于任何有状态（涉及状态修改）的服务，在设计服务、编码时，都必须考虑幂等性。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;注：&lt;/span&gt;&lt;span&gt;无状态的（&lt;/span&gt;&lt;span&gt;如查询服务）服务，也要考虑幂等性。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-role=&quot;title&quot; data-tools=&quot;135编辑器&quot; data-id=&quot;119028&quot;&gt;&lt;section&gt;&lt;section data-darkmode-bgcolor-16678013048235=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)&quot;&gt;&lt;section data-darkmode-bgcolor-16678013048235=&quot;rgb(187, 191, 195)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)&quot;&gt;&lt;section hm_fix=&quot;218:327&quot; data-darkmode-bgcolor-16678013048235=&quot;rgb(187, 191, 195)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)&quot;&gt;&lt;section data-darkmode-bgcolor-16678013048235=&quot;rgb(187, 191, 195)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)&quot;&gt;&lt;section data-darkmode-bgcolor-16678013048235=&quot;rgb(187, 191, 195)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)&quot; data-darkmode-color-16678013048235=&quot;rgb(6, 84, 234)&quot; data-darkmode-original-color-16678013048235=&quot;#fff|rgb(6, 84, 234)&quot;&gt;&lt;strong data-darkmode-bgcolor-16678013048235=&quot;rgb(187, 191, 195)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)&quot; data-darkmode-color-16678013048235=&quot;rgb(6, 84, 234)&quot; data-darkmode-original-color-16678013048235=&quot;#fff|rgb(6, 84, 234)&quot;&gt;01&lt;/strong&gt;&lt;/section&gt;&lt;section data-width=&quot;100%&quot; data-darkmode-bgcolor-16678013048235=&quot;rgb(149, 208, 205)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)|rgb(176, 245, 242)&quot;&gt;&lt;br data-darkmode-bgcolor-16678013048235=&quot;rgb(149, 208, 205)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)|rgb(176, 245, 242)&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-darkmode-bgcolor-16678013048235=&quot;rgb(187, 191, 195)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)&quot; data-darkmode-color-16678013048235=&quot;rgb(6, 84, 234)&quot; data-darkmode-original-color-16678013048235=&quot;#fff|rgb(6, 84, 234)&quot;&gt;&lt;span&gt;&lt;strong&gt;设计原则&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section data-role=&quot;list&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;一个具有幂等性的服务，要求无论&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span data-style=&quot;background-color: rgb(255, 255, 255); letter-spacing: 1px; color: rgb(0, 128, 255); outline: 0px; max-width: 100%; font-size: 14px; caret-color: red; visibility: visible; font-family: &amp;quot;Tahoma For Number&amp;quot;, &amp;quot;Chinese Quote&amp;quot;, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Segoe UI&amp;quot;, Roboto, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__37&quot;&gt;重复请求&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;在多么极端的情况下发生，都要&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span data-style=&quot;background-color: rgb(255, 255, 255); letter-spacing: 1px; color: rgb(0, 128, 255); outline: 0px; max-width: 100%; font-size: 14px; caret-color: red; visibility: visible; font-family: &amp;quot;Tahoma For Number&amp;quot;, &amp;quot;Chinese Quote&amp;quot;, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Segoe UI&amp;quot;, Roboto, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__37&quot;&gt;表里如一&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;，此时必须满足：&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;对外&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：返回完全相同的结果&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;对内&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：自身状态不再发生任何改变&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;另，在实现层面：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span data-style=&quot;background-color: rgb(255, 255, 255); letter-spacing: 1px; color: rgb(0, 128, 255); outline: 0px; max-width: 100%; font-size: 14px; caret-color: red; visibility: visible; font-family: &amp;quot;Tahoma For Number&amp;quot;, &amp;quot;Chinese Quote&amp;quot;, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Segoe UI&amp;quot;, Roboto, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__37&quot;&gt;重复请求&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;是一个先决条件，我们认为&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span data-style=&quot;background-color: rgb(255, 255, 255); letter-spacing: 1px; color: rgb(0, 128, 255); outline: 0px; max-width: 100%; font-size: 14px; caret-color: red; visibility: visible; font-family: &amp;quot;Tahoma For Number&amp;quot;, &amp;quot;Chinese Quote&amp;quot;, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Segoe UI&amp;quot;, Roboto, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__37&quot;&gt;请求中的字段完全一样&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;才是重复请求。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;技术实现上，幂等设计必然要依赖&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span data-style=&quot;background-color: rgb(255, 255, 255); letter-spacing: 1px; color: rgb(0, 128, 255); outline: 0px; max-width: 100%; font-size: 14px; caret-color: red; visibility: visible; font-family: &amp;quot;Tahoma For Number&amp;quot;, &amp;quot;Chinese Quote&amp;quot;, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Segoe UI&amp;quot;, Roboto, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__37&quot;&gt;DB事务来进行锁控制&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;，此时牢记事务处理方式：一锁、二判、三更新。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;一定考虑所调用服务的幂等性，同时对幂等结果做处理。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;没有DB的应用在做幂等处理时需要&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span data-style=&quot;background-color: rgb(255, 255, 255); letter-spacing: 1px; color: rgb(0, 128, 255); outline: 0px; max-width: 100%; font-size: 14px; caret-color: red; visibility: visible; font-family: &amp;quot;Tahoma For Number&amp;quot;, &amp;quot;Chinese Quote&amp;quot;, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Segoe UI&amp;quot;, Roboto, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__37&quot;&gt;严格依赖&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;有DB应用的幂等服务。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section data-role=&quot;title&quot; data-tools=&quot;135编辑器&quot; data-id=&quot;119028&quot;&gt;&lt;section&gt;&lt;section data-darkmode-bgcolor-16678013048235=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)&quot;&gt;&lt;section data-darkmode-bgcolor-16678013048235=&quot;rgb(187, 191, 195)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)&quot;&gt;&lt;section hm_fix=&quot;218:327&quot; data-darkmode-bgcolor-16678013048235=&quot;rgb(187, 191, 195)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)&quot;&gt;&lt;section data-darkmode-bgcolor-16678013048235=&quot;rgb(187, 191, 195)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)&quot;&gt;&lt;section data-darkmode-bgcolor-16678013048235=&quot;rgb(187, 191, 195)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)&quot; data-darkmode-color-16678013048235=&quot;rgb(6, 84, 234)&quot; data-darkmode-original-color-16678013048235=&quot;#fff|rgb(6, 84, 234)&quot;&gt;&lt;strong data-darkmode-bgcolor-16678013048235=&quot;rgb(187, 191, 195)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)&quot; data-darkmode-color-16678013048235=&quot;rgb(6, 84, 234)&quot; data-darkmode-original-color-16678013048235=&quot;#fff|rgb(6, 84, 234)&quot;&gt;02&lt;/strong&gt;&lt;/section&gt;&lt;section data-width=&quot;100%&quot; data-darkmode-bgcolor-16678013048235=&quot;rgb(149, 208, 205)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)|rgb(176, 245, 242)&quot;&gt;&lt;br data-darkmode-bgcolor-16678013048235=&quot;rgb(149, 208, 205)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)|rgb(176, 245, 242)&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-darkmode-bgcolor-16678013048235=&quot;rgb(187, 191, 195)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)&quot; data-darkmode-color-16678013048235=&quot;rgb(6, 84, 234)&quot; data-darkmode-original-color-16678013048235=&quot;#fff|rgb(6, 84, 234)&quot;&gt;&lt;span&gt;&lt;strong&gt;一些例子&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;正例 ✅&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;某个支付接口，对于多次重复的支付调用，能够返回完全相同的结果（结果字段完全一样），&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span data-style=&quot;background-color: rgb(255, 255, 255); letter-spacing: 1px; color: rgb(0, 128, 255); outline: 0px; max-width: 100%; font-size: 14px; caret-color: red; visibility: visible; font-family: &amp;quot;Tahoma For Number&amp;quot;, &amp;quot;Chinese Quote&amp;quot;, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Segoe UI&amp;quot;, Roboto, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__37&quot;&gt;且内部状态不再改变&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;，我们就说该接口满足幂等性。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;反例 ❌&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;某个转账接口，对于多次重复的转账，真的将用的余额转出了多次，预期应该只转出一次。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;某个更新接口，对于多次重复更新，首次更新和之后的更新返回的结果有差异。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section data-role=&quot;list&quot;&gt;&lt;section data-role=&quot;list&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-role=&quot;title&quot; data-tools=&quot;135编辑器&quot; data-id=&quot;119028&quot;&gt;&lt;section&gt;&lt;section data-darkmode-bgcolor-16678013048235=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)&quot;&gt;&lt;section data-darkmode-bgcolor-16678013048235=&quot;rgb(187, 191, 195)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)&quot;&gt;&lt;section hm_fix=&quot;218:327&quot; data-darkmode-bgcolor-16678013048235=&quot;rgb(187, 191, 195)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)&quot;&gt;&lt;section data-darkmode-bgcolor-16678013048235=&quot;rgb(187, 191, 195)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)&quot;&gt;&lt;section data-darkmode-bgcolor-16678013048235=&quot;rgb(187, 191, 195)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)&quot; data-darkmode-color-16678013048235=&quot;rgb(6, 84, 234)&quot; data-darkmode-original-color-16678013048235=&quot;#fff|rgb(6, 84, 234)&quot;&gt;&lt;strong data-darkmode-bgcolor-16678013048235=&quot;rgb(187, 191, 195)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)&quot; data-darkmode-color-16678013048235=&quot;rgb(6, 84, 234)&quot; data-darkmode-original-color-16678013048235=&quot;#fff|rgb(6, 84, 234)&quot;&gt;03&lt;/strong&gt;&lt;/section&gt;&lt;section data-width=&quot;100%&quot; data-darkmode-bgcolor-16678013048235=&quot;rgb(149, 208, 205)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)|rgb(176, 245, 242)&quot;&gt;&lt;br data-darkmode-bgcolor-16678013048235=&quot;rgb(149, 208, 205)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)|rgb(176, 245, 242)&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-darkmode-bgcolor-16678013048235=&quot;rgb(187, 191, 195)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)&quot; data-darkmode-color-16678013048235=&quot;rgb(6, 84, 234)&quot; data-darkmode-original-color-16678013048235=&quot;#fff|rgb(6, 84, 234)&quot;&gt;&lt;span&gt;&lt;strong&gt;最佳实践&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;h2&gt;&lt;strong&gt;&lt;span&gt;case 1：以业务单据表做幂等&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.74296875&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/I8SfHxT94hWzMcDiax89miaZV8v6OfSyvWDCgBuJph1Or87mC5ZibAReHve3WBtULr0ibfly9P8dx42v94S0jdInKA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;说明：&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;对于幂等性的控制，一般在&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span data-style=&quot;background-color: rgb(255, 255, 255); letter-spacing: 1px; color: rgb(0, 128, 255); outline: 0px; max-width: 100%; font-size: 14px; caret-color: red; visibility: visible; font-family: &amp;quot;Tahoma For Number&amp;quot;, &amp;quot;Chinese Quote&amp;quot;, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Segoe UI&amp;quot;, Roboto, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__37&quot;&gt;事务中&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;进行，且一定要加锁处理&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;只有确认当前操作此前未执行，才可以执行操作（&lt;/span&gt;&lt;span&gt;第一次来&lt;/span&gt;&lt;span&gt;）&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;一旦发现操作在此前已经完成（&lt;/span&gt;&lt;span&gt;被幂等了&lt;/span&gt;&lt;span&gt;），则不能继续做操作，避免重复处理。此时应该检查请求和DB数据的一致性（幂等一致性校验），原则上所有的字段都应该一致，&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span data-style=&quot;background-color: rgb(255, 255, 255); letter-spacing: 1px; color: rgb(0, 128, 255); outline: 0px; max-width: 100%; font-size: 14px; caret-color: red; visibility: visible; font-family: &amp;quot;Tahoma For Number&amp;quot;, &amp;quot;Chinese Quote&amp;quot;, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Segoe UI&amp;quot;, Roboto, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__37&quot;&gt;至少要检验关键字段的一致性&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;（如单号，金额，用户等）。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;无论是“第一次来”还是“被幂等了”，最后返回的结果，&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span data-style=&quot;background-color: rgb(255, 255, 255); letter-spacing: 1px; color: rgb(0, 128, 255); outline: 0px; max-width: 100%; font-size: 14px; caret-color: red; visibility: visible; font-family: &amp;quot;Tahoma For Number&amp;quot;, &amp;quot;Chinese Quote&amp;quot;, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Segoe UI&amp;quot;, Roboto, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__37&quot;&gt;应该是完全相同的&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;对于调用方需要判断幂等场景，并作相应的处理。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;h2&gt;&lt;strong&gt;&lt;span&gt;case 2：以业务幂等表做幂等&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.99453125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/I8SfHxT94hWzMcDiax89miaZV8v6OfSyvWceAAEzfchB9Rf12l0zu39EQDRNurqtepzoR4jT6U2m8ricVzdYgmTGw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;说明：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section data-role=&quot;list&quot;&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section data-role=&quot;list&quot;&gt;&lt;section&gt;&lt;span&gt;首先，所有的操作都应该在事务中完成，并且严格按照：一锁二判三更新实施。&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section data-role=&quot;list&quot;&gt;&lt;section&gt;&lt;span&gt;try-insert是一种处理幂等的模式，通过数据库主键约束和java异常处理完成幂等判断。&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section data-role=&quot;list&quot;&gt;&lt;p&gt;&lt;span&gt;其他的步骤类似case1，这里不再赘述。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section data-role=&quot;list&quot;&gt;&lt;section&gt;&lt;span&gt;当然，不是所有的代码实现都和上述的情况相同，建议结合代码学习和实践。&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.21466666666666667&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/I8SfHxT94hWzMcDiax89miaZV8v6OfSyvWQItuwCJJcibu8fjuLEdMHafia55m30Vr4DiaRDLXv1DZZ3XTBzc4k2iauA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1500&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span data-style=&quot;background-color: rgb(255, 255, 255); letter-spacing: 1px; color: rgb(0, 128, 255); outline: 0px; max-width: 100%; font-size: 14px; caret-color: red; visibility: visible; font-family: &amp;quot;Tahoma For Number&amp;quot;, &amp;quot;Chinese Quote&amp;quot;, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Segoe UI&amp;quot;, Roboto, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__37&quot;&gt;case 1和 case 2的本质区别是什么？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;case1和case2的主要区别在于业务单据的UK是否与业务幂等规则一致。&lt;/span&gt;&lt;span&gt;直接用业务单做幂等，适合业务比较简单的情况，比如你就一个服务需要幂等。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span data-style=&quot;background-color: rgb(255, 255, 255); letter-spacing: 1px; color: rgb(0, 128, 255); outline: 0px; max-width: 100%; font-size: 14px; caret-color: red; visibility: visible; font-family: &amp;quot;Tahoma For Number&amp;quot;, &amp;quot;Chinese Quote&amp;quot;, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Segoe UI&amp;quot;, Roboto, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__37&quot;&gt;什么场景用case 1什么场景用case 2？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;为什么会有不一致的场景。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;我们遇到的情况是同一张流水表上承载了不同的产品，而不同产品的幂等规则不一致，如果UK全部加到通用流水表上，会对其产生侵入甚至产生互斥，而且UK多了会降低表的插入性能。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;其实不同场景就是把幂等服务和幂等表独立了出来。如果你的系统有多个服务都需要用幂等逻辑，那么这种方式的扩展性会好一点，便于后续的升级和修改。另外，在分库分表的情况下，case2中的幂等表其实还保存了业务单号，此时幂等表还承担了路由表的角色。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-role=&quot;title&quot; data-tools=&quot;135编辑器&quot; data-id=&quot;119028&quot;&gt;&lt;section&gt;&lt;section data-darkmode-bgcolor-16678013048235=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)&quot;&gt;&lt;section data-darkmode-bgcolor-16678013048235=&quot;rgb(187, 191, 195)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)&quot;&gt;&lt;section hm_fix=&quot;218:327&quot; data-darkmode-bgcolor-16678013048235=&quot;rgb(187, 191, 195)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)&quot;&gt;&lt;section data-darkmode-bgcolor-16678013048235=&quot;rgb(187, 191, 195)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)&quot;&gt;&lt;section data-darkmode-bgcolor-16678013048235=&quot;rgb(187, 191, 195)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)&quot; data-darkmode-color-16678013048235=&quot;rgb(6, 84, 234)&quot; data-darkmode-original-color-16678013048235=&quot;#fff|rgb(6, 84, 234)&quot;&gt;&lt;strong data-darkmode-bgcolor-16678013048235=&quot;rgb(187, 191, 195)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)&quot; data-darkmode-color-16678013048235=&quot;rgb(6, 84, 234)&quot; data-darkmode-original-color-16678013048235=&quot;#fff|rgb(6, 84, 234)&quot;&gt;04&lt;/strong&gt;&lt;/section&gt;&lt;section data-width=&quot;100%&quot; data-darkmode-bgcolor-16678013048235=&quot;rgb(149, 208, 205)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)|rgb(176, 245, 242)&quot;&gt;&lt;br data-darkmode-bgcolor-16678013048235=&quot;rgb(149, 208, 205)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)|rgb(176, 245, 242)&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-darkmode-bgcolor-16678013048235=&quot;rgb(187, 191, 195)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)&quot; data-darkmode-color-16678013048235=&quot;rgb(6, 84, 234)&quot; data-darkmode-original-color-16678013048235=&quot;#fff|rgb(6, 84, 234)&quot;&gt;&lt;strong&gt;举一反三&lt;/strong&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;由同步调用的幂等性，可以引申出：&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;DB幂等键的设计（唯一索引的设计）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;消息发送和接收的幂等性处理&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;定时任务的幂等性处理&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;超时任务的幂等性处理&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;全局幂等表的接入和使用&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;分布式事务的幂等处理&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section data-role=&quot;title&quot; data-tools=&quot;135编辑器&quot; data-id=&quot;119028&quot;&gt;&lt;section&gt;&lt;section data-darkmode-bgcolor-16678013048235=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)&quot;&gt;&lt;section data-darkmode-bgcolor-16678013048235=&quot;rgb(187, 191, 195)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)&quot;&gt;&lt;section hm_fix=&quot;218:327&quot; data-darkmode-bgcolor-16678013048235=&quot;rgb(187, 191, 195)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)&quot;&gt;&lt;section data-darkmode-bgcolor-16678013048235=&quot;rgb(187, 191, 195)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)&quot;&gt;&lt;section data-darkmode-bgcolor-16678013048235=&quot;rgb(187, 191, 195)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)&quot; data-darkmode-color-16678013048235=&quot;rgb(6, 84, 234)&quot; data-darkmode-original-color-16678013048235=&quot;#fff|rgb(6, 84, 234)&quot;&gt;&lt;strong data-darkmode-bgcolor-16678013048235=&quot;rgb(187, 191, 195)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)&quot; data-darkmode-color-16678013048235=&quot;rgb(6, 84, 234)&quot; data-darkmode-original-color-16678013048235=&quot;#fff|rgb(6, 84, 234)&quot;&gt;05&lt;/strong&gt;&lt;/section&gt;&lt;section data-width=&quot;100%&quot; data-darkmode-bgcolor-16678013048235=&quot;rgb(149, 208, 205)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)|rgb(176, 245, 242)&quot;&gt;&lt;br data-darkmode-bgcolor-16678013048235=&quot;rgb(149, 208, 205)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)|rgb(176, 245, 242)&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-darkmode-bgcolor-16678013048235=&quot;rgb(187, 191, 195)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)&quot; data-darkmode-color-16678013048235=&quot;rgb(6, 84, 234)&quot; data-darkmode-original-color-16678013048235=&quot;#fff|rgb(6, 84, 234)&quot;&gt;&lt;span&gt;&lt;strong&gt;Notes：幂等处理如何做&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;可以&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span data-style=&quot;background-color: rgb(255, 255, 255); letter-spacing: 1px; color: rgb(0, 128, 255); outline: 0px; max-width: 100%; font-size: 14px; caret-color: red; visibility: visible; font-family: &amp;quot;Tahoma For Number&amp;quot;, &amp;quot;Chinese Quote&amp;quot;, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Segoe UI&amp;quot;, Roboto, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__37&quot;&gt;从幂等处理对象操作类型进行分类&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;幂等表也存在一些弊端，就是引入额外的DB操作，以及后续的数据订正和迁移都要比直接用业务表做幂等复杂。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;section data-role=&quot;title&quot; data-tools=&quot;135编辑器&quot; data-id=&quot;119028&quot;&gt;&lt;section&gt;&lt;section data-darkmode-bgcolor-16678013048235=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)&quot;&gt;&lt;section data-darkmode-bgcolor-16678013048235=&quot;rgb(187, 191, 195)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)&quot;&gt;&lt;section hm_fix=&quot;218:327&quot; data-darkmode-bgcolor-16678013048235=&quot;rgb(187, 191, 195)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)&quot;&gt;&lt;section data-darkmode-bgcolor-16678013048235=&quot;rgb(187, 191, 195)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)&quot;&gt;&lt;section data-darkmode-bgcolor-16678013048235=&quot;rgb(187, 191, 195)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)&quot; data-darkmode-color-16678013048235=&quot;rgb(6, 84, 234)&quot; data-darkmode-original-color-16678013048235=&quot;#fff|rgb(6, 84, 234)&quot;&gt;&lt;strong data-darkmode-bgcolor-16678013048235=&quot;rgb(187, 191, 195)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)&quot; data-darkmode-color-16678013048235=&quot;rgb(6, 84, 234)&quot; data-darkmode-original-color-16678013048235=&quot;#fff|rgb(6, 84, 234)&quot;&gt;06&lt;/strong&gt;&lt;/section&gt;&lt;section data-width=&quot;100%&quot; data-darkmode-bgcolor-16678013048235=&quot;rgb(149, 208, 205)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)|rgb(176, 245, 242)&quot;&gt;&lt;br data-darkmode-bgcolor-16678013048235=&quot;rgb(149, 208, 205)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)|rgb(176, 245, 242)&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-darkmode-bgcolor-16678013048235=&quot;rgb(187, 191, 195)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(255, 255, 255)|rgb(243, 248, 254)&quot; data-darkmode-color-16678013048235=&quot;rgb(6, 84, 234)&quot; data-darkmode-original-color-16678013048235=&quot;#fff|rgb(6, 84, 234)&quot;&gt;&lt;span&gt;&lt;strong&gt;总结&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;总之，对于幂等设计，只要记住本文的第一句话就好：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span data-style=&quot;background-color: rgb(255, 255, 255); letter-spacing: 1px; color: rgb(0, 128, 255); outline: 0px; max-width: 100%; font-size: 14px; caret-color: red; visibility: visible; font-family: &amp;quot;Tahoma For Number&amp;quot;, &amp;quot;Chinese Quote&amp;quot;, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Segoe UI&amp;quot;, Roboto, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__37&quot;&gt;无论调用方还是服务方，对于任何有状态（涉及状态修改）的服务，&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span data-style=&quot;background-color: rgb(255, 255, 255); letter-spacing: 1px; color: rgb(0, 128, 255); outline: 0px; max-width: 100%; font-size: 14px; caret-color: red; visibility: visible; font-family: &amp;quot;Tahoma For Number&amp;quot;, &amp;quot;Chinese Quote&amp;quot;, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Segoe UI&amp;quot;, Roboto, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__37&quot;&gt;在设计服务、编码时，都必须考虑幂等性。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;outer&quot; label=&quot;edit by 135editor&quot;&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;section data-darkmode-bgcolor-16575230563660=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16575230563660=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16575230563660=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16575230563660=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16587294727069=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16587294727069=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16587294727069=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16587294727069=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16593397383442=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16593397383442=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16593397383442=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16593397383442=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16599445342001=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16599445342001=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16599445342001=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16599445342001=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16605471479291=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16605471479291=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16605471479291=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16605471479291=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16665918596777=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16665918596777=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16665918596777=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16665918596777=&quot;#fff|rgb(34, 34, 34)&quot; data-style=&quot;margin-bottom: 0em; outline: 0px; max-width: 100%; box-sizing: border-box; color: rgb(34, 34, 34); letter-spacing: 0.544px; white-space: normal; caret-color: rgb(34, 34, 34); text-size-adjust: inherit; background-color: rgb(255, 255, 255); font-size: 16px; font-family: system-ui, -apple-system, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; overflow-wrap: break-word !important;&quot;&gt;&lt;section data-darkmode-bgcolor-16575230563660=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16575230563660=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16575230563660=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16575230563660=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16587294727069=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16587294727069=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16587294727069=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16587294727069=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16593397383442=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16593397383442=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16593397383442=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16593397383442=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16599445342001=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16599445342001=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16599445342001=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16599445342001=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16605471479291=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16605471479291=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16605471479291=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16605471479291=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16665918596777=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16665918596777=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16665918596777=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16665918596777=&quot;#fff|rgb(34, 34, 34)&quot;&gt;&lt;section data-darkmode-bgcolor-16575230563660=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16575230563660=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16575230563660=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16575230563660=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16587294727069=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16587294727069=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16587294727069=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16587294727069=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16593397383442=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16593397383442=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16593397383442=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16593397383442=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16599445342001=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16599445342001=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16599445342001=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16599445342001=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16605471479291=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16605471479291=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16605471479291=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16605471479291=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16665918596777=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16665918596777=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16665918596777=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16665918596777=&quot;#fff|rgb(34, 34, 34)&quot;&gt;&lt;section data-darkmode-bgcolor-16575230563660=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16575230563660=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16575230563660=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16575230563660=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16587294727069=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16587294727069=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16587294727069=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16587294727069=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16593397383442=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16593397383442=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16593397383442=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16593397383442=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16599445342001=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16599445342001=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16599445342001=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16599445342001=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16605471479291=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16605471479291=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16605471479291=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16605471479291=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16665918596777=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16665918596777=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16665918596777=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16665918596777=&quot;#fff|rgb(34, 34, 34)&quot;&gt;&lt;section data-darkmode-bgcolor-16575230563660=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16575230563660=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16575230563660=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16575230563660=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16587294727069=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16587294727069=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16587294727069=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16587294727069=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16593397383442=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16593397383442=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16593397383442=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16593397383442=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16599445342001=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16599445342001=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16599445342001=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16599445342001=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16605471479291=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16605471479291=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16605471479291=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16605471479291=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16665918596777=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16665918596777=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16665918596777=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16665918596777=&quot;#fff|rgb(34, 34, 34)&quot;&gt;&lt;section data-darkmode-bgcolor-16518176071663=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16518176071663=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-bgcolor-16526830592083=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16526830592083=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16526830592083=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16526830592083=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16532902304850=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16532902304850=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16532902304850=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16532902304850=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16538961289579=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16538961289579=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16538961289579=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16538961289579=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16544970019867=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16544970019867=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16544970019867=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16544970019867=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16569143641019=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16569143641019=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16569143641019=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16569143641019=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16575230563660=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16575230563660=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16575230563660=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16575230563660=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16587294727069=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16587294727069=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16587294727069=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16587294727069=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16593397383442=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16593397383442=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16593397383442=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16593397383442=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16599445342001=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16599445342001=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16599445342001=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16599445342001=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16605471479291=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16605471479291=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16605471479291=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16605471479291=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16665918596777=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16665918596777=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16665918596777=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16665918596777=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16678013048235=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16678013048235=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16678013048235=&quot;#fff|rgb(25, 25, 25)&quot;&gt;&lt;section data-darkmode-bgcolor-16518176071663=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16518176071663=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-bgcolor-16526830592083=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16526830592083=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16526830592083=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16526830592083=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16532902304850=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16532902304850=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16532902304850=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16532902304850=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16538961289579=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16538961289579=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16538961289579=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16538961289579=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16544970019867=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16544970019867=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16544970019867=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16544970019867=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16569143641019=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16569143641019=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16569143641019=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16569143641019=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16575230563660=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16575230563660=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16575230563660=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16575230563660=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16587294727069=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16587294727069=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16587294727069=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16587294727069=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16593397383442=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16593397383442=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16593397383442=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16593397383442=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16599445342001=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16599445342001=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16599445342001=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16599445342001=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16605471479291=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16605471479291=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16605471479291=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16605471479291=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16665918596777=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16665918596777=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16665918596777=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16665918596777=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16678013048235=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16678013048235=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16678013048235=&quot;#fff|rgb(25, 25, 25)&quot;&gt;&lt;svg viewbox=&quot;0 0 1 1&quot; data-darkmode-bgcolor-16518176071663=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16518176071663=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-bgcolor-16526830592083=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16526830592083=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16526830592083=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16526830592083=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16532902304850=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16532902304850=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16532902304850=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16532902304850=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16538961289579=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16538961289579=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16538961289579=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16538961289579=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16544970019867=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16544970019867=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16544970019867=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16544970019867=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16569143641019=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16569143641019=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16569143641019=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16569143641019=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16575230563660=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16575230563660=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16575230563660=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16575230563660=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16587294727069=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16587294727069=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16587294727069=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16587294727069=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16593397383442=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16593397383442=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16593397383442=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16593397383442=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16599445342001=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16599445342001=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16599445342001=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16599445342001=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16605471479291=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16605471479291=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16605471479291=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16605471479291=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16665918596777=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16665918596777=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16665918596777=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16665918596777=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16678013048235=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16678013048235=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16678013048235=&quot;#fff|rgb(25, 25, 25)&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-darkmode-bgcolor-16575230563660=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16575230563660=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16575230563660=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16575230563660=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16587294727069=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16587294727069=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16587294727069=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16587294727069=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16593397383442=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16593397383442=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16593397383442=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16593397383442=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16599445342001=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16599445342001=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16599445342001=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16599445342001=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16605471479291=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16605471479291=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16605471479291=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16605471479291=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16665918596777=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16665918596777=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16665918596777=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16665918596777=&quot;#fff|rgb(34, 34, 34)&quot;&gt;&lt;section data-darkmode-bgcolor-16575230563660=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16575230563660=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16575230563660=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16575230563660=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16587294727069=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16587294727069=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16587294727069=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16587294727069=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16593397383442=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16593397383442=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16593397383442=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16593397383442=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16599445342001=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16599445342001=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16599445342001=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16599445342001=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16605471479291=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16605471479291=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16605471479291=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16605471479291=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16665918596777=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16665918596777=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16665918596777=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16665918596777=&quot;#fff|rgb(34, 34, 34)&quot;&gt;&lt;section data-darkmode-bgcolor-16575230563660=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16575230563660=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16575230563660=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16575230563660=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16587294727069=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16587294727069=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16587294727069=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16587294727069=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16593397383442=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16593397383442=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16593397383442=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16593397383442=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16599445342001=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16599445342001=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16599445342001=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16599445342001=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16605471479291=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16605471479291=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16605471479291=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16605471479291=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16665918596777=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16665918596777=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16665918596777=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16665918596777=&quot;#fff|rgb(34, 34, 34)&quot;&gt;&lt;section data-darkmode-bgcolor-16518176071663=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16518176071663=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-bgcolor-16526830592083=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16526830592083=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16526830592083=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16526830592083=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16532902304850=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16532902304850=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16532902304850=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16532902304850=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16538961289579=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16538961289579=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16538961289579=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16538961289579=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16544970019867=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16544970019867=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16544970019867=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16544970019867=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16569143641019=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16569143641019=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16569143641019=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16569143641019=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16575230563660=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16575230563660=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16575230563660=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16575230563660=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16587294727069=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16587294727069=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16587294727069=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16587294727069=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16593397383442=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16593397383442=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16593397383442=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16593397383442=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16599445342001=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16599445342001=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16599445342001=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16599445342001=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16605471479291=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16605471479291=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16605471479291=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16605471479291=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16665918596777=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16665918596777=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16665918596777=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16665918596777=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16678013048235=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16678013048235=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16678013048235=&quot;#fff|rgb(25, 25, 25)&quot;&gt;&lt;section data-darkmode-bgcolor-16518176071663=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16518176071663=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-bgcolor-16526830592083=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16526830592083=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16526830592083=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16526830592083=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16532902304850=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16532902304850=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16532902304850=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16532902304850=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16538961289579=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16538961289579=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16538961289579=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16538961289579=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16544970019867=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16544970019867=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16544970019867=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16544970019867=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16569143641019=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16569143641019=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16569143641019=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16569143641019=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16575230563660=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16575230563660=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16575230563660=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16575230563660=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16587294727069=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16587294727069=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16587294727069=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16587294727069=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16593397383442=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16593397383442=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16593397383442=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16593397383442=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16599445342001=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16599445342001=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16599445342001=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16599445342001=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16605471479291=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16605471479291=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16605471479291=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16605471479291=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16665918596777=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16665918596777=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16665918596777=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16665918596777=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16678013048235=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16678013048235=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16678013048235=&quot;#fff|rgb(25, 25, 25)&quot;&gt;&lt;section data-darkmode-bgcolor-16518176071663=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16518176071663=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-bgcolor-16526830592083=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16526830592083=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16526830592083=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16526830592083=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16532902304850=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16532902304850=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16532902304850=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16532902304850=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16538961289579=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16538961289579=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16538961289579=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16538961289579=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16544970019867=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16544970019867=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16544970019867=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16544970019867=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16569143641019=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16569143641019=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16569143641019=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16569143641019=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16575230563660=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16575230563660=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16575230563660=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16575230563660=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16587294727069=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16587294727069=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16587294727069=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16587294727069=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16593397383442=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16593397383442=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16593397383442=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16593397383442=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16599445342001=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16599445342001=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16599445342001=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16599445342001=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16605471479291=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16605471479291=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16605471479291=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16605471479291=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16665918596777=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16665918596777=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16665918596777=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16665918596777=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16678013048235=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16678013048235=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16678013048235=&quot;#fff|rgb(25, 25, 25)&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.1503267973856209&quot; data-type=&quot;gif&quot; data-w=&quot;306&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_gif/I8SfHxT94hVCpsg0j390w6mNUrLXEicv7IzQCSd37F6kibGnqCe8PGp0iazd8Eo5ichyjuJmC6cWx9KDAJLXpPglDg/640?wx_fmt=gif&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-darkmode-bgcolor-16575230563660=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16575230563660=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16575230563660=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16575230563660=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16587294727069=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16587294727069=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16587294727069=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16587294727069=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16593397383442=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16593397383442=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16593397383442=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16593397383442=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16599445342001=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16599445342001=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16599445342001=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16599445342001=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16605471479291=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16605471479291=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16605471479291=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16605471479291=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16665918596777=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16665918596777=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16665918596777=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16665918596777=&quot;#fff|rgb(34, 34, 34)&quot;&gt;&lt;section data-darkmode-bgcolor-16575230563660=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16575230563660=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16575230563660=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16575230563660=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16587294727069=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16587294727069=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16587294727069=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16587294727069=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16593397383442=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16593397383442=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16593397383442=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16593397383442=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16599445342001=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16599445342001=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16599445342001=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16599445342001=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16605471479291=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16605471479291=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16605471479291=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16605471479291=&quot;#fff|rgb(34, 34, 34)&quot; data-darkmode-bgcolor-16665918596777=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16665918596777=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16665918596777=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16665918596777=&quot;#fff|rgb(34, 34, 34)&quot;&gt;&lt;section data-darkmode-bgcolor-16518176071663=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16518176071663=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-bgcolor-16526830592083=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16526830592083=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16526830592083=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16526830592083=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16532902304850=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16532902304850=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16532902304850=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16532902304850=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16538961289579=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16538961289579=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16538961289579=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16538961289579=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16544970019867=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16544970019867=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16544970019867=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16544970019867=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16569143641019=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16569143641019=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16569143641019=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16569143641019=&quot;#fff|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16575230563660=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16575230563660=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16575230563660=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16575230563660=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16587294727069=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16587294727069=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16587294727069=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16587294727069=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16593397383442=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16593397383442=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16593397383442=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16593397383442=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16599445342001=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16599445342001=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16599445342001=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16599445342001=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16605471479291=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16605471479291=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16605471479291=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16605471479291=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16665918596777=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16665918596777=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16665918596777=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16665918596777=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16678013048235=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16678013048235=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16678013048235=&quot;#fff|rgb(25, 25, 25)&quot;&gt;&lt;br data-darkmode-bgcolor-16665918596777=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16665918596777=&quot;#fff|rgb(255, 255, 255)|rgb(109, 103, 255)&quot; data-darkmode-color-16665918596777=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16665918596777=&quot;#fff|rgb(34, 34, 34)|rgb(25, 25, 25)&quot; data-darkmode-bgcolor-16678013048235=&quot;rgb(109, 103, 255)&quot; data-darkmode-original-bgcolor-16678013048235=&quot;#fff|rgb(109, 103, 255)&quot; data-darkmode-color-16678013048235=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-color-16678013048235=&quot;#fff|rgb(25, 25, 25)&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-darkmode-bgcolor-16665918596777=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16665918596777=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16665918596777=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16665918596777=&quot;#fff|rgb(34, 34, 34)&quot; data-style=&quot;margin-top: 8px; margin-bottom: 0em; outline: 0px; max-width: 100%; color: rgb(34, 34, 34); letter-spacing: 0.544px; white-space: normal; text-align: left; caret-color: rgb(34, 34, 34); text-size-adjust: inherit; background-color: rgb(255, 255, 255); font-family: system-ui, -apple-system, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;&lt;p&gt;&lt;span&gt;更多代码设计内容：&lt;/span&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;87777&quot;&gt;&lt;section&gt;&lt;section hm_fix=&quot;296:436&quot;&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU3NzczMDI4Ng==&amp;amp;mid=2247485510&amp;amp;idx=1&amp;amp;sn=3e9a1ec9e472e8db0c6ffc63cca3b300&amp;amp;chksm=fd016bc7ca76e2d1daeeae07906f9d39aca7ed51aed65bbe4b19ce3bd70afcbc97b5865ed107&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;从0到1教你写好系分&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;&lt;span&gt;‍&lt;/span&gt;&lt;/a&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU3NzczMDI4Ng==&amp;amp;mid=2247485635&amp;amp;idx=1&amp;amp;sn=1eb844a012e3d68f9b08dcb3bd5d98d2&amp;amp;chksm=fd016b42ca76e2547ab662890e9b50d6ec64060103f62b888cdeaab41b2902ffa2b3f205ef45&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;如何通过代码重构让你的代码赏心悦目？&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;如何通过代码重构让你的代码赏心悦目？&lt;/a&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU3NzczMDI4Ng==&amp;amp;mid=2247485510&amp;amp;idx=1&amp;amp;sn=3e9a1ec9e472e8db0c6ffc63cca3b300&amp;amp;chksm=fd016bc7ca76e2d1daeeae07906f9d39aca7ed51aed65bbe4b19ce3bd70afcbc97b5865ed107&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;从0到1教你写好系分&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;从0到1教你写好系分&lt;/a&gt;&lt;/section&gt;&lt;section data-style=&quot;margin-top: 8px; margin-bottom: 8px; font-size: 14px; color: rgb(34, 34, 34); letter-spacing: 0.544px; outline: 0px; max-width: 100%; text-align: left; caret-color: rgb(34, 34, 34); text-size-adjust: inherit; line-height: 1.75em; font-family: system-ui, -apple-system, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__333&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU3NzczMDI4Ng==&amp;amp;mid=2247485349&amp;amp;idx=1&amp;amp;sn=bdaf46ea93e2e2b7a4647000d1567e9b&amp;amp;chksm=fd016424ca76ed32f319028608b952bfd7b1eeb65c43c19741d6e66c5c9d3cb94a5c93d523fa&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;设计模式实践&amp;amp;技巧大盘点：帮你打开思路，灵活变通各类应用场景&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;设计模式实践&amp;amp;技巧大盘点：帮你打开思路，灵活变通各类应用场景&lt;/a&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-style=&quot;margin-top: -3em; max-width: 100%; width: 0.38em; overflow: hidden; float: left; background-color: rgb(254, 254, 254);&quot; class=&quot;js_darkmode__335&quot;&gt;&lt;section data-style=&quot;max-width: 100%; height: 1em; width: 0.4em; background-color: rgb(79, 129, 189); overflow: hidden;&quot; class=&quot;js_darkmode__336&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-style=&quot;margin-top: 0.2em; max-width: 100%; height: 0.5em; width: 0.4em; opacity: 0.8; background-color: rgb(79, 129, 189); overflow: hidden; transform: skewY(-30deg);&quot; class=&quot;js_darkmode__337&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-style=&quot;margin-top: 0.2em; max-width: 100%; height: 0.5em; width: 0.4em; opacity: 0.5; background-color: rgb(79, 129, 189); overflow: hidden; transform: skewY(-30deg);&quot; class=&quot;js_darkmode__338&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-style=&quot;margin-top: 0.2em; max-width: 100%; height: 0.5em; width: 0.4em; opacity: 0.3; background-color: rgb(79, 129, 189); overflow: hidden; transform: skewY(-30deg);&quot; class=&quot;js_darkmode__339&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mp-common-profile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzU3NzczMDI4Ng==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/sz_mmbiz_png/I8SfHxT94hU6P7Y4EMhbdHr7WDSMZt9wjEZfR28HDTcOac5u4A8ibiaIR2Miad2cCILq1FCH6NHZesEoOXLeuBopA/0?wx_fmt=png&quot; data-nickname=&quot;蚂蚁研发效能&quot; data-alias=&quot;AntLinkE&quot; data-signature=&quot;蚂蚁集团研发效能部有业界领先的工程和学术造诣，致力于为蚂蚁和多家金融企业提供核电级的全生命周期研发产品。&quot; data-from=&quot;0&quot; data-is_biz_ban=&quot;0&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;mp-style-type data-value=&quot;3&quot;/&gt;&lt;/p&gt;&lt;/div&gt;

          
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>c66fa55fcbb3900570764cd648f010b5</guid>
<title>Java 注解与原理分析</title>
<link>https://toutiao.io/k/03rb4y1</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content js_underline_content             autoTypeSetting24psection&amp;#10;            &quot; id=&quot;js_content&quot;&gt;&lt;blockquote&gt;&lt;p&gt;使用的太多，被忽略的理所当然；&lt;/p&gt;&lt;/blockquote&gt;&lt;h1&gt;&lt;span&gt;一、注解基础&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;注解即标注与解析，在Java的代码工程中，注解的使用几乎是无处不在，甚至多到被忽视；&lt;/p&gt;&lt;p&gt;无论是在JDK源码或者框架组件，都在使用注解能力完成各种识别和解析动作；在对系统功能封装时，也会依赖注解能力简化各种逻辑的重复实现；&lt;/p&gt;&lt;p&gt;&lt;strong&gt;基础接口&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;在Annotation的源码注释中有说明：所有的注解类型都需要继承该公共接口，本质上看注解是接口，但是代码并没有显式声明继承关系，可以直接查看字节码文件；&lt;/p&gt;&lt;pre&gt;&lt;code&gt;-- &lt;span&gt;1&lt;/span&gt;、声明注解&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;@interface&lt;/span&gt; SystemLog {}&lt;br/&gt;&lt;br/&gt;-- &lt;span&gt;2&lt;/span&gt;、查看指令&lt;br/&gt;javap -v SystemLog&lt;span&gt;.&lt;span&gt;class&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;-- 3、打印结果&lt;br/&gt;&lt;span&gt;Compiled&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; &quot;&lt;span&gt;SystemLog&lt;/span&gt;.&lt;span&gt;java&lt;/span&gt;&quot;&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;interface&lt;/span&gt; &lt;span&gt;com&lt;/span&gt;.&lt;span&gt;base&lt;/span&gt;.&lt;span&gt;test&lt;/span&gt;.&lt;span&gt;SystemLog&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;java&lt;/span&gt;.&lt;span&gt;lang&lt;/span&gt;.&lt;span&gt;annotation&lt;/span&gt;.&lt;span&gt;Annotation&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;元注解&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;声明注解时使用，用来定义注解的作用目标，保留策略等；&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;@Documented&lt;/span&gt;&lt;br/&gt;&lt;span&gt;@Inherited&lt;/span&gt;&lt;br/&gt;&lt;span&gt;@Retention&lt;/span&gt;(RetentionPolicy.RUNTIME)&lt;br/&gt;&lt;span&gt;@Target&lt;/span&gt;(ElementType.METHOD)&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;@interface&lt;/span&gt; SystemLog { &lt;span&gt;String &lt;span&gt;model&lt;/span&gt; &lt;span&gt;()&lt;/span&gt; &lt;span&gt;default&lt;/span&gt; &quot;&quot; &lt;/span&gt;; }&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;Documented：是否被javadoc或类似工具记录在文档中；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Inherited：标识注解是否可以被子类继承；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Target：作用目标，在ElementType枚举中可以看到取值包括类、方法、属性等；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Retention：保留策略，比如编译阶段是否丢弃，运行时保留；&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;此处声明一个SystemLog注解，作用范围是在方法上，并且在运行时保留，该注解通常用在服务运行时，结合AOP切面编程实现方法的日志采集；&lt;/p&gt;&lt;h1&gt;&lt;span&gt;二、注解原理&lt;/span&gt;&lt;span/&gt;&lt;/h1&gt;&lt;p&gt;先来看一个简单的注解使用案例，再细致的分析其中原理，案例并不复杂，就是常见的标注与解析两个关键动作；&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;LogInfo&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;@SystemLog&lt;/span&gt;(model = &lt;span&gt;&quot;日志模块&quot;&lt;/span&gt;)&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;main&lt;/span&gt;&lt;span&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;// 生成代理文件&lt;/span&gt;&lt;br/&gt;        System.getProperties().put(&lt;span&gt;&quot;sun.misc.ProxyGenerator.saveGeneratedFiles&quot;&lt;/span&gt;, &lt;span&gt;&quot;true&quot;&lt;/span&gt;);&lt;br/&gt;        &lt;span&gt;// 反射机制&lt;/span&gt;&lt;br/&gt;        Method[] methods = LogInfo&lt;span&gt;.&lt;span&gt;class&lt;/span&gt;.&lt;span&gt;getMethods&lt;/span&gt;()&lt;/span&gt;;&lt;br/&gt;        &lt;span&gt;for&lt;/span&gt; (Method method:methods){&lt;br/&gt;            SystemLog systemLog = method.getAnnotation(SystemLog&lt;span&gt;.&lt;span&gt;class&lt;/span&gt;) &lt;/span&gt;;&lt;br/&gt;            &lt;span&gt;if&lt;/span&gt; (systemLog != &lt;span&gt;null&lt;/span&gt;){&lt;br/&gt;                &lt;span&gt;// 动态代理：com.sun.proxy.$Proxy2&lt;/span&gt;&lt;br/&gt;                System.out.println(systemLog.getClass().getName());&lt;br/&gt;                System.out.println(systemLog.model());&lt;br/&gt;            }&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这里涉及到两个核心概念：反射机制、动态代理；反射机制可以在程序运行时获取类的完整结构信息，代理模式给目标对象提供一个代理对象，由代理对象持有目标对象的引用；&lt;/p&gt;&lt;p&gt;案例中通过反射机制，在程序运行时进行注解的获取和解析，值得关注的是systemLog对象的类名，输出的是代理类信息；&lt;/p&gt;&lt;p&gt;案例执行完毕后，会在代码工程的目录下生成代理类，可以查看&lt;code&gt;$Proxy2&lt;/code&gt;文件；&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; $&lt;span&gt;Proxy2&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;Proxy&lt;/span&gt; &lt;span&gt;implements&lt;/span&gt; &lt;span&gt;SystemLog&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; String &lt;span&gt;model&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;throws&lt;/span&gt;  &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;try&lt;/span&gt; {&lt;br/&gt;            &lt;span&gt;return&lt;/span&gt; (String)&lt;span&gt;super&lt;/span&gt;.h.invoke(&lt;span&gt;this&lt;/span&gt;, m3, (Object[])&lt;span&gt;null&lt;/span&gt;);&lt;br/&gt;        } &lt;span&gt;catch&lt;/span&gt; (RuntimeException | Error var2) {&lt;br/&gt;            &lt;span&gt;throw&lt;/span&gt; var2;&lt;br/&gt;        } &lt;span&gt;catch&lt;/span&gt; (Throwable var3) {&lt;br/&gt;            &lt;span&gt;throw&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; UndeclaredThrowableException(var3);&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在对SystemLog解析的过程中，实际上是在使用注解的代理类，&lt;code&gt;$Proxy2&lt;/code&gt;继承了Proxy类并实现了SystemLog接口，并且重写了相关方法；有关反射和代理的逻辑，在之前的内容中有详说，此处不赘述；&lt;/p&gt;&lt;p&gt;值得一看是代理类中invoke方法调用，具体的处理逻辑在AnnotationInvocationHandler类的invoke方法中，会对注解原生方法和自定义方法做判断，并对原生方法提供实现；&lt;/p&gt;&lt;h1&gt;&lt;span&gt;三、常用注解&lt;/span&gt;&lt;span/&gt;&lt;/h1&gt;&lt;h2&gt;&lt;span&gt;1、JDK注解&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p&gt;在JDK中有多个注解是经常使用的，例如Override、Deprecated、SuppressWarnings等；&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;Override：判断方法是否为重写方法；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Deprecated：标记过时的API，继续使用会警告；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;FunctionalInterface：检验是否为函数式接口；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;SuppressWarnings：代码的警告会静默处理；&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;这里注意FunctionalInterface注解，从1.8开始引入，检验是否为函数式接口，即接口只能有一个抽象方法，否则编译报错；&lt;/p&gt;&lt;h2&gt;&lt;span&gt;2、Lombok注解&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p&gt;在具体的看Lombok组件之前，需要先了解一个概念：代码编译；在open-jdk的描述文档中大致分为三个核心阶段；&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.19609375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uUIibyNXbAvDF4KFjn0ZHMYibiccxkKc7GpBp33Sj0lN42AO5EvZPqIgVG46JicOYUJTnPBuV1W1KxvL7gWPvZ6icVw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;第一步：读取命令行上指定的所有源文件，解析为语法树，进行符号表填充；&lt;/p&gt;&lt;p&gt;第二步：调用注解处理器，如果处理器生成任何新的源文件或类文件，编译会重新启动；&lt;/p&gt;&lt;p&gt;第三步：分析器创建的语法树被分析并转换为类文件；&lt;/p&gt;&lt;p&gt;更多细节说明可以参考openjdk文档中Compiler模块的内容，下面再回到Lombok组件上；&lt;/p&gt;&lt;p&gt;Lombok组件在代码工程中的使用非常频繁，通过注解的方式极大的简化Java中Bean对象的编写，提高了效率并且让源码显得简洁；&lt;/p&gt;&lt;p&gt;这里用一段简单的代码演示其效果，在IdKey的类中通过三个常用的Lombok注解，替代了类中很多基础方法的显式生成，查看编译后的文件实际是存在相关方法的；&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;@Data&lt;/span&gt;&lt;br/&gt;&lt;span&gt;@AllArgsConstructor&lt;/span&gt;&lt;br/&gt;&lt;span&gt;@NoArgsConstructor&lt;/span&gt;&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;IdKey&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; Integer id ;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; String key ;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;main&lt;/span&gt;&lt;span&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        IdKey idKey01 = &lt;span&gt;new&lt;/span&gt; IdKey(&lt;span&gt;1&lt;/span&gt;,&lt;span&gt;&quot;cicada&quot;&lt;/span&gt;) ;&lt;br/&gt;        System.out.println(idKey01);&lt;br/&gt;        idKey01.setId(&lt;span&gt;2&lt;/span&gt;);&lt;br/&gt;        idKey01.setKey(&lt;span&gt;&quot;smile&quot;&lt;/span&gt;);&lt;br/&gt;        System.out.println(idKey01);&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这里需要了解JDK中注解处理器的相关源码，AbstractProcessor作为超类，编译器在编译时会去检查该类的子类，子类中最核心的是process方法；&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.19609375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uUIibyNXbAvDF4KFjn0ZHMYibiccxkKc7GpJwEqrZP2cSDyxWK1sWtQLL8k2bxdcD1aTwial86OuEmjiad79icEsiaAsg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;-- &lt;span&gt;1&lt;/span&gt;、Lombok处理器&lt;br/&gt;&lt;span&gt;@SupportedAnnotationTypes&lt;/span&gt;(&lt;span&gt;&quot;*&quot;&lt;/span&gt;)&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;LombokProcessor&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;AbstractProcessor&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; JavacTransformer transformer;&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt; &lt;span&gt;process&lt;/span&gt;&lt;span&gt;(Set&amp;lt;? extends TypeElement&amp;gt; annotations, RoundEnvironment roundEnv)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;         transformer.transform(prio, javacProcessingEnv.getContext(), cusForThisRound, cleanup);&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;-- &lt;span&gt;2&lt;/span&gt;、AST抽象树&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;JavacTransformer&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;transform&lt;/span&gt;&lt;span&gt;(&lt;span&gt;long&lt;/span&gt; priority, Context context, List&amp;lt;JCTree.JCCompilationUnit&amp;gt; compilationUnits,&lt;br/&gt;                          CleanupRegistry cleanup)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        JavacAST ast = &lt;span&gt;new&lt;/span&gt; JavacAST(messager, context, unit, cleanup);&lt;br/&gt;        ast.traverse(&lt;span&gt;new&lt;/span&gt; AnnotationVisitor(priority));&lt;br/&gt;        handlers.callASTVisitors(ast, priority);&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;-- &lt;span&gt;3&lt;/span&gt;、注解处理抽象类&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;abstract&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;JavacAnnotationHandler&lt;/span&gt;&amp;lt;&lt;span&gt;T&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;Annotation&lt;/span&gt;&amp;gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;abstract&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;handle&lt;/span&gt;&lt;span&gt;(AnnotationValues&amp;lt;T&amp;gt; annotation, JCAnnotation ast, JavacNode annotationNode)&lt;/span&gt;&lt;/span&gt;;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;-- &lt;span&gt;4&lt;/span&gt;、Getter注解处理&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;HandleGetter&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;JavacAnnotationHandler&lt;/span&gt;&amp;lt;&lt;span&gt;Getter&lt;/span&gt;&amp;gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt; &lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;handle&lt;/span&gt;&lt;span&gt;(AnnotationValues&amp;lt;Getter&amp;gt; annotation, JCTree.JCAnnotation ast, JavacNode annotationNode)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        JavacNode node = annotationNode.up();&lt;br/&gt;        List&amp;lt;JCTree.JCAnnotation&amp;gt; onMethod = unboxAndRemoveAnnotationParameter(ast, &lt;span&gt;&quot;onMethod&quot;&lt;/span&gt;, &lt;span&gt;&quot;@Getter(onMethod&quot;&lt;/span&gt;, annotationNode);&lt;br/&gt;        &lt;span&gt;switch&lt;/span&gt; (node.getKind()) {&lt;br/&gt;            &lt;span&gt;case&lt;/span&gt; FIELD:&lt;br/&gt;                createGetterForFields(level, fields, annotationNode, &lt;span&gt;true&lt;/span&gt;, lazy, onMethod);&lt;br/&gt;                &lt;span&gt;break&lt;/span&gt;;&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;IdKey类从简洁的源码编译为复杂的字节码文件，通过注解对结构处理时关联一个核心概念，叫AST抽象树，会涉及到很多语法、词法的解析逻辑；&lt;/p&gt;&lt;h1&gt;&lt;span&gt;四、自定义注解&lt;/span&gt;&lt;span/&gt;&lt;/h1&gt;&lt;p&gt;在系统开发中通过自定义注解可以处理各种麻烦的重复逻辑，其最明显的好处就是可以大量的消除冗余的代码块；&lt;/p&gt;&lt;h2&gt;&lt;span&gt;1、同步控制&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p&gt;代码中可能存在很多方法是限制重复请求的，加锁处理是很常用的手段，此时完全可以通过注解结合AOP切面编程简化代码的复杂程度；&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;@Retention&lt;/span&gt;(RetentionPolicy.RUNTIME)&lt;br/&gt;&lt;span&gt;@Target&lt;/span&gt;(ElementType.METHOD)&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;@interface&lt;/span&gt; SyncLock {&lt;br/&gt;    &lt;span&gt;String &lt;span&gt;lockKey&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;&lt;/span&gt;;           &lt;span&gt;// 锁的Key&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;int&lt;/span&gt; &lt;span&gt;time&lt;/span&gt; &lt;span&gt;()&lt;/span&gt; &lt;span&gt;default&lt;/span&gt; 3000 &lt;/span&gt;;  &lt;span&gt;// 有效时间&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;int&lt;/span&gt; &lt;span&gt;retryNum&lt;/span&gt; &lt;span&gt;()&lt;/span&gt; &lt;span&gt;default&lt;/span&gt; 3 &lt;/span&gt;; &lt;span&gt;// 重试次数&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;通过注解标记在方法上，可以极大简化同步锁的编码步骤，只是在读取KEY的时候需要设计好解析规则，结合反射原理进行获取即可；&lt;/p&gt;&lt;p&gt;基于相同的原理，也适应与日志采集、系统告警等功能，在之前的内容中都有详细的总结；&lt;/p&gt;&lt;h2&gt;&lt;span&gt;2、类型引擎&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p&gt;在数据处理的逻辑中，经常有这样一种场景，同一份数据要动态推送到多种数据源中存储，比如常见的MySQL表和ES索引双写模式，这就需要对实体对象做不同的解析逻辑；&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.325&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uUIibyNXbAvDF4KFjn0ZHMYibiccxkKc7GpR3iaYwpO795djZpyOHoFnk573eWnujWzrgJQDdviaKX2ibXZ21F6JSE8A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;@Retention&lt;/span&gt;(RetentionPolicy.RUNTIME)&lt;br/&gt;&lt;span&gt;@Target&lt;/span&gt;(ElementType.FIELD)&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;@interface&lt;/span&gt; BizType {&lt;br/&gt;    &lt;span&gt;EsIndexEnum &lt;span&gt;esIndexEnum&lt;/span&gt; &lt;span&gt;()&lt;/span&gt; &lt;/span&gt;;        &lt;span&gt;// ES索引解析适配&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;MySqlTableEnum &lt;span&gt;mySqlTableEnum&lt;/span&gt; &lt;span&gt;()&lt;/span&gt; &lt;/span&gt;;  &lt;span&gt;// MySQL表解析适配&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;ExcelEnum &lt;span&gt;excelEnum&lt;/span&gt; &lt;span&gt;()&lt;/span&gt; &lt;/span&gt;;            &lt;span&gt;// Excel解析适配&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;首先声明一个类型解析的注解，可以标记在实体对象的字段属性上，然后根据各种数据源的类型枚举，去适配不同解析工厂的执行逻辑，比如常用数据类型、格式、或者完全自定义。&lt;/p&gt;&lt;h1&gt;&lt;span&gt;五、参考源码&lt;/span&gt;&lt;span/&gt;&lt;/h1&gt;&lt;pre&gt;&lt;code&gt;编程文档：&lt;br/&gt;https://gitee.com/cicadasmile/butte-java-note&lt;br/&gt;&lt;br/&gt;应用仓库：&lt;br/&gt;https://gitee.com/cicadasmile/butte-flyer-parent&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mp-common-profile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzU4Njg0MzYwNw==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/uUIibyNXbAvBj3abVSgCmvm7FIYw55ficInd2se9ia6KSic0ma25AUvrmUtXUwXibjhHmCc7DUawfXBI30QuHBjDnzw/0?wx_fmt=png&quot; data-nickname=&quot;知了一笑&quot; data-alias=&quot;cicada_smile&quot; data-signature=&quot;积累、总结、用心记录。&quot; data-from=&quot;0&quot; data-is_biz_ban=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;mp-style-type data-value=&quot;3&quot;/&gt;&lt;/p&gt;&lt;/div&gt;

          
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>8891f0ca1780baad42411e40fa63bae8</guid>
<title>K3S + Helm + NFS 最小化测试安装部署只需十分钟</title>
<link>https://toutiao.io/k/91iwmnw</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;preview&quot;&gt;&lt;p&gt;作者：郝建伟&lt;/p&gt;

&lt;h1&gt;k3s 简介&lt;/h1&gt;

&lt;p&gt;官方文档：&lt;a href=&quot;https://docs.rancher.cn/docs/k3s/_index/&quot;&gt;k3s&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;什么是k3s&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;k3s 是一个轻量级的 Kubernetes 发行版
它针对边缘计算、物联网等场景进行了高度优化。
k3s 有以下增强功能：




&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;打包为单个二进制文件。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用基于 sqlite3 的轻量级存储后端作为默认存储机制。同时支持使用 etcd3、MySQL 和 PostgreSQL 作为存储机制。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;封装在简单的启动程序中，通过该启动程序处理很多复杂的 TLS 和选项。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;默认情况下是安全的，对轻量级环境有合理的默认值。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;添加了简单但功能强大的batteries-included功能，例如：本地存储提供程序，服务负载均衡器，Helm controller 和 Traefik Ingress controller。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;所有 Kubernetes control-plane 组件的操作都封装在单个二进制文件和进程中，使 k3s 具有自动化和管理包括证书分发在内的复杂集群操作的能力。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;最大程度减轻了外部依赖性，k3s 仅需要 kernel 和 cgroup 挂载。 k3s 软件包需要的依赖项包括：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;containerd
Flannel
CoreDNS
CNI
主机实用程序（iptables、socat 等）
Ingress controller（Traefik）
嵌入式服务负载均衡器（service load balancer）
嵌入式网络策略控制器（network policy controller）




&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;为什么叫 k3s?&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;k3s内存占用是k8s的一半
kubernetes是一个10个字母的单词，简写为k8s
kubenetes的一半是5个字母，简写为k3s




&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;适用场景&lt;/h2&gt;

&lt;p&gt;k3s 适用于以下场景：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;边缘计算-Edge&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;物联网-IoT&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;CI&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Development&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ARM&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;嵌入 k8s&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code&gt;由于运行 k3s 所需的资源相对较少，所以 k3s 也适用于开发和测试场景。
在这些场景中，如果开发或测试人员需要对某些功能进行验证，或对某些问题进行重现，那么使用 k3s 不仅能够缩短启动集群的时间，还能够减少集群需要消耗的资源。




&lt;/code&gt;&lt;/pre&gt;

&lt;h1&gt;架构介绍&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;k3s server 是运行k3s server命令的机器（裸机或虚拟机），而 k3s worker 节点是运行 k3s worker命令的机器




&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;单节点架构&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;k3s 单节点集群的架构如下图所示，该集群有一个内嵌 SQLite 数据库的单节点 k3s server。
在这种配置中，每个 worker 节点都注册到同一个 server 节点。
k3s 用户可以通过调用 server 节点上的 k3s API 来操作 Kubernetes 资源。




&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/img_convert/c96b84fa2ddd6af2288995337a0c4c70.png&quot; alt=&quot;img&quot;/&gt;&lt;/p&gt;

&lt;h2&gt;高可用架构&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;虽然单节点 k3s 集群可以满足各种用例，但对于 Kubernetes control-plane 的正常运行至关重要的环境，您可以在高可用配置中运行 k3s。
一个高可用 k3s 集群由以下几个部分组成：




&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;k3s Server 节点：两个或更多的server节点将为 Kubernetes API 提供服务并运行其他 control-plane 服务&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;外部数据库：与单节点 k3s 设置中使用的嵌入式 SQLite 数据存储相反，高可用 k3s 需要挂载一个external database外部数据库作为数据存储的媒介。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;k3s高可用架构:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/img_convert/99a67fbf7d3b9c6bffa964be25a77455.png&quot; alt=&quot;img&quot;/&gt;&lt;/p&gt;

&lt;h2&gt;固定 worker 节点的注册地址&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;在高可用 k3s server 配置中，每个节点还必须使用固定的注册地址向 Kubernetes API 注册，注册后，worker 节点直接与其中一个 server 节点建立连接




&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如下图所示：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2022-11-20-19-19vRHWq117j20crusbB.png&quot; alt=&quot;image.png&quot;/&gt;&lt;/p&gt;

&lt;h2&gt;注册 worker 节点&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;Agent 节点用k3s worker进程发起的 websocket 连接注册，连接由作为代理进程一部分运行的客户端负载均衡器维护。




&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;Agent 将使用节点集群 secret 以及随机生成的节点密码向 k3s server 注册，密码存储在 /etc/rancher/node/password路径下。
k3s server 将把各个节点的密码存储为 Kubernetes secrets，随后的任何尝试都必须使用相同的密码。节点密码秘密存储在kube-system命名空间中，名称使用模板.node-password.k3s




&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;注意:
    在 k3s v1.20.2 之前，k3s server 将密码存储在/var/lib/rancher/k3s/server/cred/node-passwd的磁盘上。
    如果您删除了 worker 的/etc/rancher/node目录，则需要为该 worker 重新创建密码文件，或者从 server 中删除该条目。
    通过使用--with-node-id标志启动 k3s server 或 worker，可以将唯一的节点 ID 附加到主机名中。




&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;自动部署的清单&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;位于目录路径/var/lib/rancher/k3s/server/manifests 的清单在构建时被捆绑到 k3s 二进制文件中
将由rancher/helm-controller在运行时安装。




&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;k3s默认容器运行时&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;k3s默认使用 containerd 作为容器运行时
在 goroutine 中以 子进程 方式 启动 containerd




&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;验证:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ps aux | grep “k3s server”




&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;ps -A -ostat,pid,ppid,cmd |grep 7897




&lt;/code&gt;&lt;/pre&gt;

&lt;h1&gt;准备工作&lt;/h1&gt;

&lt;h2&gt;关闭SELinux&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;# 临时关闭
setenforce 0

# 永久关闭
sed -i &#x27;s/^SELINUX=enforcing$/SELINUX=permissive/&#x27; /etc/selinux/config




&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;关闭swap&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;# 临时关闭swap分区，当前会话生效，重启失效
swapoff -a  

# 永久关闭swap分区
sed -ri &#x27;s/.*swap.*/#&amp;amp;/&#x27; /etc/fstab




&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;设置主机名&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;# 临时修改主机名:hostname newname（本文涉及四台机器：一主三从）
hostname k3s-master1
hostname k3s-node1
hostname k3s-node2
hostname k3s-node3

注：这种方式是立即生效，但是在服务器重启后会恢复成原来的名字

# 永久性修改主机名：修改/etc/sysconfig/network文件内容
vim /etc/sysconfig/network
NETWORKING=yes
HOSTNAME=localhost1

注：这种方式不会立即生效，需要重启服务器才会生效，且永久性修改




&lt;/code&gt;&lt;/pre&gt;

&lt;h1&gt;离线安装&lt;/h1&gt;

&lt;h2&gt;概述&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;你可以使用两种不同的方法在离线环境中安装 k3s。
离线环境是不直接连接到 Internet 的任何环境。
你可以部署一个私有镜像仓库，或者你可以手动部署镜像，比如用于小型集群。




&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;离线安装的过程主要分为以下两个步骤：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;步骤 1：部署镜像&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;步骤 2：安装 k3s&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;*&lt;em&gt;离线升级 k3s 版本: *&lt;/em&gt;完成离线安装 k3s 后，您还可以通过脚本升级 k3s 版本，或启用自动升级功能，以保持离线环境中的 k3s 版本与最新的 k3s 版本同步。&lt;/p&gt;

&lt;h2&gt;部署私有镜像仓库&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;前提条件&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;搭建私有仓库 ，例如 harbor仓库




&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;搭建参考&lt;a href=&quot;http://xingyun.jd.com/shendeng/article/detail/6734?forumId=79&amp;amp;jdme_router=jdme%3A%2F%2Fweb%2F202206081297%3Furl%3Dhttps%3A%2F%2Fshendengh5.jd.com%2FarticleDetail%3Fid%3D6734&quot;&gt;Harbor安装&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;创建镜像仓库 YAML&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;请按照 K3S 私有镜像仓库配置创建并配置registry.yaml文件。
完成后，现在可以转到下面的[安装 k3s]部分，开始安装 K3




&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;手动部署镜像&lt;/strong&gt;&lt;br/&gt;
&lt;strong&gt;前提条件&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;假设已经在离线环境中创建了节点。&lt;br/&gt;
这种方法需要您手动将必要的镜像部署到每个节点，适用于运行无法部署镜像仓库的边缘部署场景。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;操作步骤&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;请按照以下步骤准备镜像目录和 k3s 二进制文件&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;从k3s GitHub Release页面获取你所运行的 k3s 版本的镜像 tar 文件。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;将 tar 文件放在images目录下，例如：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo mkdir -p /var/lib/rancher/k3s/worker/images/
sudo cp k3s-airgap-images-amd64.tar /var/lib/rancher/k3s/worker/images/





&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;将 k3s 二进制文件放在 /usr/local/bin/k3s路径下，并确保拥有可执行权限。完成后，现在可以转到下面的安装 k3s部分，开始安装 k3s。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;chmod +x k3s &amp;amp;&amp;amp; cp k3s /usr/local/bin/




&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;安装 k3s&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;更多安装选项参考 安装选项介绍 | Rancher文档&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;前提条件&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;在安装 k3s 之前，完成上面的部署私有镜像仓库或手动部署镜像，导入安装 k3s 所需要的镜像。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;从 release 页面下载 k3s 二进制文件，k3s 二进制文件需要与离线镜像的版本匹配。将二进制文件放在每个离线节点的 /usr/local/bin 中，并确保这个二进制文件是可执行的。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;下载 k3s 安装脚本：&lt;a href=&quot;https://get.k3s.io&quot;&gt;https://get.k3s.io&lt;/a&gt; 。将安装脚本放在每个离线节点的任意地方，并命名为 &lt;a href=&quot;http://install.sh&quot;&gt;install.sh&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;当使用 INSTALL_K3S_SKIP_DOWNLOAD 环境变量运行 k3s 脚本时，k3s 将使用本地的脚本和二进制。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;单节点安装&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;server节点&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;INSTALL_K3S_SKIP_DOWNLOAD=true ./install.sh




&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2022-11-20-19-14CJ7EtqOWme0zg20i.png&quot; alt=&quot;image.png&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;worker节点&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# 将 myserver 替换为 server 的 IP 或有效的 DNS
# 将 mynodetoken 替换 server 节点的 token
# token 通常在/var/lib/rancher/k3s/server/node-token

INSTALL_K3S_SKIP_DOWNLOAD=true 
K3S_URL=https://172.16.100.126:6443 K3S_TOKEN=K10ccf50e87c24f9a1db535bdc5f6cd0c7e87b4b7b321118c393563b07e0fa8b39f::server:6b9604a66f7a2d2ac22a2835e3aa7500 ./install.sh






&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;注意：k3s 还为 kubelets 提供了一个--resolv-conf标志，这可能有助于在离线网络中配置 DNS&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;![image-20221118231106968](/Users/haojianwei1/Library/Application Support/typora-user-images/image-20221118231106968.png)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;添加worker角色标签&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# 设置worker角色，工作节点不能默认添加 worker 角色，需要手动执行命令添加，新版本可能已修复此问题，
# kubectl label nodes 节点名字 node-role.kubernetes.io/你想要的roles(=/-)
# 最后括号里的加减号，减号就是删除roles，等号就是增加roles

kubectl label node k3s-node1 node-role.kubernetes.io/worker=true --overwrite
kubectl label node k3s-node2 node-role.kubernetes.io/worker=true --overwrite
kubectl label node k3s-node3 node-role.kubernetes.io/worker=true --overwrite
# --overwrite 代表如果已经存在worker角色标签，则覆盖（新标签创建时此操作不生效）




&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2022-11-20-19-138ry211aqBqTNqKug.png&quot; alt=&quot;image.png&quot;/&gt;&lt;/p&gt;

&lt;h2&gt;kubectl命令行补全&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;yum install bash-completion -y
source /usr/share/bash-completion/bash_completion
source &amp;lt;(kubectl completion bash)
echo &quot;source &amp;lt;(kubectl completion bash)&quot; &amp;gt;&amp;gt; ~/.bashrc




&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;高可用安装&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;需要调整安装命令，以便指定INSTALL_K3S_SKIP_DOWNLOAD=true并在本地运行安装脚本。您还将利用INSTALL_K3S_EXEC=&#x27;args&#x27;为 k3s 提供其他参数。&lt;/p&gt;

&lt;p&gt;例如，使用外部数据库实现高可用安装指南的第二步提到了以下内容：&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code&gt;curl -sfL https://get.k3s.io | sh -s - server \
--datastore-endpoint=&#x27;mysql://username:password@tcp(hostname:3306)/database-name&#x27;




&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;由于在离线环境中无法使用curl命令进行安装，所以您需要参考以下示例，将这条命令行修改为离线安装：&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code&gt;INSTALL_K3S_SKIP_DOWNLOAD=true INSTALL_K3S_EXEC=&#x27;server&#x27; K3S_DATASTORE_ENDPOINT=&#x27;mysql://username:password@tcp(hostname:3306)/database-name&#x27; ./install.sh




&lt;/code&gt;&lt;/pre&gt;

&lt;h1&gt;升级 k3s&lt;/h1&gt;

&lt;h2&gt;通过脚本升级&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;离线环境的升级可以通过以下步骤完成：&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;从k3s GitHub Release页面下载要升级到的 k3s 版本。将 tar 文件放在每个节点的/var/lib/rancher/k3s/worker/images/目录下。删除旧的 tar 文件。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;复制并替换每个节点上/usr/local/bin中的旧 k3s 二进制文件。复制&lt;a href=&quot;https://get.k3s.io&quot;&gt;https://get.k3s.io&lt;/a&gt; 的安装脚本（因为它可能在上次发布后发生了变化）。再次运行脚本。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;重启 k3s 服务。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;启用自动升级功能&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;除了可以通过脚本升级 k3s 以外，您还可以启用自动升级功能，以保持离线环境中的 k3s 版本与最新的 k3s 版本同步。&lt;/p&gt;

&lt;p&gt;从 v1.17.4+k3s1 开始，k3s 支持自动升级。要在离线环境中启用此功能，您必须确保所需镜像在您的私有镜像仓库中可用。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;你将需要与你打算升级到的 k3s 版本相对应的 rancher/k3s-upgrade 版本。&lt;/p&gt;

&lt;p&gt;注意，镜像标签将 k3s 版本中的+替换为-，因为 Docker 镜像不支持+。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;你还需要在你要部署的system-upgrad-controller manifestYAML 中指定的 system-upgrad-controller和kubectl的版本。&lt;/p&gt;

&lt;p&gt;在这里检查 system-upgrad-controller 的最新版本，并下载 system-upgrad-controller.yaml来确定你需要推送到私有镜像仓库的版本。例如，在system-upgrade-controller的 v0.4.0 版本中，在 manifest YAML 中指定了这些镜像：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rancher/system-upgrade-controller:v0.4.0
rancher/kubectl:v0.17.0




&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;将必要的 rancher/k3s-upgrade、rancher/system-upgrade-controller 和 rancher/kubectl 镜像添加到您的私有镜像仓库中以后 ，就可以按照k3s 自动升级指南进行操作。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;停止k3s&lt;/h1&gt;

&lt;h2&gt;server节点停止k3s&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;# 停止k3s
systemctl stop k3s
systemctl disable k3s
# 杀掉进程的kill命令
/usr/local/bin/k3s-killall.sh
# 如果使用的是docker，需要执行发下命令
docker ps -a|grep -v CONTAINER|awk &#x27;{print $1}&#x27;|xargs docker  stop
docker ps -a|grep -v CONTAINER|awk &#x27;{print $1}&#x27;|xargs docker  rm
systemctl stop docker
systemctl disable docker




&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;worker节点停止k3s&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;# 停止k3s-agent
systemctl stop k3s-agent
systemctl disable k3s-agent
# 如果使用的是docker，需要执行发下命令
docker ps -a|grep -v CONTAINER|awk &#x27;{print $1}&#x27;|xargs docker  stop
docker ps -a|grep -v CONTAINER|awk &#x27;{print $1}&#x27;|xargs docker  rm
systemctl stop docker
systemctl disable docker




&lt;/code&gt;&lt;/pre&gt;

&lt;h1&gt;卸载 k3s&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;卸载 k3s 会删除集群数据和所有脚本。&lt;/p&gt;

&lt;p&gt;要使用不同的安装选项重新启动集群，请使用不同的标志重新运行安装脚本。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;server 节点卸载 k3s&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;/usr/local/bin/k3s-uninstall.sh




&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;worker 节点卸载 k3s&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;/usr/local/bin/k3s-agent-uninstall.sh




&lt;/code&gt;&lt;/pre&gt;

&lt;h1&gt;Helm简介&lt;/h1&gt;

&lt;p&gt;​ Helm 是 Kubernetes 生态系统中的一个软件包管理工具。本文将介绍 Helm 中的相关概念和基本工作原理，并通过一个具体的示例学习如何使用 Helm 打包、分发、安装、升级及回退 Kubernetes 应用。&lt;/p&gt;

&lt;h2&gt;Kubernetes 应用部署的挑战&lt;/h2&gt;

&lt;p&gt;​ Kubernetes 是一个提供了基于容器的应用集群管理解决方案，Kubernetes 为容器化应用提供了部署运行、资源调度、服务发现和动态伸缩等一系列完整功能。&lt;/p&gt;

&lt;p&gt;​ Kubernetes 的核心设计理念是: 用户定义要部署的应用程序的规则，而 Kubernetes 则负责按照定义的规则部署并运行应用程序。如果应用程序出现问题导致偏离了定义的规格，Kubernetes 负责对其进行自动修正。例如：定义的应用规则要求部署两个实例（Pod），其中一个实例异常终止了，Kubernetes 会检查到并重新启动一个新的实例。&lt;/p&gt;

&lt;p&gt;​ 用户通过使用 Kubernetes API 对象来描述应用程序规则，包括 Pod、Service、Volume、Namespace、ReplicaSet、Deployment、Job等等。一般这些资源对象的定义需要写入一系列的 YAML 文件中，然后通过 Kubernetes 命令行工具 Kubectl 调 Kubernetes API 进行部署。&lt;/p&gt;

&lt;p&gt;​ 以一个典型的三层应用 Wordpress 为例，该应用程序就涉及到多个 Kubernetes API 对象，而要描述这些 Kubernetes API 对象就可能要同时维护多个 YAML 文件。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://www.hi-linux.com/img/linux/helm01.png&quot; alt=&quot;img&quot;/&gt;&lt;/p&gt;

&lt;p&gt;从上图可以看到，在进行 Kubernetes 软件部署时，我们面临下述几个问题：&lt;/p&gt;



&lt;p&gt;Helm 的出现就是为了很好地解决上面这些问题。&lt;/p&gt;

&lt;h2&gt;Helm 是什么？&lt;/h2&gt;

&lt;p&gt;Helm 是&lt;a href=&quot;https://deis.com/&quot;&gt;Deis&lt;/a&gt;开发的一个用于 Kubernetes 应用的包管理工具，主要用来管理 Charts。有点类似于 Ubuntu 中的 APT 或 CentOS 中的 YUM。&lt;/p&gt;

&lt;p&gt;Helm Chart 是用来封装 Kubernetes 原生应用程序的一系列 YAML 文件。可以在你部署应用的时候自定义应用程序的一些 Metadata，以便于应用程序的分发。&lt;/p&gt;

&lt;p&gt;对于应用发布者而言，可以通过 Helm 打包应用、管理应用依赖关系、管理应用版本并发布应用到软件仓库。&lt;/p&gt;

&lt;p&gt;对于使用者而言，使用 Helm 后不用需要编写复杂的应用部署文件，可以以简单的方式在 Kubernetes 上查找、安装、升级、回滚、卸载应用程序。&lt;/p&gt;

&lt;h2&gt;Helm 组件及相关术语&lt;/h2&gt;



&lt;p&gt;Helm 是一个命令行下的客户端工具。主要用于 Kubernetes 应用程序 Chart 的创建、打包、发布以及创建和管理本地和远程的 Chart 仓库。&lt;/p&gt;



&lt;p&gt;Tiller 是 Helm 的服务端，部署在 Kubernetes 集群中。Tiller 用于接收 Helm 的请求，并根据 Chart 生成 Kubernetes 的部署文件（ Helm 称为 Release ），然后提交给 Kubernetes 创建应用。Tiller 还提供了 Release 的升级、删除、回滚等一系列功能。&lt;/p&gt;



&lt;p&gt;Helm 的软件包，采用 TAR 格式。类似于 APT 的 DEB 包或者 YUM 的 RPM 包，其包含了一组定义 Kubernetes 资源相关的 YAML 文件。&lt;/p&gt;



&lt;p&gt;Helm 的软件仓库，Repository 本质上是一个 Web 服务器，该服务器保存了一系列的 Chart 软件包以供用户下载，并且提供了一个该 Repository 的 Chart 包的清单文件以供查询。Helm 可以同时管理多个不同的 Repository。&lt;/p&gt;



&lt;p&gt;使用&lt;code&gt;helm install&lt;/code&gt;命令在 Kubernetes 集群中部署的 Chart 称为 Release。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;注：需要注意的是：Helm 中提到的 Release 和我们通常概念中的版本有所不同，这里的 Release 可以理解为 Helm 使用 Chart 包部署的一个应用实例。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;Helm 工作原理&lt;/h2&gt;

&lt;p&gt;这张图描述了 Helm 的几个关键组件 Helm（客户端）、Tiller（服务器）、Repository（Chart 软件仓库）、Chart（软件包）之间的关系。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://www.hi-linux.com/img/linux/helm02.png&quot; alt=&quot;img&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Chart Install 过程&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Helm 从指定的目录或者 TAR 文件中解析出 Chart 结构信息。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Helm 将指定的 Chart 结构和 Values 信息通过 gRPC 传递给 Tiller。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Tiller 根据 Chart 和 Values 生成一个 Release。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Tiller 将 Release 发送给 Kubernetes 用于生成 Release。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Chart Update 过程&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Helm 从指定的目录或者 TAR 文件中解析出 Chart 结构信息。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Helm 将需要更新的 Release 的名称、Chart 结构和 Values 信息传递给 Tiller。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Tiller 生成 Release 并更新指定名称的 Release 的 History。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Tiller 将 Release 发送给 Kubernetes 用于更新 Release。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Chart Rollback 过程&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Helm 将要回滚的 Release 的名称传递给 Tiller。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Tiller 根据 Release 的名称查找 History。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Tiller 从 History 中获取上一个 Release。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Tiller 将上一个 Release 发送给 Kubernetes 用于替换当前 Release。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Chart 处理依赖说明&lt;/p&gt;

&lt;p&gt;Tiller 在处理 Chart 时，直接将 Chart 以及其依赖的所有 Charts 合并为一个 Release，同时传递给 Kubernetes。因此 Tiller 并不负责管理依赖之间的启动顺序。Chart 中的应用需要能够自行处理依赖关系。&lt;/p&gt;

&lt;h1&gt;部署 Helm&lt;/h1&gt;

&lt;h2&gt;安装 Helm 客户端&lt;/h2&gt;

&lt;p&gt;Helm 的安装方式很多，这里采用二进制的方式安装。更多安装方法可以参考 Helm 的&lt;a href=&quot;https://docs.helm.sh/using_helm/#installing-helm&quot;&gt;官方帮助文档&lt;/a&gt;。&lt;/p&gt;



&lt;pre&gt;&lt;code&gt;curl https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get &amp;gt; get_helm.sh$ chmod 700 get_helm.sh
./get_helm.sh




&lt;/code&gt;&lt;/pre&gt;



&lt;pre&gt;&lt;code&gt;# 下载 Helm 
wget https://get.helm.sh/helm-v3.9.3-linux-amd64.tar.gz

# 解压 Helm$ 
tar -zxvf helm-v3.9.3-linux-amd64.tar.gz

# 复制客户端执行文件到 bin 目录下
cp linux-amd64/helm /usr/local/bin/




&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Tiller 是以 Deployment 方式部署在 Kubernetes 集群中的，只需使用以下指令便可简单的完成安装。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;helm init




&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注：&lt;strong&gt;&lt;a href=&quot;http://storage.googleapis.com/&quot;&gt;storage.googleapis.com&lt;/a&gt;&lt;/strong&gt;默认是不能访问的，该问题请自行解决。如果不清楚是否能访问，当你把这行命令cp linux-amd64/helm /usr/local/bin/完，看一下是否都是ok的&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2022-11-20-19-12P4lRfX6lQ6cl87i.png&quot; alt=&quot;image.png&quot;/&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;可以可以看到 Tiller 的 Service、Deployment是正常的，
但是Pod是不正常的；镜像拉取失败，默认我们是注：storage.googleapis.com 默认是不能访问的，换个源下载一下；
参考：https://www.hi-linux.com/posts/21466.html  换源




&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;由于 Helm 默认会去&lt;a href=&quot;http://storage.googleapis.com/&quot;&gt;storage.googleapis.com&lt;/a&gt;拉取镜像，如果你当前执行的机器不能访问该域名的话可以使用以下命令来安装：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# 使用某云镜像安装并把默认仓库设置为某云上的镜像仓库$ helm init --upgrade --tiller-image 某云镜像地址/google_containers/tiller:v2.12.2 --stable-repo-url https://某云镜像地址/charts

可以看出现在已经正常running了，
查看详细的信息
kubectl describe pod tiller-deploy-dc95dbd5c-gvldb --namespace=kube-system




&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;接下来查看状态&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2022-11-20-19-11DfHo6ZlAbpGHSRC.png&quot; alt=&quot;image.png&quot;/&gt;&lt;/p&gt;

&lt;p&gt;上图可看出：现在，&lt;code&gt;helm version&lt;/code&gt;已经能够查看到服务器的版本信息了，部署完成&lt;/p&gt;

&lt;p&gt;后面下载包会报错，是因为从 Kubernetes 1.6 版本开始，API Server 启用了 RBAC 授权。目前的 Tiller 部署时默认没有定义授权的 ServiceAccount，这会导致访问 API Server 时被拒绝。所以我们需要明确为 Tiller 部署添加授权。&lt;/p&gt;

&lt;h2&gt;生成.kube配置&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;## 当使用helm 部署 Pod 的时候如果报以下错误，需要执行此步骤操作（说明没有访问kube-apiserver 权限）
## 如果 kubectl 在其他非master节点部署时同样也报如下错误，也需要执行此步骤操作
Error: INSTALLATION FAILED: Kubernetes cluster unreachable: Get &quot;http://localhost:8080/version&quot;: dial tcp [::1]:8080: connect: connection refused

## 不可用的时候需要复制master节点的/etc/rancher/k3s/k3s.yaml文件内容复制至客户端$HOME/.kube/config
cat /etc/rancher/k3s/k3s.yaml
mkdir -p $HOME/.kube
sudo touch $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config




&lt;/code&gt;&lt;/pre&gt;

&lt;h1&gt;安装NFS&lt;/h1&gt;

&lt;h2&gt;部署说明&lt;/h2&gt;

&lt;p&gt;Kubernetes网络文件系统，主要用于ES、Kafka、Minio等持久化存储。&lt;/p&gt;

&lt;h2&gt;nfs搭建&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;# ===========服务端（nfs节点）操作如下===========
# 通过yum目录安装nfs服务和rpcbind服务
yum -y install nfs-utils rpcbind

# 启动服务
systemctl start rpcbind
systemctl enable rpcbind
systemctl start nfs
systemctl enable nfs

# 查看nfs服务是否安装正常
rpcinfo -p localhost

# 或者是通过公网测试服务端的nfs服务是否可用。
rpcinfo -p ServerIP

# 显示如下即正常
program vers proto port service
100000 4 tcp 111 portmapper
100000 3 tcp 111 portmapper
...
100024 1 udp 45993 status
100024 1 tcp 39431 status
...
100005 1 udp 20048 mountd
100005 1 tcp 20048 mountd
...
100003 3 tcp 2049 nfs
100003 4 tcp 2049 nfs
100227 3 tcp 2049 nfs_acl
...
100021 3 tcp 33941 nlockmgr
100021 4 tcp 33941 nlockmgr

# ===========客户端（k8s节点）操作如下===========
# 通过yum目录安装nfs服务和rpcbind服务
yum -y install nfs-utils rpcbind




&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;&lt;strong&gt;配置共享目录&lt;/strong&gt;&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;# ===========以下全部为nfs节点操作如下===========
# 比如我们在服务端的共享目录为/export/nfs-share，接着输入以下命令
echo &quot;/export/nfs-share 172.16.100.0/20(rw,sync,no_root_squash,no_all_squash)&quot; &amp;gt; /etc/exports

# 要保证/export/nfs-share目录已经存在节点上，然后输入以下命令使共享目录生效。
exportfs -r

# 重新启动服务
systemctl restart rpcbind
systemctl restart nfs

# 测试
showmount -e localhost

# 或者
showmount -e 公网ip
showmount 命令查询“mountd”守护进程，以显示NFS服务器加载的信息




&lt;/code&gt;&lt;/pre&gt;

&lt;h1&gt;部署Pod遇到的问题&lt;/h1&gt;

&lt;h2&gt;Helm部署Chart时报错&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;Error: INSTALLATION FAILED: create: failed to create: Request entity too large: limit is 3145728

以上报错信息，一般是由于chart目录里面存在大文件，把不必要的文件删除，只保留chart相关的，再次helm install即可




&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;部署 nfs pod时报错&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2022-11-20-19-0745xpuU11cJrdS8YHE.png&quot; alt=&quot;image.png&quot;/&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# 上面的原因一般是由于nfs运行所在的节点，访问nfs不通，需要在集群的全部工作节点执行安装nfs客户端命令：
yum -y install nfs-utils rpcbind





&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Pod拉取镜像超时报错&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2022-11-20-19-070Xe7o67t7rZ9HFJ.png&quot; alt=&quot;image.png&quot;/&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;以上报错信息，一般是由于官网方法部署k3s，默认使用的是containerd作为容器运行环境，使用的是海外的镜像仓库，导致拉镜像超时，可在pod配置镜像加速，设置地址为国内，参考常用命令：crictl命令使用 --&amp;gt; 配置containerd镜像加速

注：如果受公网限制，可能在有公网的环境下，把对应的镜像先自行下载下来，再上传到集群用命令行导入到镜像库




&lt;/code&gt;&lt;/pre&gt;

&lt;h1&gt;常用命令行&lt;/h1&gt;

&lt;h2&gt;kubectl命令&lt;/h2&gt;

&lt;h3&gt;node的标签操作&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;# 查看当前所有node的标签
kubectl get nodes --show-labels




&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2022-11-20-19-07BTgkrPCGE7ogu9l.png&quot; alt=&quot;image.png&quot;/&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# 查看某个node的标签
kubectl describe node k3s-master  # k3s-master 节点名




&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2022-11-20-19-060KchKIi656io11bZG.png&quot; alt=&quot;image.png&quot;/&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# node自定义标签
kubectl label node k3s-master1 project=k8snew
node/k3s-master1 labeled

kubectl label node k3s-master1 node=second-node
node/k3s-master1 labeled




&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;# yaml引用node的label示范
# vim haproxyDep.yaml 
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: k8s-new
  name: haproxy-deployment
  labels:
    app: haproxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: haproxy
  template:
    metadata:
      labels:
        app: haproxy
    spec:
      containers:
      - name: haproxy
        image: k8s.org/haproxy-2.5.0:v1
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: 200m
            memory: 200Mi
        ports:
        - containerPort: 9999
          protocol: TCP
          name: status
        - containerPort: 9527
          protocol: TCP
          name: haproxy01
      nodeSelector:         #注意必须配置在containers参数结束后的部分
        node: first-node    #之前配置的192.168.1.96节点的label




&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;# 自定义node label的删除
kubectl label nodes k3s-master1 project-

注：命令格式即：kubectl  label  nodes  node节点名称/nodeIP  node对应的key-




&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;ctr 命令使用&lt;/h2&gt;

&lt;p&gt;containerd 相比于docker , 多了namespace概念, 每个image和container 都会在各自的namespace下可见&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# 查询ctr版本
ctr version




&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;# 查看ctr image可用操作
ctr image list
ctr i list
ctr i ls




&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;# 镜像标记tag
ctr -n k8s.io i tag registry.cn-hangzhou.aliyuncs.com/google_containers/pause:3.2 k8s.gcr.io/pause:3.2

# 若新镜像reference 已存在, 需要先删除新reference, 或者如下方式强制替换
ctr -n k8s.io i tag --force registry.cn-hangzhou.aliyuncs.com/google_containers/pause:3.2 k8s.gcr.io/pause:3.2




&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;# 删除镜像
ctr -n k8s.io i rm k8s.gcr.io/pause:3.2




&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;# 拉取镜像
ctr -n k8s.io i pull -k k8s.gcr.io/pause:3.2




&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;# 推送镜像
ctr -n k8s.io i push -k k8s.gcr.io/pause:3.2




&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;# 导出镜像
ctr -n k8s.io i export pause.tar k8s.gcr.io/pause:3.2




&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;# 导入镜像
# 不支持 build,commit 镜像
ctr -n k8s.io i import pause.tar




&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;# 查看容器相关操作
ctr c




&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;# 运行容器
–null-io: 将容器内标准输出重定向到/dev/null
–net-host: 主机网络
-d: 当task执行后就进行下一步shell命令,如没有选项,则会等待用户输入,并定向到容器内
–mount 挂载本地目录或文件到容器
–env 环境变量
ctr -n k8s.io run --null-io --net-host -d \
–env PASSWORD=&quot;123456&quot;
–mount type=bind,src=/etc,dst=/host-etc,options=rbind:rw




&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;# 容器日志
注意: 容器默认使用fifo创建日志文件, 如果不读取日志文件,会因为fifo容量导致业务运行阻塞

如要创建日志文件,建议如下方式创建:
ctr -n k8s.io run --log-uri file:///var/log/xx.log




&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ctr，crictl，docker命令对比&lt;/p&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Ctr命令&lt;/th&gt;
&lt;th&gt;Crictl命令&lt;/th&gt;
&lt;th&gt;Docker命令&lt;/th&gt;
&lt;th&gt;详细描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;ctr task ls&lt;/td&gt;
&lt;td&gt;crictl ps -a&lt;/td&gt;
&lt;td&gt;docker ps&lt;/td&gt;
&lt;td&gt;查看运行中的容器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ctr image ls&lt;/td&gt;
&lt;td&gt;crictl images&lt;/td&gt;
&lt;td&gt;docker images&lt;/td&gt;
&lt;td&gt;获取image列表信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ctr image pull zookeeper&lt;/td&gt;
&lt;td&gt;crictl pull zookeeper&lt;/td&gt;
&lt;td&gt;docker pull zookeeper&lt;/td&gt;
&lt;td&gt;拉取镜像&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ctr image push zookeeper&lt;/td&gt;
&lt;td/&gt;
&lt;td&gt;docker push zookeeper&lt;/td&gt;
&lt;td&gt;推送镜像&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ctr image rmi&lt;/td&gt;
&lt;td&gt;crictl rmi&lt;/td&gt;
&lt;td&gt;docker rmi&lt;/td&gt;
&lt;td&gt;删除镜像&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ctr image export zookeeper.tar &lt;a href=&quot;http://docker.io/bitnami/zookeeper:3.4.14&quot;&gt;docker.io/bitnami/zookeeper:3.4.14&lt;/a&gt;&lt;/td&gt;
&lt;td/&gt;
&lt;td&gt;docker save -o zookeeper.tar &lt;a href=&quot;http://docker.io/bitnami/zookeeper:3.4.14&quot;&gt;docker.io/bitnami/zookeeper:3.4.14&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;导出镜像&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ctr image import zookeeper.tar&lt;/td&gt;
&lt;td/&gt;
&lt;td&gt;docker load -i zookeeper.tar&lt;/td&gt;
&lt;td&gt;导入本地镜像&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ctr run -d zookeeper zookeeper&lt;/td&gt;
&lt;td/&gt;
&lt;td&gt;docker run -d --name=kafka zookeeper&lt;/td&gt;
&lt;td&gt;运行容器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ctr image tag zookeeper-new-tag zookeeper&lt;/td&gt;
&lt;td/&gt;
&lt;td&gt;docker tag zookeeper-new-tag zookeeper&lt;/td&gt;
&lt;td&gt;镜像打tag&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;h2&gt;crictl 命令使用&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;# 进入容器：
命令：crictl exec -it CONTAINER-ID bash
例如：crictl exec -it f57ba7a2d9df4 bash




&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;# 查询容器：
命令：crictl ps -a




&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;# 查询日志：
命令：crictl logs -f CONTAINER-ID
例如：crictl logs -f f57ba7a2d9df4




&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;配置containerd镜像加速&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;# 拷贝配置文件，原文件不要删除
cp /var/lib/rancher/k3s/agent/etc/containerd/config.toml /var/lib/rancher/k3s/agent/etc/containerd/config.toml.tmpl




&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;# 修改配置文件
vim /var/lib/rancher/k3s/agent/etc/containerd/config.toml.tmpl 在最后增加以下配置

[plugins.cri.registry]
  [plugins.cri.registry.mirrors]
    [plugins.cri.registry.mirrors.&quot;docker.io&quot;]
      endpoint = [&quot;https://mirror地址&quot;]
    [plugins.cri.registry.mirrors.&quot;gcr.io&quot;]
      endpoint = [&quot;https://mirror地址&quot;]
    [plugins.cri.registry.mirrors.&quot;k8s.gcr.io&quot;]
      endpoint = [&quot;https://mirror地址&quot;]
    [plugins.cri.registry.mirrors.&quot;quay.io&quot;]
      endpoint = [&quot;https://mirror地址&quot;]




&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;# 重启k3s使配置生效
systemctl restart k3s




&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;#检查配置是否生效
crictl info|grep  -A 30 registry




&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;其他命令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;crictl images list 列出镜像
crictl ps 查看运行中的容器




&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;几种Containerd常用命令对比&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;# 查看容器运行状态

# 1.ctr
ctr container ls
#指定命名空间
ctr --namespace=k8s.io container ls

# 2.crictl
crictl ps

# 3.nerdctl
nerdctl ps




&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;# 查看镜像

# 1.ctr
ctr image ls
#指定命名空间
ctr --namespace=k8s.io image ls

# 2.crictl
crictl image

# 3.nerdctl
nerdctl image




&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;# 查看容器日志

# 1.ctr
没有相关命令

# 2.crictl
crictl logs

# 3.nerdctl
nerdctl logs




&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;# 修改镜像标签

# 1.ctr
ctr image tag

# 2.crictl
没有相关命令

# 3.nerdctl
nerdctl tag




&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;# 导出镜像

# 1.ctr
ctr image export

# 2. crictl
没有相关命令

# 3.nerdctl
nerdctl save




&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;# 导入镜像

# 1.ctl
ctr image import

# 2.crictl
没有相关命令

# 3.nerdctl
nerdctl load




&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;7.删除镜像

# 1.ctr
ctr image rm

# 2.crictl
crictl rmi

#3. nerdctl
nerdctl rmi




&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;8.拉取镜像

# 1.ctr
ctr image pull

# 2.crictl
crictl pull

# 3.nerdctl
nerdctl pull




&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;9.推送镜像

# 1.ctr
ctr image push

# 2.crictl
没有相关命令

# 3.nerdctl
nerdctl push



&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
  &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>b2fe1b4053ec2a417b552060cb7bfa51</guid>
<title>硬核 |  Kafka 如何解决消息不丢失？</title>
<link>https://toutiao.io/k/wc9et5u</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content js_underline_content             &quot; id=&quot;js_content&quot;&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大家好，我是Tom哥~&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Kafka 消息框架，大家一定不陌生，很多人工作中都有接触。它的核心思路，通过一个高性能的&lt;code&gt;MQ服务&lt;/code&gt;来连接&lt;code&gt;生产&lt;/code&gt;和&lt;code&gt;消费&lt;/code&gt;两个系统，达到系统间的解耦，有很强的扩展性。&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.21565495207667731&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/2KTof9YshwfJHeDicSic4poKsekZn3eJPogic2saHicNwQxRVOAic3XMeLBY9ZubflhH9icZBGl37Xd2VpJ8oNiczZQjw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1252&quot;/&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;你可能会有疑问，如果中间某一个环节断掉了，那怎么办？&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.20593080724876442&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/2KTof9YshwfJHeDicSic4poKsekZn3eJPo4lPD1JK7zOtFnTFpECXQrQicx0icot89ibTn7MlkB3icfTEicQ8F00tQa0Q/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1214&quot;/&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这种情况，我们称之为&lt;code&gt;消息丢失&lt;/code&gt;，会造成系统间的数据不一致。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那如何解决这个问题？需要从&lt;code&gt;生产端&lt;/code&gt;、&lt;code&gt;MQ服务端&lt;/code&gt;、&lt;code&gt;消费端&lt;/code&gt;，三个维度来处理&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;1、生产端&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;生产端的职责就是，确保生产的消息能到达MQ服务端，这里我们需要有一个响应来判断本次的操作是否成功。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;Future&amp;lt;RecordMetadata&amp;gt; send(ProducerRecord&amp;lt;K, V&amp;gt; record, Callback callback)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如，上面的代码就是通过一个&lt;code&gt;Callback&lt;/code&gt;函数，来判断消息是否发送成功，如果失败，我们需要补偿处理。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;另外，为了提升发送时的灵活性，kafka提供了多种参数，供不同业务自己选择&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;1.1 参数 acks&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;该参数表示有多少个分区副本收到消息，才认为本次发送是成功的。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;acks=0，只要发送消息就认为成功，生产端不等待服务器节点的响应&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;acks=1，表示生产者收到 leader 分区的响应就认为发送成功&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;acks=-1，只有当 ISR 中的副本全部收到消息时，生产端才会认为是成功的。这种配置是最安全的，但由于同步的节点较多，吞吐量会降低。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;1.2 参数 retries&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;表示生产端的重试次数，如果重试次数用完后，还是失败，会将消息临时存储在本地磁盘，待服务恢复后再重新发送。建议值 &lt;code&gt;retries=3&lt;/code&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;1.3 参数 retry.backoff.m&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;消息发送超时或失败后，间隔的重试时间。一般推荐的设置时间是 300 毫秒。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里要特别注意一种特殊情况，如果MQ服务没有正常响应，不一定代表&lt;code&gt;消息发送失败&lt;/code&gt;，也有可能是响应时正好赶上网络抖动，响应超时。&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.5182481751824818&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/2KTof9YshwfJHeDicSic4poKsekZn3eJPoSya97EfdAlpibg6icXeSm1Bav0iaS2UH9TByKdymEcicQqwueXGxR7AZEA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;822&quot;/&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;span&gt;&lt;strong&gt;当生产端做完这些，一定能保证消息发送成功了，但可能发送多次，这样就会导致消息重复，这个我们后面再讲解决方案&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong/&gt;&lt;/span&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;2、MQ服务端&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;MQ服务端作为消息的存储介质，也有可能会丢失消息。比如：一个分区突然挂掉，那么怎么保证这个分区的数据不丢失，我们会引入副本概念，通过备份来解决这个问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;具体可设置哪些参数？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;2.1 参数 replication.factor&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;表示分区副本的个数，&lt;code&gt;replication.factor &amp;gt;1&lt;/code&gt; 当leader 副本挂了，follower副本会被选举为leader继续提供服务。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;2.2 参数 min.insync.replicas&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;表示 ISR 最少的副本数量，通常设置 &lt;code&gt;min.insync.replicas &amp;gt;1&lt;/code&gt;，这样才有可用的follower副本执行替换，保证消息不丢失&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;2.3 参数 unclean.leader.election.enable&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;是否可以把非 ISR 集合中的副本选举为 leader 副本。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果设置为&lt;code&gt;true&lt;/code&gt;，而follower副本的同步消息进度落后较多，此时被选举为leader，会导致消息丢失，慎用。&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.6079447322970639&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/2KTof9YshwfJHeDicSic4poKsekZn3eJPoVNjWxLlzibPZm7r9f8RyBNkyr5rBjhyXEicVokgpWNzVLRvW7LvblCxA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1158&quot;/&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3、消费端&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;消费端要做的是把消息完整的消费处理掉。但是这里面有个&lt;code&gt;提交位移&lt;/code&gt;的步骤。&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.42217898832684825&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/2KTof9YshwfJHeDicSic4poKsekZn3eJPoSfEWpBiaOyiaaItnnmIcnz8yuDSd7vklBicwqS2cHibajBmlekykO9FiaBQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1028&quot;/&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有的同学，考虑到&lt;code&gt;业务处理&lt;/code&gt;消耗时间较长，会单独启动线程拉取消息存储到本地内存队列，然后再搞个线程池并行处理业务逻辑。这样设计有个风险，本地消息如果没有处理完，服务器宕机了，会造成消息丢失。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;正确的做法：拉取消息 ---  业务处理  ---- 提交消费位移&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;关于提交位移，kafka提供了集中参数配置&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;参数  enable.auto.commit&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;表示消费位移是否自动提交。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果拉取了消息，业务逻辑还没处理完，提交了消费位移但是消费端却挂了，消费端恢复或其他消费端接管该分片再也拉取不到这条消息，会造成消息丢失。所以，我们通常设置 &lt;code&gt;enable.auto.commit=false&lt;/code&gt;，手动提交消费位移。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;List&amp;lt;String&amp;gt; messages = consumer.poll()；&lt;br/&gt;processMsg(messages);&lt;br/&gt;consumer.commitOffset();&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个方案，会产生另外一个问题，我们来看下这个图&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.3784219001610306&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/2KTof9YshwfJHeDicSic4poKsekZn3eJPoBuxXNL0daZoccpJ9Nt87CJOFa4BxQwcDVBDzzhmSHMU470Q3SDMFug/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1242&quot;/&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;拉取了&lt;code&gt;消息4~消息8&lt;/code&gt;，业务处理后，在提交消费位移时，不凑巧系统宕机了，最后的提交位移并没有保存到MQ 服务端，下次拉取消息时，依然是从&lt;code&gt;消息4&lt;/code&gt;开始拉取，但是这部分消息已经处理过了，这样便会导致重复消费。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;如何解决重复消费，避免引发数据不一致&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;首先，要解决MQ 服务端的重复消息。kafka 在  0.11.0 版本后，每条消息都有唯一的message id, MQ服务采用空间换时间方式，自动对重复消息过滤处理，保证接口的幂等性。&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.69375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/2KTof9YshwfJHeDicSic4poKsekZn3eJPoYicvCgIBzmWTECgicdLCsBXKsSAhhCSBBBcxuDNiaT6GaQjnia3m0IibBnw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但这个不能根本上解决消息重复问题，即使MQ服务中存储的消息没有重复，但消费端是采用拉取方式，如果重复拉取，也会导致&lt;code&gt;重复消费&lt;/code&gt;，如何解决这种场景问题？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;方案一：只拉取一次（&lt;code&gt;消费者拉取消息后，先提交 offset 后再处理消息&lt;/code&gt;），但是如果系统宕机，业务处理没有正常结束，后面再也拉取不到这些消息，会导致数据不一致，该方案很少采用。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;方案二：允许拉取重复消息，但是消费端自己做幂等性控制。保证只&lt;code&gt;成功消费一次&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;关于幂等技术方案很多，我们可以采用&lt;code&gt;数据表&lt;/code&gt;或&lt;code&gt;Redis缓存&lt;/code&gt;存储处理标识，每次拉取到消息，处理前先校验处理状态，再决定是处理还是丢弃消息。&lt;/p&gt;&lt;pre&gt;&lt;section powered-by=&quot;xiumi.us&quot; data-darkmode-bgcolor-15923650965579=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15923650965579=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15923650965579=&quot;rgb(230, 230, 230)&quot; data-darkmode-original-color-15923650965579=&quot;rgb(0, 0, 0)&quot;&gt;&lt;p data-darkmode-bgcolor-15923650965579=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15923650965579=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15923650965579=&quot;rgb(230, 230, 230)&quot; data-darkmode-original-color-15923650965579=&quot;rgb(0, 0, 0)&quot;&gt;&lt;strong data-darkmode-bgcolor-15923650965579=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15923650965579=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15923650965579=&quot;rgb(230, 230, 230)&quot; data-darkmode-original-color-15923650965579=&quot;rgb(0, 0, 0)&quot;&gt;&lt;span data-style=&quot;caret-color: red; font-size: 15px; color: rgb(0, 122, 170);&quot; class=&quot;js_darkmode__94&quot; data-darkmode-bgcolor-15923650965579=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15923650965579=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15923650965579=&quot;rgb(21, 189, 255)&quot; data-darkmode-original-color-15923650965579=&quot;rgb(0, 122, 170)&quot;&gt;&lt;img class=&quot;__bg_gif rich_pages wxw-img&quot; data-fileid=&quot;100006471&quot; data-ratio=&quot;0.08658008658008658&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/XVbUB37bCmAE7DFc2slTaY80fZSWeicgEfGFjfdZOReaAHD4m0PwmuiazjEzytmy3KTKs6jDiavlmv9xQ4FfvRqoA/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;462&quot;/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot; data-style=&quot;margin: 10px 0em; color: rgb(89, 89, 89); letter-spacing: 0.544px;&quot; class=&quot;js_darkmode__95&quot; data-darkmode-bgcolor-15923650965579=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15923650965579=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15923650965579=&quot;rgb(138, 138, 138)&quot; data-darkmode-original-color-15923650965579=&quot;rgb(89, 89, 89)&quot;&gt;&lt;section data-darkmode-bgcolor-15923650965579=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15923650965579=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15923650965579=&quot;rgb(138, 138, 138)&quot; data-darkmode-original-color-15923650965579=&quot;rgb(89, 89, 89)&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot; data-darkmode-bgcolor-15923650965579=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15923650965579=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15923650965579=&quot;rgb(138, 138, 138)&quot; data-darkmode-original-color-15923650965579=&quot;rgb(89, 89, 89)&quot;&gt;&lt;p data-darkmode-bgcolor-15923650965579=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15923650965579=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15923650965579=&quot;rgb(106, 104, 111)&quot; data-darkmode-original-color-15923650965579=&quot;rgb(106, 104, 111)&quot;&gt;1.&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU1MzE4OTU0OQ==&amp;amp;mid=2247489147&amp;amp;idx=1&amp;amp;sn=51d7ca2857e230d84b477adfdc6afece&amp;amp;chksm=fbf7ffb9cc8076afdac1ecdeb598c816a0b7a4afd65d43a51486b1943d958f903f107263e81f&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;Mysql完结汇总篇（18W字送给大家），完结撒花&lt;/a&gt;&lt;/p&gt;&lt;p data-darkmode-bgcolor-15923650965579=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15923650965579=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15923650965579=&quot;rgb(106, 104, 111)&quot; data-darkmode-original-color-15923650965579=&quot;rgb(106, 104, 111)&quot;&gt;2.&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU1MzE4OTU0OQ==&amp;amp;mid=2247489013&amp;amp;idx=1&amp;amp;sn=c605a4295d989243b7ed0abe18d11c6a&amp;amp;chksm=fbf7fc37cc807521b0c3965602291350416ccd20e88d31ad53c7e7fd802b11af17a3575fe7db&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;如何啃下JVM这座大山，完结撒花（完结篇）&lt;/a&gt;&lt;/p&gt;&lt;p data-darkmode-bgcolor-15923650965579=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15923650965579=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15923650965579=&quot;rgb(106, 104, 111)&quot; data-darkmode-original-color-15923650965579=&quot;rgb(106, 104, 111)&quot;&gt;3.&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU1MzE4OTU0OQ==&amp;amp;mid=2247489181&amp;amp;idx=1&amp;amp;sn=a28c43eb38cdd912336280b5d7dc130e&amp;amp;chksm=fbf7ff5fcc807649a70958cc440cedf900d91956e7d12f80f0271ef7393bbd244e6fa61d5fe3&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;最全的八股文线程池总结（臭不要脸）&lt;/a&gt;&lt;/p&gt;&lt;p data-darkmode-bgcolor-15923650965579=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15923650965579=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15923650965579=&quot;rgb(106, 104, 111)&quot; data-darkmode-original-color-15923650965579=&quot;rgb(106, 104, 111)&quot;&gt;4.&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU1MzE4OTU0OQ==&amp;amp;mid=2247489702&amp;amp;idx=1&amp;amp;sn=e48e74aa3468a57eac549d7acb9e1071&amp;amp;chksm=fbf7f164cc8078724b9082e9e7d4de4fd7e3c46dfebfd8b834e46b7fc88b85408908cc06f9d6&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;手把手教新人调优&lt;/a&gt;&lt;/p&gt;&lt;p data-darkmode-bgcolor-15923650965579=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15923650965579=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15923650965579=&quot;rgb(106, 104, 111)&quot; data-darkmode-original-color-15923650965579=&quot;rgb(106, 104, 111)&quot;&gt;5.&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU1MzE4OTU0OQ==&amp;amp;mid=2247489742&amp;amp;idx=1&amp;amp;sn=a785f0f8ce5a16a92afc9be3753355ad&amp;amp;chksm=fbf7f10ccc80781a1d62580750328ba088c10cf606342fd7f723cff5ba7b122623a2372b8bf5&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;上班摸鱼学习法&lt;/a&gt;&lt;/p&gt;&lt;p data-darkmode-bgcolor-15923650965579=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15923650965579=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15923650965579=&quot;rgb(106, 104, 111)&quot; data-darkmode-original-color-15923650965579=&quot;rgb(106, 104, 111)&quot;&gt;6.&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU1MzE4OTU0OQ==&amp;amp;mid=2247489852&amp;amp;idx=1&amp;amp;sn=590d9ca28365d4f26c4e793701507438&amp;amp;chksm=fbf7f0fecc8079e8af5ee263f6379bd4c7edbb10899930a3239952a93cd9a9bef1c02393c413&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;阻塞队列yyds&lt;/a&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzU1MzE4OTU0OQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/IJUXwBNpKlg4C0ZCBNbxUJHUC82nmVsFT2Vnxf3Wb2cWyy9tl4ciafSCKcKINW0JVhwyaM5pHQlEdIrnSNDNd0Q/0?wx_fmt=png&quot; data-nickname=&quot;黎杜&quot; data-alias=&quot;LDCldc123095&quot; data-signature=&quot;专注Java技术文章输出100年&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/div&gt;

          
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>20cb68f5a4c9dcf4968593b8afe028d2</guid>
<title>提前在开发阶段暴露代码问题，携程 Alchemy 代码质量平台</title>
<link>https://toutiao.io/k/rh6dijf</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;作者简介&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;Lyan，携程资深后端开发工程师，负责自动化测试框架及平台类工具开发，关注Devops、研发效能领域。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p powered-by=&quot;xiumi.us&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;一、背景&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;随着敏捷开发，DevOps开发模式的流行，代码质量分析作为研发质量保证体系的重要组成部分，不仅能有效的降低因频繁迭代带来的故障风险，而且对整个工程团队的效能提升有着巨大的价值。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;携程很久以前就已经开始进行DevOps的建设，通过Gitlab CI/CD在开发提交代码触发的流水线pipeline中引入静态扫描、单元测试、集成测试等流程，在开发过程中打造了一套闭环的代码质量保障体系。其中，在静态代码分析阶段引入了SonarQube，并且通过对原有SonarQube代码规范库中的规范进行筛选和扩展，形成了自己的代码规范库。但是在实际应用过程中，我们发现仍然有一些问题需要优化解决：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;在开发过程中，代码规范只能通过开发人员自我约束，缺少统一的平台对各应用代码的潜在风险问题统一进行分析，且问题难以定位到开发人员进行治理。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;代码单元测试通过率和代码覆盖率都很高，但仍然存在一些在单元测试阶段应被发现的问题未暴露出来，导致上线后出现bug，单元测试用例的质量缺乏有效性及可靠性保证。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;随着项目的发展，开发人员为了避免影响已有功能，在开发过程中大量复制粘贴，导致出现很多难以维护的重复代码，且程序逻辑结构过于复杂，修改逻辑牵一发而动全身，可维护性差。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;代码中充斥着大量的sql拼接，以及一些不规范的写法导致潜在的问题，需要对此类代码进行治理&lt;/span&gt;。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;二、平台介绍&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Alchemy平台是一个代码质量分析平台，提供Infer分析、代码分析、自定义扫描、代码搜索等功能，其中代码质量分析内容包含代码行，sonar问题， infer问题，UT规则，重复代码以及圈复杂度等。用户可以根据自己的需求在平台上进行扫描项配置，并查看应用的代码质量分析结果。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;为了及时获得对提交代码变更的质量反馈，作为DevOps中重要的一环，Alchemy平台与Gitlab CI/CD相结合，将静态代码分析提前至开发提交或合并代码阶段。开发人员提交代码至Gitlab，触发流水线相关任务执行，任务执行完成之后可以对某些指标（如增量代码引入的空指针）设置红线进行卡点，如果指标在指定范围内，允许合并代码并发布，如果指标超过了红线设置范围，则不允许合并代码，开发人员修复问题后再次提交代码进行流水线的集成发布。扫描分析结果可以在Gitlab或者Alchemy平台上展示，帮助开发人员在快速迭代的同时保证代码质量。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3388889&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/kEeDgfCVf1caduONrFAVSLWbfiaYZyiahlNgKiavGlvMAdNuEr5S9TMqmYl0VjsQI3LocicTngUSTyLKB44oLk9cMQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;静态代码扫描流程&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;三、系统架构&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Alchemy平台包含Alchemy-client、Alchemy-service和Alchemy-web。其中，Alchemy-client为扫描脚本，包含Infer分析，UT扫描，重复代码扫描、自定义扫描等功能，集成到Docker镜像中，Alchemy-service提供数据存储、分析等后台服务，且依赖代码搜索服务CodeSearch-Service实现代码搜索功能，Alchemy-web负责页面交互。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;开发人员提交代码，触发Gitlab CI/CD中静态代码分析job在GitRunner中执行，执行时先从Docker仓库下载镜像，启动容器后执行Alchemy-client脚本，脚本会根据平台配置来执行相应的扫描任务，扫描完成后，将结果上传至Alchemy-service，存储到mongodb数据库，最终在前端页面展示分析结果。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6138889&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/kEeDgfCVf1caduONrFAVSLWbfiaYZyiahl1F7SZgt8ZlB9TesZhzSFuB1icWEdJRNjVd7c2rW5ET0FdYHVQQR8UrQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;Alchemy架构图&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;四、功能&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;4.1 Infer分析&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Infer是Facebook出品的一个静态分析工具，可以分析Java、Objective-c或者C代码，报告潜在的问题，包括空指针，资源泄漏等。Alchemy平台将Infer引入代码静态分析阶段，目前已支持全量和增量分析两种模式。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;全量模式需分析应用仓库中的所有代码，能分析出所有代码引入的潜在问题，对于代码量较大的应用，由于需要分析所有代码文件，扫描时间比较长，在一定程度上影响开发发布进度，且对未修改的代码进行了非必要的重复分析，在代码修改量较少的情况下造成资源浪费。因此，我们尝试加入缓存机制，并引入了增量分析模式，增量模式需要获取本次提交修改的文件，在分析阶段只针对这些改动文件进行分析，能大大节省分析时间。Infer分析流程如下：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.9099437&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/kEeDgfCVf1caduONrFAVSLWbfiaYZyiahlUjU4KH3YjablMQoCcLTMoyVLYWbvcB5DO1jMPCEtDLvUOLV9GXspibw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;533&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;Infer分析流程图&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;在分析过程中，首先判断是否为第一次分析，如果没有分析历史记录，则系统默认采用全量模式，否则需判断Infer扫描配置，若配置为全量模式，则分析此代码工程的全部文件，若配置为增量模式，需获取此次提交修改的文件列表，编译过程完成之后，在分析阶段指定文件列表进行分析。获取到分析出的问题列表后，判断问题所在的行是否为修改行，如果是，则记录为本次修改导致的新增问题，否则为历史遗留的全量问题。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;在实际应用中，针对封装的判空方法，通过添加@TrueOnNull或@FalseOnNull注解，可识别对象的判空操作。但对于第三方包的判空方法，如CollectionUtils.isEmpty()， 由于未添加注解，即使添加判空方法，仍会被误识别为空引用。因此，Alchemy平台加入了忽略操作，针对此类问题进行二次确认，避免重复误判。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.1018519&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/kEeDgfCVf1caduONrFAVSLWbfiaYZyiahlW9tibiabLFuYgib3YbmvLVPKh4XMgYaMBuaDeqW1gicqhqGrLA3Oib5HKTw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;Infer误判结果&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;4.2 UT规则扫描&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;单元测试是DevOps流程中一个非常重要的环节，我们可以利用通过率和代码覆盖率等指标来衡量单元测试用例的完整程度，却很难保证用例的有效性。阿里巴巴java开发手册规定，单元测试不允许使用System.out来进行人肉验证，必须使用断言assert来验证。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;在实际的开发过程中，开发人员把主要的时间用在写业务逻辑代码上，在编写单元测试用例时，往往容易忽略对结果的验证，虽然通过率和代码覆盖率很高，但上线后仍然出现未对接口结果进行验证而导致严重问题的情况。无效的单元测试用例包含以下几种：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;通过扫描空断言、空函数、伪断言等问题，能判断该用例是否对代码逻辑进行必要的验证。Alchemy平台支持单元测试用例的有效性验证，目前，平台支持Java、Kotlin、Groovy和Nodejs，同时也支持全量和增量2种扫描结果，全量结果即为所有测试用例中不满足规则的用例，增量结果为本次提交修改的测试用例中不满足规则的用例。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.3802083&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/kEeDgfCVf1caduONrFAVSLWbfiaYZyiahlQATfQfoEicTfz6S3bRSaic1DolmhnDszlY4HibSaXhevianjhiclI4HbQmA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;768&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;UT扫描流程&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;对单个单元测试文件的扫描流程如图。首先根据文件后缀判断语言类型，然后根据不同语言类型规则获取该文件中的用例信息，包含case名称、起止行、作者、最近修改时间、函数内容等，针对函数内容，先判断用例是否有断言，如果有，则判断是否为伪断言，如果未断言或者被判为伪断言，还需进一步根据用例的起止行，结合本次提交的改动信息，分析该用例是否为增量改动的用例，如果是则标记为增量问题，最后将结果推送给gitlab，在合并代码或发布时根据红线配置进行卡点。扫描结果如图所示。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.362037&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/kEeDgfCVf1caduONrFAVSLWbfiaYZyiahlBpHeiciaK0AcqGnTpDTUicxxNLyXXiaFOd02OtunczGX9YwTL7DNsTGxSg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;UT扫描结果&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;4.3 重复代码扫描&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;重复代码即为重复或近似的代码，在开发过程中，开发人员为了避免影响现有功能，使用复制粘贴快速完成开发任务，导致出现大量的重复代码。重复代码不仅让代码量大增，造成编译速度慢，而且占用大量存储空间，如果想要修改其中一段代码逻辑，则需要同时修改多个地方，容易遗漏，可维护性差。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;当前市面上有很多代码检测工具，如Simian，PMD-CPD，CloneDR等，由于在实现算法上有所不同，不同工具所能检测的重复代码类型也不尽相同。我们利用PMD-CPD扫描代码仓库，可以检测出单文件或多个文件中除了空格、注释、换行以及变量名以外内容完全一致的代码段信息，这些信息包含文件路径、代码段内容、起止行以及作者信息，详情结果如图所示。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5935185&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/kEeDgfCVf1caduONrFAVSLWbfiaYZyiahlgyictcS4yty7BWC8yedSft3t0xZY4VGPF5RK8XicMF7ZEfGZSTEriaJNg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;重复代码详情结果&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;4.4 自定义规则扫描&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Alchemy支持对自定义规则的扫描，通过配置自定义正则表达式和扫描范围，识别代码文件中满足配置规则的代码段，可用于扫描代码中的拼接SQL，敏感词等，并且可将不合规的代码定位到相关开发人员。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.6731794&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/kEeDgfCVf1caduONrFAVSLWbfiaYZyiahlnrSnCEG06VYUvMBOicns8RApecmW46ow8GicqjCSzBS9um93icW5QW0Gg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;563&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;自定义扫描流程&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;单个文件扫描流程如图，首先判断文件是否在扫描范围内，若不在则直接跳转扫描下一个文件，否则读取文件内容，同时根据文件类型获取对应的自定义规则，匹配满足规则的代码段信息，包含代码段内容、严重程度、起止行、作者等。在某些场景下，需要设置子规则进行二次匹配，比如扫描update未指定where条件的sql语句，可先根据规则找到update语句，然后根据子规则判断是否带where条件，最终记录二次匹配的结果。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;4.5 代码分析&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;使用不同工具统计的代码质量指标可能分散在不同的平台，对这些指标进行全面分析的过程中难免会有所遗漏，特别是对于未设置发布卡点的指标，开发人员可能并不会关注它们，导致代码存在大量的潜在问题未被分析治理。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Alchemy代码分析模块可以对代码不同维度的指标进行统计分析，包括代码行、单元测试、infer问题、Sonar问题、重复代码、圈复杂度等。用户可以在代码分析页面查看各维度问题分布情况，从而对项目的整体风险指标进行更全面的分析，可以根据问题的严重程度设置优先级进行针对性的治理。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4305556&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/kEeDgfCVf1caduONrFAVSLWbfiaYZyiahlVuhdkNRf3jVZiclOAicX6DY8icoLDYfLv1C3utibZNjibsQogVSG3ricxrfw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;代码分析结果&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;4.6 代码搜索&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;在开发过程中，对于一些公共操作如中间件的使用方式，开发人员可能需要四处寻找接入文档。Alchemy提供代码搜索功能，可以帮助开发人员根据关键词来查找收录项目中的代码使用示例，用户可以根据项目仓库、代码语言以及作者等条件进行细分查询。在编码过程中，命名规范是一个容易被忽视的问题，使用Alchemy的变量命名功能，用户可以根据不同语言，搜索中英文关键词来获取推荐的规范命名参考，能极大地提高开发效率。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;187&quot; data-backw=&quot;538&quot; data-ratio=&quot;0.3484375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/kEeDgfCVf1cacicDsGarMwdnvCvuPLDUUOGg8TMGcq3VicNBC70t0rFTFAiaM9xOrQQa2kg5icNVwqBmo9icia3WY7zw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;span/&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;代码搜索结果&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;五、结束语&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;在本文中，我们介绍了Alchemy平台提供的代码静态分析，代码探索以及通过与Gitlab CI/CD集成带来的持续集成能力，可以在开发阶段暴露出更多的代码潜在问题和风险，并及时反馈给相关人员。目前携程酒店已接入项目800+，且在开发提交代码和发布阶段将分析的潜在问题接入了卡点流程。在后续的工作中，我们将从以下几个方向进行进一步的优化：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;在代码分析层面支持更多语言；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;开发IDE插件，在编码阶段实时扫描代码；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;继续深挖代码风险指标，并引入评估机制。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;p powered-by=&quot;xiumi.us&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;【推荐阅读】&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/kEeDgfCVf1caduONrFAVSLWbfiaYZyiahlS0EODBqcWr1u8KlT9ib9ZMVNRHxLiaINiaF69ibyke6Rxqd5DQ2eu45sCQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt; “携程技术”公众号&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;  分享，交流，成长&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>