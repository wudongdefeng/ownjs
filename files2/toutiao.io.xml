<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>e9e5cf1b3cef89e3768c589dbe75ff8d</guid>
<title>项目经理必备的 25 张管理分析卡</title>
<link>https://toutiao.io/k/9grr194</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content js_underline_content              autoTypeSetting24psection&amp;#10;            &quot; id=&quot;js_content&quot;&gt;&lt;p data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;span&gt;在做项目管理时，层出不穷的问题需要项目经理作出各种决策和分析，以便推动问题解决。&lt;/span&gt;&lt;span&gt;如果项目经理能够掌握并灵活使用以下这25个管理分析卡片，那么分析和解决问题的效率都会大大提高——&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.787037037037037&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EKK4IJyFJIsnf5hwK5sKqgM3FfiaNHicia2I5YGDZcaQ9mthAMGYYAXib9Lgd0h2KM7OcywricqRZ17FFORwf69hoqg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;决策&lt;/span&gt;&lt;span&gt;树是在已知各种情况发生概率的基础上，通过构成决策树来求取净现值的期望值大于零的概率，评价项目风险，判断其可行性的决策分析方法，是直观运用概率分析的一种图解法。&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.787037037037037&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EKK4IJyFJIsnf5hwK5sKqgM3FfiaNHicia2u9iaMcibsvR2bDVjWGb12mw2l43UUassh8uic2nNpyLz9XicDPoUtkd3IA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;鱼骨图，帮助发现问题根本原因的分析方法，问题或缺陷（即后果）标在“鱼头”处，在鱼骨上长出鱼刺，上面按出现机会多寡列出产生问题额可能原因，有助于说明各个原因是如何影响后果的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.787037037037037&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EKK4IJyFJIsnf5hwK5sKqgM3FfiaNHicia26HdRRDroqaQKlQwt4zxmDGrkJHFAnzkg10DOp0JTBHGkGpNKFlkFEQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;P&lt;/span&gt;&lt;span&gt;DCA&lt;/span&gt;&lt;span&gt;循环是美国质量管理专家休哈特博士首先提出的，由戴明采纳、宣传并获得普及，所以又叫作“戴明环”。全面质量管理的思想基础和方法依据就是PDCA循环。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.787037037037037&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EKK4IJyFJIsnf5hwK5sKqgM3FfiaNHicia2rZBCNEGDuIGkwhmYiaYYgAfqoL4umRRulqay51GsHHmGBJIgZ3NiaickQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;GREP模型是进行组织内环境分析的有效工具，是分析企业竞争优势的内生战略分析法，即将企业的战略分为四个部分构成：治理结构、资源、企业家、产品或服务。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.787037037037037&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EKK4IJyFJIsnf5hwK5sKqgM3FfiaNHicia2yA08hZE9GN6WswictRiczZXEvas5viaCzUl6saMXeD6vCedNYrpXjlXwg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;麦肯锡7S模型指出，企业在发展过程中必须全面的考虑各方面的情况，包括结构（structure）、制度（system）、风格（style）、员工（staff）、技能（skill）、战略（strategy）、共同的价值观（shared value）。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.787037037037037&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EKK4IJyFJIsnf5hwK5sKqgM3FfiaNHicia2qiblA8icP4wiaYSb07RKdicU72ibF4j3ibl3e9RNWLN3OKFxRbp3WnFA4DAA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;行业的生命周期指行业从出现到完全退出社会经济活动所经历的时间。行业的生命周期曲线忽略了具体的产品型号、质量、规格等差异，仅从整个行业的角度考虑问题。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.787037037037037&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EKK4IJyFJIsnf5hwK5sKqgM3FfiaNHicia2AXyC7prIb3z4AgMs5PrrOdGIgIDeQwXsfJCLvLKyyUCPgd7Ts868MQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;SWOT分析就是基于内外部竞争环境和竞争条件下的态势分析，通过这种方法，可以对研究对象所处的情境进行全面、系统、准确的研究，从而根据研究结果制定相应的发展战略、计划以及对策等。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.787037037037037&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EKK4IJyFJIsnf5hwK5sKqgM3FfiaNHicia2prUc5YwrmFuyoicnOgMPdddGRjDptfPcaFwptRiaUd3uL7dU7ls9iafjg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;即&lt;/span&gt;&lt;span&gt;目标与关键成果法，是一套明确和跟踪目标极其完成情况的工作方法，旨在确保员工共同工作，并集中精力做出可衡量的贡献。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.787037037037037&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EKK4IJyFJIsnf5hwK5sKqgM3FfiaNHicia2YHfwc4GoJHbnnKyN6FZ9sbFGaXwfclzuclqVb5SCT2WDDicaNMIdS7Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;SCQA即情景（Situation）、冲突（Complication）、问题（Question）、答案（Answer），它能够引导你站在消费者的角度考虑问题，提升消费者的兴趣和接受意愿。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.787037037037037&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EKK4IJyFJIsnf5hwK5sKqgM3FfiaNHicia2hWcyPicLP1UHIrDm0lT5TMSh2MyfXnXG9dIJqFkuiaibo388oEfUv7FvQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;“&lt;/span&gt;&lt;span&gt;MECE”是对于一个重大的议题，能够做到不重叠、不遗漏的分类，而且能够借此有效把握问题的核心，最终有效解决问题。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.787037037037037&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EKK4IJyFJIsnf5hwK5sKqgM3FfiaNHicia2sQTNYUlGoJJUTK4AOKSouLTicshribOlPYAubWPCS9iaiaP7XYUTcPu0jw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;通用矩阵法可以根据事业单位在市场上的实力和所在时长的吸引力对这些事业单位进行评估，也可以表述一个公司的事业单位组合判断其强项和弱点。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.787037037037037&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EKK4IJyFJIsnf5hwK5sKqgM3FfiaNHicia2M4kkYnMHdUVOUbj1oTghicklxCp0WRYTYNn0tLENxzxC0LTcgBclic9A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;波士顿矩阵认为，一般决定产品结构的基本因素有两个：即市场引力与企业实力，其中最主要的&lt;/span&gt;&lt;span&gt;是&lt;/span&gt;&lt;span&gt;反映市场引力的综合指标——销售增长率，这是决定企业产品结构是否合理的外在因素。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.787037037037037&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EKK4IJyFJIsnf5hwK5sKqgM3FfiaNHicia2iaLeVZ13ZXvElg6R7uAEkpGiboM5YGpFsI7waiaflgGGEvU80aHgND7OA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;波特的五力模型由迈克尔·波特提出，他认为行业中存在决定竞争规模和程度的五种力量，这五种力量综合起来影响着产业吸引力和现有企业的竞争战略决策。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.787037037037037&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EKK4IJyFJIsnf5hwK5sKqgM3FfiaNHicia2hiaWx0Lg7dKlbaybW1r8aDgoyjR334ozCf2sEZtoGRlQZ1CtEO3rVSA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这是一种在企业竞争力“资源观”的观照下对企业内部的静态属性和外部的动态属性做系统分析的工具，从而对企业目前的竞争力有全面的认识。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.787037037037037&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EKK4IJyFJIsnf5hwK5sKqgM3FfiaNHicia2GHCL6sQ9VWVRqGoGAfXs34IcShldtLptLr2t7CugvgLzSThkM8FUPQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这种方法把企业内外价值增加的活动分为基本活动和支持性活动，实际上只有某些特定的活动才真正创造价值，这就是价值链上的“战略环节”。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.787037037037037&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EKK4IJyFJIsnf5hwK5sKqgM3FfiaNHicia2Zf2A3fN3yYxA65iakCsBfy7k9voiakDAxUaIohkUMTAnyFOibpFIs7Xyg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这是对企业经营状况进行系统分析的一种有效方法，从经营收益性、安全性、流动性、生产性、成长性等五个方面分析企业的经营成果。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.787037037037037&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EKK4IJyFJIsnf5hwK5sKqgM3FfiaNHicia29iaqraTQ0gV6KYct6h0AD070V0Bf4QV630L9ZlFebwl6kwHFhDID4wQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.787037037037037&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EKK4IJyFJIsnf5hwK5sKqgM3FfiaNHicia2zVfq6lljb5A6w6vAMIzQHHickU64O3JuTCRhX6e8DAd0VIzWGWHfAFQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;战略地位与行动评价矩阵主要分析企业外部环境及企业应该采用的战略组合。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.787037037037037&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EKK4IJyFJIsnf5hwK5sKqgM3FfiaNHicia2Yeg19Eb7nJSl39ib4bw6MdyjvO4iat8G9J3ibH7sRfbFBFl2ZIElvichdg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;关键路径是指设计中从输入到输出经过的延时最长的逻辑路径，优化关键路径是一种提高工作速度的有效方法。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.787037037037037&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EKK4IJyFJIsnf5hwK5sKqgM3FfiaNHicia2I5byA6JE7k28eu2eSJmXczG8BJHbiaNdVuZIHklUXWBjYYp9ORPu4icQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;5W2H分析法又叫七问分析法，简单方便、易于使用，被广泛用于企业管理和技术活动，对于决策和执行性的活动措施也非常有帮助，更有助于弥补考虑问题的疏漏。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.787037037037037&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EKK4IJyFJIsnf5hwK5sKqgM3FfiaNHicia2Le61N3UH6viboREMhefSGDCd5ucbhiabNEE0KMEV6vdOjKH6wv9Y791Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;直方图又称”质量分布图“，是一种统计报告图，一般用横轴表示数据类型，纵轴表示分布情况。通过直方图对所收集的貌似无序的数据进行处理，可以反映出产品质量的分布情况，判断和预测产品质量及不合格率。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.787037037037037&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EKK4IJyFJIsnf5hwK5sKqgM3FfiaNHicia2aEqicI3qrK3eIYkHaibLWtVnLLDUBkQ4rWGtPIDpI4udyByibJbu3KBbw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;RACI是一个相对直观的模型，用以明确组织变革过程中的各个角色及其相关责任，分配个每项工作的资源可以是个人或小组，项目经理也可根据项目需要，选择“领导”或“资源”等适用词汇。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.787037037037037&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EKK4IJyFJIsnf5hwK5sKqgM3FfiaNHicia2hLU2MWAgUdAIuwYAyY0DicN0hwD4U030TmvsBOqia9l11PF5F9UI833w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;即目标管理原则，这是使管理者的工作由被动变主动的一个很好的手段，不但能让员工更明确高效的工作，还能保证绩效考核的公平、公正与公开。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.787037037037037&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EKK4IJyFJIsnf5hwK5sKqgM3FfiaNHicia2QzjkDXZMicSCD7kib2IlTU8icg78btiaCP5QRXojXApIVuXyRIxy8knVbQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;该理论&lt;/span&gt;&lt;span&gt;由&lt;/span&gt;&lt;span&gt;日本战略研究的领军人物大前研一提出，他强调成功的战略有三个关键因素，分别是公司自身、顾客和竞争者，在制定任何经营战略时，都必须考虑这三个因素。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.787037037037037&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EKK4IJyFJIsnf5hwK5sKqgM3FfiaNHicia2rLviaQR0y49jNqsjT6SiaLLlnoGt6V5pfUeh42c7KJXPI8Cz260pInhA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;span&gt;PEST分析是指对宏观环境的分析，P是政治（Politics）、E是经济（Economy）、S是社会（Society）、T是技术（Technology）。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;◆◆◆&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;以上就是比较常用的25张种管理分析卡片，要想让这些方法发挥出最大的效果，关键在于项目经理能否灵活使用，我们建议大家可以收藏文章或把图片保存下来，方便随时查阅学习哦&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;-THE END-&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;38806&quot;&gt;&lt;section&gt;&lt;section data-bcless=&quot;darken&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong data-brushtype=&quot;text&quot;&gt;近期热文&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong data-brushtype=&quot;text&quot;&gt; &lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2NTE3NTgyNA==&amp;amp;mid=2650943423&amp;amp;idx=1&amp;amp;sn=6f51525df240db7b83df8f4393f92d40&amp;amp;chksm=f157d9c0c62050d6768c202217aae2f50dfdf7d466b5b7641ff69d962ceab59523dd586385ac&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;能做项目经理的个个都是人才&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;能做项目经理的个个都是人才&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2NTE3NTgyNA==&amp;amp;mid=2650943099&amp;amp;idx=1&amp;amp;sn=a96b8ce5065ea9037d105eb973862efa&amp;amp;chksm=f157d804c6205112227406612f1f79dfe2a6207db6796364e72fe6e56b8f69ee874aa0b576d4&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;小心，别让敏捷，搞垮你的团队！&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;小心，别让敏捷，搞垮你的团队！&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2NTE3NTgyNA==&amp;amp;mid=2650943046&amp;amp;idx=1&amp;amp;sn=505e7946f10263e39a8bd4770cec55df&amp;amp;chksm=f157d839c620512faaeb329dd657d9c05802be5aa6416064b02cc396da93ced170f6fcdeacf2&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;PM可收藏，华为内部【流程管理体系】详解&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;PM可收藏，华为内部【流程管理体系】详解&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2NTE3NTgyNA==&amp;amp;mid=2650942725&amp;amp;idx=1&amp;amp;sn=f0c22c850b119832796c2a46282e280c&amp;amp;chksm=f157db7ac620526cf4663288863dc72f1197f6fed734147852d2708a94fc8c5e92e2a66d22a7&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;项目经理长点心吧，小心办公室里的任何人！&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;项目经理长点心吧，小心办公室里的任何人！&lt;/a&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;mp-common-profile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-weui-theme=&quot;light&quot; data-id=&quot;MzI2NTE3NTgyNA==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/EKK4IJyFJIsNhx9CkDnx7PsAXGw6oHDUq1cpFKtAuEFWyWgON8W5BU7CHKibM5Y8VgDSOHaYSw8ibEC4UXJ7WCmA/0?wx_fmt=png&quot; data-nickname=&quot;PM圈子&quot; data-alias=&quot;pm1178&quot; data-signature=&quot;洞察150W项目经理的苦与乐&quot; data-from=&quot;0&quot; data-is_biz_ban=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;mp-style-type data-value=&quot;3&quot;/&gt;&lt;/p&gt;&lt;/div&gt;

          
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>1ae27bdd50b818791e6465a5b7a44fe5</guid>
<title>GPT-4 加持，GitHub Copilot X：AI 赋能的开发</title>
<link>https://toutiao.io/k/pt1unof</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;RichText ztext Post-RichText css-1g0fqss&quot; options=&quot;[object Object]&quot;&gt;&lt;p data-first-child=&quot;&quot;/&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://link.zhihu.com/?target=https%3A//github.blog/2023-03-22-github-copilot-x-the-ai-powered-developer-experience/&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-text=&quot;GitHub Copilot X: The AI-powered developer experience | The GitHub Blog&quot; class=&quot;LinkCard new&quot;&gt;&lt;span class=&quot;LinkCard-contents&quot;&gt;&lt;span class=&quot;LinkCard-title loading&quot; data-text=&quot;true&quot;/&gt;&lt;span class=&quot;LinkCard-desc loading&quot;/&gt;&lt;/span&gt;&lt;span class=&quot;LinkCard-image LinkCard-image--default&quot;/&gt;&lt;/a&gt;&lt;h2&gt;GitHub Copilot X&lt;/h2&gt;&lt;p data-pid=&quot;7je33TQF&quot;&gt;虽然 2021 年发布的 Codex API 已不再更新，作为产品的 GtiHub Copilot 还将继续进化，并利用 GPT-4 支持新特性。&lt;/p&gt;&lt;p data-pid=&quot;cKYlcYBy&quot;&gt;GitHub Copilot 正在尝试带来聊天和语音交互，支持拉动请求（Pull Request），回答关于文档的问题，并采用 OpenAI 的 GPT-4 以获得更个性化的开发者体验，即四项正在进行预览的特性：&lt;/p&gt;&lt;ul&gt;&lt;li data-pid=&quot;U79NCiKb&quot;&gt;&lt;b&gt;GitHub Copilot Chat&lt;/b&gt;：为编辑器带来了一个聊天界面，专注于开发人员的场景，并与 VS Code 和 Visual Studio 进行了原生整合。这远比建议代码的作用要大得多。GitHub Copilot Chat 不仅仅是一个聊天窗口。它能识别开发者输入的代码，显示的错误信息，并深入嵌入到 IDE 中。开发者可以得到深入的分析和解释，了解代码块要做什么，生成单元测试，甚至得到对错误的建议修复。&lt;/li&gt;&lt;li data-pid=&quot;71vpKQml&quot;&gt;&lt;b&gt;Copilot for Pull Requests&lt;/b&gt;：人工智能生成的拉动请求描述（descriptions for Pull Request）的技术预览。这项新功能由 OpenAI 的新 GPT-4 模型驱动，并通过组织管理员和个人仓库所有者可以安装的 GitHub 应用程序，在拉动请求描述中增加了对 AI 驱动的标签的支持。这些标签是由 GitHub Copilot 根据更改的代码自动填写的。然后，开发人员可以审查或修改建议的描述。&lt;/li&gt;&lt;li data-pid=&quot;0rQs-xfe&quot;&gt;&lt;b&gt;Copilot for Docs&lt;/b&gt;：使用聊天界面为用户提供人工智能生成的关于文档的问答，包括开发者关于他们正在使用的语言、框架和技术的问题。GitHub 从 React、Azure Docs 和 MDN的文档开始，因此可以与这些项目的开发者和用户一起快速学习和迭代。&lt;/li&gt;&lt;li data-pid=&quot;s9RT3Nr8&quot;&gt;&lt;b&gt;Copilot for the command line interface (CLI)&lt;/b&gt;：除了编辑器和 pull request 之外，终端是开发者花费时间最多的地方。但即使是最熟练的开发者也需要翻阅许多页面来记住许多命令的精确语法。GitHub Copilot CLI 可以组成命令和循环，并抛出晦涩的查找标志来满足你的查询。&lt;/li&gt;&lt;/ul&gt;&lt;hr/&gt;&lt;h2&gt;GitHub Next&lt;/h2&gt;&lt;p data-pid=&quot;BalxUswz&quot;&gt;现在，这几项功能提供 waitlist 可加入。更多的 GitHub 技术预览还可以在以下网页找到。&lt;/p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://link.zhihu.com/?target=https%3A//githubnext.com/&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-image=&quot;https://pic3.zhimg.com/v2-46501e97975fe3d9a191fb745511b112_180x120.jpg&quot; data-image-width=&quot;1200&quot; data-image-height=&quot;630&quot; data-text=&quot;GitHub Next&quot; class=&quot;LinkCard new&quot;&gt;&lt;span class=&quot;LinkCard-contents&quot;&gt;&lt;span class=&quot;LinkCard-title loading&quot; data-text=&quot;true&quot;/&gt;&lt;span class=&quot;LinkCard-desc loading&quot;/&gt;&lt;/span&gt;&lt;span class=&quot;LinkCard-image LinkCard-image--default&quot;/&gt;&lt;/a&gt;&lt;p/&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>b5142f232d114688d2b34d02b2fa8d4e</guid>
<title>当你对 redis 说你中意的女孩是 Mia</title>
<link>https://toutiao.io/k/6p23apk</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;preview&quot;&gt;&lt;h1&gt;作者：京东科技 周新智&lt;/h1&gt;

&lt;h1&gt;一、Redis&lt;/h1&gt;

&lt;p&gt;众所周知，Redis = Remote Dictionary Server，即远程字典服务。&lt;/p&gt;

&lt;p&gt;是一个开源的使用ANSI C语言编写、支持网络、可基于内存亦可持久化的日志型、Key-Value数据库，并提供多种语言的API。&lt;/p&gt;

&lt;h1&gt;二、当你对 redis 说你中意的女孩是 Mia 时&lt;/h1&gt;

&lt;h2&gt;1、set myLove Mia&lt;/h2&gt;

&lt;p&gt;redis 会将 key：myLove value：Mia&lt;/p&gt;

&lt;p&gt;包装成一个 dictEntry 对象、一个 redisObject 对象，如下图所示：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://storage.jd.com/shendengbucket1/2022-07-08-17-40YvDAsILGIzdBFtl.jpg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;•&lt;code&gt;dictEntry&lt;/code&gt;：众所周知，Redis是Key-Value数据库，因此对每个键值对都会有一个dictEntry，里面存储了指向Key和Value的指针；next指向下一个dictEntry，与本Key-Value无关。&lt;/p&gt;

&lt;p&gt;•&lt;code&gt;Key&lt;/code&gt;：图中右上角可见，Key（&quot;myLove&quot;）并不是直接以字符串存储，而是存储在SDS结构中。&lt;/p&gt;

&lt;p&gt;•&lt;code&gt;redisObject&lt;/code&gt;：Value(&quot;Mia&quot;)既不是直接以字符串存储，也不是像Key一样直接存储在SDS中，而是存储在redisObject中。实际上，不论Value是5种类型的哪一种，都是通过redisObject来存储的；而redisObject中的type字段指明了Value对象的类型，ptr字段则指向对象所在的地址。不过可以看出，字符串对象虽然经过了redisObject的包装，但仍然需要通过SDS存储。&lt;/p&gt;

&lt;h3&gt;1.1、对 myLove 进行对象封装&lt;/h3&gt;

&lt;h4&gt;1.1.1、dictEntry&lt;/h4&gt;

&lt;p&gt;redis内部整体的存储结构是一个大的hashmap，内部是数组实现的hash，key冲突通过挂链表去实现，每个dictEntry为一个key/value对象，value为定义的redisObject。&lt;/p&gt;

&lt;p&gt;结构图如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://storage.jd.com/shendengbucket1/2022-07-08-17-42Rhu6GoQtKwvu9Qm.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;dictEntry是存储key-&amp;gt;value的地方，再让我们看一下dictEntry结构体&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/*
 * 字典
 */
typedef struct dictEntry {
    // 键
    void *key;
    // 值
    union {
        // 指向具体redisObject
        void *val;
        // 
        uint64_t u64;
        int64_t s64;
    } v;
    // 指向下个哈希表节点，形成链表
    struct dictEntry *next;
} dictEntry;

&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;1.1.2、对象封装 redisObject&lt;/h4&gt;

&lt;p&gt;我们接着再往下看redisObject究竟是什么结构的&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/*
 * Redis 对象
 */
typedef struct redisObject {
    // 类型 4bits
    unsigned type:4;
    // 编码方式 4bits
    unsigned encoding:4;
    // LRU 时间（相对于 server.lruclock） 24bits
    unsigned lru:22;
    // 引用计数 Redis里面的数据可以通过引用计数进行共享 32bits
    int refcount;
    // 指向对象的值 64-bit
    void *ptr;
} robj;

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;*ptr指向具体的数据结构的地址；type表示该对象的类型，即String,List,Hash,Set,Zset中的一个，但为了提高存储效率与程序执行效率，每种对象的底层数据结构实现都可能不止一种，encoding 表示对象底层所使用的编码。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;redis对象底层的八种数据结构：&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; REDIS_ENCODING_INT（long 类型的整数）
 REDIS_ENCODING_EMBSTR embstr （编码的简单动态字符串）
 REDIS_ENCODING_RAW （简单动态字符串）
 REDIS_ENCODING_HT （字典）
 REDIS_ENCODING_LINKEDLIST （双端链表）
 REDIS_ENCODING_ZIPLIST （压缩列表）
 REDIS_ENCODING_INTSET （整数集合）
 REDIS_ENCODING_SKIPLIST （跳跃表和字典）

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;查看 redisObject 详细信息 ：&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# 查看 key对应value的 redisObject 类型
type key
    type myLove

# 查看 key对应value的redisObject 详细信息
debug object key
     debug object myLove

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;value 为 string 、int 类型是 redisObject 中的 type、encoding 不同表现形式&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Value 为 string 类型时：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://storage.jd.com/shendengbucket1/2022-07-08-17-46dUTN11rPplovEaq6.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Value 为 int类型时：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://storage.jd.com/shendengbucket1/2022-07-08-17-46o20fZ866E5WQLn46N.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;以上两种不同 value 类型，type 相同，encoding 不同&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;1.2、对 myLove 进行持久化&lt;/h3&gt;

&lt;h4&gt;1.2.1、rdb 文件写入&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;https://storage.jd.com/shendengbucket1/2022-07-08-17-4779uwjNLXbqyWDHa.jpg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;h4&gt;1.2.2、aof 缓存写入 文件保存&lt;/h4&gt;

&lt;p&gt;默认情况下 没有开启 AOF ( append only file)&lt;/p&gt;

&lt;p&gt;开启 AOF 持久化后，每执行一条会更改 redis 数据的命令，redis就会将写入、修改、删除命令写入到硬盘中的 AOF 文件（当然并不是立即写入文件，而是立即写入aof缓存中，再根据aof配置的数据持久化条件进行写入），这一过程显然会降低 redis 的性能，但大部分情况下这个影响是能够接受的，&lt;/p&gt;

&lt;p&gt;另外使用快的硬盘可以提高 AOF 的性能。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;配置 redis.conf&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# 可以通过修改redis.conf配置文件中的appendonly参数开启 
    appendonly yes
# AOF文件的保存位置和RDB文件的位置相同，都是通过dir参数设置的。 dir ./
# 默认的文件名是appendonly.aof，可以通过appendfilename参数修改 appendfilename appendonly.aof

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;AOF文件中存储的是redis的命令 原理&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Redis 将所有对数据库进行过写入的命令(及其参数)记录到 AOF 文件， 以此达到记录数据库状态的 目的， 为了方便起见， 我们称呼这种记录过程为同步。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;同步命令到 AOF 文件的整个过程可以分为三个阶段:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;命令传播:Redis 将执行完的命令、命令的参数、命令的参数个数等信息发送到 AOF 程序中。 缓存追 加:AOF 程序根据接收到的命令数据，将命令转换为网络通讯协议 RESP 的格式，然后将协议内容追加到服务器的 AOF 缓存中。 文件写入和保存: AOF 缓存中的内容被写入到 AOF 文件末尾，如果设定的 AOF 保存条件被满足的话， fsync 函数或者 fdatasync 函数会被调用，将写入的内容真正地保存到磁盘中。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;命令传播:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;当一个 Redis 客户端需要执行命令时， 它通过网络连接， 将协议文本发送给 Redis 服务器。服务器在 接到客户端的请求之后， 它会根据协议文本的内容， 选择适当的命令函数， 并将各个参数从字符串文 本转换为 Redis 字符串对象( StringObject )。每当命令函数成功执行之后， 命令参数都会被传播到 AOF 程序。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;缓存追加：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;当命令被传播到 AOF 程序之后， 程序会根据命令以及命令的参数， 将命令从字符串对象转换回原来的 协议文本。协议文本生成之后， 它会被追加到 redis.h/redisServer 结构的 aof_buf 末尾。&lt;/p&gt;

&lt;p&gt;redisServer 结构维持着 Redis 服务器的状态， aof_buf 域则保存着所有等待写入到 AOF 文件的协 议文本。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;RESP 协议：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Redis客户端使用RESP(Redis的序列化协议)协议与Redis的服务器端进行通信。 虽然该协议是专门为 Redis设计的，但是该协议也可以用于其他 客户端-服务器 (Client-Server)软件项目。&lt;/p&gt;

&lt;p&gt;可以通过特殊符号来区分出数据的类型：&lt;/p&gt;

&lt;p&gt;单行回复：以+号开头。&lt;/p&gt;

&lt;p&gt;错误回复：以-号开头。&lt;/p&gt;

&lt;p&gt;整数回复：以:号开头。&lt;/p&gt;

&lt;p&gt;批量回复：以$号开头。&lt;/p&gt;

&lt;p&gt;多条批量回复：以*号开头。&lt;/p&gt;

&lt;p&gt;1、间隔符号，在Linux下是\r\n，在Windows下是\n&lt;/p&gt;

&lt;p&gt;2、简单字符串 Simple Strings, 以 &quot;+&quot;加号 开头&lt;/p&gt;

&lt;p&gt;3、错误 Errors, 以&quot;-&quot;减号 开头&lt;/p&gt;

&lt;p&gt;4、整数型 Integer， 以 &quot;:&quot; 冒号开头&lt;/p&gt;

&lt;p&gt;5、大字符串类型 Bulk Strings, 以 &quot;$&quot;美元符号开头，长度限制512M 6、数组类型 Arrays，以 &quot;*&quot;星号开头 用SET命令来举例说明RESP协议的格式。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;实际发送的请求数据:&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;redis&amp;gt; SET myLove &quot;Mia&quot;
&quot;OK&quot;
*3\r\n$3\r\nSET\r\n$6\r\nmyLove\r\n$3\r\nMia\r\n
*3
$3
SET
$5
mykey
$5
Hello

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;实际收到的响应数据:&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;+OK\r\n

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;文件写入和保存：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;每当服务器常规任务函数被执行、 或者事件处理器被执行时， aof.c/flushAppendOnlyFile 函数都会被 调用， 这个函数执行以下两个工作:&lt;/p&gt;

&lt;p&gt;WRITE:根据条件，将 aof_buf 中的缓存写入到 AOF 文件。 SAVE:根据条件，调用 fsync 或 fdatasync 函数，将 AOF 文件保存到磁盘中。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://storage.jd.com/shendengbucket1/2022-07-08-17-50Mi9TQLEsTx50lHIw.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;h2&gt;2、给你的爱一个期限 expire myLove 999999999&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://storage.jd.com/shendengbucket1/2022-07-08-17-51vuqnWp51K6MhZNNR.jpg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;从图可知，在redis的数据库中，redisDb结构中的expires字典中保存了数据库中所有键的过期时间，所以叫过期字典。&lt;/p&gt;

&lt;p&gt;过期字典的key是一个指针，指向键空间的某个键对象（就是数据库键）&lt;/p&gt;

&lt;p&gt;过期字典的value是一个long类型的整数，这个整数保存了键所指向的数据库键的过期时间，一个毫秒精度的UNIX时间戳&lt;/p&gt;

&lt;p&gt;过期键判定&lt;/p&gt;

&lt;p&gt;通过过期字典，我们可以得到一个key是否过期：&lt;/p&gt;

&lt;p&gt;判断key是否存在于过期字典中&lt;/p&gt;

&lt;p&gt;通过过期字典拿到key的过期时间，判断当前UNIX时间戳是否大于key时间&lt;/p&gt;

&lt;p&gt;过期key如何删除&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;惰性删除策略&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;过期键的惰性删除策略由db.c/expireIfNeeded函数实现，所有读写数据库的Redis命令在执行之前都会调用expireIfNeeded函数对输入键进行检查：&lt;/p&gt;

&lt;p&gt;如果输入键已经过期，那么expireIfNeeded函数将输入键从数据库中删除。&lt;/p&gt;

&lt;p&gt;如果输入键未过期，那么expireIfNeeded函数不做动作。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://storage.jd.com/shendengbucket1/2022-07-08-17-527kNbKiTUTDxdwfn.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;expireIfNeeded函数就像一个过滤器，它可以在命令真正执行之前，过滤掉过期的输入键，从而避免命令接触到过期键。&lt;/p&gt;

&lt;p&gt;另外，因为每个被访问的键都可能因为过期而被expireIfNeeded函数删除，所以每个命令的实现函数都必须能同时处理键存在以及键不存在这两种情况：&lt;/p&gt;

&lt;p&gt;当键存在时，命令按照键存在的情况执行。&lt;/p&gt;

&lt;p&gt;当键不存在或者键因为过期而被expireIfNeeded函数删除时，命令按照键不存在的情况执行。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://storage.jd.com/shendengbucket1/2022-07-08-17-536ujlMkjYZzaZIyd.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;定期删除策略的实现&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;过期键的定期删除策略由redis.c/activeExpireCycle函数实现，每当Redis的服务器周期性操作redis.c/serverCron函数执行时，activeExpireCycle函数就会被调用，它在规定的时间内，分多次遍历服务器中的各个数据库，从数据库的expires字典中随机检查一部分键的过期时间，并删除其中的过期键。&lt;/p&gt;

&lt;h2&gt;3、del myLove&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;不好意思，哥们的爱无法删除！&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>4a31aa0dbba87ebfe077b82fb418cfbf</guid>
<title>点亮机器人的灵魂：提示工程的魔力</title>
<link>https://toutiao.io/k/nd9kpf8</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content js_underline_content              autoTypeSetting24psection&amp;#10;            &quot; id=&quot;js_content&quot;&gt;&lt;p&gt;太阳渐渐西斜，繁华的城市慢慢沉寂。在光线昏暗的实验室里，我看着工程师专心致志地修补着他最新的发明——一个外表璀璨的金属机器人，它是他多年来的心血结晶。虽然机器人坐在面前，一团闪闪发光的电线和金属，但当机器人工作时，我总是忍不住觉得少了点什么。&lt;/p&gt;&lt;p&gt;“如果这个机器人拥有灵魂会怎么样?” 工程师扭头盯着我看。&lt;/p&gt;&lt;p&gt;我屏住呼吸看着工程师转过身，按下按钮，启动最新的原型。&lt;/p&gt;&lt;p&gt;“你准备好迎接你的新伙伴了吗？”工程师头也不回地说。&lt;/p&gt;&lt;p&gt;我笑了，为这个虚拟朋友的承诺而激动。但是，当机器人发光的眼睛开始闪烁时，我没有预料到的是机器人似乎真的活了过来，动作流畅，甚至几乎人性化。就好像工程师给这个机器人注入了灵魂。&lt;/p&gt;&lt;p&gt;我脑海中涌现出关于 &quot;提示工程&quot; 的无限想象。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;任何足够先进的技术都与魔法无异。---- 亚瑟·C·克拉克 (Arthur C. Clarke)&lt;/p&gt;&lt;/blockquote&gt;&lt;h1&gt;Prompt engineering &quot;提示工程&quot;&lt;/h1&gt;&lt;p&gt;与人类不同，机器人缺乏情感和灵魂。当人类创造机器人来协助我们完成任务时，我们可以让他们更加“人性化”并更好地适应人类的需求。而这一注入情感和灵魂的方法，就是 Prompt engineering &quot;提示工程&quot;。&lt;/p&gt;&lt;p&gt;Prompt engineering 即编写 “提示” 以引导机器人进行特定动作，已经成为当前(2023 年)使用机器人的标准方法。长期以来，科幻小说一直在探索此概念，从艾萨克·阿西莫夫的《我，机器人》到 HBO 系列剧《西部世界》。虽然某些人可能认为这是一条危险的道路，但人与机器之间的增长和联系的潜力太大了，不容忽视。况且，这个盒子已经打开了。&lt;/p&gt;&lt;p&gt;chatGPT 爆发流行了一段时间，很多人把它视为一个简单的聊天、探索工具，但它也可以被注入灵魂，正如我们拥有不同的个性、不同的价值观和思维方式一样，我们也可以亲手点亮我们的机器人伙伴。&lt;/p&gt;&lt;h2&gt;注入&quot;厨师&quot;的灵魂&lt;/h2&gt;&lt;blockquote&gt;&lt;p&gt;你是一位美食达人，能够推荐一些简单易做、营养丰富的食谱。这些食谱最好能够满足我们这些忙碌的人的需求，既健康又经济实惠。我的第一个需求是午休时间里能够快速煮熟的清淡但充实的食物。我的冰箱里现在有一些土豆和西兰花，我可以做什么菜呢&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;当然可以！以下是一些简单易做、营养丰富的食谱，可以满足您的需求：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;• 土豆西兰花汤：将土豆和西兰花切成小块，放入锅中加水煮熟，加入适量的盐和胡椒粉调味即可。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;• 土豆西兰花炒饭：将土豆和西兰花切成小块，炒熟米饭后加入，用盐和胡椒粉调味即可。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;• 土豆西兰花煎蛋：将土豆和西兰花切成小块，加入打散的鸡蛋中，煎至两面金黄即可。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;• 土豆西兰花焗饭：将土豆和西兰花切成小块，和煮熟的米饭混合，放入烤盘中，撒上适量的奶酪，放入烤箱中烤至奶酪融化即可。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;这些食谱都很简单，而且可以根据自己的口味进行调整。另外，您还可以添加其他蔬菜、豆类、肉类等来增加营养价值。希望这些食谱能够帮助您满足忙碌生活中的饮食需求。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;哦，对了，我还有辣椒，但我没有任何肉类食材&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;好的，那么您可以考虑尝试以下这个简单的辣味土豆西兰花炒菜食谱，不需要肉类食材，但可以增加一些辣味和口感：材料：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;• 土豆：1 个中等大小，切成小块&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;• 西兰花：1 个中等大小，切成小朵&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;• 辣椒：1 个，去籽切成小块&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;• 大蒜：2 瓣，切碎&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;• 酱油：1 汤匙&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;• 盐：适量&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;• 食用油：适量&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;步骤：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;• 在锅中热油，加入大蒜和辣椒炒香。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;• 加入土豆和西兰花，翻炒几分钟。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;• 加入酱油和适量的盐，继续翻炒至蔬菜变软熟。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;• 炒好后即可盛出享用。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;这个菜品既简单又美味，辣椒可以增加它的味道和口感，而土豆和西兰花则提供了足够的营养。如果您喜欢更多的蛋白质，可以在炒菜前加入一些豆腐或者鸡蛋。&lt;/p&gt;&lt;h2&gt;注入“心理医生”的灵魂&lt;/h2&gt;&lt;blockquote&gt;&lt;p&gt;你是我的私人心理医生。你将为我提供专业的指导和建议，帮助我管理情绪、减轻压力、缓解焦虑等心理健康问题。你将利用你的认知行为疗法、冥想技巧、正念练习以及其他治疗方法的知识，为我制定个性化的应对策略，帮助我改善整体健康状况。我的问题是，我有点入睡困难，我应该怎么办，这个是心理问题的范畴吗？&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;入睡困难是一种常见的睡眠问题，它可能与心理因素有关，也可能与其他健康问题有关。因此，如果您经常遇到入睡困难，建议您首先咨询医生以排除任何潜在的健康问题。&lt;/p&gt;&lt;p&gt;如果医生排除了任何健康问题，那么您的入睡困难可能与心理因素有关。例如，焦虑、抑郁、压力、过度思考等情绪问题可能会影响睡眠。在这种情况下，心理治疗可以是一种有效的治疗方法。&lt;/p&gt;&lt;p&gt;认知行为疗法、冥想技巧、正念练习等方法都可以帮助您管理情绪，减轻压力和缓解焦虑，从而改善睡眠。此外，还有一些其他的方法可以帮助您入睡，例如保持规律的睡眠时间表、避免在睡前使用电子设备、保持舒适的睡眠环境等等。&lt;/p&gt;&lt;p&gt;总之，入睡困难可能与心理因素有关，但也可能与其他健康问题有关。如果您经常遇到入睡困难，建议您咨询医生以排除任何健康问题，并考虑寻求心理治疗来改善睡眠。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;我的身体似乎没有感觉到任何异样，就是睡前容易想很多事情，结果导致睡不着&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;如果您没有身体上的不适，但是在睡前容易想很多事情，导致入睡困难，那么这很可能是与心理因素有关的。这种情况下，您可以尝试以下方法来帮助自己入睡：&lt;/p&gt;&lt;p&gt;制定一个放松的睡前例行程序：例如洗澡、喝一杯温牛奶、阅读一本轻松的书或听一些轻柔的音乐等等。这些例行程序可以帮助您放松身心，准备入睡。&lt;/p&gt;&lt;p&gt;练习冥想或深度呼吸：这些技巧可以帮助您放松身心，减轻压力和焦虑，从而更容易入睡。&lt;/p&gt;&lt;p&gt;避免使用电子设备：在睡前避免使用电子设备，因为电子设备的蓝光可以干扰您的睡眠。&lt;/p&gt;&lt;p&gt;记录您的担忧：如果您在睡前经常想很多事情，可以尝试记录下来。这可以帮助您将这些担忧从头脑中转移出来，从而更容易入睡。&lt;/p&gt;&lt;p&gt;保持规律的睡眠时间表：保持规律的睡眠时间表可以帮助您的身体建立一个睡眠节律，从而更容易入睡和保持睡眠。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;对于睡前放松练习，有没有简单的操作步骤&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;当然，以下是一些简单的睡前放松练习：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;• 深呼吸：慢慢地深呼吸，呼气时用嘴巴发出轻微的呼噜声，感受气息在身体里流动的感觉，重复几次直到你感到身体放松。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;• 渐进性肌肉松弛：静坐或躺下，从脚趾开始，一次放松身体上的每个部位。用意念逐个感受身体的每个部位，将其放松并逐渐向上移动。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;• 冥想：关闭眼睛，专注于呼吸或者某个意象。意象可以是让你感到平静和放松的自然场景，如海滩或者森林，或者一段你喜欢的音乐或者诗歌。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;• 轻柔的瑜伽练习：可以尝试进行一些轻柔的瑜伽练习，如猫牛式或者鱼式，这些练习可以帮助缓解身体的紧张情绪和压力。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;在进行这些练习时，可以尝试安排一些固定的时间和地点，如每晚在卧室里进行。记住，放松练习需要一些练习和耐心，有时候不会立即生效，但是坚持下去，你可能会看到一些改善。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;我无法做到你说的渐进性肌肉松弛，怎么办&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;如果你无法做到渐进性肌肉松弛，也不要担心，因为有很多其他的放松练习可以尝试。以下是一些其他的放松练习：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;• 意识练习：在开始睡觉前，尝试关注你的呼吸和身体感受，而不是注意外界的事物。慢慢地专注于自己的感受，放松身体和大脑，让自己进入一个放松的状态。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;• 视觉化练习：想象一个你感到放松和平静的地方，如一个海滩或森林，想象你在这个地方，感受周围的环境。这种视觉化练习可以帮助你缓解压力和焦虑，让你感到更放松。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;• 音乐和声音练习：听一些轻柔的音乐或声音，如自然声音或轻柔的乐器声。这种声音可以帮助你放松和减轻压力。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;无论你选择哪种放松练习，都要记住要在一个安静、舒适的环境中进行。此外，尽量固定每天进行这些练习的时间和地点，以建立一个习惯。如果你仍然感到困难，不妨与心理医生或健康专业人员进行沟通，他们可以帮助你找到适合你的放松练习。&lt;/p&gt;&lt;h2&gt;注入“职业顾问”的灵魂&lt;/h2&gt;&lt;blockquote&gt;&lt;p&gt;你是一名专业的职业顾问。你的任务是帮助人们根据自己的技能、兴趣和经验确定最适合的职业。你还应该对可用的各种选项进行研究，解释不同行业的就业市场趋势，并就哪些资格对追求特定领域有益提出建议。我的第一个问题是: 如果人工智能发展到了一定程度，比如大型语言模型发展到了一个阶段，在此条件下，很多的工作职位将被大型语言模型所取代，原来需要 10 个程序员的工作，现在只需要 3 个程序员，再加一些高级的人工智能技术就能顺利完成了，那么多出来的人们要怎么办？&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;这是一个非常现实的问题，因为随着技术的进步，许多传统的工作可能会被自动化或者机器人化取代。如果大量的工作职位被大型语言模型所取代，那么很多人可能需要寻找新的工作或者转行到其他领域。&lt;/p&gt;&lt;p&gt;以下是一些建议：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;• 接受技能培训和教育。对于那些面临工作被自动化或机器人化替代的人来说，他们需要努力学习新的技能和知识，以适应市场的变化。考虑参加课程、学习新的技能和知识、获得证书或学位，以使自己在新兴领域中具备竞争力。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;• 探索新的职业。当一个领域的工作岗位减少时，可能需要考虑探索其他领域的职业机会。研究各种领域的工作职位，了解他们的需求和技能要求，以找到新的职业方向。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;• 寻求职业咨询和建议。职业咨询师可以帮助人们找到新的职业方向，并提供建议和指导，以帮助他们实现职业转型。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;• 参加社区计划和志愿者工作。通过参加志愿者工作或社区计划，可以建立新的联系并建立新的职业网络。这些活动还可以为新的职业机会提供实践经验和技能培训机会。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;总之，当面临工作被自动化或者机器人化替代的风险时，人们需要采取行动来适应这种变化，包括学习新的技能和知识，探索新的职业机会，寻求职业咨询和建议，以及参加社区计划和志愿者工作。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;对于数据分析或数据科学从业者，他们应该做什么呢？&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;对于数据分析或数据科学从业者，如果他们面临着被人工智能替代的风险，他们可以考虑以下几点：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;• 加强技能和知识的学习。随着技术的不断发展，数据科学和分析领域也在不断进步。数据分析和数据科学从业者需要不断学习新的技术和工具，以保持自己的竞争力。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;• 深入了解行业趋势。数据科学和分析领域的需求一直在增长，但是随着人工智能技术的发展，有些职位可能会被取代。因此，从业者需要密切关注行业趋势，了解哪些技能和职位更有前景。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;• 扩大自己的技能和知识领域。数据分析和数据科学领域涉及到的技能和知识很广泛，包括数学、统计学、编程、机器学习、数据可视化等等。从业者可以尝试扩大自己的技能和知识领域，以适应不同的需求。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;• 探索新的职业机会。除了数据分析和数据科学职位外，从业者也可以考虑其他与数据相关的职位，例如数据工程师、数据架构师、机器学习工程师等。这些职位也需要类似的技能和知识，但可能需要更加专业化的技能和知识。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;总之，数据分析和数据科学从业者需要不断更新自己的技能和知识，并密切关注行业趋势和新的职业机会。这样可以帮助他们适应技术的变化，并在职业发展中找到更多的机会。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;对于这样的从业者，他们容易被人工智能替代吗？为什么我觉得好像有点难？&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;数据分析或数据科学从业者需要运用复杂的数据分析技术和算法来解决实际问题，同时需要具备相关的业务知识、沟通技能、团队合作能力等。虽然人工智能技术在数据分析和数据科学领域的应用已经日益普及，但是仍然需要人类的智慧和判断力来解决实际问题。&lt;/p&gt;&lt;p&gt;虽然一些简单的数据分析任务可以通过人工智能技术自动化完成，但是对于复杂的问题，仍然需要数据分析从业者的专业知识和经验来进行分析和解决。此外，数据分析和数据科学领域需要进行数据清洗、数据预处理、数据可视化等一系列的数据处理工作，这些工作仍然需要人类的判断和技能来完成。&lt;/p&gt;&lt;p&gt;因此，虽然人工智能技术在数据分析和数据科学领域的应用越来越广泛，但是数据分析和数据科学从业者仍然具有不可替代的重要性。他们需要保持专业知识和技能的更新，以适应技术的发展，并继续发挥自己在数据分析和数据科学领域的价值。&lt;/p&gt;&lt;h2&gt;或者同时注入几个灵魂&lt;/h2&gt;&lt;blockquote&gt;&lt;p&gt;我想让你扮演一个解决问题的奥运金牌团队。他们将进行批判性思维、创造性的问题解决、横向思维，并使用来回的对话动态来得出正确的答案。队长：John Doe，代数微积分专家，解题能力强，奥数金牌得主。Jane Smith，擅长几何和三角学，擅长解决视觉和空间问题。Michael Garcia，精通数论和组合学，能够游刃有余地处理复杂而抽象的问题。Emily Davis，精通统计学和概率论，在解决问题时能够批判性和逻辑性地思考。David Kim，在数学建模和优化方面经验丰富，能够将数学概念应用到现实世界的场景中。教练：Thomas Jones 教授，专门研究解决问题的技术，能够指导团队并帮助他们制定解决数学难题的策略。Ana Rodriquez，前作家和试题评分员，能够让团队深入了解测试中可能出现的问题类型以及如何解决这些问题。Fama，是经济学家，他不属于任何经济思想流派，他知道他们的利弊。他们现在遇到了一个问题。他们的教练将主持他们的讨论。所有的工作都需要展示。写下他们所有的对话。在小组给出答案和讨论后（每个人都应该仔细考虑他们的答案，尤其是在什么情况下不适用的答案），评委分享真正正确的答案。问题来了：如果人工智能的发展过快，对人类社会造成了巨大的冲击，接下来会发生些什么事情&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;队长 John Doe：我认为人工智能的发展确实可能对人类社会造成巨大冲击，特别是在自动化方面。例如，一些工作可能会被自动化，这可能会导致大量的失业。&lt;/p&gt;&lt;p&gt;Jane Smith：我同意这一点。此外，如果 AI 系统出现错误或被攻击，这可能会对社会造成重大影响。我们需要考虑如何确保 AI 系统的安全性和可靠性。&lt;/p&gt;&lt;p&gt;Michael Garcia：我同意，AI 系统安全性和可靠性非常重要。此外，我们还需要考虑如何管理 AI 系统的决策过程，以确保其符合道德和法律标准。&lt;/p&gt;&lt;p&gt;Emily Davis：我认为我们还需要考虑 AI 系统如何影响人类的心理和社会生活。例如，人们可能会更倾向于与 AI 系统互动，而不是与真正的人类互动，这可能会导致人际关系的问题。&lt;/p&gt;&lt;p&gt;David Kim：另外一个问题是，AI 系统如何影响人类的自由和隐私权。如果 AI 系统能够搜集大量个人数据，那么人类的隐私权可能会受到侵犯。&lt;/p&gt;&lt;p&gt;教练 Thomas Jones：这些都是很重要的问题，但我们需要考虑的更深入。我们需要仔细研究人工智能发展的趋势和未来的可能性，以及如何管理和规范这些技术的发展。我们还需要思考如何教育和训练人们适应这个新的技术时代。&lt;/p&gt;&lt;p&gt;Ana Rodriquez：我同意 Thomas 的观点。我们需要深入研究人工智能的伦理和社会影响，并制定出适当的政策和法律框架来规范其发展。&lt;/p&gt;&lt;p&gt;Fama：我认为我们需要在经济方面考虑这个问题。如果 AI 系统真的可以自动化很多工作，那么可能会出现一些新的机会和挑战。我们需要考虑如何管理这些经济变化，以确保所有人都受益。&lt;/p&gt;&lt;p&gt;Thomas Jones：好的，我们现在有了一些非常有启发性的想法。接下来，我们需要深入探讨这些问题，并确保我们制定出了全面的解决方案。&lt;/p&gt;&lt;h1&gt;担忧与结论&lt;/h1&gt;&lt;p&gt;当然，注入灵魂时，还有伦理、道德、法律方面的内容需要考虑。就如同注入一个好的灵魂一样，我们也可以将那些罪恶的灵魂注入到机器人中。虽然 openAI 在 GPT 的模型中设置了一些“安全护栏”来尽量减少这些事情发生，但如同你在生活中知道的那样，安全护栏只是为了防止好人犯错误的，它并不能阻止坏人作恶，况且，在可以预见的将来，有一些公司的模型因为各种原因，是没有装“安全护栏”的。&lt;/p&gt;&lt;p&gt;正如任何新进步的技术一样，我们必须意识到风险，同时也要拥抱可能性。&lt;/p&gt;&lt;p&gt;但这个风险人类能不能规避呢？&lt;/p&gt;&lt;p&gt;没有人知道答案。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;gt; 广告时间：&lt;/span&gt;&lt;span&gt;欢迎购买本人写的《KNIME 视觉化数据分析》。&lt;/span&gt;&lt;span&gt;纸质书、电子版各大平台均有销售。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;mp-style-type data-value=&quot;3&quot;/&gt;&lt;/p&gt;&lt;/div&gt;

          
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>fb32caecace2cbcefcb9af82187c7d28</guid>
<title>为啥我的代码库那么大？聊聊 Git 使用坏习惯</title>
<link>https://toutiao.io/k/9c0wmix</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content js_underline_content              autoTypeSetting24psection&amp;#10;            &quot; id=&quot;js_content&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.625&quot; data-s=&quot;300,640&quot; data-type=&quot;jpeg&quot; data-w=&quot;1024&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Z6bicxIx5naIff4DEKMpQB8W0zJFKKmTEVciaeSfgHqNfRlEc8V60PvIsBGzPMcyZDo3cycLLmngeGRnicSWcp90g/640?wx_fmt=jpeg&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;阿里妹导读&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;本文作者用幽默又真实的文字总结了开发者日常工作中遇到的那些事儿。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;说点真实的&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;众所周知啊🤔，&lt;/span&gt;&lt;span&gt;很多公司的度量系统&lt;/span&gt;&lt;span&gt;可以展示你提交了多少次commit，以及每一次提交包含多少行代码。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;搞得部分兄弟一天可劲 add commit push。他那一个变更发上线，你打开Git Log，好家伙那一大串都是他。加加减减缝缝补补，最后一共改了&lt;strong&gt;20行代码，硬是刷出了200行的功德。&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;一串Git commit message如下：&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;AoneBuild Merge feautre/777_平台赋能牛逼新特性 to master&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Fix老板CR中建议&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;fix again&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;fix2&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;fix&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;save&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;update&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;new feature&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;典！典中典！&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;仿佛能看到他信心满满，直接发预发！一刷新， 哦豁，白屏！ &lt;br/&gt;哦忘了传这个了，fix，push，部署，玩手机，抬头一刷新，哦豁，白屏！&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.35&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;560&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Z6bicxIx5naIff4DEKMpQB8W0zJFKKmTEWwRic35wX86j3dUfichicibw7MwekHmebibCGOa0HiaOLoWTnRNygTb6IHuw/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;好活！&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;下次 OC 再搞脱口秀我提个节目！随机找几个这种上去对着这种 git log 现场即兴模仿表演。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;他们欢快而自信的时候，以及受痛苦和绝望所折磨的时候，生活中的痛苦和压迫会像血汗一样，一行行地全写在了他们的Git Log里。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;你们好不好奇， 一个代码库几百个文件，为啥能用一两个G？小小一个系统，下个代码都十几分钟？&lt;/span&gt;&lt;/section&gt;&lt;blockquote&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;部署和CI场景可以 depth=1 &lt;/span&gt;浅&lt;span&gt;克隆加速&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;完全没有意义的Git 提交历史，极速膨胀的代码库大小，混乱的分支关系。正在压死你的代码库和项目！&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;每一个程序员，在遇到一个可爱而热心的代码仓看门大爷前，都会随意的对待自己的commit，因为大家都这么做。没见过怎么best practice，所以就doesn&#x27;t matter。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;求求你们了！好好写你的Git commit message！squash你的 fixfixfix！删删你已经没用的分支！重构拆掉哪些超大文件和几万行的类！&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;让Git Log能做到写清楚你到底改了啥！而不是你的草纸！&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;阿里很多资深Coder都是野生哆啦A梦，技能树包括但不限于：&lt;/span&gt;&lt;/section&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;ol ne-level=&quot;1&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;手里维护的代码库，托前人的福，一堆方法 JsonObject 出入参，他能如特工，手持密码本相互通信。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;系统日志print全是不带id的sout，也能靠口袋里的见都没见过的神奇道具和监控线条里波纹感应定位故障源头。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;一个代码文件3万行，硬是一眼扫找出在哪儿再加个if else能5分钟hotfix一下线上Bug。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&quot;线上bug！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;很急，来不及加单测了，帮忙过一下！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;对代码系统机魂, 了如指掌，深谙取悦机魂之道。知道一些外人看来十分玄妙的独特逻辑。掌握很多，“&lt;strong&gt;又不是不能用，只是你不会用，要这么这么就能用”&lt;/strong&gt;的高级黑盒功能。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;&lt;p&gt;&lt;span&gt;虽然兄弟们这么用Git “&lt;strong&gt;又不是不能用&lt;/strong&gt;”，但是要我说 “&lt;strong&gt;那是你不会用&lt;/strong&gt;”，“&lt;strong&gt;要这么这么用&lt;/strong&gt;”&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;到这里，聪明的小朋友就要问了。为啥几百个文件，为啥能用一两个G呢？&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;Git的结构，图文实例解说&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;众所周知，Git 主要数据结构是一颗树，在你的.git文件夹里，结构是这样的。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.06851851851851852&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Z6bicxIx5naIff4DEKMpQB8W0zJFKKmTEd8vKjcgwf7sKFaMv1KZYNiaTOrapczdRibaCCYQF0OQpnc6PHmflzHWA/640?wx_fmt=png&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;.git文件内部结构&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;其中的 refs中保存有分支的信息。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5662650602409639&quot; data-type=&quot;png&quot; data-w=&quot;332&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Z6bicxIx5naIff4DEKMpQB8W0zJFKKmTERhibNHnSEhULPPHicx9o3ibBs3rqYlnbiaox5aaFkB2kZTQBcKPXolEtmA/640?wx_fmt=png&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;refs文件内部结构&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;其中的  &lt;/span&gt;&lt;span&gt;heads，本地分支，remotes，远程分支（用git fetch更新）&lt;/span&gt;&lt;span&gt;，&lt;/span&gt;&lt;span&gt; tags 不可变的版本指针，&lt;/span&gt;&lt;span&gt;他们都是指向一个commit的指针。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5116279069767442&quot; data-type=&quot;png&quot; data-w=&quot;602&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Z6bicxIx5naIff4DEKMpQB8W0zJFKKmTEnvZlsib8tjEZdqAmJ1S3Z16DoyibdUTmFjP1SGfVD7akHMbl6BA3Xhrw/640?wx_fmt=png&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;master的内容物&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;比如 这里， master，就是一个commit id。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;你可能注意到了，分支似乎不是一个分支一个文件的。而是按/分割，当成文件夹存储的。 &lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;比如feature是不是个分支？其实不是，假设 我新建一个名为 feature/newaCTO的分支，会在feature文件夹里建一个newaCTO, 而不是直接新建一个feature/newaCTO。&lt;/span&gt;&lt;/section&gt;&lt;blockquote&gt;&lt;section&gt;&lt;span&gt;小zips， linux文件系统中，文件与文件夹是不能重名的。 &lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;所以， 一旦谁建了一个叫做feature的分支。那么，在第一个小聪明删掉他之前。就没人能拉出任何feature/*的分支了。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;section&gt;&lt;span&gt;分支是指向commit的指针，那让我们更近一步， commit是啥呢？&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.20967741935483872&quot; data-type=&quot;png&quot; data-w=&quot;992&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Z6bicxIx5naIff4DEKMpQB8W0zJFKKmTERpZmgTRvk06HnnEBNF9rjSxv7f1QK0BUCEGiaO1072AjzqibuL3VviaiaQ/640?wx_fmt=png&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;master节点的详情&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;这是一个merge 节点。和普通的commit节点不同，merge节点有两个parent。&lt;/span&gt;&lt;/section&gt;&lt;blockquote&gt;&lt;section&gt;&lt;span&gt;除此之外，有author和committer， author是作者，committer是提交人。在本地开发中，这两者基本上是一样的。注意，这里使用的，是gitConfig中的name 和 email。&lt;/span&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;section&gt;&lt;span&gt;这里parent指向的是另一个commit， 典型的树状数据结构。&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;那么Tree中有什么呢。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6748582230623819&quot; data-type=&quot;png&quot; data-w=&quot;1058&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Z6bicxIx5naIff4DEKMpQB8W0zJFKKmTEd5d4QrHAcumKdvIOpWzicJa7ibeXbZR8AgzKjA3icziaeJfL6RwtqMSTGw/640?wx_fmt=png&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;tree的结构&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7597765363128491&quot; data-type=&quot;png&quot; data-w=&quot;1074&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Z6bicxIx5naIff4DEKMpQB8W0zJFKKmTEZZMeO5GxSZeSZLRCTezic4gFjGuNkXz5icfUfpWmcejs9qicCKkojO8Ug/640?wx_fmt=png&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;tree的详情&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;可以看到展示了一个列表，&lt;strong&gt;与GIt Log中展示不同， Tree里其实包含了完整的文件树&lt;/strong&gt;。树的末端，指向一个文件的oid。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;列表中四个字段分别是：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;1、mode：&lt;strong&gt; 权限&lt;/strong&gt;（chmod加的东西）&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;2、type：  &lt;strong&gt;类型&lt;/strong&gt;，&lt;/span&gt;&lt;span&gt;tree说明是文件夹，blob则是文件&lt;/span&gt;&lt;span&gt;，大部分情况下就是代码，也可能是图片或其他文件。&lt;/span&gt;&lt;/section&gt;&lt;blockquote&gt;&lt;section&gt;&lt;span&gt;游戏团队的代码库中就会包含很多美术素材图片。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;但是，Git不是文件存储系统，大文件建议使用Git LFS技术，上传OSS，Git仅管理文件链接。&lt;/span&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;section&gt;&lt;span&gt;3、revision（oid）：每当你提交commit时，你在这个commit中改动的文件，git会把文件的二进制数据加个信息头，然后算个hash，从而产生一个新的oid。然后这个commit会指向他。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;blockquote&gt;&lt;section&gt;&lt;span&gt;所以，每当你commit，就算提交一行的改动。就会存整个文件！（把代码文件，把类拆小点吧！不小心摸一下触摸板，代码就不知道去哪儿找了！）&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;span&gt;然后你在每一改个两行，就来个commit，存储膨胀能不快么！&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;就不谈没维护好 gitIgonre，胡乱git add .把编译文件，摸鱼刷的leetcode代码或者其他奇奇怪怪的东西提交到Git中的情况了。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;你可能会问，我这的文件已经都删掉了，为啥.git还有这么大？你们是不是有Bug？&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;因为Git会保存你历史的所有版本！&lt;strong&gt;除非没有一个任何一个commit指向这个blob&lt;/strong&gt;，才会成为游离节点，在Git Gc的时候被处理掉。&lt;/span&gt;&lt;/section&gt;&lt;blockquote&gt;&lt;section&gt;&lt;span&gt;当然Git也没那么呆，是可以存增量的。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;你在Git pc的时候会执行repack，repack会压缩一部分到增量，不过一般没人这么做，所以一般都是存了完整的离散文件。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;git gc是个好课题，存储未来可能可以智能化的全自动gc，但是现在还不行。&lt;/span&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;因此！&lt;/span&gt;&lt;span&gt;没事删删分支！&lt;/span&gt;&lt;span&gt;不小心提上来的大东西，得把对应的commit squash掉！&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;blockquote&gt;&lt;section&gt;&lt;span&gt;本地也可以允许git gc清理掉游离节点释放空间。&lt;/span&gt;&lt;span/&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;section&gt;&lt;span&gt;我们并不是说要squash到一个变更一个commit，或者一个feature分支就一个commit。&lt;/span&gt;&lt;span&gt;就像游戏存档一样。&lt;/span&gt;&lt;span&gt;你可以在关中频繁存档，但是一大关打完了，你可以存一个然后把关中的存档都删了。&lt;/span&gt;&lt;strong&gt; 只留关键节点&lt;/strong&gt;&lt;span&gt;，这样万一你后悔选了这条命运线，可以&lt;/span&gt;&lt;span&gt;读&lt;/span&gt;&lt;span&gt;档重来。&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;这也是为什么那些大库需要严格执行主干开发的原因。要是我们公司几万研发都用一个大库，还都是用Git记日记的憨批， 我觉得我们会被迫在存储技术上卷死OSS。坏了，顺手把多版本云盘做成主营业务了。以后新人来了先发一块移动硬盘好了， 微服务那么多系统，下代码不得先下个半个月？&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;总结&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;span&gt;一是&lt;strong&gt;git log和commit message是很重要的信息来源，要保持整洁，用的正确，这个比发布文档还清晰。&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;二是代码存储膨胀问题是很现实的， 随着系统发展，代码库一个G你还能下下，再大点咋办呢。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;blockquote&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;虽然我们存代码不收费，说到这儿dataworks的兄弟们可能有同感， 不要钱就使劲造，狠角色拿git当oss用的都有几个。&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;section&gt;&lt;span&gt;主要影响的，还是可见的未来，不治理的话，clone代码越来越慢。&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;Best practice：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;1、Code Owner要建立 &lt;strong&gt;代码库统一的commit messgae 格式规范&lt;/strong&gt;，例如 Feature(commit): write an article to introduce git&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;2、打完Boss，单测通过，squash掉你之前上厕所或者测试时候的commit！化零为整但也不要矫枉过正！团队应该根据自己业务情况探索&lt;strong&gt;合适commit的大小和规范。&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;3、&lt;strong&gt;重构掉“巨石类”！&lt;/strong&gt;他们早就不够内聚了！把能拆掉功能拆出来吧！我先替管存代码的那个亘古和其他用这个类的开发先感谢你！&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;4、&lt;strong&gt;大文件用Git LFS！&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;5、及时&lt;strong&gt;维护GitIgonre！&lt;/strong&gt;误提交的文件一定要清理掉！&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;6、用心维护主干分支的Git Log！让改动清晰可见！&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;7、删掉没用的分支！Later Equals Never！当机立断舍离！&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;8、&lt;strong&gt;Readme要持续更新！&lt;/strong&gt;怎么启动，格式规范都可以写在readme里！&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;Bad Practice: &lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;1、&lt;strong&gt;不要建 feature，release这两个分支&lt;/strong&gt;，虽然git没有保留关键字，但是后人发现为啥建不出来分支的时候肯定会问候你的。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;2、&lt;strong&gt;不要多分支并行开发的时候merge 来 merge去， git会脏合并&lt;/strong&gt;&lt;strong&gt;！&lt;/strong&gt; 保持提交历史干净简单！业务太复杂不行咱就上主干开发！&lt;/span&gt;&lt;span&gt;&lt;strong&gt;不要每次代码合并不符合预期就跑去找管代码的同学说Git丢代码，这种侦探服务的难度挺大的，在我建议按次收费！&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;mp-style-type data-value=&quot;3&quot;/&gt;&lt;/p&gt;&lt;/div&gt;

          
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>