<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>13ebed67da9871a0bfff5886a543de60</guid>
<title>这是我见过最好的微服务 SaaS 快速开发平台，功能完整，代码结构清晰</title>
<link>https://toutiao.io/k/rz9qoa6</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;pre mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;hr/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;最&lt;span&gt;近在&lt;/span&gt;逛网站的时候发现一个不错的开源项目，&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span&gt;这个项目目前收获了 &lt;/span&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;4.3K Star&lt;/span&gt;&lt;/span&gt;&lt;span&gt;，&lt;/span&gt;&lt;span&gt;觉得不错，&lt;/span&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;值得拿出来和大家分享下。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5439024390243903&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/WZoDoXZNb0vw02oFaqty0nZ4DibKM3OPKzZiaILIXr1oRvb2n7d9ic3ZmMO3DjAESwpIibsdlYLr2eEg8qTl6oEn4A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2460&quot;/&gt;&lt;/p&gt;&lt;pre mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14.399999618530273&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;26&quot;&gt;本项目是基于Jdk11 + SpringCloud + SpringBoot的微服务快速开发平台，其中的可配置的SaaS功能尤其闪耀， 具备RBAC功能、网关统一鉴权、Xss防跨站攻击、自动代码生成、多种存储系统、分布式事务、分布式定时任务等多个模块，支持多业务系统并行开发， 支持多服务并行开发，可以作为后端服务的开发脚手架。代码简洁，注释齐全，架构清晰，非常适合学习和企业作为基础框架使用。&lt;/p&gt;&lt;/blockquote&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.45139911634756996&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/WZoDoXZNb0s5US7kWk5Wlfg0libt8IaOcYibicKGpbzzhvHfvzYAibqic2MsdkV0x9cS8yGZoMOLX14ZQ2XPcrUaA7Q/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;2716&quot;/&gt;&lt;/p&gt;&lt;h2 mp-original-font-size=&quot;22.100000381469727&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;span mp-original-font-size=&quot;22.100000381469727&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;strong mp-original-font-size=&quot;22.100000381469727&quot; mp-original-line-height=&quot;27&quot;&gt;本项目亮点功能介绍:&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;ol class=&quot;list-paddingleft-1&quot; mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;18&quot;&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;&lt;span mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;服务注册&amp;amp;发现与调用：&lt;/span&gt;&lt;/p&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;基于Nacos来实现的服务注册与发现，使用使用Feign来实现服务互调, 可以做到使用HTTP请求远程调用时能与调用本地方法一样的编码体验，开发者完全感知不到这是远程方法，更感知不到这是个HTTP请求。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;&lt;span mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;负载均衡：&lt;/span&gt;&lt;/p&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;将服务保留的rest进行代理和网关控制，除了平常经常使用的node.js、nginx外，Spring Cloud系列的gateway 和 loadbalancer 可以帮我们进行正常的网关管控和负载均衡。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;&lt;span mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;RBAC:&lt;/span&gt;&lt;/p&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;通过JWT生成token，存储用户基本信息，并自研权限配置、鉴权方案。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;&lt;span mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;熔断机制：&lt;/span&gt;&lt;/p&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;因为采取了服务的分布，为了避免服务之间的调用“雪崩”，采用了Sentinel的作为熔断器，避免了服务之间的“雪崩”。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;&lt;span mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;监控：&lt;/span&gt;&lt;/p&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;利用Spring Boot Admin 来监控各个独立服务的运行状态、健康情况。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;&lt;span mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;链路调用监控：&lt;/span&gt;&lt;/p&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;同时实现了SkyWalking作为本项目的全链路性能监控， 从整体维度到局部维度展示各项指标，将跨应用的所有调用链性能信息集中展现，可方便度量整体和局部性能，并且方便找到故障产生的源头，生产上可极大缩短故障排除时间。另外，搜索公众号顶级架构师后台回复“网站”，获取一份惊喜礼包。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;&lt;span mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;数据权限&lt;/span&gt;&lt;/p&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;利用基于Mybatis的DataScopeInnerInterceptor拦截器实现了数据权限功能&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;&lt;span mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;SaaS(多租户)的无感解决方案&lt;/span&gt;&lt;/p&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;本项目支持3种常见的租户解决方案和无租户方案，同一套代码，修改一个配置即可实现租户模式只有切换。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;&lt;span mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;缓存抽象&lt;/span&gt;&lt;/p&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;采用CacheOps操作缓存，内置2种实现：Caffeine、 Redis，可以让项目应急时在无Redis环境正常运行&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;&lt;span mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;优雅的Bean转换&lt;/span&gt;&lt;/p&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;采用Dozer、BeanUtil等组件来对 DTO、DO、PO等对象的优化转换&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;&lt;span mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;前后端统一表单验证&lt;/span&gt;&lt;/p&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;严谨的表单验证通常需要 前端+后端同时验证， 但传统的项目，均只能前后端各做一次检验， 后期规则变更，又得前后端同时修改。&lt;br mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;/&gt;故在&lt;code mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;19&quot;&gt;hibernate-validator&lt;/code&gt;的基础上封装了&lt;code mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;19&quot;&gt;lamp-validator-starter&lt;/code&gt;起步依赖，提供一个通用接口，可以获取需要校验表单的规则，然后前端使用后端返回的规则，&lt;br mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;/&gt;以后若规则改变，只需要后端修改即可。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;&lt;span mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;防跨站脚本攻击(XSS)&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/pre&gt;&lt;/pre&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;&lt;span mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;当前登录用户信息注入器&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;&lt;span mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;在线API&lt;/span&gt;&lt;/p&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;由于原生swagger-ui某些功能支持不够友好，故采用了国内开源的&lt;code mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;19&quot;&gt;knife4j&lt;/code&gt;，并制作了stater，方便springboot用户使用。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;&lt;span mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;代码生成器&lt;/span&gt;&lt;/p&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;基于Mybatis-plus-generator自定义了一套代码生成器， 通过配置数据库字段的注释，自动生成枚举类、数据字典注解、SaveDTO、UpdateDTO、表单验证规则注解、Swagger注解等。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;&lt;span mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;定时任务调度器&lt;/span&gt;：&lt;/p&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;基于xxl-jobs进行了功能增强。(如：指定时间发送任务、执行器和调度器合并项目、多数据源)&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;&lt;span mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;分布式事务&lt;/span&gt;&lt;/p&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;集成了阿里的分布式事务中间件：seata，以 &lt;span mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;高效&lt;/span&gt; 并且对业务 &lt;span mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;0侵入&lt;/span&gt; 的方式，解决 微服务 场景下面临的分布式事务问题。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;&lt;span mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;跨表、跨库、跨服务的关联数据自动回显&lt;/span&gt;&lt;/p&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;用于解决跨表、跨库、跨服务分页数据的属性或单个对象的属性 回显关联数据之痛, 支持对静态数据属性(数据字典)、动态主键数据进行自动回显。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;&lt;span mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;灰度发布&lt;/span&gt;&lt;/p&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;为了解决频繁的服务更新上线，版本回退，快速迭代，公司内部协同开发，本项目采用修改 loadbalancer 的负载均衡策略来实现来灰度发布。&lt;/p&gt;&lt;/li&gt;&lt;pre mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;/p&gt;&lt;/pre&gt;&lt;h2 mp-original-font-size=&quot;22.100000381469727&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;strong mp-original-font-size=&quot;22.100000381469727&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;span mp-original-font-size=&quot;22.100000381469727&quot; mp-original-line-height=&quot;27&quot;&gt;技术栈/版本介绍：&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;ul class=&quot;list-paddingleft-1&quot; mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;18&quot;&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;所涉及的相关的技术有：&lt;/p&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-1&quot; mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;18&quot;&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;JSON序列化:Jackson&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;消息队列：RabbitMQ&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;缓存：Redis&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;数据库：MySQL 5.7.9 或者 MySQL 8&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;定时器：采用xxl-jobs项目进行二次改造&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;前端：vue2 + element-ui / vue3 + ant design vue&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;持久层框架：Mybatis-plus&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;代码生成器：基于Mybatis-plus-generator自定义&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;API网关：Gateway&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;服务注册&amp;amp;发现和配置中心: Nacos&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;服务消费：OpenFeign&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;负载均衡：Ribbon&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;服务熔断：Sentinel&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;项目构建：Maven&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;分布式事务：seata&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;分布式系统的流量防卫兵：Sentinel&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;监控：spring-boot-admin&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;链路调用跟踪：SkyWalking&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;另外，搜索公众号顶级算法后台回复“微信”，获取一份惊喜礼包。&lt;br mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;文件服务器：FastDFS 5.0.5/阿里云OSS/本地存储/MinIO&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;Nginx&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;部署方面：&lt;/p&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-1&quot; mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;18&quot;&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;服务器：CentOS&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;Jenkins&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;Docker&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;30&quot;&gt;Kubernetes&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;p data-track=&quot;79&quot; mp-original-font-size=&quot;18&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span&gt;本项目是lamp项目的其中一个项目，她基于jdk11/jdk8 + SpringCloud + SpringBoot 开发， 她是一个微服务中后台快速开发平台，可以通过插件无缝切换是否启用SaaS模式、通过配置切换SaaS模式采用独立数据库模式还是字段模式。&lt;/span&gt;&lt;/p&gt;&lt;p data-track=&quot;80&quot; mp-original-font-size=&quot;18&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span&gt;她具备SaaS模式切换、完备的RBAC功能、网关统一鉴权、灰度发布、数据权限、可插拔缓存、统一封装缓存的key、表单校验前后端统一验证、字典数据自动回显、Xss防跨站攻击、自动生成前后端代码、多种存储系统、分布式事务、分布式定时任务等多个功能和模块， 支持多业务系统并行开发， 支持多服务并行开发，是中后台系统开发脚手架的最佳选择。代码简洁，注释齐全，架构清晰，非常适合学习和企业作为基础框架使用。&lt;/span&gt;&lt;/p&gt;&lt;p data-track=&quot;81&quot; mp-original-font-size=&quot;18&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span&gt;核心技术采用Spring Cloud Alibaba、SpringBoot、Mybatis、Seata、Sentinel、RabbitMQ、FastDFS/MinIO、SkyWalking等主要框架和中间件。希望能努力打造一套从 Web基础框架 - 分布式微服务架构 - 持续集成 - 系统监测 的解决方案。本项目旨在实现基础框架能力，不涉及具体业务。&lt;/span&gt;&lt;/p&gt;&lt;p data-track=&quot;82&quot; mp-original-font-size=&quot;18&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span&gt;灯灯(简称灯， 英文名：lamp)，他是一个项目的统称，由&quot;工具集&quot;、&quot;后端&quot;、&quot;前端&quot;组成，包含以下几个子项目：&lt;/span&gt;&lt;/p&gt;&lt;h1 data-track=&quot;83&quot; mp-original-font-size=&quot;17.95199966430664&quot; mp-original-line-height=&quot;28&quot;&gt;工具集&lt;/h1&gt;&lt;table mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;colgroup mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;col mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;/&gt;&lt;col mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;/&gt;&lt;/colgroup&gt;&lt;tbody mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;tr mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;td mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;p data-track=&quot;84&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;项目&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;p data-track=&quot;85&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;备注&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;td mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;p data-track=&quot;86&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;lamp-util&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;p data-track=&quot;87&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;核心工具集&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;td mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;p data-track=&quot;88&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;lamp-generator&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;p data-track=&quot;89&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;代码生成器&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;td mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;p data-track=&quot;90&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;lamp-job&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;p data-track=&quot;91&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;分布式定时调度器&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h1 data-track=&quot;92&quot; mp-original-font-size=&quot;17.95199966430664&quot; mp-original-line-height=&quot;28&quot;&gt;后端&lt;/h1&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;br mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;25.600000381469727&quot;/&gt;&lt;/p&gt;&lt;table mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;colgroup mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;col mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;/&gt;&lt;col mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;/&gt;&lt;/colgroup&gt;&lt;tbody mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;tr mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;td mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;p data-track=&quot;93&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;项目&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;p data-track=&quot;94&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;备注&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;td mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;p data-track=&quot;95&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;lamp-cloud&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;p data-track=&quot;96&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;SpringCloud(微服务)版&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;td mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;p data-track=&quot;97&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;lamp-boot&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;p data-track=&quot;98&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;SpringBoot(单体)版&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;td mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;p data-track=&quot;99&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;lamp-samples&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;p data-track=&quot;100&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;微服务版示例：常用示例&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h1 data-track=&quot;101&quot; mp-original-font-size=&quot;17.95199966430664&quot; mp-original-line-height=&quot;28&quot;&gt;前端&lt;/h1&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;br mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;25.600000381469727&quot;/&gt;&lt;/p&gt;&lt;table mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;colgroup mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;col mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;/&gt;&lt;col mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;/&gt;&lt;/colgroup&gt;&lt;tbody mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;tr mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;td mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;p data-track=&quot;102&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;项目&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;p data-track=&quot;103&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;备注&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;td mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;p data-track=&quot;104&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;lamp-web-plus(强烈推荐！)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;p data-track=&quot;105&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;基于 vue-vben-admin （vue 3 + ant design vue 2）&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;td mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;p data-track=&quot;106&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;lamp-web&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;p data-track=&quot;107&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;基于 vue-admin-element (element-ui)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h1 data-track=&quot;120&quot; mp-original-font-size=&quot;17.95199966430664&quot; mp-original-line-height=&quot;28&quot;&gt;新手小白高效的提问&lt;/h1&gt;&lt;p data-track=&quot;121&quot; mp-original-font-size=&quot;18&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span&gt;当你提出问题的时候，请先表明你已经做了上述的努力；这将有助于树立你并不是一个不劳而获且浪费别人的时间的提问者。如果你能一并表达在做了上述努力的过程中所学到的东西会更好，因为群主或者群里面其他大神更乐于回答那些表现出能从答案中学习的人的问题。另外，搜索公众号Linux就该这样学后台回复“git书籍”，获取一份惊喜礼包。&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot; mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;span&gt;用清晰、正确、精准并语法正确的语句，说清楚采用的什么版本（4.x还是3.x）、那个项目（boot还是cloud）、修改了什么代码、修改了什么配置？&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;span&gt;话不在多而在精&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;span&gt;问问题时，用最准确，最简单的语言描述清楚问题，而非说一堆废话，一堆表情。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;span&gt;描述问题症状而非你的猜测&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;span&gt;清楚明确的表达你的问题以及需求&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;span&gt;将报错信息截大图，能看清日志，看清那个模块，那行代码&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;span&gt;描述出现问题的步骤，或者功能菜单&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;span&gt;描述软件、工具的版本（nacos、idea/Eclipse、seata、mysql 等版本不同可能导致报错）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;span&gt;若基于本项目进行了源码、配置或者包名的修改导致的一些bug，请事先说明大概改了那些东西。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;span&gt;去掉无意义的提问句&lt;br mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;/&gt;避免用无意义的话结束提问，例如：&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;span&gt;有人能帮我吗？（请直接详细说明问题，而非等人回复：我来帮你）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;span&gt;项目无法启动怎么办？（请直接详细说明问题，而非等人回复：我来帮你）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;span&gt;群主在吗？（请直接详细说明问题，而非等人回复：我来帮你）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;span&gt;有个问题谁能帮帮我？（请直接详细说明问题，而非等人回复：我来帮你）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;span&gt;为什么更新代码后无法启动了啊？（请确保db和nacos里面的配置使用了最新版本）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;span&gt;&lt;span mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;这段时间有更新数据库脚本吗？有更新XX功能吗？(请看git 提交日志)&lt;br mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;/&gt;&lt;/span&gt;&lt;span mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;span mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;一般用以上方式提问或者咨询的，一律不予回复。&lt;/span&gt;&lt;/span&gt;&lt;span mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;span mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;一般用以上方式提问或者咨询的，一律不予回复。&lt;/span&gt;&lt;/span&gt;&lt;span mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;span mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;一般用以上方式提问或者咨询的，一律不予回复。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;span&gt;尽可能清晰的描述让群主如何复现，必要时提供大而全的截图，你修改之后的配置等；而非一直强调项目启动不了咋办？本地好的生产却不行？等等这些无意义的话语。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h1 data-track=&quot;139&quot; mp-original-font-size=&quot;17.95199966430664&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span&gt;如果得不到回答&lt;/span&gt;&lt;/h1&gt;&lt;p data-track=&quot;140&quot; mp-original-font-size=&quot;18&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span&gt;如果仍得不到回答，请不要以为我们觉得无法帮助你。有时只是看到你问题的人不知道答案罢了。没有回应不代表你被忽视，虽然不可否认这种差别很难区分。&lt;/span&gt;&lt;/p&gt;&lt;h1 data-track=&quot;141&quot; mp-original-font-size=&quot;17.95199966430664&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span&gt;为什么我问的问题没人回答，别人问的问题，却很快有人响应？&lt;/span&gt;&lt;/h1&gt;&lt;h1 mp-original-font-size=&quot;34&quot; mp-original-line-height=&quot;42&quot;&gt;&lt;span mp-original-font-size=&quot;24&quot; mp-original-line-height=&quot;30&quot;&gt;功能演示：&lt;/span&gt;&lt;/h1&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>04ca0228ebd1916e15f5fe00c49eb19c</guid>
<title>面试官：MySQL 上亿大表，如何深度优化？</title>
<link>https://toutiao.io/k/e7gmc5b</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;section&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;chksm=fa496f8ecd3ee698f4954c00efb80fe955ec9198fff3ef4011e331aa37f55a6a17bc8c0335a8&amp;amp;scene=21&amp;amp;token=899450012&amp;amp;lang=zh_CN#wechat_redirect&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.42625&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/GpcH5Yqqj0lclTjtMxWzia6WDDcl1xtCibgiaDlia09ucpJeeib2DN6NYuKPFZ6xuGXiaEdiabzyAQOqn1AqTE745dvNw/640?wx_fmt=jpeg&quot; data-w=&quot;800&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;前段时间刚入职一家公司，就遇上这事！&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;XX实例（一主一从）xxx告警中每天凌晨在报SLA报警，该报警的意思是存在一定的主从延迟（若在此时发生主从切换，需要长时间才可以完成切换，要追延迟来保证主从数据的一致性）&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;XX实例的慢查询数量最多（执行时间超过1s的sql会被记录），XX应用那方每天晚上在做删除一个月前数据的任务&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;基于 Spring Boot + MyBatis Plus + Vue &amp;amp; Element 实现的后台管理系统 + 用户小程序，支持 RBAC 动态权限、多租户、数据权限、工作流、三方登录、支付、短信、商城等功能&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;项目地址：https://github.com/YunaiV/ruoyi-vue-pro&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;视频教程：https://doc.iocoder.cn/video/&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用pt-query-digest工具分析最近一周的mysql-slow.log&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;pt-query-digest --since=&lt;span&gt;148&lt;/span&gt;h mysql-slow.log | less&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果第一部分&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.31118493909191586&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdLkEI9sZfdqxOUJEKOZjFwBZV5qAibLJcLdTzYWkqZVUeIDVdDXu3q5urWrFKZvZqr2YmfCqTStxKINvoSTchg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;903&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最近一个星期内，总共记录的慢查询执行花费时间为25403s，最大的慢sql执行时间为266s，平均每个慢sql执行时间5s，平均扫描的行数为1766万&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;结果第二部分&lt;/strong&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.27685185185185185&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdLkEI9sZfdqxOUJEKOZjFwBZV5qAibLJpFdwR6uQdTpAcMAK8Xwo8uibA5JeR92uNR17DsvqfM9UsFibGG7PIOfQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;select arrival_record操作记录的慢查询数量最多有4万多次，平均响应时间为4s，delete arrival_record记录了6次，平均响应时间258s。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;select xxx_record语句&lt;/strong&gt;&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;select arrival_record 慢查询语句都类似于如下所示，where语句中的参数字段是一样的，传入的参数值不一样
select count(*) from arrival_record where product_id=26 and receive_time between &#x27;2019-03-25 14:00:00&#x27; and &#x27;2019-03-25 15:00:00&#x27; and receive_spend_ms&amp;gt;=0\G&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.2794811320754717&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdLkEI9sZfdqxOUJEKOZjFwBZV5qAibLJd8AvSAWE6gpKOeEsov2bKeCl0lBW2XzeXj3j2tC5vbXPWic0T2CSkHA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;848&quot;/&gt;&lt;/span&gt;&lt;/a&gt;select arrival_record 语句在mysql中最多扫描的行数为5600万、平均扫描的行数为172万，推断由于扫描的行数多导致的执行时间长&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;查看执行计划&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;explain select &lt;span&gt;count&lt;/span&gt;&lt;span&gt;(*)&lt;/span&gt; from arrival_record where product_id&lt;/span&gt;=&lt;span&gt;26&lt;/span&gt; and receive_time between &lt;span&gt;&#x27;2019-03-25 14:00:00&#x27;&lt;/span&gt; and &lt;span&gt;&#x27;2019-03-25 15:00:00&#x27;&lt;/span&gt; and receive_spend_ms&amp;gt;=&lt;span&gt;0&lt;/span&gt;\G;&lt;br/&gt;*************************** &lt;span&gt;1&lt;/span&gt;. row ***************************&lt;br/&gt;id: &lt;span&gt;1&lt;/span&gt;&lt;br/&gt;select_type: SIMPLE&lt;br/&gt;table: arrival_record&lt;br/&gt;partitions: NULL&lt;br/&gt;type: ref&lt;br/&gt;possible_keys: IXFK_arrival_record&lt;br/&gt;key: IXFK_arrival_record&lt;br/&gt;key_len: &lt;span&gt;8&lt;/span&gt;&lt;br/&gt;ref: &lt;span&gt;const&lt;/span&gt;&lt;br/&gt;rows: &lt;span&gt;32261320&lt;/span&gt;&lt;br/&gt;filtered: &lt;span&gt;3.70&lt;/span&gt;&lt;br/&gt;Extra: Using index condition; Using where&lt;br/&gt;&lt;span&gt;1&lt;/span&gt; row in set, &lt;span&gt;1&lt;/span&gt; warning (&lt;span&gt;0.00&lt;/span&gt; sec)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;用到了索引IXFK_arrival_record，但预计扫描的行数很多有3000多w行&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;show index from arrival_record;&lt;br/&gt;+----------------+------------+---------------------+--------------+--------------+-----------+-------------+----------+--------+------+------------+---------+---------------+&lt;br/&gt;| Table | Non_unique | Key_name | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment | Index_comment |&lt;br/&gt;+----------------+------------+---------------------+--------------+--------------+-----------+-------------+----------+--------+------+------------+---------+---------------+&lt;br/&gt;| arrival_record | &lt;span&gt;0&lt;/span&gt; | PRIMARY | &lt;span&gt;1&lt;/span&gt; | id | A | &lt;span&gt;107990720&lt;/span&gt; | NULL | NULL | | BTREE | | |&lt;br/&gt;| arrival_record | &lt;span&gt;1&lt;/span&gt; | IXFK_arrival_record | &lt;span&gt;1&lt;/span&gt; | product_id | A | &lt;span&gt;1344&lt;/span&gt; | NULL | NULL | | BTREE | | |&lt;br/&gt;| arrival_record | &lt;span&gt;1&lt;/span&gt; | IXFK_arrival_record | &lt;span&gt;2&lt;/span&gt; | station_no | A | &lt;span&gt;22161&lt;/span&gt; | NULL | NULL | YES | BTREE | | |&lt;br/&gt;| arrival_record | &lt;span&gt;1&lt;/span&gt; | IXFK_arrival_record | &lt;span&gt;3&lt;/span&gt; | sequence | A | &lt;span&gt;77233384&lt;/span&gt; | NULL | NULL | | BTREE | | |&lt;br/&gt;| arrival_record | &lt;span&gt;1&lt;/span&gt; | IXFK_arrival_record | &lt;span&gt;4&lt;/span&gt; | receive_time | A | &lt;span&gt;65854652&lt;/span&gt; | NULL | NULL | YES | BTREE | | |&lt;br/&gt;| arrival_record | &lt;span&gt;1&lt;/span&gt; | IXFK_arrival_record | &lt;span&gt;5&lt;/span&gt; | arrival_time | A | &lt;span&gt;73861904&lt;/span&gt; | NULL | NULL | YES | BTREE | | |&lt;br/&gt;+----------------+------------+---------------------+--------------+--------------+-----------+-------------+----------+--------+------+------------+---------+---------------+&lt;br/&gt;show create table arrival_record;&lt;br/&gt;..........&lt;br/&gt;&lt;span&gt;arrival_spend_ms &lt;span&gt;bigint&lt;/span&gt;&lt;span&gt;(&lt;span&gt;20&lt;/span&gt;)&lt;/span&gt; DEFAULT NULL,&lt;br/&gt;total_spend_ms &lt;span&gt;bigint&lt;/span&gt;&lt;span&gt;(&lt;span&gt;20&lt;/span&gt;)&lt;/span&gt; DEFAULT NULL,&lt;br/&gt;PRIMARY &lt;span&gt;KEY&lt;/span&gt; &lt;span&gt;(id)&lt;/span&gt;,&lt;br/&gt;KEY &lt;span&gt;IXFK_arrival_record&lt;/span&gt; &lt;span&gt;(product_id,station_no,sequence,receive_time,arrival_time)&lt;/span&gt; USING BTREE,&lt;br/&gt;CONSTRAINT FK_arrival_record_product FOREIGN &lt;span&gt;KEY&lt;/span&gt; &lt;span&gt;(product_id)&lt;/span&gt; REFERENCES &lt;span&gt;product&lt;/span&gt; &lt;span&gt;(id)&lt;/span&gt; ON DELETE NO ACTION ON UPDATE NO ACTION&lt;br/&gt;) ENGINE&lt;/span&gt;=InnoDB AUTO_INCREMENT=&lt;span&gt;614538979&lt;/span&gt; DEFAULT CHARSET=utf8 COLLATE=utf8_bin |&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;该表总记录数约1亿多条，表上只有一个复合索引，product_id字段基数很小，选择性不好&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;传入的过滤条件 where product_id=26 and receive_time between &#x27;2019-03-25 14:00:00&#x27; and &#x27;2019-03-25 15:00:00&#x27; and receive_spend_ms&amp;gt;=0 没有station_nu字段，使用不到复合索引 IXFK_arrival_record的 &lt;code&gt;product_id&lt;/code&gt;,&lt;code&gt;station_no&lt;/code&gt;,&lt;code&gt;sequence&lt;/code&gt;,&lt;code&gt;receive_time&lt;/code&gt; 这几个字段&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;根据最左前缀原则，select arrival_record只用到了复合索引IXFK_arrival_record的第一个字段product_id，而该字段选择性很差，导致扫描的行数很多，执行时间长&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;receive_time字段的基数大，选择性好，可对该字段单独建立索引，select arrival_record sql就会使用到该索引&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;现在已经知道了在慢查询中记录的select arrival_record where语句传入的参数字段有 product_id，receive_time，receive_spend_ms，还想知道对该表的访问有没有通过其它字段来过滤了？&lt;/p&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;神器tcpdump出场的时候到了&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用tcpdump抓包一段时间对该表的select语句&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;tcpdump -i bond0 -s &lt;span&gt;0&lt;/span&gt; -l -w - dst port &lt;span&gt;3316&lt;/span&gt; | strings | grep select | egrep -i &lt;span&gt;&#x27;arrival_record&#x27;&lt;/span&gt; &amp;gt;/tmp/select_arri.log&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;获取select 语句中from 后面的where条件语句&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;IFS_OLD=$IFS&lt;br/&gt;IFS=$&lt;span&gt;&#x27;\n&#x27;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;for&lt;/span&gt; i in `cat /tmp/select_arri.log `;&lt;span&gt;do&lt;/span&gt; echo ${i#*&lt;span&gt;&#x27;from&#x27;&lt;/span&gt;}; done | less&lt;br/&gt;IFS=$IFS_OLD&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;arrival_record arrivalrec0_ where arrivalrec0_.sequence=&lt;span&gt;&#x27;2019-03-27 08:40&#x27;&lt;/span&gt; and arrivalrec0_.product_id=&lt;span&gt;17&lt;/span&gt; and arrivalrec0_.station_no=&lt;span&gt;&#x27;56742&#x27;&lt;/span&gt;&lt;br/&gt;arrival_record arrivalrec0_ where arrivalrec0_.sequence=&lt;span&gt;&#x27;2019-03-27 08:40&#x27;&lt;/span&gt; and arrivalrec0_.product_id=&lt;span&gt;22&lt;/span&gt; and arrivalrec0_.station_no=&lt;span&gt;&#x27;S7100&#x27;&lt;/span&gt;&lt;br/&gt;arrival_record arrivalrec0_ where arrivalrec0_.sequence=&lt;span&gt;&#x27;2019-03-27 08:40&#x27;&lt;/span&gt; and arrivalrec0_.product_id=&lt;span&gt;24&lt;/span&gt; and arrivalrec0_.station_no=&lt;span&gt;&#x27;V4631&#x27;&lt;/span&gt;&lt;br/&gt;arrival_record arrivalrec0_ where arrivalrec0_.sequence=&lt;span&gt;&#x27;2019-03-27 08:40&#x27;&lt;/span&gt; and arrivalrec0_.product_id=&lt;span&gt;22&lt;/span&gt; and arrivalrec0_.station_no=&lt;span&gt;&#x27;S9466&#x27;&lt;/span&gt;&lt;br/&gt;arrival_record arrivalrec0_ where arrivalrec0_.sequence=&lt;span&gt;&#x27;2019-03-27 08:40&#x27;&lt;/span&gt; and arrivalrec0_.product_id=&lt;span&gt;24&lt;/span&gt; and arrivalrec0_.station_no=&lt;span&gt;&#x27;V4205&#x27;&lt;/span&gt;&lt;br/&gt;arrival_record arrivalrec0_ where arrivalrec0_.sequence=&lt;span&gt;&#x27;2019-03-27 08:40&#x27;&lt;/span&gt; and arrivalrec0_.product_id=&lt;span&gt;24&lt;/span&gt; and arrivalrec0_.station_no=&lt;span&gt;&#x27;V4105&#x27;&lt;/span&gt;&lt;br/&gt;arrival_record arrivalrec0_ where arrivalrec0_.sequence=&lt;span&gt;&#x27;2019-03-27 08:40&#x27;&lt;/span&gt; and arrivalrec0_.product_id=&lt;span&gt;24&lt;/span&gt; and arrivalrec0_.station_no=&lt;span&gt;&#x27;V4506&#x27;&lt;/span&gt;&lt;br/&gt;arrival_record arrivalrec0_ where arrivalrec0_.sequence=&lt;span&gt;&#x27;2019-03-27 08:40&#x27;&lt;/span&gt; and arrivalrec0_.product_id=&lt;span&gt;24&lt;/span&gt; and arrivalrec0_.station_no=&lt;span&gt;&#x27;V4617&#x27;&lt;/span&gt;&lt;br/&gt;arrival_record arrivalrec0_ where arrivalrec0_.sequence=&lt;span&gt;&#x27;2019-03-27 08:40&#x27;&lt;/span&gt; and arrivalrec0_.product_id=&lt;span&gt;22&lt;/span&gt; and arrivalrec0_.station_no=&lt;span&gt;&#x27;S8356&#x27;&lt;/span&gt;&lt;br/&gt;arrival_record arrivalrec0_ where arrivalrec0_.sequence=&lt;span&gt;&#x27;2019-03-27 08:40&#x27;&lt;/span&gt; and arrivalrec0_.product_id=&lt;span&gt;22&lt;/span&gt; and arrivalrec0_.station_no=&lt;span&gt;&#x27;S8356&#x27;&lt;/span&gt;&lt;br/&gt;select 该表 where条件中有product_id,station_no,sequence字段，可以使用到复合索引IXFK_arrival_record的前三个字段&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;综上所示，优化方法为，删除复合索引IXFK_arrival_record，建立复合索引idx_sequence_station_no_product_id，并建立单独索引indx_receive_time&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;delete xxx_record语句&lt;/strong&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.2529002320185615&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdLkEI9sZfdqxOUJEKOZjFwBZV5qAibLJeoOdWcdzYFJY7na7fc3Oia3OHAn6xSPyxBnx2hzraQo3mOmIQZxlVPg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;862&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/figure&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;该delete操作平均扫描行数为1.1亿行，平均执行时间是262s&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;delete语句如下所示，每次记录的慢查询传入的参数值不一样&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;delete from arrival_record where receive_time &amp;lt; STR_TO_DATE(&lt;span&gt;&#x27;2019-02-23&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;%Y-%m-%d&#x27;&lt;/span&gt;)\G&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;执行计划&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;explain select * from arrival_record where receive_time &amp;lt; STR_TO_DATE(&lt;span&gt;&#x27;2019-02-23&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;%Y-%m-%d&#x27;&lt;/span&gt;)\G&lt;br/&gt;*************************** &lt;span&gt;1&lt;/span&gt;. row ***************************&lt;br/&gt;id: &lt;span&gt;1&lt;/span&gt;&lt;br/&gt;select_type: SIMPLE&lt;br/&gt;table: arrival_record&lt;br/&gt;partitions: NULL&lt;br/&gt;type: ALL&lt;br/&gt;possible_keys: NULL&lt;br/&gt;key: NULL&lt;br/&gt;key_len: NULL&lt;br/&gt;ref: NULL&lt;br/&gt;rows: &lt;span&gt;109501508&lt;/span&gt;&lt;br/&gt;filtered: &lt;span&gt;33.33&lt;/span&gt;&lt;br/&gt;Extra: Using where&lt;br/&gt;&lt;span&gt;1&lt;/span&gt; row in set, &lt;span&gt;1&lt;/span&gt; warning (&lt;span&gt;0.00&lt;/span&gt; sec)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;该delete语句没有使用索引（没有合适的索引可用），走的全表扫描，导致执行时间长&lt;/p&gt;&lt;p&gt;优化方法也是 建立单独索引indx_receive_time(receive_time)&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;基于 Spring Cloud Alibaba + Gateway + Nacos + RocketMQ + Vue &amp;amp; Element 实现的后台管理系统 + 用户小程序，支持 RBAC 动态权限、多租户、数据权限、工作流、三方登录、支付、短信、商城等功能&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;项目地址：https://github.com/YunaiV/yudao-cloud&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;视频教程：https://doc.iocoder.cn/video/&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;拷贝arrival_record表到测试实例上进行删除重新索引操作&lt;strong&gt;XX实例arrival_record表信息&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;du -sh /datas/mysql/data/&lt;span&gt;3316&lt;/span&gt;/cq_new_cimiss/arrival_record*&lt;br/&gt;&lt;span&gt;12&lt;/span&gt;K /datas/mysql/data/&lt;span&gt;3316&lt;/span&gt;/cq_new_cimiss/arrival_record.frm&lt;br/&gt;&lt;span&gt;48&lt;/span&gt;G /datas/mysql/data/&lt;span&gt;3316&lt;/span&gt;/cq_new_cimiss/arrival_record.&lt;span&gt;ibd&lt;br/&gt;select &lt;span&gt;count&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; from cq_new_cimiss.arrival_record&lt;/span&gt;;&lt;br/&gt;+-----------+&lt;br/&gt;| count() |&lt;br/&gt;+-----------+&lt;br/&gt;| &lt;span&gt;112294946&lt;/span&gt; |&lt;br/&gt;+-----------+&lt;br/&gt;&lt;span&gt;1&lt;/span&gt;亿多记录数&lt;br/&gt;&lt;br/&gt;SELECT&lt;br/&gt;table_name,&lt;br/&gt;CONCAT(FORMAT(SUM(data_length) / &lt;span&gt;1024&lt;/span&gt; / &lt;span&gt;1024&lt;/span&gt;,&lt;span&gt;2&lt;/span&gt;),&lt;span&gt;&#x27;M&#x27;&lt;/span&gt;) AS dbdata_size,&lt;br/&gt;CONCAT(FORMAT(SUM(index_length) / &lt;span&gt;1024&lt;/span&gt; / &lt;span&gt;1024&lt;/span&gt;,&lt;span&gt;2&lt;/span&gt;),&lt;span&gt;&#x27;M&#x27;&lt;/span&gt;) AS dbindex_size,&lt;br/&gt;CONCAT(FORMAT(SUM(data_length + index_length) / &lt;span&gt;1024&lt;/span&gt; / &lt;span&gt;1024&lt;/span&gt; / &lt;span&gt;1024&lt;/span&gt;,&lt;span&gt;2&lt;/span&gt;),&lt;span&gt;&#x27;G&#x27;&lt;/span&gt;) &lt;span&gt;AS &lt;span&gt;table_size&lt;/span&gt;&lt;span&gt;(G)&lt;/span&gt;,&lt;br/&gt;AVG_ROW_LENGTH,table_rows,update_time&lt;br/&gt;FROM&lt;br/&gt;information_schema.tables&lt;br/&gt;WHERE table_schema &lt;/span&gt;= &lt;span&gt;&#x27;cq_new_cimiss&#x27;&lt;/span&gt; and table_name=&lt;span&gt;&#x27;arrival_record&#x27;&lt;/span&gt;;&lt;br/&gt;+----------------+-------------+--------------+------------+----------------+------------+---------------------+&lt;br/&gt;| table_name | dbdata_size | dbindex_size | table_size(G) | AVG_ROW_LENGTH | table_rows | update_time |&lt;br/&gt;+----------------+-------------+--------------+------------+----------------+------------+---------------------+&lt;br/&gt;| arrival_record | &lt;span&gt;18&lt;/span&gt;,&lt;span&gt;268.02&lt;/span&gt;M | &lt;span&gt;13&lt;/span&gt;,&lt;span&gt;868.05&lt;/span&gt;M | &lt;span&gt;31.38&lt;/span&gt;G | &lt;span&gt;175&lt;/span&gt; | &lt;span&gt;109155053&lt;/span&gt; | &lt;span&gt;2019&lt;/span&gt;-&lt;span&gt;03&lt;/span&gt;-&lt;span&gt;26&lt;/span&gt; &lt;span&gt;12&lt;/span&gt;:&lt;span&gt;40&lt;/span&gt;:&lt;span&gt;17&lt;/span&gt; |&lt;br/&gt;+----------------+-------------+--------------+------------+----------------+------------+---------------------+&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;磁盘占用空间48G，mysql中该表大小为31G，存在17G左右的碎片，大多由于删除操作造成的（记录被删除了，空间没有回收)&lt;/p&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;备份还原该表到新的实例中，删除原来的复合索引，重新添加索引进行测试&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;mydumper并行压缩备份&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;user=root&lt;br/&gt;passwd=xxxx&lt;br/&gt;socket=/datas/mysql/data/&lt;span&gt;3316&lt;/span&gt;/mysqld.sock&lt;br/&gt;db=cq_new_cimiss&lt;br/&gt;table_name=arrival_record&lt;br/&gt;backupdir=/datas/dump_$table_name&lt;br/&gt;mkdir -p $backupdir&lt;br/&gt;  nohup echo `date +%T` &amp;amp;&amp;amp; mydumper -u $user -p $passwd -S $socket -B $db -c -T $table_name -o $backupdir -t &lt;span&gt;32&lt;/span&gt; -r &lt;span&gt;2000000&lt;/span&gt; &amp;amp;&amp;amp; echo `date +%T` &amp;amp;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;并行压缩备份所花时间（52s）和占用空间（1.2G，实际该表占用磁盘空间为48G，mydumper并行压缩备份压缩比相当高！）&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;Started dump at: &lt;span&gt;2019&lt;/span&gt;-&lt;span&gt;03&lt;/span&gt;-&lt;span&gt;26&lt;/span&gt; &lt;span&gt;12&lt;/span&gt;:&lt;span&gt;46&lt;/span&gt;:&lt;span&gt;04&lt;/span&gt;&lt;br/&gt;........&lt;br/&gt;&lt;br/&gt;Finished dump at: &lt;span&gt;2019&lt;/span&gt;-&lt;span&gt;03&lt;/span&gt;-&lt;span&gt;26&lt;/span&gt; &lt;span&gt;12&lt;/span&gt;:&lt;span&gt;46&lt;/span&gt;:&lt;span&gt;56&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;du -sh   /datas/dump_arrival_record/&lt;br/&gt;&lt;span&gt;1.2&lt;/span&gt;G  /datas/dump_arrival_record/&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;拷贝dump数据到测试节点&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;scp -rp /datas/dump_arrival_record root@&lt;span&gt;10.230&lt;/span&gt;&lt;span&gt;.124&lt;/span&gt;&lt;span&gt;.19&lt;/span&gt;:/datas&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;多线程导入数据&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;time myloader -u root -S /datas/mysql/data/&lt;span&gt;3308&lt;/span&gt;/mysqld.sock -P &lt;span&gt;3308&lt;/span&gt; -p root -B test -d /datas/dump_arrival_record -t &lt;span&gt;32&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;real 126m42.885s
user 1m4.543s
sys 0m4.267s&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;逻辑导入该表后磁盘占用空间&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;du -h -d &lt;span&gt;1&lt;/span&gt; /datas/mysql/data/&lt;span&gt;3308&lt;/span&gt;/test/arrival_record.*&lt;br/&gt;&lt;span&gt;12&lt;/span&gt;K /datas/mysql/data/&lt;span&gt;3308&lt;/span&gt;/test/arrival_record.frm&lt;br/&gt;&lt;span&gt;30&lt;/span&gt;G /datas/mysql/data/&lt;span&gt;3308&lt;/span&gt;/test/arrival_record.ibd&lt;br/&gt;没有碎片，和mysql的该表的大小一致&lt;br/&gt;cp -rp /datas/mysql/data/&lt;span&gt;3308&lt;/span&gt; /datas&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;分别使用online DDL和 pt-osc工具来做删除重建索引操作
先删除外键，不删除外键，无法删除复合索引，外键列属于复合索引中第一列&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;nohup bash /tmp/ddl_index.sh &amp;amp;&lt;br/&gt;&lt;span&gt;2019&lt;/span&gt;-&lt;span&gt;04&lt;/span&gt;-&lt;span&gt;04&lt;/span&gt;-&lt;span&gt;10&lt;/span&gt;:&lt;span&gt;41&lt;/span&gt;:&lt;span&gt;39&lt;/span&gt; begin stop mysqld_3308&lt;br/&gt;&lt;span&gt;2019&lt;/span&gt;-&lt;span&gt;04&lt;/span&gt;-&lt;span&gt;04&lt;/span&gt;-&lt;span&gt;10&lt;/span&gt;:&lt;span&gt;41&lt;/span&gt;:&lt;span&gt;41&lt;/span&gt; begin rm -rf datadir and cp -rp datadir_bak&lt;br/&gt;&lt;span&gt;2019&lt;/span&gt;-&lt;span&gt;04&lt;/span&gt;-&lt;span&gt;04&lt;/span&gt;-&lt;span&gt;10&lt;/span&gt;:&lt;span&gt;46&lt;/span&gt;:&lt;span&gt;53&lt;/span&gt; start mysqld_3308&lt;br/&gt;&lt;span&gt;2019&lt;/span&gt;-&lt;span&gt;04&lt;/span&gt;-&lt;span&gt;04&lt;/span&gt;-&lt;span&gt;10&lt;/span&gt;:&lt;span&gt;46&lt;/span&gt;:&lt;span&gt;59&lt;/span&gt; online ddl begin&lt;br/&gt;&lt;span&gt;2019&lt;/span&gt;-&lt;span&gt;04&lt;/span&gt;-&lt;span&gt;04&lt;/span&gt;-&lt;span&gt;11&lt;/span&gt;:&lt;span&gt;20&lt;/span&gt;:&lt;span&gt;34&lt;/span&gt; onlie ddl stop&lt;br/&gt;&lt;span&gt;2019&lt;/span&gt;-&lt;span&gt;04&lt;/span&gt;-&lt;span&gt;04&lt;/span&gt;-&lt;span&gt;11&lt;/span&gt;:&lt;span&gt;20&lt;/span&gt;:&lt;span&gt;34&lt;/span&gt; begin stop mysqld_3308&lt;br/&gt;&lt;span&gt;2019&lt;/span&gt;-&lt;span&gt;04&lt;/span&gt;-&lt;span&gt;04&lt;/span&gt;-&lt;span&gt;11&lt;/span&gt;:&lt;span&gt;20&lt;/span&gt;:&lt;span&gt;36&lt;/span&gt; begin rm -rf datadir and cp -rp datadir_bak&lt;br/&gt;&lt;span&gt;2019&lt;/span&gt;-&lt;span&gt;04&lt;/span&gt;-&lt;span&gt;04&lt;/span&gt;-&lt;span&gt;11&lt;/span&gt;:&lt;span&gt;22&lt;/span&gt;:&lt;span&gt;48&lt;/span&gt; start mysqld_3308&lt;br/&gt;&lt;span&gt;2019&lt;/span&gt;-&lt;span&gt;04&lt;/span&gt;-&lt;span&gt;04&lt;/span&gt;-&lt;span&gt;11&lt;/span&gt;:&lt;span&gt;22&lt;/span&gt;:&lt;span&gt;53&lt;/span&gt; pt-osc begin&lt;br/&gt;&lt;span&gt;2019&lt;/span&gt;-&lt;span&gt;04&lt;/span&gt;-&lt;span&gt;04&lt;/span&gt;-&lt;span&gt;12&lt;/span&gt;:&lt;span&gt;19&lt;/span&gt;:&lt;span&gt;15&lt;/span&gt; pt-osc stop&lt;br/&gt;online ddl 花费时间为&lt;span&gt;34&lt;/span&gt; 分钟，pt-osc花费时间为&lt;span&gt;57&lt;/span&gt; 分钟，使用onlne ddl时间约为pt-osc工具时间的一半&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;*&lt;strong&gt;做DDL 参考&lt;/strong&gt; *&lt;/p&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7115384615384616&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdLkEI9sZfdqxOUJEKOZjFwBZV5qAibLJhOIIFaxHvfpsibyCXBGNMM5e7TWibXwPq3Bll9iavILDYjiaKZ9pQoJHYw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;832&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由于是一主一从实例，应用是连接的vip，删除重建索引采用online ddl来做。停止主从复制后，先在从实例上做（不记录binlog），主从切换，再在新切换的从实例上做（不记录binlog)&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;function &lt;span&gt;red_echo&lt;/span&gt; &lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;br/&gt;        local what=&lt;span&gt;&quot;$*&quot;&lt;/span&gt;&lt;br/&gt;        echo -e &lt;span&gt;&quot;$(date +%F-%T)  ${what}&quot;&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;function &lt;span&gt;check_las_comm&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;&lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; [ &lt;span&gt;&quot;$1&quot;&lt;/span&gt; != &lt;span&gt;&quot;0&quot;&lt;/span&gt; ];then&lt;br/&gt;        red_echo &lt;span&gt;&quot;$2&quot;&lt;/span&gt;&lt;br/&gt;        echo &lt;span&gt;&quot;exit 1&quot;&lt;/span&gt;&lt;br/&gt;        exit &lt;span&gt;1&lt;/span&gt;&lt;br/&gt;    fi&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;red_echo &lt;span&gt;&quot;stop slave&quot;&lt;/span&gt;&lt;br/&gt;mysql -uroot -p$passwd --socket=/datas/mysql/data/${port}/mysqld.sock -e&lt;span&gt;&quot;stop slave&quot;&lt;/span&gt;&lt;br/&gt;check_las_comm &lt;span&gt;&quot;$?&quot;&lt;/span&gt; &lt;span&gt;&quot;stop slave failed&quot;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;red_echo &lt;span&gt;&quot;online ddl begin&quot;&lt;/span&gt;&lt;br/&gt; mysql -uroot -p$passwd --socket=/datas/mysql/data/${port}/mysqld.sock -e&lt;span&gt;&quot;set sql_log_bin=0;select now() as  ddl_start;ALTER TABLE $db_.\`${table_name}\` DROP FOREIGN KEY FK_arrival_record_product,drop index IXFK_arrival_record,add index idx_product_id_sequence_station_no(product_id,sequence,station_no),add index idx_receive_time(receive_time);select now() as ddl_stop&quot;&lt;/span&gt; &amp;gt;&amp;gt;${log_file} &lt;span&gt;2&lt;/span&gt;&amp;gt;&amp;amp; &lt;span&gt;1&lt;/span&gt;&lt;br/&gt; red_echo &lt;span&gt;&quot;onlie ddl stop&quot;&lt;/span&gt;&lt;br/&gt; red_echo &lt;span&gt;&quot;add foreign key&quot;&lt;/span&gt;&lt;br/&gt; mysql -uroot -p$passwd --socket=/datas/mysql/data/${port}/mysqld.sock -e&lt;span&gt;&quot;set sql_log_bin=0;ALTER TABLE $db_.${table_name} ADD CONSTRAINT _FK_${table_name}_product FOREIGN KEY (product_id) REFERENCES cq_new_cimiss.product (id) ON DELETE NO ACTION ON UPDATE NO ACTION;&quot;&lt;/span&gt; &amp;gt;&amp;gt;${log_file} &lt;span&gt;2&lt;/span&gt;&amp;gt;&amp;amp; &lt;span&gt;1&lt;/span&gt;&lt;br/&gt; check_las_comm &lt;span&gt;&quot;$?&quot;&lt;/span&gt; &lt;span&gt;&quot;add foreign key error&quot;&lt;/span&gt;&lt;br/&gt; red_echo &lt;span&gt;&quot;add foreign key stop&quot;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;red_echo &lt;span&gt;&quot;start slave&quot;&lt;/span&gt;&lt;br/&gt;mysql -uroot -p$passwd --socket=/datas/mysql/data/${port}/mysqld.sock -e&lt;span&gt;&quot;start slave&quot;&lt;/span&gt;&lt;br/&gt;check_las_comm &lt;span&gt;&quot;$?&quot;&lt;/span&gt; &lt;span&gt;&quot;start slave failed&quot;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;*&lt;strong&gt;执行时间&lt;/strong&gt; *&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2019-04-08-11:17:36 stop slave
mysql: [Warning] Using a password on the command line interface can be insecure.
ddl_start
2019-04-08 &lt;strong&gt;11:17:36&lt;/strong&gt;ddl_stop
2019-04-08 &lt;strong&gt;11:45:13&lt;/strong&gt;2019-04-08-11:45:13 onlie ddl stop
2019-04-08-&lt;strong&gt;11:45:13&lt;/strong&gt; add foreign key
mysql: [Warning] Using a password on the command line interface can be insecure.
2019-04-08-12:33:48 add foreign key stop
2019-04-08-&lt;strong&gt;12:33:48&lt;/strong&gt; start slave&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;*&lt;strong&gt;再次查看delete 和select语句的执行计划&lt;/strong&gt; *&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;explain select &lt;span&gt;count&lt;/span&gt;&lt;span&gt;(*)&lt;/span&gt; from arrival_record where receive_time &amp;lt; &lt;span&gt;STR_TO_DATE&lt;/span&gt;&lt;span&gt;(&lt;span&gt;&#x27;2019-03-10&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;%Y-%m-%d&#x27;&lt;/span&gt;)&lt;/span&gt;\G&lt;br/&gt;*************************** 1. row ***************************&lt;br/&gt;id: 1&lt;br/&gt;select_type: SIMPLE&lt;br/&gt;table: arrival_record&lt;br/&gt;partitions: NULL&lt;br/&gt;type: range&lt;br/&gt;possible_keys: idx_receive_time&lt;br/&gt;key: idx_receive_time&lt;br/&gt;key_len: 6&lt;br/&gt;ref: NULL&lt;br/&gt;rows: 7540948&lt;br/&gt;filtered: 100.00&lt;br/&gt;Extra: Using where&lt;/span&gt;; &lt;span&gt;Using index&lt;br/&gt;explain select &lt;span&gt;count&lt;/span&gt;&lt;span&gt;(*)&lt;/span&gt; from arrival_record where product_id&lt;/span&gt;=&lt;span&gt;26&lt;/span&gt; and receive_time between &lt;span&gt;&#x27;2019-03-25 14:00:00&#x27;&lt;/span&gt; and &lt;span&gt;&#x27;2019-03-25 15:00:00&#x27;&lt;/span&gt; and receive_spend_ms&amp;gt;=&lt;span&gt;0&lt;/span&gt;\G;&lt;br/&gt;*************************** &lt;span&gt;1&lt;/span&gt;. row ***************************&lt;br/&gt;id: &lt;span&gt;1&lt;/span&gt;&lt;br/&gt;select_type: SIMPLE&lt;br/&gt;table: arrival_record&lt;br/&gt;partitions: NULL&lt;br/&gt;type: range&lt;br/&gt;possible_keys: idx_product_id_sequence_station_no,idx_receive_time&lt;br/&gt;key: idx_receive_time&lt;br/&gt;key_len: &lt;span&gt;6&lt;/span&gt;&lt;br/&gt;ref: NULL&lt;br/&gt;rows: &lt;span&gt;291448&lt;/span&gt;&lt;br/&gt;filtered: &lt;span&gt;16.66&lt;/span&gt;&lt;br/&gt;Extra: Using index condition; Using where&lt;br/&gt;都使用到了idx_receive_time 索引，扫描的行数大大降低&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;delete 还是花费了77s时间&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;delete from arrival_record where receive_time &amp;lt; STR_TO_DATE(&lt;span&gt;&#x27;2019-03-10&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;%Y-%m-%d&#x27;&lt;/span&gt;)\G&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.31767955801104975&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdLkEI9sZfdqxOUJEKOZjFwBZV5qAibLJNITLjpW92IOib0nULfUvKYtQicEzcWuPelHiabCT7ZibpZEGMHtibibkXLhw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;724&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/figure&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;delete 语句通过receive_time的索引删除300多万的记录花费77s时间*&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;*&lt;strong&gt;应用端已优化成每次删除10分钟的数据（每次执行时间1s左右），xxx中没在出现SLA（主从延迟告警）&lt;/strong&gt; *&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6502525252525253&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdLkEI9sZfdqxOUJEKOZjFwBZV5qAibLJLth6eY0eu607qVQhsxUrI6uNMQrGFkohRbU3Y3GoAH5J4cy8DsIQ8w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;792&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;*&lt;strong&gt;另一个方法是通过主键的顺序每次删除20000条记录&lt;/strong&gt; *&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;#得到满足时间条件的最大主键ID&lt;br/&gt;#通过按照主键的顺序去 顺序扫描小批量删除数据&lt;br/&gt;#先执行一次以下语句&lt;br/&gt; &lt;span&gt;SELECT &lt;span&gt;MAX&lt;/span&gt;&lt;span&gt;(id)&lt;/span&gt; INTO @need_delete_max_id FROM `arrival_record` WHERE receive_time&amp;lt;&#x27;2019-03-01&#x27; &lt;/span&gt;;&lt;br/&gt; DELETE FROM arrival_record WHERE id&amp;lt;&lt;span&gt;@need&lt;/span&gt;_delete_max_id LIMIT &lt;span&gt;20000&lt;/span&gt;;&lt;br/&gt; &lt;span&gt;select &lt;span&gt;ROW_COUNT&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;&lt;/span&gt;;  #返回&lt;span&gt;20000&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;#执行小批量delete后会返回row_count(), 删除的行数&lt;br/&gt;#程序判断返回的row_count()是否为&lt;span&gt;0&lt;/span&gt;，不为&lt;span&gt;0&lt;/span&gt;执行以下循环，为&lt;span&gt;0&lt;/span&gt;退出循环，删除操作完成&lt;br/&gt; DELETE FROM arrival_record WHERE id&amp;lt;&lt;span&gt;@need&lt;/span&gt;_delete_max_id LIMIT &lt;span&gt;20000&lt;/span&gt;;&lt;br/&gt; &lt;span&gt;select &lt;span&gt;ROW_COUNT&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;br/&gt;#程序睡眠&lt;span&gt;0.5&lt;/span&gt;s&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;表数据量太大时，除了关注访问该表的响应时间外，还要关注对该表的维护成本（如做DDL表更时间太长，delete历史数据）。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;对大表进行DDL操作时，要考虑表的实际情况（如对该表的并发表，是否有外键）来选择合适的DDL变更方式。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;对大数据量表进行delete，用小批量删除的方式，减少对主实例的压力和主从延迟。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>64e90924e72a6753b9d08a742327afa9</guid>
<title>《程序员数学：素数》：你真的了解 RSA 加密算法吗？</title>
<link>https://toutiao.io/k/e6wsl14</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;一、什么是素数&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;二、对称加密和非对称加密&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;三、算法公式推导&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;四、关于RSA算法&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;五、实现RSA算法&lt;/p&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;1. 互为质数的p、q&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;2. 乘积n&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;3.  欧拉公式 φ(n)&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;4. 选取公钥e&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;5. 选取私钥d&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;6. 加密&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;7. 解密&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;8. 测试&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;p&gt;六、RSA数学原理&lt;/p&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;1. 模运算&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;2. 最大公约数&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;3. 线性同余方程&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;4. 中国余数定理&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;5. 费马小定理&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;6. 算法证明&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;p&gt;七、常见面试题&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;hr/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;记得那是我毕业🎓后的第一个秋天，申请了域名，搭建了论坛。可惜好景不长，没多久进入论坛后就出现各种乱七八糟的广告，而这些广告压根都不是我加的。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5283505154639175&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/zTfAIs5rNXiaG8icOYvw60oGtDk20C2Jicl0m2BFc9ic7fyWtZ2DPXhHMMUvdgoqz3jS6aQ1UDpNjF4SGs86JVDFAA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;776&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这是怎么回事？后来我才知道，原来我的论坛没有加 HTTPS 也就是没有 SSL 证书。那这和数学中的素数有啥关系呢？这是因为每一个 SSL 的生成都用到了 RSA 非对称加密，而 RSA 的加解密就是使用了两个互为质数的大素数生成公钥和私钥的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这就是我们今天要分享的，关于素数在 RSA 算法中的应用。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;一、什么是素数&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;素数（或质数）指的是大于1的且不能通过两个较小的自然数乘积得来的自然数。而大于1的自然数如果不是素数，则称之为合数。例如：7是素数，因为它的成绩只能写成 &lt;code&gt;1 * 7&lt;/code&gt; 或者 &lt;code&gt;7 * 1&lt;/code&gt; 这样。而像自然数 8 可以写成 &lt;code&gt;2 * 4&lt;/code&gt;，因为它是两个较小数字的乘积。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通常在 Java 程序中，我们可以使用下面的代码判断一个数字是否为素数；&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;boolean&lt;/span&gt; isPrime = number &amp;gt; &lt;span&gt;0&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;// 计算number的平方根为k，可以减少一半的计算量&lt;/span&gt;&lt;br/&gt;&lt;span&gt;int&lt;/span&gt; k = (&lt;span&gt;int&lt;/span&gt;) Math.sqrt(number);&lt;br/&gt;&lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = &lt;span&gt;2&lt;/span&gt;; i &amp;lt;= k; i++) {&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (number % i == &lt;span&gt;0&lt;/span&gt;) {&lt;br/&gt;        isPrime = &lt;span&gt;false&lt;/span&gt;;&lt;br/&gt;        &lt;span&gt;break&lt;/span&gt;;&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;span&gt;return&lt;/span&gt; isPrime;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;二、对称加密和非对称加密&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;假如 Alice 时而需要给北漂搬砖的 Bob 发一些信息，为了安全起见两个人相互协商了一个加密的方式。比如 Alice 发送了一个银行卡密码 &lt;code&gt;142857&lt;/code&gt; 给 Bob，Alice 会按照与 Bob 的协商方式，把 &lt;code&gt;142857&lt;/code&gt; * &lt;code&gt;2&lt;/code&gt; = &lt;code&gt;285714&lt;/code&gt; 的结果传递给 Bob，之后 Bob 再通过把信息除以2拿到结果。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但一来二去，Alice 发的密码、生日、衣服尺寸、鞋子大小，都是乘以2的规律被别人发现。这下这个加密方式就不安全了。而如果每次都给不同的信息维护不同的秘钥又十分麻烦，且这样的秘钥为了安全也得线下沟通，人力成本又非常高。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以有没有另外一种方式，使用不同的秘钥对信息的加密和解密。当 Bob 想从 Alice 那获取信息，那么 Bob 就给 Alice 一个公钥，让她使用公钥对信息进行加密，而加密后的信息只有 Bob 手里有私钥才能解开。那么这样的信息传递就变得非常安全了。如图所示。&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;对称加密&lt;/th&gt;&lt;th&gt;非对称加密&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/zTfAIs5rNXiaG8icOYvw60oGtDk20C2JiclgKNOFgVZj2BcWCy2SdhPXQWDZZNicnTEtPCc50vgJJtxDbS9icyE09Zg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;504&quot;/&gt;&lt;/td&gt;&lt;td&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/zTfAIs5rNXiaG8icOYvw60oGtDk20C2JiclBG3OxbjIDyeEtQicCEyZ6jYuAUntsvDkPa13Cl8ufYaFpWTvGNRMqibA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;504&quot;/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;三、算法公式推导&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.2925851703406814&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/zTfAIs5rNXiaG8icOYvw60oGtDk20C2JiclicsHGTuQfyxRyQY3s00YvysvmPnHyoKicGn9vFVP2tiap0pehXrrfMLcQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;998&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果 Alice 希望更安全的给 Bob 发送的信息，那么就需要保证经过公钥加密的信息不那么容易被反推出来。所以这里的信息加密，会需用到求模运算。像计算机中的散列算法，伪随机数都是求模运算的典型应用。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;例如；&lt;code&gt;5^3 mod 7 = 6&lt;/code&gt; —— 5的3次幂模7余6&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;5相当于 Alice 要传递给 Bob 的信息&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;3相当于是秘钥&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;6相当于是加密后的信息&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;经过求模计算的结果6，很难被推到出秘钥信息，只能一个个去验证；&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;5&lt;/span&gt;^&lt;span&gt;1&lt;/span&gt; mod &lt;span&gt;7&lt;/span&gt; = &lt;span&gt;5&lt;/span&gt;&lt;br/&gt;&lt;span&gt;5&lt;/span&gt;^&lt;span&gt;2&lt;/span&gt; mod &lt;span&gt;7&lt;/span&gt; = &lt;span&gt;3&lt;/span&gt;&lt;br/&gt;&lt;span&gt;5&lt;/span&gt;^&lt;span&gt;3&lt;/span&gt; mod &lt;span&gt;7&lt;/span&gt; = &lt;span&gt;6&lt;/span&gt;&lt;br/&gt;&lt;span&gt;5&lt;/span&gt;^&lt;span&gt;4&lt;/span&gt; mod &lt;span&gt;7&lt;/span&gt; = &lt;span&gt;2&lt;/span&gt;&lt;br/&gt;...&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但如果求模的值特别大，例如这样：&lt;code&gt;5^3 mod 78913949018093809389018903794894898493... = 6&lt;/code&gt; 那么再想一个个计算就有不靠谱了。所以这也是为什么会使用模运算进行加密，因为对于大数来说对模运算求逆根本没法搞。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;根据求模的计算方式，我们得到加密和解密公式；—— &lt;em&gt;关于加密和解密的公式推到，后文中会给出数学计算公式。&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.712&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/zTfAIs5rNXiaG8icOYvw60oGtDk20C2JiclVSQ2Gm1Fvv17ZatjZCCZubFX9yZ8C413qwJEWcczHd7ib1QJI12qwsQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;750&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于两个公式我们做一下更简单的转换；&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.33497536945812806&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/zTfAIs5rNXiaG8icOYvw60oGtDk20C2JicllTV1FVrwZCbTN5XwnIDGiaWma9wZYyRB41TA4P9bbUdWleHsCAzq9Bg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;812&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从转换后的公式可以得知，m 的 ed 次幂，除以 N 求求模可以得到 m 本身。那么 ed 就成了计算公钥加密的重要因素。为此这里需要提到数学中一个非常重要的定理，欧拉定理。—— 1763年，欧拉发现。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;欧拉定理：m^φ(n) ≡ 1 (mod n)  对于任何一个与 n 互质的正整数 m，的 φ(n) 次幂并除以 n 去模，结果永远等于1。φ(n)  代表着在小于等于 n 的正整数中，有多少个与 n 互质的数。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;例如：φ(8) 小于等于8的正整数中 &lt;code&gt;1、2、3、4、5、6、7、8&lt;/code&gt; 有 1、3、5、7 与数字 8 互为质数。所以 φ(8) = 4 但如果是 n 是质数，那么 φ(n) = n - 1 比如 φ(7) 与7互为质数有1、2、3、4、5、6 所有 φ(7) = 6&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;接下来我们对欧拉公式做一些简单的变换，用于看出ed的作用；&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8848080133555927&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/zTfAIs5rNXiaG8icOYvw60oGtDk20C2Jiclb1xhcJypymQze4BUDpficBhM9erqQbdNgEEnbI3V9JB7rO2RZJgkQ4A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1198&quot;/&gt;&lt;/p&gt;经过推导的结果可以看到 ed = kφ(n) + 1，这样只要算出加密秘钥 e 就可以得到一个对应的解密秘钥 d。那么整套这套计算过程，就是 RSA 算法。&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;四、关于RSA算法&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;RSA加密算法&lt;/strong&gt;是一种非对称加密算法，在公开秘钥加密和电子商业中被广泛使用。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7010752688172043&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_jpg/zTfAIs5rNXiaG8icOYvw60oGtDk20C2Jicln72a0XOlA1KiaOibHUKibANl6DYFrS3xicOWxXWGeibThasrh3pXUQBdvng/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;465&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;于1977年，三位数学家；罗纳德·李维斯特（Ron Rivest）、阿迪·萨莫尔（Adi Shamir）和伦纳德·阿德曼（Leonard Adleman）设计了一种算法，可以实现非对称加密。这种算法用他们三个人的名字命名，叫做RSA算法。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1973年，在英国政府通讯总部工作的数学家克利福德·柯克斯（Clifford Cocks）在一个内部文件中提出了一个与之等效的算法，但该算法被列入机密，直到1997年才得到公开。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;RSA 的算法核心在于取了2个素数做乘积求和、欧拉计算等一系列方式算得公钥和私钥，但想通过公钥和加密信息，反推出来私钥就会非常复杂，因为这是相当于对极大整数的因数分解。所以秘钥越长做因数分解越困难，这也就决定了 RSA 算法的可靠性。—— PS：可能以上这段话还不是很好理解，程序员👨🏻‍💻还是要看代码才能悟。接下来我们就来编写一下 RSA 加密代码。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;五、实现RSA算法&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;RSA 的秘钥生成首先需要两个质数p、q，之后根据这两个质数算出公钥和私钥，在根据公钥来对要传递的信息进行加密。接下来我们就要代码实现一下 RSA 算法，读者也可以根据代码的调试去反向理解 RSA 的算法过程，一般这样的学习方式更有抓手的感觉。&lt;em&gt;嘿嘿 抓手&lt;/em&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;1. 互为质数的p、q&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;两个互为质数p、q是选择出来的，越大越安全。因为大整数的质因数分解是非常困难的，直到2020年为止，世界上还没有任何可靠的攻击RSA算法的方式。只要其钥匙的长度足够长，用RSA加密的信息实际上是不能被破解的。—— 不知道量子计算机出来以后会不会改变。如果改变，那么程序员又有的忙了。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2. 乘积n&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;n = p * q 的乘积。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;long&lt;/span&gt; &lt;span&gt;n&lt;/span&gt;&lt;span&gt;(&lt;span&gt;long&lt;/span&gt; p, &lt;span&gt;long&lt;/span&gt; q)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; p * q;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3.  欧拉公式 φ(n)&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;φ(n) = (p - 1) * (q - 1)&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;long&lt;/span&gt; &lt;span&gt;euler&lt;/span&gt;&lt;span&gt;(&lt;span&gt;long&lt;/span&gt; p, &lt;span&gt;long&lt;/span&gt; q)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; (p - &lt;span&gt;1&lt;/span&gt;) * (q - &lt;span&gt;1&lt;/span&gt;);&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;4. 选取公钥e&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;e 的值范围在 1 &amp;lt; e &amp;lt; φ(n)&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;long&lt;/span&gt; &lt;span&gt;e&lt;/span&gt;&lt;span&gt;(&lt;span&gt;long&lt;/span&gt; euler)&lt;/span&gt;&lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;long&lt;/span&gt; e = euler / &lt;span&gt;10&lt;/span&gt;;&lt;br/&gt;    &lt;span&gt;while&lt;/span&gt; (gcd(e, euler) != &lt;span&gt;1&lt;/span&gt;){&lt;br/&gt;        e ++;&lt;br/&gt;    }&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; e;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;5. 选取私钥d&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;d = (kφ(n) + 1) / e&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;long&lt;/span&gt; &lt;span&gt;inverse&lt;/span&gt;&lt;span&gt;(&lt;span&gt;long&lt;/span&gt; e, &lt;span&gt;long&lt;/span&gt; euler)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; (euler + &lt;span&gt;1&lt;/span&gt;) / e;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;6. 加密&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;c = m^e mod n&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;long&lt;/span&gt; &lt;span&gt;encrypt&lt;/span&gt;&lt;span&gt;(&lt;span&gt;long&lt;/span&gt; m, &lt;span&gt;long&lt;/span&gt; e, &lt;span&gt;long&lt;/span&gt; n)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    BigInteger bM = &lt;span&gt;new&lt;/span&gt; BigInteger(String.valueOf(m));&lt;br/&gt;    BigInteger bE = &lt;span&gt;new&lt;/span&gt; BigInteger(String.valueOf(e));&lt;br/&gt;    BigInteger bN = &lt;span&gt;new&lt;/span&gt; BigInteger(String.valueOf(n));&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; Long.parseLong(bM.modPow(bE, bN).toString());&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;7. 解密&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;m = c^d mod n&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;long&lt;/span&gt; &lt;span&gt;decrypt&lt;/span&gt;&lt;span&gt;(&lt;span&gt;long&lt;/span&gt; c, &lt;span&gt;long&lt;/span&gt; d, &lt;span&gt;long&lt;/span&gt; n)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    BigInteger bC = &lt;span&gt;new&lt;/span&gt; BigInteger(String.valueOf(c));&lt;br/&gt;    BigInteger bD = &lt;span&gt;new&lt;/span&gt; BigInteger(String.valueOf(d));&lt;br/&gt;    BigInteger bN = &lt;span&gt;new&lt;/span&gt; BigInteger(String.valueOf(n));&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; Long.parseLong(bC.modPow(bD, bN).toString());&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;8. 测试&lt;span/&gt;&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;@Test&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;test_rsa&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    RSA rsa = &lt;span&gt;new&lt;/span&gt; RSA();&lt;br/&gt;    &lt;span&gt;long&lt;/span&gt; p = &lt;span&gt;3&lt;/span&gt;,                         &lt;span&gt;// 选取2个互为质数的p、q&lt;/span&gt;&lt;br/&gt;            q = &lt;span&gt;11&lt;/span&gt;,                     &lt;span&gt;// 选取2个互为质数的p、q&lt;/span&gt;&lt;br/&gt;            n = rsa.n(p, q),            &lt;span&gt;// n = p * q&lt;/span&gt;&lt;br/&gt;            euler = rsa.euler(p, q),    &lt;span&gt;// euler = (p-1)*(q-1)&lt;/span&gt;&lt;br/&gt;            e = rsa.e(euler),           &lt;span&gt;// 互为素数的小整数e | 1 &amp;lt; e &amp;lt; euler&lt;/span&gt;&lt;br/&gt;            d = rsa.inverse(e, euler),  &lt;span&gt;// ed = φ(n) + 1 | d = (φ(n) + 1)/e&lt;/span&gt;&lt;br/&gt;            msg = &lt;span&gt;5&lt;/span&gt;;                    &lt;span&gt;// 传递消息 5&lt;/span&gt;&lt;br/&gt;            &lt;br/&gt;    System.out.println(&lt;span&gt;&quot;消息：&quot;&lt;/span&gt; + msg);&lt;br/&gt;    System.out.println(&lt;span&gt;&quot;公钥(n,e)：&quot;&lt;/span&gt; + &lt;span&gt;&quot;(&quot;&lt;/span&gt; + n + &lt;span&gt;&quot;,&quot;&lt;/span&gt; + e + &lt;span&gt;&quot;)&quot;&lt;/span&gt;);&lt;br/&gt;    System.out.println(&lt;span&gt;&quot;私钥(n,d)：&quot;&lt;/span&gt; + &lt;span&gt;&quot;(&quot;&lt;/span&gt; + n + &lt;span&gt;&quot;,&quot;&lt;/span&gt; + d + &lt;span&gt;&quot;)&quot;&lt;/span&gt;);&lt;br/&gt;    &lt;br/&gt;    &lt;span&gt;long&lt;/span&gt; encrypt = rsa.encrypt(msg, e, n);&lt;br/&gt;    System.out.println(&lt;span&gt;&quot;加密（消息）：&quot;&lt;/span&gt; + encrypt);&lt;br/&gt;    &lt;br/&gt;    &lt;span&gt;long&lt;/span&gt; decrypt = rsa.decrypt(encrypt, d, n);&lt;br/&gt;    System.out.println(&lt;span&gt;&quot;解密（消息）：&quot;&lt;/span&gt; + decrypt);&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;测试结果&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;消息：&lt;span&gt;5&lt;/span&gt;&lt;br/&gt;公钥(n,e)：(&lt;span&gt;33&lt;/span&gt;,&lt;span&gt;3&lt;/span&gt;)&lt;br/&gt;私钥(n,d)：(&lt;span&gt;33&lt;/span&gt;,&lt;span&gt;7&lt;/span&gt;)&lt;br/&gt;加密（消息）：&lt;span&gt;26&lt;/span&gt;&lt;br/&gt;解密（消息）：&lt;span&gt;5&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;通过选取3、11作为两个互质数，计算出公钥和私钥，分别进行消息的加密和解密。如测试结果消息5的加密后的信息是26，解密后获得原始信息5&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;六、RSA数学原理&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;整个 RSA 的加解密是有一套数学基础可以推导验证的，这里小傅哥把学习整理的资料分享给读者，如果感兴趣可以尝试验证。这里的数学公式会涉及到；求模运算、最大公约数、贝祖定理、线性同于方程、中国余数定理、费马小定理。当然还有一些很基础的数论概念；素数、互质数等。以下推理数学内容来自博客：https://luyuhuang.tech/2019/10/24/mathematics-principle-of-rsa-algorithm.html&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;1. 模运算&lt;span/&gt;&lt;/h3&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;1.1 整数除法&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;定理 1&lt;/strong&gt; 令 a 为整数, d 为正整数, 则存在唯一的整数 q 和 r, 满足 0⩽r&amp;lt;d0⩽r&amp;lt;d, 使得 a=dq+ra=dq+r.&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当 r=0r=0 时, 我们称 d 整除 a, 记作 d∣ad∣a; 否则称 d 不整除 a, 记作 d∤ad∤a&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;整除有以下基本性质:&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;定理 2&lt;/strong&gt; 令 a, b, c 为整数, 其中 a≠0a≠0. 则:&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;如果 a∣ba∣b 且 a∣ca∣c, 则 a∣(b+c)a∣(b+c)&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果 a∣ba∣b, 则对于所有整数 c 都有 a∣bca∣bc&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果 a∣ba∣b 且 b∣cb∣c, 则 a∣ca∣c&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;1.2 模算术&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在数论中我们特别关心一个整数被一个正整数除时的余数. 我们用 a mod m = b a mod m = b 表示整数 a 除以正整数 m 的余数是 b. 为了表示两个整数被一个正整数除时的余数相同, 人们又提出了&lt;strong&gt;同余式(congruence)&lt;/strong&gt;.&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;定义 1&lt;/strong&gt; 如果 a 和 b 是整数而 m 是正整数, 则当 m 整除 a - b 时称 a 模 m 同余 b. 记作 a ≡ b(mod m)&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;a ≡ b(mod m) 和 a mod m= b 很相似. 事实上, 如果 a mod m = b, 则 a≡b(mod m). 但他们本质上是两个不同的概念. a mod m = b 表达的是一个函数, 而 a≡b(mod m) 表达的是两个整数之间的关系.&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;模算术有下列性质:&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;定理 3&lt;/strong&gt; 如果 m 是正整数, a, b 是整数, 则有&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;(a+b)mod m=((a mod m)+(b mod m)) mod m&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;ab mod m=(a mod m)(b mod m) mod m&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;根据定理3, 可得以下推论&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;推论 1&lt;/strong&gt; 设 m 是正整数, a, b, c 是整数; 如果 a ≡ b(mod m), 则 ac ≡ bc(mod m)&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;证明&lt;/strong&gt; ∵ a ≡ b(mod m), ∴ (a−b) mod m=0 . 那么&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;(ac−bc) mod m=c(a−b) mod m=(c mod m⋅(a−b) mod m) mod m=0&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;∴ ac ≡ bc(mod m)&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;需要注意的是, 推论1反之不成立. 来看推论2:&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;推论 2&lt;/strong&gt; 设 m 是正整数, a, b 是整数, c 是不能被 m 整除的整数; 如果 ac ≡ bc(mod m) , 则 a ≡ b(mod m)&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;证明&lt;/strong&gt; ∵ ac ≡ bc(mod m)  , 所以有&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;(ac−bc)mod m=c(a−b)mod m=(c mod m⋅(a−b)mod m) mod m=0&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;∵ c mod m≠0 ,&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;∴ (a−b) mod m=0,&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;∴a ≡ b(mod m) .&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2. 最大公约数&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果一个整数 d 能够整除另一个整数 a, 则称 d 是 a 的一个&lt;strong&gt;约数(divisor)&lt;/strong&gt;; 如果 d 既能整除 a 又能整除 b, 则称 d 是 a 和 b 的一个&lt;strong&gt;公约数(common divisor)&lt;/strong&gt;. 能整除两个整数的最大整数称为这两个整数的&lt;strong&gt;最大公约数(greatest common divisor)&lt;/strong&gt;.&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;定义 2&lt;/strong&gt; 令 a 和 b 是不全为零的两个整数, 能使 d∣ad∣a 和 d∣bd∣b 的最大整数 d 称为 a 和 b 的&lt;strong&gt;最大公约数&lt;/strong&gt;. 记作 gcd(a,b)&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.1 求最大公约数&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如何求两个已知整数的最大公约数呢? 这里我们讨论一个高效的求最大公约数的算法, 称为&lt;strong&gt;辗转相除法&lt;/strong&gt;. 因为这个算法是欧几里得发明的, 所以也称为&lt;strong&gt;欧几里得算法&lt;/strong&gt;. 辗转相除法基于以下定理:&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;引理 1&lt;/strong&gt; 令 a=bq+r, 其中 a, b, q 和 r 均为整数. 则有 gcd(a,b)=gcd(b,r)&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;证明&lt;/strong&gt; 我们假设 d 是 a 和 b 的公约数, 即 d∣a且 d∣b, 那么根据定理2, d 也能整除 a−bq=r 所以 a 和 b 的任何公约数也是 b 和 r 的公约数;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;类似地, 假设 d 是 b 和 r 的公约数, 即 d∣bd∣b 且 d∣rd∣r, 那么根据定理2, d 也能整除 a=bq+r. 所以 b 和 r 的任何公约数也是 a 和 b 的公约数;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;因此, a 与 b 和 b 与 r 拥有相同的公约数. 所以 gcd(a,b)=gcd(b,r).&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;辗转相除法&lt;/strong&gt;就是利用引理1, 把大数转换成小数. 例如, 求 gcd(287,91) 我们就把用较大的数除以较小的数. 首先用 287 除以 91, 得&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;287=91⋅3+14&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们有 gcd(287,91)=gcd(91,14) . 问题转换成求 gcd(91,14). 同样地, 用 91 除以 14, 得&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;91=14⋅6+7&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有 gcd(91,14)=gcd(14,7) . 继续用 14 除以 7, 得&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;14=7⋅2+0&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;因为 7 整除 14, 所以 gcd(14,7)=7. 所以 gcd(287,91)=gcd(91,14)=gcd(14,7)=7.&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们可以很快写出辗转相除法的代码:&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;def gcd(a, b):&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; b == 0: &lt;span&gt;return&lt;/span&gt; a&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; gcd(b, a % b)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.2 贝祖定理&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;现在我们讨论最大公约数的一个重要性质:&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;定理 4&lt;/strong&gt; &lt;strong&gt;贝祖定理&lt;/strong&gt; 如果整数 a, b 不全为零, 则 gcd(a,b)是 a 和 b 的线性组合集 {ax+by∣x,y∈Z}中最小的元素. 这里的 x 和 y 被称为&lt;strong&gt;贝祖系数&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;证明&lt;/strong&gt; 令 A={ax+by∣x,y∈Z}. 设存在 x0x0, y0y0 使 d0d0 是 A 中的最小正元素, d0=ax0+by0 现在用 d0去除 a, 这就得到唯一的整数 q(商) 和 r(余数) 满足&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.29086538461538464&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/zTfAIs5rNXiaG8icOYvw60oGtDk20C2Jicl0MASOMX9rPha5QGGaRiarazh04ricQkicwhzdWxwCtdpO7eicAGBuwqY0w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;832&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;又 0⩽r&amp;lt;d0, d0 是 A 中最小正元素&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;∴ r=0 , d0∣a.&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;同理, 用 d0d0 去除 b, 可得 d0∣b. 所以说 d0 是 a 和 b 的公约数.&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;设 a 和 b 的最大公约数是 d, 那么 d∣(ax0+by0)即 d∣d0&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;∴∴ d0 是 a 和 b 的最大公约数.&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们可以对辗转相除法稍作修改, 让它在计算出最大公约数的同时计算出贝祖系数.&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;def gcd(a, b):&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; b == 0: &lt;span&gt;return&lt;/span&gt; a, 1, 0&lt;br/&gt;    d, x, y = gcd(b, a % b)&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; d, y, x - (a / b) * y&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3. 线性同余方程&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;现在我们来讨论求解形如 ax≡b(modm)a 的线性同余方程. 求解这样的线性同余方程是数论研究及其应用中的一项基本任务. 如何求解这样的方程呢? 我们要介绍的一个方法是通过求使得方程 ¯aa≡1(modm) 成立的整数 ¯aa¯. 我们称 ¯a 为 a 模 m 的逆. 下面的定理指出, 当 a 和 m 互素时, a 模 m 的逆必然存在.&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;定理 5&lt;/strong&gt; 如果 a 和 m 为互素的整数且 m&amp;gt;1m&amp;gt;1, 则 a 模 m 的逆存在, 并且是唯一的.&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;证明&lt;/strong&gt; 由贝祖定理可知, ∵ gcd(a,m)=1gcd(a,m)=1 , ∴ 存在整数 x 和 y 使得 ax+my=1 这蕴含着 ax+my≡1(modm) ∵ my≡0(modm), 所以有 ax≡1(modm)&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;∴ x 为 a 模 m 的逆.&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这样我们就可以调用辗转相除法 gcd(a, m) 求得 a 模 m 的逆.&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;a 模 m 的逆也被称为 a 在模m乘法群 Z∗mZm∗ 中的&lt;strong&gt;逆元&lt;/strong&gt;. 这里我并不想引入群论, 有兴趣的同学可参阅算法导论&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;求得了 a 模 m 的逆 ¯a 现在我们可以来解线性同余方程了. 具体的做法是这样的: 对于方程 ax≡b(modm)a , 我们在方程两边同时乘上 ¯a, 得 ¯aax≡¯ab(modm)&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;把 ¯aa≡1(modm) 带入上式, 得 x≡¯ab(modm)&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;x≡¯ab(modm) 就是方程的解. 注意同余方程会有无数个整数解, 所以我们用同余式来表示同余方程的解.&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.21464019851116625&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/zTfAIs5rNXiaG8icOYvw60oGtDk20C2JiclWUDuEZic8M9jeKW1o3AGavI1UmbfankXf4crnice2yibujMpIhT5DCsnA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1612&quot;/&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;4. 中国余数定理&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;中国南北朝时期数学著作 孙子算经 中提出了这样一个问题:&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;有物不知其数，三三数之剩二，五五数之剩三，七七数之剩二。问物几何？&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用现代的数学语言表述就是: 下列同余方程组的解释多少?&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.536144578313253&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/zTfAIs5rNXiaG8icOYvw60oGtDk20C2JiclGiaEpUgyXqsHMKyFibKQ3WdgXnRAGb4N8k5ZJUufKZpPhhicR7wgrXjQQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;332&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;em&gt;孙子算经&lt;/em&gt; 中首次提到了同余方程组问题及其具体解法. 因此中国剩余定理称为孙子定理.&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;定理 6&lt;/strong&gt; &lt;strong&gt;中国余数定理&lt;/strong&gt; 令 m1,m2,…,mn 为大于 1 且两两互素的正整数, a1,a2,…,an 是任意整数. 则同余方程组&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5935828877005348&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/zTfAIs5rNXiaG8icOYvw60oGtDk20C2Jiclx3ibYiczJMicibNL87nAop2PEVvCompGiaoQ9Bg29DmvvD9FZeEdCburOYg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;374&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有唯一的模 m=m1m2…mn 的解.&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;证明&lt;/strong&gt; 我们使用构造证明法, 构造出这个方程组的解. 首先对于 i=1,2,…,n, 令&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4057971014492754&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/zTfAIs5rNXiaG8icOYvw60oGtDk20C2Jicl5BJxXSIDty6Fpnl2Sic9u5bFW5lsWuEY27ZUKMbWsIwN52UKGp2nZDQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;276&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;即, MiMi 是除了 mimi 之外所有模数的积. ∵ m1,m2,…,mn 两两互素, ∴ gcd(mi,Mi)=1. 由定理 5 可知, 存在整数 yi 是 Mi 模 mi 的逆. 即&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.14410480349344978&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/zTfAIs5rNXiaG8icOYvw60oGtDk20C2JiclQcOWWNygBXokCTJMiaTpjOG840puv8XiaCA5n3icIdYwtu5ZhT6rfThkg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;458&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上式等号两边同时乘 ai 得&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.15126050420168066&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/zTfAIs5rNXiaG8icOYvw60oGtDk20C2JiclEXpMICN9EEw4T1QV6YEVGlpbexG8S7Qt9d6FAU5aEGIiby2ucF7JTqg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;476&quot;/&gt;&lt;span&gt;就是第 i 个方程的一个解; 那么怎么构造出方程组的解呢? 我们注意到, 根据 Mi 的定义可得, 对所有的 j≠i, 都有 aiMiyi≡0(modmj). 因此我们令&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.13302752293577982&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/zTfAIs5rNXiaG8icOYvw60oGtDk20C2Jicl0cdrdGoNn6rUDLSZvmArfnsianT1vkamicjZmZzydmUjSwT00lz21tuw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;872&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;就是方程组的解.&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有了这个结论, 我们可以解答 &lt;em&gt;孙子算经&lt;/em&gt; 中的问题了: 对方程组的每个方程, 求出 Mi , 然后调用 &lt;code&gt;gcd(M_i, m_i)&lt;/code&gt; 求出 yi:&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.29289940828402367&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/zTfAIs5rNXiaG8icOYvw60oGtDk20C2Jicl2iaWmvBULRMwE7MnEvcibnAj7rzLFfO7UOI1lfCbf8GGlr07YAian4OOg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;676&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最后求出 x=−2⋅35+3⋅21+2⋅15=23≡23(mod105)&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;5. 费马小定理&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;现在我们来看数论中另外一个重要的定理, &lt;strong&gt;费马小定理(Fermat&#x27;s little theorem)&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;定理 7&lt;/strong&gt; &lt;strong&gt;费马小定理&lt;/strong&gt; 如果 a 是一个整数, p 是一个素数, 那么&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3291492329149233&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/zTfAIs5rNXiaG8icOYvw60oGtDk20C2Jicl2jCxnNHC2icB2D2tIHyWyNCFtvvptaabu55WIv6qyXoHjGTicGVibEUDA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1434&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当 n 不为 p 或 0 时, 由于分子有质数p, 但分母不含p; 故分子的p能保留, 不被约分而除去. 即 p∣(np).&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;令 b 为任意整数, 根据二项式定理, 我们有&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7340686274509803&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/zTfAIs5rNXiaG8icOYvw60oGtDk20C2JiclibmbuFAH6ibED9bAv9l1M70nBPgRrdfO0GQkLolC4eQ8Kle9eTRL3mYg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1632&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;令 a=b+1, 即得 a^p ≡ a(mod p)&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当 p 不整除 a 时, 根据推论 2, 有 a^p−1 ≡ 1(mod p)&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;6. 算法证明&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们终于可以来看 RSA 算法了. 先来看 RSA 算法是怎么运作的:&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;RSA 算法按照以下过程创建公钥和私钥:&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;随机选取两个大素数 p 和 q, p≠qp≠q;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;计算 n=pq&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;选取一个与 (p−1)(q−1) 互素的小整数 e;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;求 e 模 (p−1)(q−1) 的逆, 记作 d;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;将 P=(e,n)公开, 是为公钥;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;将 S=(d,n)保密, 是为私钥.&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8503480278422274&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/zTfAIs5rNXiaG8icOYvw60oGtDk20C2Jicl51IUQtxJ0zX5d2R0cY1nEDkKt7KiasG9qAOPX6tHcG7JgfuyFmkaLdw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1724&quot;/&gt;&lt;/p&gt;所以 RSA 加密算法是有效的.&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;(1) 式表明, 不仅可以用公钥加密, 私钥解密, 还可以用私钥加密, 公钥解密. 即加密计算 C=M^d mod n, 解密计算 M=C^e mod n&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;RSA 算法的安全性基于大整数的质因数分解的困难性. 由于目前没有能在多项式时间内对整数作质因数分解的算法, 因此无法在可行的时间内把 n 分解成 p 和 q 的乘积. 因此就无法求得 e 模 (p−1)(q−1)的逆, 也就无法根据公钥计算出私钥.&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;七、常见面试题&lt;/span&gt;&lt;/h2&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;质数的用途&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;RSA 算法描述&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;RSA 算法加解密的过程&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;RSA 算法使用场景&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;你了解多少关于 RSA 的数学数论知识&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;RSA加密算法：https://zh.wikipedia.org/wiki/RSA%E5%8A%A0%E5%AF%86%E6%BC%94%E7%AE%97%E6%B3%95&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;RSA算法原理：https://www.ruanyifeng.com/blog/2013/07/rsa_algorithm_part_two.html&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;RSA算法背后的数学原理：https://luyuhuang.tech/2019/10/24/mathematics-principle-of-rsa-algorithm.html&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;莱昂哈德·欧拉：https://en.wikipedia.org/wiki/Leonhard_Euler&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>f649deb6996870b0bab4dc0028d27ba0</guid>
<title>阿里大数据之路：数据模型篇大总结</title>
<link>https://toutiao.io/k/nksk5uj</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;1.1 为什么需要数据建模&lt;span/&gt;&lt;/h5&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;有结构地分类组织和存储是我们面临的一个挑战。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;数据模型强调从业务、数据存取和使用角度合理存储数据。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;数据模型方法，以便在性能、成本、效率之间取得最佳平衡&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;成本：良好的数据模型能极大地减少不必要的数据冗余，也能实现计算结果复用，极大地降低大数据系统中的存储和计算成本。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;效率：良好的数据模型能极大地改善用户使用数据的体验，提高使用数据的效率。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;质量：良好的数据模型能改善数据统计口径的不一致性，减少数据计算错误的可能性。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;1.2 关系数据库系统和数据仓库&lt;span/&gt;&lt;/h5&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;1.3 从 OLTP 和 OLAP 系统的区别看模型方法论的选择&lt;span/&gt;&lt;/h5&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;OLTP 系统通常面向的主要数据操作是随机读写，主要采用满足 3NF 的实体关系模型存储数据，从而在事务处理中解决数据的冗余和一 致性问题：&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;OLAP 系统面向的主要数据操作是批量读写，事务处理中 的一致性不是OLAP 所关注的，其主要关注数据的整合，以及在一次性的复杂大数据查询和处理中的性能，因此它需要采用一些不同的数据建模方法。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;1.4 典型的数据仓库建模方法论&lt;span/&gt;&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1.4.1 ER 模型&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;采用 ER模型建设数据仓库模型的出发点是整合数据，将各个系统中的数据以整个企业角度按主题进行相似性组合和合并，并进行一致性处理，为数据分析决策服务，但是并不能直接用于分析决策。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;ER 模型在实践中最典型的代表是 Teradata 公司基于金融业务发布 的 FS-LDM（Financial Services Logical Data Model），它通过对金融业务的高度抽象和总结，将金融业务划分为10大主题，并以设计面向金融仓库模型的核心为基础，企业基于此模型做适当调整和扩展就能快速落地实施。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1.4.2 维度模型&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;维度建模从分析决策的需求出发构建模型，为分析需求服务，因此它重点关注用户如何更快速地完成需求分析，同时具有较好的大规模复杂查询的响应性能。其典型的代表是星形模型，以及在一些特殊场景下使用的雪花模型。设计步骤通常如下：&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;选择需要进行分析决策的业务过程。业务过程可以是单个业务事件，比如交易的支付、退款等；也可以是某个事件的状态，比如当前的账户余额等；还可以是一系列相关业务事件组成的业务流程，具体需要看我们分析的是某些事件发生情况，还是当前状态，或是事件流转效率。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;选择粒度。在事件分析中，我们要预判所有分析需要细分的程度，从而决定选择的粒度。粒度是维度的一个组合。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;识别维表。选择好粒度之后，就需要基于此粒度设计维表，包括维度属性，用于分析时进行分组和筛选。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;选择事实。确定分析需要衡量的指标。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1.4.3 Data Vault 模型&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;它强调建立一个可审计的基础数据层，也就是强调数据的历史 性、可追溯性和原子性，而不要求对数据进行过度的一致性处理和整合；同时它基于主题概念将企业数据进行结构化组织，并引入了更进一步的范式处理来优化模型，以应对下游、系统变更的扩展性。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1.4.4 Anchor 模型&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;Anchor 对 Data Vault 模型做了进一步规范化处理， Lars.Ronnback 的初衷是设计一个高度可扩展的模型，其核心思想是所有的扩展只是添加而不是修改，因此将模型规范到 6NF ，基本变成了k-v 结构化模型。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;1.5 阿里巴巴数据模型实践综述&lt;span/&gt;&lt;/h5&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;第一个阶段：构建在 Oracle 上，数据完全以满足报表需求为目的&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;第二个阶段：引入了当时 MPP 架构体系的 Greenplum，ODL（操作数据层）+BDL（基础数据层）+IDL（接口数据层）+ADL （应用数据层）；BDL希望引入 ER 模型，加强 数据的整合，构建一致的基础数据模型，但构建 ER 模型时遇到了比较大的困难和挑战，互联网业务的快速发展、人员的快速变化、业务知识功底的不够全面，导致 ER 模型设计迟迟不能产出。至此，我们也得到了一个经验：在不太成熟、快速变化的业务面前，构建 ER 模型的风险非常大，不太适合去构建 ER 模型。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;第三个阶段：迎来了以Hadoop 为代表的分布式存储计算平台的快速发展，同时阿里巴 巴集团自主研发的分布式计算平台 MaxCompute 也在紧锣密鼓地进行着。以 Kimball 的维度建模为核心理念的模型方法论，构建了阿里巴巴集团的公共层模型数据架构体系。&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;数据公共层建设的目的是着力解决数据存储和计算的共享问题。数据每年以近 2.5 倍的速度在增长，数据的增长远远超过业务的增长。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;统一化的集团数据整合及管理的方法体系“OneData”：一致性的指标定义体系、模型设计方法体系以及配套工具。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;第2章 阿里巴巴数据整合及管理体系&lt;span/&gt;&lt;/h3&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;面对爆炸式增长的数据，如何建设高效的数据模型和体系，对这些 数据进行有序和有结构地分类组织和存储，避免重复建设和数据不一致性，保证数据的规范性，一直是大数据系统建设不断追求的方向。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.1 概述&lt;span/&gt;&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;核心：从业务架构设计（如何快速上手工作）到模型设计，从数据研发到数据服务，做到数据可管理、可追溯、可规避重复建设。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2.1.1 定位及价值&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;建设统一的、规范化的数据接入层（ ODS ）和数据中间层（ DWD 和 DWS ），通过数据服务和数据产品，完成服务于阿里巴巴的大数据系 统建设，即数据公共层建设。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6075581395348837&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/UdK9ByfMT2OdrLPF5BpNVJImlPOjHiakuwmiaUZ88s5rQ0ecL7S9yDoNrD7RQGAiaw9qQKK7cQo7e8jypVhTySgrQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;688&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;业务板块：根据业务属性划分板块，板块之间的指标或业务重叠性较小。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;规范定义：一套数据规范命名体系，用在模型设计中&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;模型设计：以维度建模理论为基础，基于维度建模总线架构，构建一致性的维度和事实(进行规范定义)。&lt;/p&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.2 规范定义&lt;span/&gt;&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;规范定义指以维度建模作为理论基础，构建总线矩阵，划分和定义 数据域、业务过程、维度、度量／原子指标、修饰类型、修饰词、时间周期、派生指标。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.48776978417266187&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/UdK9ByfMT2OdrLPF5BpNVJImlPOjHiakuZu8lQ4eX0o58gUOLmBtEmmKu3JQffjL5ykwy5omyvlYPn1qSzicyL3g/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;695&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2.2.1 名词术语&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;数据域（主题域）&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;面向业务分析，将业务过程或者维度进行抽象的集合。业务过程可以概括为一个个不可拆分的行为事件，在业务过程之下，可以定义指标；维度是指度量的环境，如买家下单事件，买家是维度 。为保障整个体系的生命力 ， 数据域是需要抽象提炼，并且长期维护和更新的 ， 但不轻易变动。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;常见主题域：用户、渠道、营销、流量、交易、财务、商品&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;业务过程&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;指企业的业务活动事件，如下单、支付、退款都是业务过程。请注意，业务过程 是一个不可拆分的行为事件 ， 通俗地讲 ，业务过程就是企业活动中的事件&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;时间周期&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;用来明确数据统计的时间范围或者时间点，如最近 30天、自然周、截至当日等&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;修饰类型&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;是对修饰词的一种抽象划分 。修饰类型从属于某个业务域，如日志域的访问终端类型涵盖无线端、 PC 端等修饰词&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;修饰词&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;指除了统计维度以外指标的业务场景限定抽象 。修饰词隶属于一种修饰类型，如 在日志域的访问终端类型下 ， 有修饰词 PC 端、无线端等&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;度量/原子指标&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;原子指标和度量含义相同，基于某一业务事件行为下的度量，是业务定义中不可 再拆分的指标，具有明确业务含义的名词 ，如支付金额&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;维度&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;维度是度量的环境，用来反映业务的一类属性 ，这类属性的集合构成一个维度 ，也可以称为实体对象。维度属于一个数据域，如地理维度（其中包括国家、地区、 省以及城市等级别的内容)、时间维度(其中包括年、季、月、周、日等级别的内容）&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;维度属性&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;维度属性隶属于一个维度 ，如地理维度里面的国家名称、国家 ID、省份名称等都属于维度属性&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;派生指标&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;派生指标=一个原子指标+多个修饰词(可选)+时间周期+粒度。可以理解为对原子指标业务统计范围的圈定。如原子指标：支付金额，最近 1 天海外买家支付金额则为派生指标(最近1天为时间周期 ， 海外为修饰词 ， 买家作为维度，而不作为修饰词)&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2.2.2 指标体系&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一、基本原则&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;组成体系之间的关系&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;派生指标由原子指标、时间周期修饰词、若干其他修饰词组合得到&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.37662337662337664&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/UdK9ByfMT2OdrLPF5BpNVJImlPOjHiakuDE2akhj86Sj0y8HlyrNYZbq27xuTGFc7NTmlFhtmjS0Cu90Gia44uVA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;616&quot;/&gt;&lt;/figure&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;原子指标、修饰类型及修饰词，直接归属在业务过程下，其中修饰词继承修饰类型的数据域&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;派生指标可以选择多个修饰词，修饰词之间的关系为&quot;或&quot;或者&quot;且&quot;，由派生指标具体语义决定&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;派生指标唯一归属一个原子指标，继承原子指标的数据域，与修饰词的数据域无关&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;原子指标有确定的英文字段名、数据类型和算法说明；派生指标要继承原子指标的英文名、数据类型和算法要求&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ol start=&quot;2&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;命名约定&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;命名所用术语。指标命名尽量使用英文简写，其次是英文。太长也可以考虑汉语拼音首字母&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;业务过程。英文名：用英文或英文的缩写或者中文拼音简写&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;原子指标。英文名：动作+度量&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;修饰词。只有时间周期才会有英文名&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;派生指标。英文名：原子指标英文名+时间周期修饰词(3位,例如_1d)+序号(4位，例如_001)&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5622188905547226&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/UdK9ByfMT2OdrLPF5BpNVJImlPOjHiakudKAwSYVs79zjiczJbNLzyBmLTCxISD5WZZgZ0qAjpyXnMFkB3UK03lQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;667&quot;/&gt;&lt;/figure&gt;&lt;ol start=&quot;3&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;算法&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;算法概述一一算法对应的用户容易理解的阐述。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;举例一一通过具体例子帮助理解指标算法。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;SQL 算法说明一一对于派生指标给出SQL的写法或者伪代码。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;二、操作细则&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;派生指标可以分为三类：事务型指标、存量型指标和复合型指标。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;事务型指标：是指对业务活动进行衡量的指标。例如新发商品数、 重发商品数、新增注册会员数、订单支付金额，这类指标需维护 原子指标及修饰词，在此基础上创建派生指标。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;存量型指标：是指对实体对象(如商品、会员)某些状态的统计。例如商品总数、注册会员总数，这类指标需维护原子指标及修饰词，在此基础上创建派生指标，对应的时间周期 一般为“历史截至当前某个时间”。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;复合型指标：是在事务型指标和存量型指标的基础上复合而成的。例如浏览 UV-下单买家数转化率 ， 有些需要 创 建新原子指标， 有些则可以在事务型或存量型原子指标的基础上增加修饰词得到派生指标。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.3 模型设计&lt;span/&gt;&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2.3.1 指导理论&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;数据模型的维度设计主要以维度建模理论为基础，基于维度数据模型总线架构，构建一致性的维度和事实。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2.3.2 模型层次&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;操作数据层（ODS）：把操作系统数据几乎无处理地存放在数据仓库系统中。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;公共维度模型层（CDM）：存放明细事实数据、维表数据及公共指标汇总数据 ，其中明细事实数据、维表数据一般根据 ODS 层数据加工生成 ；公共指标汇总数据一般根据维表数据和明细事实数据加工生成。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;CDM 层又细分为 DWD 层和 DWS 层，分别是明细数据层和汇总数据层，采用维度模型方法作为理论基础 ，更多地采用一些维度退化手法， 将维度退化至事实表中，减少事实表和维表的关联 ，提高明细数据表的易用性；同时在汇总数据层， 加强指标的维度退化， 采取更多的宽表化手段构建公共指标数据层，提升公共指标的复用性，减少重复加工。其主要功能如下。&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;组合相关和相似数据：采用明细宽表，复用关联计算，减少数据扫描。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;公共指标统一加工：基于 OneData体系构建命名规范、口径一致 和算法统一 的统计指标，为上层数据产品、应用和服务提供公共指标建立逻辑汇总宽表。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;建立一致性维度:建立一致的数据分析维表，降低数据计算口径、算法不统一的风险。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;section&gt;应用数据层（ADS）：存放数据产品个性化的统计指标数据，根据 CDM 层与 ODS 层加工生成 。&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;个性化指标加工：不公用性、复杂性(指数型、比值型、排名型指标)。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;基于应用的数据组装 : 大宽表集市、横表转纵表、趋势指标串。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6048158640226629&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/UdK9ByfMT2OdrLPF5BpNVJImlPOjHiakua6pqeibwT0VJrfLA5Tn2ZQtzq7DLnE9ffJZ3Ajicthxxx6WTsXacJJAw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;706&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;阿里巴巴通过构建全域的公共层数据，极大地控制了数据规模的增长趋势&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4963609898107715&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/UdK9ByfMT2OdrLPF5BpNVJImlPOjHiaku6T7DJCJfj258rI2yq9icjGq9DeXtibHuph7uo3WkmmZmT0VGAsWOHnEQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;687&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;模型架构图&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;数据调用服务优先使用公共维度模型层( CDM )数据，当公共层没有数据时，需评估是否需要创建公共层数据，当不需要建设公用的公共层时，方可直接使用操作数据层( ODS)数据。应用数据层( ADS) 作为产品特有的个性化数据一般不对外提供数据服务，但是 ADS 作为被服务方也需要遵守这个约定。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2.3.3 基本原则&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一个逻辑或者物理模型由哪些记录和字段组成，应该遵循最基本的软件设计方法论的高内聚和低耦合原则。主要从数据业务特性和访问特性两个角度来考虑：将业务相近或者相关、粒度相同的数据设计为一个逻辑或者物理模型；将高概率同时访问的数据放一起，将低概率同时访问的数据分开存储。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;建立核心模型与扩展模型体系，核心模型包括的字段支持常用的核心业务，扩展模型包括的字段支持个性化或少量应用的需要 ，不能让扩展模型的宇段过度侵入核心模型，以免破坏核心模型的架构简洁性与可维护性。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;越是底层公用的处理逻辑越应该在数据调度依赖的底层进行封装与实现，不要让公用的处理逻辑暴露给应用层实现，不要让公共逻辑多处同时存在。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;适当的数据冗余可换取查询和刷新性能，不宜过度冗余与数据复制。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;处理逻辑不变，在不同时间多次运行数据结果确定不变。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;具有相同含义的字段在不同表中的命名必须相同，必须使用规范定义中的名称。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;表命名需清晰、一致，表名需易于消费者理解和使用。&lt;/p&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.4 模型实施&lt;span/&gt;&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2.4.1 业界常用模型实施过程&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;构建维度模型一般要经历四个阶段：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;第一个阶段是高层模型设计时期 ，定义业务过程维度模型的范围，提供每种星形模式的技术和功能描述；直接产出目标是创建高层维度模型图，它是对业务过程中的维表和事实表的图形描述。确定维表创建初始属性列表，为每个事实表创建提议度量；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;第二个阶段是详细模型设计时期，对每个星形模型添加属性和度量信息；确定每个维表的属性和每个事实表的度量，并确定信息来源的位置、定义，确定属性和度量如何填入模型的初步业务规则。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;第三个阶段是进行模型的审查、再设计和验证，本阶段主要召集相关人员进行模型的审查和验证，根据审查结果对详细维度进行再设计。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;第四个阶段是产生详细设计文档，提交 ETL 设计和开发，最后，完成模型详细设计文档，提交 ETL 开发人员，进入 ETL 设计和开发阶段，由 ETL 人员完成物理模型的设计和开发。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2.4.2 OneData实施过程&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;指导方针&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;首先，在建设大数据数据仓库时，要进行充分的业务调研和需求分析。这是数据仓库建设的基石，业务调研和需求分析做得是否充分直接决定了数据仓库建设是否成功。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;其次，进行数据总体架构设计，主要是根据数据域对数据进行划分；按照维度建模理论，构建总线矩阵、抽象出业务过程和维度。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;再次，对报表需求进行抽象整理出相关指标体系， 使用 OneData 工具完成指标规范定义和模型设计。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;最后，就是代码研发和运维。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ol start=&quot;2&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;实施工作流&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.5392156862745099&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/UdK9ByfMT2OdrLPF5BpNVJImlPOjHiakusJWbcXH1anLib6tQcbRyqgy9jWFvW79RiaDILzmmc3pqz8G1Dw6Yvu9w/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;510&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;（1）数据调研&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;业务调研：需要了解各个业务领域、业务线的业务有什么共同点和不同点 ，以及各个业务线可以细分为哪几个业务模块，每个业务模块具体的业务流程又是怎样的。业务调研是否充分，将会直接决定数据仓库 建设是否成功&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;需求调研：需求调研的途径有两种：一是根据与分析师、业务运营人员的沟通 （邮件、 IM ）获知需求；二是对报表系统中现有的报表进行研究分析；&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;（2）架构设计&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;数据域划分&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;数据域是指面向业务分析，将业务过程或者维度进行抽象的集合。业务过程可以概括为 一 个个不可拆分的行为事件，如下单、支付、退款。数据域需要抽象提炼，并且长期维护和更新，但不轻易变动。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4831804281345566&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/UdK9ByfMT2OdrLPF5BpNVJImlPOjHiakuy26cVnvV2IicBGM35UtGn4Kw3t37M4kWJbpw6FnSHQYIxS9Eq8iciasxA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;654&quot;/&gt;&lt;/figure&gt;&lt;ol start=&quot;2&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;构建总线矩阵&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在进行充分的业务调研和需求调研后，就要构建总线矩阵了。需要 做两件事情：明确每个数据域下有哪些业务过程；业务过程与哪些维度相关，并定义每个数据域下的业务过程和维度。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.29384615384615387&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/UdK9ByfMT2OdrLPF5BpNVJImlPOjHiakuvaAnibLctlgCvrPBibA3a1O3OLFCMqhpmQI0rYBnetxfvLF5u1QB2VSg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;650&quot;/&gt;&lt;/figure&gt;&lt;ol start=&quot;3&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;规范定义&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;规范定义主要定义指标体系，包括原子指标、修饰词、时间周期和 派生指标。&lt;/p&gt;&lt;ol start=&quot;4&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;模型设计&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;模型设计主要包括维度及属性的规范定义，维表、明细事实表和汇 总事实表的模型设计。&lt;/p&gt;&lt;ol start=&quot;5&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;总结&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;OneData 的实施过程是一个高度迭代和动态的过程， 一般采用螺旋式实施方法。在总体架构设计完成之后，开始根据数据域进行迭代式模型设计和评审。在架构设计、规范定义和模型设计等模型实施过程中， 都会引入评审机制，以确保模型实施过程的正确性。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;第3章 维度设计&lt;/h3&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3.1 维度设计基础&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;3.1.1 维度的基本概念&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;维度建模中，将度量称为“事实”，将环境描述为“维度”，维度是用于分析事实所需要的多样环境。例如，在分析交易过程时，可以通过买家、卖家、商品和时间等维度描述交易发生的环境。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;维度所包含的表示维度的列，称为维度属性。维度属性是查询约束条件、分组和报表标签生成的基本来源，是数据易用性的关键。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;维度使用主键标识其唯一性，主键也是确保与之相连的任何事实表 之间存在引用完整性的基础。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;3.1.2 维度的基本设计方法&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;选择维度或新建维度。须保证维度的唯一性。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;确定主维表。一般是ODS表，直接与业务系统同步。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;确定相关维表。确定哪些表和主维表存在关联关系，并选择其中的某些表用于生成维度属性。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;确定维度属性。第一阶段从主维表中选择维度属性或生成新的维度属性；第二阶段是从相关维表中选择维度属性或生成新的维度属性。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;确认维度属性的几点提示：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;尽可能生成丰富的维度属性&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;尽可能多地给出包括一些富有意义的文字性描述&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;区分数值型属性和事实&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;如果通常用于查询约束条件或分组统计，则是作为维度属性；如果通常 用于参与度量的计算，则是作为事实。比如商品价格，可以用于查询约 束条件或统计价格区间的商品数量，此时是作为维度属性使用的；也可 以用于统计某类目下商品的平均价格，此时是作为事实使用的。另外， 如果数值型字段是离散值，则作为维度属性存在的可能性较大；如果数 值型宇段是连续值，则作为度量存在的可能性较大，但并不绝对，需要 同时参考宇段的具体用途。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ol start=&quot;4&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;尽量沉淀出通用的维度属性&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;3.1.3 一致性维度和交叉探查&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;共享维表。比如在阿里巴巴的数据仓库中，商品、卖家、买家、 类目等维度有且只有一个。所以基于这些公共维度进行的交叉探查不会存在任何问题。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;一致性上卷。其中一个维度的维度属性是另一个维度的维度属性 的子集，且两个维度的公共维度属性结构和内容相同。比如在阿 里巴巴的商品体系中，有商品维度和类目维度，其中类目维度的 维度属性是商品维度的维度属性的子集，且有相同的维度属性和 维度属性值。这样基于类目维度进行不同业务过程的交叉探查也 不会存在任何问题。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;交叉属性。两个维度具有部分相同的维度属性。比如在商品维度中具有类目属性，在卖家维度中具有主营类目属性，两个维度具有相同的类目属性，则可以在相同的类目属性上进行不同业务过程的交叉探查。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3.2 维度设计高级主题&lt;span/&gt;&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;3.2.1 维度整合&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;应用间差异：&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;应用在编码、命名习惯、度量单位等方面会存在很大的差异。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;应用出于性能和扩展性的考虑，或者随技术架构的演变，以及业务的发展，采用不同的物理实现。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ol start=&quot;2&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;集成类型（同维度整合）：&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;命名规范的统一。表名、字段名等统一。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;字段类型的统一。相同和相似字段的字段类型统一。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;公共代码及代码值的统一。公共代码及标志性字段的数据类型、 命名方式等统一。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;业务含义相同的表的统一。主要依据高内聚、低耦合的理念，在物理实现中，将业务关系大、源系统影响差异小的表进行整合：将业务关系小、源系统影响差异大的表进行分而置之。通常有如下几种集成方式：&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;采用主从表的设计方式，将两个表或多个表都有的字段放在主表中（主要基本信息），从属信息分别放在各自的从表中。对于主表中的主键，要么采用复合主键、源主键和系统或表 区别标志：要么采用唯一主键、“源主键和系统或表区别标志”生成新的主键。通常建议采用复合主键的方式。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;直接合并，共有信息和个性信息都放在同一个表中。如果表字段的重合度较低，则会出现大量空值，对于存储和易用性会有影响，需谨慎选择。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;不合并，因为源表的表结构及主键等差异很大，无法合并，使用数据仓库里的多个表存放各自的数据。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;ol start=&quot;3&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;表整合：&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;垂直整合：不同的来源表包含相同的数据集，只是存储 的信息不同，比如主表与扩展表的整合，丰富其维度属性。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;水平整合：不同的来源表包含不同的数据集，不同子集之间无交叉，也可以存在部分交叉。&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;存在交叉，则需要去重&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;不存在交叉，则需要考虑不同子集的自然键是否存在冲突&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果不冲突， 则可以考虑将各子集的自然键作为整合后的表的自然键&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;设置超自然键，将来源表各子集的自然键加工成一个字段作为超自然键（即联合主键，阿里采用该方法，并将来源字段作为分区字段）&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;3.2.2 水平拆分&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如何设计维度：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;模型设计重点考虑的三个原则：&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;扩展性：当源系统、业务逻辑变化时，能通过较少的成本快速扩 展模型，保持核心模型的相对稳定性。软件工程中的高内聚、低藕合的思想是重要的指导方针之一。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;效能：在性能和成本方面取得平衡。通过牺牲一定的存储成本， 达到性能和逻辑的优化。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;易用性：模型可理解性高、访问复杂度低。用户能够方便地从模型中找到对应的数据表，并能够方便地查询和分析。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;section&gt;模型设计重点考虑的两个依据：&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;维度的不同分类的属性差异情况。当维度属性随类型变化较大时，采用方案 1 。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;业务的关联程度。两个相关性较低的业务，稠合在一起弊大于利，对模型的稳定性和易用性影响较大，采用方案 2。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;方案参考：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;方案 1 是将维度的不同分类实例化为不同的维度，同时在主维度中保存公共属性，适合于当维度属性随类型变化较大的情形&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;构建商品维度、航旅商品维度：不同分类的商品，其维度属性可能相同，也可能不同。比如航旅的商品和普 通的淘系商品，都属于商品，都有商品价格、标题、类型、上架时间、 类目等维度属性，但是航旅的商品除了有这些公共属性外，还有酒店、 景点、门票、旅行等自己独特的维度属性。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;section&gt;方案 2 是维护单一维度，包含所有可能的属性&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;对淘系商品和 1688 商品构建两个维度，业务分析人员一般只针对本数据集市进行统计分析。1688 业务变更，此维度需要变更， 淘宝业务变更亦然，稳定性很差。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;3.2.3 垂直拆分&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;出于扩展性、产出时间、易用性等方面的考虑，设计主从维度。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;主维表存放稳定、产出时间早、热度高的属性；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;从维表存放变化较快、产 出时间晚、热度低的属性。&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;设计了商品主维度和商品扩展维度。其中商品主维度在每日的 1：30 左右产出，而商 品扩展维度由于有冗余的产出时间较晚的商品品牌和标签信息，在每日 的 3：00 左右产出。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;由于商品扩展维度有冗余的库存等变化较快 的数据，对于主维度进行缓慢变化的处理较为重要。通过存储的冗余和计算成本的增加，实现了商品主模型的稳定和产出时间的提前。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;3.2.4 历史归档&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;归档策略 1：同前台归档策略，在数据仓库中实现前台归档算法，定期对历史数据进行归档。但存在一些问题，一是前台归档策略复杂，实现成本较高；二是前台归档策略可能会经常变化，导致数据仓库归档算法也要随之变化，维护和沟通成本较高。此方式适用于前台归档策略 逻辑较为简单，且变更不频繁的情况。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;归档策略 2 ：同前台归档策略，但采用数据库变更日志的方式。对 于如此庞大的数据量，阿里巴巴采用的数据抽取策略一般是通过数据库 binlog 日志解析获取每日增量，通过增量merge 全量的方式获取最新的 全量数据。可以使用增量日志的删除标志，作为前台数据归档的标志。通过此标志对数据仓库的数据进行归档。此方式不需要关注前台归档策 略，简单易行。但对前台应用的要求是数据库的物理删除只有在归档时 才执行，应用中的删除只是逻辑删除。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;归档策略 3 ：数据仓库自定义归档策略。可以将归档算法用简单、直接的方式实现，但原则是尽量比前台应用晚归档、少归档。避免出现数据仓库中已经归档的数据再次更新的情况。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果技术条件允许，能够解析数据库 binlog 日志，建议使用归档策略 2 ，规避前台归档算法。具体可以根据自身数据仓库的实际情况进行选择。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3.3 维度变化&lt;span/&gt;&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;3.3.1 缓慢变化维&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在 Kimball 的理论中，有三种处理缓慢变化维的方式，可以根据业务需求来进行选择：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;重写维度值。不保留历史数据， 始终取最新数据（假设业务需求方不关心历史数据，则可以采用方案1）&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;插入新的维度行。保留历史数据，维度值变化前的事实和过去的维度值关联，维度值变化后的事实和当前的维度值关联。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;添加维度列。采用第二种处理方式不能将变化前后记录的事实归一为变化前的维度或者归一为变化后的维度（不同业务部门需要统计各自的业绩，则需 要保留历史数据）&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;3.3.2 快照维表&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;在 Kimball 的维度建模中，必须使用代理键（不具有业务含义的键，区别于自然键）作为每个维表的主键，用于处理缓慢变化维。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;阿里不使用代理键的原因：数据量大、ETL复杂化；不直接使用拉链表的原因：解释成本高、随着时间的推移，分区数量会极度膨胀&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;阿里通过快照方式，每天保留一份全量快照数据，简单而有效，方便好理解，但造成存储浪费，因此配合极限存储。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;3.3.3 极限存储&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;透明化&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;底层的数据还是历史拉链存储，但是上层做一个视图操作或者在 Hive 里做一个 hook ，通过分析语句的语法树，把对极限存储前的表的 查询转换成对极限存储表的查询。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.2254601226993865&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/UdK9ByfMT2OdrLPF5BpNVJImlPOjHiakuAF6F2okJtd3DCspibiaUmgFT0vtqCGOZEcaibzc8Yvv02yFlDTbbVR4mw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;652&quot;/&gt;&lt;/figure&gt;&lt;ol start=&quot;2&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;分月做历史拉链表&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;局限性：首先，其产出效率很低，大部分极限存储通常需要 t-2 ；其次，对于变化频率高的数据并不能达到节约成本的效果。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;在做极限存储前有一个全量存储表，全量存储表仅保留最近一段 时间的全量分区数据，历史数据通过映射的方式关联到极限存储表。即用户只访问全量存储表，所以对用户来说极限存储是不可见的。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;对于部分变化频率频繁的宇段需要过滤。例如，用户表中存在用户积分宇段，这种宇段的值每天都在发生变化，如果不过滤的话，极限存储就相当于每个分区存储一份全量数据，起不到节约存储成本的效果。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;3.3.4 微型维度&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;微型维度的创建是通过将一部分不稳定的属性从主维度中移出，并 将它们放置到拥有自己代理键的新表中来实现的。这些属性相互之间没有直接关联，不存在自然键。通过为每个组合创建新行的一次性过程来加载数据。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;比如淘宝用户维度，用户的注册日期、年龄、性别、身份信息等基本不会发生变化，但用户 VIP 等级、用户信用评价等级会随着用户的行为不断发生变化。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;其中 VIP 等级共有 8 个值，即 -1 ～6 ；用户信用评价等级共有 18 个值。假设基于 VIP 等级和用户信用评价等级构建微型维度，则在此微型维度中共有 8 x 18 个组合，即 144 条记录，代理键可能是 1～ 144&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;阿里在实践中并未使用此技术：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;微型维度的局限性：必须是枚举值，且考虑所有可能组合&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;ETL 逻辑复杂&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;破坏了维度的可浏览性&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3.4 特殊维度&lt;span/&gt;&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;3.4.1 递归层次&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;维度的递归层次，按照层级是否固定分为均衡层次结构（如一级类目、二级类目等）和非均衡层次结构（如公司之间的公司，数量级别不固定）&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;递归 SQL 成本较高，且很多工具不支持递归SQL，因此在维度模型中对层次结构进行处理&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;层次结构扁平化&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3157099697885196&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/UdK9ByfMT2OdrLPF5BpNVJImlPOjHiakuJBgQ9kLyfyIBVZrwicdQ70pm95Vlw9ib82sPCIDL3Bo7VyfGDc0XJEgg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;662&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;扁平化仅包含固定数量的级别，对于非平衡层次结构，可以通过预留级别的方式来解决，但扩展性较差（图为阿里巴巴中文站的类目体系，粗体部分为回填内容）&lt;/p&gt;&lt;ol start=&quot;2&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;层次桥接表&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;解决了层次结构扁平化带来的一些问题，加工逻辑复杂，使用逻辑复杂，实际工作很少应用&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4350453172205438&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/UdK9ByfMT2OdrLPF5BpNVJImlPOjHiakuEzTQTibtdO9zwFwggQDuXovsicRUyN0TITb2SW7IzGQursMicrpd0j9Cg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;662&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;3.4.2 行为维度&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;理解为事实衍生的维度，按照加工方式划分：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;另一个维度的过去行为，如买家最近一次访问淘宝的时间、买家最近一次发生淘宝交易的时间等。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;快照事实行为维度，如买家从年初截至当前的淘宝交易金额、买 家信用分值、卖家信用分值等。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;分组事实行为维度，将数值型事实转换为枚举值。如买家从年初截至当前的淘宝交易金额按照金额划分的等级、买家信用分值按 照分数划分得到的信用等级等。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;复杂逻辑事实行为维度，通过复杂算法加工或多个事实综合加工得到。如前面提到的卖家主营类目，商品热度根据访问、收藏、 加入购物车、交易等情况综合计算得到。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于行为维度，有两种处理方式，其中一种是将其冗余至现有的维表中，如将卖家信用等级冗余至卖家维表中另一种是加工成单独的行为维表，如卖家主营类目。具体采用哪种方式主要参考如下两个原则：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;第一，避免维度过快增长。比如对商品表进行了极限存储，如果将 商品热度加入现有的商品维表中，则可能会使每日商品变更占比过高， 从而导致极限存储效果较差。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;第二，避免耦合度过高。比如卖家主营类目，加工逻辑异常复杂， 如果融合进现有的卖家维表中，那么过多的业务稠合会导致卖家维表刷新逻辑复杂、维护性差、产出延迟等。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;3.4.3 多值维度&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;多值维度的处理方式&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;降低事实表的粒度（子订单建立事实）&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;采用多字段（售楼合同，多个买受方，已是最细粒度；由于个数不会太多，预留字段：买受方1，买受方2，买受方3）&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;桥接表：通过桥接表，则会产生多条重复记录，业务上注意区分重复计算是否符合业务逻辑&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;3.4.4 多值属性&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;e.g. 商品和 SKU、属性、标签都是多对多的关系&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;多值属性的处理方式：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;保持维度主键不变，将多值属性放在维度的一个属性字段中（通过 k-v 对的形式放在 property 字段中，数据示例如下：10281239:156426871; 137396765:29229; 137400766:3226633）&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;保持维度主键不变，但将多值属性放在维度的多个属性字段中（卖家主营类目，只取TOP 3）&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;维度主键发生变化，一个维度值存放多条记录，扩展性好，使用方便（比如商品 SKU 维表，对于每个商品，有多少 SKU ，就有多少记录，主键是商品的 ID 和 SKU 的 ID）&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;3.4.5 杂项维度&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;杂项维度是由操作型系统中的指示符或者标志宇段组合而成的，一般不在一致性维度之列。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;将这些字段建立到一个维表中，在事实表中只需保存一个外键即可。多个字段的不同取值组成 一条记录，生成代理键，存入维表中，并将该代理键保存到相应的事实表字段下。建议不要直接使用所有的组合生成完整的杂项维表，在抽取遇到新的组合时生成相应的记录即可。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;阿里：存在非枚举字段，如交易留言、交易属性、交易标签等；通过子订单维度实现，且作为逻辑模型，不进行物理化。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;第4章 事实表设计&lt;span/&gt;&lt;/h3&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;4.1 事实表基础&lt;span/&gt;&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;4.1.1 事实表特性&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;事实表作为数据仓库维度建模的核心，紧紧围绕着业务过程来设计，通过获取描述业务过程的度量来表达业务过程，包含了引用的维度和与业务过程有关的度量。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;事实表中一条记录所表达的业务细节程度被称为粒度。通常粒度可以通过两种方式来表述：一种是维度属性组合所表示的细节程度：一种是所表示的具体业务含义。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;作为度量业务过程的事实，一般为整型或浮点型的十进制数值，有可加性、半可加性和不可加性三种类型。&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;可加性事实是指可以按照与事实表关联的任意维度进行汇总。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;半可加性事实只能按照特定维度汇总， 不能对所有维度汇总，比如库存可以按照地点和商品进行汇总，而按时间维度把一年中每个月的库存累加起来则毫无意义。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;完全不具备可加性，比如比率型事实。对于不可加性事实可分解为可加的组件来实现聚集。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;section&gt;维度属性也可以存储到事实表中，这种存储到事实表中的维度列被称为“退化维度”。与其他存储在维表中的维度一样 ，退化维度也可以 用来进行事实表的过滤查询、实 现聚合操作等。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;事实表有三种类型 : 事务事实表、周期快照事实表和累积快照事实表。&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;事务事实表用来描述业务过程，跟踪空间或时间上某点的度量事件，保存的是最原子的数据，也称为“原子事实表“。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;周期快照事实表以具有规律性的、可预见的时间间隔记录事实 ，时间间隔如每天、每月、每年等。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;累积快照事实表用来表述过程开始和结束之间的关键步骤事件，覆盖过程的整个生命周期，通常具有多个日期字段来记录关键时间点，当过程随着生命周期不断变化时，记录也会随着过程的变化而被修改。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;4.1.2 事实表设计原则&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;原则 1：尽可能包含所有与业务过程相关的事实&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;事实表设计的目的是为了度量业务过程，所以分析哪些事实与业务过程有关是设计中非常重要的关注点。在事实表中应该尽量包含所有与业务过程相关的事实，即使存在冗余，但是因为事实通常为数字型，带来的存储开销也不会很大。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;原则 2：只选择与业务过程相关的事实&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;在选择事实时，应该注意只选择与业务过程有关的事实。比如在订单的下单这个业务过程的事实表设计中 ，不应该存在支付金额这个表示支付业务过程的事实。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;原则 3：分解不可加性事实为可加的组件&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于不具备可加性条件的事实，需要分解为可加的组件。比如订单的优惠率，应该分解为订单原价金额与订单优惠金额两个事实存储在事实表中。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;原则 4：在选择维度和事实之前必须先声明粒度&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;粒度的声明是事实表设计中不可忽视的重要一步，粒度用于确定事实表中一行所表示业务的细节层次，决定了维度模型的扩展性，在选择维度和事实之前必须先声明粒度，且每个维度和事实必须与所定义的粒度保持一致。在设计事实表的过程中，粒度定义得越细越好，建议从最低级别的原子粒度开始，因为原子粒度提供了最大限度的灵活性，可以 支持无法预期的各种细节层次的用户需求。在事实表中，通常通过业务描述来表述粒度，但对于聚集性事实表的粒度描述，可采用维度或维度属性组合的方式。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;原则 5：在同一个事实表中不能有多种不同粒度的事实&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;事实表中的所有事实需要与表定义的粒度保持一致，在同一个事实表中不能有多种不同粒度的事实。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4072948328267477&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/UdK9ByfMT2OdrLPF5BpNVJImlPOjHiakuHLauhQ1eJr06bORZqZic3CxUia5ow1v3CjOia49E4g1mt49iaY4CMgSlbQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;658&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;原则 6：事实的单位要保持一致&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于同一个事实表中事实的单位，应该保持一致。比如原订单金额、 订单优惠金额、订单运费金额这三个事实，应该采用一致的计量单位， 统 一 为元或分，以方便使用。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;原则 7：对事实的 null 值要处理&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于事实表中事实度量为 null 值的处理，因为在数据 库中 null 值 对常用数字型字段的 SQL 过滤条件都不生效，比如大于、小于、等于、 大于或等于、小于或等于，建议用零值填充。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;原则 8：使用退化维度提高事实表的易用性&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;在 Kimball 的维度建模中，通常按照星形模型的方式来设计，对于 维度的获取采用的是通过事实表的外键关联专门的维表的方式，谨慎使 用退化维度。而在大数据领域的事实表设计中，则大量采用退化维度的 方式，在事实表中存储各种类型的常用维度信息。这样设计的目的主要 是为了减少下游用户使用时关联多个表的操作，直接通过退化维度实现 对事实表的过滤查询、控制聚合层次、排序数据以及定义主从关系等。通过增加冗余存储的方式减少计算开销，提高使用效率。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;4.1.3 事实表设计方法&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于维度模型设计采用四步设计方法：选择业务过程、声明粒度、确定维度、确定事实。&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;选择业务过程及确定事实表类型&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在明确了业务需求以后，接下来需要进行详细的需求分析，对业务 的整个生命周期进行分析，明确关键的业务步骤，从而选择与需求有关的业务过程。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.36324786324786323&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/UdK9ByfMT2OdrLPF5BpNVJImlPOjHiaku2Bt2azeD9SRmVkCkCmGs0C0xwr5LKFJWspXAVswlQ3qcCRGvFmYEQQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;702&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;业务过程通常使用行为动词表示业务执行的活动。比如图 4.1中的淘宝订单流转的业务过程有四个：创建订单、买家付款、卖家发货、买家确认收货。在明确了流程所包含的业务过程后，需要根据具体的业务需求来选择与维度建模有关的业务过程。比如是选择买家付款这个业务过程，还是选择创建订单和买家付款这两个业务过程，具体根据业务情 况来确定。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在选择了业务过程以后，相应的事实表类型也随之确定了。比如选择买家付款这个业务过程，那么事实表应为只包含买家付款这一个业务过程的单事务事实表；如果选择的是所有四个业务过程，并且需要分析各个业务过程之间的时间间隔，那么所建立的事实表应为包含了所有四个业务过程的累积快照事实表。&lt;/p&gt;&lt;ol start=&quot;2&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;声明粒度&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;粒度的声明是事实表建模非常重要的一步，意味着精确定义事实表 的每一行所表示的业务含义，粒度传递的是与事实表度量有关的细节层次。明确的粒度能确保对事实表中行的意思的理解不会产生混淆，保证所有的事实按照同样的细节层次记录。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;应该尽量选择最细级别的原子粒度，以确保事实表的应用具有最大的灵活性。同时对于订单过程而言，粒度可以被定义为最细的订单级别。比如在淘宝订单中有父子订单的概念，即一个子订单对应一种商品，如 果拍下了多种商品，则每种商品对应一个子订单:这些子订单一同结算 的话，则会生成一个父订单。那么在这个例子中，事实表的粒度应该选择为子订单级别。&lt;/p&gt;&lt;ol start=&quot;3&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;确定维度&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;完成粒度声明以后，也就意味着确定了主键，对应的维度组合以及相关的维度字段就可以确定了，应该选择能够描述清楚业务过程所处的环境的维度信息。比如在淘宝订单付款事务事实表中，粒度为子订单，相关的维度有买家、卖家、商品、收货人信息 、业务类型、订单时间等维度。&lt;/p&gt;&lt;ol start=&quot;4&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;确定事实&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;事实可以通过回答“过程的度量是什么”来确定。应该选择与业务 过程有关的所有事实，且事实的粒度要与所声明的事实表的粒度一致。事实有可加性、半可加性、非可加性三种类型 ， 需要将不可加性事实分解为可加的组件。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如在淘宝订单付款事务事实表中，同粒度的事实有子订单分摊的支付金额、邮费、优惠金额等。&lt;/p&gt;&lt;ol start=&quot;5&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;冗余维度&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在传统的维度建模的星形模型中，对维度的处理是需要单独存放在专门的维表中的，通过事实表的外键获取维度。这样做的目的是为了减少事实表的维度冗余，从而减少存储消耗。而在大数据的事实表模型设计中，考虑更多的是提高下游用户的使用效率，降低数据获取的复杂性，减少关联的表数量。所以通常事实表中会冗余方便下游用户使用的常用维度，以实现对事实表的过滤查询、控制聚合层次、排序数据以及定义主从关系等操作。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如在淘宝订单付款事务事实表中，通常会冗余大量的常用维度字段，以及商品类目、卖家店铺等维度信息。&lt;/p&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;4.2 事务事实表&lt;span/&gt;&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;订单作为交易行为的核心载体，直观反映了交易的状况。订单的流转会产生很多业务过程，而下单、支付和成功完结三个业务过程是整个 订单的关键节点。获取这三个业务过程的笔数、金额以及转化率是日常 数据统计分析的重点，事务事实表设计可以很好地满足这个需求。本节 将介绍三种不同事务事实表的设计方式，以及在淘宝交易订单中关于邮 费和折扣分摊到子订单的算法。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;4.2.1 设计过程&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;任何类型的事件都可以被理解为一种事务。比如交易过程中的创建 订单、买家付款，物流过程中的揽货、发货、签收，退款中的申请退 款、 申请小二介入等，都可以被理解为一种事务。事务事实表， 即针对这些过程构建的一类事实表，用以跟踪定义业务过程的个体行为，提供丰富的分析能力，作为数据仓库原子的明细数据。下面以淘宝交易事务事实表为例，阐述事务事实表的一般设计过程。&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;选择业务过程&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;图 4.1 给出了淘宝交易订单的流转过程，其中介绍了四个重要过程：创建订单、买家付款、 卖家发货、买家 确认收货，即下单、支付 、 发货和成功完结四个业务过程。这四个业务过程不仅是交易过程中的重要时间节点 ，而且也是下游统计分析的重点，因此淘宝交易事务事实表 设计着重从这四个业务过程进行展开 。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Kimball 维度建模理论认为，为了便于进行独立的分析研究，应该为每个业务过程建立一个事实表。对于是否将不同业务过程放到同一个事实表 中，将在下一节中详细介绍。&lt;/p&gt;&lt;ol start=&quot;2&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;确定粒度&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;业务过程选定以后，就要针对每个业务过程确定一个粒度，即确定事务事实表每一行所表达的细节层次。下面先介绍淘宝订单的产生过程。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于每一种商品产生的订单就称为子订单，子订单记录了父订单的订单号，并且有子订单标志。如果在同一个店铺只购买了一种商品，则会将父子订单进行合并，只保留一条订单记录。如图 4.2 和图 4.3 所示示例。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4969604863221885&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/UdK9ByfMT2OdrLPF5BpNVJImlPOjHiakuLPbA7kIOfFAfVVOKdY6ibI3hJhuCZhVuwd53BqwgDgHCbiatOHBABqibQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;658&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;卖家发货这个业务过程可以选择子订单粒度，即将每个子订 单作为卖家发货事实表的一个细节。然而，在实际操作中发现，卖家发货更多的是物流单粒度而非子订单粒度，同 一个子订单可以拆开成多个物流单进行发货。在事务事实表设 计过程中，秉承确定为最细粒度的原则，因此对于卖家发货确定为物流单粒度，和其他三个业务过程不同，这样可以更好地给下游统计分析带来灵活性。&lt;/p&gt;&lt;ol start=&quot;3&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;确定维度&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;选定好业务过程并且确定粒度后，就可以确定维度信息了。在淘宝交易事务事实表设计过程中，按照经常用于统计分析的场景，确定维度包含: 买家、卖家、商品、商品类目、发货地区、收货地区、父订单维度以及杂 项维度。由于订单的属性较多，比如订单的业务类型、是否无线交易、订单的 attributes 属性等，对于这些使用较多却又无法归属到上述买卖家或商品维度中的属性，则新建一个杂项维度进行存放，如图 4.4所示。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.9652042360060514&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/UdK9ByfMT2OdrLPF5BpNVJImlPOjHiakuDtTz35hibiauf0mUlr3B1icBFbCiaus6p3WcriaR4KDrVQ4bHhbJRWVibyicg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;661&quot;/&gt;&lt;/figure&gt;&lt;ol start=&quot;4&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;确定事实&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;作为过程度量的核心，事实表应该包含与其描述过程有关的所有事实。以淘宝交易事务事实表为例，选定三个业务过程一一下单、支付和 成功完结，不同的业务过程拥有不同的事实。比如在下单业务过程中， 需要包含下单金额、下单数量、下单分摊金额；在支付业务过程中，包含支付金额、分摊邮费、折扣金额、红包金额、积分金额；在完结业务过程中包含确认收货金额等。由于粒度是子订单，所以对于一些父订单上的金额需要分摊到子订单上，比如父订单邮费、父订单折扣等。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;5.&lt;span&gt;冗余维度&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;在确定维度时，包含了买卖家维度、商品维度、类目维度 、收发货维度等， Kimball维度建模理论建议在事实表中只保存这些维表的外键， 而淘宝交易事务事实表在 Kimball 维度建模基础之上做了进 一 步的优 化，将买卖家星级、标签、店铺名称、商品类型、商品特征、商品属性、 类目层级等维度属性都冗余到事实表中，提高对事实表进行过滤查询、统计聚合的效率，如图 4.5 所示 。&lt;/span&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.9171686746987951&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/UdK9ByfMT2OdrLPF5BpNVJImlPOjHiakuibVNgqZLqwP2eCMON88W9NZjiaic5BR1hbyJtChvLUOHicqpibcRLeqsMgQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;664&quot;/&gt;&lt;/figure&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mp-common-profile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;Mzg3NjIyNjQwMg==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/1OYP1AZw0W0uTPxUPEdVxh33qRPicSlCKPqmeccGfgXTibjkHibQC27iaqJPfCa83dK6rP50ZTRutzPYK57W96Ah6w/0?wx_fmt=png&quot; data-nickname=&quot;数据仓库与Python大数据&quot; data-alias=&quot;edw_bigdata&quot; data-signature=&quot;大数据、数仓、分析，Java、Hadoop/Spark/Flink、ClickHouse、Doris、Druid，面试、课程推荐、AI/BI&quot; data-from=&quot;0&quot; data-is_biz_ban=&quot;0&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;4.2.2 单事务事实表&lt;/span&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;单事务事实表，顾名思义，即针对每个业务过程设计一个事实表。这样设计的优点不言而喻，可以方便地对每个业务过程进行独立的分析研究。1688 交易流程则采用这 种模式构建事务事实表。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1688 交易和淘宝交易相 似，主要流程也是下单、支付、发货和完结，而在这四个关键流程中 1688 交易选择下单和支付两个业务过程设 计事务事实表，分别是1688交易订单下单事务事实表和1688交易订单支付事务事实表。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;选定业务过程后，将对每个业务过程确定粒度、维度和事实。对于 1688 交易订单下单事务事实表，确定子订单粒度，选择买家、卖家、商品、父订单、收货地区维度，事实包含下单分摊金额和折扣金额，如 图4.6 所示；而对于 1688 交易订单支付事务事实表 ，粒度和维度与交易订单下单事务事实表相同，所表达的事实则不 一样 ，包含支付金额、支付调整金额和支付优惠等，如图4.7 所示；&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5793650793650794&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/UdK9ByfMT2OdrLPF5BpNVJImlPOjHiakuE3aWI2eTeNnmLhX0rwXfACYEONK8mawtqqqTcBibYIyER1tSicRm3Ryg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;630&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1688 交易针对下单和支付分别建立单事务事实表后，每天的下单记录则进入当天的下单事务事实表中，每天的支付记录进入当天的支付事务事实表中，由于事实表具有稀疏性质 ，因此只有当天数据才会进入当天的事实表中。下面以具体交易订单为例 ，展示单事务事实表的设计实例。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.0212314225053079&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/UdK9ByfMT2OdrLPF5BpNVJImlPOjHiakuErqjyXR176ybbic1On3E6bx81IsZL1mIAiczCl9oqGVcG0O4lHNicVwJQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;471&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;4.2.3 多事务事实表&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;多事务事实表，将不同的事实放到同一个事实表中，即同一个事实表包含不同的业务过程。多事务事实表在设计时有两种方法进行事实的处理：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;①不同业务过程的事实使用不同的事实字段进行存放；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;②不同业务过程的事实使用同一个事实字段进行存放，但增加一个业务过程标签。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如何选择：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;当不同业务过程的度量比较相似、差异不大时，可以采用第 二种 多事务事实表的设计方式，使用同 一个字段来表示度量数据 。但 这种方式存在一个问题一一在同一个周期内会存在多条记录（如淘宝收藏商品事务事实表，增加【收藏删除类型】，collect/delete）&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;当不同业务过程的度量差异较大时，可以选择第一种多事务事实 表的设计方式，将不同业务过程的度量使用不同 字段冗余到 表 中，非当前业务过程则置零表示。这种方式所存在的问题是度量字段零值较多（如淘宝交易事务事实表，针对不同业务过程如下单，则打一个是否当天下单的标签）&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;4.2.4 两种事实表对比&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;业务过程&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于单事务事实表，一个业务过程建立一个事实表，只反映一个业务过程的事实 ；对于多事务事实表，在同 一个事实表 中反映多个业务过程。多个业务过程是否放到同一 个事实表中，首先需要分析不同业务过 程之间的相 似性和业务源系统。比如淘宝交易的下单、支付和成功完结 这三个业务过程是存在相似性的，都属于订单处理中的 一环，并且都来自于交易系统 ，因此适合放到同 一个事务事实表中。&lt;/p&gt;&lt;ol start=&quot;2&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;粒度和维度&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在考虑是采用单事务事实表还是多事务事实表时，另一个关键点就是粒度和维度，在确定好业务过程后，需要基于不同的业务过程确定粒度和维度，当不同业务过程的粒度相同，同时拥有相似的维度时，此时就可以考虑采用多事务事实表。如果粒度不同，则必定是不同的事实表。比如交易中支付和发货有不同的粒度，则无法将发货业务过程放到淘宝交易事务事实表中。&lt;/p&gt;&lt;ol start=&quot;3&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;事实&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于不同的业务过程，事实往往是不同的，单事务事实表在处理事实上比较方便和灵活，仅仅体现同一个业务过程的事实即可， 而多事务事实表由于有多个业务过程， 所以有更多的事实需要处理。如果单一业务过程的事实较多，同时不同业务过程的事实又不相同，则可以考虑使 用单事务事实表，处理更加清晰 ; 若使用多事务事实表， 则会导致事实表零值或空值字段较多。&lt;/p&gt;&lt;ol start=&quot;4&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;下游业务使用&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;单事务事实表对于下游用户而言更容易理解 ， 关注哪个业务过程就使用相应的事务事实表；而多事务事实表包含多个业务过程，用户使用时往往较为困惑。1688 和淘宝交易分别采用了这两种方式，从日常使用来看，对于淘宝交易事务事实表下游用户确实有 一定的学习成本 。&lt;/p&gt;&lt;ol start=&quot;5&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;计算存储成本&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;针对多个业务过程设计事务事实表，是采用单事务事实表还是多事务事实表，对于数据仓库的计算存储成本也是参考点之 一 ，当业务过程 数据来源于同 一个业务系统，具有相同的粒度和维度，且维度较多而事实相对不多时，此时可以考虑使用多事务事实表，不仅其加工计算成本 较低，同时在存储上也相对节省，是一种较优的处理方式。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5413533834586466&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/UdK9ByfMT2OdrLPF5BpNVJImlPOjHiakuIgrjI77vNRUnk4JgBjkUae9A5mPXapLzsicMibkXcTGkibjSBpRsTwU9w/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;665&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;4.2.5 父子事实的处理方式&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;4.2.6 事实的设计准则&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;事实完整性：尽可能多地获取所有的度量&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;事实一致性：事实表中统一计算可以保证度量的一致性（比如金额由数量*单价先在事实表算出来）&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;事实可加性：事务事实表中关注 更多的是可加性事实，下游用户在聚合统计时更加方便&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;4.3 周期快照事实表&lt;span/&gt;&lt;/h5&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;状态度量，比如 账户余额、买卖家星级、商品库存、卖家累积交易额等&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;无法聚集，比如温度等&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;简称“快照事实表”：在确定的间隔内对实体的度量进行抽样，这样可以很容易地研究实体的度量值，而 不需要聚集长期的事务历史&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;4.3.1 特性&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;用快照采样状态&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4376899696048632&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/UdK9ByfMT2OdrLPF5BpNVJImlPOjHiakut0OshZDAO8kC8MNzibaSsALFJwPvbmdXgs7npmojqMgiabcF8v2VyXYw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;658&quot;/&gt;&lt;/figure&gt;&lt;ol start=&quot;2&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;快照粒度&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;快照需要采样的周期以及什么将被采样&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;e.g. 淘宝交易有针对卖家加类目的每月汇总事实表，每月统计一次， 同时维度也不仅一个，包含了卖家和类目。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ol start=&quot;3&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;密度与稀疏性&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;e.g. 针对卖家的历史至今的下单和支付金额，无论 当天卖家是否有下单支付事实，都会给该卖家记录一行。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ol start=&quot;4&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;半可加性&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;半可加性事实不能根据时间维度获得有意义的汇总结 果&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;虽然不能汇总，但可以计算一些平均值&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;4.3.2 实例&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;单维度的每天快照事实表&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;混合维度的每天快照事实表&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;直接使用操作型系统的数据作为周期快照事实表的数 据源进行加工，e.g. 淘宝卖家信用分 / DSR 快照事实表 / 货值拍照表&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;全量快照事实表：e.g. 淘宝好中差评快照事实表，无事实的事实表，更多关注评价的状态&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;4.3.3 注意事项&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;事务与快照成对设计&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;数据仓库维度建模时，对于事务事实表和快照事实表往往都是成对 设计的，互相补充，以满足更多的下游统计分析需求，特别是在事务事实表的基础上可以加工快照事实表，如前面所述的淘宝卖家历史至今快 照事实表，就是在事务事实表的基础上加工得到的，既丰富了星形模型， 又降低了下游分析的成本。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ol start=&quot;2&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;附加事实&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;快照事实表在确定状态度量时，一般都是保存采样周期结束时的状态度量。但是也有分析需求需要关注上一个采样周期结束时的状态度量，而又不愿意多次使用快照事实表，因此一般在设计周期快照事实表 时会附加一些上一个采样周期的状态度量。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ol start=&quot;3&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;周期到日期度量&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;在介绍淘宝卖家历史至今快照事实表时，指定了统计周期是卖家历史至今的一些状态度量，比如历史截至当日的下单金额、成交金额等。然 而在实际应用中，也有需要关注自然年至今、季度至今、财年至今的一些状态度量，因此在确定周期快照事实表的度量时，也要考虑类似的度量值， 以满足更多的统计分析需求。阿里巴巴数据仓库在设计周期快照事实表 时，就针对多种周期到日期的度量设计了不同的快照事实表，比如淘宝 卖家财年至今的下单金额、淘宝商品自然年至今的收藏次数等。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;4.4 累积快照事实表&lt;span/&gt;&lt;/h5&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;研究事件之间时间间隔的需求&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;保存全量数据，存放加工后的事实，并将各维度常用属性和订单 杂项维度退化到此表中&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;e.g. 统计买家下单到支付的时长、买家支付到卖家发货的时长、买家从下单到确认收货的时长等&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;4.4.1 设计过程&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;累积快照事实表解决的最重要的问题 是统计不同业务过程之间的时间间隔，建议将每个过程的时间间隔作为事实放在事实表中（设计过程同4.2.1）&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;4.4.2 特点&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;数据不断更新&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;多业务过程日期&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;4.4.3 特殊处理&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;非线性过程&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;业务过程的统一&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;针对业务关键里程碑构建全面的流程&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;循环流程的处理：主要问题是解决一个业务过程存在多个里程碑日期的问题。使用业务过程第一次发生的日期还是最后一次发生的日期，决定权在商业用 户，而不是设计或开发人员。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ol start=&quot;2&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;多源过程&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;针对多源业务建模，主要考虑事实表的粒度问题。对于退款，由于每个子订单可能 存在多次退款，此时如果要将退款相关业务过程加入模型中，则需要和 商业用户确定存在多次退款时如何取舍，确保模型粒度不变。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ol start=&quot;3&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;业务过程取舍&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;对于多源业务过程，模型的精合度过高，此时需要根据商业用户需求，选取关键的里程碑。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;4.4.4 物理实现&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;全量表的形式：此全量表一般为日期分区表，每天的 分区存储昨天的全量数据和当天的增量数据合并的结果，保证每条记录 的状态最新。此种方式适用于全量数据较少的情况。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;全量表的变化形式：比如针对交易订单，我们以 200 天作为订单从产生到消亡的最大间隔。设计最近 200 天的交易订单累积快照事实表，每天的分 区存储最近 200 天的交易订单而 200 天之前的订单则按照 gmt_create 创 建分区存储在归档表中。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;业务实体的结束时间分区：每天的分区存放当天结 束的数据，设计一个时间非常大的分区，比如 3000-12-31 ，存放截至当前未结束的数据。由于每天将当天结束的数据归档至当天分区中，时间 非常大的分区数据量不会很大， ETL 性能较好；并且无存储的浪费，对于业务实体的某具体实例，在该表的全量数据中唯一。但接口等原因，存在结束标志的确认问题，有以下两个方案：&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;使用相关业务系统的业务实体的结束标志作为此业务 系统的结束标志。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;和前端业务系统确定口径或使用前端归档策略。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;4.5 三种事实表的比较&lt;span/&gt;&lt;/h5&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4785932721712538&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/UdK9ByfMT2OdrLPF5BpNVJImlPOjHiaku1ZoxEQFKUs5SSZMOa2zoInNTgJuV2ps4pIf482b89ng2HLenpg9LMg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;654&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;4.6 无事实的事实表&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;事件类的，记录事件的发生。比如用户的浏览日志。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;条件、范围或资格类的，记录维度与维度多对多之间的关系。比如客户和销售人员的分配情况、产品的促销范围等。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;4.7 聚集型事实表DWS&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;公共汇总层：比如卖家最近 1 天的交易汇总表、卖家最近 N 天的交易汇总表、卖家自然年交易汇总表等。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;4.7.1 聚集的基本原则&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;一致性。表必须提供与查询明细粒度数据一致的查询结果。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;避免单一表设计。不要在同一个表中存储不同层次的聚集数据；否则将会导致双重计算或出现更糟糕的事情。在聚集表中有些行 存放按天汇总的交易额，有些行存放按月汇总的交易额，这将会让使用者产生误用导致重复计算。行之有效的另一种方法是把按天与按月汇总的交易额用两列存放，但是需要在列名或者列注释上能分辨出来。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;聚集粒度可不同。聚集并不需要保持与原始明细粒度数据一样的粒度，聚集只关心所需要查询的维度。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;4.7.2 聚集的基本步骤&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;确定聚集维度&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在原始明细模型中会存在多个描述事实的维度，如日期、商品类别、 卖家等，这时候需要确定根据什么维度聚集，如果只关心商品的交易额 情况，那么就可以根据商品维度聚集数据。&lt;/p&gt;&lt;ol start=&quot;2&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;确定一致性上钻&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;这时候要关心是按月汇总还是按天汇总，是按照商品汇总还是按照 类目汇总，如果按照类目汇总，还需要关心是按照大类汇总还是小类汇 总。当然，我们要做的只是了解用户需要什么，然后按照他们想要的进行聚集。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ol start=&quot;3&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;确定聚集事实&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;在原始明细模型中可能会有多个事实的度量，比如在交易中有交易 额、交易数量等，这时候要明确是按照交易额汇总还是按照成交数量汇总。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;4.7.3 阿里公共汇总层&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;基本原则&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;数据公用性&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;不跨数据域&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;区分统计周期：在表的命名上要能说明数据的统计周期，如 1d 表示最近 1 天，td 表示截至当天， nd 表示最近 N 天&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ol start=&quot;2&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;交易汇总表设计&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;最近1天商品粒度汇总表&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;最近N天卖家粒度汇总表&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;最近1天卖家、买家、商品粒度汇总表&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;最近1天二级类目汇总表&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;4.7.4 聚集补充说明&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;聚集是不跨越事实的：横向钻取是针对多个事实基于一致性维度进行的分析，很多时候采用融合事实表，预先存放横向钻取的结果，从而提高查询性能。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;聚集带来的问题：当子类目对应的一级类目发生变更时，先前存在的、已经被汇总到聚集表中的数据需要被重新调整。这一额外工作随着业务复杂性的增加，会导致多数 ETL 人员选择简单强力的方法，删除并重新聚集数据。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>04ed93d392752fb7b5879adc62b97d1d</guid>
<title>这些“电脑常识”竟然不是常识？</title>
<link>https://toutiao.io/k/wrvewu8</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;profile_inner&quot;&gt;
                  &lt;strong class=&quot;profile_nickname&quot;&gt;科技狐&lt;/strong&gt;
                  &lt;img class=&quot;profile_avatar&quot; id=&quot;js_profile_qrcode_img&quot; src=&quot;&quot; alt=&quot;&quot;/&gt;

                  &lt;p class=&quot;profile_meta&quot;&gt;
                  &lt;label class=&quot;profile_meta_label&quot;&gt;Weixin ID&lt;/label&gt;
                  &lt;span class=&quot;profile_meta_value&quot;&gt;kejihutv&lt;/span&gt;
                  &lt;/p&gt;

                  &lt;p class=&quot;profile_meta&quot;&gt;
                  &lt;label class=&quot;profile_meta_label&quot;&gt;About Feature&lt;/label&gt;
                  &lt;span class=&quot;profile_meta_value&quot;&gt;科技狐，让科技简单点。&lt;/span&gt;
                  &lt;/p&gt;
                &lt;/div&gt;
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>