<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>ac7b15ebbf407167c421d94302b8e793</guid>
<title>优质网站同好者周刊（第 086 期） | 倾城博客</title>
<link>https://toutiao.io/k/suarx81</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;content&quot;&gt;&lt;p&gt;&lt;a href=&quot;https://nicelinks.site/?utm_source=weekly&quot;&gt;倾城之链&lt;/a&gt;作为一个开放平台，旨在云集全球&lt;strong&gt;优秀网站&lt;/strong&gt;，探索互联网中更广阔的世界。此周刊，将汇聚过去一周&lt;a href=&quot;https://nicelinks.site/?utm_source=weekly&quot;&gt;倾城&lt;/a&gt;所收录的内容，以飨同好；欢迎推荐或自荐（仅限有独立域名的网站，可以是二级域名）。您如果要了解收录要求，请参见&lt;a href=&quot;https://nicelinks.site/about?utm_source=weekly&quot;&gt;关于倾城&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;备注&lt;/strong&gt;：本周刊&lt;strong&gt;每周五&lt;/strong&gt;生成，首发于个人微信公众号&lt;a href=&quot;https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzI5MDIwMzM2Mg==&amp;amp;action=getalbum&amp;amp;album_id=1530765143352082433&amp;amp;scene=173&amp;amp;from_msgid=2650641087&amp;amp;from_itemidx=1&amp;amp;count=3#wechat_redirect&quot;&gt;晚晴幽草轩&lt;/a&gt;、博客&lt;a href=&quot;https://www.jeffjade.com&quot;&gt;晚晴幽草轩&lt;/a&gt;，以及&lt;a href=&quot;https://forum.lovejade.cn/&quot;&gt;悠然宜想亭&lt;/a&gt;社区；此一键生成脚本基于 &lt;a href=&quot;https://nicelinks.site/post/602d30aad099ff5688618591&quot;&gt;Deno&lt;/a&gt; 编写，并在 Github 开源：&lt;a href=&quot;https://github.com/nicejade/nicelinks-weekly&quot;&gt;nicejade/nicelinks-weekly&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/%E6%A1%86%E6%9E%B6&quot;&gt;&lt;code&gt;框架&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E7%BD%91%E7%AB%99%E7%94%9F%E6%88%90%E5%99%A8&quot;&gt;&lt;code&gt;网站生成器&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/Web%E5%BC%80%E5%8F%91&quot;&gt;&lt;code&gt;Web开发&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Laravel is a PHP web application framework with expressive, elegant syntax. We’ve already laid the foundation — freeing you to create without sweating the small things.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/laravel.com.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 - Laravel - The PHP Framework For Web Artisans&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/redirect?url=https://laravel.com/&quot;&gt;Laravel&lt;/a&gt; ，是一个基于 PHP 语言的 Web 应用程序框架（全栈），具有表达力强、高效简洁、语法优雅等特点。Laravel 采用 MVC 设计，崇尚开发效率，它已经奠定了基础——让你不用为小事操心就可以自由创作。Laravel 团队认为，发展必须是一种享受和创造性的体验，才能真正实现。Laravel 通过简化许多 Web 项目中使用的常见任务，从而减轻开发的痛苦，例如：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;简单、快速的路由引擎；&lt;/li&gt;&lt;li&gt;强大的依赖注入容器；&lt;/li&gt;&lt;li&gt;多个后端用于会话和缓存存储；&lt;/li&gt;&lt;li&gt;表达直观的数据库 ORM；&lt;/li&gt;&lt;li&gt;数据库无关的模式迁移；&lt;/li&gt;&lt;li&gt;强大的后台作业处理；&lt;/li&gt;&lt;li&gt;实时事件广播；&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Laravel 易于访问，功能强大，并提供了大型健壮应用程序所需的工具。在 Laravel 官网，还给出了更多推荐它的理由：&lt;/p&gt;&lt;h3 id=&quot;为它的乐趣编写代码&quot;&gt;&lt;a href=&quot;#%E4%B8%BA%E5%AE%83%E7%9A%84%E4%B9%90%E8%B6%A3%E7%BC%96%E5%86%99%E4%BB%A3%E7%A0%81&quot; aria-label=&quot;为它的乐趣编写代码 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;为它的乐趣编写代码&lt;/h3&gt;&lt;p&gt;Laravel 重视审美。Laravel 团队和您一样喜欢干净的代码。简单、优雅的语法让您触手可及。每一个特性都经过深思熟虑，为开发人员提供了极好的体验。&lt;/p&gt;&lt;h3 id=&quot;monolith-或-api-由您选择&quot;&gt;&lt;a href=&quot;#monolith-%E6%88%96-api-%E7%94%B1%E6%82%A8%E9%80%89%E6%8B%A9&quot; aria-label=&quot;monolith 或 api 由您选择 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;Monolith 或 API-由您选择&lt;/h3&gt;&lt;p&gt;使用 Laravel 和 Livewire 在 PHP 中构建健壮的全栈应用程序。喜欢 JavaScript 吗？通过将 Laravele 与 Inertia 配对，打造整体 &lt;a href=&quot;https://nicelinks.site/post/5b1294b5e93ed2618cfac134&quot;&gt;React&lt;/a&gt; 或 &lt;a href=&quot;https://nicelinks.site/post/5b1a221c0526c920d6dfaada&quot;&gt;Vue&lt;/a&gt; 驱动前端。或者，让 Laravel 为您的 &lt;a href=&quot;https://nicelinks.site/post/61c928af5be6454b4e3d5146&quot;&gt;Next&lt;/a&gt; 提供强大的后端 API。js 应用程序、移动应用程序或其他前端。无论哪种方式，Laravel 的初学者工具包将在几分钟内为您带来生产力。&lt;/p&gt;&lt;h3 id=&quot;企业规模没有企业复杂性&quot;&gt;&lt;a href=&quot;#%E4%BC%81%E4%B8%9A%E8%A7%84%E6%A8%A1%E6%B2%A1%E6%9C%89%E4%BC%81%E4%B8%9A%E5%A4%8D%E6%9D%82%E6%80%A7&quot; aria-label=&quot;企业规模没有企业复杂性 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;企业规模没有企业复杂性&lt;/h3&gt;&lt;p&gt;Laravel 庞大的精心维护的软件包库意味着您已做好一切准备。让 Laravel Octane 增强您应用程序的性能，并在由 AWS Lambda 提供支持的 Laravele Vapor 无服务器部署平台上体验无限规模。&lt;/p&gt;&lt;h3 id=&quot;为像你这样的人建立的社区&quot;&gt;&lt;a href=&quot;#%E4%B8%BA%E5%83%8F%E4%BD%A0%E8%BF%99%E6%A0%B7%E7%9A%84%E4%BA%BA%E5%BB%BA%E7%AB%8B%E7%9A%84%E7%A4%BE%E5%8C%BA&quot; aria-label=&quot;为像你这样的人建立的社区 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;为像你这样的人建立的社区&lt;/h3&gt;&lt;p&gt;Laravel 适合所有人，无论你已经编程 20 年还是 20 分钟。这是为建筑宇航员和周末黑客准备的。对于那些有学位的人和那些为了追求梦想而辍学的人。我们一起创造令人惊叹的事物。&lt;/p&gt;&lt;p&gt;值得一提的是，知名社区网站 &lt;a href=&quot;https://nicelinks.site/post/5fccf57d0ed3200f018e1239&quot;&gt;LearnKu&lt;/a&gt; 便是基于 Laravel 搭建，早期名字叫「Laravel China 社区」，至今可看到 &lt;a href=&quot;https://nicelinks.site/redirect?url=https://learnku.com/laravel&quot;&gt;laravel&lt;/a&gt; 板块儿。&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://nicelinks.site/redirect?url=https://laravel.com/&quot;&gt;Laravel&lt;/a&gt; 在 &lt;a href=&quot;https://nicelinks.site/post/59ba80d93df6765c75b77911&quot;&gt;Github&lt;/a&gt; 开源，已拥有超过 71 KB Star，目前更新至 &lt;code&gt;9.X&lt;/code&gt; 版本；它提供非常完善的生态和文档，无论您是 MacOS、Linux 还是 Windows 操纵系统，都能轻松开始开发和运行 Laravel 项目（支持 Composer 和 Docker）；如果您对 laravel 感兴趣，可移步至 &lt;a href=&quot;https://nicelinks.site/redirect?url=https://laravel.com/docs/&quot;&gt;Laravel 开发文档&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/633e8f7072ba4a064e24e5d0&quot;&gt;倾城之链 - Laravel - The PHP Framework For Web Artisans&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/%E5%9B%BE%E7%89%87%E5%8E%8B%E7%BC%A9&quot;&gt;&lt;code&gt;图片压缩&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E5%B7%A5%E5%85%B7&quot;&gt;&lt;code&gt;工具&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E6%9C%8D%E5%8A%A1&quot;&gt;&lt;code&gt;服务&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Repic App, 适合你的图片压缩工具。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/repic.app.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 - Repic App | 图片压缩工具&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/redirect?url=https://repic.app/&quot;&gt;Repic App&lt;/a&gt; ，一个完全免费的图片压缩工具，适用于 Web、macOS 和 Windows；支持压缩后缩放对比细节、一键还原等；界面优雅，交互简洁；它具有以下功能特色：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;转换插件一键安装&lt;/strong&gt;：融合优秀压缩方案，随意搭配，按需使用，持续开启更多可能；&lt;/li&gt;&lt;li&gt;&lt;strong&gt;压缩细节精准对比&lt;/strong&gt;：高倍缩放和拖动对比，压缩前后质量变化一目了然；&lt;/li&gt;&lt;li&gt;&lt;strong&gt;应用窗口一键置顶&lt;/strong&gt;：任他窗口再多、桌面再乱，拖入文件不用再抓狂；&lt;/li&gt;&lt;li&gt;&lt;strong&gt;两种出图模式&lt;/strong&gt;：可直接覆盖原图片文件，也可在指定位置生成新的图片文件；&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;值得一提的是，Repic App 有提供多种插件，如：TinyPNG 插件、GifSicle 插件（基于Gifsicle，可压缩gif格式的图片）、SVGO 插件等，使得它得以融合业内优秀的开源方案。有粗略体验 repic，经压缩后，体积大幅下降，效果对比相差无几；有「图片压缩」需要的朋友，不妨一试。&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/633e867472ba4a064e24e2ab&quot;&gt;倾城之链 - Repic App | 图片压缩工具&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/%E9%85%B7%E5%B7%A5%E4%BD%9C&quot;&gt;&lt;code&gt;酷工作&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E5%8F%91%E7%8E%B0&quot;&gt;&lt;code&gt;发现&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E8%BF%9C%E7%A8%8B&quot;&gt;&lt;code&gt;远程&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;关键字&lt;/strong&gt;：jobs, job seeker, job seeking, job wanted, resume, cv, hiring, work, life, balance&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Jobs for work-life balance&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/wlb.works.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 - WLB Works | Find jobs for work-life balance&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/redirect?url=https://wlb.works/&quot;&gt;WLB Works&lt;/a&gt; ，找到工作以平衡工作与生活。这是一个专注于 WLB（即Work-life balance，工作生活平衡）的职位搜集网站,，会经常发布国内外的优质 WLB 工作机会，注册登录之后也可以免费发布自己的职位。&lt;/p&gt;&lt;h3 id=&quot;为什么要建立这个网站&quot;&gt;&lt;a href=&quot;#%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%BB%BA%E7%AB%8B%E8%BF%99%E4%B8%AA%E7%BD%91%E7%AB%99&quot; aria-label=&quot;为什么要建立这个网站 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;为什么要建立这个网站？&lt;/h3&gt;&lt;p&gt;创建这个网站的原因很简单，这是为了让世界各地的人更容易找到舒适和有意义的工作，在创建者看来，一份出色的工作应该与生活相平衡，也就是 WLB。&lt;/p&gt;&lt;p&gt;近年来，由于新冠肺炎的肆虐，越来越多的人意识到了生命的价值；然而，随着经济危机的到来，许多拥有优秀技能的人失去了工作机会，或者因为公司人力资源的下降而不得不承担更多的任务，或者因为疫情而不能去办公室；这对他们来说是无法忍受的。&lt;/p&gt;&lt;p&gt;幸运的是，越来越多的公司开始习惯于让员工在家或其他任何地方工作，他们发现这样做将提高员工的工作效率，改善工作与生活的平衡。我们还认为，在互联网行业和更多行业，这种工作模式是有前途的，也是不可避免的。&lt;/p&gt;&lt;p&gt;当然，远程办公只是 WLB 的工作方法之一。现在是区块链和 Web3 技术蓬勃发展的时代。在这个方向上，许多公司都在寻找优秀的人才，以诱人的薪水和工作时间加入他们的团队。&lt;/p&gt;&lt;p&gt;拥有 WLB 职位的公司在互联网上的各种招聘网站上发布招聘信息，但目前似乎没有专注于 WLB 概念的招聘网站，在传统招聘网站上公布招聘信息也花费了很多，WLB Works 就是为此诞生的：人们需要一个专注于 WLB 工作模式的网站，雇主和求职者可以在这个网站上以非常低的成本交换信息。&lt;/p&gt;&lt;h3 id=&quot;网站计划是什么&quot;&gt;&lt;a href=&quot;#%E7%BD%91%E7%AB%99%E8%AE%A1%E5%88%92%E6%98%AF%E4%BB%80%E4%B9%88&quot; aria-label=&quot;网站计划是什么 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;网站计划是什么？&lt;/h3&gt;&lt;p&gt;计划继续改善该网站的&lt;strong&gt;工具属性&lt;/strong&gt;和&lt;strong&gt;社交属性&lt;/strong&gt;。&lt;/p&gt;&lt;p&gt;在&lt;code&gt;工具属性&lt;/code&gt;方面，他们将开发更友好、更完善的在线简历工具，提供更多的简历模板等。之后，他们还将开发个人公文包功能，与网站简历功能配合，使求职者能够更充分地发挥自己的技能和优势。&lt;/p&gt;&lt;p&gt;在&lt;code&gt;社交属性&lt;/code&gt;方面，他们将首先改进网站内通知和电子邮件通知系统。另一项更重要、更复杂的任务是为求职者建立一个信息发布广场，以便招聘人员能够积极寻找合适的人才。此外，未来将逐步完善虚假或有害信息的报告制度。&lt;/p&gt;&lt;p&gt;在 Alpha 测试阶段，他们还将考虑如何实现网站的盈利模式和收费模式。这是必要的，但对用户来说肯定是低成本的。&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/633e81d972ba4a064e24e1e4&quot;&gt;倾城之链 - WLB Works | Find jobs for work-life balance&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/%E5%8D%9A%E5%AE%A2&quot;&gt;&lt;code&gt;博客&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E6%95%99%E7%A8%8B&quot;&gt;&lt;code&gt;教程&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E5%88%86%E4%BA%AB&quot;&gt;&lt;code&gt;分享&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;关键字&lt;/strong&gt;：文武科技社, 软件, 黑苹果, mac, win, 电影&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;文武科技柜，文武科技社的后花园。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/www.wangdu.site.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 - 文武科技柜 - 文武科技社的后花园&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/redirect?url=https://www.wangdu.site/&quot;&gt;文武科技柜&lt;/a&gt;，是基于 &lt;a href=&quot;https://nicelinks.site/post/602e4a576eaf2a7660805af1&quot;&gt;WordPress&lt;/a&gt;  搭建的博客网站（是&lt;a href=&quot;https://nicelinks.site/redirect?url=https://chengxuxiaohei.top/&quot;&gt;文武科技社&lt;/a&gt; 的附属产物）；主要用以分享一些&lt;strong&gt;工具&lt;/strong&gt;，以及个人经验编写的&lt;strong&gt;教程&lt;/strong&gt;；该网站是作者将 &lt;a href=&quot;https://www.wangdu.site/software/47.html&quot;&gt;WordPress 和公众号、小程序三者合一&lt;/a&gt; 的一种践行，对此感兴趣的朋友，或可参考下。&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/633db49272ba4a064e24da51&quot;&gt;倾城之链 - 文武科技柜 - 文武科技社的后花园&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/HTTP&quot;&gt;&lt;code&gt;HTTP&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/Nginx&quot;&gt;&lt;code&gt;Nginx&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E6%9C%8D%E5%8A%A1&quot;&gt;&lt;code&gt;服务&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;nginx [engine x] is an HTTP and reverse proxy server, a mail proxy server, and a generic TCP/UDP proxy server, originally written by Igor Sysoev. For a long time, it has been running on many heavily loaded Russian sites including Yandex, Mail.Ru, VK, and Rambler. According to Netcraft, nginx served or proxied 21.62% busiest sites in August 2022.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/nginx.org.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 - Nginx - An HTTP and reverse proxy server&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/redirect?url=https://nginx.org/&quot;&gt;Nginx&lt;/a&gt; ，Nginx (engine x) 是一个高性能的 HTTP 和反向代理 Web 服务器，同时也提供了IMAP/POP3/SMTP 服务。Nginx 是由 lgor Sysoev 为俄罗斯访问量第二的 Rambler.ru 站点（俄文：Рамблер）开发的；从2004年发布至今，凭借开源的力量，已经接近成熟与完善。其将源代码以类 BSD 许可证的形式发布，因它的稳定性、丰富的功能集、简单的配置文件和低系统资源的消耗而闻名。2022 年 01 月 25 日，nginx 1.21.6发布。&lt;/p&gt;&lt;p&gt;Nginx 是开源、高性能、高可靠的 Web 和反向代理服务器，而且支持热部署，几乎可以做到 7 * 24 小时不间断运行，即使运行几个月，也不需要重新启动，还能在不间断服务的情况下，对软件版本进行热更新。性能是 Nginx 最重要的考量，其占用内存少、并发能力强、能支持高达 5w 个并发连接数，最重要的是，Nginx 是免费的并可以商业化，配置使用也比较简单。&lt;/p&gt;&lt;h3 id=&quot;nginx-重要的使用场景&quot;&gt;&lt;a href=&quot;#nginx-%E9%87%8D%E8%A6%81%E7%9A%84%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF&quot; aria-label=&quot;nginx 重要的使用场景 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;Nginx 重要的使用场景&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;静态资源服务，通过本地文件系统提供服务；&lt;/li&gt;&lt;li&gt;反向代理服务，延伸出包括缓存、负载均衡等；&lt;/li&gt;&lt;li&gt;API 服务，OpenResty ；&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;nginx-如何工作&quot;&gt;&lt;a href=&quot;#nginx-%E5%A6%82%E4%BD%95%E5%B7%A5%E4%BD%9C&quot; aria-label=&quot;nginx 如何工作 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;Nginx 如何工作？&lt;/h3&gt;&lt;p&gt;Nginx 旨在提供低内存使用率和高并发性，可以在大多数 Unix Linux OS 上编译运行，并有 Windows 移植版。Nginx 没有为每个 web 请求创建新的进程，而是使用异步、事件驱动的方法，其中请求在单个线程中处理。&lt;/p&gt;&lt;p&gt;使用 Nginx，一个主进程可以控制多个工作进程。主进程维护工作进程，而工作进程执行实际处理。因为 Nginx 是异步的，所以每个请求都可以由工作线程并发执行，而不会阻塞其他请求。Nginx 中的一些常见功能包括：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;使用缓存反向代理；&lt;/li&gt;&lt;li&gt;IPv6 协议；&lt;/li&gt;&lt;li&gt;负载平衡；&lt;/li&gt;&lt;li&gt;通过缓存支持 FastCGI；&lt;/li&gt;&lt;li&gt;WebSockets（网络套接字）；&lt;/li&gt;&lt;li&gt;处理静态文件、索引文件和自动索引；&lt;/li&gt;&lt;li&gt;带有 SNI 的 TLS/SSL；&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;如何检查网站是否运行于-nginx&quot;&gt;&lt;a href=&quot;#%E5%A6%82%E4%BD%95%E6%A3%80%E6%9F%A5%E7%BD%91%E7%AB%99%E6%98%AF%E5%90%A6%E8%BF%90%E8%A1%8C%E4%BA%8E-nginx&quot; aria-label=&quot;如何检查网站是否运行于 nginx permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;如何检查网站是否运行于 Nginx？&lt;/h3&gt;&lt;p&gt;在大多数网站上，您只需检查服务器 HTTP 头，看看它是显示 Nginx 还是 Apache。您可以通过在 Chrome Devtools 中启动网络选项卡来查看 HTTP 头。或者可以在 Pingdom 或 GTmetrix 之类的工具中检查标题。&lt;/p&gt;&lt;p&gt;然而，HTTP 头可能并不总是显示底层 web 服务器。例如，如果您的 WordPress 站点位于诸如 Cloudflare 之类的代理服务后面，那么服务器 HTTP 头将改为 cloudflarea。&lt;/p&gt;&lt;h3 id=&quot;nginx-现状与未来&quot;&gt;&lt;a href=&quot;#nginx-%E7%8E%B0%E7%8A%B6%E4%B8%8E%E6%9C%AA%E6%9D%A5&quot; aria-label=&quot;nginx 现状与未来 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;Nginx 现状与未来&lt;/h3&gt;&lt;p&gt;Nginx 是互联网上最受欢迎的开源 Web 服务器之一，它不仅提供了用于开发和交付的一整套应用技术，还是应用交付领域的开源领导者。Netcraft 公司 2019 年 7 月的统计数据表明，Nginx 为全球最繁忙网站中的 25.42% 提供了服务或代理，进一步扩大了其在主机域名领域的占有量，新增 5220 万个站点，总数达 4.4 亿个，市场占有率已经超过 Apache 4.89%。&lt;/p&gt;&lt;p&gt;2019 年 3 月，著名硬件负载均衡厂商 F5 宣布收购 Nginx，Nginx 成为 F5 的一部分。F5 表示，将加强对开源和 Nginx 应用平台的投资，致力于 Nginx 开源技术、开发人员和社区的发展，更大的投资将为开放源码计划注入新的活力，会主办更多的开放源码活动，并产生更多的开放源码内容。&lt;/p&gt;&lt;p&gt;得益于近几年云计算和微服务的快速发展，Nginx 因在其中发挥了自身优势而得到广泛应用，且有望在未来占有更多的市场份额。值得说明的是，包括 &lt;a href=&quot;https://nicelinks.site/&quot;&gt;倾城之链&lt;/a&gt; 在内的多个网站，均通过 Nginx 部署；如果您也有部署 Web 网站或 API 服务，Nginx 是笔者所选推荐；当然，它完全可以跟 &lt;a href=&quot;https://nicelinks.site/post/5b7036890f8719053c094d68&quot;&gt;Docker&lt;/a&gt; 、 &lt;a href=&quot;https://nicelinks.site/post/5b2cad0a34c03342fda0f37e&quot;&gt;Kubernetes&lt;/a&gt; 等产品，配合起来共同使用。&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/6339a6aa35a9c117dacf2363&quot;&gt;倾城之链 - Nginx - An HTTP and reverse proxy server&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/%E7%94%B5%E5%BD%B1&quot;&gt;&lt;code&gt;电影&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E5%89%AA%E8%BE%91&quot;&gt;&lt;code&gt;剪辑&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E6%90%9C%E7%B4%A2&quot;&gt;&lt;code&gt;搜索&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;YARN，Find Clips in Fave Movies, TV, &amp;amp; Music&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/getyarn.io.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 - YARN   | Search clips by quote&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/redirect?url=https://getyarn.io/&quot;&gt;YARN&lt;/a&gt; ，一个台词搜索网站（英文），它支持按&lt;code&gt;单词&lt;/code&gt;或&lt;code&gt;短语&lt;/code&gt;搜索电视、电影和音乐片段或剪辑。有尝试搜索：“Jon snow, you know nothing”，将会得到相关电视剧（Game of Thrones）片段（很短，仅台词相关部分，通常 2s 左右）；您知道实际台词为：“You know nothing, Jon Snow.”，可以看出 yarn 支持模糊搜索。此外，&lt;code&gt;yarn&lt;/code&gt; 支持对搜索结果进行各种操作，诸如：评价、标记喜欢、分享、生成 GIF、MAKE MEME（迷因：&quot;派生视频&quot;/&quot;表情包&quot;）。&lt;/p&gt;&lt;p&gt;YARN 在其关于页面谈到：他们一直在研究许多搜索、提取和分析视频内容的技术。Yarn 是他们第一款使用娱乐内容的产品，目前正在重新调整输出的用途，以便快速交流。请继续关注更复杂的搜索技术。&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/6339791035a9c117dacf21ad&quot;&gt;倾城之链 - YARN | Search clips by quote&lt;/a&gt;&lt;/p&gt;&lt;p&gt;对倾城之链感兴趣的朋友，可通过 Web，小程序，快应用等渠道进行访问(后续将支持更多，如 VsCode 插件，Chrome 扩展等)。您有任何问题，欢迎随时向我们反馈（您可以通过官网反馈渠道，或添加如下客服微信），🤲 。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://image.nicelinks.site/%E5%80%BE%E5%9F%8E%E4%B9%8B%E9%93%BE-%E5%BE%AE%E4%BF%A1-mini.jpeg&quot; alt=&quot;倾城之链 - 客服微信&quot;/&gt;&lt;/p&gt;&lt;h2 id=&quot;本期文末寄语&quot;&gt;&lt;a href=&quot;#%E6%9C%AC%E6%9C%9F%E6%96%87%E6%9C%AB%E5%AF%84%E8%AF%AD&quot; aria-label=&quot;本期文末寄语 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;本期文末寄语&lt;/h2&gt;&lt;p&gt;“一切公众话语日渐以娱乐的方式出现，并成为一种文化精神。我们的政治、宗教、新闻、体育、教育和商业都心甘情愿地成为娱乐的附庸，毫无怨言，甚至无声无息，其结果是我们成了一个娱乐至死的物种。”──尼尔・波兹曼（美国；媒体文化研究者、批评家）《娱乐至死》&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://nicelinks.site/?utm_source=weekly&quot;&gt;倾城之链&lt;/a&gt;作为一个开放平台，旨在云集全球&lt;strong&gt;优秀网站&lt;/strong&gt;，探索互联网中更广阔的世界；在这里，你可以轻松发现、学习、分享更多有用或有趣的事物。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://image.nicelinks.site/nicelinks-miniprogram-code.jpeg?imageView2/1/w/250/h/250/interlace/1/ignore-error/1&quot; alt=&quot;小程序码 - 倾城之链&quot;/&gt;&lt;/p&gt;&lt;h2 id=&quot;您可能感兴趣的文章&quot;&gt;&lt;a href=&quot;#%E6%82%A8%E5%8F%AF%E8%83%BD%E6%84%9F%E5%85%B4%E8%B6%A3%E7%9A%84%E6%96%87%E7%AB%A0&quot; aria-label=&quot;您可能感兴趣的文章 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;您可能感兴趣的文章&lt;/h2&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>c8d11cd673d74aef3f2241fee391ca60</guid>
<title>超实用！整理了 34 个 Python 自动化办公库</title>
<link>https://toutiao.io/k/5wihja2</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;profile_inner&quot;&gt;
                  &lt;strong class=&quot;profile_nickname&quot;&gt;Python数据之道&lt;/strong&gt;
                  &lt;img class=&quot;profile_avatar&quot; id=&quot;js_profile_qrcode_img&quot; src=&quot;&quot; alt=&quot;&quot;/&gt;

                  &lt;p class=&quot;profile_meta&quot;&gt;
                  &lt;label class=&quot;profile_meta_label&quot;&gt;Weixin ID&lt;/label&gt;
                  &lt;span class=&quot;profile_meta_value&quot;&gt;PyDataLab&lt;/span&gt;
                  &lt;/p&gt;

                  &lt;p class=&quot;profile_meta&quot;&gt;
                  &lt;label class=&quot;profile_meta_label&quot;&gt;About Feature&lt;/label&gt;
                  &lt;span class=&quot;profile_meta_value&quot;&gt;点击领取《Python知识手册》高清电子版，回复数字 “600” 获取。「Python数据之道」秉承“让数据更有价值”的理念​，聚焦于 Python 数据分析、数据可视化、AI、机器学习、深度学习等领域。&lt;/span&gt;
                  &lt;/p&gt;
                &lt;/div&gt;
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>174eec09600e23de5114b4324878e0aa</guid>
<title>SPIFFE/SPIRE 从入门到入门</title>
<link>https://toutiao.io/k/lz85uaf</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                           autoTypeSetting24psection&amp;#10;                          &quot; id=&quot;js_content&quot;&gt;&lt;h2&gt;前言&lt;/h2&gt;&lt;p&gt;大概很多人和我一样，是从 Istio 那里听说 SPIFFE（读音 Spiffy [ˈspɪfi]） 的，Istio 中用 SPIFFE 方式为微服务提供身份。SPIFFE 全称为 Secure Production Identity Framework For Every one，顾名思义，这是一个解决身份问题的框架；而 SPIRE 则是 SPIFFE 的一个实现，全称为 SPIFFE Runtime Environment。&lt;/p&gt;&lt;p&gt;一个“我是谁”的问题，真的需要大动干戈？甚至能养活两个项目：SPIFFE 和 Spire 这对双子星项目，2018 年以 Sandbox 项目身份加入 CNCF，2020 年进入孵化状态，2022 年毕业——是的不但养活了，甚至还毕业了。&lt;/p&gt;&lt;p&gt;官方出了一本小册子，叫做《Solving The Bottom Turtle —— a SPIFFE Way to Establish Trust in Your Infrastructure via Universal Identity》，内容如副标题所说——用 SPIFFE 的方式在基础设施中，利用统一身份构建信任关系。&lt;/p&gt;&lt;p&gt;这里提到的最下面的乌龟，大意是说，身份问题是一个值得深入挖掘的基石技术，相关的传说可以查看一下机壳的文章：《世界巨龟神话原型：如果世界是一只乌龟&lt;br/&gt;》。&lt;/p&gt;&lt;p&gt;业务和组织之间的关系，往往就代表着人与应用之间、应用与应用之间的交互。大量的微服务架构应用，用水平伸缩、快速迭代的方式在复杂多变的容器、公有云等基础设施上运行，而安全以及合规的要求则日益提高。这种情况下，访问控制的必要性就逐步凸显出来。访问控制的实现，就是乌龟叠叠乐的效果：&lt;/p&gt;&lt;p&gt;要打破死循环，需要一种短生命周期的（易于轮转且不易攻破）、自动化的解决方案。方案中需要有一个可信的根，在这个基础之上来构建软件的身份，而这个身份则成为认证和授权能力的基石。为了防止无穷无尽的下钻过程，工作负载应该能够不借助任何凭据来获得这个身份凭据。&lt;/p&gt;&lt;p&gt;很多厂商在这个方向上做了各种尝试，例如 Google 的 Application Layer Transplort Security（ALTS）、Netflix 的 Marathon 等。&lt;/p&gt;&lt;p&gt;Kubernetes 创始工程师 Joe Beda 在 2016 GlueCon 上发表了题为 Who’s Calling?&lt;br/&gt;Production Identity in a Microservices World 的演讲，其中展示了方案的三个要点：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;无需凭据，通过内核调用来生成 0 号机密&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;使用大多数软件都支持的 x.509&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;解耦网络位置和认证&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;专家们在 Netflix 进行了 SPIFFE 草案的研讨。很多成员都已经实现并持续改进工作负载认证的方案，他们发现各自的解决方案都有或多或少的相似性，因此具备形成通用方案的可能性。&lt;/p&gt;&lt;p&gt;解决工作负载身份问题的最初目标是建立一个开放的规范和相应的生产实现。该框架需要在不同的实现和现成的软件之间提供互操作性，其核心是在一个不信任的环境中建立信任的根基，驱除隐性信任。最后，摆脱以网络为中心的身份，以实现灵活性和更好的扩展特性。&lt;/p&gt;&lt;h2&gt;SPIFF 的基本概念&lt;/h2&gt;&lt;p&gt;SPIFFE 由五个部分组成，分别是 SPIFFE ID、Workload API、SVID、SPIFFE Trust Bundle 以及 SPIFFE Federation。&lt;/p&gt;&lt;h3&gt;SPIFFE ID&lt;/h3&gt;&lt;p&gt;软件名称或身份的表达方式，一般使用信任域、服务标识组成的一个 URL，例如 Istio 中的 &lt;code&gt;spiffe://&amp;lt;trust-domain&amp;gt;/ns/&amp;lt;namespace&amp;gt;/sa/&amp;lt;service-account&amp;gt;&lt;/code&gt;&lt;/p&gt;&lt;h3&gt;SVID&lt;/h3&gt;&lt;p&gt;全称是 Software Verifiable Identify Document，一种加密的可验证的档案，用于证明工作负载的身份。用 CA 签署 SPIFFE 就产生了 SVID，SVID 有两种载体：&lt;/p&gt;&lt;h3&gt;Workload API&lt;/h3&gt;&lt;p&gt;一种简单的本地 API，服务可以&lt;strong&gt;无需认证&lt;/strong&gt;直接调用 API 来获得自己的身份、Trust Bundle 以及相关信息。&lt;/p&gt;&lt;h3&gt;Trust Bundle&lt;/h3&gt;&lt;p&gt;SPIFFE 的公钥组合&lt;/p&gt;&lt;h3&gt;SPIFFE 联邦&lt;/h3&gt;&lt;p&gt;一种简单的用于共享 SPIFFE Trust Bundle 的机制&lt;/p&gt;&lt;h2&gt;SPIFFE/SPIRE 和其它安全技术的关系&lt;/h2&gt;&lt;p&gt;SPIFFE/SPIRE 的能力并不新鲜，毕竟每个分布式系统都有认证的需求，Web PKI、Kerberos/Active Directory、OAuth、敏感信息存储以及服务网格等都和这一领域有着交集。&lt;/p&gt;&lt;p&gt;但现存的这些形式对于组织内部的服务认证并不合适。Web PKI 实现要求比较多，并且在典型的内部部署环境下也不够安全；Kerberos 需要一个一直在线的 Ticket 管理服务，并且缺乏证明能力；服务网格、机密管理器和叠加网络解决的都是服务身份问题中的一部分。SPIFFE 和 SPIRE 是目前唯一完整的服务身份方案。&lt;/p&gt;&lt;h3&gt;Web Public Key Infrastructure&lt;/h3&gt;&lt;p&gt;Web PKI 广泛应用在从浏览器连接到安全网站的场景里。这种技术用 X.509 证书来向用户证明网站的身份。读者自然会想问——直接用这种技术进行服务认证不就行了吗？&lt;/p&gt;&lt;p&gt;传统的 Web PKI 场景下，证书的签发和更新是手工的，难以适应现代的动态伸缩环境。虽然近年来发展出了自动化的签发和刷新流程（Domain Validation/DV），然而 DV 非常依赖于 IP 和域名规划，而且客户端证书也无法使用 DV 的自动化流程。另外，DV 流程里用于响应 Token 请求的服务是独立的，有可能通过 2 层网络进行仿冒。&lt;/p&gt;&lt;h3&gt;AD 和 Kerberos&lt;/h3&gt;&lt;p&gt;Kerberos 中的核心凭据被称为 &lt;code&gt;ticket&lt;/code&gt;，Ticket 是一个客户端访问一个资源的凭据，客户端通过调用 Ticket Granting Service（TGS）来获取 Ticket。每个客户端在访问资源需要新的 Ticket 的时候都需要访问 TGS，因此需要 TGS 一直在线。所有服务都要信任 TGS。服务注册到 TGS 的时候，需要把密钥物料（例如公钥或者对称密钥）托管到 TGS，TGS 用来为服务创建 Ticket。要对物料进行轮转，需要在服务和 TGS 之间进行协调。服务自己必须接受前任物料签发的过期 Ticket。&lt;/p&gt;&lt;p&gt;而在 SPIRE 里，客户端和资源都要访问 SPIRE 服务器一次，获取 SVID，然后在信任域范围内就可以凭借这些 SVID 进行互信了，无需再次调用 SPIRE Server。SPIRE 的设计避免了大量对 SPIRE Server 进行访问的成本。SPIRE 这样的依赖 PKI 的认证机制，密钥物料已经解耦，所以轮转过程也大为简化。&lt;/p&gt;&lt;p&gt;另外 Kerberos 协议的签署过程和主机名紧密相关，多服务共享主机或集群时，这个情况就会非常复杂；SPIRE 则可以轻松地为工作负载和集群支持多个 SVID。同一个 SVID 也能够授予给多个工作负载。&lt;/p&gt;&lt;h3&gt;OAuth 和 OpenID&lt;/h3&gt;&lt;p&gt;OAuth 是一种用于委托的访问方式，而不一定需要自己完成认证过程。OIDC 的第一目标就是让自然人使用一个第三方网站作为自己的身份，来访问目标网站。这个第三方网站必须实现自己的认证方法，从而以本地的认证关系为用户向其他网站提供证明。&lt;/p&gt;&lt;p&gt;OAuth 是为人机交互设计的，登录过程中需要进行浏览器的交互；2.0 中加入了对非人实体的支持，通常是用 &lt;code&gt;Service Account&lt;/code&gt; 的形式实现。工作负载要拿到 OAuth 凭据来访问远程系统，必须向 OAuth 提供密码或者 Token 等来进行认证。工作负载需要自行维护各自的凭据，从而获得粗粒度的授权能力，这一过程要求每个工作负载都注册到 OAuth 供应侧，因此起管理难度和负载会迅速增加。&lt;/p&gt;&lt;p&gt;OIDC 并没有解决身份的基本问题，实际上是依赖于预制的身份的。相对来说，SPIRE 不需要长寿的初始凭据，以 SPIRE 作为 OIDC 的身份供应者能够有效地提高安全性——应用无需自行准备身份凭据，只需要用 SPIFFE ID 按需认证即可。&lt;/p&gt;&lt;h3&gt;敏感信息管理&lt;/h3&gt;&lt;p&gt;这类工具通常要负责对敏感信息进行控制、审计和保管，其操作方包括了管理员和一些应用。有些工具还会提供加解密等功能。其加密存储功能通常被称为 &lt;code&gt;vault&lt;/code&gt;。应用必须进行认证之后才能访问 Vault 中的数据。这种系统面临的最大挑战通常就是自身的访问控制，通常称为零号凭据。使用 SPIFFE 作为认证机制能更好地解决这一问题。&lt;/p&gt;&lt;h3&gt;服务网格&lt;/h3&gt;&lt;p&gt;所有的主流服务网格产品都提供了服务认证功能。SPIFFE 的身份提供能力正适用于这种场景，Istio 和 Consule 都可以使用 SPIFFE 提供身份解决方案。&lt;/p&gt;&lt;p&gt;Istio 使用 SPIFFE 用于识别节点，但是他的身份模型耦合在 Kubernetes 上，IBM 认为 Istio 的机制是不足的，因此提供了 SPIRE 和 Istio 的集成方案&lt;/p&gt;&lt;h3&gt;叠加网络&lt;/h3&gt;&lt;p&gt;叠加网络跨越多个平台模拟了一个统一网络。与服务网格不同的是，叠加网络使用 IP 地址和路由表这样的标准网络概念，来连接服务。最新的覆盖网络开始提供认证能力。在服务连接之前仍然无法验明正身。通常情况下，这种机制都依赖于一个预存证书。因此 SPIFFE 也很适合为叠加网络节点提供证书。&lt;/p&gt;&lt;h2&gt;SPIRE 简介&lt;/h2&gt;&lt;p&gt;综合前面对 SPIFFE 的讲述，可以知道，这东西的核心能力：&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;工作负载（业务应用）可以通过一种本地的、无需认证的方式获取到一个 SPIFFE ID&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;SPIFFE ID 可以签署成为 SVID，SVID 用 X.509 或者 JWT 的形式进行表达&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;不同的工作负载之间，共享 Trust Bundle&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;利用 Trust Bundle 可以鉴别 SVID 的真伪，从而识别出 SPIFFE ID&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;利用可信的 SVID 所代表的 SPIFFE ID，就可以进行后续的访问控制了。&lt;/p&gt;&lt;p&gt;SPIRE 是如何解决上述问题的？看看官方网站的架构图：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;620&quot; data-backw=&quot;578&quot; data-ratio=&quot;1.0719063545150502&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mbeSBYZpODwgR3picdqnsuF14BicpZxxmSJ4c5Kqibxxo3Moy41y5nuExEEhbtd3kHdgE8vvWpRwoZMHPwZ62iclXg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;598&quot;/&gt;&lt;/p&gt;&lt;p&gt;SPIRE 由服务器和 Agent 两部分组成：&lt;/p&gt;&lt;p&gt;这说起来还是非常抽象，为了实现 SPIFFE 规范，SPIRE 引入了一系列自己的概念。&lt;/p&gt;&lt;h3&gt;Attestation&lt;/h3&gt;&lt;p&gt;SPIRE 中的 Attestation（证实）过程，就是求证工作负载身份的过程。SPIRE 的证实工作分为两个步骤：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;先验证节点：保障工作负载所在的节点的身份的有效性&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;再验证工作负载：保证节点上的工作负载是有效的&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;Node Attestation&lt;/h3&gt;&lt;p&gt;节点的证实过程是在 Agent 启动过程中完成的，SPIRE 要求 Agent 在第一次连接到服务器的时候能够验明正身。在节点证实过程中，Agent 和服务器协作对 Agent 所在的节点进行校验。这个过程是通过 SPIRE 中被称为 Node Attestor 的插件完成的，这种插件的基本做法就是对节点以及所在环境进行查询和比对，来验证节点身份的有效性。&lt;/p&gt;&lt;p&gt;节点证实成功之后，Agent 就收到了一个 SPIFFE ID，Agent 会把这个 ID 作为父 ID，发放给运行在这个节点上的工作负载。&lt;/p&gt;&lt;p&gt;几种常见的节点身份的证据：&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;云平台分发给节点的身份文档（例如 AWS 的 Instance Identity Document）&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;节点上 HSM 或者 TPM 硬件的私钥&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;安装 Agent 时候的手工验证过程&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;多节点系统中提供的身份凭据，例如 Kubernetes 的 SA Token&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;节点证实过程会返回一组属性（Selector）给服务器，这些属性能够标识出特定的节点，另外还会有 Node Resolver 来获取节点的其他属性，这些属性一起，构成了 SPIFFE ID 的附加属性。&lt;/p&gt;&lt;p&gt;例如 AWS 节点的证实过程：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;110&quot; data-backw=&quot;125&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;125&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;22&quot; data-ratio=&quot;0.8823529411764706&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mbeSBYZpODwgR3picdqnsuF14BicpZxxmSDxqJbueH2XfWspAvL9KFh9a8D45ZyqvkuMKia1RvH7kVvoiaMic64cjiaQ/640?wx_fmt=png&quot; data-w=&quot;408&quot;/&gt;&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;Agent 上的 AWS Node Attestor 向 AWS 查询节点的身份，发送给 Agent&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Agent 把身份的证据发送给服务器，服务器把信息发送给 AWS Node Attestor（的服务侧）&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;AWS Node Attestor 的服务端独立或者调用 AWS API 对前一个步骤获取到的信息进行验证。Node Attestor 还会为 Agent 创建一个 SPIFFE ID，并把 SPIFFE ID 和 Selecor 传给服务器进程&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Server 返回一个 Agent 节点的 SVID&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;SPIRE 支持多种环境的 Node Attestor，例如：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;AWS 的 EC2 实例（EC2 Instance Identity Document）&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Azure 虚拟机（Azure Managed Service Identities）&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;GCE Instance（GCE Instance Identity Token）&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Kubernetes 节点（Kubernetes Service Account Token）&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;对于无法直接认证节点的平台，SPIRE 提供了如下措施：&lt;/p&gt;&lt;h3&gt;Workload Attestation&lt;/h3&gt;&lt;p&gt;工作负载的证实过程要回答的问题是：这个进程是谁？Agent 和 Server 都参与到了节点证实过程里；而工作负载的证实过程是由 Agent 完成的。&lt;/p&gt;&lt;p&gt;下图展示了工作负载证明的过程：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;123&quot; data-backw=&quot;151&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;151&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;22&quot; data-ratio=&quot;0.8171021377672208&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mbeSBYZpODwgR3picdqnsuF14BicpZxxmSprtEd60dPVic38wGXLNrdOTnjqtzoBbfAGT2VTgbny2d0vVOiaj50ZkA/640?wx_fmt=png&quot; data-w=&quot;421&quot;/&gt;&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;工作负载调用 Workload API 申请 SVID。在 Unix 系统中，这个 API 表现为一个 Unix Domain Socket&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Agent 调用节点的内核来认证调用者的进程 ID。然后回调用工作负载的证实插件，把进程号提供给他们&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;利用进程 ID 查询工作负载的额外信息，可能会和 Kubelet 等同节点服务进行交互&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Attestor 把进程信息返回给 Agent&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Agent 把属性和注册信息进行比对，返回合适的 SVID 给工作负载。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;工作负载的证实机制目前支持 Unix、Kubernetes 和 Docker。&lt;/p&gt;&lt;h3&gt;SVID 的生命周期&lt;/h3&gt;&lt;p&gt;这一节内容讲述了 SPIRE 签发工作负载身份的过程。这个过程从 Agent 在节点上启动开始，持续到工作负载收到有效的 X.509 SVID 为止（注意，JWT 和 X.509 的处理方式是不同的）。下面以 AWS EC2 为例。&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;SPIRE Server 启动&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;除非用户配置了上游 CA 插件，Server 会生成一个自签名证书；Server 会使用这个证书来给信任域内所有的工作负载签发 SVID&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;如果这是首次启动，Server 会自动生成 Trust Bundle，这些内容会被存储在 SQL 数据库中&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Server 开启注册 API，允许注册工作负载&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;SPIRE Agent 在运行了工作负载的节点上启动&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Agent 执行节点证实工作，向 Server 证明节点的身份。例如在 AWS EC2 实例上，通常会把 AWS Instance Identity Document 提交给服务器&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Agent 把身份的证据用 TLS 提交给 Server。TLS 的认证通过 Agent 的 Bootstrap Bundle 来完成&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Server 调用 AWS API 对这些证据进行校验&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;AWS 确认文档的有效性&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Server 对节点进行解析，验证 Agent 节点的附加属性，并更新注册数据。例如节点使用的是 Azure Managed Service Identity（MSI）。Resolver 会根据 SPIFFE ID 解析 Tenat ID 以及 Principal ID，并用多种 Azure Service 获取额外信息&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Server 给 Agent 签发一个 SVID，证实 Agent 的身份&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Agent 用它的 SVID 以及自己的 TLS 客户端证书联系 Server，获得它被授权的注册内容&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Server 用 Agent 的 SVID 验证 Agent 的身份。Agent 接下来会完成 mTLS 握手，使用 Bootstarap Bundle 完成认证。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Server 从数据库中抓取所有（该 Agent 下的）认证的注册条目，发送给 Agent&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Agent 发送工作负载的 CSR 给 Server，Server 会签署和返回 Workload SVID 给客户端，客户端进行缓存&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;启动过程完成，Agent 开始监听 Workload API 的 Socket&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Workload 调用调用 Workload API，申请 SVID&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Agent 通过调用 Workload Attestor 来初始化 Workload 的证实过程，证实过程的输入以工作负载的进程 ID 启动&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Attestor 使用内核和用户空间的调用，发现工作负载的附加信息&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Attestor 把发现的信息返回给 Agent&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Agent 通过比对缓存中的注册信息和 Workload 上报的信息，来决定是否把缓存中的 SVID 返回给工作负载。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h2&gt;SPIRE Quick Start&lt;/h2&gt;&lt;blockquote&gt;&lt;p&gt;是的完全来自官网&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Release 页面没有提供 ARM 架构的发布包，差评，只好自己构建：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ git clone --single-branch --branch v1.4.0 https://github.com/spiffe/spire.git&lt;br/&gt;$ cd spire&lt;br/&gt;$ go build ./cmd/spire-server &lt;br/&gt;$ go build ./cmd/spire-agent&lt;br/&gt;...&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后用源码包里面的默认配置启动服务器：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ bin/spire-server run -config conf/server/server.conf &amp;amp;&lt;br/&gt;...&lt;br/&gt;INFO[0000] Starting TCP server   address=&quot;127.0.0.1:8081&quot; subsystem_name=endpoints&lt;br/&gt;INFO[0000] Starting UDS server   address=/tmp/spire-registration.sock subsystem_name=endpoints&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;做一下健康检查：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ bin/spire-server healthcheck                                         &lt;br/&gt;Server is healthy.&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;前面提过用 Bootstrap Token 证实节点身份的方法，这里生成一个 Token：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ bin/spire-server token generate -spiffeID spiffe://example.org/myagent&lt;br/&gt;Token: ff19d99e-e3f2-446f-86eb-cb37fcbd6574&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;下面启动一个 Agent，并进行健康检查：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ bin/spire-agent run -config conf/agent/agent.conf -joinToken &amp;lt;token&amp;gt;&lt;br/&gt;$ bin/spire-agent healthcheck&lt;br/&gt;Agent is healthy.&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;为了让 SPIRE 能识别工作负载，必须把工作负载用注册项的方式注册到 SPIRE 服务器上。注册过程告知 SPIRE 认证工作负载的方法，以及工作负载的 SPIFFE ID。&lt;/p&gt;&lt;p&gt;下面的命令用当前用户的 UID 创建了一个注册项：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ bin/spire-server entry create \&lt;br/&gt;    -parentID spiffe://example.org/myagent \&lt;br/&gt;    -spiffeID spiffe://example.org/myservice \&lt;br/&gt;    -selector unix:uid:$(id -u)&lt;br/&gt;Entry ID         : 2c0325c5-e5b4-433a-a675-059cbf19f8aa&lt;br/&gt;SPIFFE ID        : spiffe://example.org/myservice&lt;br/&gt;Parent ID        : spiffe://example.org/myagent&lt;br/&gt;Revision         : 0&lt;br/&gt;TTL              : default&lt;br/&gt;Selector         : unix:uid:501&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;此时可以在服务侧列出当前的注册条目：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ bin/spire-server entry show&lt;br/&gt;Found 2 entries&lt;br/&gt;Entry ID         : 521fd101-031a-42bf-8190-696bd315e2d3&lt;br/&gt;SPIFFE ID        : spiffe://example.org/myagent&lt;br/&gt;Parent ID        : spiffe://example.org/spire/agent/join_token/ff19d99e-e3f2-446f-86eb-cb37fcbd6574&lt;br/&gt;Revision         : 0&lt;br/&gt;TTL              : default&lt;br/&gt;Selector         : spiffe_id:spiffe://example.org/spire/agent/join_token/ff19d99e-e3f2-446f-86eb-cb37fcbd6574&lt;br/&gt;&lt;br/&gt;Entry ID         : 2c0325c5-e5b4-433a-a675-059cbf19f8aa&lt;br/&gt;SPIFFE ID        : spiffe://example.org/myservice&lt;br/&gt;Parent ID        : spiffe://example.org/myagent&lt;br/&gt;Revision         : 0&lt;br/&gt;TTL              : default&lt;br/&gt;Selector         : unix:uid:501&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这个注册条目的 &lt;code&gt;Selector&lt;/code&gt; 字段表示用 uid 501 这个条件可以给出 &lt;code&gt;spiffe://example.org/myservice&lt;/code&gt; 这个 SPIFFE ID。&lt;/p&gt;&lt;p&gt;这里使用的是 unix Workload Attestor，SPIRE 通过插件的方式支持多种 Node Attestor 和 Workload Attestor，例如 SSH、Kubernetes、AWS、Docker 等等。上面的例子中使用了 &lt;code&gt;unix&lt;/code&gt; Attestor 除了这个 uid 之外，还能够支持执行路径、二进制哈希等的 &lt;code&gt;Selector&lt;/code&gt;&lt;/p&gt;&lt;p&gt;接下来模仿进程，从 Agent 获取一个 x509-SVID。x509-SVID 可以用于不同工作负载之间的访问控制，下面的命令把 SVID 写入 &lt;code&gt;/tmp&lt;/code&gt;：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ bin/spire-agent api fetch x509 -write /tmp/&lt;br/&gt;Received 1 svid after 253.934417ms&lt;br/&gt;&lt;br/&gt;SPIFFE ID:              spiffe://example.org/myservice&lt;br/&gt;SVID Valid After:       2022-10-05 14:45:30 +0000 UTC&lt;br/&gt;SVID Valid Until:       2022-10-05 15:45:40 +0000 UTC&lt;br/&gt;Intermediate #1 Valid After:    2022-10-05 09:01:24 +0000 UTC&lt;br/&gt;Intermediate #1 Valid Until:    2022-10-06 09:01:34 +0000 UTC&lt;br/&gt;CA #1 Valid After:      2018-05-13 19:33:47 +0000 UTC&lt;br/&gt;CA #1 Valid Until:      2023-05-12 19:33:47 +0000 UTC&lt;br/&gt;&lt;br/&gt;Writing SVID #0 to file /tmp/svid.0.pem.&lt;br/&gt;Writing key #0 to file /tmp/svid.0.key.&lt;br/&gt;Writing bundle #0 to file /tmp/bundle.0.pem.&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;看到生成了几个 &lt;code&gt;.pem&lt;/code&gt;、&lt;code&gt;.key&lt;/code&gt; 文件，查看几个文件的内容，会发现：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;bundle.0.pem&lt;/code&gt; 中是一个自签发的根证书：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;  ...&lt;br/&gt;  X509v3 Basic Constraints: critical&lt;br/&gt;      CA:TRUE&lt;br/&gt;  X509v3 Key Usage: critical&lt;br/&gt;      Certificate Sign, CRL Sign&lt;br/&gt;  X509v3 Subject Alternative Name:&lt;br/&gt;      URI:spiffe://local&lt;br/&gt;  ...&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;svid.0.pem&lt;/code&gt; 中包含了两个证书，其中一个是中间 CA，另一个是可用于服务侧和客户侧的身份证书&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;检查签发关系会发现是 &lt;code&gt;bundle.0.pem&lt;/code&gt; 签发了 &lt;code&gt;svid.0.pem&lt;/code&gt; 中的中间证书，中间证书签发了身份证书。&lt;/p&gt;&lt;p&gt;根据上面的过程大致可以推断出，Server 启动成功之后，Agent 首先自己通过某种方式获得了自己的“合法身份”（例如例子中使用的 Token）。Server 侧预制了若干策略（例如前面注册的 &lt;code&gt;uid=501&lt;/code&gt;），Agent 拿到这些策略之后，根据其“本地”的工作负载情况，符合 Selector 要求的内容，通过中间证书直接发放 SVID。&lt;/p&gt;&lt;h2&gt;小结&lt;/h2&gt;&lt;p&gt;零敲碎打的阅读了官网文档以及这篇 PDF 之后，对其中种种的严密思考深感折服，同时也感觉，对于缺乏零信任基础设施的组织来说，SPIFFE/SPIRE 是个不可多得的致敬目标，其中对于 Server、Agent、插件的职责划分和流程保障都非常值得借鉴（抄袭）。&lt;/p&gt;&lt;p&gt;然而仅凭这一个技术和产品要达成安全目标也是不现实的，就拿前面提到的 Node Attestor、Workload Attestor，很明显需要根据企业 IT 实际环境，进行插件的选择甚至开发；各种 Selector 的选用和具体实施过程，策略如何保障权威性和最小权限原则，CI/CD、不可变基础设施、配置漂移等问题，都有可能对 SPIFFE 证实过程的干扰甚至破坏；策略的制定过程似乎也是个充满挑战的过程。还好文档中对于联邦的设计、高可用部署、各种典型的集成方式都有相当细致的介绍，非常值得深入学习。&lt;/p&gt;&lt;/div&gt;

          
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>963e73d1254ee309fd0d414baac1c10e</guid>
<title>如何设计一个短链服务？</title>
<link>https://toutiao.io/k/37q95tr</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;weui-msg__text-area&quot;&gt;
                    &lt;p class=&quot;weui-msg__title warn&quot;&gt;The content has been deleted by the author.&lt;/p&gt;
            &lt;/div&gt;
            &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>b1471f2eb976627bb51cf96183fa7759</guid>
<title>面试官：你这数据库表设计的，真垃圾。。。</title>
<link>https://toutiao.io/k/0c7whvz</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                           autoTypeSetting24psection&amp;#10;                          &quot; id=&quot;js_content&quot;&gt;&lt;section class=&quot;channels_iframe_wrp&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;mpvideosnap class=&quot;js_uneditable custom_select_card channels_iframe videosnap_video_iframe&quot; data-pluginname=&quot;videosnap&quot; data-id=&quot;export/UzFfAgtgekIEAQAAAAAAXLA0amyJdQAAAAstQy6ubaLX4KHWvLEZgBPEraMIGyZBeIKCzNPgMIuNdd-EEaua4wK4KxYbK3TJ&quot; data-url=&quot;https://findermp.video.qq.com/251/20304/stodownload?encfilekey=S7s6ianIic0ia4PicKJSfB8EjyjpQibPUAXol7VEdrlib05TE5u2nXxXuJ1cFxybfsds7AAmY0Q1d1TMo4gCsCRFKuMUlXuHsbq5pKggviblk9H8KibPIs1Nibtj4Zg&amp;amp;adaptivelytrans=0&amp;amp;bizid=1023&amp;amp;dotrans=0&amp;amp;hy=SH&amp;amp;idx=1&amp;amp;m=&amp;amp;scene=0&amp;amp;token=AxricY7RBHdU3h7l2tENeIzq4kufia8V09ibGJ1HSOcgiaQ9o30QfsicCGEEN1FBqaqxBZkB50CTeMsc&quot; data-headimgurl=&quot;http://wx.qlogo.cn/finderhead/Q3auHgzwzM5nv7YHhmhvPsGGX04JCIgibK2x2Ru0TOY9HeZTGSIL1KQ/0&quot; data-username=&quot;v2_060000231003b20faec8c5e08a1fc3d5c807ec30b07756771265bc6b6234fb9e05062ae69ab4@finder&quot; data-nickname=&quot;儒猿IT&quot; data-desc=&quot;作为世界上最优秀的消息中间件之一，Kafka是如何对频繁网络通信进行性能优化的？#中间件#kafka@微信时刻 &quot; data-nonceid=&quot;5111233550797424032&quot; data-type=&quot;video&quot; data-width=&quot;1920&quot; data-height=&quot;1080&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;文章来源：https://juejin.cn/post/7147135702604447758&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-width=&quot;100%&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/3GHDOauYyUGbiaHXGx1ib5UxkKzSNtpMzY5tbbGdibG7icBSxlH783x1YTF0icAv8MWrmanB4u5qjyKfmYo1dDf7YbA/640?wx_fmt=gif&quot; data-w=&quot;100&quot; data-width=&quot;100%&quot; class=&quot;rich_pages wxw-img&quot;/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-width=&quot;100%&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p mpa-is-content=&quot;t&quot;&gt;前言&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;1.5454545454545454&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/gdxAJ6zQsUYfldc9KVnrcQSOpyXRZEVepgnN1Ykwcia3wuOHibVmnRkSUNjygD8GZMLUCuCgdjn0EF6VibajENJrQ/640?wx_fmt=png&quot; data-w=&quot;22&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;&lt;span&gt;作为后端开发，我们经常需要设计数据库表。整理了21个设计MySQL表的经验准则，分享给大家，大家看完一定会有帮助的。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.972972972972973&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Xuz7cCrSxHUr4F6rIJJmUyiaCTDRkk8vhJocsm8Boar8kRkaicGNLVaY5y2RWVy1h5sV9tfDvvjOYwTmHMnKsxQw/640?wx_fmt=png&quot; data-w=&quot;74&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;h2 data-id=&quot;heading-1&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/h2&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;blockquote mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;blockquote mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;span mpa-is-content=&quot;t&quot;&gt;1.命名规范&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;数据库表名、字段名、索引名等都需要命名规范，可读性高(一般要求用英文)，让别人一看命名，就知道这个字段表示什么意思。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;比如一个表的账号字段，&lt;strong&gt;反例如下&lt;/strong&gt;：&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-preserve=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;pre&gt;&lt;code&gt;acc_no,1_acc_no,zhanghao&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;正例：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-preserve=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;pre&gt;&lt;code&gt;account_no,account_number&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;/pre&gt;&lt;h2 data-id=&quot;heading-2&quot;&gt;&lt;br/&gt;&lt;/h2&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;blockquote mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;blockquote mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;span mpa-is-content=&quot;t&quot;&gt;2.选择合适的字段类型&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;设计表时，我们需要选择合适的字段类型，比如：&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;尽可能选择存储空间小的字段类型，就好像数字类型的，从&lt;/span&gt;&lt;code&gt;&lt;span&gt;tinyint、smallint、int、bigint&lt;/span&gt;&lt;/code&gt;&lt;span&gt;从左往右开始选择&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;小数类型如金额，则选择 &lt;/span&gt;&lt;code&gt;&lt;span&gt;decimal&lt;/span&gt;&lt;/code&gt;&lt;span&gt;，禁止使用 &lt;/span&gt;&lt;code&gt;&lt;span&gt;float&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 和 &lt;/span&gt;&lt;code&gt;&lt;span&gt;double&lt;/span&gt;&lt;/code&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;如果存储的字符串长度几乎相等，使用 &lt;/span&gt;&lt;code&gt;&lt;span&gt;char&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 定长字符串类型。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;&lt;span&gt;varchar&lt;/span&gt;&lt;/code&gt;&lt;span&gt;是可变长字符串，不预先分配存储空间，长度不要超过&lt;/span&gt;&lt;code&gt;&lt;span&gt;5000&lt;/span&gt;&lt;/code&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;如果存储的值太大，建议字段类型修改为&lt;/span&gt;&lt;code&gt;&lt;span&gt;text&lt;/span&gt;&lt;/code&gt;&lt;span&gt;，同时抽出单独一张表，用主键与之对应。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;同一表中，所有&lt;/span&gt;&lt;code&gt;&lt;span&gt;varchar&lt;/span&gt;&lt;/code&gt;&lt;span&gt;字段的长度加起来，不能大于&lt;/span&gt;&lt;code&gt;&lt;span&gt;65535&lt;/span&gt;&lt;/code&gt;&lt;span&gt;. 如果有这样的需求，请使用&lt;/span&gt;&lt;code&gt;&lt;span&gt;TEXT/LONGTEXT &lt;/span&gt;&lt;/code&gt;&lt;span&gt;类型。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;blockquote mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;blockquote mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;span mpa-is-content=&quot;t&quot;&gt;3. 主键设计要合理&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;主键设计的话，最好不要与业务逻辑有所关联。有些业务上的字段，比如身份证，虽然是唯一的，一些开发者喜欢用它来做主键，但是不是很建议哈。主键最好是毫无意义的一串独立不重复的数字，比如&lt;/span&gt;&lt;code&gt;&lt;span&gt;UUID&lt;/span&gt;&lt;/code&gt;&lt;span&gt;，又或者&lt;/span&gt;&lt;code&gt;&lt;span&gt;Auto_increment&lt;/span&gt;&lt;/code&gt;&lt;span&gt;自增的主键，或者是雪花算法生成的主键等等;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;blockquote mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;blockquote mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;span mpa-is-content=&quot;t&quot;&gt;4. 选择合适的字段长度&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;先问大家一个问题，大家知道数据库字段长度表示&lt;strong&gt;字符长度&lt;/strong&gt;还是&lt;strong&gt;字节长度&lt;/strong&gt;嘛？&lt;/span&gt;&lt;/section&gt;&lt;blockquote&gt;&lt;section&gt;&lt;span&gt;其实在mysql中，&lt;/span&gt;&lt;code&gt;&lt;span&gt;varchar&lt;/span&gt;&lt;/code&gt;&lt;span&gt;和&lt;/span&gt;&lt;code&gt;&lt;span&gt;char&lt;/span&gt;&lt;/code&gt;&lt;span&gt;类型表示字符长度，而其他类型表示的长度都表示字节长度。比如&lt;/span&gt;&lt;code&gt;&lt;span&gt;char(10)&lt;/span&gt;&lt;/code&gt;&lt;span&gt;表示字符长度是10，而&lt;/span&gt;&lt;code&gt;&lt;span&gt;bigint（4）&lt;/span&gt;&lt;/code&gt;&lt;span&gt;表示显示长度是&lt;/span&gt;&lt;code&gt;&lt;span&gt;4&lt;/span&gt;&lt;/code&gt;&lt;span&gt;个字节，但是因为bigint实际长度是&lt;/span&gt;&lt;code&gt;&lt;span&gt;8&lt;/span&gt;&lt;/code&gt;&lt;span&gt;个字节，所以bigint（4）的实际长度就是8个字节。&lt;/span&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;section&gt;&lt;span&gt;我们在设计表的时候，需要充分考虑一个字段的长度，比如一个用户名字段（它的长度5~20个字符），你觉得应该设置多长呢？可以考虑设置为 &lt;/span&gt;&lt;code&gt;&lt;span&gt;username varchar（32）&lt;/span&gt;&lt;/code&gt;&lt;span&gt;。字段长度一般设置为2的幂哈（也就是&lt;/span&gt;&lt;code&gt;&lt;span&gt;2的n&lt;/span&gt;&lt;/code&gt;&lt;span&gt;次方）。’;&lt;/span&gt;&lt;/section&gt;&lt;h2 data-id=&quot;heading-5&quot;&gt;&lt;br/&gt;&lt;/h2&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;blockquote mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;blockquote mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;span mpa-is-content=&quot;t&quot;&gt;&lt;strong&gt;5，优先考虑逻辑删除，而不是物理删除&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;什么是物理删除？什么是逻辑删除？&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;物理删除：把数据从硬盘中删除，可释放存储空间&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;逻辑删除：给数据添加一个字段，比如&lt;/span&gt;&lt;code&gt;&lt;span&gt;is_deleted&lt;/span&gt;&lt;/code&gt;&lt;span&gt;，以标记该数据已经逻辑删除。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;span&gt;物理删除就是执行&lt;/span&gt;&lt;code&gt;&lt;span&gt;delete&lt;/span&gt;&lt;/code&gt;&lt;span&gt;语句，如删除&lt;/span&gt;&lt;code&gt;&lt;span&gt;account_no =‘666’&lt;/span&gt;&lt;/code&gt;&lt;span&gt;的账户信息SQL如下：&lt;/span&gt;&lt;/section&gt;&lt;pre&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-preserve=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;delete&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; account_info_tab whereaccount_no =‘&lt;span&gt;666&lt;/span&gt;’;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;/pre&gt;&lt;section&gt;&lt;span&gt;逻辑删除呢，就是这样：&lt;/span&gt;&lt;/section&gt;&lt;pre&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-preserve=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;update&lt;/span&gt; account_info_tab &lt;span&gt;set&lt;/span&gt; is_deleted = &lt;span&gt;1&lt;/span&gt; &lt;span&gt;where&lt;/span&gt; account_no =‘&lt;span&gt;666&lt;/span&gt;’;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;/pre&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;为什么推荐用逻辑删除，不推荐物理删除呢？&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;blockquote&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;为什么不推荐使用物理删除，因为恢复数据很困难&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;物理删除会使自增主键不再连续&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;核心业务表 的数据不建议做物理删除，只适合做状态变更。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;&lt;h2 data-id=&quot;heading-6&quot;&gt;&lt;br/&gt;&lt;/h2&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;blockquote mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;blockquote mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;span mpa-is-content=&quot;t&quot;&gt;6. 每个表都需要添加&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;span mpa-is-content=&quot;t&quot;&gt;这几个通用字段&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;span mpa-is-content=&quot;t&quot;&gt;如主键、create_time、modifed_time等&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;表必备一般来说，或具备这几个字段：&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;blockquote mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;blockquote mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;span mpa-is-content=&quot;t&quot;&gt;7. 一张表的字段不宜过多&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;我们建表的时候，要牢记，一张表的字段不宜过多哈，一般尽量不要超过20个字段哈。笔者记得上个公司，有伙伴设计开户表，加了五十多个字段。。。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;如果一张表的字段过多，表中保存的数据可能就会很大，查询效率就会很低。因此，一张表不要设计太多字段哈，如果业务需求，实在需要很多字段，可以把一张大的表，拆成多张小的表，它们的主键相同即可。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;当表的字段数非常多时，可以将表分成两张表，一张作为条件查询表，一张作为详细内容表 (主要是为了性能考虑)。&lt;/span&gt;&lt;/section&gt;&lt;h2 data-id=&quot;heading-8&quot;&gt;&lt;br/&gt;&lt;/h2&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;blockquote mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;blockquote mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;span mpa-is-content=&quot;t&quot;&gt;8. 尽可能使用not null定义字段&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;如果没有特殊的理由， 一般都建议将字段定义为&lt;/span&gt;&lt;code&gt;&lt;span&gt; NOT NULL&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;为什么呢？&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;h2 data-id=&quot;heading-9&quot;&gt;&lt;br/&gt;&lt;/h2&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;blockquote mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;blockquote mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;span mpa-is-content=&quot;t&quot;&gt;9. 设计表时，评估哪些字段&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;span mpa-is-content=&quot;t&quot;&gt;需要加索引&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;span&gt;首先，评估你的表数据量。如果你的表数据量只有一百几十行，就没有必要加索引。否则设计表的时候，如果有查询条件的字段，一般就需要建立索引。但是索引也不能滥用：&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;假设你新建一张用户表，如下：&lt;/span&gt;&lt;/section&gt;&lt;pre&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-preserve=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;CREATE&lt;/span&gt; &lt;span&gt;TABLE&lt;/span&gt; user_info_tab (&lt;br mpa-from-tpl=&quot;t&quot;/&gt;  &lt;span&gt;`id`&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;(&lt;span&gt;11&lt;/span&gt;) &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; AUTO_INCREMENT,&lt;br mpa-from-tpl=&quot;t&quot;/&gt;  &lt;span&gt;`user_id`&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;(&lt;span&gt;11&lt;/span&gt;) &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt;,&lt;br mpa-from-tpl=&quot;t&quot;/&gt;  &lt;span&gt;`age`&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;(&lt;span&gt;11&lt;/span&gt;) &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt;,&lt;br mpa-from-tpl=&quot;t&quot;/&gt;  &lt;span&gt;`name`&lt;/span&gt; &lt;span&gt;varchar&lt;/span&gt;(&lt;span&gt;255&lt;/span&gt;) &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt;,&lt;br mpa-from-tpl=&quot;t&quot;/&gt;  &lt;span&gt;`create_time`&lt;/span&gt; datetime &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt;,&lt;br mpa-from-tpl=&quot;t&quot;/&gt;  &lt;span&gt;`modifed_time`&lt;/span&gt; datetime &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt;,&lt;br mpa-from-tpl=&quot;t&quot;/&gt;  PRIMARY &lt;span&gt;KEY&lt;/span&gt; (&lt;span&gt;`id`&lt;/span&gt;)&lt;br mpa-from-tpl=&quot;t&quot;/&gt;) &lt;span&gt;ENGINE&lt;/span&gt;=&lt;span&gt;InnoDB&lt;/span&gt; &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;CHARSET&lt;/span&gt;=utf8;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;/pre&gt;&lt;section&gt;&lt;span&gt;对于这张表，很可能会有根据&lt;/span&gt;&lt;code&gt;&lt;span&gt;user_id&lt;/span&gt;&lt;/code&gt;&lt;span&gt;或者&lt;/span&gt;&lt;code&gt;&lt;span&gt;name&lt;/span&gt;&lt;/code&gt;&lt;span&gt;查询用户信息，并且，&lt;/span&gt;&lt;code&gt;&lt;span&gt;user_id&lt;/span&gt;&lt;/code&gt;&lt;span&gt;是唯一的。因此，你是可以给&lt;/span&gt;&lt;code&gt;&lt;span&gt;user_id&lt;/span&gt;&lt;/code&gt;&lt;span&gt;加上唯一索引，&lt;/span&gt;&lt;code&gt;&lt;span&gt;name&lt;/span&gt;&lt;/code&gt;&lt;span&gt;加上普通索引。&lt;/span&gt;&lt;/section&gt;&lt;pre&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-preserve=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;CREATE&lt;/span&gt; &lt;span&gt;TABLE&lt;/span&gt; user_info_tab (&lt;br mpa-from-tpl=&quot;t&quot;/&gt;  &lt;span&gt;`id`&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;(&lt;span&gt;11&lt;/span&gt;) &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; AUTO_INCREMENT,&lt;br mpa-from-tpl=&quot;t&quot;/&gt;  &lt;span&gt;`user_id`&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;(&lt;span&gt;11&lt;/span&gt;) &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt;,&lt;br mpa-from-tpl=&quot;t&quot;/&gt;  &lt;span&gt;`age`&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;(&lt;span&gt;11&lt;/span&gt;) &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt;,&lt;br mpa-from-tpl=&quot;t&quot;/&gt;  &lt;span&gt;`name`&lt;/span&gt; &lt;span&gt;varchar&lt;/span&gt;(&lt;span&gt;255&lt;/span&gt;) &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt;,&lt;br mpa-from-tpl=&quot;t&quot;/&gt;  &lt;span&gt;`create_time`&lt;/span&gt; datetime &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt;,&lt;br mpa-from-tpl=&quot;t&quot;/&gt;  &lt;span&gt;`modifed_time`&lt;/span&gt; datetime &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt;,&lt;br mpa-from-tpl=&quot;t&quot;/&gt;  PRIMARY &lt;span&gt;KEY&lt;/span&gt; (&lt;span&gt;`id`&lt;/span&gt;),&lt;br mpa-from-tpl=&quot;t&quot;/&gt;  &lt;span&gt;KEY&lt;/span&gt; &lt;span&gt;`idx_name`&lt;/span&gt; (&lt;span&gt;`name`&lt;/span&gt;) &lt;span&gt;USING&lt;/span&gt; BTREE,&lt;br mpa-from-tpl=&quot;t&quot;/&gt;  &lt;span&gt;UNIQUE&lt;/span&gt; &lt;span&gt;KEY&lt;/span&gt; un_user_id (user_id)&lt;br mpa-from-tpl=&quot;t&quot;/&gt;) &lt;span&gt;ENGINE&lt;/span&gt;=&lt;span&gt;InnoDB&lt;/span&gt; &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;CHARSET&lt;/span&gt;=utf8;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;/pre&gt;&lt;h2 data-id=&quot;heading-10&quot;&gt;&lt;br/&gt;&lt;/h2&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;blockquote mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;blockquote mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;span mpa-is-content=&quot;t&quot;&gt;10. 不需要严格遵守 3NF，&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;span mpa-is-content=&quot;t&quot;&gt;通过业务字段冗余来减少表关联&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;span&gt;什么是数据库三范式（&lt;/span&gt;&lt;code&gt;&lt;span&gt;3NF&lt;/span&gt;&lt;/code&gt;&lt;span&gt;），大家是否还有印象吗？&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;我们设计表及其字段之间的关系, 应尽量满足第三范式。但是有时候，可以适当冗余，来提高效率。比如以下这张表&lt;/span&gt;&lt;/p&gt;&lt;table cellspacing=&quot;2&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;center&quot;&gt;&lt;p&gt;&lt;span&gt;商品名称&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;center&quot;&gt;&lt;p&gt;&lt;span&gt;商品型号&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;center&quot;&gt;&lt;p&gt;&lt;span&gt;单价&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;center&quot;&gt;&lt;p&gt;&lt;span&gt;数量&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;center&quot;&gt;&lt;p&gt;&lt;span&gt;总金额&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;center&quot;&gt;&lt;p&gt;&lt;span&gt;手机&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;center&quot;&gt;&lt;p&gt;&lt;span&gt;华为&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;center&quot;&gt;&lt;p&gt;&lt;span&gt;8000&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;center&quot;&gt;&lt;p&gt;&lt;span&gt;5&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;center&quot;&gt;&lt;p&gt;&lt;span&gt;40000&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;以上这张存放商品信息的基本表。&lt;/span&gt;&lt;code&gt;&lt;span&gt;总金额&lt;/span&gt;&lt;/code&gt;&lt;span&gt;这个字段的存在，表明该表的设计不满足第三范式，因为&lt;/span&gt;&lt;code&gt;&lt;span&gt;总金额&lt;/span&gt;&lt;/code&gt;&lt;span&gt;可以由&lt;/span&gt;&lt;code&gt;&lt;span&gt;单价*数量&lt;/span&gt;&lt;/code&gt;&lt;span&gt;得到，说明&lt;/span&gt;&lt;code&gt;&lt;span&gt;总金额&lt;/span&gt;&lt;/code&gt;&lt;span&gt;是冗余字段。但是，增加&lt;/span&gt;&lt;code&gt;&lt;span&gt;总金额&lt;/span&gt;&lt;/code&gt;&lt;span&gt;这个冗余字段，可以提高查询统计的速度，这就是以空间换时间的作法。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;当然，这只是个小例子哈，大家开发设计的时候，要结合具体业务哈。&lt;/span&gt;&lt;/section&gt;&lt;h2 data-id=&quot;heading-11&quot;&gt;&lt;br/&gt;&lt;/h2&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;blockquote mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;blockquote mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;span mpa-is-content=&quot;t&quot;&gt;11. 避免使用MySQL保留字&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;span&gt;如果库名、表名、字段名等属性含有保留字时，&lt;/span&gt;&lt;code&gt;&lt;span&gt;SQL&lt;/span&gt;&lt;/code&gt;&lt;span&gt;语句必须用反引号来引用属性名称，这将使得SQL语句书写、SHELL脚本中变量的转义等变得非常复杂。&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;因此，我们一般避免使用&lt;/span&gt;&lt;code&gt;&lt;span&gt;MySQL&lt;/span&gt;&lt;/code&gt;&lt;span&gt;保留字，如&lt;/span&gt;&lt;code&gt;&lt;span&gt;select、interval、desc&lt;/span&gt;&lt;/code&gt;&lt;span&gt;等等&lt;/span&gt;&lt;/section&gt;&lt;h2 data-id=&quot;heading-12&quot;&gt;&lt;br/&gt;&lt;/h2&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;blockquote mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;blockquote mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;span mpa-is-content=&quot;t&quot;&gt;12. 不搞外键关联，&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;span mpa-is-content=&quot;t&quot;&gt;一般都在代码维护&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;什么是外键呢？&lt;/span&gt;&lt;/section&gt;&lt;blockquote&gt;&lt;section&gt;&lt;span&gt;外键，也叫&lt;/span&gt;&lt;code&gt;&lt;span&gt;FOREIGN KEY&lt;/span&gt;&lt;/code&gt;&lt;span&gt;，它是用于将两个表连接在一起的键。&lt;/span&gt;&lt;code&gt;&lt;span&gt;FOREIGN KEY&lt;/span&gt;&lt;/code&gt;&lt;span&gt;是一个表中的一个字段（或字段集合），它引用另一个表中的&lt;/span&gt;&lt;code&gt;&lt;span&gt;PRIMARY KEY&lt;/span&gt;&lt;/code&gt;&lt;span&gt;。它是用来保证数据的一致性和完整性的。&lt;/span&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;section&gt;&lt;span&gt;阿里的&lt;/span&gt;&lt;code&gt;&lt;span&gt;Java&lt;/span&gt;&lt;/code&gt;&lt;span&gt;规范也有这么一条：&lt;/span&gt;&lt;/section&gt;&lt;blockquote&gt;&lt;section&gt;&lt;span&gt;【强制】不得使用外键与级联，一切外键概念必须在应用层解决。&lt;/span&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;section&gt;&lt;span&gt;我们为什么不推荐使用&lt;strong&gt;外键&lt;/strong&gt;呢？&lt;/span&gt;&lt;/section&gt;&lt;blockquote&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;使用外键存在性能问题、并发死锁问题、使用起来不方便等等。每次做&lt;/span&gt;&lt;code&gt;&lt;span&gt;DELETE&lt;/span&gt;&lt;/code&gt;&lt;span&gt;或者&lt;/span&gt;&lt;code&gt;&lt;span&gt;UPDATE&lt;/span&gt;&lt;/code&gt;&lt;span&gt;都必须考虑外键约束，会导致开发的时候很难受,测试数据造数据也不方便。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;还有一个场景不能使用外键，就是分库分表。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;&lt;h2 data-id=&quot;heading-13&quot;&gt;&lt;br/&gt;&lt;/h2&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;blockquote mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;blockquote mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;span mpa-is-content=&quot;t&quot;&gt;13. 一般都选择INNODB存储引擎&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;span&gt;建表是需要选择&lt;strong&gt;存储引擎&lt;/strong&gt;的，我们一般都选择&lt;/span&gt;&lt;code&gt;&lt;span&gt;INNODB&lt;/span&gt;&lt;/code&gt;&lt;span&gt;存储引擎，除非读写比率小于&lt;/span&gt;&lt;code&gt;&lt;span&gt;1%&lt;/span&gt;&lt;/code&gt;&lt;span&gt;, 才考虑使用&lt;/span&gt;&lt;code&gt;&lt;span&gt;MyISAM &lt;/span&gt;&lt;/code&gt;&lt;span&gt;。&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;有些小伙伴可能会有疑惑，不是还有&lt;/span&gt;&lt;code&gt;&lt;span&gt;MEMORY&lt;/span&gt;&lt;/code&gt;&lt;span&gt;等其他存储引擎吗？什么时候使用它呢？其实其他存储引擎一般除了都建议在&lt;/span&gt;&lt;code&gt;&lt;span&gt;DBA&lt;/span&gt;&lt;/code&gt;&lt;span&gt;的指导下使用。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;我们来复习一下这&lt;/span&gt;&lt;code&gt;&lt;span&gt;MySQL&lt;/span&gt;&lt;/code&gt;&lt;span&gt;这三种存储引擎的对比区别吧：&lt;/span&gt;&lt;/p&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;&lt;span&gt;特性&lt;/span&gt;&lt;/th&gt;&lt;th&gt;&lt;span&gt;INNODB&lt;/span&gt;&lt;/th&gt;&lt;th&gt;&lt;span&gt;MyISAM&lt;/span&gt;&lt;/th&gt;&lt;th&gt;&lt;span&gt;MEMORY&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;事务安全&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;支持&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;无&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;无&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;存储限制&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;64TB&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;有&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;有&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;空间使用&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;高&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;低&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;低&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;内存使用&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;高&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;低&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;高&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;插入数据速度&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;低&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;高&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;高&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;是否支持外键&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;支持&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;无&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;无&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;/p&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;span mpa-is-content=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;blockquote mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;blockquote mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;span mpa-is-content=&quot;t&quot;&gt;14. 选择合适统一的字符集。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;数据库库、表、开发程序等都需要统一字符集，通常中英文环境用&lt;/span&gt;&lt;code&gt;&lt;span&gt;utf8&lt;/span&gt;&lt;/code&gt;&lt;span&gt;。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;MySQL支持的字符集有&lt;/span&gt;&lt;code&gt;&lt;span&gt;utf8、utf8mb4、GBK、latin1&lt;/span&gt;&lt;/code&gt;&lt;span&gt;等。&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;utf8：支持中英文混合场景，国际通过，3个字节长度&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;utf8mb4:   完全兼容utf8，4个字节长度，一般存储&lt;strong&gt;emoji表情&lt;/strong&gt;需要用到它。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;GBK ：支持中文，但是不支持国际通用字符集，2个字节长度&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;latin1：MySQL默认字符集，1个字节长度&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;span mpa-is-content=&quot;t&quot;/&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;blockquote mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;blockquote mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;span mpa-is-content=&quot;t&quot;&gt;15. 如果你的数据库字段是枚举类型的，&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;span mpa-is-content=&quot;t&quot;&gt;需要在comment注释清楚&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span mpa-is-content=&quot;t&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如果你设计的数据库字段是枚举类型的话，就需要在&lt;/span&gt;&lt;code&gt;&lt;span&gt;comment&lt;/span&gt;&lt;/code&gt;&lt;span&gt;后面注释清楚每个枚举的意思，以便于维护&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;正例如下：&lt;/span&gt;&lt;/section&gt;&lt;pre&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-preserve=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;pre&gt;&lt;code&gt;`session_status` varchar(2) COLLATE utf8_bin NOT NULL &lt;span&gt;COMMENT&lt;/span&gt; &lt;span&gt;&#x27;session授权态 00：在线-授权态有效 01：下线-授权态失效 02：下线-主动退出 03：下线-在别处被登录&#x27;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;/pre&gt;&lt;section&gt;&lt;span&gt;反例：&lt;/span&gt;&lt;/section&gt;&lt;pre&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-preserve=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;pre&gt;&lt;code&gt;`session_status` varchar(2) COLLATE utf8_bin NOT NULL &lt;span&gt;COMMENT&lt;/span&gt; &lt;span&gt;&#x27;session授权态&#x27;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;/pre&gt;&lt;section&gt;&lt;span&gt;并且，如果你的枚举类型在未来的版本有增加修改的话，也需要同时维护到&lt;/span&gt;&lt;code&gt;&lt;span&gt;comment&lt;/span&gt;&lt;/code&gt;&lt;span&gt;。&lt;/span&gt;&lt;/section&gt;&lt;h2 data-id=&quot;heading-16&quot;&gt;&lt;br/&gt;&lt;/h2&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;span mpa-is-content=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;blockquote mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;blockquote mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;span mpa-is-content=&quot;t&quot;&gt;16.时间的类型选择&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;span mpa-is-content=&quot;t&quot;/&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;span&gt;我们设计表的时候，一般都需要加通用时间的字段，如&lt;/span&gt;&lt;code&gt;&lt;span&gt;create_time、modified_time&lt;/span&gt;&lt;/code&gt;&lt;span&gt;等等。那对于时间的类型，我们该如何选择呢？&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;对于MySQL来说，主要有&lt;/span&gt;&lt;code&gt;&lt;span&gt;date、datetime、time、timestamp 和 year&lt;/span&gt;&lt;/code&gt;&lt;span&gt;。&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;date ：表示的日期值, 格式&lt;/span&gt;&lt;code&gt;&lt;span&gt;yyyy-mm-dd&lt;/span&gt;&lt;/code&gt;&lt;span&gt;,范围&lt;/span&gt;&lt;code&gt;&lt;span&gt;1000-01-01 到 9999-12-31&lt;/span&gt;&lt;/code&gt;&lt;span&gt;，3字节&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;time ：表示的时间值，格式 &lt;/span&gt;&lt;code&gt;&lt;span&gt;hh:mm:ss&lt;/span&gt;&lt;/code&gt;&lt;span&gt;，范围&lt;/span&gt;&lt;code&gt;&lt;span&gt;-838:59:59 到 838:59:59&lt;/span&gt;&lt;/code&gt;&lt;span&gt;，3字节&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;datetime：表示的日期时间值，格式&lt;/span&gt;&lt;code&gt;&lt;span&gt;yyyy-mm-dd hh:mm:ss&lt;/span&gt;&lt;/code&gt;&lt;span&gt;，范围&lt;/span&gt;&lt;code&gt;&lt;span&gt;1000-01-01 00:00:00到&lt;/span&gt;&lt;/code&gt;&lt;span&gt;9999-12-31 23:59:59```,8字节，跟时区无关&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;timestamp：表示的时间戳值，格式为&lt;/span&gt;&lt;code&gt;&lt;span&gt;yyyymmddhhmmss&lt;/span&gt;&lt;/code&gt;&lt;span&gt;，范围&lt;/span&gt;&lt;code&gt;&lt;span&gt;1970-01-01 00:00:01到2038-01-19 03:14:07&lt;/span&gt;&lt;/code&gt;&lt;span&gt;，4字节，跟时区有关&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;year：年份值，格式为&lt;/span&gt;&lt;code&gt;&lt;span&gt;yyyy&lt;/span&gt;&lt;/code&gt;&lt;span&gt;。范围&lt;/span&gt;&lt;code&gt;&lt;span&gt;1901到2155&lt;/span&gt;&lt;/code&gt;&lt;span&gt;，1字节&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;span&gt;推荐优先使用&lt;/span&gt;&lt;code&gt;&lt;span&gt;datetime&lt;/span&gt;&lt;/code&gt;&lt;span&gt;类型来保存日期和时间，因为存储范围更大，且跟时区无关。&lt;/span&gt;&lt;/section&gt;&lt;h2 data-id=&quot;heading-17&quot;&gt;&lt;br/&gt;&lt;/h2&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;span mpa-is-content=&quot;t&quot;/&gt;&lt;/strong&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;blockquote mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;blockquote mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;span mpa-is-content=&quot;t&quot;&gt;&lt;strong&gt;17. 不建议使用Stored procedure&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;span mpa-is-content=&quot;t&quot;&gt;&lt;strong&gt;(包括存储过程，触发器) &lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;span mpa-is-content=&quot;t&quot;/&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;strong&gt;什么是存储过程&lt;/strong&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;已预编译为一个可执行过程的一个或多个SQL语句。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;什么是触发器&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;触发器，指一段代码，当触发某个事件时，自动执行这些代码。使用场景：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;对于MYSQL来说，存储过程、触发器等还不是很成熟， 并没有完善的出错记录处理，不建议使用。&lt;/span&gt;&lt;/section&gt;&lt;h2 data-id=&quot;heading-18&quot;&gt;&lt;br/&gt;&lt;/h2&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;span mpa-is-content=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;blockquote mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;blockquote mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;span mpa-is-content=&quot;t&quot;&gt;18. 1:N 关系的设计&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;span mpa-is-content=&quot;t&quot;/&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;span&gt;日常开发中，&lt;/span&gt;&lt;code&gt;&lt;span&gt;1&lt;/span&gt;&lt;/code&gt;&lt;span&gt;对多的关系应该是非常常见的。比如一个班级有多个学生，一个部门有多个员工等等。这种的建表原则就是：在从表（&lt;/span&gt;&lt;code&gt;&lt;span&gt;N&lt;/span&gt;&lt;/code&gt;&lt;span&gt;的这一方）创建一个字段，以字段作为外键指向主表（&lt;/span&gt;&lt;code&gt;&lt;span&gt;1&lt;/span&gt;&lt;/code&gt;&lt;span&gt;的这一方）的主键。示意图如下:&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.2796688132474701&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/1J6IbIcPCLb52g5C4VytVFGShSMH3m4FqUzBIxDzd4FMql67NLIStkl2zEec93pFfxhE8yCkXHImhAowSmvKrQ/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;1087&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;学生表是多（&lt;/span&gt;&lt;code&gt;&lt;span&gt;N&lt;/span&gt;&lt;/code&gt;&lt;span&gt;）的一方，会有个字段&lt;/span&gt;&lt;code&gt;&lt;span&gt;class_id&lt;/span&gt;&lt;/code&gt;&lt;span&gt;保存班级表的主键。当然，一班不加外键约束哈，只是单纯保存这个关系而已。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;有时候两张表存在&lt;/span&gt;&lt;code&gt;&lt;span&gt;N:N&lt;/span&gt;&lt;/code&gt;&lt;span&gt;关系时，我们应该消除这种关系。通过增加第三张表，把&lt;/span&gt;&lt;code&gt;&lt;span&gt;N:N&lt;/span&gt;&lt;/code&gt;&lt;span&gt;修改为两个 &lt;/span&gt;&lt;code&gt;&lt;span&gt;1:N&lt;/span&gt;&lt;/code&gt;&lt;span&gt;。比如图书和读者，是一个典型的多对多的关系。一本书可以被多个读者借，一个读者又可以借多本书。我们就可以设计一个借书表，包含图书表的主键，以及读者的主键，以及借还标记等字段。&lt;/span&gt;&lt;/section&gt;&lt;h2 data-id=&quot;heading-19&quot;&gt;&lt;br/&gt;&lt;/h2&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;span mpa-is-content=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;blockquote mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;blockquote mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;span mpa-is-content=&quot;t&quot;&gt;19. 大字段&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;span mpa-is-content=&quot;t&quot;/&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;span&gt;设计表的时候，我们尤其需要关注一些大字段，即占用较多存储空间的字段。&lt;/span&gt;&lt;span&gt;比如用来记录用户评论的字段，又或者记录博客内容的字段，又或者保存合同数据的字段。&lt;/span&gt;&lt;span&gt;如果直接把表字段设计成text类型的话，就会浪费存储空间，查询效率也不好。&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;在MySQl中，这种方式保存的设计方案，其实是不太合理的。这种非常大的数据，可以保存到&lt;/span&gt;&lt;code&gt;&lt;span&gt;mongodb&lt;/span&gt;&lt;/code&gt;&lt;span&gt;中，然后，在业务表保存对应&lt;/span&gt;&lt;code&gt;&lt;span&gt;mongodb&lt;/span&gt;&lt;/code&gt;&lt;span&gt;的&lt;/span&gt;&lt;code&gt;&lt;span&gt;id&lt;/span&gt;&lt;/code&gt;&lt;span&gt;即可。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;这种设计思想类似于，我们表字段保存图片时，为什么不是保存图片内容，而是直接保存图片url即可。&lt;/span&gt;&lt;/section&gt;&lt;h2 data-id=&quot;heading-20&quot;&gt;&lt;br/&gt;&lt;/h2&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;span mpa-is-content=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;blockquote mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;blockquote mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;span mpa-is-content=&quot;t&quot;&gt;20. 考虑是否需要分库分表&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;span mpa-is-content=&quot;t&quot;/&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;strong&gt;什么是分库分表呢？&lt;/strong&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;分库：就是一个数据库分成多个数据库，部署到不同机器。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.612037037037037&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/1J6IbIcPCLb52g5C4VytVFGShSMH3m4FIkEkaapShqd1TJIMWDmOHf2tD1JuOBb0VUbicIsTZwZNeQgicMZJP8ZA/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;1080&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4608501118568233&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/1J6IbIcPCLb52g5C4VytVFGShSMH3m4F2ib97VadFsHDyuQdMWCicTNUpKFZd5kyEW3v5HOAxk3QQjKUXKbPOgmQ/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;894&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;我们在设计表的时候，其实可以提前估算一下，是否需要做&lt;strong&gt;分库分表&lt;/strong&gt;。比如一些用户信息，未来可能数据量到达百万设置千万的话，就可以提前考虑分库分表。&lt;/span&gt;&lt;/section&gt;&lt;blockquote&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;为什么需要分库分表&lt;/strong&gt;: 数据量太大的话，SQL的查询就会变慢。如果一个查询SQL没命中索引，千百万数据量级别的表可能会拖垮整个数据库。即使SQL命中了索引，如果表的数据量超过一千万的话，查询也是会明显变慢的。这是因为索引一般是B+树结构，数据千万级别的话，B+树的高度会增高，查询就变慢啦。&lt;/span&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;section&gt;&lt;span&gt;分库分表主要有水平拆分、垂直拆分的说法，拆分策略有&lt;/span&gt;&lt;code&gt;&lt;span&gt;range范围、hash取模&lt;/span&gt;&lt;/code&gt;&lt;span&gt;。而分库分表主要有这些问题：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;blockquote mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;blockquote mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;span mpa-is-content=&quot;t&quot;&gt;21. sqL 编写的一些优化经验&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;span mpa-is-content=&quot;t&quot;/&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;span&gt;最后的话，跟大家聊来一些写SQL的经验吧：&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class=&quot;channels_iframe_wrp&quot;&gt;&lt;mpvideosnap class=&quot;js_uneditable custom_select_card channels_iframe videosnap_video_iframe&quot; data-pluginname=&quot;videosnap&quot; data-id=&quot;export/UzFfAgtgekIEAQAAAAAAXLA0amyJdQAAAAstQy6ubaLX4KHWvLEZgBPEraMIGyZBeIKCzNPgMIuNdd-EEaua4wK4KxYbK3TJ&quot; data-url=&quot;https://findermp.video.qq.com/251/20304/stodownload?encfilekey=S7s6ianIic0ia4PicKJSfB8EjyjpQibPUAXol7VEdrlib05TE5u2nXxXuJ1cFxybfsds7AAmY0Q1d1TMo4gCsCRFKuMUlXuHsbq5pKggviblk9H8KibPIs1Nibtj4Zg&amp;amp;adaptivelytrans=0&amp;amp;bizid=1023&amp;amp;dotrans=0&amp;amp;hy=SH&amp;amp;idx=1&amp;amp;m=&amp;amp;scene=0&amp;amp;token=x5Y29zUxcibBVLCrGctSoPEvpjHYnxvMSXIz8ZAWORgObnY77PGjZWjCjn31icEkIP5O0rxPrpgu0&quot; data-headimgurl=&quot;http://wx.qlogo.cn/finderhead/Q3auHgzwzM5nv7YHhmhvPsGGX04JCIgibK2x2Ru0TOY9HeZTGSIL1KQ/0&quot; data-username=&quot;v2_060000231003b20faec8c5e08a1fc3d5c807ec30b07756771265bc6b6234fb9e05062ae69ab4@finder&quot; data-nickname=&quot;儒猿IT&quot; data-desc=&quot;作为世界上最优秀的消息中间件之一，Kafka是如何对频繁网络通信进行性能优化的？#中间件#kafka@微信时刻 &quot; data-nonceid=&quot;5111233550797424032&quot; data-type=&quot;video&quot; data-width=&quot;1920&quot; data-height=&quot;1080&quot;/&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.21428571428571427&quot; data-w=&quot;336&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/84QSpkgaj14GBzMnf1ibXkydLwCmhrWBooDwrdnlqYlsyB5PetG1T1oXxJ63G8TK58dqkDo7uzR7bKic50DxbTQQ/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6538461538461539&quot; data-w=&quot;52&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/BXOuoE8lPAIR47zmQ1XOqSQszO2PjLgkgakpDZQSsUkLLnGszEu0eyGjvHNRqu6picb2kicC4lo95WZGiaxqibqW4A/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;&lt;span&gt;欢迎扫码加入儒猿技术交流群，每天晚上20:00都有Java面试、Redis、MySQL、RocketMQ、SpringCloudAlibaba、Java架构等技术答疑分享，更能跟小伙伴们一起交流技术&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;267&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;267&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLbPrUTW4zORxkXJU3pH9mPiawH9oZtZGKTkHyVL2wemkqNmPoJKDZlAt5ibgr2CibGkffw2ozqicds4gw/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;396&quot;/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-id=&quot;41056&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-id=&quot;41056&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-id=&quot;94152&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-width=&quot;100%&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-autoskip=&quot;1&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p mpa-is-content=&quot;t&quot;&gt;&lt;span&gt;&lt;strong&gt;另外推荐儒猿课堂的1元系列课程给您，欢迎加入一起学习~&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p mpa-is-content=&quot;t&quot;&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;互联网Java工程师面试突击课&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;（1元专享）&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZn0ZLz1APC2Hxj148icL295hjkFx86RFTZFibdBopicpMl5Scptaibp0pQAe5jUBMtXym9w4CncFBHsQ/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;160&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;SpringCloudAlibaba零基础入门到项目实战&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;（1元专享）&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZn0ZLz1APC2Hxj148icL295NSLHaU5cHQTtyG2K5uK4iaA70v1g50BoQIRUVz4FBN1iahXdqc1M99Ww/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;160&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;亿级流量下的电商详情页系统实战项目&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;（1元专享）&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZn0ZLz1APC2Hxj148icL295I9n8XXUWoEeuogklrbj2QN4JZ6cdgYeRys5CCsml2tkFfibLXdeqoFA/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;160&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;Kafka消息中间件内核源码精讲&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;（1元专享）&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZn0ZLz1APC2Hxj148icL295yiaEcp1k5HBVycE8BGD0lGz5NZmKWmKXUtSBS7Jnm4FkTY8R5XFZkPw/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;160&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;12个实战案例带你玩转Java并发编程&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;（1元专享）&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZn0ZLz1APC2Hxj148icL295WWU9o0Pj51xAIa2qCs9xD2rdDIRLriaibePNSrWJVCknYn6b5lrF3CQQ/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;160&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;Elasticsearch零基础入门到精通&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;（1元专享）&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZn0ZLz1APC2Hxj148icL295QdxHC6HadPfaakPOo7DxxQpLH19lMZH0yAwRI3iajVXblNnwfMxBk9A/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;160&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;基于Java手写分布式中间件系统实战&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;（1元专享）&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZn0ZLz1APC2Hxj148icL295r0mR5hhVpAlXTAZzlVvSg1dxegAaZrIZ9ftePV5QQQg2ibIZbiaA6CCg/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;160&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;基于ShardingSphere的分库分表实战课&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;（1元专享）&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZn0ZLz1APC2Hxj148icL295hicEliaIKPfLpHqQAo4CdAorqyxd9HvqD8sADicO7wFHGJxNtRus6LlBA/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;160&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/div&gt;

          
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>