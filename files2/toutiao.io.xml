<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>b9657729bf483f850ad85af1f771cd89</guid>
<title>【分布式技术专题】「OSS中间件系列」Minio的文件服务的存储模型及整合Java客户端访问的实战指南_洛神灬殇的博客-CSDN博客</title>
<link>https://toutiao.io/k/9h64td9</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div id=&quot;content_views&quot; class=&quot;markdown_views prism-tomorrow-night&quot;&gt;
                    &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;
                        &lt;path stroke-linecap=&quot;round&quot; d=&quot;M5,0 0,2.5 5,5z&quot; id=&quot;raphael-marker-block&quot;/&gt;
                    &lt;/svg&gt;
                    &lt;h3&gt;&lt;a id=&quot;Minio_0&quot;/&gt;Minio的元数据&lt;/h3&gt; 
&lt;h4&gt;&lt;a id=&quot;_2&quot;/&gt;数据存储&lt;/h4&gt; 
&lt;p&gt;MinIO对象存储系统没有元数据数据库，所有的操作都是对象级别的粒度的，这种做法的优势是:&lt;/p&gt; 
 
&lt;h4&gt;&lt;a id=&quot;_10&quot;/&gt;数据管理&lt;/h4&gt; 
&lt;p&gt;元数据与数据一起存放在磁盘上：数据部分纠删分片以后存储在磁盘上，元数据以明文形式存放在元数据文件里（xl.json）。假定对象名字为obj-with-metadata, 它所在的桶的名字是bucket_name, disk是该对象所在纠删组的任一个磁盘的路径，如下目录：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;disk/bucket_name/obj-with-metadata 
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;记录了这个对象在此磁盘上的信息。其中的内容如下：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/img_convert/eb95e5c067b7662b8d4cb297e90d76cf.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt; 
&lt;h5&gt;&lt;a id=&quot;xljson_22&quot;/&gt;xl.json&lt;/h5&gt; 
&lt;p&gt;xl.json即是此对象的元数据文件。对象的元数据文件xl.json的内容是如下这种形式的json字符串：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/img_convert/eb73305c8457baded9585f504af33f36.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt; 
&lt;h5&gt;&lt;a id=&quot;_28&quot;/&gt;字段说明&lt;/h5&gt; 
&lt;h6&gt;&lt;a id=&quot;format_30&quot;/&gt;format字段&lt;/h6&gt; 
&lt;p&gt;该字段指明了这个对象的格式是xl，MinIO内部存储数据主要有两种数据格式:xl与fs。使用如下命令启动的MinIO使用的存储格式是fs:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/img_convert/0d68415d4a149a4eaec6e64f5c3281a5.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt; 
&lt;p&gt;这种模式主要用于测试， 对象存储很多API都是并没有真正实现的桩函数。在生产环境所用的部署方式（本地分布式集群部署、联盟模式部署、云网关模式部署）中，存储格式都是xl。&lt;/p&gt; 
&lt;p&gt;part.1 ：对象的第一个数据分片&lt;/p&gt; 
&lt;h6&gt;&lt;a id=&quot;stat_40&quot;/&gt;stat字段&lt;/h6&gt; 
&lt;p&gt;记录了此对象的状态，包括大小与修改时间，如下图：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/img_convert/27c5fc05cebd2ee0d5e4fc8a167440c1.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt; 
&lt;h6&gt;&lt;a id=&quot;erasure_46&quot;/&gt;erasure字段&lt;/h6&gt; 
&lt;p&gt;这个字段记录此对象与纠删码有关的信息，如下图：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/img_convert/ef21dfb1c2df31121aab978017374f91.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt; 
&lt;p&gt;其中的algorithm指明了此对象采用的是Klaus Post实现的纠删码，生成矩阵是范德蒙矩阵。&lt;/p&gt; 
&lt;ul&gt;&lt;li&gt; &lt;p&gt;data，parity指明了纠删组中数据盘、校验盘的个数。&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;blockSize 指明了对象被分块的大小，默认是5M（请参见上一节“数据分布与均衡”）。&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;index指明了当前磁盘在纠删组中的序号。&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;distribution:每个纠删组的数据盘、校验盘的个数是固定的，但是不同的对象的分片写入这个纠删组的不同磁盘的顺序是不同的。这里记录了分布顺序。&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;checksum:它下面的字段个数跟此对象的分片数量有关。在旧版本的MinIO对象存储系统，每一个分片经过hash函数计算出的checksum会记录在元数据文件的这个位置。最新版的MinIO会把checksum直接计入分片文件（即part.1等文件）的前32个字节。&lt;/p&gt; &lt;/li&gt;&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;此字段之下algorithm的值是”highwayhash256S”表明checksum值是写入分片文件的。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;&lt;a id=&quot;MinioJava_66&quot;/&gt;Minio的整合Java客户端&lt;/h3&gt; 
&lt;p&gt;文件服务器在用minio，没有独立成微服务也没有抽取starter，所以简单测试一下集成和抽取starter，创建springboot项目集成minio把文件上传成功&lt;/p&gt; 
&lt;h4&gt;&lt;a id=&quot;Mavenpom_70&quot;/&gt;Maven环境的pom依赖&lt;/h4&gt; 
&lt;pre&gt;&lt;code&gt;&amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;io.minio&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;minio&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;6.0.11&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;a id=&quot;springyml_80&quot;/&gt;spring的yml配置:&lt;/h4&gt; 
&lt;pre&gt;&lt;code&gt;minio:
  endpoint: http://192.168.8.50:9000
  accessKey: admin
  secretKey: 123123123
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;a id=&quot;_MinioProperties__89&quot;/&gt;配置类 MinioProperties :&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;prism language-java&quot;&gt;&lt;span class=&quot;token annotation punctuation&quot;&gt;@Data&lt;/span&gt;
&lt;span class=&quot;token annotation punctuation&quot;&gt;@ConfigurationProperties&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;prefix &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;minio&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;MinioProperties&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    
    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; endpoint&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    
    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; accessKey&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    
    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; secretKey&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;a id=&quot;_MinioUtil_104&quot;/&gt;工具类 MinioUtil&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;prism language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token import&quot;&gt;&lt;span class=&quot;token namespace&quot;&gt;cn&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;hutool&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;core&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;util&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;StrUtil&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token import&quot;&gt;&lt;span class=&quot;token namespace&quot;&gt;com&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;team&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;common&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;core&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;constant&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;enums&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;BaseResultEnum&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token import&quot;&gt;&lt;span class=&quot;token namespace&quot;&gt;com&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;team&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;common&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;core&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;exception&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;BusinessException&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token import&quot;&gt;&lt;span class=&quot;token namespace&quot;&gt;io&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;minio&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;MinioClient&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token import&quot;&gt;&lt;span class=&quot;token namespace&quot;&gt;lombok&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;AllArgsConstructor&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token import&quot;&gt;&lt;span class=&quot;token namespace&quot;&gt;lombok&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;SneakyThrows&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token import&quot;&gt;&lt;span class=&quot;token namespace&quot;&gt;org&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;springframework&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;stereotype&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Component&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token import&quot;&gt;&lt;span class=&quot;token namespace&quot;&gt;org&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;springframework&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;web&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;multipart&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;MultipartFile&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token import&quot;&gt;&lt;span class=&quot;token namespace&quot;&gt;java&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;io&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;InputStream&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token annotation punctuation&quot;&gt;@AllArgsConstructor&lt;/span&gt;
&lt;span class=&quot;token annotation punctuation&quot;&gt;@Component&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;MinioUtil&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;MinioClient&lt;/span&gt; minioClient&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;MinioProperties&lt;/span&gt; minioProperties&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    
    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;putFile&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; bucketName&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;MultipartFile&lt;/span&gt; file&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;putFile&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;bucketName&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;file&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    
    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;putFile&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; bucketName&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; folder&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;MultipartFile&lt;/span&gt; file&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; originalFilename &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; file&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getOriginalFilename&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;StrUtil&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isNotEmpty&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;folder&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            originalFilename &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; folder&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;originalFilename&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token class-name&quot;&gt;InputStream&lt;/span&gt; in &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; file&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getInputStream&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; contentType&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; file&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getContentType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            minioClient&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;putObject&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;bucketName&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;originalFilename&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;in&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; contentType&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Exception&lt;/span&gt; e&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            e&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;printStackTrace&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
           &lt;span class=&quot;token keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;BusinessException&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;BaseResultEnum&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;SYSTEM_EXCEPTION&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getCode&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;文件上传失败&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; url &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; minioProperties&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getEndpoint&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;bucketName&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;originalFilename&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; url&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    
    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;createBucket&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; bucketName&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            minioClient&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;makeBucket&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;bucketName&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Exception&lt;/span&gt; e&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            e&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;printStackTrace&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;BusinessException&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;BaseResultEnum&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;SYSTEM_EXCEPTION&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getCode&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;创建bucket失败&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token annotation punctuation&quot;&gt;@SneakyThrows&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getBucketPolicy&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; bucketName&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; minioClient&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getBucketPolicy&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;bucketName&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;a id=&quot;_176&quot;/&gt;装配类:&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;prism language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token import&quot;&gt;&lt;span class=&quot;token namespace&quot;&gt;io&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;minio&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;MinioClient&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token import&quot;&gt;&lt;span class=&quot;token namespace&quot;&gt;io&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;minio&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;errors&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;InvalidEndpointException&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token import&quot;&gt;&lt;span class=&quot;token namespace&quot;&gt;io&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;minio&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;errors&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;InvalidPortException&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token import&quot;&gt;&lt;span class=&quot;token namespace&quot;&gt;lombok&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;AllArgsConstructor&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token import&quot;&gt;&lt;span class=&quot;token namespace&quot;&gt;org&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;springframework&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;boot&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;autoconfigure&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;condition&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;ConditionalOnBean&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token import&quot;&gt;&lt;span class=&quot;token namespace&quot;&gt;org&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;springframework&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;boot&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;context&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;properties&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;EnableConfigurationProperties&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token import&quot;&gt;&lt;span class=&quot;token namespace&quot;&gt;org&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;springframework&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;context&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;annotation&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Bean&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token import&quot;&gt;&lt;span class=&quot;token namespace&quot;&gt;org&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;springframework&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;context&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;annotation&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Configuration&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token annotation punctuation&quot;&gt;@AllArgsConstructor&lt;/span&gt;
&lt;span class=&quot;token annotation punctuation&quot;&gt;@Configuration&lt;/span&gt;
&lt;span class=&quot;token annotation punctuation&quot;&gt;@EnableConfigurationProperties&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;MinioProperties&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;MinioAutoConfiguration&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;MinioProperties&lt;/span&gt; minioProperties&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token annotation punctuation&quot;&gt;@Bean&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;MinioClient&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;minioClient&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;InvalidPortException&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;InvalidEndpointException&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token class-name&quot;&gt;MinioClient&lt;/span&gt;  client &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;MinioClient&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;minioProperties&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getEndpoint&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;minioProperties&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getAccessKey&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;minioProperties&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getSecretKey&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt;  client&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token annotation punctuation&quot;&gt;@ConditionalOnBean&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;MinioClient&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token annotation punctuation&quot;&gt;@Bean&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;MinioUtil&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;minioUtil&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;MinioClient&lt;/span&gt; minioClient&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;MinioProperties&lt;/span&gt; minioProperties&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;MinioUtil&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;minioClient&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;minioProperties&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;&lt;a id=&quot;springfactories_208&quot;/&gt;spring.factories配置文件&lt;/h5&gt; 
&lt;p&gt;去掉主入口函数，去掉application.properties配置文件（新建一个测试用的springboot项目，把配置文件拿过去）&lt;br/&gt; 剩下最重要的一步：在resources下创建META-INF/spring.factories文件，配置文件中加入需要自动装配的类&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;org.springframework.boot.autoconfigure.EnableAutoConfiguration=\
  com.*(你的路径).MinioAutoConfiguration
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;a id=&quot;demo_218&quot;/&gt;demo:&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;prism language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token import&quot;&gt;&lt;span class=&quot;token namespace&quot;&gt;com&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;team&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;common&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;core&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;web&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Result&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token import&quot;&gt;&lt;span class=&quot;token namespace&quot;&gt;com&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;team&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;common&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;minio&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;MinioUtil&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token import&quot;&gt;&lt;span class=&quot;token namespace&quot;&gt;io&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;swagger&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;annotations&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Api&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token import&quot;&gt;&lt;span class=&quot;token namespace&quot;&gt;io&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;swagger&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;annotations&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;ApiOperation&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token import&quot;&gt;&lt;span class=&quot;token namespace&quot;&gt;io&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;swagger&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;annotations&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;ApiParam&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token import&quot;&gt;&lt;span class=&quot;token namespace&quot;&gt;org&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;springframework&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;beans&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;factory&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;annotation&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Autowired&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token import&quot;&gt;&lt;span class=&quot;token namespace&quot;&gt;org&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;springframework&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;web&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;bind&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;annotation&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;PutMapping&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token import&quot;&gt;&lt;span class=&quot;token namespace&quot;&gt;org&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;springframework&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;web&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;bind&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;annotation&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;RequestMapping&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token import&quot;&gt;&lt;span class=&quot;token namespace&quot;&gt;org&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;springframework&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;web&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;bind&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;annotation&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;RestController&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token import&quot;&gt;&lt;span class=&quot;token namespace&quot;&gt;org&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;springframework&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;web&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;multipart&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;MultipartFile&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token annotation punctuation&quot;&gt;@Api&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;value &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;uploadFile&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; tags &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;文件上传&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token annotation punctuation&quot;&gt;@RequestMapping&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;uploadFile&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token annotation punctuation&quot;&gt;@RestController&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;UploadFileController&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;token annotation punctuation&quot;&gt;@Autowired&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;MinioUtil&lt;/span&gt; minioUtil&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token annotation punctuation&quot;&gt;@ApiOperation&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;value &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;通用文件上传&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token annotation punctuation&quot;&gt;@PutMapping&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;/upload&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Result&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;uploadFile&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token annotation punctuation&quot;&gt;@ApiParam&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;存储桶名称&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; bucketName&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token annotation punctuation&quot;&gt;@ApiParam&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;文件&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;MultipartFile&lt;/span&gt; file&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; url &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
           url &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;  minioUtil&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;putFile&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;bucketName&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;file&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Exception&lt;/span&gt; e&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            e&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;printStackTrace&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
       &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Result&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;url&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;打包安装到maven仓库，本地测试用的同一仓库地址的话可以直接maven install，新建一个springboot项目，填入application.properties，pom中增加starter的依赖。&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;prism language-xml&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;dependency&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
            &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;groupId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;com.jxwy&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;groupId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
            &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;minio-starter&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;artifactId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
            &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;version&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;0.0.1-SNAPSHOT&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;version&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;dependency&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;a id=&quot;OSS_264&quot;/&gt;其他OSS服务对比&lt;/h3&gt; 
&lt;h4&gt;&lt;a id=&quot;_266&quot;/&gt;厂商支持&lt;/h4&gt; 
&lt;p&gt;国内使用Ceph的厂商、基于Ceph进行自研的存储厂商都比较多，在使用过程中遇到的问题（有些时候，甚至需要修改、增强乃至重新实现Ceph本身的功能），可以向相关厂商寻求支持。国际方面，Ceph早已被红帽收购，而红帽近期又被IBM收购。&lt;/p&gt; 
&lt;p&gt;MinIO开发与支持的厂商只有MinIO公司。由于架构比较先进，语言高级，MinIO本身的程序比较容易读懂、修改。招聘Golang程序员来 维护MinIO所花费的成本，显然低于招聘c++程序员来维护Ceph。&lt;/p&gt; 
&lt;h4&gt;&lt;a id=&quot;SDK_272&quot;/&gt;多语言客户端SDK&lt;/h4&gt; 
&lt;p&gt;二者均有常见编程语言的客户端，比如：python, java等。MinIO对象存储软件的开发SDK另外支持纯函数式的语言Haskell。&lt;/p&gt; 
&lt;h4&gt;&lt;a id=&quot;_276&quot;/&gt;技术文档&lt;/h4&gt; 
&lt;p&gt;内部实现的文档MinIO基本不存在。想要了解内部实现乃至参与开发的技术人员，只能到如下社区：http://minio.slack.com/ ，与MinIO的开发人员直接交流，或者自己阅读代码。Ceph的各种实现文档、算法说明文档非常丰富。这方面Ceph要比MinIO成熟很多。&lt;/p&gt; 
&lt;h3&gt;&lt;a id=&quot;CephMinIO_280&quot;/&gt;Ceph和MinIO的对比&lt;/h3&gt; 
&lt;p&gt;开源对象存储软件以MinIO,Ceph为典型代表。为帮助相关人员在选择对象存储系统之时选择合适的产品，此处对二者的特点、特性做一定讨论。&lt;/p&gt; 
&lt;h4&gt;&lt;a id=&quot;MinIO_284&quot;/&gt;MinIO优势&lt;/h4&gt; 
&lt;h5&gt;&lt;a id=&quot;_286&quot;/&gt;部署极其简单&lt;/h5&gt; 
&lt;p&gt;MinIO系统的服务程序仅有minio一个可执行文件，基本不依赖其它共享库或者rpm/apt包。minio的配置项很少（大部分都是内核之类系统级的设置），甚至不配置也可以正常运行起来。百度、google、bing等搜索引擎上基本没有关于MinIO部署问题的网页，可见在实践中，很少有使用者遇到这方面的问题。&lt;/p&gt; 
&lt;p&gt;相比之下，Ceph系统的模块，相关的rpm、apt包众多，配置项非常多，难以部署，难调优。某些Linux发行版的Ceph安装包甚至有bug，需要使用者手动改动Ceph的python脚本，才能安装完毕。&lt;/p&gt; 
&lt;h5&gt;&lt;a id=&quot;_292&quot;/&gt;二次开发容易&lt;/h5&gt; 
&lt;p&gt;MinIO对象存储系统除了极少数代码使用汇编实现以外，全部使用Golang语言实现。Ceph系统是使用业界闻名的难学难用的c++语言编写的。Golang语言由于产生较晚，吸收了很多语言尤其是c++的教训，语言特性比较现代化。&lt;/p&gt; 
&lt;p&gt;相对而言，MinIO系统的维护、二次开发比较容易。&lt;/p&gt; 
&lt;h5&gt;&lt;a id=&quot;_298&quot;/&gt;网管模式支持多种其他存储&lt;/h5&gt; 
&lt;p&gt;通过网关模式，MinIO对象存储后端，可以对接各种现有的常见其它存储类型，比如的NAS系统，微软Azure Blob 存储、Google 云存储、HDFS、阿里巴巴OSS、亚马逊S3等，非常有利于企业复用现有资源，有利于企业低成本（硬件成本约等于零，部署MinIO对象存储软件即可）地从现有系统平滑升级到对象存储。&lt;/p&gt; 
&lt;h4&gt;&lt;a id=&quot;Ceph_302&quot;/&gt;Ceph优势&lt;/h4&gt; 
&lt;p&gt;数据冗余策略更加丰富，Ceph同时支持副本、纠删码，而MinIO只支持纠删码。对于个别的对于数据可靠性要求极高的单位，Ceph对象存储更加合适。&lt;/p&gt; 
&lt;h3&gt;&lt;a id=&quot;_306&quot;/&gt;参考硬件&lt;/h3&gt; 
&lt;p&gt;MinIO是符合软件定义存储SDS理念的，兼容主流X86服务器以及ARM/飞腾平台，同时也可以移植到诸如申威（Alpha架构）和龙芯（Mips架构）等硬件平台。&lt;/p&gt; 
&lt;p&gt;下面这些符合工业标准的、广泛采用的服务器是经过MinIO inc.优化测试过的、MinIO对象存储软件表现优异的服务器：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/img_convert/0455236990b67243d17edbc294320b4f.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;a id=&quot;_314&quot;/&gt;结论&lt;/h4&gt; 
&lt;p&gt;由以上讨论，可见作为对象存储软件来说，MinIO， Ceph都非常优秀，各自有各自的优势。准备使用对象存储软件的用户，应该根据自己单位的需求、技术储备等实际情况，选择适当的软件。&lt;/p&gt; 
&lt;h3&gt;&lt;a id=&quot;_318&quot;/&gt;参考资料&lt;/h3&gt; 
&lt;ul&gt;&lt;li&gt; &lt;p&gt;https://hao123.blog.csdn.net/article/details/109065199?spm=1001.2101.3001.6650.1&amp;amp;utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1.opensearchhbase&amp;amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1.opensearchhbase&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;https://github.com/krishnasrinivas/wikinotes/wiki/minio-scaling&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;https://docs.aws.amazon.com/zh_cn/AmazonS3/latest/dev/Welcome.html&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;Klaus Post官网：https://klauspost.com/&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;https://github.com/klauspost/reedsolomon&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;https://developer.ibm.com/articles/cl-cloudstorage/&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;https://github.com/minio/dsync&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;https://github.com/minio/dsync/pull/22#issue-176751755&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;https://github.com/minio/minio/blob/master/cmd/xl-sets.go&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;https://min.io/resources/docs/MinIO-throughput-benchmarks-on-NVMe-SSD.pdf&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;https://github.com/minio/minio/blob/master/cmd/admin-heal-ops.go&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;https://github.com/klauspost/reedsolomon/blob/master/options.go&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;https://github.com/minio/dsync&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;https://min.io/resources/docs/CPG-MinIO-implementation-guide.pdf&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;https://github.com/minio/minio/issues/7986&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;https://docs.min.io/docs/minio-bucket-notification-guide.html&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;https://www.it610.com/article/1281191501832929280.htm&lt;/p&gt; &lt;/li&gt;&lt;/ul&gt;
                &lt;/div&gt;
                
                
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>5d4c9a7356c61f6e26e767807ec134c4</guid>
<title>庆祝40周年，CHM公开Apple Lisa源代码</title>
<link>https://toutiao.io/k/jguf5it</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content js_underline_content             autoTypeSetting24psection&amp;#10;            &quot; id=&quot;js_content&quot;&gt;&lt;p data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;span&gt;出品 | OSC开源社区（ID：oschina2013)&lt;/span&gt;&lt;/p&gt;&lt;p data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;span&gt;&lt;span&gt;美国计算机历史博物馆 (Computer History Museum,CHM)&lt;span&gt; &lt;/span&gt;&lt;/span&gt;宣布&lt;span&gt;已获得苹果公司的授权，在 Apple Lisa 发布 40 年之际公开其包括系统和应用软件在内的所有源代码，作为代码艺术系列的一部分。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;访问代码：&lt;/span&gt;&lt;span&gt;https://info.computerhistory.org/apple-lisa-code&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Apple Lisa 系统于 1983 年 1 月 19 日发布。与针对家用电脑市场的 Apple II 不同，Lisa 主要针对商业市场，其&lt;/span&gt;&lt;span&gt;&lt;span/&gt;&lt;/span&gt;&lt;span&gt;使用功能强大的摩托罗拉 68000 微处理器并搭配硬盘驱动器，定价 9995 美元。也正是因为其高昂的售价以及软件 / 软盘方面等诸多问题，Apple Lisa 的商业化并未成功。但仅管如此，Apple Lisa 还是具有里程碑式的意义，它是全球首款同时采用图形用户界面 (GUI) 和鼠标的个人电脑。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;“苹果公司今天的 Macintosh 系列电脑，因将鼠标驱动的 GUI 带给大众并改变了我们使用计算机的方式而闻名，它的存在要归功于它在苹果公司的直接前身 Lisa。如果没有 Lisa，就不会有 Macintosh-- 至少不会有我们今天的形式 -- 也许也不会有微软的 Windows。”&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.7052200614124872&quot; data-type=&quot;png&quot; data-w=&quot;977&quot; class=&quot;rich_pages wxw-img&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/dkwuWwLoRK8v0z0iaHE7yamDCdJEjmiahDRTMoUFUIbhZQGMpJJkdjYpe9Uh4q8DXNa07zAauTZwV5fjuSb5icx6g/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;根据介绍，Apple Lisa 附带了一套应用程序，包括文字处理器、电子表格和图表（与系统捆绑在一起），这阻止了第三方开发人员为其编写自己的软件。最初的 Lisa 还附带了内部设计的软盘驱动器 (Twiggy)，但并不可靠。Lisa 的 GUI 受到 Xerox PARC 的 Smalltalk 系统元素的启发，但也包括经过用户测试验证的新创新。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在 Apple Lisa 面世两年前 Xerox 曾以 16595 美元的价格发布了一款基于 GUI 的商用工作站 Star，同样针对办公室工作人员。与 IBM PC（两年前发布的基于命令行的 PC，零售价为 1565 美元）相比，这两款机器的价格都很高，最终导致了它们的消亡。但也有其他重大问题，即 Lisa 复杂的操作系统允许多个程序同时运行（多任务处理），即使对于它的 68000 处理器来说也过于强大，因此运行缓慢。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;继 Lisa 于 1983 年推出后，Lisa 2 系列于 1984 年 1 月与定价 2495 美元的 Apple Macintosh (今称为 Mac) 一起发布。Lisa 2 系列包括两种型号，Lisa 2/5 和 2/10，售价分别为 3495 美元和 5495 美元。Lisa 2 用单个 Sony 3.5 英寸软盘驱动器取代了原来 Lisa 的双 Twiggy 软盘驱动器，与 Mac 中的驱动器相同。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;1985 年 1 月，Lisa 2/10 被重新命名为 Macintosh XL，并配备了 MacWorks，这是一个允许它运行 Mac 软件的模拟器。尽管销量有所提高，但该产品于 1985 年 4 月被淘汰，专注于 Mac。Macintosh 与 Lisa 竞争，并最终因其较低的价格和开放的软件生态系统成为最受欢迎的计算机。其他基于 GUI 的操作系统（如 Windows）是在 Lisa 和 Macintosh 之后发布的，并且深受两者的影响。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img data-ratio=&quot;0.5751953125&quot; data-type=&quot;jpeg&quot; data-w=&quot;1024&quot; class=&quot;rich_pages wxw-img&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/dkwuWwLoRK8v0z0iaHE7yamDCdJEjmiahDARfhL22QFdkzfnaB18WI7eC69CVE3Vp6rT3TwP03zVP2ibjELeohloA/640?wx_fmt=jpeg&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Apple Lisa 是以乔布斯与前高中女友的孩子 Lisa Brennan (现在的 Brennan-Jobs) 命名的，不过后来的官方说法为 “局部集成软件架构”（Local Integrated Software Architecture）的英文缩写。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;尽管 Lisa 在市场上失败了，但作为个人计算机公司发布的第一台基于 GUI 的计算机，它在 GUI 和 PC 的历史上占有重要地位。虽然 Xerox Star 8010 在 1981 年击败了 Lisa 上市，但 Star 是与 Apollo 和 Sun 的其他工作站竞争的。或许更重要的是，如果没有 Lisa 及其受 PARC 启发的 GUI 的整合，Macintosh 本身就不会基于 GUI。两台计算机共享关键技术，例如鼠标和 QuickDraw 图形库。Lisa 是 Macintosh 的关键垫脚石，也是图形用户界面和 PC 史上的一个重要里程碑。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;相关链接：&lt;span&gt;https://computerhistory.org/blog/the-lisa-apples-most-influential-failure/&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86032&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;往期推荐&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5NzM0MjcyMQ==&amp;amp;mid=2650171315&amp;amp;idx=1&amp;amp;sn=ef442e653402852093822dfd18d890ef&amp;amp;chksm=bed9bcdd89ae35cb3ae623f9db77d4bb41a3020f09614e3621f513add3f74c6f3d4e98d9c4f8&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;悟空刘歧：技术瑕疵不除不快，开源社区代码说话&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;悟空刘歧：技术瑕疵不除不快，开源社区代码说话&lt;/a&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5NzM0MjcyMQ==&amp;amp;mid=2650171315&amp;amp;idx=2&amp;amp;sn=ff327ac153c689d95f4a2754b8bb1518&amp;amp;chksm=bed9bcdd89ae35cb52a2047836e8f5208d37e2dca62b239167176731724e76cb0fd22bd467aa&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;Linux新提议，JFS文件系统面临弃用和删除&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;Linux新提议，JFS文件系统面临弃用和删除&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;hr/&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;这里有最新开源资讯、软件更新、技术干货等内容&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;点这里 ↓↓↓ 记得 关注✔ 标星⭐ 哦&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;mp-common-profile class=&quot;custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-weuitheme=&quot;light&quot; data-id=&quot;MjM5NzM0MjcyMQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/dkwuWwLoRKibFSaFOxzVguEFp6FiaPYUpGzFgCDzntuS0V3Z7aWqgs8a2aVAiaGNticiapKQczicXqW5HicAGTrIXphbA/0?wx_fmt=png&quot; data-nickname=&quot;OSC开源社区&quot; data-alias=&quot;oschina2013&quot; data-signature=&quot;开源中国，为开发者服务&quot; data-from=&quot;0&quot; data-weui-theme=&quot;light&quot;/&gt;​​&lt;/section&gt;&lt;p&gt;&lt;mp-style-type data-value=&quot;3&quot;/&gt;&lt;/p&gt;&lt;/div&gt;

          
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>639e3008cade304f12732ef30bdf4bb1</guid>
<title>.NET 推荐一个开源的现代化的 PDF 生成组件</title>
<link>https://toutiao.io/k/5bvcera</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content js_underline_content             autoTypeSetting24psection&amp;#10;            &quot; id=&quot;js_content&quot;&gt;&lt;p&gt;&lt;span&gt;前言&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;QuestPDF 是一个开源免费的 .NET 组件库，可以用来生成 PDF 文档。&lt;/span&gt;&lt;span&gt;在 Github 上有4千多的 Star。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;项目充分考虑了 PDF 文档的设计和布局，并且具有完整的分页支持。QuestPDF 基于著名的图形库 SkiaSharp 创建，可以把您的数据转换为 PDF 文档。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;它提供了一个高度优化的布局引擎，每个内核每分钟能够生成超过 1000 个 PDF 文件。并且整个过程是线程安全的。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;如何使用&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;你可以在 Nuget 中搜索并安装 QuestPDF。&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;// Package Manager&lt;/span&gt;&lt;br/&gt;Install-Package QuestPDF&lt;br/&gt;&lt;br/&gt;&lt;span&gt;// .NET CLI&lt;/span&gt;&lt;br/&gt;dotnet &lt;span&gt;add&lt;/span&gt; package QuestPDF&lt;br/&gt;&lt;br/&gt;&lt;span&gt;// Package reference in .csproj file&lt;/span&gt;&lt;br/&gt;&amp;lt;PackageReference Include=&lt;span&gt;&quot;QuestPDF&quot;&lt;/span&gt; Version=&lt;span&gt;&quot;2022.11.0&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;下面的代码中，我们基于 minimal API，创建了一个简单的 PDF 页面，它真的非常简单。&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;using&lt;/span&gt; QuestPDF.Fluent;&lt;br/&gt;&lt;span&gt;using&lt;/span&gt; QuestPDF.Helpers;&lt;br/&gt;&lt;span&gt;using&lt;/span&gt; QuestPDF.Infrastructure;&lt;br/&gt; &lt;br/&gt;Document.Create(container =&amp;gt;&lt;br/&gt;{&lt;br/&gt;    container.Page(page =&amp;gt;&lt;br/&gt;    {&lt;br/&gt;        page.Size(PageSizes.A4);&lt;br/&gt;        page.Margin(&lt;span&gt;2&lt;/span&gt;, Unit.Centimetre);&lt;br/&gt;        page.PageColor(Colors.White);&lt;br/&gt;        page.DefaultTextStyle(x =&amp;gt; x.FontSize(&lt;span&gt;20&lt;/span&gt;));&lt;br/&gt;        &lt;br/&gt;        page.Header()&lt;br/&gt;            .Text(&lt;span&gt;&quot;Hello PDF!&quot;&lt;/span&gt;)&lt;br/&gt;            .SemiBold().FontSize(&lt;span&gt;36&lt;/span&gt;).FontColor(Colors.Blue.Medium);&lt;br/&gt;        &lt;br/&gt;        page.Content()&lt;br/&gt;            .PaddingVertical(&lt;span&gt;1&lt;/span&gt;, Unit.Centimetre)&lt;br/&gt;            .Column(x =&amp;gt;&lt;br/&gt;            {&lt;br/&gt;                x.Spacing(&lt;span&gt;20&lt;/span&gt;);&lt;br/&gt;                &lt;br/&gt;                x.Item().Text(Placeholders.LoremIpsum());&lt;br/&gt;                x.Item().Image(Placeholders.Image(&lt;span&gt;200&lt;/span&gt;, &lt;span&gt;100&lt;/span&gt;));&lt;br/&gt;            });&lt;br/&gt;        &lt;br/&gt;        page.Footer()&lt;br/&gt;            .AlignCenter()&lt;br/&gt;            .Text(x =&amp;gt;&lt;br/&gt;            {&lt;br/&gt;                x.Span(&lt;span&gt;&quot;Page &quot;&lt;/span&gt;);&lt;br/&gt;                x.CurrentPageNumber();&lt;br/&gt;            });&lt;br/&gt;    });&lt;br/&gt;})&lt;br/&gt;.GeneratePdf(&lt;span&gt;&quot;hello.pdf&quot;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;生成的 PDF 文件如下：&lt;/span&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;818&quot; data-backw=&quot;578&quot; data-ratio=&quot;1.4148148148148147&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/QA5py8bfacB8umM8QEJibA5zNPWs9b7CSQJD3CmdB6sKfAHRnI4cQTc9KRl2NBLC8cOvvJW6Hvg4n4Efb25Kazw/640?wx_fmt=png&quot; data-w=&quot;1080&quot; title=&quot;null&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;QuestPDF 的 Fluent API 扩展性非常好。即使是复杂的文档也可以轻松创建和维护，你可以在官网找到更多生成复杂文档的示例。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;QuestPDF Previewer&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;QuestPDF Previewer 是一个可以简化和加速开发生命周期的工具，它可以对 PDF 文档进行预览。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;但真正的魔法在于热重载功能！代码更新后，预览也会同步地实时更新，无需重新编译代码即可获得实时结果，充分释放生产力。&lt;/span&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;296&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.5115848007414272&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/QA5py8bfacB8umM8QEJibA5zNPWs9b7CSicBwgxxyATuHGzJc5IbGzUrwicj7EBc7Mu1BOktIvz2BFTNibr4LQ6f2w/640?wx_fmt=gif&quot; data-w=&quot;1079&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;项目地址&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;https://github.com/QuestPDF/QuestPDF&lt;/span&gt;&lt;span/&gt;&lt;span/&gt;&lt;span/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;- EOF -&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section donone=&quot;shifuMouseDownCard(&#x27;shifu_c_030&#x27;)&quot; label=&quot;Copyright Reserved by PLAYHUDONG.&quot;&gt;&lt;section&gt;&lt;span&gt;推荐阅读&lt;/span&gt;  &lt;span&gt;点击标题可跳转&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzAxMTMxMDQ3Mw==&amp;amp;mid=2660136140&amp;amp;idx=1&amp;amp;sn=a7a58bbe137fd5e21798f8818a8ea486&amp;amp;chksm=8039d02ab74e593c0f8efbd442a9f9fad0906168e19a65889852e7a7aff72e3ae65f0427370e&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;.NET + WPF框架开发聊天、网盘、信息发布、视频播放功能&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;.NET + WPF框架开发聊天、网盘、信息发布、视频播放功能&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzAxMTMxMDQ3Mw==&amp;amp;mid=2660136139&amp;amp;idx=1&amp;amp;sn=800bc4e54e4222b0e76d5fa96a8fd43f&amp;amp;chksm=8039d02db74e593b096e176475f2fddaecfe3675378bc82f17f7d8ad35050eae2e098d00c5e9&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;C#11 新特性整理&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;C#11 新特性整理&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzAxMTMxMDQ3Mw==&amp;amp;mid=2660136123&amp;amp;idx=1&amp;amp;sn=33e1bb94cd4d42618b2a71234bae9fb7&amp;amp;chksm=8039d05db74e594b715e819336911ce89b55eb0f738b574a8d65584e4570a69e7779d88fc6ef&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;C# 调用js库的方法&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;C# 调用js库的方法&lt;/span&gt;&lt;span/&gt;&lt;/a&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;看完本文有收获？请转发分享给更多人&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;推荐关注「DotNet」，提升.Net技能 &lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;mp-common-profile data-weui-theme=&quot;light&quot; class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-id=&quot;MzAxMTMxMDQ3Mw==&quot; data-pluginname=&quot;mpprofile&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/7fxWIIIo4Qtd4nF6910bEl0cBIPtbzOXjv0ZBhj9LTqOh5am8z7fbplrpSHxtzgPialr9jxXua9XfMYia8Moanbw/0?wx_fmt=png&quot; data-nickname=&quot;DotNet&quot; data-alias=&quot;iDotNet&quot; data-signature=&quot;「DotNet」专注.NET和.NET Core技术传播，包括：C#、.NET、.NET Core跨平台技术、工具资源和相关动态。&quot; data-from=&quot;0&quot; data-is_biz_ban=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;点赞和在看就是最大的支持❤️&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;mp-style-type data-value=&quot;3&quot;/&gt;&lt;/p&gt;&lt;/div&gt;

          
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>2ae159c30eaca401ae87bdffc4f1f244</guid>
<title>2 分钟就能抓取任何网站的数据是怎么做到的？？ #Browse AI</title>
<link>https://toutiao.io/k/js5rxl7</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;profile_inner&quot;&gt;
                  &lt;strong class=&quot;profile_nickname&quot;&gt;无界社区mixlab&lt;/strong&gt;
                  &lt;img class=&quot;profile_avatar&quot; id=&quot;js_profile_qrcode_img&quot; src=&quot;&quot; alt=&quot;&quot;/&gt;

                  &lt;p class=&quot;profile_meta&quot;&gt;
                  &lt;label class=&quot;profile_meta_label&quot;&gt;Weixin ID&lt;/label&gt;
                  &lt;span class=&quot;profile_meta_value&quot;&gt;mix-lab&lt;/span&gt;
                  &lt;/p&gt;

                  &lt;p class=&quot;profile_meta&quot;&gt;
                  &lt;label class=&quot;profile_meta_label&quot;&gt;About Feature&lt;/label&gt;
                  &lt;span class=&quot;profile_meta_value&quot;&gt;跨学科探索实验，让每个人无限可能。 def mixlab（人工智能，设计）： ... return 无限可能&lt;/span&gt;
                  &lt;/p&gt;
                &lt;/div&gt;
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>b56e80b295f18e1b1fbca428d55cdf0b</guid>
<title>A16Z｜AIGC的机遇与挑战分析</title>
<link>https://toutiao.io/k/3qhwo0d</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content js_underline_content             autoTypeSetting24psection&amp;#10;            &quot; id=&quot;js_content&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.525&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ZJPNu2387icUE9d3ruNOhbY4lrlsic9zf4CPut6w80Y6bNiaZQBxtF4YVlyCDCfMmxicrSxibS0TIYDibsQBhTo3F7SQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1200&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;什么是AIGC&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;AIGC是机器学习的一个应用类别，机器学习算法可以根据用户的输入和提示生成内容，这些内容包括文本和图片，但不仅限于这些。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;市场现状分析&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我们目前看到AIGC的技术栈出现的早期阶段，数以百计的创业公司进入市场，开始开发基础模型，建立基于AIGC原生应用程序，并建立基础设施和工具。&lt;/span&gt;&lt;/p&gt;&lt;p ql-global-para=&quot;true&quot; line=&quot;F5kg&quot;&gt;&lt;span&gt;在市场早期，许多热门技术趋势，在市场需求跟上之前就被过度炒作。但是，AIGC的热潮已经伴随着真实市场应用场景，从而产生了真正收益，以及来自真实公司的营收。像Stable Diffusion和ChatGPT这样的模型正在创造用户增长的历史记录，有些应用在推出后不到一年就达到了1亿美元的营业收入，并且AIGC模型在某些任务中的表现超过了人类，达到了多个数量级。&lt;/span&gt;&lt;/p&gt;&lt;p ql-global-para=&quot;true&quot; line=&quot;F5kg&quot;&gt;&lt;span&gt;因此，有足够的早期数据表明，大规模的范式转移正在发生。但是目前我们不能确定的是：在机遇AIGC技术的这个市场中，哪些地方会产生真正的价值？&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p ql-global-para=&quot;true&quot; line=&quot;F5kg&quot;&gt;&lt;/p&gt;&lt;p ql-global-para=&quot;true&quot; line=&quot;F5kg&quot;&gt;&lt;span&gt;在过去的一年里，我们会见了几十个直接与AIGC打交道的初创企业创始人和大公司的经营者。我们观察到，到目前为止，基础设施供应商可能是这个市场上最大的赢家，获得了流经该领域的大部分资金。AIGC应用公司的收入增长非常快，但往往在留存、产品差异化和毛利率方面挣扎。而大多数模型供应商，虽然对这个市场的存在拥有一定的促进作用，但还没有达到大规模的商业规模。&lt;/span&gt;&lt;/p&gt;&lt;p ql-global-para=&quot;true&quot; line=&quot;F5kg&quot;&gt;&lt;span&gt;换句话说，创造最多价值的公司--即训练生成性人工智能模型并将其应用于新的应用程序--还没有捕获应有的价值。预测接下来市场会发生什么就更难了。但我们认为，关键是要了解AIGC技术堆栈的哪些部分是真正的差异化和可防御的。这将对市场结构（即横向与纵向的公司发展）和长期价值捕获的驱动力（如利润率和留存率）产生重大影响。到目前为止，我们很难在AIGC技术堆栈的任何地方找到结构上的可防御性，除了现有公司的传统护城河之外。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p ql-global-para=&quot;true&quot; line=&quot;F5kg&quot;&gt;&lt;/p&gt;&lt;p ql-global-para=&quot;true&quot; line=&quot;F5kg&quot;&gt;&lt;span&gt;我们非常看好AIGC，并相信它将对软件行业和其他行业产生巨大影响。这篇文章的目的是描绘出市场的动态，并回答一些关于AIGC商业模式更为广泛的问题。&lt;/span&gt;&lt;/p&gt;&lt;p ql-global-para=&quot;true&quot; line=&quot;F5kg&quot;&gt;&lt;strong&gt;&lt;span&gt;技术栈：基础设施、机器学习模型和应用程序&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;为了更好的了解生AIGC市场如何形成，我们首先需要定义今天AIGC行业的技术堆栈是什么：&lt;/span&gt;&lt;/p&gt;&lt;p ql-global-para=&quot;true&quot; line=&quot;8SbP&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.125&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ZJPNu2387icUE9d3ruNOhbY4lrlsic9zf4YAKQLIBwVRpap8WurvxgcHibKOicXQEaXpaTp0NTa2r0jQM5y05ugC5Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1920&quot;/&gt;&lt;/p&gt;&lt;p ql-global-para=&quot;true&quot; line=&quot;8SbP&quot;&gt;&lt;strong&gt;&lt;span&gt;整个AIGC堆栈可分为三层。&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;第一波AIGC应用开始达到规模，但在留存率和产品差异化方面却很困难&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ZJPNu2387icUE9d3ruNOhbY4lrlsic9zf4NM0icaia17ReZIkw7h16Dbf5VPSIe0grac4ZdqwrD81UDcujl6eyibfMQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1024&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在以前的技术周期中，传统的商业模式是，要想建立一个大型的、独立的公司，你必须拥有终端客户——客户在这意味着个人消费者还是B2B买家。&lt;/span&gt;&lt;span&gt;以此内推，AIGC中最大的公司也将是基于终端用户的应用。&lt;/span&gt;&lt;span&gt;但是到目前为止，还AIGC的市场结构情况还不一定是这样的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;从目前来看，AIGC应用的增长是非常惊人的，这种增长是由纯粹的，新颖性和大量的使用案例所推动，比如AI图像生成，AI文案写作，AI代码编写等，并且以上说的三种产品类别年收入已经超过一亿美金。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;然而，仅有增长并不足以建立持久的软件公司，关键是，增长必须是可盈利的和可持续的，也就是说，用户和客户一点注册就可以产生利润，并且这种利润能够一直持续，所以需要高留存率。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在缺乏强大的技术差异化的情况下，B2B和B2C应用程序通过网络效应、留存率或建立日益复杂的工作流程来建立长期的客户价值。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;但是在AIGC市场中，这些假设不一定成立。在我们接触过的所有AIGC应用程序公司中，毛利率的范围很广，少数情况下高达90%，但更多时候低至50-60%，主要由AIGC模型的运算成本驱动。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;渠道顶端的增长是惊人的，但目前的客户获取策略是否可以扩展和可持续还不清楚，我们已经看到付费获取的客户的效率和留存率开始下降。许多应用程序也相对缺乏差异性，因为它们依赖于类似的底层人工智能模型，并没有发现使得竞争对手很难复制明的网络效应，或数据/工作流程。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;因此，我们还不能确定销售终端用户应用程序是否是建立AIGC业务的最好的途径。随着语言模型的竞争和效率的提高，利润率应该会提高（下面会有更多介绍）。随着AIGC因为好奇的游客离开市场，保留率应该会增加。并且我们认为垂直整合的AIGC应用程序在推动差异化方面具有优势，但这些仍有很多东西需要证明。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;展望未来，AIGC应用公司会面临的问题：&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;‍&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;垂直整合（&quot;模型+应用&quot;）&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;将人工智能模型作为一种服务来消费，允许应用开发者用一个小团队快速迭代，并随着技术的进步更换模型供应商。另一方面，一些开发者认为，产品就是模型，从头开始训练是创造可防御性的唯一途径--即通过不断地对专有产品数据进行重新训练。但这是以更高的资本要求和更不灵活的产品团队为代价。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;span&gt;‍&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;构建功能与应用程序。&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;AIGC产品有许多不同的形式：桌面应用程序，移动应用程序，Figma/Photoshop插件，Chrome扩展，甚至是Discord机器人。在用户已经工作的地方整合AIGC产品很容易，因为用户界面一般只是一个文本框。其中哪些AIGC应用会成为独立的公司，哪些会被微软或谷歌等已经将人工智能纳入其产品线的现有公司所吸收？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;‍&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;通过炒作周期进行管理。&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;目前还不清楚流失率高是否是目前这批AIGC产品所固有的，或者它是早期市场的产物。或者，对AIGC的兴趣激增是否会随着炒作的消退而下降。这些问题对AIGC应用程序公司有重要的影响，包括何时加速融资，如何积极投资于客户获取推广，优先考虑哪些用户群，以及何时宣布产品匹配市场（Product Market Fit）。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;模型供应商发明了AIGC，但还没有达到大规模商业化&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;p ql-global-para=&quot;true&quot; line=&quot;uKai&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ZJPNu2387icUE9d3ruNOhbY4lrlsic9zf4fCZUbjKEHOnADoUpfjjRZ64w7jznl9jo4U6vayKwacU6BKW556Yl3Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1024&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如果没有谷歌、OpenAI和Stability等公司的杰出研究和工程工作，我们现在所说的AIGC就不会存在。&lt;/span&gt;&lt;span&gt;通过新颖的模型架构和扩展训练管道的杰出努力，我们都受益于当前大型语言模型（LLMs）和图像生成模型的能力。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;然而，这些公司相关的收入与AIGC的使用量和热闹程度相比仍然相对较小。在图像生成方面，Stable Diffusion公司在用户界面、托管产品和微调方法的生态支持下，看到了社区的爆炸性增长。但Stable Diffusion将他们的主要检查点免费赠送，这是他们业务的核心宗旨。在自然语言模型方面，OpenAI以GPT-3/3.5和ChatGPT为主导。但到目前为止，基于OpenAI构建的杀手级应用相对较少，而且价格已经下降了一次。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这可能只是一个暂时的现象。Stability是一家新公司，还没有把重点放在货币化上。OpenAI有可能成为一个庞大的业务，随着更多的杀手级应用的建立，它可以赚取所有NLP类别收入的很大一部分，特别是如果OpenAI与微软的产品组合进行顺利的整合。基于这些AIGC模型的大规模使用，AIGC产生大规模的收入可能离我们不远了。&lt;/span&gt;&lt;/p&gt;&lt;p ql-global-para=&quot;true&quot; line=&quot;53lr&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ZJPNu2387icUE9d3ruNOhbY4lrlsic9zf42Bz33KPw7allf8nn1jOKo71Zvq8hFsqS3ric1Am3Doib5gqcibxFIJYcQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1024&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;但是这也有负面影响，作为开源发布的模型可以由任何人托管，包括不承担大规模模型培训相关费用（高达数千或数亿美元）的外部公司。而且目前还不清楚是否有任何闭源模型能够无限期地保持其优势。例如，我们开始看到Anthropic、Cohere和Character.ai等公司建立的LLMs更接近OpenAI的性能水平，它们在类似的数据集（即互联网）上训练，并采用类似的模型架构。Stable Diffusion的例子表明，如果开源模型的性能和社区支持达到了足够高的水平，那么专有的替代品可能会发现难以竞争。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;到目前为止，对模型提供者来说，最明显的收入可能与托管有相关。对专有API的需求（例如来自OpenAI）正在迅速增长。开源模型的托管服务（如Hugging Face和Replicate）正在出现，成为方便分享和整合模型的有用枢纽，甚至在模型生产者和消费者之间产生一些间接的网络效应。还有一个强烈的假设是，有可能通过微调与企业客户的托管协议来实现盈利。&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;strong&gt;‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍&lt;span&gt;不过，除此之外，模式提供者还面临着一些大问题。&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;大众化。&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;人们普遍认为，随着时间的推移，人工智能模型的性能将趋于一致。与应用程序开发人员交谈，很明显这还没有发生，在文本和图像模型中都有强大的领导者。他们的优势不是基于独特的模型架构，而是基于高资本要求、专有的产品互动数据和稀缺的人工智能人才。这将成为一个持久的优势吗？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;‍&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;市场成熟的风险。&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;依靠模型供应商是AIGC应用公司开始创业的好方法，甚至可以依靠模型供应商发展他们的业务。但一旦他们达到规模，就会有动力建立和/或托管自己的模型。许多模型供应商的客户分布高度倾斜，少数应用程序代表了大部分的收入。如果当这些客户转向内部人工智能开发，会发生什么？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;‍&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;钱重要吗？&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;AIGC的前景是如此之强大，物极必反，如此强大也可能带来很大的危害。以至于许多模型供应商已经组织为公益公司（B corps），发行有上限的利润股份，或以其他方式将公共利益明确纳入其使命。这一点也没有妨碍他们的筹款努力。但是，围绕大多数模式提供者是否真的想要获取价值，以及他们是否应该这样做，需要一个合理的讨论。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;基础设施供应商接触一切，并获得回报&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p ql-global-para=&quot;true&quot; line=&quot;7ixv&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ZJPNu2387icUE9d3ruNOhbY4lrlsic9zf4PmLsWJOeD83reDT7rVz8E0IXpqr3CRVHjgQaQ1nRLbFGGUTIr5IbPg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1024&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;AIGC中的几乎所有东西都会在某些时候经过云托管的GPU（或TPU）服务。无论是模型供应商/研究实验室运行训练工作环境，托管公司运行推理/微调，还是应用公司进行两者的某种组合--FLOPS(&lt;/span&gt;每秒浮点运算次数&lt;span&gt;)是AIGC的命脉。在很长一段时间里，最具有颠覆性的计算技术的进展第一次受到大规模计算的约束。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;因此，AIGC市场的很多资金最终都流向了基础设施公司。&lt;/span&gt;&lt;span&gt;用一些非常粗略的数字来表示。&lt;/span&gt;&lt;span&gt;我们估计，平均而言，AIGC应用公司在机器学习算法运算花费了大约20-40%的收入。&lt;/span&gt;&lt;span&gt;这通常是直接支付给云供应商的计算实例或第三方模型供应商，而模型供应商他们反过来又将大约一半的收入用于云基础设施。&lt;/span&gt;&lt;span&gt;因此，我们有理由猜测，今天AIGC总收入的10-20%是给了云供应商。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;除此之外，训练自己的模型的初创公司已经筹集了数十亿美元的风险资本--其中大部分（在早期回合中高达80-90%）通常也是花在云供应商身上。许多公共科技公司每年在模型培训上花费数亿美元，要么与外部云供应商合作，要么直接与硬件制造商合作。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;用技术术语来说，这就是我们所说的 &quot;大量的钱&quot;--尤其是对于一个新生的市场。其中大部分是花在亚马逊网络服务（AWS）、谷歌云平台（GCP）和微软Azure这三大云上。这些云供应商每年总共花费超过1000亿美元的资本支出，以确保他们拥有最全面、最可靠和最具成本竞争力的平台。特别是在AIGC方面，他们也受益于供应链的限制，因为他们可以优先获得稀缺的硬件（如Nvidia A100和H100 GPU）。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;但有趣的是，我们开始看到有力的竞争出现了，像甲骨文这样的挑战者已经通过大笔的资本支出和销售奖励取得了进展。一些初创公司，如Coreweave和Lambda Labs，已经通过专门针对大型模型开发商的解决方案迅速成长。他们在成本、可用性和个性化的支持方面进行竞争。他们还公开了更多的细化资源抽象（即容器），而大型云由于GPU虚拟化的限制，只提供虚拟机实例。&lt;/span&gt;&lt;/p&gt;&lt;p ql-global-para=&quot;true&quot; line=&quot;Kuu4&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ZJPNu2387icUE9d3ruNOhbY4lrlsic9zf46y51DbCmzibCicFY4YIL248EP8hVOhgzaVqVNoIKyd2wevK0pqgclI0g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1024&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在这市场的背后，运行绝大部分人工智能工作负载的云计算平台和硬件平台，也许是迄今为止AIGC最大赢家。Nvidia公司在2023财年第三季度报告了38亿美元的数据中心GPU收入，其中有相当一部分用于AIGC的使用案例。他们通过几十年来对GPU架构的投资，强大的软件生态系统，以及在学术界的深入使用，已经围绕这一业务建立了强大的护城河。最近的一项分析发现，Nvidia的GPU在研究论文中被引用的次数是顶级AI芯片初创公司的90倍。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;其他硬件选择确实存在，包括谷歌张量处理单元（TPU）；AMD Instinct GPU；AWS Inferentia和Trainium芯片；以及Cerebras、Sambanova和Graphcore等初创公司的AI加速器。英特尔在游戏中姗姗来迟，也正以其高端的Habana芯片和Ponte Vecchio GPU进入市场。但到目前为止，这些新芯片中很少有占据重要市场份额的。两个值得关注的例外是谷歌和台积电，前者的TPU已经在Stable Diffusion的社区和一些大型GCP交易中获得注意力，台积电被认为制造这里列出的所有芯片，包括Nvidia GPU（英特尔使用自己的工厂和台积电混合制造其芯片）。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;换句话说，基础设施是AIGC技术堆栈中一个有利可图的、持久的、似乎可以建立护城河的业务。对基础设施公司来说，需要面临的问题有：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;持续无状态的工作负载。无论你在哪里租用Nvidia GPU都是一样的。大多数人工智能工作负载是无状态的，也就是说，模型推理不需要附加的数据库或存储（除了模型权重本身）。这意味着人工智能工作负载可能比传统的应用工作负载更容易在云端移植。在这种情况下，云供应商如何创造粘性，防止客户跳到最便宜的选择？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在芯片稀缺性的终结以前生存下来。云供应商和Nvidia本身的定价一直受到最理想的GPU稀缺供应的影响。一个供应商告诉我们，A100的上市价格自推出以来已经上升，这对计算硬件来说是非常不寻常的。当这种供应限制最终通过增加生产和/或采用新的硬件平台而消除时，这将如何影响云供应商？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;挑战者能否突破重围？我们坚信，垂直云将以更专业的产品从三巨头手中夺取市场份额。到目前为止，在人工智能领域，挑战者已经通过适度的技术差异化和Nvidia的支持，获得了有意义的进步，对他们来说，现有的云供应商既是最大的客户又是新兴的竞争对手。长期的问题是，这是否足以克服三大巨头的规模优势？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;那么......价值将在哪里累积？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;当然，我们还不知道，但根据我们对AIGC的早期数据，结合我们对早期人工智能/ML公司的经验，我们的直觉是这样的：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;今天，在AIGC市场中似乎没有任何系统性的护城河。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;应用程序缺乏强大的产品差异化，因为它们使用类似的模型&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;模型面临不明确的长期差异化，因为它们是在类似的数据集和类似的架构上训练的&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;云供应商缺乏深刻的技术差异化，因为它们运行相同的GPU，甚至硬件公司在相同的工厂生产他们的芯片。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;当然，还有标准的护城河：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;规模护城河（&quot;我可能比你筹集更多的资金！&quot;）&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;供应链护城河（&quot;我有GPU，你没有！&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&quot;），&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;生态系统护城河（&quot;每个人都已经在使用我的软件！&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&quot;）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;算法护城河（&quot;我们比你更聪明！&lt;/span&gt;&lt;span&gt;&quot;）&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;分销护城河（&quot;我已经有一个销售团队比你拥有更多的客户！&quot;）&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;数据管道护城河（&quot;我爬过的互联网比你多！&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;strong&gt;&quot;）&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;但这些护城河都不可能长期持久。要判断强大的、直接的网络效应是否在AIGC堆栈的任何一层中占据优势还为时尚早。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;span&gt;根据现有的数据，目前还不清楚在生成性人工智能领域是否会出现长期的、赢家通吃的局面。这很奇怪。但对我们来说，这是个好消息。这个市场的潜在规模很难把握，该市场的目标对象介于所有软件和所有人类能力之间，所以我们预计会有很多、很多的参与者，并在堆栈的各个层面进行健康竞争。我们也期望横向和纵向的公司都能成功，最好的方法是由终端市场和最终用户决定的。例如，如果终端产品的主要差异化是人工智能本身，那么垂直化（即把面向用户的应用程序与AIGC模型紧密结合）很可能会胜出。而如果人工智能是一个更大的、长尾的功能集的一部分，那么就更有可能发生横向化。当然，随着时间的推移，我们也应该看到更多传统的护城河的建立--我们甚至可能看到新类型的护城河占据上风。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;无论怎样，我们可以肯定的一点是，AIGC改变了游戏,我们都在实时学习规则，有大量的价值将被释放出来，而科技前景将因此而显得非常、非常不同。而我们正为此而努力。&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&lt;br/&gt;&lt;br/&gt;‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;mp-style-type data-value=&quot;3&quot;/&gt;&lt;/p&gt;&lt;/div&gt;

          
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>