<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>23491348e22b18ef9bc56d8dfe466d64</guid>
<title>1 周岁发布MVP版本，凹语言有话说！</title>
<link>https://toutiao.io/k/qc5k6pj</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;profile_inner&quot;&gt;
                  &lt;strong class=&quot;profile_nickname&quot;&gt;OSC开源社区&lt;/strong&gt;
                  &lt;img class=&quot;profile_avatar&quot; id=&quot;js_profile_qrcode_img&quot; src=&quot;&quot; alt=&quot;&quot;/&gt;

                  &lt;p class=&quot;profile_meta&quot;&gt;
                  &lt;label class=&quot;profile_meta_label&quot;&gt;Weixin ID&lt;/label&gt;
                  &lt;span class=&quot;profile_meta_value&quot;&gt;oschina2013&lt;/span&gt;
                  &lt;/p&gt;

                  &lt;p class=&quot;profile_meta&quot;&gt;
                  &lt;label class=&quot;profile_meta_label&quot;&gt;About Feature&lt;/label&gt;
                  &lt;span class=&quot;profile_meta_value&quot;&gt;开源中国，为开发者服务&lt;/span&gt;
                  &lt;/p&gt;
                &lt;/div&gt;
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>9ae198ff097aa4e84307887a93507e42</guid>
<title>开始学习 Kafka，一文掌握基本概念｜Kafka 系列 一</title>
<link>https://toutiao.io/k/0lcdh4q</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content js_underline_content&amp;#10;                       autoTypeSetting24psection&amp;#10;            &quot; id=&quot;js_content&quot;&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;为什么学习 Kafka&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Kafka 在当下求职市场中可以说是应聘的必备条件之一，想要应聘高薪岗位，就需要熟练掌握这款优秀的消息引擎。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于当下环境来说，各个公司尤其是互联网公司的数据量越来越大，需要存储和处理大量的数据，但是计算机的瞬时处理能力是有限的，这就需要一款消息引擎来帮助我们缓解流量激增的问题，平滑将数据传导到下游系统中。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;消息引擎系统是一组规范：企业利用这组规范在不同系统之间传递语义准确的消息，实现松耦合的异步式数据传递。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5611111111111111&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/jPrkiafKmlHXF2MbjKalUPibTWDuP5Ru2hvcUNNygCkGFLJJZ3CM0U44EJCWSfic1QYzlaQw1hm7zucBpX1JO88CQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;作为一款消息引擎，它主要有以下使用场景。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;异步处理&lt;/span&gt;：同步调用转换成异步消息通知，在消费者中实现对应的业务处理。比如在一个交易场景中，系统的调用链路很长，订单创建完成后需要检查商品的库存、扣库存、发短信、App 通知等功能，如果都放在一个接口同步调用，接口响应时间会变得很长。但是如果把这些逻辑都利用消息引擎做异步处理逻辑将变得很轻量级。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;应用解耦&lt;/span&gt;：减少应用直接的强依赖，利用消息队列通信，从而变成一种松耦合的结构。比如如果用户注册系统和红包系统利用接口同步通信，红包系统挂掉用户将无法注册，造成巨大损失。但是如果用户注册后发出一条注册消息，红包系统恢复后慢慢去消费，则可以解耦，提高系统的可用性。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;削峰填谷&lt;/span&gt;：利用消息中间件缓冲上游生产者大量流量，从而使消费者消费流量整体平滑。对于消息生产能力很强的上游系统，如果没有消息中间件的保护，下游系统可能会直接被压垮导致全链路服务雪崩。比如秒杀业务场景，上游业务发起下单请求，下游业务执行秒杀业务（库存检查，库存冻结，余额冻结，生成订单等等），下游业务处理的逻辑是相当复杂的，并发能力有限，如果上游服务不做限流策略，瞬时可能把下游服务压垮。针对此场景，我们可以利用 MQ 来做削峰填谷，让高峰流量填充低谷空闲资源，达到系统资源的合理利用。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;综合以上场景，这就要求一款消息引擎需要具备高可靠、高性能的特点，Kafka 就满足这样的要求。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;设计消息系统应该注意什么？&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;消息系统的不同成员之间需要利用消息进行信息的传递，这就涉及到两个重要的内容：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;消息传递的格式是什么？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;消息是如何传递的，协议是什么？&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.2603305785123966&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/jPrkiafKmlHXF2MbjKalUPibTWDuP5Ru2hzhE1KXmb96HfUJVFWpLCWibcLbWVd2qym6ko7hAibEIsu3PdFaiaNgt7g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;484&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;消息传递的格式选择有很多，比如 JSON、XML、Protobuf 等，对于 Kafka 来说，他使用的是纯二进制的字节序列，当然消息还是结构化的，只是在使用之前都要将其转换成二进制的字节序列。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;消息系统中，有两种常用的传输协议，点对点模型和发布订阅模型。这两种协议，Kafka 都支持。&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;点对点模型&lt;/span&gt;：也叫消息队列模型。一个系统发送方发送的消息只能被指定接收方接收，其他任何系统都不能再读取 发送的消息。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.4691943127962086&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/jPrkiafKmlHXF2MbjKalUPibTWDuP5Ru2hmuqfDnvp4oJpxb8NTYGTrzwNANwwgdC1Ds8h9lANRfAF753OTf9BCA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;422&quot;/&gt;&lt;/figure&gt;&lt;ol start=&quot;2&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;发布 / 订阅模型&lt;/span&gt;：有一个主题（Topic）的概念，发送方也称为发布者（Publisher），接收方称为订阅者（Subscriber）。和点对点模型不同的是，这个模型可能存在多个发布者向相同的主题发送消息，而订阅者也可能存在多个，它们都能接收到相同主题的消息。举个例子，杂志订阅就是一种典型的发布 / 订阅模型，不同的居民可以订阅相同的杂志。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6724890829694323&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/jPrkiafKmlHXF2MbjKalUPibTWDuP5Ru2hsTjsdnZpR4gJUZiavT6jJmqoAL9PFFHHLyJQqSfo05sE9pCUltQBTzQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;916&quot;/&gt;&lt;/figure&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;Kafka 的基本概念和结构&lt;/span&gt;&lt;/h1&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;生产者和消费者&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;学习 kafka 首先要明白其涉及的概念和术语，这是进入 Kafka 世界的门票。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;作为一款消息系统，Kafka 提供了完整的消息发布和订阅解决方案。与其他消息系统一样，在这个系统中会有生产者和消费者以及 Topic 的角色。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;消息(Record)：信息传递的载体。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;生产者(Producer)：向一个或多个 Topic 发布消息的应用程序。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;消费者(Consumer)：订阅一个或多个 Topic 接收消息的应用程序。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;主题(Topic)：发布订阅的主题，同类型消息存储在同样的主题中，是一个逻辑上的划分，区分不同的业务。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;消费者和生产者都是&lt;span&gt;客户端&lt;/span&gt;（Clients），既然有客户端就有&lt;span&gt;服务端&lt;/span&gt;。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;Broker 服务端&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;服务实例(Broker)：Kafka 的服务器端由被称为 Broker 的服务进程构成，一个 Kafka 集群由多个 Broker 组成。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Broker 负责接收和处理客户端发送过来的请求，以及对消息进行持久化。Broker 通常分散运行在不同的机器上，这样如果集群中某一台机器宕机，其他机器上的 Broker 也可以对外提供服务。这种多个 Broker 部署方式的方式保证了 Kafka 的高可用。&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8410852713178295&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/jPrkiafKmlHXF2MbjKalUPibTWDuP5Ru2hndjIf8siaue9Dg624NUFVhoOGIS0oRnzW4TMQggbqNAZCia0Fr0QhIQQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;516&quot;/&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;分片和副本&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;分区or 分片(Partition)：。kafka 将 一个Topic 中的消息分成多份，分别存储在不同的 Broker 里，这每一段消息被 kafka 称为 Partition。每个 Partition 都一个有序不变的消息序列，每个 Topic 下可以有多个 Partition。多个分片满足&lt;span&gt;可扩展性&lt;/span&gt;和&lt;span&gt;负载均衡&lt;/span&gt;。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4388888888888889&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/jPrkiafKmlHXF2MbjKalUPibTWDuP5Ru2hrYcHGHqQtUafLDM0QTS4rHd1uVAaZh4cDc3dFkSicmdxbzCERBRWWRA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;为什么要有 Partition？&lt;/strong&gt;&lt;span&gt;因&lt;/span&gt;&lt;span&gt;为一个 Topic 中的消息可能非常多，多到一台Broker存不下，因此需要拆分成多段存储在不同的机器里，并且这样做还能&lt;/span&gt;&lt;span&gt;提高读写性能&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;副本(Replica)：Kafka 中同一条消息能够被拷贝多份冗余存储，也就是副本。副本分为领导者副本（Leader Replica）和追随者副本（Follower Replica）。副本是在分区层级下的，即每个分区可配置多个副本实现高可用。（默认分区副本数不得超过kafka节点数），&lt;span&gt;多个副本满足高可用&lt;/span&gt;，副本数量越多，可靠性越高。&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;领导者副本（Leader Replica）：只有Leader能对客户端提供服务。生产者总是向领导者副本写消息，消费者总是从领导者副本读消息。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;追随者副本（Follower Replica）：Follower 只能向领导者副本发送请求，请求领导者把最新生产的消息发给它，这样它能保持与领导者的同步，不对客户端提供服务。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;位移&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由于 Kafka 中的消息都是增量存储的，所以读取和消费消息都有一个位移的概念。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4888888888888889&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/jPrkiafKmlHXF2MbjKalUPibTWDuP5Ru2hUuULIapte1iaWcUnK5E8icdNJABeCHyIKQ6aS7X4R4f7ic4CZroMWHTwg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/figure&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;消息位移(Offset)：表示 每个Partition中每条消息的位置信息，是一个单调递增且不会改变的值。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;消费者位移(Consumer Offset)：表示消费者消费的进度，每个消费者都有自己的消费者位移。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;消费者组(Consumer Group)：多个消费者实例共同组成的一个消费者组，同时消费多个分区以实现高吞吐量。&lt;span/&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;hr/&gt;&lt;p cid=&quot;n0&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span md-inline=&quot;plain&quot;&gt;号外！号外！&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n4&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;&lt;span&gt;Java 极客技术微信群中有很多优秀的小伙伴在讨论技术，偶尔还有不定期的资料分享和红包发放！如果你想提升自己，并且想和优秀的人一起进步，感兴趣的朋友，&lt;/span&gt;&lt;strong&gt;可以在下方公众号后台回复：666&lt;/strong&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mp-common-profile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-id=&quot;MzkzODE3OTI0Ng==&quot; data-pluginname=&quot;mpprofile&quot; data-headimg=&quot;https://mmbiz.qpic.cn/mmbiz_png/tWOhQMr1wdDwibGUW8HOfmZfVuVryhfO8P8R3vJGrHBmHybX2F0GgHUfL4O9ibP4pYKPNTKQW8um3D6bnqibjLOsA/0?wx_fmt=png&quot; data-nickname=&quot;Java极客技术&quot; data-alias=&quot;Javageektech&quot; data-signature=&quot;java教程 java开发 java入门 java学习 java小课 java进阶 java知识 java技术 java精通 java爬虫 java编程 ，java程序员、架构师都在这里。&quot; data-from=&quot;0&quot; data-is_biz_ban=&quot;0&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8953703703703704&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/tWOhQMr1wdBz3wctt6nZibgq4Z98xvtBIEqUXr9keIkg2e2r0icfNibHPyV4Y8IFBWPgLRWUs6RRIfZC2jCQjY72Q/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-w=&quot;1080&quot;/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;喜欢就&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;分享&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;认同就&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;点赞&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;支持就&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;在看&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;一键四连，你的offer也四连&lt;/strong&gt;&lt;/span&gt;&lt;img class=&quot;rich_pages __bg_gif wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;539&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;105&quot; data-ratio=&quot;0.1949685534591195&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/ianc8gowe95SWT9QpjR1RWJoYvwicx4prnZMR2NxgzMNg7zCJTO7YR2CmgwPmHdfz8xNWMw2WxljnnJjU5PHsnSw/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;636&quot;/&gt;&lt;/p&gt;&lt;/div&gt;

          
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>2f9be768bbd6e1e96d3f5fc3e27a1033</guid>
<title>SpringBoot3数据库集成</title>
<link>https://toutiao.io/k/hy5jdwa</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content js_underline_content&amp;#10;                       autoTypeSetting24psection&amp;#10;            &quot; id=&quot;js_content&quot;&gt;&lt;blockquote&gt;&lt;p&gt;标签：Jdbc.Druid.Mybatis.Plus；&lt;/p&gt;&lt;/blockquote&gt;&lt;h1&gt;&lt;span&gt;一、简介&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;项目工程中，集成数据库实现对数据的增晒改查管理，是最基础的能力，而对于这个功能的实现，其组件选型也非常丰富；&lt;/p&gt;&lt;p&gt;通过如下几个组件来实现数据库的整合；&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Druid连接池&lt;/strong&gt;：阿里开源的数据库连接池，并且提供&lt;code&gt;SQL&lt;/code&gt;执行的监控能力；&lt;/p&gt;&lt;p&gt;&lt;strong&gt;MybatisPlus框架&lt;/strong&gt;：基于Mybatis框架的增强工具包，可以用于简化持久层开发，显著的提高效率；&lt;/p&gt;&lt;p&gt;&lt;strong&gt;MySQL数据库&lt;/strong&gt;：常用的关系型数据库组件，在案例中使用&lt;code&gt;Druid&lt;/code&gt;组件来连接数据库；&lt;/p&gt;&lt;h1&gt;&lt;span&gt;二、工程搭建&lt;/span&gt;&lt;/h1&gt;&lt;h2&gt;1、工程结构&lt;/h2&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.9525547445255474&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/uUIibyNXbAvDqfH0znMPiaU93Eicys0iaErlxYWDt1zmn7pI62BIfbQcGyem8xlk4TrYg9d4PhUtMOXmuiacIJmsiafg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;822&quot;/&gt;&lt;/p&gt;&lt;h2&gt;2、依赖管理&lt;/h2&gt;&lt;p&gt;Druid连接池使用的是&lt;code&gt;1.2.18&lt;/code&gt;版本；在&lt;code&gt;mybatis-plus&lt;/code&gt;组件中依赖&lt;code&gt;mybatis&lt;/code&gt;框架的&lt;code&gt;3.5.10&lt;/code&gt;版本；MySQL本地环境是&lt;code&gt;5.7&lt;/code&gt;版本，这里依赖包使用&lt;code&gt;8.0.19&lt;/code&gt;版本；&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;&amp;lt;!-- MySql数据库 --&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;mysql&lt;span&gt;&amp;lt;/&lt;span&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;mysql-connector-java&lt;span&gt;&amp;lt;/&lt;span&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;${mysql.version}&lt;span&gt;&amp;lt;/&lt;span&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;!-- Druid组件 --&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;com.alibaba&lt;span&gt;&amp;lt;/&lt;span&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;druid-spring-boot-3-starter&lt;span&gt;&amp;lt;/&lt;span&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;${druid-spring-boot.version}&lt;span&gt;&amp;lt;/&lt;span&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;!-- JDBC依赖 --&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span&gt;&amp;lt;/&lt;span&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;spring-boot-starter-jdbc&lt;span&gt;&amp;lt;/&lt;span&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;${spring-boot.version}&lt;span&gt;&amp;lt;/&lt;span&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;!-- MybatisPlus组件 --&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;com.baomidou&lt;span&gt;&amp;lt;/&lt;span&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;mybatis-plus-boot-starter&lt;span&gt;&amp;lt;/&lt;span&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;${mybatis-plus.version}&lt;span&gt;&amp;lt;/&lt;span&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h1&gt;&lt;span&gt;三、Druid连接池&lt;/span&gt;&lt;/h1&gt;&lt;h2&gt;1、配置文件&lt;/h2&gt;&lt;p&gt;有关于&lt;code&gt;Druid&lt;/code&gt;连接池的可配置参数还有很多，可以参考源码中的描述或者官方案例，此处只提供部分常见的参数配置；&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;spring:&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;datasource:&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;type:&lt;/span&gt; &lt;span&gt;com.alibaba.druid.pool.DruidDataSource&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;druid:&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;# 数据库&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;url:&lt;/span&gt; &lt;span&gt;jdbc:mysql://localhost:3306/boot-jdbc&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;username:&lt;/span&gt; &lt;span&gt;root&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;password:&lt;/span&gt; &lt;span&gt;123456&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;driver-class-name:&lt;/span&gt; &lt;span&gt;com.mysql.cj.jdbc.Driver&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;# 连接池-初始化大小&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;initial-size:&lt;/span&gt; &lt;span&gt;10&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;# 连接池-最大连接数&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;max-active:&lt;/span&gt; &lt;span&gt;100&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;# 最大等待时间&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;max-wait:&lt;/span&gt; &lt;span&gt;60000&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;# 连接池-最小空闲数&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;min-idle:&lt;/span&gt; &lt;span&gt;10&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;# 检测空闲连接&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;test-while-idle:&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;# 最小空闲时间&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;min-evictable-idle-time-millis:&lt;/span&gt; &lt;span&gt;300000&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;1.2 配置类&lt;/h2&gt;&lt;p&gt;配置两个Bean对象，分别&lt;code&gt;DruidDataSource&lt;/code&gt;类和&lt;code&gt;JdbcTemplate&lt;/code&gt;类；&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;@Configuration&lt;/span&gt;&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;DruidConfig&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Bean&lt;/span&gt;(&lt;span&gt;&quot;dataSource&quot;&lt;/span&gt;)&lt;br/&gt;    &lt;span&gt;@ConfigurationProperties&lt;/span&gt;(prefix = &lt;span&gt;&quot;spring.datasource.druid&quot;&lt;/span&gt;)&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; DruidDataSource &lt;span&gt;dataSource&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; DruidDataSource();&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Bean&lt;/span&gt;(&lt;span&gt;&quot;jdbcTemplate&quot;&lt;/span&gt;)&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; JdbcTemplate &lt;span&gt;jdbcTemplate&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; JdbcTemplate(dataSource());&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h1&gt;&lt;span&gt;四、JDBC操作&lt;/span&gt;&lt;/h1&gt;&lt;h2&gt;1、数据库表&lt;/h2&gt;&lt;p&gt;在&lt;code&gt;boot-jdbc&lt;/code&gt;数据库中添加两张测试表，用户基础信息&lt;code&gt;tb_user&lt;/code&gt;表和用户扩展信息&lt;code&gt;tb_user_extd&lt;/code&gt;表，脚本文件在工程的&lt;code&gt;resources/sql-script&lt;/code&gt;目录下；&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;CREATE&lt;/span&gt; &lt;span&gt;TABLE&lt;/span&gt; &lt;span&gt;`tb_user`&lt;/span&gt; (&lt;br/&gt;  &lt;span&gt;`id`&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;(&lt;span&gt;11&lt;/span&gt;) &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; AUTO_INCREMENT &lt;span&gt;COMMENT&lt;/span&gt; &lt;span&gt;&#x27;主键ID&#x27;&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;`user_name`&lt;/span&gt; &lt;span&gt;varchar&lt;/span&gt;(&lt;span&gt;30&lt;/span&gt;) &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; &lt;span&gt;COMMENT&lt;/span&gt; &lt;span&gt;&#x27;用户名称&#x27;&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;`email`&lt;/span&gt; &lt;span&gt;varchar&lt;/span&gt;(&lt;span&gt;50&lt;/span&gt;) &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; &lt;span&gt;COMMENT&lt;/span&gt; &lt;span&gt;&#x27;邮件&#x27;&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;`phone`&lt;/span&gt; &lt;span&gt;varchar&lt;/span&gt;(&lt;span&gt;20&lt;/span&gt;) &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; &lt;span&gt;COMMENT&lt;/span&gt; &lt;span&gt;&#x27;手机号&#x27;&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;`create_time`&lt;/span&gt; datetime &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; &lt;span&gt;COMMENT&lt;/span&gt; &lt;span&gt;&#x27;创建时间&#x27;&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;`update_time`&lt;/span&gt; datetime &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; &lt;span&gt;COMMENT&lt;/span&gt; &lt;span&gt;&#x27;更新时间&#x27;&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;`state`&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;(&lt;span&gt;1&lt;/span&gt;) &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;&#x27;1&#x27;&lt;/span&gt; &lt;span&gt;COMMENT&lt;/span&gt; &lt;span&gt;&#x27;状态：1启用，2删除&#x27;&lt;/span&gt;,&lt;br/&gt;  PRIMARY &lt;span&gt;KEY&lt;/span&gt; (&lt;span&gt;`id`&lt;/span&gt;)&lt;br/&gt;) &lt;span&gt;ENGINE&lt;/span&gt;=&lt;span&gt;InnoDB&lt;/span&gt; &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;CHARSET&lt;/span&gt;=utf8 &lt;span&gt;COMMENT&lt;/span&gt;=&lt;span&gt;&#x27;用户基础信息&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;CREATE&lt;/span&gt; &lt;span&gt;TABLE&lt;/span&gt; &lt;span&gt;`tb_user_extd`&lt;/span&gt; (&lt;br/&gt;  &lt;span&gt;`id`&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;(&lt;span&gt;11&lt;/span&gt;) &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; AUTO_INCREMENT &lt;span&gt;COMMENT&lt;/span&gt; &lt;span&gt;&#x27;主键ID&#x27;&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;`user_id`&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;(&lt;span&gt;11&lt;/span&gt;) &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; &lt;span&gt;COMMENT&lt;/span&gt; &lt;span&gt;&#x27;用户ID&#x27;&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;`city_name`&lt;/span&gt; &lt;span&gt;varchar&lt;/span&gt;(&lt;span&gt;50&lt;/span&gt;) &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; &lt;span&gt;COMMENT&lt;/span&gt; &lt;span&gt;&#x27;城市名称&#x27;&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;`school`&lt;/span&gt; &lt;span&gt;varchar&lt;/span&gt;(&lt;span&gt;200&lt;/span&gt;) &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; &lt;span&gt;COMMENT&lt;/span&gt; &lt;span&gt;&#x27;学校名称&#x27;&lt;/span&gt;,&lt;br/&gt;  PRIMARY &lt;span&gt;KEY&lt;/span&gt; (&lt;span&gt;`id`&lt;/span&gt;),&lt;br/&gt;  &lt;span&gt;KEY&lt;/span&gt; &lt;span&gt;`user_id_index`&lt;/span&gt; (&lt;span&gt;`user_id`&lt;/span&gt;)&lt;br/&gt;) &lt;span&gt;ENGINE&lt;/span&gt;=&lt;span&gt;InnoDB&lt;/span&gt; &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;CHARSET&lt;/span&gt;=utf8 &lt;span&gt;COMMENT&lt;/span&gt;=&lt;span&gt;&#x27;用户扩展信息&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;2、JdbcTemplate&lt;/h2&gt;&lt;p&gt;&lt;code&gt;JdbcTemplate&lt;/code&gt;是由&lt;code&gt;spring-jdbc&lt;/code&gt;组件提供，支持&lt;code&gt;DataSource&lt;/code&gt;的注册，是对数据库操作的深层封装，支持一系列数据操作方法；&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;@Service&lt;/span&gt;&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;JdbcService&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; Logger logger = LoggerFactory.getLogger(JdbcService&lt;span&gt;.&lt;span&gt;class&lt;/span&gt;)&lt;/span&gt;;&lt;br/&gt;    &lt;span&gt;@Resource&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; JdbcTemplate jdbcTemplate ;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;/**&lt;br/&gt;     * 添加数据&lt;br/&gt;     */&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; &lt;span&gt;addData&lt;/span&gt; &lt;span&gt;(User user)&lt;/span&gt;&lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; jdbcTemplate.update(&lt;br/&gt;                &lt;span&gt;&quot;INSERT INTO `tb_user` (`user_name`, `email`, `phone`, `create_time`, `update_time`) VALUES (?, ?, ?, ?, ?)&quot;&lt;/span&gt;,&lt;br/&gt;                user.getUserName(),user.getEmail(),user.getPhone(),user.getCreateTime(),user.getUpdateTime());&lt;br/&gt;    }&lt;br/&gt;    &lt;span&gt;/**&lt;br/&gt;     * 查询全部&lt;br/&gt;     */&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; List&amp;lt;User&amp;gt; &lt;span&gt;queryAll&lt;/span&gt; &lt;span&gt;()&lt;/span&gt;&lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; jdbcTemplate.query(&lt;span&gt;&quot;SELECT * FROM tb_user WHERE state=1&quot;&lt;/span&gt;,&lt;span&gt;new&lt;/span&gt; BeanPropertyRowMapper&amp;lt;&amp;gt;(User&lt;span&gt;.&lt;span&gt;class&lt;/span&gt;))&lt;/span&gt;;&lt;br/&gt;    }&lt;br/&gt;    &lt;span&gt;/**&lt;br/&gt;     * 修改字段&lt;br/&gt;     */&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; &lt;span&gt;updateName&lt;/span&gt; &lt;span&gt;(Integer id,String name)&lt;/span&gt;&lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; jdbcTemplate.update(&lt;span&gt;&quot;UPDATE `tb_user` SET `user_name` = ? WHERE `id` = ?&quot;&lt;/span&gt;,name,id);&lt;br/&gt;    }&lt;br/&gt;    &lt;span&gt;/**&lt;br/&gt;     * 主键删除&lt;br/&gt;     */&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; &lt;span&gt;deleteId&lt;/span&gt; &lt;span&gt;(Integer id)&lt;/span&gt;&lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; jdbcTemplate.update(&lt;span&gt;&quot;DELETE FROM `tb_user` WHERE `id` = ?&quot;&lt;/span&gt;,id);&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h1&gt;&lt;span&gt;五、MybatisPlus框架&lt;/span&gt;&lt;/h1&gt;&lt;h2&gt;1、配置管理&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;1.1 配置类&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;在配置类中，添加&lt;code&gt;MapperScan&lt;/code&gt;注解用来扫描和注册MyBatis框架的&lt;code&gt;mapper&lt;/code&gt;接口，以及设置&lt;code&gt;PaginationInnerInterceptor&lt;/code&gt;分页拦截器；&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;@Configuration&lt;/span&gt;&lt;br/&gt;&lt;span&gt;@MapperScan&lt;/span&gt;(&lt;span&gt;&quot;com.boot.jdbc.mapper&quot;&lt;/span&gt;)&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;MybatisConfig&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;/**&lt;br/&gt;     * 分页&lt;br/&gt;     */&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;@Bean&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; MybatisPlusInterceptor &lt;span&gt;paginationInterceptor&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        MybatisPlusInterceptor interceptor = &lt;span&gt;new&lt;/span&gt; MybatisPlusInterceptor();&lt;br/&gt;        interceptor.addInnerInterceptor(&lt;span&gt;new&lt;/span&gt; PaginationInnerInterceptor(DbType.MYSQL));&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; interceptor;&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;1.2 配置文件&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;在日志中输出&lt;code&gt;mybatis&lt;/code&gt;框架解析的SQL语句，方便在测试的时候快速发现问题；&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;mybatis-plus:&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;configuration:&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;log-impl:&lt;/span&gt; &lt;span&gt;org.apache.ibatis.logging.stdout.StdOutImpl&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;2、Mapper&lt;/h2&gt;&lt;p&gt;&lt;code&gt;Mapper&lt;/code&gt;接口编写数据库操作方法，&lt;code&gt;Mapper.xml&lt;/code&gt;文件中定义数据库执行的&lt;code&gt;SQL&lt;/code&gt;语句，在&lt;code&gt;mybatis-plus&lt;/code&gt;组件中提供很多单表操作的默认方法实现，也可以自定义方法；&lt;/p&gt;&lt;p&gt;&lt;strong&gt;2.1 Mapper接口&lt;/strong&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;interface&lt;/span&gt; &lt;span&gt;UserMapper&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;BaseMapper&lt;/span&gt;&amp;lt;&lt;span&gt;User&lt;/span&gt;&amp;gt; &lt;/span&gt;{&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;/**&lt;br/&gt;     * 自定义分页&lt;br/&gt;     */&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;IPage&amp;lt;UserModel&amp;gt; &lt;span&gt;queryUserPage&lt;/span&gt;&lt;span&gt;(@Param(&lt;span&gt;&quot;page&quot;&lt;/span&gt;)&lt;/span&gt; IPage&amp;lt;User&amp;gt; page)&lt;/span&gt;;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;2.2 Mapper文件&lt;/strong&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;mapper&lt;/span&gt; &lt;span&gt;namespace&lt;/span&gt;=&lt;span&gt;&quot;com.boot.jdbc.mapper.UserMapper&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;select&lt;/span&gt; &lt;span&gt;id&lt;/span&gt;=&lt;span&gt;&quot;queryUserPage&quot;&lt;/span&gt; &lt;span&gt;resultType&lt;/span&gt;=&lt;span&gt;&quot;com.boot.jdbc.entity.UserModel&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;        SELECT&lt;br/&gt;            tb1.id userId,&lt;br/&gt;            tb1.user_name userName,&lt;br/&gt;            tb1.email,&lt;br/&gt;            tb1.phone,&lt;br/&gt;            tb1.create_time createTime,&lt;br/&gt;            tb1.update_time updateTime,&lt;br/&gt;            tb1.state,&lt;br/&gt;            tb2.school,&lt;br/&gt;            tb2.city_name cityName&lt;br/&gt;        FROM tb_user tb1&lt;br/&gt;        LEFT JOIN tb_user_extd tb2 ON tb1.id = tb2.user_id&lt;br/&gt;        WHERE tb1.state=&#x27;1&#x27;&lt;br/&gt;        ORDER BY tb1.id DESC&lt;br/&gt;    &lt;span&gt;&amp;lt;/&lt;span&gt;select&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;mapper&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;3、单元测试&lt;/h2&gt;&lt;p&gt;编写&lt;code&gt;UserMapper&lt;/code&gt;接口测试，很多默认实现的方法参考&lt;code&gt;BaseMapper&lt;/code&gt;接口即可，或者参考&lt;code&gt;IService&lt;/code&gt;接口和&lt;code&gt;ServiceImpl&lt;/code&gt;实现类，提供了更加丰富的扩展方法；&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;UserMapperTest&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Resource&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; UserMapper userMapper ;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Test&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;testInsert&lt;/span&gt; &lt;span&gt;()&lt;/span&gt;&lt;/span&gt;{&lt;br/&gt;        List&amp;lt;User&amp;gt; userBatch = Arrays.asList(&lt;br/&gt;                &lt;span&gt;new&lt;/span&gt; User(&lt;span&gt;null&lt;/span&gt;,&lt;span&gt;&quot;Zhang三&quot;&lt;/span&gt;,&lt;span&gt;&quot;Zhang@qq.com&quot;&lt;/span&gt;,&lt;span&gt;&quot;18623459687&quot;&lt;/span&gt;,&lt;span&gt;new&lt;/span&gt; Date(),&lt;span&gt;new&lt;/span&gt; Date(),&lt;span&gt;1&lt;/span&gt;));&lt;br/&gt;        userBatch.forEach(userMapper::insert);&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Test&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;testUpdate&lt;/span&gt; &lt;span&gt;()&lt;/span&gt;&lt;/span&gt;{&lt;br/&gt;        User user = userMapper.selectById(&lt;span&gt;1&lt;/span&gt;);&lt;br/&gt;        user.setState(&lt;span&gt;2&lt;/span&gt;);&lt;br/&gt;        userMapper.updateById(user);&lt;br/&gt;    }&lt;br/&gt;    &lt;br/&gt;    &lt;span&gt;@Test&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;testDelete&lt;/span&gt; &lt;span&gt;()&lt;/span&gt;&lt;/span&gt;{&lt;br/&gt;        userMapper.deleteById(&lt;span&gt;7&lt;/span&gt;);&lt;br/&gt;    }&lt;br/&gt;    &lt;br/&gt;    &lt;span&gt;@Test&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;testQuery&lt;/span&gt; &lt;span&gt;()&lt;/span&gt;&lt;/span&gt;{&lt;br/&gt;        List&amp;lt;User&amp;gt; userColumnsList = &lt;span&gt;new&lt;/span&gt; LambdaQueryChainWrapper&amp;lt;&amp;gt;(userMapper)&lt;br/&gt;                .select(User::getUserName,User::getPhone,User::getEmail)&lt;br/&gt;                .like(User::getPhone,&lt;span&gt;&quot;189&quot;&lt;/span&gt;).orderByDesc(User::getId).last(&lt;span&gt;&quot;limit 2&quot;&lt;/span&gt;).list();&lt;br/&gt;        userColumnsList.forEach(System.out::println);&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Test&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;testPage&lt;/span&gt; &lt;span&gt;()&lt;/span&gt;&lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;// 1、默认分页查询&lt;/span&gt;&lt;br/&gt;        IPage&amp;lt;User&amp;gt; userPage = &lt;span&gt;new&lt;/span&gt; Page&amp;lt;&amp;gt;(&lt;span&gt;2&lt;/span&gt;,&lt;span&gt;2&lt;/span&gt;) ;&lt;br/&gt;        IPage&amp;lt;User&amp;gt; userPageList = userMapper.selectPage(userPage,&lt;span&gt;new&lt;/span&gt; QueryWrapper&amp;lt;&amp;gt;());&lt;br/&gt;        userPageList.getRecords().forEach(System.out::println);&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;// 2、自定义查询分页&lt;/span&gt;&lt;br/&gt;        IPage&amp;lt;UserModel&amp;gt; userModelPage = userMapper.queryUserPage(userPage);&lt;br/&gt;        userModelPage.getRecords().forEach(System.out::println);&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h1&gt;&lt;span&gt;六、参考源码&lt;/span&gt;&lt;/h1&gt;&lt;pre&gt;&lt;code&gt;文档仓库：&lt;br/&gt;https://gitee.com/cicadasmile/butte-java-note&lt;br/&gt;&lt;br/&gt;源码仓库：&lt;br/&gt;https://gitee.com/cicadasmile/butte-spring-parent&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;END&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section data-support=&quot;96编辑器&quot; data-style-id=&quot;30792&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;97816&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;mp-style-type data-value=&quot;3&quot;/&gt;&lt;/p&gt;&lt;/div&gt;

          
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>