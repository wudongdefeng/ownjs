<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>aa67190d046f9a8679d3075dbaa684ec</guid>
<title>身处职场，一定要落落大方，不要畏手畏脚</title>
<link>https://toutiao.io/k/5s657wp</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content js_underline_content             autoTypeSetting24psection&amp;#10;            &quot; id=&quot;js_content&quot;&gt;&lt;p data-track=&quot;3&quot; data-pm-slice=&quot;1 1 []&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;span&gt;  &lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;mp-common-profile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-weui-theme=&quot;light&quot; data-id=&quot;MzA3MDg5MDkzOA==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/Z2bVaFK6CgQmUQ0Aca9qSYNFn0tQEXQc5EibBkqQLYtibYBj1hXuagwXkNc3kVwplHxIl7KQfBIiagysgn9GDUUibw/0?wx_fmt=png&quot; data-nickname=&quot;架构精进之路&quot; data-alias=&quot;jiagou_jingjin&quot; data-signature=&quot;十年研发风雨路，大厂架构师，CSDN博客专家，InfoQ写作社区签约作者。专注软件架构研究，技术学习与职业成长，坚持分享接地气儿的架构技术干货文章！&quot; data-from=&quot;0&quot; data-is_biz_ban=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p data-track=&quot;3&quot; data-pm-slice=&quot;1 1 []&quot;&gt;&lt;span&gt;  hello，大家好，我是张张，「架构精进之路」公号作者。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;记得刚参加工作的时候，胆小怕事，看到领导就害怕，躲得远远的，脸皮薄，还自尊心强，特别在意同事们的眼光，不敢得罪任何人，&lt;/span&gt;&lt;span&gt;对谁都低三下四的，做事畏手畏脚，工作干的那叫一个卑微。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;科室里一个要退休的老同事实在看不下去了，退休之前和我聊了许多，让我受益匪浅。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;大体意思就是，在体制内工作，只要不犯原则性错误，就没有人能把你开除了，&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;做事情一定要落落大方，而不是畏手畏脚，那样只会让别人更加看不起，让领导认为你懦弱无能，让同事对你得寸进尺！&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.667&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Z2bVaFK6CgTpClHffIiae28puR3niclC0pZvWwXGFrE6dKxNX80RTYPIIdibqb1SgQ7lRz0Wice828hNI1xIX5ZDrA/640?wx_fmt=jpeg&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-id=&quot;28357&quot; data-type=&quot;lspecial02,lspecial06&quot; powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-bastyle=&quot;width:24px;height:24px;background-color: #666666;border-radius: 50%;&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;p data-md5=&quot;9d6cd&quot;&gt; &lt;strong&gt;1&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;p data-md5=&quot;9d6cd&quot;&gt;&lt;strong data-md5=&quot;9d6cd&quot;&gt;不要怕做抛头露面的事情&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;会议上，领导让你汇报工作，不要扭扭捏捏的，大大方方的讲出来，就像公务员面试一样；&lt;/span&gt;&lt;span&gt;酒桌上，该说说，该笑笑，不要小家子气，该敬酒敬酒，该轮圈轮圈，偶尔喝多了也无所谓。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;很多抛头露面的事情都是一回生，二回熟，时间长了也就锻炼出来了！&lt;/span&gt;&lt;/p&gt;&lt;section data-id=&quot;28357&quot; data-type=&quot;lspecial02,lspecial06&quot; powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-bastyle=&quot;width:24px;height:24px;background-color: #666666;border-radius: 50%;&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;p data-md5=&quot;9d6cd&quot;&gt; &lt;strong&gt;2&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;p data-md5=&quot;9d6cd&quot;&gt;&lt;strong data-md5=&quot;9d6cd&quot;&gt;不要在意别人的目光和议论&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;每个单位都有一些人喜欢嚼舌根，只要他们看不上你，无论你做什么，他们都会认为你是错的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;你和领导走的近了，他们说你拍马屁；&lt;/span&gt;&lt;span&gt;你努力认真工作，他们说你装样子；&lt;/span&gt;&lt;span&gt;你帮助别人，他们说你假慈悲……&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;所以不要在意他们的胡言乱语，做好自己的事情，&lt;/span&gt;&lt;span&gt;时间长了，大家也就知道了你的为人，这些谎言也就不攻自破！&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;section data-id=&quot;28357&quot; data-type=&quot;lspecial02,lspecial06&quot; powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-bastyle=&quot;width:24px;height:24px;background-color: #666666;border-radius: 50%;&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;p data-md5=&quot;9d6cd&quot;&gt; &lt;strong&gt;3&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;p data-md5=&quot;9d6cd&quot;&gt;&lt;strong data-md5=&quot;9d6cd&quot;&gt;不要害怕和领导交流&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;在体制内工作，吃亏的往往是只会低头拉车，不会抬头看路的人。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;害怕和领导交流，不会和领导套近乎，即使再埋头苦干，最终吃亏的还是自己。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;所以要把领导当作一名长者，尊敬但不要畏惧，见面要打招呼，积极去汇报工作，私下也要经常来往，维持好关系，只有这样，你才能会被重用，或者躺的舒服。&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;section data-id=&quot;28357&quot; data-type=&quot;lspecial02,lspecial06&quot; powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-bastyle=&quot;width:24px;height:24px;background-color: #666666;border-radius: 50%;&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;p data-md5=&quot;9d6cd&quot;&gt; &lt;strong&gt;4&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;p data-md5=&quot;9d6cd&quot;&gt;&lt;strong data-md5=&quot;9d6cd&quot;&gt;你遇到的大多数人，这辈子都不可能见到第二面&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;比如，地铁上的人，路边的人，你们永远只是擦肩而过。而剩下的小部分人里的大部分，就算你们现在经常见面，未来也不可能再见。比如，公司大部分同事，离职之后这辈子不会再见。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;所以，你为什么要在意他们的眼光和看法？为什么要因为他们而改变你的人生选择?&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;想明白这件事之后，你就会“放肆”很多。我第一年工作时连带个饭上班都觉得不好意思偷偷摸摸的,但是后来敢在会议上提出自己的看法。&lt;/span&gt;&lt;span&gt;只要在规则允许的范围内，穿你爱穿的衣服，做你想做的事情，世界就是你的游乐场。&lt;/span&gt;&lt;/p&gt;&lt;section data-id=&quot;28357&quot; data-type=&quot;lspecial02,lspecial06&quot; powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-bastyle=&quot;width:24px;height:24px;background-color: #666666;border-radius: 50%;&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;p data-md5=&quot;9d6cd&quot;&gt; 5&lt;strong/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;p data-md5=&quot;9d6cd&quot;&gt;&lt;strong data-md5=&quot;9d6cd&quot;&gt;不要害怕得罪老油条&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;为什么一些人被称为老油条，就是因为他们又老又油、又硬！工作时间长，年龄大，晋升无望，所以不好好工作，每天就混日子。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;对于这些老油条完全不用搭理他们，他们只会欺软怕硬，你越不想得罪他们，他们越是把工作和责任推给你，所以该怼的时候就怼过去，即使闹到领导那里，也大可不必担心，因为领导也知道是怎么回事。&lt;/span&gt;&lt;/p&gt;&lt;section data-id=&quot;28357&quot; data-type=&quot;lspecial02,lspecial06&quot; powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-bastyle=&quot;width:24px;height:24px;background-color: #666666;border-radius: 50%;&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;p data-md5=&quot;9d6cd&quot;&gt; 6&lt;strong/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;p data-md5=&quot;9d6cd&quot;&gt;&lt;strong data-md5=&quot;9d6cd&quot;&gt;别人对你的方式，都是被你惯的&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;当对方的语言，脱离事情本身，而是人身攻击时，必须给予反击。很多人讲话，都是在拿你出气，宣泄自己的情绪。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;你过度&lt;/span&gt;地&lt;span&gt;忍让，只会换来别人的变本加厉。&lt;/span&gt;&lt;span&gt;优秀的人一定很强势，世界上不存在不强势而&lt;/span&gt;又&lt;span&gt;优秀的人。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-id=&quot;28357&quot; data-type=&quot;lspecial02,lspecial06&quot; powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-bastyle=&quot;width:24px;height:24px;background-color: #666666;border-radius: 50%;&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;p data-md5=&quot;9d6cd&quot;&gt; 7&lt;strong/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;p data-md5=&quot;9d6cd&quot;&gt;&lt;strong data-md5=&quot;9d6cd&quot;&gt;不要被动工作&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;总有人摆脱不了“学生”标签，万事只会等待而又畏手畏脚，总希望有人可以来告诉自己下一步做什么。这样的结果就是，老司机们忙到死，自己却总感觉手上没活，慌到不行。不光如此，总是需要别人来询问自己的工作进度，开始不懂得做好计划，中间不记得实时监控，事后不会总结复盘。像一支牙膏，挤一下出一点。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;自己和老板是雇佣关系而非师徒关系，不能积极主动创造价值，总抱着学习的心态等待分配的，只会黯然离场。&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;section data-id=&quot;28357&quot; data-type=&quot;lspecial02,lspecial06&quot; powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-bastyle=&quot;width:24px;height:24px;background-color: #666666;border-radius: 50%;&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;p data-md5=&quot;9d6cd&quot;&gt; 8&lt;strong/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;p data-md5=&quot;9d6cd&quot;&gt;&lt;strong data-md5=&quot;9d6cd&quot;&gt;允许自己犯错&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;从小我们都被教育别犯错，错了就会挨骂，以至于很多人成年之后总是生怕自己犯错，不敢轻易做选择，不敢表现。不要对自己要求太严格，承认自己也是个普通人吧。谁不是一边犯错一边成长呢?从错误中获得成长，也许比任何方式都更快。&lt;/span&gt;&lt;/p&gt;&lt;section data-id=&quot;28357&quot; data-type=&quot;lspecial02,lspecial06&quot; powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-bastyle=&quot;width:24px;height:24px;background-color: #666666;border-radius: 50%;&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;p data-md5=&quot;9d6cd&quot;&gt; 9&lt;strong/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;9d6cd&quot;&gt;&lt;p data-md5=&quot;9d6cd&quot;&gt;&lt;strong data-md5=&quot;9d6cd&quot;&gt;远离身边负能量的人&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;常常释放负能量的人，大多数是见不得身边的人过的比 ta好，所以把负能量分享给你，让你和ta一样满载。&lt;/span&gt;&lt;span&gt;当你身边亲朋好友总以玩笑名义一句句伤害你，嘲讽打击你，“就你?你可以吗?”久而久之你会更自卑敏感，&lt;/span&gt;&lt;span&gt;因为你觉得你们很亲近，他们不可能害你，所以你从没怀疑过他们的看法。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;span&gt;尝试和他们保持距离，悄悄努力，不试怎么知道不行呢。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-height=&quot;667&quot; data-ratio=&quot;0.667&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Z2bVaFK6CgTpClHffIiae28puR3niclC0pgVLScEqFudr16Nr4PfPRzScgE5fRAfOh7mcoUF6XYWjkEfc2giadn5g/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1000&quot; data-width=&quot;1000&quot;/&gt;&lt;/p&gt;&lt;hr/&gt;&lt;section&gt;&lt;span&gt;往期热文推荐：&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;mp-common-profile class=&quot;js_uneditable js_wx_tap_highlight&quot; data-id=&quot;MzA3MDg5MDkzOA==&quot; data-pluginname=&quot;mpprofile&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/Z2bVaFK6CgQmUQ0Aca9qSYNFn0tQEXQc5EibBkqQLYtibYBj1hXuagwXkNc3kVwplHxIl7KQfBIiagysgn9GDUUibw/0?wx_fmt=png&quot; data-nickname=&quot;架构精进之路&quot; data-alias=&quot;jiagou_jingjin&quot; data-signature=&quot;十年研发风雨路，大厂架构师，CSDN博客专家，InfoQ写作社区签约作者。专注软件架构研究，技术学习与职业成长，坚持分享接地气儿的架构技术干货文章！&quot; data-from=&quot;2&quot; data-is_biz_ban=&quot;0&quot; has-insert-preloading=&quot;1&quot; data-index=&quot;1&quot; data-origin_num=&quot;109&quot; data-isban=&quot;0&quot; data-weui-theme=&quot;light&quot;/&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;关注公众号，免费领学习资料&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;87502&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;28&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;28&quot;&gt;&lt;p data-brushtype=&quot;text&quot;&gt;&lt;span&gt;如果您觉得还不错，欢迎关注和转发~     &lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5163398692810458&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/9TPn66HT930CzevNBb2yMhKjOn9yuJqsCPbyzicCBx6Zm9sNJCWibo6VzGRYbxrSfjJaaGibSRuyZFQmr3KcX07sw/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;306&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;mp-style-type data-value=&quot;3&quot;/&gt;&lt;/p&gt;&lt;/div&gt;

          
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>05404287bd3ed4c3fbd4dd43f2468805</guid>
<title>GOLANG协程调度</title>
<link>https://toutiao.io/k/zxo0fle</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section&gt;&lt;p&gt;本文基于go1.17.6&lt;/p&gt;&lt;h2&gt;&lt;span&gt;1.什么是协程？&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;协程，英文Coroutines，是一种基于线程之上，但又比线程更加轻量级的存在，这种由程序员自己写程序来管理的轻量级线程叫做『用户空间线程』，&lt;br/&gt;具有对内核来说不可见的特性。&lt;/p&gt;&lt;h3&gt;&lt;span&gt;1.1 协程的特点&lt;/span&gt;&lt;/h3&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;线程的切换由操作系统负责调度，协程由用户自己进行调度&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;线程的默认Stack大小是MB级别，而协程更轻量，接近KB级别。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;在同一个线程上的多个协程，访问某些资源可以不需要锁&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;适用于被阻塞的，且需要大量并发的场景。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;&lt;span&gt;1.2 Golang的GMP模型&lt;/span&gt;&lt;/h3&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.75&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/7K8YaGnlhQj5jbkmq1j5IxsZjFtJic6FQJIicpicy43ogomvCdfM4s3asgOV4mbX7iaDd54Ffqo6rHAresFhUCiclNg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1024&quot; title=&quot;GMP模型&quot;/&gt;&lt;figcaption&gt;GMP模型&lt;/figcaption&gt;&lt;/figure&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;CPU驱动线程上的任务执行&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;线程由操作系统内核进行调度，Goroutine由Golang运行时(runtime)进行调度&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;P的 &lt;code&gt;local runnable queue&lt;/code&gt;是无锁的，&lt;code&gt;global runnable queue&lt;/code&gt;是有锁的&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;P的 &lt;code&gt;local runnable queue&lt;/code&gt;长度限制为256&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4&gt;&lt;span&gt;&lt;strong&gt;注意&lt;/strong&gt;:&lt;/span&gt;&lt;/h4&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;1. M和P是绑定关系&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;2. M和G是绑定关系&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;3. P只是暂存G，他们之间不是绑定关系&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4&gt;&lt;span&gt;E-R图&lt;/span&gt;&lt;/h4&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5769764216366158&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/7K8YaGnlhQj5jbkmq1j5IxsZjFtJic6FQicOaOpZB5mXDPxib7ibU0AsRdSDiaspviaqTFiafibrsGzekZDpREaiardNn3A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;721&quot; title=&quot;E-R图&quot;/&gt;&lt;figcaption&gt;E-R图&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4&gt;&lt;span&gt;简化后的E-R图&lt;/span&gt;&lt;/h4&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8207171314741036&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/7K8YaGnlhQj5jbkmq1j5IxsZjFtJic6FQq978wibABwIiczacXQWdXGI3DuqYK0qlByIGHBmFaiaS6NFfqR8dtUYHw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;251&quot; title=&quot;E-R图简化后&quot;/&gt;&lt;figcaption&gt;E-R图简化后&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;: 后面为了书写简单直接将&lt;/p&gt;&lt;h3&gt;&lt;span&gt;延伸&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;timer的四叉堆和内存分配器使用的mcache也是每个P一个&lt;/p&gt;&lt;h4&gt;&lt;span&gt;Q: 为什么默认情况下P的数量与CPU数量一致？&lt;/span&gt;&lt;/h4&gt;&lt;h4&gt;&lt;span&gt;A:&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;这样可以避免把CPU时间浪费在上线文切换上&lt;/p&gt;&lt;h3&gt;&lt;span&gt;1.3 协程和线程的资源消耗对比&lt;/span&gt;&lt;/h3&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;类别&lt;/th&gt;&lt;th&gt;栈内存&lt;/th&gt;&lt;th&gt;上下文切换&lt;/th&gt;&lt;th&gt;备注&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;Thread&lt;/td&gt;&lt;td&gt;1MB&lt;/td&gt;&lt;td&gt;1us&lt;/td&gt;&lt;td&gt;内存占用使用的是Java线程的默认栈大小&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Goroutine&lt;/td&gt;&lt;td&gt;4KB&lt;/td&gt;&lt;td&gt;0.2us&lt;/td&gt;&lt;td&gt;内存占用使用的是Linux+x86下的栈大小&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h2&gt;&lt;span&gt;2. 常见的Goroutine 让出/调度/抢占场景&lt;/span&gt;&lt;/h2&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.631424375917768&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/7K8YaGnlhQj5jbkmq1j5IxsZjFtJic6FQZfObQhoLiaicZZdJ9jwpGdfZc8VxMSKunibns4sZOUyLpy9zhubBo8QJg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;681&quot; title=&quot;Goroutine状态机&quot;/&gt;&lt;figcaption&gt;Goroutine状态机&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;&lt;span&gt;2.1 协程被创建&lt;/span&gt;&lt;/h3&gt;&lt;h3&gt;&lt;span&gt;2.2 主动让出&lt;/span&gt;&lt;/h3&gt;&lt;h4&gt;&lt;span&gt;2.2.1 使用runtime.Gosched&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;gosched.go&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;package&lt;/span&gt; main&lt;br/&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; (&lt;br/&gt;    &lt;span&gt;&quot;fmt&quot;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&quot;runtime&quot;&lt;/span&gt;&lt;br/&gt;)&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;func&lt;/span&gt; &lt;span&gt;main&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;&lt;/span&gt; {&lt;br/&gt;    runtime.GOMAXPROCS(&lt;span&gt;1&lt;/span&gt;)&lt;br/&gt;    &lt;span&gt;for&lt;/span&gt; i := &lt;span&gt;0&lt;/span&gt;; i &amp;lt; &lt;span&gt;100&lt;/span&gt;; i++ {&lt;br/&gt;        fmt.Println(&lt;span&gt;&quot;Goroutine1:&quot;&lt;/span&gt;, i)&lt;br/&gt;        &lt;span&gt;//time.Sleep(500 * time.Millisecond)&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; i == &lt;span&gt;5&lt;/span&gt; {&lt;br/&gt;            &lt;span&gt;go&lt;/span&gt; &lt;span&gt;&lt;span&gt;func&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;&lt;/span&gt; {&lt;br/&gt;                &lt;span&gt;for&lt;/span&gt; i := &lt;span&gt;0&lt;/span&gt;; i &amp;lt; &lt;span&gt;100&lt;/span&gt;; i++ {&lt;br/&gt;                    fmt.Println(&lt;span&gt;&quot;Goroutine2:&quot;&lt;/span&gt;, i)&lt;br/&gt;                    &lt;span&gt;//time.Sleep(500 * time.Millisecond)&lt;/span&gt;&lt;br/&gt;                }&lt;br/&gt;            }()&lt;br/&gt;            runtime.Gosched()&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;具体执行流程&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;1.&lt;/span&gt;Gosched() -&amp;gt; &lt;span&gt;2.&lt;/span&gt;mcall(fn &lt;span&gt;&lt;span&gt;func&lt;/span&gt;&lt;span&gt;(*g)&lt;/span&gt;) -&amp;gt; 3.&lt;span&gt;gosched_m&lt;/span&gt;&lt;span&gt;(gp *g)&lt;/span&gt; -&amp;gt;&lt;br/&gt;4.&lt;span&gt;goschedImpl&lt;/span&gt;&lt;span&gt;(gp *g)&lt;/span&gt; -&amp;gt;  &lt;span&gt;dropg&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;&lt;br/&gt;                          &lt;span&gt;globrunqput&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;br/&gt;                          &lt;span&gt;schedule&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4&gt;&lt;span&gt;step2 mcall(fn func(*g))&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;mcall函数是通过汇编实现的，&lt;br/&gt;在 asm_amd64.s 中&lt;/p&gt;&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：每个m上都有一个自己g0，仅用于调度，不指向任何可执行的函数&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;mcall returns to the original goroutine g later, when g has been rescheduled.&lt;br/&gt;fn must not return at all; typically it ends by calling schedule, to let the m&lt;br/&gt;run other goroutines.&lt;/p&gt;&lt;/blockquote&gt;&lt;h4&gt;&lt;span&gt;step4 goschedImpl(gp *g)&lt;/span&gt;&lt;/h4&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;1)修改Goroutine的状态 _Grunning -&amp;gt; _Grunnable&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;2)dropg() 将G和M解绑&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;3)globrunqput(gp) 将G放入全局runnable队列&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;4)schedule()&lt;br/&gt;进行一轮调度，寻找一个runnable的G，并执行它，&lt;strong&gt;函数不会返回&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4&gt;&lt;span&gt;step4-4 schedule()&lt;/span&gt;&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;schedule&lt;/span&gt;() –&amp;gt; 1&lt;span&gt;.findrunnable&lt;/span&gt;()&lt;br/&gt;              2&lt;span&gt;.execute&lt;/span&gt;() –&amp;gt;&lt;span&gt;gogo&lt;/span&gt;()&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h5&gt;&lt;span&gt;step4-4 schedule() --&amp;gt; findrunnable()&lt;/span&gt;&lt;/h5&gt;&lt;p&gt;&lt;code&gt;gogo()&lt;/code&gt;&lt;br/&gt;汇编实现，用于恢复现场(PC/SP)，运行上一步找到的新的可运行的G&lt;/p&gt;&lt;h4&gt;&lt;span&gt;Q:为什么一定要单独设置一个g0来执行goschedImpl(gp *g)&lt;/span&gt;&lt;/h4&gt;&lt;h4&gt;&lt;span&gt;A:  schedule()会将G的stack搞乱&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;另外有些文章说g0的栈会使用操作系统分配的线程栈，但是根据萌叔的研究，这个与操作系统有关的。&lt;br/&gt;macOS是使用的线程栈(8MB)，但是linux下g0的栈初始大小只有8KB。&lt;br/&gt;runtime/proc.go&lt;/p&gt;&lt;pre&gt;&lt;code&gt;    &lt;span&gt;//&lt;/span&gt; In case &lt;span&gt;of&lt;/span&gt; cgo &lt;span&gt;or&lt;/span&gt; Solaris &lt;span&gt;or&lt;/span&gt; illumos &lt;span&gt;or&lt;/span&gt; Darwin, pthread_create will make us a stack.&lt;br/&gt;    &lt;span&gt;//&lt;/span&gt; Windows &lt;span&gt;and&lt;/span&gt; Plan &lt;span&gt;9&lt;/span&gt; will layout sched stack &lt;span&gt;on&lt;/span&gt; OS stack.&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; iscgo || mStackIsSystemAllocated() {&lt;br/&gt;        mp.g0 = malg(&lt;span&gt;-1&lt;/span&gt;)&lt;br/&gt;    } &lt;span&gt;else&lt;/span&gt; {&lt;br/&gt;        mp.g0 = malg(&lt;span&gt;8192&lt;/span&gt; * sys.StackGuardMultiplier)&lt;br/&gt;    }&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;// mStackIsSystemAllocated indicates whether this runtime starts on a&lt;/span&gt;&lt;br/&gt;&lt;span&gt;// system-allocated stack.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;func&lt;/span&gt; &lt;span&gt;mStackIsSystemAllocated&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;bool&lt;/span&gt;&lt;/span&gt; {&lt;br/&gt;    &lt;span&gt;switch&lt;/span&gt; GOOS {&lt;br/&gt;    &lt;span&gt;case&lt;/span&gt; &lt;span&gt;&quot;aix&quot;&lt;/span&gt;, &lt;span&gt;&quot;darwin&quot;&lt;/span&gt;, &lt;span&gt;&quot;plan9&quot;&lt;/span&gt;, &lt;span&gt;&quot;illumos&quot;&lt;/span&gt;, &lt;span&gt;&quot;ios&quot;&lt;/span&gt;, &lt;span&gt;&quot;solaris&quot;&lt;/span&gt;, &lt;span&gt;&quot;windows&quot;&lt;/span&gt;:&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;case&lt;/span&gt; &lt;span&gt;&quot;openbsd&quot;&lt;/span&gt;:&lt;br/&gt;        &lt;span&gt;switch&lt;/span&gt; GOARCH {&lt;br/&gt;        &lt;span&gt;case&lt;/span&gt; &lt;span&gt;&quot;386&quot;&lt;/span&gt;, &lt;span&gt;&quot;amd64&quot;&lt;/span&gt;, &lt;span&gt;&quot;arm&quot;&lt;/span&gt;, &lt;span&gt;&quot;arm64&quot;&lt;/span&gt;:&lt;br/&gt;            &lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4&gt;&lt;span&gt;2.2.2 任务执行完毕&lt;/span&gt;&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;goexit1() -&amp;gt; mcall(fn &lt;span&gt;&lt;span&gt;func&lt;/span&gt;&lt;span&gt;(*g)&lt;/span&gt;) -&amp;gt; &lt;span&gt;goexit0&lt;/span&gt;&lt;span&gt;(gp *g)&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;// goexit continuation on g0.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;func&lt;/span&gt; &lt;span&gt;goexit0&lt;/span&gt;&lt;span&gt;(gp *g)&lt;/span&gt;&lt;/span&gt; {&lt;br/&gt;    _g_ := getg()&lt;br/&gt;    casgstatus(gp, _Grunning, _Gdead)&lt;br/&gt;    gp.m = &lt;span&gt;nil&lt;/span&gt;&lt;br/&gt;    dropg()&lt;br/&gt;    gfput(_g_.m.p.ptr(), gp)&lt;br/&gt;    schedule()&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3&gt;&lt;span&gt;2.3 抢占式调度&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;抢占式调度是由守护进程 sysmon() 触发的&lt;br/&gt;sysmon()是一个特殊的m，它不需要和P进行绑定。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;func&lt;/span&gt; &lt;span&gt;sysmon&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;&lt;/span&gt; {&lt;br/&gt;    &lt;span&gt;for&lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;// 1. 运行计时器&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;// 2. 检查网络轮询器(netpoll)&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;// 3. 触发抢占式调度&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;// 4. 触发GC&lt;/span&gt;&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;最大时间片是10ms&lt;/p&gt;&lt;h4&gt;&lt;span&gt;推荐观看  幼麟实验室的视频&lt;/span&gt;&lt;/h4&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;深度探索Go语言：抢占式调度&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;深度探索Go语言：抢占式调度(2)&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h4&gt;&lt;span&gt;2.3.1 基于协作的抢占式调度&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;依赖栈增长监测代码&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.810126582278481&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/7K8YaGnlhQj5jbkmq1j5IxsZjFtJic6FQBPTyFGOVUQOglhNsQZ8AlibaRJs0gCc1JQbDVEnUXeYkwVP1pgSeicicg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;711&quot; title=&quot;&quot;/&gt;&lt;/figure&gt;&lt;pre&gt;&lt;code&gt;sysmon() -&amp;gt; retake() -&amp;gt; preemptone()&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;type&lt;/span&gt; g &lt;span&gt;struct&lt;/span&gt; {&lt;br/&gt;    stackguard0 &lt;span&gt;uintptr&lt;/span&gt; &lt;span&gt;// offset known to liblink&lt;/span&gt;&lt;br/&gt;    preempt     &lt;span&gt;bool&lt;/span&gt; &lt;span&gt;// preemption signal, duplicates stackguard0 = stackpreempt&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4&gt;&lt;span&gt;2.3.2 基于信号的抢占式调度&lt;/span&gt;&lt;/h4&gt;&lt;h4&gt;&lt;span&gt;发出信号&lt;/span&gt;&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;sysmon() -&amp;gt; retake() -&amp;gt; preemptone() -&amp;gt; signalM(mp, sigPreempt)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;func&lt;/span&gt; &lt;span&gt;preemptone&lt;/span&gt;&lt;span&gt;(_p_ *p)&lt;/span&gt; &lt;span&gt;bool&lt;/span&gt;&lt;/span&gt; {&lt;br/&gt;    mp := _p_.m.ptr()&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; mp == &lt;span&gt;nil&lt;/span&gt; || mp == getg().m {&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;&lt;br/&gt;    }&lt;br/&gt;    gp := mp.curg&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; gp == &lt;span&gt;nil&lt;/span&gt; || gp == mp.g0 {&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    gp.preempt = &lt;span&gt;true&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;// Every call in a goroutine checks for stack overflow by&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;// comparing the current stack pointer to gp-&amp;gt;stackguard0.&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;// Setting gp-&amp;gt;stackguard0 to StackPreempt folds&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;// preemption into the normal stack overflow check.&lt;/span&gt;&lt;br/&gt;    gp.stackguard0 = stackPreempt&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;// Request an async preemption of this P.&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; preemptMSupported &amp;amp;&amp;amp; debug.asyncpreemptoff == &lt;span&gt;0&lt;/span&gt; {&lt;br/&gt;        _p_.preempt = &lt;span&gt;true&lt;/span&gt;&lt;br/&gt;        preemptM(mp)&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4&gt;&lt;span&gt;接收到信号&lt;/span&gt;&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;sighandler() -&amp;gt; doSigPreempt() -&amp;gt; asyncPreempt()-&amp;gt;  globalrunqput()&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;asyncPreempt由汇编实现 preempt_amd64.s&lt;/p&gt;&lt;h3&gt;&lt;span&gt;2.4 hand off p&lt;/span&gt;&lt;/h3&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5653225806451613&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/7K8YaGnlhQj5jbkmq1j5IxsZjFtJic6FQrJ0oyhdEjFqszJVXIcCDGXoz4mjWSojOOhD8HjVuEt2481IruXQ0Lg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1240&quot; title=&quot;&quot;/&gt;&lt;/figure&gt;&lt;h4&gt;&lt;span&gt;延伸阅读&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;disk io引起golang线程数暴涨的问题&lt;/p&gt;&lt;h4&gt;&lt;span&gt;场景读写磁盘文件&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;涉及syscall.Syscall()&lt;/p&gt;&lt;h4&gt;&lt;span&gt;注意:&lt;/span&gt;&lt;/h4&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;由于handeroff机制的存在，读写磁盘文件的过程中，如果IO的压力过大可能会导致大量的系统线程被创建&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;在Golang中(Linux平台)，读写网络连接是非阻塞式系统调用，并且是边缘触发&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;在Golang中(Linux平台)，读写磁盘文件是阻塞式系统调用&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;File&lt;/span&gt;&lt;span&gt;.Read&lt;/span&gt;() &lt;span&gt;-&lt;/span&gt;&amp;gt; &lt;span&gt;poll&lt;/span&gt;&lt;span&gt;.FD&lt;/span&gt;&lt;span&gt;.Read&lt;/span&gt;() &lt;span&gt;-&lt;/span&gt;&amp;gt; &lt;span&gt;syscall&lt;/span&gt;&lt;span&gt;.Read&lt;/span&gt;() &lt;span&gt;-&lt;/span&gt;&amp;gt; &lt;span&gt;syscall&lt;/span&gt;&lt;span&gt;.Syscall&lt;/span&gt;()&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;poll/fd_unix.go&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;// Read implements io.Reader.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;func&lt;/span&gt; &lt;span&gt;(fd *FD)&lt;/span&gt; &lt;span&gt;Read&lt;/span&gt;&lt;span&gt;(p []&lt;span&gt;byte&lt;/span&gt;)&lt;/span&gt; &lt;span&gt;(&lt;span&gt;int&lt;/span&gt;, error)&lt;/span&gt;&lt;/span&gt; {&lt;br/&gt;    ...&lt;br/&gt;    &lt;span&gt;for&lt;/span&gt; {&lt;br/&gt;        n, err := ignoringEINTRIO(syscall.Read, fd.Sysfd, p) &lt;span&gt;// 执行syscall&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; err != &lt;span&gt;nil&lt;/span&gt; {&lt;br/&gt;            n = &lt;span&gt;0&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;if&lt;/span&gt; err == syscall.EAGAIN &amp;amp;&amp;amp; fd.pd.pollable() {&lt;br/&gt;                &lt;span&gt;if&lt;/span&gt; err = fd.pd.waitRead(fd.isFile); err == &lt;span&gt;nil&lt;/span&gt; { &lt;span&gt;// gopark&lt;/span&gt;&lt;br/&gt;                    &lt;span&gt;continue&lt;/span&gt;&lt;br/&gt;                }&lt;br/&gt;            }&lt;br/&gt;        }&lt;br/&gt;        err = fd.eofError(n, err)&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; n, err&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;func&lt;/span&gt; &lt;span&gt;read&lt;/span&gt;&lt;span&gt;(fd &lt;span&gt;int&lt;/span&gt;, p []&lt;span&gt;byte&lt;/span&gt;)&lt;/span&gt; &lt;span&gt;(n &lt;span&gt;int&lt;/span&gt;, err error)&lt;/span&gt;&lt;/span&gt; {&lt;br/&gt;    &lt;span&gt;var&lt;/span&gt; _p0 unsafe.Pointer&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; &lt;span&gt;len&lt;/span&gt;(p) &amp;gt; &lt;span&gt;0&lt;/span&gt; {&lt;br/&gt;        _p0 = unsafe.Pointer(&amp;amp;p[&lt;span&gt;0&lt;/span&gt;])&lt;br/&gt;    } &lt;span&gt;else&lt;/span&gt; {&lt;br/&gt;        _p0 = unsafe.Pointer(&amp;amp;_zero)&lt;br/&gt;    }&lt;br/&gt;    r0, _, e1 := Syscall(SYS_READ, &lt;span&gt;uintptr&lt;/span&gt;(fd), &lt;span&gt;uintptr&lt;/span&gt;(_p0), &lt;span&gt;uintptr&lt;/span&gt;(&lt;span&gt;len&lt;/span&gt;(p)))&lt;br/&gt;    n = &lt;span&gt;int&lt;/span&gt;(r0)&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; e1 != &lt;span&gt;0&lt;/span&gt; {&lt;br/&gt;        err = errnoErr(e1)&lt;br/&gt;    }&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4&gt;&lt;span&gt;Syscall和RawSyscall的源码&lt;/span&gt;&lt;/h4&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.0425&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/7K8YaGnlhQj5jbkmq1j5IxsZjFtJic6FQPicQflhnMM41SrxIJXURlXTsnzciaOnOS5ticBQTIxfUH3qngvRP9P0rA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;800&quot; title=&quot;&quot;/&gt;&lt;/figure&gt;&lt;h4&gt;&lt;span&gt;2.4.1 entersyscall()&lt;/span&gt;&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;1&lt;/span&gt;.设置_g&lt;span&gt;_&lt;/span&gt;.m.locks++，禁止g被强占&lt;br/&gt;&lt;span&gt;2&lt;/span&gt;.设置_g&lt;span&gt;_&lt;/span&gt;.stackguard&lt;span&gt;0&lt;/span&gt; = stackPreempt，禁止调用任何会导致栈增长/分裂的函数&lt;br/&gt;&lt;span&gt;3&lt;/span&gt;.保存现场，在 &lt;span&gt;syscall&lt;/span&gt; 之后会依据这些数据恢复现场&lt;br/&gt;&lt;span&gt;4&lt;/span&gt;.更新G的状态为_Gsyscall&lt;br/&gt;&lt;span&gt;5&lt;/span&gt;.释放局部调度器P：解绑P与M的关系；&lt;br/&gt;&lt;span&gt;6&lt;/span&gt;.更新P状态为_Psyscall&lt;br/&gt;&lt;span&gt;7&lt;/span&gt;.g.m.locks–解除禁止强占。&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;进入系统调用的goroutine会阻塞，导致内核M会阻塞。此时P会被剥离掉， 所以P可以继续去获取其余的空闲M执行其余的goroutine。&lt;/p&gt;&lt;h4&gt;&lt;span&gt;2.4.2 阻塞式系统调用长期运行将会导致的流程&lt;/span&gt;&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;sysmon() -&amp;gt; retake() -&amp;gt; handoffp()&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果P的本地队列不为空，handoffp()会尝试获取一个M来运行P&lt;br/&gt;M有2种来源:&lt;/p&gt;&lt;h4&gt;&lt;span&gt;2.4.3 exitsyscall()&lt;/span&gt;&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;1.设置 &lt;span&gt;g&lt;/span&gt;&lt;span&gt;.m&lt;/span&gt;&lt;span&gt;.locks&lt;/span&gt;++ 禁止强占&lt;br/&gt;2.调用 &lt;span&gt;exitsyscallfast&lt;/span&gt;() 快速退出系统调用&lt;br/&gt;    2&lt;span&gt;.1&lt;/span&gt;. &lt;span&gt;Try&lt;/span&gt; &lt;span&gt;to&lt;/span&gt; &lt;span&gt;re-acquire&lt;/span&gt; &lt;span&gt;the&lt;/span&gt; &lt;span&gt;last&lt;/span&gt; &lt;span&gt;P&lt;/span&gt;，如果成功就直接接&lt;span&gt;return&lt;/span&gt;;&lt;br/&gt;    2&lt;span&gt;.2&lt;/span&gt;. &lt;span&gt;Try&lt;/span&gt; &lt;span&gt;to&lt;/span&gt; &lt;span&gt;get&lt;/span&gt; &lt;span&gt;any&lt;/span&gt; &lt;span&gt;other&lt;/span&gt; &lt;span&gt;idle&lt;/span&gt; &lt;span&gt;P&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; &lt;span&gt;allIdleP&lt;/span&gt; &lt;span&gt;list&lt;/span&gt;;&lt;br/&gt;    2&lt;span&gt;.3&lt;/span&gt;. 没有获取到空闲的&lt;span&gt;P&lt;/span&gt;&lt;br/&gt;3.如果快速获取到了&lt;span&gt;P&lt;/span&gt;：&lt;br/&gt;    3&lt;span&gt;.1&lt;/span&gt;. 更新&lt;span&gt;G&lt;/span&gt; 的状态是_&lt;span&gt;Grunning&lt;/span&gt;&lt;br/&gt;    3&lt;span&gt;.2&lt;/span&gt;. 与&lt;span&gt;G&lt;/span&gt;绑定的&lt;span&gt;M&lt;/span&gt;会在退出系统调用之后继续执行&lt;br/&gt;4. 没有获取到空闲的&lt;span&gt;P&lt;/span&gt;：&lt;br/&gt;    4&lt;span&gt;.1&lt;/span&gt;. 调用&lt;span&gt;mcall&lt;/span&gt;()函数切换到&lt;span&gt;g0&lt;/span&gt;的栈空间；&lt;br/&gt;    4&lt;span&gt;.2&lt;/span&gt;. 调用&lt;span&gt;exitsyscall0&lt;/span&gt;函数：&lt;br/&gt;        4&lt;span&gt;.2&lt;/span&gt;&lt;span&gt;.1&lt;/span&gt;. 更新&lt;span&gt;G&lt;/span&gt; 的状态是_&lt;span&gt;Gwaiting&lt;/span&gt;&lt;br/&gt;        4&lt;span&gt;.2&lt;/span&gt;&lt;span&gt;.2&lt;/span&gt;. 调用&lt;span&gt;dropg&lt;/span&gt;()：解除当前&lt;span&gt;g&lt;/span&gt;与&lt;span&gt;M&lt;/span&gt;的绑定关系；&lt;br/&gt;        4&lt;span&gt;.2&lt;/span&gt;&lt;span&gt;.3&lt;/span&gt;. 调用&lt;span&gt;globrunqput&lt;/span&gt;将&lt;span&gt;G&lt;/span&gt;插入&lt;span&gt;global&lt;/span&gt; &lt;span&gt;queue&lt;/span&gt;的队尾，&lt;br/&gt;        4&lt;span&gt;.2&lt;/span&gt;&lt;span&gt;.4&lt;/span&gt;. 调用&lt;span&gt;stopm&lt;/span&gt;()释放&lt;span&gt;M&lt;/span&gt;，将&lt;span&gt;M&lt;/span&gt;加入全局的&lt;span&gt;idel&lt;/span&gt; &lt;span&gt;M&lt;/span&gt;列表，这个调用会阻塞，知道获取到可用的&lt;span&gt;P&lt;/span&gt;。&lt;br/&gt;        4&lt;span&gt;.2&lt;/span&gt;&lt;span&gt;.5&lt;/span&gt;. 如果4&lt;span&gt;.2&lt;/span&gt;&lt;span&gt;.4&lt;/span&gt;中阻塞结束，&lt;span&gt;M&lt;/span&gt;获取到了可用的&lt;span&gt;P&lt;/span&gt;，会调用&lt;span&gt;schedule&lt;/span&gt;()函数，执行一次新的调度。&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3&gt;&lt;span&gt;2.5 系统调用&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;以netpoll为例，linux操作系统下，netpoll基于epoll实现的&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;#include &amp;lt;sys/epoll.h&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;int&lt;/span&gt; &lt;span&gt;epoll_create&lt;/span&gt;(&lt;span&gt;&lt;span&gt;int&lt;/span&gt; size&lt;/span&gt;)&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;&lt;span&gt;int&lt;/span&gt; &lt;span&gt;epoll_ctl&lt;/span&gt;(&lt;span&gt;&lt;span&gt;int&lt;/span&gt; epfd, &lt;span&gt;int&lt;/span&gt; op, &lt;span&gt;int&lt;/span&gt; fd, &lt;span&gt;struct&lt;/span&gt; epoll_event *&lt;span&gt;event&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;&lt;span&gt;int&lt;/span&gt; &lt;span&gt;epoll_wait&lt;/span&gt;(&lt;span&gt;&lt;span&gt;int&lt;/span&gt; epfd, &lt;span&gt;struct&lt;/span&gt; epoll_event * events, &lt;span&gt;int&lt;/span&gt; maxevents, &lt;span&gt;int&lt;/span&gt; timeout&lt;/span&gt;)&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5661914460285132&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/7K8YaGnlhQj5jbkmq1j5IxsZjFtJic6FQkDvrXywAXiaPLCMYiaFMWgCEnJM91rRoOJc7Gb4JVXvOBu9GF0svkcZg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;491&quot; title=&quot;&quot;/&gt;&lt;/figure&gt;&lt;h4&gt;&lt;span&gt;2.5.1 让出流程&lt;/span&gt;&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;pollDesc.waitRead() -&amp;gt; runtime.poll_runtime_pollWait() -&amp;gt; runtime.gopark()&lt;br/&gt;-&amp;gt; mcall(fn func(*g)) -&amp;gt; park_m(gp *g)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4&gt;&lt;span&gt;gopark()主要流程&lt;/span&gt;&lt;/h4&gt;&lt;h4&gt;&lt;span&gt;2.5.2 放回 主动触发netpoll()&lt;/span&gt;&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;findrunnable()-&amp;gt;netpoll()-&amp;gt;injectglist()-&amp;gt;globrunqputbatch()/runqputbatch()&lt;br/&gt;pollWork()&lt;br/&gt;startTheWorldWithSema&lt;br/&gt;sysmon()&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;: netpoll函数是非阻塞的&lt;/p&gt;&lt;h3&gt;&lt;span&gt;2.6 定时器&lt;/span&gt;&lt;/h3&gt;&lt;h4&gt;&lt;span&gt;场景&lt;/span&gt;&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;time&lt;/span&gt;.Sleep(&lt;span&gt;1&lt;/span&gt; * &lt;span&gt;time&lt;/span&gt;.&lt;span&gt;Second&lt;/span&gt;)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.868995633187773&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/7K8YaGnlhQj5jbkmq1j5IxsZjFtJic6FQrqzZaZpY5tD6APt4zQ9lfeYficLexQsphob8NX2UQicWqiaBDBIRvXO7g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;458&quot; title=&quot;&quot;/&gt;&lt;/figure&gt;&lt;h4&gt;&lt;span&gt;2.6.1 让出&lt;/span&gt;&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;time.Sleep() -&amp;gt; runtime.timeSleep() -&amp;gt; mcall() -&amp;gt; park_m()&lt;br/&gt;-&amp;gt; resetForSleep() -&amp;gt; resettimer() -&amp;gt; doaddtimer()&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4&gt;&lt;span&gt;2.6.2 唤醒&lt;/span&gt;&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;checkTimers() -&amp;gt; runtimer() -&amp;gt; runOneTimer() -&amp;gt; goready() -&amp;gt; systemstack() -&amp;gt; ready()&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4&gt;&lt;span&gt;goready()主要流程&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;: mcall()和systemstack()是对应的&lt;/p&gt;&lt;h3&gt;&lt;span&gt;2.7 Channel&lt;/span&gt;&lt;/h3&gt;&lt;h4&gt;&lt;span&gt;场景&lt;/span&gt;&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;ch := &lt;span&gt;make&lt;/span&gt;(&lt;span&gt;chan&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;)&lt;br/&gt;ch &amp;lt;- &lt;span&gt;15&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.37900128040973113&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/7K8YaGnlhQj5jbkmq1j5IxsZjFtJic6FQ9dTOEYrsenibicOiasjUUULandjLPfXibvPAT2Td2KhCph1ibxTx2rZ3R2Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;781&quot; title=&quot;&quot;/&gt;&lt;/figure&gt;&lt;h4&gt;&lt;span&gt;2.7.1 写入channel并阻塞&lt;/span&gt;&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;chansend1() -&amp;gt; chansend() -&amp;gt;  hchan.sendq.enqueue() -&amp;gt; gopark()&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4&gt;&lt;span&gt;2.7.2 就绪&lt;/span&gt;&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;chanrecv1() -&amp;gt; chanrecv() -&amp;gt;  hchan.sendq.dequeue() -&amp;gt; recv() -&amp;gt; goready()&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3&gt;&lt;span&gt;2.8 同步原语&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;互斥锁与2.6、2.7的情况非常类似，只是G会存储在Treap中&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Treap是一种平衡二叉查找树&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;semaRoot 是全局唯一的&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.1146616541353382&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/7K8YaGnlhQj5jbkmq1j5IxsZjFtJic6FQu3aNoqVCQN3CQJ9VTyZsamky3iad7swDyFF25fRbSDlpciboXcNKZDUg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;532&quot; title=&quot;&quot;/&gt;&lt;/figure&gt;&lt;h3&gt;&lt;span&gt;3.参考资料&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;1.g0-特殊的goroutine&lt;br/&gt;2.golang syscall原理&lt;br/&gt;3.Linux中的EAGAIN含义&lt;br/&gt;4.Golang-gopark函数和goready函数原理分析&lt;br/&gt;5.幼麟实验室-协程让出、抢占、监控和调度&lt;br/&gt;6.Golang 调度器 GMP 原理与调度全分析&lt;br/&gt;7.time.Sleep(1) 后发生了什么&lt;br/&gt;8.mcall systemstack等汇编函数&lt;/p&gt;&lt;hr/&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.396078431372549&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/7K8YaGnlhQj5jbkmq1j5IxsZjFtJic6FQvSym7s3AAONnSPqibW0dkF4SCgMibPZ3zF2PenCKnxfl4bCpzrV0BurA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1020&quot; title=&quot;微信公众号&quot;/&gt;&lt;figcaption&gt;微信公众号&lt;/figcaption&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>b8baa1a35e305b9b73d3c200bba0a86a</guid>
<title>优质网站同好者周刊（第 107 期） | 倾城博客</title>
<link>https://toutiao.io/k/mg27et2</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;content&quot;&gt;&lt;p&gt;&lt;a href=&quot;https://nicelinks.site/?utm_source=weekly&quot;&gt;倾城之链&lt;/a&gt;作为一个开放平台，旨在云集全球&lt;strong&gt;优秀网站&lt;/strong&gt;，探索互联网中更广阔的世界。此周刊，将汇聚过去一周&lt;a href=&quot;https://nicelinks.site/?utm_source=weekly&quot;&gt;倾城&lt;/a&gt;所收录的内容，以飨同好；欢迎推荐或自荐（仅限有独立域名的网站，可以是二级域名）。您如果要了解收录要求，请参见&lt;a href=&quot;https://nicelinks.site/about?utm_source=weekly&quot;&gt;关于倾城&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;备注&lt;/strong&gt;：本周刊&lt;strong&gt;每周五&lt;/strong&gt;生成，首发于个人微信公众号&lt;a href=&quot;https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzI5MDIwMzM2Mg==&amp;amp;action=getalbum&amp;amp;album_id=1530765143352082433&amp;amp;scene=173&amp;amp;from_msgid=2650641087&amp;amp;from_itemidx=1&amp;amp;count=3#wechat_redirect&quot;&gt;晚晴幽草轩&lt;/a&gt;、博客&lt;a href=&quot;https://www.jeffjade.com&quot;&gt;晚晴幽草轩&lt;/a&gt;，以及&lt;a href=&quot;https://forum.lovejade.cn/&quot;&gt;悠然宜想亭&lt;/a&gt;社区；此一键生成脚本基于 &lt;a href=&quot;https://nicelinks.site/post/602d30aad099ff5688618591&quot;&gt;Deno&lt;/a&gt; 编写，并在 Github 开源：&lt;a href=&quot;https://github.com/nicejade/nicelinks-weekly&quot;&gt;nicejade/nicelinks-weekly&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/Web%E5%BC%80%E5%8F%91&quot;&gt;&lt;code&gt;Web开发&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E6%A1%86%E6%9E%B6&quot;&gt;&lt;code&gt;框架&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/JavaScript&quot;&gt;&lt;code&gt;JavaScript&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Fast and low overhead web framework, for Node.js.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/www.fastify.io.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 - Fastify, Fast and low overhead web framework, for Node.js&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/redirect?url=https://www.fastify.io/&quot;&gt;Fastify&lt;/a&gt; ，是一款快速、高效的 Web 框架，它是用 JavaScript 编写的，专为 Node.js 设计。Fastify 的目标是提供高性能，同时保持低内存消耗和代码简洁。以下是关于 Fastify 的一些特点：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;快速&lt;/strong&gt;：Fastify 是一个高性能的框架，它采用了许多优化技术，如异步编程、缓存和路由优化等。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;插件系统&lt;/strong&gt;：Fastify 拥有强大的插件系统，使得开发者可以快速构建应用程序，而无需从头开始编写所有的功能。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;支持 ES 模块&lt;/strong&gt;：Fastify 支持 ES 模块，这意味着开发者可以使用最新的 JavaScript 特性来编写代码。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;严格的模式&lt;/strong&gt;：Fastify 默认采用严格模式，这有助于开发者避免一些常见的 JavaScript 错误。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;集成了许多工具&lt;/strong&gt;：Fastify 集成了许多工具，如 AJV 验证器、Mongoose ORM 和 Helmet 安全头等，这使得开发者可以快速构建应用程序，并降低了开发的复杂性。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;可扩展性&lt;/strong&gt;：Fastify 是可扩展的，它可以轻松地与其他框架和库集成，如 Express、Hapi 和 Koa 等。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;总之，Fastify 是一款快速、高效、灵活和易于使用的 Node.js 框架，它是一个很好的选择，特别是对于那些需要构建高性能应用程序的开发者。有一些与 Fastify 类似的 Node.js 框架，以下是其中几个：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Express： Express 是一个广泛使用的 Node.js 框架，它的 API 简单易用，易于上手，可以快速构建 Web 应用程序。&lt;/li&gt;&lt;li&gt;Koa： Koa 是一个轻量级的 Node.js 框架，它的核心是基于 ES6 的异步函数，可以简化错误处理和流程控制。&lt;/li&gt;&lt;li&gt;Hapi： Hapi 是一个企业级 Node.js 框架，它提供了一组强大的工具和插件，可以快速构建安全可靠的 Web 应用程序。&lt;/li&gt;&lt;li&gt;NestJS： NestJS 是一个基于 Express 和 Angular 的框架，它提供了一组强大的工具和插件，可以快速构建可伸缩的 Web 应用程序。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;这些框架都有其各自的特点和优势，开发者可以根据项目需求和个人喜好来选择合适的框架。&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/6400b3eafe46ca437e0ac36e&quot;&gt;倾城之链 - Fastify, Fast and low overhead web framework, for Node.js&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/%E5%AD%A6%E4%B9%A0&quot;&gt;&lt;code&gt;学习&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E8%AE%BE%E8%AE%A1&quot;&gt;&lt;code&gt;设计&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E5%85%8D%E8%B4%B9&quot;&gt;&lt;code&gt;免费&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Method of Action is education made fun. Method of Action creates tools, toys and games to help you learn design, for free.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/method.ac.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 - Welcome to Method of Action&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/redirect?url=https://method.ac/&quot;&gt;Method of Action&lt;/a&gt; ，免费创建工具、玩具和游戏来帮助您学习设计；非常适合没有做过 UI 设计的新手来玩；如果你想学 UI 设计，可以体验下；从最基础的贝塞尔曲线的用法、布尔运算、颜色字体、形状开始。这些都是最通用的设计基础能力，所有的界面设计软件都是这样做的。它提供非常教学方式──&lt;strong&gt;寓教于乐&lt;/strong&gt;，通过好玩儿的小游戏，基本上可以达到设计入门。&lt;/p&gt;&lt;p&gt;Method Draw 是一个简单易用的网络矢量编辑器。在线 &lt;a href=&quot;https://editor.method.ac/&quot;&gt;使用 Method Draw&lt;/a&gt; ，无需注册。 &lt;a href=&quot;https://github.com/duopixel/Method-Draw&quot;&gt;它是开源的，您可以在 GitHub&lt;/a&gt; 上找到源代码。&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/64008f7afe46ca437e0ac13b&quot;&gt;倾城之链 - Welcome to Method of Action&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/WebAssembly&quot;&gt;&lt;code&gt;WebAssembly&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/TypeScript&quot;&gt;&lt;code&gt;TypeScript&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/npm&quot;&gt;&lt;code&gt;npm&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;A TypeScript-like language for WebAssembly. AssemblyScript compiles a variant of TypeScript (basically JavaScript with types) to WebAssembly using Binaryen. It generates lean and mean WebAssembly modules while being just an npm install away.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/www.assemblyscript.org.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 - AssemblyScript | A TypeScript-like language for WebAssembly&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/redirect?url=https://www.assemblyscript.org/&quot;&gt;AssemblyScript&lt;/a&gt; 用于 WebAssembly 的类似于 TypeScript 的语言（TypeScript-like language），使得无需学习新语言即可轻松编译为 WebAssembly。它使用 &lt;a href=&quot;https://github.com/WebAssembly/binaryen&quot;&gt;Binaryen&lt;/a&gt; 将 &lt;a href=&quot;https://nicelinks.site/post/6278fdeaac00ce3f9b11a8ef&quot;&gt;TypeScript&lt;/a&gt; 的变体（基本上是带有类型的 JavaScript）编译为 &lt;a href=&quot;https://nicelinks.site/post/618b8df4a18dec25673723ae&quot;&gt;WebAssembly&lt;/a&gt; 。它生成精简且平均的 WebAssembly 模块，同时只需安装一个 &lt;a href=&quot;https://nicelinks.site/post/6216392f2d17f22050cf1a2b&quot;&gt;npm&lt;/a&gt; 。&lt;/p&gt;&lt;h3 id=&quot;功能特征&quot;&gt;&lt;a href=&quot;#%E5%8A%9F%E8%83%BD%E7%89%B9%E5%BE%81&quot; aria-label=&quot;功能特征 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;功能特征&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;专为 WebAssembly 设计&lt;/strong&gt;：AssemblyScript 专门针对 WebAssembly 的功能集，使开发人员能够对其代码进行低级控制。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;熟悉的 TypeScript 语法&lt;/strong&gt;：它与 TypeScript 的相似性使得无需学习新语言即可轻松编译为 WebAssembly。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;触手可及&lt;/strong&gt;：与现有的 Web 生态系统集成——无需设置繁重的工具链。 只需要 &lt;code&gt;npm install&lt;/code&gt; 就可以了。&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;为什么选择-assemblyscript&quot;&gt;&lt;a href=&quot;#%E4%B8%BA%E4%BB%80%E4%B9%88%E9%80%89%E6%8B%A9-assemblyscript&quot; aria-label=&quot;为什么选择 assemblyscript permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;为什么选择 AssemblyScript？&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;“你现在无需学习一门新语言就可以编写 WebAssembly，并利用 WebAssembly 可能为你提供的所有这些好处。我认为这有点强大。AssemblyScript 绝对可用，而且非常有趣！” —— &lt;strong&gt;Surma&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;“AssemblyScript 在设计时考虑了 WebAssembly 和代码大小。它不是我们为新目的使用的现有语言，而是为 WebAssembly 设计的语言。它有很好的 wasm-opt 集成，事实上它是用它构建的，而且很容易获得良好的代码大小。” – &lt;strong&gt;Alon Zakai&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;“我选择 AssemblyScript 是因为它具有高级可读性和低级控制。它就像一种高级语言，但你会有那种低级的感觉，如果你愿意，你甚至可以直接编写 WebAssembly 内在函数。” – &lt;strong&gt;Peter Salomonsen&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;assemblyscript-和-typescript-之间有什么区别&quot;&gt;&lt;a href=&quot;#assemblyscript-%E5%92%8C-typescript-%E4%B9%8B%E9%97%B4%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB&quot; aria-label=&quot;assemblyscript 和 typescript 之间有什么区别 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;AssemblyScript 和 TypeScript 之间有什么区别？&lt;/h3&gt;&lt;p&gt;TypeScript 向下转换为 JavaScript，一种动态的即时编译语言。另一方面 ，AssemblyScript 编译成静态的 &lt;a href=&quot;https://nicelinks.site/tags/WebAssembly&quot;&gt;WebAssembly&lt;/a&gt; 二进制文件。他们的编译器实现完全不同。然而，这两种语言在表面上非常相似，以至于它们共享许多概念。例如，TypeScript 工具可用于编写和重构 AssemblyScript 代码，并且通过一些努力，可以将相同的代码库转换为 JavaScript &lt;code&gt;tsc&lt;/code&gt; 并编译为 WebAssembly &lt;code&gt;asc&lt;/code&gt;，或者共享代码。AssemblyScript 编译器本身是可移植的。&lt;/p&gt;&lt;p&gt;AssemblyScript 是 TypeScript 的子集，为了方便编译成 WebAssembly 在 TypeScript 的基础上加了更严格的 &lt;a href=&quot;https://github.com/AssemblyScript/assemblyscript/wiki/Limitations&quot;&gt;类型限制&lt;/a&gt; ， 两者间详细区别如下：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;比 TypeScript 多了很多更细致的内置类型，以优化性能和内存占用，详情 &lt;a href=&quot;https://github.com/AssemblyScript/assemblyscript/wiki/Types&quot;&gt;文档&lt;/a&gt; ;&lt;/li&gt;&lt;li&gt;不能使用 any 和 undefined 类型，以及枚举类型；&lt;/li&gt;&lt;li&gt;可空类型的变量必须是引用类型，而不能是基本数据类型如 string、number、boolean；&lt;/li&gt;&lt;li&gt;函数中的可选参数必须提供默认值，函数必须有返回类型，无返回值的函数返回类型需要是 void；&lt;/li&gt;&lt;li&gt;不能使用 JS 环境中的内置函数，只能使用 &lt;a href=&quot;https://github.com/AssemblyScript/assemblyscript/wiki/Built-in-functions&quot;&gt;AssemblyScript 提供的内置函数&lt;/a&gt; 。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;总体来说 AssemblyScript 比 TypeScript 又多了很多限制，编写起来会觉得局限性很大； 用 AssemblyScript 来写 WebAssembly 经常会出现 tsc 编译通过但运行 WebAssembly 时出错的情况，这很可能就是你没有遵守以上限制导致的；但 AssemblyScript 通过修改 TypeScript 编译器默认配置能在编译阶段找出大多错误。&lt;/p&gt;&lt;p&gt;如果您想更清晰了解两者之间差异，可以查看 Waft 团队所整理的 &lt;a href=&quot;https://www.yuque.com/waft/docs/vae4av&quot;&gt;常用 AssemblyScript 语法差异&lt;/a&gt; 。&lt;/p&gt;&lt;p&gt;AssemblyScript 的实现原理其实也借助了 LLVM（是一个开源的编译器基础设施，可以用来构建编译器、调试器、静态分析工具等程序，支持多种编程语言。其命名最早源自于 Low Level Virtual Machine：&lt;strong&gt;底层虚拟机器&lt;/strong&gt;），它通过 TypeScript 编译器把 TS 源码解析成 AST，再把 AST 翻译成 IR（Intermediate Representation 中间语言），再通过 LLVM 编译成 WebAssembly 字节码实现； 上面提到的各种限制都是为了方便把 AST 转换成 LLVM IR。&lt;/p&gt;&lt;h3 id=&quot;assemblyscript-最终会支持所有的-typescript-吗&quot;&gt;&lt;a href=&quot;#assemblyscript-%E6%9C%80%E7%BB%88%E4%BC%9A%E6%94%AF%E6%8C%81%E6%89%80%E6%9C%89%E7%9A%84-typescript-%E5%90%97&quot; aria-label=&quot;assemblyscript 最终会支持所有的 typescript 吗 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;AssemblyScript 最终会支持所有的 TypeScript 吗？&lt;/h3&gt;&lt;p&gt;它可能不会。虽然 TypeScript 为 JavaScript 添加了类型，但它毕竟是一个超集，可以描述 JavaScript 的许多动态特性，但并非所有这些特性都可以在提前编译中支持。然而，足够严格的 TypeScript 代码通常可以毫不费力地与 AssemblyScript 编译器兼容。&lt;/p&gt;&lt;h3 id=&quot;assemblyscript-有哪些好的用例&quot;&gt;&lt;a href=&quot;#assemblyscript-%E6%9C%89%E5%93%AA%E4%BA%9B%E5%A5%BD%E7%9A%84%E7%94%A8%E4%BE%8B&quot; aria-label=&quot;assemblyscript 有哪些好的用例 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;AssemblyScript 有哪些好的用例？&lt;/h3&gt;&lt;p&gt;图像处理、热门游戏逻辑、专用算法、仿真器、编译器等计算量大的逻辑是 WebAssembly 的重要用例，AssemblyScript 也是如此。在某些情况下，传送字节码而不是缩小的 JS 可能更可取，或者仅仅是利用类似 TypeScript 的语言的能力可能会开辟新的机会，例如嵌入式脚本或插件。&lt;/p&gt;&lt;h3 id=&quot;assemblyscript-能否以非标准方式使用比如在浏览器之外&quot;&gt;&lt;a href=&quot;#assemblyscript-%E8%83%BD%E5%90%A6%E4%BB%A5%E9%9D%9E%E6%A0%87%E5%87%86%E6%96%B9%E5%BC%8F%E4%BD%BF%E7%94%A8%E6%AF%94%E5%A6%82%E5%9C%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B9%8B%E5%A4%96&quot; aria-label=&quot;assemblyscript 能否以非标准方式使用比如在浏览器之外 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;AssemblyScript 能否以非标准方式使用，比如在浏览器之外？&lt;/h3&gt;&lt;p&gt;绝对可以！AssemblyScript 模块是独立的，可以在支持 WebAssembly 的任何地方运行。事实上，可以支持任何任意主机接口。这是 &lt;a href=&quot;https://github.com/AssemblyScript/wasi-shim&quot;&gt;使用 WASI 导入而不是 Web API 的示例 （打开新窗口）&lt;/a&gt; .&lt;/p&gt;&lt;p&gt;截止目前（2023 年 03 月 01 日），使用 AssemblyScript 构建应用程序，已经在区块链、游戏、加密、数据序列化/反序列化、图形框架等方面积累了大量实践。如果您对其感兴趣，可以移步 &lt;a href=&quot;https://github.com/AssemblyScript/assemblyscript&quot;&gt;AssemblyScript Github 开源仓库&lt;/a&gt; ，从而了解更多。&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/63ff1810fe46ca437e0ab0cd&quot;&gt;倾城之链 - AssemblyScript | A TypeScript-like language for WebAssembly&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/%E5%9C%A8%E7%BA%BF&quot;&gt;&lt;code&gt;在线&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/AI&quot;&gt;&lt;code&gt;AI&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/ChatGPT&quot;&gt;&lt;code&gt;ChatGPT&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;素问智聊斋，非官方 ChatGPT 在线客户端，旨在提供更便捷的 ChatGPT 访问体验；它基于非官方 ChatGPT API、Svelte、TailwindCSS、Vite 和 NodeJS 所搭建，只要输入 OPENAI API KEY 就可以使用。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/chatgpt.nicelinks.site.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 - 素问智聊斋&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：&lt;a href=&quot;https://chatgpt.nicelinks.site/&quot;&gt;素问智聊斋&lt;/a&gt; ，非官方 ChatGPT 在线客户端，旨在提供更便捷的 ChatGPT 访问体验；它基于非官方 &lt;a href=&quot;https://github.com/transitive-bullshit/chatgpt-api&quot;&gt;ChatGPT API&lt;/a&gt; 、 &lt;a href=&quot;https://nicelinks.site/post/62a9c2ad90509e23cea772c0&quot;&gt;Svelte&lt;/a&gt; 、 &lt;a href=&quot;https://nicelinks.site/post/5fd20cb4c06d6302c1907ec7&quot;&gt;TailwindCSS&lt;/a&gt; 、 &lt;a href=&quot;https://nicelinks.site/post/6010e1b10c71de1fb957b64e&quot;&gt;Vite&lt;/a&gt; 和 NodeJS 所搭建，只要输入 OPENAI API KEY 就可以使用。&lt;/p&gt;&lt;h3 id=&quot;目标与哲学&quot;&gt;&lt;a href=&quot;#%E7%9B%AE%E6%A0%87%E4%B8%8E%E5%93%B2%E5%AD%A6&quot; aria-label=&quot;目标与哲学 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;目标与哲学&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://nicelinks.site/post/6391e22878b7a1291995ff86&quot;&gt;OpenAI&lt;/a&gt; 于 2022 年 11 月推出的超级对话模型 &lt;strong&gt;ChatGPT&lt;/strong&gt;， 受到来自世界各地的认可和赞誉，令人印象深刻。然而，由于一些原因，如果没有正确搭建相应的环境（🪜），ChatGPT 在中国地区就无法正常使用。鉴于此，搭建了这个服务，以便用户能够方便地使用 ChatGPT。需要指出的是，使用者首先需要在 OpenAI 官网上注册、登录、申请 &lt;code&gt;API KEY&lt;/code&gt;，才可以使用本服务。此外，为了保障用户的数据安全，本服务的操作过程中不会存储任何使用者的数据，因此可以放心使用（备注：这段介绍有使用本服务加以润色）。&lt;/p&gt;&lt;h3 id=&quot;适用场景&quot;&gt;&lt;a href=&quot;#%E9%80%82%E7%94%A8%E5%9C%BA%E6%99%AF&quot; aria-label=&quot;适用场景 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;适用场景&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;因为环境限制，无法正常 使用 ChatGPT 时；&lt;/li&gt;&lt;li&gt;具备账号，想让远方亲人、朋友快速体验 ChatGPT。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;补充说明：承诺后台不会保存任何数据；基于 API KEY 发起的对话内容，会同步到对应账号；如果您习惯使用桌面客户端，类似项目有：&lt;a href=&quot;https://github.com/lencx/ChatGPT&quot;&gt;lencx/ChatGPT&lt;/a&gt;。&lt;/p&gt;&lt;h3 id=&quot;诞生初衷&quot;&gt;&lt;a href=&quot;#%E8%AF%9E%E7%94%9F%E5%88%9D%E8%A1%B7&quot; aria-label=&quot;诞生初衷 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;诞生初衷&lt;/h3&gt;&lt;p&gt;最原始的动机，是因为：以上两点适用场景所对应的诉求，我觉得都需要。但，这并不足以缘起这个项目，更详细的阐述如下：&lt;/p&gt;&lt;p&gt;作为颇爱折腾的技术人员，ChatGPT 自然是要体验；有请时在美国的朋友，帮着注册®️了账号；然而，蛮多时候即便采用科学上网，设备却无法成功登陆 &lt;a href=&quot;https://chat.openai.com/chat&quot;&gt;ChatGPT 官网地址&lt;/a&gt; 。恰逢一个契机——帮朋友写几行关于 ChatGPT 的示例；当痛点（Motivation：动机）碰上可执行性（Ability：能力），外加适当的&lt;strong&gt;触发条件&lt;/strong&gt;（Trigger），福格行为模型（BJ Foog&#x27;s Behaviour Model）已全部满足，于是乎， &lt;a href=&quot;https://chatgpt.nicelinks.site/&quot;&gt;素问智聊斋&lt;/a&gt; 就有了诞生的充足理由。&lt;/p&gt;&lt;h3 id=&quot;命名来源&quot;&gt;&lt;a href=&quot;#%E5%91%BD%E5%90%8D%E6%9D%A5%E6%BA%90&quot; aria-label=&quot;命名来源 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;命名来源&lt;/h3&gt;&lt;p&gt;早在 &lt;a href=&quot;https://forum.lovejade.cn/d/1&quot;&gt;关于“悠然宜想亭”的由来，以及未来&lt;/a&gt; 一文提及，对于网站取名多是五个字；或是兴趣的原因，其后缀带有 &lt;a href=&quot;https://forum.lovejade.cn/d/9&quot;&gt;亭台楼阁、轩榭廊舫，殿庭苑斋&lt;/a&gt; 其中一个；其中大部分已被使用；因为「Chat」的应为对应的是「对话、聊天」；于是，「斋」字就这么定下；AI 对应智能，所以「智聊」也就应景而生。&lt;/p&gt;&lt;p&gt;原本命名为「智聊问异斋」，后觉不妥，略阅资料，遂修改为 &lt;code&gt;素问智聊斋&lt;/code&gt;；素问：最早或于《黄帝内经》；釋名：“「素者，本也；問者，黃帝問於岐伯也」”。另有解释为：“&lt;strong&gt;即问本，探索人与自然的根本性问题&lt;/strong&gt;”。当想 ChatGPT 说：“解释下「素问」”，它给出以下解释：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;「素问」是一种中国古代哲学思想，它强调对本质的探究。它的核心思想是：任何事物都有其本质，而且这个本质不受时间和空间的束缚，所以要理解它，就必须通过探究本质来探索事物的真相。&lt;/p&gt;&lt;/blockquote&gt;&lt;h3 id=&quot;技术选型&quot;&gt;&lt;a href=&quot;#%E6%8A%80%E6%9C%AF%E9%80%89%E5%9E%8B&quot; aria-label=&quot;技术选型 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;技术选型&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://nicelinks.site/post/62a9c2ad90509e23cea772c0&quot;&gt;Svelte&lt;/a&gt; 、 &lt;a href=&quot;https://nicelinks.site/post/5fd20cb4c06d6302c1907ec7&quot;&gt;TailwindCSS&lt;/a&gt; 、 &lt;a href=&quot;https://nicelinks.site/post/6010e1b10c71de1fb957b64e&quot;&gt;Vite&lt;/a&gt; 、Fastify、TypeScript 等，具为当前所流行，并且喜爱的技术栈 / 工具；其中 Fastify、Svelte 尚未使用过值得一提；&lt;/p&gt;&lt;h4 id=&quot;什么是-svelte&quot;&gt;&lt;a href=&quot;#%E4%BB%80%E4%B9%88%E6%98%AF-svelte&quot; aria-label=&quot;什么是 svelte permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;什么是 Svelte？&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://nicelinks.site/post/62a9c2ad90509e23cea772c0&quot;&gt;Svelte&lt;/a&gt; 是 &lt;a href=&quot;https://blog.logrocket.com/should-you-switch-react-svelte/&quot;&gt;另一个前端框架，类似于 React&lt;/a&gt; 或 Vue。像这两个一样，你可以使用 Svelte 来制作单页应用程序。然而，Svelte 有一些特性使其与其他框架截然不同。&lt;/p&gt;&lt;p&gt;例如，与其他框架不同，Svelte 主要是一个编译框架；Svelte 库的大部分是运行时依赖项 &lt;code&gt;devDependency&lt;/code&gt;，而不是运行时依赖项。这有助于使最终应用程序更小、更快，以便客户端下载。&lt;/p&gt;&lt;p&gt;另一个区别是 Svelte 不使用虚拟 DOM。相反，它使用各种策略来仅更新已更改的页面的特定部分。这减少了开销并使应用程序更快。&lt;/p&gt;&lt;p&gt;Svelte 还通过不需要类或函数来声明组件来提供易用性。每个 Svelte 文件本身都被视为一个组件。&lt;/p&gt;&lt;p&gt;最后，Svelte 的钩子很少。尽管生命周期功能需要挂钩，但 Svelte 不需要复杂的状态管理挂钩。状态可以通过声明一个变量来存储和使用，就像在 vanilla JavaScript 中一样。&lt;/p&gt;&lt;h3 id=&quot;思考感悟&quot;&gt;&lt;a href=&quot;#%E6%80%9D%E8%80%83%E6%84%9F%E6%82%9F&quot; aria-label=&quot;思考感悟 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;思考感悟&lt;/h3&gt;&lt;p&gt;关于 ChatGPT，相信接触过它的人们，或多或少都会有自己的感受；目前为止，吾有以下几点看法：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;类 ChatGPT 似 AI 产品，必将像如今的手机一般，成为绝大部分人类生活必需品；&lt;/li&gt;&lt;li&gt;毕竟是工具，使用乃至产生依赖，倒无不可；但也不能荒废自身，我辈仍须保持&lt;strong&gt;深度学习&lt;/strong&gt;及提高学习能力；&lt;/li&gt;&lt;li&gt;AI 会进而加剧人与人之间的差异；因为不喜欢折腾或探究的人，很难尽早去接触它，而是等时代浪潮拍打过来。&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;其他作品&quot;&gt;&lt;a href=&quot;#%E5%85%B6%E4%BB%96%E4%BD%9C%E5%93%81&quot; aria-label=&quot;其他作品 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;其他作品&lt;/h3&gt;&lt;p&gt;以上介绍内容，部分使用 ChatGPT 加以&lt;strong&gt;润色&lt;/strong&gt;。截止目前，它可以协助人类，已经很多，诸如学术论文、内容创作、翻译、数据分析、研究咨询、简历和求职信、广告文案、编写小说、个人陈述、SEO 优化等等，如果想让它更好帮助到您，可以移步 &lt;a href=&quot;https://github.com/PlexPt/awesome-chatgpt-prompts-zh&quot;&gt;ChatGPT 中文调教指南&lt;/a&gt; ，学习怎么让它在不同场景，更好听懂你的话。如果您有任何建议或意见，欢请移步 &lt;a href=&quot;https://chatgpt.nicelinks.site/#/about&quot;&gt;素问智聊斋 ｜ 关于&lt;/a&gt; 赐教分享。&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/63fdeb37fe46ca437e0aa780&quot;&gt;倾城之链 - 素问智聊斋&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/%E6%9C%89%E8%B6%A3&quot;&gt;&lt;code&gt;有趣&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E4%BA%A7%E5%93%81&quot;&gt;&lt;code&gt;产品&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E7%81%B5%E6%84%9F&quot;&gt;&lt;code&gt;灵感&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&quot;Very good english&quot; is not very good english. Lose the very. Write concisely by substituting &quot;very&quot; + &quot;adjective&quot; with a more concise adjective that has the spirit of very contained within it.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/www.losethevery.com.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 - Lose the Very&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/redirect?url=https://www.losethevery.com/&quot;&gt;Lose the Very&lt;/a&gt; ，一个有意思的网站，可以用来提高自己的英文表达技巧：从不使用 “Very” 开始；在该网站可以看到很多 “Very + Adjective” 的高级替代词（至少 150+ ）。网站创建者 Connor Callahan 认为：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;“Very good english&quot; is not very good english. Lose the very.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Connor Callahan 认为 &lt;a href=&quot;https://nicelinks.site/redirect?url=https://www.losethevery.com/&quot;&gt;Lose the Very&lt;/a&gt; 是帮助从词汇表中删除“非常”（Very）的最佳方法；他主张用一个更简洁的形容词代替 &quot;very&quot; + &quot;adjective&quot;（形容词），并在其中包含 &quot;非常 &quot;的精神，从而使写作更简洁。如果您输入 “beautiful”，它会给出替代词：&lt;code&gt;bewitching&lt;/code&gt;（[ bih-wich-ing ]），并且给出了该词在前往 &lt;a href=&quot;https://www.dictionary.com/browse/bewitching&quot;&gt;dictionary.com&lt;/a&gt; 的链接地址，那里提供了对单词的发音、释义、造句以及相关词汇等信息说明。&lt;/p&gt;&lt;p&gt;Connor Callahan 在数据库中只添加了大约 150 个词。如果你想看到添加的形容词（或提出任何建议），可以按 &quot;更新数据库 &quot;按钮，以改善大家的经验。值得一提的是，该项目在 &lt;a href=&quot;https://nicelinks.site/post/5f40d0bf15435e0906a0a26f&quot;&gt;Product Hunt&lt;/a&gt; 上获得当天排名第一的产品；有网友评价道：“It’s a very good website”，感兴趣的朋友不妨前往体验下。&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/63fca715fe46ca437e0a9c20&quot;&gt;倾城之链 - Lose the Very&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/%E5%AF%BC%E8%88%AA&quot;&gt;&lt;code&gt;导航&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E5%8F%91%E7%8E%B0&quot;&gt;&lt;code&gt;发现&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E7%BD%91%E7%AB%99&quot;&gt;&lt;code&gt;网站&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;关键字&lt;/strong&gt;：懒人导航网, 懒人资源库, 懒人技术导航, 懒人教程网, 站长导航网, 懒人导航系统&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;懒人导航网（&lt;a href=&quot;https://lanrenao.com%EF%BC%89%E6%98%AF%E5%85%A8%E7%BD%91%E6%9C%80%E5%AE%9E%E7%94%A8%E7%AE%80%E6%B4%81%E7%9A%84%E7%BD%91%E5%9D%80%E5%AF%BC%E8%88%AA%E3%80%82%E6%94%B6%E9%9B%86%E5%85%A8%E7%BD%91%E7%B2%BE%E5%93%81%E5%85%8D%E8%B4%B9%E8%B5%84%E6%BA%90%EF%BC%8C%E5%8C%85%E6%8B%AC%E8%B5%84%E6%BA%90%E7%BD%91%E7%AB%99%E3%80%81%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7%E3%80%81%E5%AE%9E%E7%94%A8%E8%BD%AF%E4%BB%B6%E3%80%81%E5%85%8D%E8%B4%B9%E5%BD%B1%E8%A7%86%E7%BD%91%E7%AB%99%E3%80%81%E5%85%8D%E8%B4%B9%E9%9F%B3%E4%B9%90%E3%80%81%E5%85%8D%E8%B4%B9%E5%B0%8F%E8%AF%B4%E3%80%81%E5%85%8D%E8%B4%B9%E6%BC%AB%E7%94%BB%E7%AB%99%E3%80%81%E5%85%8D%E8%B4%B9%E5%8A%A8%E6%BC%AB%E4%BB%A5%E5%8F%8A%E8%87%AA%E5%AA%92%E4%BD%93%E5%88%9B%E4%BD%9C%E7%AD%89%E7%AD%89%E4%B8%8A%E7%99%BE%E4%B8%AA%E5%88%86%E7%B1%BB%E7%9A%84%E4%BC%98%E7%A7%80%E7%AB%99%E7%82%B9%EF%BC%8C%E6%8F%90%E4%BE%9B%E7%AE%80%E5%8D%95%E4%BE%BF%E6%8D%B7%E7%9A%84%E7%BD%91%E4%B8%8A%E5%AF%BC%E8%88%AA%E6%9C%8D%E5%8A%A1%E3%80%82&quot;&gt;https://lanrenao.com）是全网最实用简洁的网址导航。收集全网精品免费资源，包括资源网站、实用工具、实用软件、免费影视网站、免费音乐、免费小说、免费漫画站、免费动漫以及自媒体创作等等上百个分类的优秀站点，提供简单便捷的网上导航服务。&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/lanrenao.com.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 - 懒人导航网 | 全网最实用简洁的懒人导航网&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/redirect?url=https://lanrenao.com/&quot;&gt;懒人导航网&lt;/a&gt;，实用、简洁的网址导航。旨在收集全网精品免费资源，包括资源网站、实用工具、实用软件、免费影视网站、免费音乐、免费小说、免费漫画站、免费动漫，以及&lt;strong&gt;自媒体创作&lt;/strong&gt;等等上百个分类的优秀站点，提供简单便捷的网上导航服务。&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://nicelinks.site/redirect?url=https://lanrenao.com/&quot;&gt;懒人导航网&lt;/a&gt; 将所收录网站，划分为：前端合集、前端导航、摸鱼时间、热榜、新闻、游戏、小说、直播、影视频道、软件下载、搜索查询、素材资源、实用工具、网站建设、探索发现、优质公众号等板块儿，每个板块儿下，又分标签🏷️；如在&lt;strong&gt;摸鱼时间&lt;/strong&gt;板块儿中，有热榜、新闻、游戏、小说、直播等标签，此外该导航还内置各种检索，您可以根据自己的诉求，快速找到自己冲浪🏄‍♀️目标网址。&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/63fa0d9bfe46ca437e0a8a5e&quot;&gt;倾城之链 - 懒人导航网 | 全网最实用简洁的懒人导航网&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/%E5%AD%A6%E4%B9%A0&quot;&gt;&lt;code&gt;学习&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E5%B9%B3%E5%8F%B0&quot;&gt;&lt;code&gt;平台&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E5%BA%94%E7%94%A8&quot;&gt;&lt;code&gt;应用&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;关键字&lt;/strong&gt;：学习，英语，法语，德语，西班牙语，葡萄牙语，意大利语，免费，单元，课程，语言，学习，背单词&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;多邻国是世界上最受欢迎的语言学习平台。做游戏，学语言。免费、有趣、超有效。现在就登录 duolingo.com 或手机应用开始学习吧！&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/www.duolingo.com.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 - Duolingo 多邻国 ｜ 学习外语，寓教于乐&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/redirect?url=https://www.duolingo.com/&quot;&gt;多邻国&lt;/a&gt; （Duolingo），一款受欢迎的语言学习平台（提供网站和手机应用），该公司以免费增值模式营运：网站及应用程式皆免费使用，但也有提供付费升级版本。截至2021年6月，多邻国提供了40种语言共106种的语言课程，也有许多语言课程正在开发中。&lt;/p&gt;&lt;h3 id=&quot;应用特色&quot;&gt;&lt;a href=&quot;#%E5%BA%94%E7%94%A8%E7%89%B9%E8%89%B2&quot; aria-label=&quot;应用特色 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;应用特色&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;成效立竿见影&lt;/strong&gt;：研究表明，使用多邻国课程能快速、有效地提高阅读、听力和口语技能！想知道更多，就来看看最新研究吧。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;始终保持动力&lt;/strong&gt;：游戏化学习、激励性挑战，还有吉祥物猫头鹰多儿为你加油打气，让你轻轻松松，养成学习好习惯。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;个性化学习体验&lt;/strong&gt;：多邻国利用人工智能和语言科学的精髓，根据个人的不同水平和学习步伐，提供最适合你的个性化学习体验。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;畅享学习乐趣&lt;/strong&gt;：高效学习也可以充满情趣；Duolingo 有个性满满的鼓励师团队，每天花样陪你练习。有乐有趣，学习不成问题。&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;商业模式&quot;&gt;&lt;a href=&quot;#%E5%95%86%E4%B8%9A%E6%A8%A1%E5%BC%8F&quot; aria-label=&quot;商业模式 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;商业模式&lt;/h3&gt;&lt;p&gt;多邻国平台的核心服务都是免费的。对手机用户端来说，使用者只会在完成一个单元的学习后才会看到一次广告，相比整个使用时间来说相当有限。使用多邻国平台的学生无需支付服务费。然而，多邻国也有少数需要收费的应用程式内购买服务。&lt;/p&gt;&lt;p&gt;2014 年 7 月，多邻国开设了语言认证服务。&lt;/p&gt;&lt;h3 id=&quot;教学模式&quot;&gt;&lt;a href=&quot;#%E6%95%99%E5%AD%A6%E6%A8%A1%E5%BC%8F&quot; aria-label=&quot;教学模式 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;教学模式&lt;/h3&gt;&lt;p&gt;与其他教学平台相比，多邻国提供大量的听写、单字记忆及口说练习，但文法单元则较为松散。在学习一种语言时，玩家需要攀爬一条游戏化的技能树，每一个技能树分为许多等级，约在 50 至 150 级，每一级又分为许多技能，用户可以在上面逐渐向上攀升。使用者在学习语言的过程中会获得“积分”。每一条技能树约包含 2,000 至 4000 单词。&lt;/p&gt;&lt;p&gt;多邻国采取的是数据导向式教学方式。 在学习的每个过程中，系统会分析用户会纠结于哪些问题，以及会犯哪些错误。然后系统会统计这些数据，并且从中获得改进。&lt;/p&gt;&lt;h3 id=&quot;发展历史&quot;&gt;&lt;a href=&quot;#%E5%8F%91%E5%B1%95%E5%8E%86%E5%8F%B2&quot; aria-label=&quot;发展历史 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;发展历史&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;多邻国起源于 2009 年，美国匹兹堡卡内基梅隆大学的路易斯·冯·安教授和他的研究生 Severin Hacker 发起，并主要是以 Python 写成；&lt;/li&gt;&lt;li&gt;多邻国在 2011 年 11 月 30 日发布了封测版本，其试用者候补名单甚至累积到超过 300,000 用户；&lt;/li&gt;&lt;li&gt;2012 年 6 月 19 日，多邻国向公众开放。2012 年 11 月 23 日，多邻国在苹果 App Store 发布了 iOS 应用；&lt;/li&gt;&lt;li&gt;2013 年 5 月 29 日，多邻国发布了安卓 app，发布前三周就被下载超过一百万次，很快成为 Google Play 商店下载量第一的教育类 app；&lt;/li&gt;&lt;li&gt;2020 年 4 月，Duolingo 多邻国获得 General Atlantic1000 万美元的战略投资；&lt;/li&gt;&lt;li&gt;2021 年 6 月 28 日，多邻国在美国申请公开募股，高盛集团和 Allen &amp;amp; Company 是此次 IPO 的主承销商。该公司计划以“DUOL”的代码交易；&lt;/li&gt;&lt;li&gt;2021 年 7 月 28 日，多邻国在纳斯达克挂牌上市，股票代码为“DUOL”。&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;使用人数&quot;&gt;&lt;a href=&quot;#%E4%BD%BF%E7%94%A8%E4%BA%BA%E6%95%B0&quot; aria-label=&quot;使用人数 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;使用人数&lt;/h3&gt;&lt;p&gt;2020 年 12 月 17 日，在线语言学习 App 多邻国发布了《2020 年语言学习趋势报告》。《报告》数据显示，多邻国全球用户总量达到 5 亿人。新冠疫情期间，其全球用户新增 3000 万人，分别为 2020 年和 2019 年元旦的 2 倍和 1.5 倍，增长速度达 67%。在此期间，多邻国中国用户规模较 2019 年 3 至 4 月同比增长 301%。&lt;/p&gt;&lt;p&gt;每个人的学习方式都不尽相同，该如何达成既照顾大家不同的学习习惯，又保证学习效果一直都是个难题。终于，北京多邻国科技有限公司通过分析亿万用户的学习习惯，成功总结出了一套适用于所有人的、且最有效的学习方法，推出在线语言学习应用—— &lt;a href=&quot;https://nicelinks.site/redirect?url=https://www.duolingo.com/&quot;&gt;Duolingo 多邻国&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;其终极目标是运用现代科技，让人人都能享受到私人教练的指导。如何帮助大家坚持学习一直都是个难题。现在，多邻国有趣的游戏关卡设计，能让更多人在乐趣学习中坚持更久。&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/63f9a1f3fe46ca437e0a83dc&quot;&gt;倾城之链 - Duolingo 多邻国 ｜ 学习外语，寓教于乐&lt;/a&gt;&lt;/p&gt;&lt;p&gt;对倾城之链感兴趣的朋友，可通过 Web，小程序，快应用等渠道进行访问(后续将支持更多，如 VsCode 插件，Chrome 扩展等)。您有任何问题，欢迎随时向我们反馈（您可以通过官网反馈渠道，或添加如下客服微信），🤲 。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://image.nicelinks.site/%E5%80%BE%E5%9F%8E%E4%B9%8B%E9%93%BE-%E5%BE%AE%E4%BF%A1-mini.jpeg&quot; alt=&quot;倾城之链 - 客服微信&quot;/&gt;&lt;/p&gt;&lt;h2 id=&quot;本期文末寄语&quot;&gt;&lt;a href=&quot;#%E6%9C%AC%E6%9C%9F%E6%96%87%E6%9C%AB%E5%AF%84%E8%AF%AD&quot; aria-label=&quot;本期文末寄语 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;本期文末寄语&lt;/h2&gt;&lt;p&gt;人的外表，其实什么都不是，皮囊而已，在时间里，皮囊终会老去，最后所有的光鲜都会被褶皱吞噬，而灵魂不会，这灵魂里包括你走过的路，经历过的事，还有你一生的思考。──当代著名作家 · 王小波&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://nicelinks.site/?utm_source=weekly&quot;&gt;倾城之链&lt;/a&gt;作为一个开放平台，旨在云集全球&lt;strong&gt;优秀网站&lt;/strong&gt;，探索互联网中更广阔的世界；在这里，你可以轻松发现、学习、分享更多有用或有趣的事物。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://image.nicelinks.site/nicelinks-miniprogram-code.jpeg?imageView2/1/w/250/h/250/interlace/1/ignore-error/1&quot; alt=&quot;小程序码 - 倾城之链&quot;/&gt;&lt;/p&gt;&lt;h2 id=&quot;您可能感兴趣的文章&quot;&gt;&lt;a href=&quot;#%E6%82%A8%E5%8F%AF%E8%83%BD%E6%84%9F%E5%85%B4%E8%B6%A3%E7%9A%84%E6%96%87%E7%AB%A0&quot; aria-label=&quot;您可能感兴趣的文章 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;您可能感兴趣的文章&lt;/h2&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>54e7d5e6fcedc3900c3e64553785b48b</guid>
<title>【MySQL技术专题】「性能优化系列」一直都倾向于优化查询，这次学习一下优化Insert插入语句_洛神灬殇的博客-CSDN博客</title>
<link>https://toutiao.io/k/kcmy0c8</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div id=&quot;content_views&quot; class=&quot;markdown_views prism-atom-one-dark&quot;&gt;
                    &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;
                        &lt;path stroke-linecap=&quot;round&quot; d=&quot;M5,0 0,2.5 5,5z&quot; id=&quot;raphael-marker-block&quot;/&gt;
                    &lt;/svg&gt;
                    &lt;h3&gt;&lt;a id=&quot;_0&quot;/&gt;分析一下插入数据的因素&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;插入一个记录需要的时间由下列因素组成，大概分析相关的因素百分比是？&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt;&lt;li&gt;连接耗时：百分之30的因素&lt;/li&gt;&lt;li&gt;发送查询给服务器耗时：百分之20的因素&lt;/li&gt;&lt;li&gt;分析查询耗时：百分之20的因素&lt;/li&gt;&lt;li&gt;插入记录耗时：百分之10的因素&lt;/li&gt;&lt;li&gt;插入索引耗时：百分之10的因素&lt;/li&gt;&lt;li&gt;关闭连接耗时：百分之10的因素&lt;/li&gt;&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;如果不考虑打开表的初始开销，每个并发运行的查询打开表的大小以logN (B树)的速度减慢索引的插入。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;&lt;a id=&quot;_13&quot;/&gt;如何加快插入数据的方案&lt;/h3&gt; 
&lt;h4&gt;&lt;a id=&quot;SQL_15&quot;/&gt;合并插入SQL的语句操作&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;如果同时从同一个客户端插入很多行，使用含多个VALUE的INSERT语句同时插入几行。这比使用单行INSERT语句快(在某些情况下快几倍)。&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;&lt;a id=&quot;_19&quot;/&gt;调节批次插入的缓冲池大小&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;如果你正向一个非空表添加数据，可以调节bulk_insert_buffer_size变量，使数据插入更快。&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;&lt;a id=&quot;Insert_Delayed_23&quot;/&gt;采用Insert Delayed语句进行插入操作控制&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;如果你从不同的客户端插入很多行（无法合并SQL语句的操作处理），能通过INSERT DELAYED语句加快速度。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h5&gt;&lt;a id=&quot;INSERT_DELAYED__27&quot;/&gt;INSERT DELAYED 语法&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;prism language-sql&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;LOW_PRIORITY &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;DELAYED&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; HIGH_PRIORITY&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;IGNORE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;INTO&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; tbl_name &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;col_name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;VALUES&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;{expr &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;DEFAULT&lt;/span&gt;}&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;DUPLICATE&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;KEY&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;UPDATE&lt;/span&gt; col_name&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;expr&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;或：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;prism language-sql&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;LOW_PRIORITY &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;DELAYED&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; HIGH_PRIORITY&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;IGNORE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;INTO&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; tbl_name
    &lt;span class=&quot;token keyword&quot;&gt;SET&lt;/span&gt; col_name&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;{expr &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;DEFAULT&lt;/span&gt;}&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;DUPLICATE&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;KEY&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;UPDATE&lt;/span&gt; col_name&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;expr&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;用于INSERT语句的DELAYED选项是MySQL相对于标准SQL的扩展,如果您的客户端不能等待INSERT完成，则这个选项是非常有用的。&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt;&lt;li&gt; &lt;p&gt;当您使用MySQL进行日志编写时，这是非常常见的问题。您也可以定期运行SELECT和UPDATE语句，这些语句花费的时间较长。&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;当客户端使用INSERT DELAYED时，会立刻从服务器处得到一个确定。并且行被排入队列，当表没有被其它线程使用时，此行被插入。&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;使用INSERT DELAYED的另一个重要的好处是，来自许多客户端的插入被集中在一起，并被编写入一个块。这比执行许多独立的插入要快很多。&lt;/p&gt; &lt;/li&gt;&lt;/ul&gt; 
&lt;h4&gt;&lt;a id=&quot;DELAYED_52&quot;/&gt;使用DELAYED时有一些限制&lt;/h4&gt; 
&lt;ul&gt;&lt;li&gt; &lt;p&gt;INSERT DELAYED仅适用于MyISAM, MEMORY和ARCHIVE表。对于MyISAM表，如果在数据文件的中间没有空闲的块，则支持同时采用SELECT和INSERT语句。&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;在这些情况下，基本不需要对MyISAM使用INSERT DELAYED。&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;INSERT DELAYED应该仅用于指定值清单的INSERT语句。&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;服务器忽略用于INSERT DELAYED…SELECT语句的DELAYED。&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;服务器忽略用于INSERT DELAYED…ON DUPLICATE UPDATE语句的DELAYED。&lt;/p&gt; &lt;/li&gt;&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;As of MySQL 5.6.6, INSERT DELAYED is deprecated; expect it to be removed in a future release. Use INSERT (without DELAYED) instead.&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;注意，目前在队列中的各行只保存在存储器中，直到它们被插入到表中为止。这意味着，如果您强行中止了mysqld（例如，使用kill -9）或者如果mysqld意外停止，则所有没有被写入磁盘的行都会丢失。&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;以下详细描述了当您对INSERT或REPLACE使用DELAYED选项时会发生什么情况, 在这些描述中，“线程”指的是已接受了一个INSERT DELAYED语句的线程，“管理程序”指的是为某个特定的表处理所有INSERT DELAYED语句的线程。&lt;/p&gt; 
&lt;p&gt;当线程对一个表执行DELAYED语句时，会创建出一个管理程序线程，对用于本表的所有DELAYED语句进行处理。&lt;/p&gt; 
&lt;ul&gt;&lt;li&gt; &lt;p&gt;线程会检查是否管理程序以前已获取了DELAYED锁定；如果没有获取，则告知管理程序线程进行此项操作。即使其它线程对表有READ或WRITE锁定，也可以获得DELAYED锁定。但是管理程序会等待所有的ALTER TABLE锁定或FLUSH TABLE锁定，以确保表的结构是最新的。&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;线程执行INSERT语句，但不是把行写入表中，而是把最终行的拷贝放入一个由管理程序线程管理的队列中。线程会提示出现语法错误，这些错误会被报告到客户端中。&lt;/p&gt; &lt;/li&gt;&lt;/ul&gt; 
&lt;h4&gt;&lt;a id=&quot;MyISAM_79&quot;/&gt;采用MyISAM引擎，可以提高并发度&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;如果用MyISAM，如果在表中没有删除的行，能在SELECT语句正在运行的同时插入行。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;&lt;a id=&quot;_83&quot;/&gt;直接通过文本载入&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;当从一个文本文件装载一个表时，使用LOAD DATA INFILE。这通常比使用很多INSERT语句快20倍。当表有很多索引时，有可能要多做些工作使得LOAD DATA INFILE更快些。&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;&lt;a id=&quot;insert_87&quot;/&gt;锁定表加速insert操作&lt;/h4&gt; 
&lt;ul&gt;&lt;li&gt; &lt;p&gt;锁定表可以加速用多个语句执行的INSERT操作&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;这样性能会提高，因为索引缓存区仅在所有INSERT语句完成后刷新到磁盘上一次。一般有多少INSERT语句即有多少索引缓存区刷新。如果能用一个语句插入所有的行，就不需要锁定。对于事务表，应使用BEGIN和COMMIT代替LOCK TABLES来加快插入。&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;INSERT、UPDATE和DELETE操作在MySQL中是很快的，通过为在一行中多于大约5次连续不断地插入或更新的操作加锁，可以获得更好的整体性能。如果在一行中进行多次插入，可以执行LOCK TABLES，随后立即执行UNLOCK TABLES(大约每1000行)以允许其它的线程访问表。这也会获得好的性能。&lt;/p&gt; &lt;/li&gt;&lt;/ul&gt; 
&lt;h5&gt;&lt;a id=&quot;_96&quot;/&gt;锁表&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;prism language-sql&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;LOCK&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;TABLES&lt;/span&gt; &lt;span class=&quot;token identifier&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;`&lt;/span&gt;order&lt;span class=&quot;token punctuation&quot;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;WRITE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;&lt;a id=&quot;_102&quot;/&gt;禁用键&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;prism language-sql&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;ALTER&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;token identifier&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;`&lt;/span&gt;order&lt;span class=&quot;token punctuation&quot;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;DISABLE&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;KEYS&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;&lt;a id=&quot;_108&quot;/&gt;插入数据&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;prism language-sql&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;token identifier&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;`&lt;/span&gt;order&lt;span class=&quot;token punctuation&quot;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;VALUES&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#x27;UPDATED&#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;token identifier&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;`&lt;/span&gt;order&lt;span class=&quot;token punctuation&quot;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;VALUES&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#x27;UPDATED&#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;&lt;a id=&quot;_115&quot;/&gt;启用键&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;prism language-sql&quot;&gt; &lt;span class=&quot;token keyword&quot;&gt;ALTER&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;token identifier&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;`&lt;/span&gt;order&lt;span class=&quot;token punctuation&quot;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;ENABLE&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;KEYS&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;&lt;a id=&quot;_120&quot;/&gt;解锁表&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;prism language-sql&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;UNLOCK&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;TABLES&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;a id=&quot;key_buffer_size_126&quot;/&gt;key_buffer_size提高扩充键缓冲区&lt;/h4&gt; 
&lt;p&gt;为了对LOAD DATA INFILE和INSERT在MyISAM表得到更快的速度，通过增加key_buffer_size系统变量来扩大 键高速缓冲区&lt;/p&gt; 
&lt;h3&gt;&lt;a id=&quot;_130&quot;/&gt;参考分析&lt;/h3&gt; 
&lt;ul&gt;&lt;li&gt;https://dev.mysql.com/doc/refman/5.6/en/insert-delayed.html&lt;/li&gt;&lt;/ul&gt;
                &lt;/div&gt;
                
                
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>90dbdd1a31389237c3478f120ad655d1</guid>
<title>没写过复杂 React 组件？来实现下 AntD 的 Space 组件吧</title>
<link>https://toutiao.io/k/plt53qi</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用 React 技术栈的小伙伴基本每天都在写 React 组件，但是大多是是业务组件，并不是很复杂。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;基本就是传入 props，render 出最终的视图，用 hooks 组织下逻辑，最多再用下 context 跨层传递数据。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那相对复杂的组件是什么样子的呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其实 antd 组件库里就有很多。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;今天我们就来实现一个 antd 组件库里的组件 -- Space 组件吧。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;首先看下它是怎么用的：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这是一个布局组件：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4683357879234168&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3iaWcruvsK9qfGS0iciaU49ty1bLLCfGcPJtia7ibFgkpz02x2QiaDqggnibCQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1358&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;文档里介绍它是设置组件的间距的，还可以设置多个组件怎么对齐。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如这样 3 个盒子：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4816753926701571&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3nc2aW1P25WYtYefnh5OO5hWFqYiaCiau9plA9icvPTdauC3FFYn9NrcdA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;764&quot;/&gt;&lt;/figure&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3hUuZ7C0da13KvG6CMgVibhJTATTUjT8NvyX0bZId8kaexJcmPibDwOibw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;628&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;渲染出来是这样的：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.2627737226277371&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3tVfYq5Lrj9us0uRWj2cejYmuPhyWu6yWERfQZ6h4ACqzoYQWicLSJRw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;548&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们用 Space 组件包一下，设置方向为水平，就变成这样了（漏了一张代码截图，看后面的吧）：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4319526627218935&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3ZTx4qoKpdTZ4ic9AsQ9hpSN1f8libvJh52JUjRBytF1mAiaKSku6CH83Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;676&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当然，也可以竖直：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.2824207492795389&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3EhIPVleHbpdXMvr44Mk1vS2lYFoW3TVqPU73ssAia4t97xlQ4s4S4icw/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;2082&quot;/&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;水平和竖直的间距都可以通过 size 来设置：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.42965116279069765&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3bO7T6mib8NDTgickkBXico5Mz2t0DJZo3lsFbOzDg0z4NAKcVt9h52oaw/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;1720&quot;/&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以设置 large、middle、small 或者任意数值。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;多个子节点可以设置对齐方式，比如 start、end、center 或者 baseline：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.38125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3VISQB98Lh6IpdmKJQiaHQUXhVD7fuo6uCHqQxSRB6hMtuqNtvKSLDTQ/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;2080&quot;/&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;此外子节点过多可以设置换行：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.3925423728813559&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3fac3HFwBkIq7EUUW6bVhB7cyb4uqia2uK0wOB84teaiaiaEs8gQ145Pdw/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;1475&quot;/&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;space 也可以单独设置行列的：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.40694789081885857&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3DykibIChTPQBxic59wAdAa4xicpVNCO6zIVb8nCbZbnaOoiaY9stV7XeSA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2418&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最后，它还可以设置 split 分割线部分：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.2768&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3ibYk5WTon0TQeezxcW9443CJ1RfTrMFug55rIsPOicGFznXPaOS5o0vw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2500&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;此外，你也可以不直接设置 size，而是通过 ConfigProvider 修改 context 中的默认值：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3918791312559018&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn397weOdkvKKpF3EeHzqIQOzeFBSsCMraxzwXm19EcUKZa8NksHSTgOg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2118&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;很明显，Space 内部会读取 context 中的 size 值。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这样如果有多个 Space 组件就不用每个都设置了，统一加个 ConfigProvider 就行了：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4363459669582119&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3MHsICMBX8IvH2BMq2o0sX5BDMaFfszV3MmdxFr0dibuKVbqptEfJdUA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2058&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这就是 Space 组件的全部用法，简单回顾下这几个参数和用法：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;direction: 设置子组件方向，水平还是竖直排列&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;size：设置水平、竖直的间距&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;align：子组件的对齐方式&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;wrap：超过一屏是否换行，只在水平时有用&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;split：分割线的组件&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;多个 Space 组件的 size 可以通过 ConfigProvider 统一设置默认值。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;是不是过一遍就会用了？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用起来还是挺简单的，但它的功能挺强大。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那这样的布局组件是怎么实现的呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们先看下它最终的 dom：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5539823008849557&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3sLJQeWarw1OzibqWJztR0RQRCQjwyEz8mQylRhY19qGPvvOtIpIxeeA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1130&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对每个 box 包了一层 div，设置了 ant-space-item 的 class。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对 split 部分包了一层 span，设置了 ant-space-item-split 的 class。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最外层包了一层 div，设置了 ant-space 等 class。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这些还是很容易想到的，毕竟设置布局嘛，不包一层怎么布局？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但虽然看起来挺简单，实现的话还是有不少东西的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下面我们来写一下：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;首先声明组件 props 的类型：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4394506866416979&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3xfJnnoibGuMXohicfjcd9TJF6MufQzKHkwgKEmeryT0ryuO1Ku2Cxtvg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1602&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;需要注意的是 style 是 React.CSSProperties 类型，也就是各种 css 都可以写。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;split 是 React.ReactNode 类型，也就是可以传入 jsx。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其余的参数的类型就是根据取值来，我们上面都测试过。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Space 组件会对所有子组件包一层 div，所以需要遍历传入的 children，做下修改：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;props 传入的 children 要转成数组可以用 React.Children.toArray 方法。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有的同学说，children 不是已经是数组了么？为什么还要用 React.Children.toArray 转一下？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;因为 toArray 可以对 children 做扁平化：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4824824824824825&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3fwMibdFs7iaLicMXFvibM5BibBNxeTmA8Y9J5ub6VatxacGXosibiafNuFVew/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;999&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;更重要的是直接调用 children.sort() 会报错：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4814516129032258&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3r62FdABH9PPSicgUhQ8dvdKTufLAr3Al3eaFKdagCJhjKJ9QLFMS8uQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2480&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;而 toArray 之后就不会了：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.38275499474237645&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3bqDvgRJlmWqbfAdNyuJb5aD4V7EmtqiaRKUnhxNsZMGUztcictXfg9XQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1902&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;同理，&lt;strong&gt;我们会用 React.Children.forEach，React.Children.map 之类的方法操作 children，而不是直接操作。&lt;/strong&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.10119047619047619&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3eQGLsClWyaajVkVibmTGYbspA41TqjPs9QaiaVPCv2BP2dIk9wRpP28Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1344&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但这里我们有一些特殊的需求，比如空节点不过滤掉，依然保留。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以用 React.Children.forEach 自己实现一下 toArray：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.740506329113924&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3icdF1xl4QxDVrPTW8SWV9aSSZQhGs6XpsMib4wqjTA4iagOr4wzicgv0aA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1580&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这部分比较容易看懂，就是用 React.Children.forEach 遍历 jsx 节点，对每个节点做下判断，如果是数组或 fragment 就递归处理，否则 push 到数组里。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;保不保留空节点可以根据 keepEmpty 的 option 来控制。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这样用：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.11480865224625623&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn32X5Awia3pTGWjYewpt9oAno3G39xGdURZ9oJhjQHJAnC4PDAuMR9gMA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1202&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;children 就可以遍历渲染 item 了，这部分是这样的：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3867069486404834&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3zRd5BYpmB33xJXfseGaHPd5xLQJBNiby4F3GJkFxIH3M674gmV6oIGw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;662&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们单独封装个 Item 组件。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然后 childNodes 遍历渲染这个 Item 就可以了：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8026706231454006&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3RmHic5qicDH1V5uEEWJKxb0oNdqyrjEdQfIEeuuufMuyQ6en9Eialkz5A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1348&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然后把这所有的 Item 组件再放到最外层 div 里：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.2099236641221374&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3PmQYq7CIJasNVoiaf6CeWDicTgDbdHFlVak1erK9I2yrcjIPIia5Fb1MQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;524&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;就可以分别控制整体的布局和 Item 的布局了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;具体的布局还是通过 className 和样式来的：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;className 通过 props 计算而来：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5619834710743802&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3aRwV5KtUKzIeqSKWZYRB28mibWicHxJIM88MRVCNXe1VicODav8ozrtrw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1210&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用到了 classnames 这个包，这个算是 react 生态很常用的包了，根据 props 动态生成 className 基本都用这个。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个前缀是动态获取的，最终就是 ant-space 的前缀：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.15897435897435896&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3YpibvSsLUUL1uhiaeGScROvwChKKJcMwuodHa2ESHpVCxIJTRXZmLt9g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1170&quot;/&gt;&lt;/figure&gt;&lt;p&gt;这些 class 的样式也都定义好：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$&lt;span&gt;ant-prefix&lt;/span&gt;: &#x27;&lt;span&gt;ant&lt;/span&gt;&#x27;;&lt;br/&gt;&lt;br/&gt;$&lt;span&gt;space-prefix-cls&lt;/span&gt;: #{$ant-prefix}&lt;span&gt;-space&lt;/span&gt;;&lt;br/&gt;$&lt;span&gt;space-item-prefix-cls&lt;/span&gt;: #{$ant-prefix}&lt;span&gt;-space-item&lt;/span&gt;;&lt;br/&gt; &lt;br/&gt;.#{$space-prefix-cls} {&lt;br/&gt;  &lt;span&gt;display&lt;/span&gt;: inline-flex;&lt;br/&gt;&lt;br/&gt;  &amp;amp;-vertical {&lt;br/&gt;    &lt;span&gt;flex-direction&lt;/span&gt;: column;&lt;br/&gt;  }&lt;br/&gt;&lt;br/&gt;  &amp;amp;&lt;span&gt;-align&lt;/span&gt; {&lt;br/&gt;    &amp;amp;-center {&lt;br/&gt;      &lt;span&gt;align-items&lt;/span&gt;: center;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &amp;amp;&lt;span&gt;-start&lt;/span&gt; {&lt;br/&gt;      &lt;span&gt;align-items&lt;/span&gt;: flex-start;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &amp;amp;&lt;span&gt;-end&lt;/span&gt; {&lt;br/&gt;      &lt;span&gt;align-items&lt;/span&gt;: flex-end;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &amp;amp;&lt;span&gt;-baseline&lt;/span&gt; {&lt;br/&gt;      &lt;span&gt;align-items&lt;/span&gt;: baseline;&lt;br/&gt;    }&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;.#{$space-prefix-cls} {&lt;br/&gt;  &amp;amp;-rtl {&lt;br/&gt;    &lt;span&gt;direction&lt;/span&gt;: rtl;&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;整个容器 inline-flex，然后根据不同的参数设置 align-items 和 flex-direction 的值。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最后一个 direction 的 css 可能大家没用过，是设置文本方向的：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5205314009661836&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3C8xywCibibXxuaTiatYeOa0DUQOUvLrWv8ibiaao1uBBj8Q5b6qCpvbkLLg/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;1656&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这样，就通过 props 动态给最外层 div 加上了相应的 className，设置了对应的样式。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但还有一部分样式没设置，也就是间距：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其实这部分可以用 gap 设置：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7570621468926554&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3dfIjqaLxHT57oJqncCYPKtXhNhw9WCbKLaibk7WfRwlOKFD10v8VOJQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1062&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当然，用 margin 也可以，只不过那个要单独处理下最后一个元素，比较麻烦。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不过 antd 这种组件自然要做的兼容性好点，所以两种都支持，支持 gap 就用 gap，否则用 margin。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;问题来了，antd 是怎么检测浏览器是否支持 gap 样式的呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;它是这么做的：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.86084142394822&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3OJibgejVib3gNZ7Bca8kmQtnTjaInwHhUoGJLRyGLFv3AoNgiapibAVNMA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1236&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;创建一个 div，设置样式，加到 body 下，看看 scrollHeight 是多少，最后把这个元素删掉。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这样就能判断是是否支持 gap、column 等样式，因为不支持的话高度会是 0。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然后它又提供了这样一个 hook：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4716981132075472&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3fhp9VXICFV8dxGdSk8tsR7nHWtZOkVTtpP8R7SdO44Owm47iciawukPQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1378&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;第一次会检测并设置 state 的值，之后直接返回这个检测结果。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这样组件里就可以就可以用这个 hook 来判断是否支持 gap，从而设置不同的样式了：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8677354709418837&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3Kg5LpCjXO6Tz3JfqjcbAwjG305HeViaWWd9OsibAtmB5tsibiaQgxnUQug/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;998&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;是不是很巧妙？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最后，这个组件还会从 ConfigProvider 中取值，这个我们见到过：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4363459669582119&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3MHsICMBX8IvH2BMq2o0sX5BDMaFfszV3MmdxFr0dibuKVbqptEfJdUA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2058&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以，再处理下这部分：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.35165876777251187&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3k8bgwG11xSJuhBiancSEyPOCf7NMmEZBmKXu6rlrRQk5wxCSDFGbuNA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2110&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用 useContext 读取 context 中的值，设置为 props 的解构默认值，这样如果传入了 props.size 就用传入的值，否则就用 context 里的值。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里给 Item 子组件传递数据也是通过 context，因为 Item 组件不一定会在哪一层。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用 createContext 创建 context 对象：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.30868761552680224&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3icfazblIFXicfVnpEYjInLe21mxsAsQCVNbek9YupQqyZKZTTxTFkmTw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1082&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;把计算出的 size：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.19579646017699115&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3UDFG9o8QoiaL3IEd5SQFmTSkEOOnen5LqtzecytqMKAoZJTKSmrjgLQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1808&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;还有其他的一些值：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.14596670934699105&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3BJr3vdJY1smu6Cguheu8hvukyWZt3BMkjGoQWGZwGlXhrGYD46U4rQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1562&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;都通过 Provider 设置到 spaceContext 中：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3733955659276546&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3oeCQROTBS5eylgB8ia8UjUeqLB8PKlXfWaOwvDxMhWaTxUmBIiaC3TKQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1714&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这样子组件就能拿到 spaceContext 中的值了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里 useMemo 很多同学不会用，其实很容易理解：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;props 变了会触发组件重新渲染，但有的时候 props 并不需要变化却每次都变，这样就可以通过 useMemo 来避免它没必要的变化了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;useCallback 也是同样的道理。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;计算 size 的时候封装了一个 getNumberSize 方法，对于字符串枚举值设置了一些固定的数值：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.34913793103448276&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3OQDJALznEeQj2og24NVNqYWX5ibA4WsiaibIWWNwrGunyt8136FNLtlGA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1392&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;至此，这个组件我们就完成了，当然，Item 组件还没展开讲。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;先来欣赏下这个 Space 组件的全部源码：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;import&lt;/span&gt; classNames &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;classnames&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; * &lt;span&gt;as&lt;/span&gt; React &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;react&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; { ConfigContext, SizeType } &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;./config-provider&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; Item &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;./Item&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; toArray &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;./toArray&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; &lt;span&gt;&#x27;./index.scss&#x27;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; useFlexGapSupport &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;./useFlexGapSupport&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; interface Option {&lt;br/&gt;  keepEmpty?: boolean;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; &lt;span&gt;const&lt;/span&gt; SpaceContext = React.createContext({&lt;br/&gt;  &lt;span&gt;latestIndex&lt;/span&gt;: &lt;span&gt;0&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;horizontalSize&lt;/span&gt;: &lt;span&gt;0&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;verticalSize&lt;/span&gt;: &lt;span&gt;0&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;supportFlexGap&lt;/span&gt;: &lt;span&gt;false&lt;/span&gt;,&lt;br/&gt;});&lt;br/&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; type SpaceSize = SizeType | number;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; interface SpaceProps extends React.HTMLAttributes&amp;lt;HTMLDivElement&amp;gt; {&lt;br/&gt;  className?: string;&lt;br/&gt;  style?: React.CSSProperties;&lt;br/&gt;  size?: SpaceSize | [SpaceSize, SpaceSize];&lt;br/&gt;  direction?: &lt;span&gt;&#x27;horizontal&#x27;&lt;/span&gt; | &lt;span&gt;&#x27;vertical&#x27;&lt;/span&gt;;&lt;br/&gt;  align?: &lt;span&gt;&#x27;start&#x27;&lt;/span&gt; | &lt;span&gt;&#x27;end&#x27;&lt;/span&gt; | &lt;span&gt;&#x27;center&#x27;&lt;/span&gt; | &lt;span&gt;&#x27;baseline&#x27;&lt;/span&gt;;&lt;br/&gt;  split?: React.ReactNode;&lt;br/&gt;  wrap?: boolean;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; spaceSize = {&lt;br/&gt;  &lt;span&gt;small&lt;/span&gt;: &lt;span&gt;8&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;middle&lt;/span&gt;: &lt;span&gt;16&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;large&lt;/span&gt;: &lt;span&gt;24&lt;/span&gt;,&lt;br/&gt;};&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;function&lt;/span&gt; &lt;span&gt;getNumberSize&lt;/span&gt;(&lt;span&gt;size: SpaceSize&lt;/span&gt;) &lt;/span&gt;{&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; &lt;span&gt;typeof&lt;/span&gt; size === &lt;span&gt;&#x27;string&#x27;&lt;/span&gt; ? spaceSize[size] : size || &lt;span&gt;0&lt;/span&gt;;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; Space: React.FC&amp;lt;SpaceProps&amp;gt; = &lt;span&gt;&lt;span&gt;props&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; { getPrefixCls, space, &lt;span&gt;direction&lt;/span&gt;: directionConfig } = React.useContext(ConfigContext);&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; {&lt;br/&gt;    size = space?.size || &lt;span&gt;&#x27;small&#x27;&lt;/span&gt;,&lt;br/&gt;    align,&lt;br/&gt;    className,&lt;br/&gt;    children,&lt;br/&gt;    direction = &lt;span&gt;&#x27;horizontal&#x27;&lt;/span&gt;,&lt;br/&gt;    split,&lt;br/&gt;    style,&lt;br/&gt;    wrap = &lt;span&gt;false&lt;/span&gt;,&lt;br/&gt;    ...otherProps&lt;br/&gt;  } = props;&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; supportFlexGap = useFlexGapSupport();&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; [horizontalSize, verticalSize] = React.useMemo(&lt;br/&gt;    &lt;span&gt;&lt;span&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt;&lt;br/&gt;      ((&lt;span&gt;Array&lt;/span&gt;.isArray(size) ? size : [size, size]) &lt;span&gt;as&lt;/span&gt; [SpaceSize, SpaceSize]).map(&lt;span&gt;&lt;span&gt;item&lt;/span&gt; =&amp;gt;&lt;/span&gt;&lt;br/&gt;        getNumberSize(item),&lt;br/&gt;      ),&lt;br/&gt;    [size],&lt;br/&gt;  );&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; childNodes = toArray(children, {&lt;span&gt;keepEmpty&lt;/span&gt;: &lt;span&gt;true&lt;/span&gt;});&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; mergedAlign = align === &lt;span&gt;undefined&lt;/span&gt; &amp;amp;&amp;amp; direction === &lt;span&gt;&#x27;horizontal&#x27;&lt;/span&gt; ? &lt;span&gt;&#x27;center&#x27;&lt;/span&gt; : align;&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; prefixCls = getPrefixCls(&lt;span&gt;&#x27;space&#x27;&lt;/span&gt;);&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; cn = classNames(&lt;br/&gt;    prefixCls,&lt;br/&gt;    &lt;span&gt;`&lt;span&gt;${prefixCls}&lt;/span&gt;-&lt;span&gt;${direction}&lt;/span&gt;`&lt;/span&gt;,&lt;br/&gt;    {&lt;br/&gt;      [&lt;span&gt;`&lt;span&gt;${prefixCls}&lt;/span&gt;-rtl`&lt;/span&gt;]: directionConfig === &lt;span&gt;&#x27;rtl&#x27;&lt;/span&gt;,&lt;br/&gt;      [&lt;span&gt;`&lt;span&gt;${prefixCls}&lt;/span&gt;-align-&lt;span&gt;${mergedAlign}&lt;/span&gt;`&lt;/span&gt;]: mergedAlign,&lt;br/&gt;    },&lt;br/&gt;    className,&lt;br/&gt;  );&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; itemClassName = &lt;span&gt;`&lt;span&gt;${prefixCls}&lt;/span&gt;-item`&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; marginDirection = directionConfig === &lt;span&gt;&#x27;rtl&#x27;&lt;/span&gt; ? &lt;span&gt;&#x27;marginLeft&#x27;&lt;/span&gt; : &lt;span&gt;&#x27;marginRight&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;// Calculate latest one&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;let&lt;/span&gt; latestIndex = &lt;span&gt;0&lt;/span&gt;;&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; nodes = childNodes.map(&lt;span&gt;(&lt;span&gt;child: any, i&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (child !== &lt;span&gt;null&lt;/span&gt; &amp;amp;&amp;amp; child !== &lt;span&gt;undefined&lt;/span&gt;) {&lt;br/&gt;      latestIndex = i;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;const&lt;/span&gt; key = (child &amp;amp;&amp;amp; child.key) || &lt;span&gt;`&lt;span&gt;${itemClassName}&lt;/span&gt;-&lt;span&gt;${i}&lt;/span&gt;`&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; (&lt;br/&gt;      &lt;span&gt;&lt;span&gt;&amp;lt;&lt;span&gt;Item&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;className&lt;/span&gt;=&lt;span&gt;{itemClassName}&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;key&lt;/span&gt;=&lt;span&gt;{key}&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;direction&lt;/span&gt;=&lt;span&gt;{direction}&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;index&lt;/span&gt;=&lt;span&gt;{i}&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;marginDirection&lt;/span&gt;=&lt;span&gt;{marginDirection}&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;split&lt;/span&gt;=&lt;span&gt;{split}&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;wrap&lt;/span&gt;=&lt;span&gt;{wrap}&lt;/span&gt;&lt;br/&gt;      &amp;gt;&lt;/span&gt;&lt;br/&gt;        {child}&lt;br/&gt;      &lt;span&gt;&amp;lt;/&lt;span&gt;Item&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;    );&lt;br/&gt;  });&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; spaceContext = React.useMemo(&lt;br/&gt;    &lt;span&gt;&lt;span&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; ({ horizontalSize, verticalSize, latestIndex, supportFlexGap }),&lt;br/&gt;    [horizontalSize, verticalSize, latestIndex, supportFlexGap],&lt;br/&gt;  );&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt; (childNodes.length === &lt;span&gt;0&lt;/span&gt;) {&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;null&lt;/span&gt;;&lt;br/&gt;  }&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; gapStyle: React.CSSProperties = {};&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt; (wrap) {&lt;br/&gt;    gapStyle.flexWrap = &lt;span&gt;&#x27;wrap&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (!supportFlexGap) {&lt;br/&gt;      gapStyle.marginBottom = -verticalSize;&lt;br/&gt;    }&lt;br/&gt;  }&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt; (supportFlexGap) {&lt;br/&gt;    gapStyle.columnGap = horizontalSize;&lt;br/&gt;    gapStyle.rowGap = verticalSize;&lt;br/&gt;  }&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; (&lt;br/&gt;    &lt;span&gt;&lt;span&gt;&amp;lt;&lt;span&gt;div&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;className&lt;/span&gt;=&lt;span&gt;{cn}&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;style&lt;/span&gt;=&lt;span&gt;{{&lt;/span&gt;&lt;br/&gt;        ...gapStyle,&lt;br/&gt;        ...style,&lt;br/&gt;      }}&lt;br/&gt;      {&lt;span&gt;...otherProps&lt;/span&gt;}&lt;br/&gt;    &amp;gt;&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;&amp;lt;&lt;span&gt;SpaceContext.Provider&lt;/span&gt; &lt;span&gt;value&lt;/span&gt;=&lt;span&gt;{spaceContext}&lt;/span&gt;&amp;gt;&lt;/span&gt;{nodes}&lt;span&gt;&amp;lt;/&lt;span&gt;SpaceContext.Provider&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;/&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;  );&lt;br/&gt;};&lt;br/&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; &lt;span&gt;default&lt;/span&gt; Space;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;回顾下要点：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;基于 React.Children.forEach 自己封装了 toArray 方法，做了一些特殊处理&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;对 childNodes 遍历之后，包裹了一层 Item 组件&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;封装了 useFlexGapSupport 的 hook，里面通过创建 div 检查 scrollHeight 的方式来确定是否支持 gap 样式&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;通过 useContext 读取 ConfigContext 的值，作为 props 的解构默认值&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;通过 createContext 创建 spaceContext，并通过 Provider 设置其中的值&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;通过 useMemo 缓存作为参数的对象，避免不必要的渲染&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;通过 classnames 包来根据 props 动态生成 className&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;思路理的差不多了，再来看下 Item 的实现：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这部分比较简单，直接上全部代码了：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;import * as React from &lt;span&gt;&#x27;react&#x27;&lt;/span&gt;;&lt;br/&gt;import { SpaceContext } from &lt;span&gt;&#x27;.&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; interface ItemProps {&lt;br/&gt;  className: string;&lt;br/&gt;  children: React.ReactNode;&lt;br/&gt;  index: number;&lt;br/&gt;  direction?: &lt;span&gt;&#x27;horizontal&#x27;&lt;/span&gt; | &lt;span&gt;&#x27;vertical&#x27;&lt;/span&gt;;&lt;br/&gt;  marginDirection: &lt;span&gt;&#x27;marginLeft&#x27;&lt;/span&gt; | &lt;span&gt;&#x27;marginRight&#x27;&lt;/span&gt;;&lt;br/&gt;  split?: string | React.ReactNode;&lt;br/&gt;  wrap?: boolean;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; default &lt;span&gt;function&lt;/span&gt; Item({&lt;br/&gt;  className,&lt;br/&gt;  direction,&lt;br/&gt;  index,&lt;br/&gt;  marginDirection,&lt;br/&gt;  children,&lt;br/&gt;  split,&lt;br/&gt;  wrap,&lt;br/&gt;}: ItemProps) {&lt;br/&gt;  const { horizontalSize, verticalSize, latestIndex, supportFlexGap } =&lt;br/&gt;    React.useContext(SpaceContext);&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;let&lt;/span&gt; style: React.CSSProperties = {};&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt; (!supportFlexGap) {&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (direction === &lt;span&gt;&#x27;vertical&#x27;&lt;/span&gt;) {&lt;br/&gt;      &lt;span&gt;if&lt;/span&gt; (index &amp;lt; latestIndex) {&lt;br/&gt;        style = { marginBottom: horizontalSize / (split ? 2 : 1) };&lt;br/&gt;      }&lt;br/&gt;    } &lt;span&gt;else&lt;/span&gt; {&lt;br/&gt;      style = {&lt;br/&gt;        ...(index &amp;lt; latestIndex &amp;amp;&amp;amp; { [marginDirection]: horizontalSize / (split ? 2 : 1) }),&lt;br/&gt;        ...(wrap &amp;amp;&amp;amp; { paddingBottom: verticalSize }),&lt;br/&gt;      };&lt;br/&gt;    }&lt;br/&gt;  }&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt; (children === null || children === undefined) {&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; null;&lt;br/&gt;  }&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; (&lt;br/&gt;    &amp;lt;&amp;gt;&lt;br/&gt;      &amp;lt;div className={className} style={style}&amp;gt;&lt;br/&gt;        {children}&lt;br/&gt;      &amp;lt;/div&amp;gt;&lt;br/&gt;      {index &amp;lt; latestIndex &amp;amp;&amp;amp; split &amp;amp;&amp;amp; (&lt;br/&gt;        &amp;lt;span className={`&lt;span&gt;${className}&lt;/span&gt;-split`} style={style}&amp;gt;&lt;br/&gt;          {split}&lt;br/&gt;        &amp;lt;/span&amp;gt;&lt;br/&gt;      )}&lt;br/&gt;    &amp;lt;/&amp;gt;&lt;br/&gt;  );&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过 useContext 从 SpaceContext 中取出 Space 组件里设置的值。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;根据是否支持 gap 来分别使用 gap 或者 margin、padding 的样式来设置间距。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;每个元素都用 div 包裹下，设置 className。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果不是最后一个元素并且有 split 部分，就渲染 split 部分，用 span 包裹下。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这块还是比较清晰的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最后，还有 ConfigProvider 的部分没有看：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这部分就是创建一个 context，并初始化一些值：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;import&lt;/span&gt; React &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&quot;react&quot;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; type DirectionType = &lt;span&gt;&#x27;ltr&#x27;&lt;/span&gt; | &lt;span&gt;&#x27;rtl&#x27;&lt;/span&gt; | &lt;span&gt;undefined&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; type SizeType = &lt;span&gt;&#x27;small&#x27;&lt;/span&gt; | &lt;span&gt;&#x27;middle&#x27;&lt;/span&gt; | &lt;span&gt;&#x27;large&#x27;&lt;/span&gt; | &lt;span&gt;undefined&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; interface ConfigConsumerProps {&lt;br/&gt;  &lt;span&gt;getPrefixCls&lt;/span&gt;: &lt;span&gt;(&lt;span&gt;suffixCls?: string&lt;/span&gt;) =&amp;gt;&lt;/span&gt; string;&lt;br/&gt;  direction?: DirectionType;&lt;br/&gt;  space?: {&lt;br/&gt;    size?: SizeType | number;&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; &lt;span&gt;const&lt;/span&gt; defaultGetPrefixCls = &lt;span&gt;(&lt;span&gt;suffixCls?: string&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; suffixCls ? &lt;span&gt;`ant-&lt;span&gt;${suffixCls}&lt;/span&gt;`&lt;/span&gt; : &lt;span&gt;&#x27;ant&#x27;&lt;/span&gt;;&lt;br/&gt;};&lt;br/&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; &lt;span&gt;const&lt;/span&gt; ConfigContext = React.createContext&amp;lt;ConfigConsumerProps&amp;gt;({&lt;br/&gt;    &lt;span&gt;getPrefixCls&lt;/span&gt;: defaultGetPrefixCls&lt;br/&gt;});&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有没有感觉 antd 里用 context 简直太多了！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;确实。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为什么呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;因为你不能保证组件和子组件隔着几层。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如 Form 和 Form.Item：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.1085450346420322&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3ic8kpvraTpTqN9YdsuzYiafauEmk0Qc6BM59RKSgcmmldic5dYqU5BxWQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;866&quot;/&gt;&lt;figcaption&gt;image.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如 ConfigProvider 和各种组件（这里是 Space）：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.4363459669582119&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3MHsICMBX8IvH2BMq2o0sX5BDMaFfszV3MmdxFr0dibuKVbqptEfJdUA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2058&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;还有刚讲过的 Space 和 Item。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;它们能用 props 传数据么？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不能，因为不知道隔几层。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以 antd 里基本都是用 cotnext 传数据的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;你会你在 antd 里会见到大量的用 createCotnext 创建 context，通过 Provider 修改 context 值，通过 Consumer 或者 useContext 读取 context 值的这类逻辑。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最后，我们来测试下自己实现的这个 Space 组件吧：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;测试代码如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;import&lt;/span&gt; Space &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;./space&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; &lt;span&gt;&#x27;./SpaceTest.css&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; { ConfigContext, defaultGetPrefixCls,  } &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;./space/config-provider&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; React &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;react&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; SpaceTest = &lt;span&gt;&lt;span&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; (&lt;br/&gt;  &lt;span&gt;&lt;span&gt;&amp;lt;&lt;span&gt;ConfigContext.Provider&lt;/span&gt; &lt;span&gt;value&lt;/span&gt;=&lt;span&gt;{&lt;/span&gt;&lt;br/&gt;    {&lt;br/&gt;      &lt;span&gt;getPrefixCls:&lt;/span&gt; &lt;span&gt;defaultGetPrefixCls&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;space:&lt;/span&gt; { &lt;span&gt;size:&lt;/span&gt; &#x27;&lt;span&gt;large&lt;/span&gt;&#x27;}&lt;br/&gt;    }&lt;br/&gt;  }&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;Space&lt;/span&gt; &lt;br/&gt;      &lt;span&gt;direction&lt;/span&gt;=&lt;span&gt;&quot;horizontal&quot;&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;align&lt;/span&gt;=&lt;span&gt;&quot;end&quot;&lt;/span&gt; &lt;br/&gt;      &lt;span&gt;style&lt;/span&gt;=&lt;span&gt;{{height:&lt;/span&gt;&#x27;200px&#x27;}}&lt;br/&gt;      &lt;span&gt;split&lt;/span&gt;=&lt;span&gt;{&lt;/span&gt;&amp;lt;&lt;span&gt;div&lt;/span&gt; &lt;span&gt;className&lt;/span&gt;=&lt;span&gt;&quot;box&quot;&lt;/span&gt; &lt;span&gt;style&lt;/span&gt;=&lt;span&gt;{{background:&lt;/span&gt; &#x27;red&#x27;}}&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;} &lt;br/&gt;      wrap={true}&lt;br/&gt;    &amp;gt;&lt;br/&gt;      &lt;span&gt;&amp;lt;&lt;span&gt;div&lt;/span&gt; &lt;span&gt;className&lt;/span&gt;=&lt;span&gt;&quot;box&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;&amp;lt;&lt;span&gt;div&lt;/span&gt; &lt;span&gt;className&lt;/span&gt;=&lt;span&gt;&quot;box&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;&amp;lt;&lt;span&gt;div&lt;/span&gt; &lt;span&gt;className&lt;/span&gt;=&lt;span&gt;&quot;box&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;/&lt;span&gt;Space&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;Space&lt;/span&gt; &lt;br/&gt;      &lt;span&gt;direction&lt;/span&gt;=&lt;span&gt;&quot;horizontal&quot;&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;align&lt;/span&gt;=&lt;span&gt;&quot;end&quot;&lt;/span&gt; &lt;br/&gt;      &lt;span&gt;style&lt;/span&gt;=&lt;span&gt;{{height:&lt;/span&gt;&#x27;200px&#x27;}}&lt;br/&gt;      &lt;span&gt;split&lt;/span&gt;=&lt;span&gt;{&lt;/span&gt;&amp;lt;&lt;span&gt;div&lt;/span&gt; &lt;span&gt;className&lt;/span&gt;=&lt;span&gt;&quot;box&quot;&lt;/span&gt; &lt;span&gt;style&lt;/span&gt;=&lt;span&gt;{{background:&lt;/span&gt; &#x27;red&#x27;}}&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;} &lt;br/&gt;      wrap={true}&lt;br/&gt;    &amp;gt;&lt;br/&gt;      &lt;span&gt;&amp;lt;&lt;span&gt;div&lt;/span&gt; &lt;span&gt;className&lt;/span&gt;=&lt;span&gt;&quot;box&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;&amp;lt;&lt;span&gt;div&lt;/span&gt; &lt;span&gt;className&lt;/span&gt;=&lt;span&gt;&quot;box&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;&amp;lt;&lt;span&gt;div&lt;/span&gt; &lt;span&gt;className&lt;/span&gt;=&lt;span&gt;&quot;box&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;/&lt;span&gt;Space&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;&amp;lt;/&lt;span&gt;ConfigContext.Provider&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;);&lt;br/&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; &lt;span&gt;default&lt;/span&gt; SpaceTest;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这部分不咋用解释了。就是 ConfigProvider 包裹了俩 Space 组件，这俩 Space 组件没设置 size 值。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;设置了 direction、align、split、wrap 等参数。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;渲染结果是对的：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.9743589743589743&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3ibchXbbicMJH9qc4zVBVUKFkWzXHUYAdmqmWNe7aUYToS3w9YZz0vSSA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1014&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;就这样，我们自己实现了 antd 的 Space 组件！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;完整代码在 github：https://github.com/QuarkGluonPlasma/my-antd-test&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;总结&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一直写业务代码，可能很少写一些复杂的组件，而 antd 里就有很多复杂组件，我们挑 Space 组件来写了下。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这是一个布局组件，可以通过参数设置水平、竖直间距、对齐方式、分割线部分等。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;实现这个组件的时候，我们用到了很多东西：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;用 React.Children.forEach 的 api 来修改每个 childNode。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;用 useContext 读取 ConfigContext、SpaceContext 的值&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;用 createContext 创建 SpaceContext，并用 Provider 修改其中的值&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;用 useMemo 来避免没必要的渲染&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;用 classnames 包来根据 props 动态生成 className&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;自己封装了一个检测样式是否支持的自定义 hook&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;很多同学不会封装布局组件，其实就是对整体和每个 item 都包裹一层，分别设置不同的 class，实现不同的间距等的设置。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;想一下，这些东西以后写业务组件是不是也可以用上呢？&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>