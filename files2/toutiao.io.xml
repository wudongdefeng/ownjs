<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>e5a8e3c1d2c0002111dc10d2e32d9d81</guid>
<title>从业务开发中学习和理解架构设计</title>
<link>https://toutiao.io/k/c14dhs9</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                           autoTypeSetting24psection&amp;#10;                          &quot; id=&quot;js_content&quot;&gt;
            &lt;h3 data-cangjie-key=&quot;1&quot; data-cangjie-leaf-block=&quot;true&quot; data-type=&quot;heading-3&quot;&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.6265884652981427&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Z6bicxIx5naLYmwQaw5LvibH0jhickHoPLSJnQM6G1XxhUV2eB1c3tL4xV9qjoQZyKKLQ9BaqXcLNUA9m0r0RtGdQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1023&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;h3 data-cangjie-key=&quot;1&quot; data-cangjie-leaf-block=&quot;true&quot; data-type=&quot;heading-3&quot;&gt;&lt;span/&gt;&lt;/h3&gt;&lt;h3 data-cangjie-key=&quot;1&quot; data-cangjie-leaf-block=&quot;true&quot; data-type=&quot;heading-3&quot;&gt;&lt;section&gt;&lt;span&gt;前言&lt;/span&gt;&lt;/section&gt;&lt;/h3&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;在软件开发领域经常会接触到架构这个词汇，在我最初的印象中，架构是一个很高级的词汇。它似乎代表了复杂的工程结构、高层次的抽象设计、最新的开发语言特性等等。对于当时只专注于写业务逻辑的我来说，不免心生对架构的敬畏。工作中对架构的讨论很少，出现则是一些高级晦涩的描述，但是从来没有人清楚地解释过架构做了哪些事。所以，架构到底是什么？架构和业务之间是什么关系？&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;当我们看一些关于架构的书籍或者资料，不免会接触到一些对架构的定义或者描述。比如：约束、规则、边界、实体关系、模型定义等等。但是懂得这些概念并不能帮助我们设计出来更好的架构，当我们套用设计原则进行架构设计时，不免会觉得空洞乏味，总觉得少了点什么。虽然我们为架构设计做了很多事，但是似乎什么也没做。因为只针对架构设计本身来说，很难说清楚它所产生的价值。所以，好的架构设计的出发点是什么？好的架构应该是什么样的呢？&lt;/span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;去年我有一个任务：将我们当前工程的代码进行重新的拆分和组合，以厘清模块间的关系，控制工程中模块依赖的复杂度。这看起来是一个很简单的工作，找到一个不同于当前的且更合理的目录划分方案，就可以尝试落地实施。但是这又是一个很困难的工作，因为我们首先要回答有哪些模块、模块间是什么依赖关系的问题。其实，回到任务的本身，我们并不是只想对代码文件进行重新的组织和划分，我们的目标是业务模块解耦合，定义并明确业务模块间的依赖规则。面对这样的目标，我们需要首先从业务视角更清晰地定义和划分模块，然后从工程结构视角确定模块间的关系。所以，代码目录调整实际上是一个对业务场景、工程结构理解和设计的问题。代码目录的结构代表了我们的工程结构，也是业务场景划分的抽象描述，更是模块定义以及模块依赖关系的展现。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;在设计代码目录划分方案的过程中，看了一些工程结构设计的资料，读了一些关于架构设计的书。对于架构有了一些理解。本文是对这段学习和任务完成过程的思考和沉淀。我希望能够回答上面提到的几个问题：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;1.&lt;/span&gt;&lt;span&gt;架构到底是什么？&lt;/span&gt;&lt;span&gt;架构和业务之间的关系&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;2.&lt;/span&gt;&lt;span&gt;好的架构的设计出发点是什么？&lt;/span&gt;&lt;span&gt;好的架构应该是什么样的&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;h3 data-cangjie-key=&quot;28&quot; data-cangjie-leaf-block=&quot;true&quot; data-type=&quot;heading-3&quot;&gt;&lt;section&gt;&lt;span&gt;什么是架构&lt;/span&gt;&lt;/section&gt;&lt;/h3&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;架构的定义&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;首先架构是一个汉语词汇。它的定义是：人们对一个结构内的元素及元素间关系的一种主观映射的产物。从这个定义可以看出，传统的架构在描述一个系统中有什么元素，以及元素之间关系。在建筑领域，架构也用于描述建筑物的结构。&lt;/span&gt;&lt;span&gt;﻿  &lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;作为一个计算机领域的词汇，架构的定义是：有关软件整体结构与组件的抽象描述，用于指导大型软件系统各个方面的设计。实际上也在定义有什么以及关系的问题。&lt;/span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.6296975252062328&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Z6bicxIx5naLaKRsYOY1ibqKv6Mhav80d6iccWMTNtNazxsHbubEUUiahpmIxCXjjnqVTKa3DicejfODQz6UOibmG6HA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1091&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;从工程化解读架构设计的作用&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;无论是在建筑领域还是计算机领域，我们通常会用工程描述这类工作的项目。比如我所在的部门是工程技术中心，我是一个工程类的程序员等。我们可以称之为工程的工作项目包括：建筑工程、军事工程、水利工程、生物工程、软件工程等。而我们在完成项目的过程中，进行架构设计实际上就是推进实施工程化的一部分。那么进行工程架构设计会考虑哪些因素，它对实施工程化的作用是什么呢？&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;假设，读者你现在是一位建筑工程师，负责建造一栋房屋。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;虽然我们没有真正的盖过房子，但是在进行房屋的整体结构设计时，你一定会关心这些：&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;1.&lt;/span&gt;&lt;span&gt;房屋用途。&lt;/span&gt;&lt;span&gt;首先要明确这栋房子是干什么用的&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2.&lt;/span&gt;&lt;span&gt;房屋层数。&lt;/span&gt;&lt;span&gt;和用途紧密相关，不同用途的房子层数也是不一样的&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;3.&lt;/span&gt;&lt;span&gt;房屋外观。&lt;/span&gt;&lt;span&gt;定义这栋房屋应该长什么样&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;4.&lt;/span&gt;&lt;span&gt;房屋的布局。&lt;/span&gt;&lt;span&gt;定义这栋房屋应该怎么更好地被使用&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;等等。我们称上面这几个属性是房屋的基础能力。&lt;/span&gt;&lt;span&gt;作为一个靠谱的建筑工程师，你一定还会着重地设计这些：&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;1.&lt;/span&gt;&lt;span&gt;水电走向。&lt;/span&gt;&lt;span&gt;这很重要。&lt;/span&gt;&lt;span&gt;保证房屋的安全性和使用的便捷&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2.&lt;/span&gt;&lt;span&gt;承重和抗压。&lt;/span&gt;&lt;span&gt;房屋的使用寿命很大程度上依赖于此&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;等等。我们称上面的这几个属性是安全性和性能。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;另外一方面，你大概不会关心房屋的装修风格、地板颜色、衣柜品牌等等因素。我们称这些为应用细节。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;总结来说，进行房屋的工程架构设计时更多地关系底层设计，而不在乎过多的技术细节。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;所以，我们可以给架构的作用下一个定义：在明确用途的基础上定义使用的规则和约束，提供了基础的支撑能力，并保障安全性、性能和使用周期。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;软件架构设计的原则和要求&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;到目前为止，我们已经明确了在做架构设计时必须遵循的前提和原则：明确用途。此外也对架构设计提出要求：提供基础能力、保障安全性、性能等。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;同样的，引申到计算机领域。当我们进行软件架构设计时也必须遵循的原则有：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;1.&lt;/span&gt;&lt;span&gt;架构设计一定要从业务场景出发&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;这实际上就是明确用途的大前提。架构设计一定是要从业务出发、面向业务变化的。只有在我们明确了我们的业务场景和业务目标后，在此基础上进行的架构设计才是能真正产生业务价值的。一个脱离了业务场景而设计的架构，无论多么新颖和高级，也绝不是一个好的架构。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;2.&lt;/span&gt;&lt;span&gt;架构设计一定要落到业务场景中去验证&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;我们不能只从基础能力、安全性或者性能方面去评判一个架构的好坏。架构对业务开发的支持能力，面向业务变化时的灵活度以及持续演进能力等都是评判的因素。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;此外，我们要求软件架构必须是灵活的，能够满足未来业务持续发展的要求。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;业务场景是不断变化的，架构也要具有跟随业务形态不断演进的能力。架构设计的核心是保证面向业务变化时有足够灵活的响应力，这要求架构设计能够识别到业务的核心领域。所以，无论是面向当前还是面向未来，架构设计都需要真正地识别和理解业务问题。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;h3 data-cangjie-key=&quot;145&quot; data-cangjie-leaf-block=&quot;true&quot; data-type=&quot;heading-3&quot;&gt;&lt;section&gt;&lt;span&gt;架构设计的原则&lt;/span&gt;&lt;/section&gt;&lt;/h3&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;本章节介绍几个软件架构设计时可以遵循的原则，实际上在进行功能模块设计也可以参考这些设计原则。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;SRP 单一职责原则&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;1.&lt;/span&gt;&lt;span&gt;一个函数只负责完成一个功能&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;2.&lt;/span&gt;&lt;span&gt;任何一个模块只对某一类行为者负责&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;3.&lt;/span&gt;&lt;span&gt;一个类或者函数应该有且仅有一个被改变的理由&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;在实际的编码中，我们还是可以看到很多违反单一职责的例子的，比如超长的函数体。一个函数内做了很多事，实际上就是负责了太多的功能，很多的变更都要修改这个函数，这导致很难控制变更影响的范围。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;我们可以将大函数拆分成小函数，小函数体负责的功能更加单一，相应的也会更加灵活。所以我们建议大家多写一些小的函数体。但是不要在函数拆分的过程中进行过度的封装和抽象。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;OCP 开闭原则&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;1.&lt;/span&gt;&lt;span&gt;易于扩展，抗拒修改&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;模块要易于扩展，控制修改。这是我们在初学编程语言时就会被教育到的设计原则。开闭原则帮助我们设计更加灵活的模块，同时还能控制模块变更的影响范围。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;LSP 里氏替换原则&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;h4 data-cangjie-key=&quot;178&quot; data-cangjie-leaf-block=&quot;true&quot; data-type=&quot;heading-4&quot;&gt;&lt;span&gt;1.&lt;/span&gt;所有引用父类的地方都可以替换成子类，而行为不发生改变&lt;/h4&gt;&lt;section&gt;&lt;span&gt;使用里氏替换原则可以保证父类的复用性。它主要是用来判断抽象和继承关系设计是否合理，即某个类是否应该具有某个属性，以及一个类到底是不是另外一个类的子类。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;举一个典型的例子，乘马是乘马，乘白马也是乘马，乘黑马也是乘马。那么白马和黑马就是马的子类，是符合LSP的。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;下面是两个典型的违反LSP原则的例子。也是网上也特别常见的例子。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;第一个是正方形不是矩形。&lt;/span&gt;&lt;/section&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cpp&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__class&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;Rectangle&lt;/span&gt; {&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt;:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     &lt;span class=&quot;code-snippet__keyword&quot;&gt;int32_t&lt;/span&gt; getWidth() &lt;span class=&quot;code-snippet__keyword&quot;&gt;const&lt;/span&gt; {&lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; width;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     &lt;span class=&quot;code-snippet__keyword&quot;&gt;int32_t&lt;/span&gt; getHeight() &lt;span class=&quot;code-snippet__keyword&quot;&gt;const&lt;/span&gt; {&lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; height;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;setWidth&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(&lt;span class=&quot;code-snippet__keyword&quot;&gt;int32_t&lt;/span&gt; w)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;         width = w;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;setHeight&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(&lt;span class=&quot;code-snippet__keyword&quot;&gt;int32_t&lt;/span&gt; h)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;       height = h;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;private&lt;/span&gt;:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;int32_t&lt;/span&gt; width = &lt;span class=&quot;code-snippet__number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;int32_t&lt;/span&gt; height = &lt;span class=&quot;code-snippet__number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cpp&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__class&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;Square&lt;/span&gt; :&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; Rectangle {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt;:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;setWidth&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(&lt;span class=&quot;code-snippet__keyword&quot;&gt;int32_t&lt;/span&gt; w)&lt;/span&gt; override &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;         Rectangle::setWidth(w);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;         Rectangle::setHeight(w);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;setHeight&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(&lt;span class=&quot;code-snippet__keyword&quot;&gt;int32_t&lt;/span&gt; h)&lt;/span&gt; override &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; };&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;reSize&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(Rectangle rect)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     &lt;span class=&quot;code-snippet__keyword&quot;&gt;while&lt;/span&gt; (rect.getHeight() &amp;lt;= rect.getWidth()){&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;         rect.setHeight(rect.getWidth() + &lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; }&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;正方形类Square继承自矩形类Rectangle，并且重写了函数setWidth和setHeight。在函数reSize中，将父类Rectangle对象替换成子类Square后，将会出现死循环，程序出现异常。不符合LSP原则。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;所以正方形不是矩形。&lt;/span&gt;&lt;span&gt;第二个是鸵鸟不是鸟。&lt;/span&gt;&lt;/section&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cpp&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__class&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;Bird&lt;/span&gt; {&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt;:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     &lt;span class=&quot;code-snippet__keyword&quot;&gt;int32_t&lt;/span&gt; getVelocity() &lt;span class=&quot;code-snippet__keyword&quot;&gt;const&lt;/span&gt; {&lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; velocity;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;private&lt;/span&gt;:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     &lt;span class=&quot;code-snippet__keyword&quot;&gt;int32_t&lt;/span&gt; velocity = &lt;span class=&quot;code-snippet__number&quot;&gt;0&lt;/span&gt;; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; };&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;span class=&quot;code-snippet__class&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;Ostrich&lt;/span&gt; :&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; Bird {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; };&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre role=&quot;presentation&quot;&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cpp&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;crossRiver&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(Bird bird)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     &lt;span class=&quot;code-snippet__keyword&quot;&gt;int32_t&lt;/span&gt; distance = &lt;span class=&quot;code-snippet__number&quot;&gt;1000&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     &lt;span class=&quot;code-snippet__keyword&quot;&gt;int32_t&lt;/span&gt; elapsed = distance / bird.getVelocity();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; }&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;鸟类Brid具有飞行速度的属性，鸵鸟类Ostrich继承自类Brid，飞行速度默认为0。在函数crossRiver中，将基类Brid对象替换成子类Ostrich对象后，获取的飞行速度为0，出现了除0异常。不符合LSP原则。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;所以鸵鸟不是鸟。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;在这两个例子中，结合里氏替换原则， 我们得出了两个奇怪的结论，违背了几何学和生物学的常识。其实问题在于我们对抽象和接口的设计上。比如前一个例子中reSize函数，它的条件判断是有问题的。对于一个矩形对象，宽高不一定非得相等，所以将宽高相等作为循环的条件是不合理的。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;对于后一个例子，飞行并不是鸟类的统一特征，所以抽象的鸟类不应该拥有飞行速度这个属性，也不应该具有飞行的接口。那么我们应该怎么处理这个问题呢。准确来说，鸟类可以具有是否可以飞行的接口，然后有一个速度属性。可以飞行的鸟返回飞行速度，而鸵鸟返回行走速度。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;所以，里氏替换原则用于验证我们的接口和抽象设计是否合理，同时也可以验证继承关系是否合理。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;ISP 接口隔离原则&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;1.&lt;/span&gt;&lt;span&gt;不依赖于自己不需要的东西&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;2.&lt;/span&gt;&lt;span&gt;使用接口类的方式细化功能模块，每个接口类负责某一类明确的功能&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;指导我们进行接口设计的原则。类似于单一职责原则，多个单一的接口负责的功能更简单，更易于维护，这比一个庞大的接口要好。在做接口设计时要尽量保证接口的小巧、简洁和正交，这样给业务层提供了更多的灵活性。一个大的接口可能会做业务层并不希望做的事，同时当业务层需要扩展功能时也会使变更影响的范围过大。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;DIP 依赖反转原则（依赖倒置）&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;1.&lt;/span&gt;&lt;span&gt;为了保证系统的灵活性（易于修改）和稳定性（修改影响范围小），在依赖关系中应该避免引用具体的类&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;2.&lt;/span&gt;&lt;span&gt;接口比实现更稳定，所以尽量避免修改函数实现时对依赖该接口的模块的影响&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;3.&lt;/span&gt;&lt;span&gt;继承关系是依赖关系中最强的，尽量避免继承自有具体实现的类&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;这个原则目的在于降低使模块间的耦合度，并且使底层模块更易于被修改和替换。当下层功能发生变化时可以控制对上层业务的影响范围，使得整体系统更加稳定和灵活。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;DIP原则在后面章节介绍架构设计方法时也会多次提到。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;以上这五个设计原则统称为SOLID原则。在《整洁架构之道》中有比较详细的介绍。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;奥卡姆剃刀原则&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;奥卡姆剃刀原则不是在软件开发领域提出的，而是在哲学领域提出的。奥卡姆剃刀原则对科学和哲学的发展都极为重要，因为它告诉人们理论应该尽量简洁，理论中一切不影响结论的多余部分都应该被剔除掉。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;正如奥卡姆剃刀原则的精髓一样，它的描述非常简洁有力：如非必要，勿增实体。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;我们也可以称它为简单即为美原则。通俗的描述是：用尽量少的步骤完成一件事。或者，如果对于一个事物有两种解释，采用最简单或能被证伪的那种。正是因为奥卡姆剃刀原则，我们才更加相信哥白尼的日心说，更相信牛顿和爱因斯坦。否则，地球是宇宙中心的理论也没错，只是其他行星和恒星环绕地球的轨道公式也太复杂了，而且也容易被自然现象证伪。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;在众多的介绍软件设计方法的书籍和资料中也多次提到过奥卡姆剃刀原则。应用到软件开发领域，它确实给了我们很大的启示。设想一下我们是不是遇到过这样的场景：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;1.&lt;/span&gt;&lt;span&gt;费力地向别人解释某个模块为什么那么设计&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;2.&lt;/span&gt;&lt;span&gt;为某段代码加的注释比代码都多&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;3.&lt;/span&gt;&lt;span&gt;为了解决一个问题而引入一个新的模块&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;当我们费力说明和解释某个代码设计时，真正的问题并不在于我们解释的不够充分，或者听众不够聪明理解不了，而在于代码设计本身没有很好地体现其业务语义。实际上过多的解释和注释都是多余的，是可以被奥卡姆剃刀砍掉的。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;对于为了解决一个问题而引入一个模块也是在工作中经常遇到的问题。有很多原因导致某些模块变得腐化难以维护，比如最初的设计没有很好地贴合业务场景；编码规范不够好，后面的修改也没有遵守规则；接手者没有完全理解作者的意图就着手修改等等。而程序员也经常会有的一个想法是：当一个模块难以维护了，最好的方法是用一个新模块替换掉它。实际上这种方法并没有触及问题的本质，在没有找到导致模块腐化的原因之前，在没有制定规范的模块设计方案之前，我们都不能保证新模块不会有旧模块一样的问题。所以，想开发新模块替换掉旧模块很大程度上是在逃避对旧模块问题的思考，新模块也很有可能沦落到旧模块一样的地步。如果回答不了这个矛盾的问题，还是用奥卡姆剃刀把新模块剔除掉吧，新模块是多余的，并没有解决真正的问题。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;奥卡姆剃刀原则保证解决问题的方法是简单有效的，同时也约束我们应当思考更根本的问题，不能浮于问题表象采用最省力的方法。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;其他的设计原则概览&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;DRY（Dont Repeat Yourself）：&lt;/span&gt;&lt;span&gt;保证代码的可复用性，避免代码逻辑的重复&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;YAGNI（You Aint Gonna Need It）：&lt;/span&gt;&lt;span&gt;代码应易于扩展，但要避免过度设计，不要编写当前用不到的代码。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;KISS(Keep It Simple, Stupid)：&lt;/span&gt;&lt;span&gt;把事情想复杂，做简单&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;POLA(Principle of Least Astonishment)：&lt;/span&gt;&lt;span&gt;最小惊奇原则。&lt;/span&gt;&lt;span&gt;代码应合乎逻辑和规范，给阅读者最少的惊吓。&lt;/span&gt;&lt;span&gt;接口设计避免标新立异。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h3 data-cangjie-key=&quot;347&quot; data-cangjie-leaf-block=&quot;true&quot; data-type=&quot;heading-3&quot;&gt;&lt;section&gt;&lt;span&gt;常用的几种架构设计&lt;/span&gt;&lt;/section&gt;&lt;/h3&gt;&lt;h4 data-cangjie-key=&quot;350&quot; data-cangjie-leaf-block=&quot;true&quot; data-type=&quot;heading-4&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/h4&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;分层架构&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;分层架构是指基于具体的业务模型按照功能模块将代码进行分层组织。每一层代表了一组相关功能的集合。具体分为几层没有明确的规则，通常可以分为3-4层或者更多。在分层架构中，依赖关系是由上往下，上层依赖于下层，不能反向依赖。越往下的层次越通用，偏向于基础能力。越往上层次越动态，偏向于业务。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.6080206985769728&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Z6bicxIx5naLaKRsYOY1ibqKv6Mhav80d6cVAvH9iaCibMUUqF2IU0Rml7BxhSMfhBn0O89IGNBWiaxIQhGIELmBKcA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;773&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;分层架构设计按照依赖规则的严格程度分为严格型分层架构和松散型分层架构。严格型分层架构要求每一层只能访问其直接依赖的层，不能访问其间接依赖的层。松散型分层架构允许每一层访问位于其下方的任意一层。严格型分层架构使得各个层之间的耦合度降到最低，但是灵活性不足，当上层需要访问下面间接层的能力时必须从上往下层层穿透。松散型分层架构在保证依赖规则的前提下提供了足够的灵活性，所以大部分分层架构都是松散型的。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;分层架构设计简洁易懂。对抽象事物按照基础特征进行分类，符合我们的思维习惯，易于理解。分层架构设计保证每一层内部有较好的内聚性，减少了层与层之间的耦合度，易于基础能力的沉淀和复用，也易于控制变更带来的风险。&lt;/span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;另外一方面，分层架构设计虽然定义了多个层，但是层与层之间的边界并不是特别清晰。对于新增的模块有可能难以确定应该放在哪一层。或者随着业务逻辑的变化，未来可能需要调整模块所属的层次。分层架构中，上层模块对下层模块有直接的依赖，下层模块的实现直接向上层模块暴露。在修改或者替换下层模块时需要修改上层模块，对上层业务的影响较大。业务实现与基础能力没有完全解耦合。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;六边形架构&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;又称为端口-适配器架构。为了解决具体实现依赖于基础能力的问题，采用依赖倒置设计方法将工程分为内部和外部。内部是具体的业务逻辑，外部是依赖的基础能力。内部业务逻辑不再直接依赖于外部基础能力，而是都依赖于其抽象定义。使用依赖注入的方式将外部实现传入内部业务逻辑中。内部和外部使用接口进行交互，内部业务逻辑访问基础能力时直接调用其抽象接口即可。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.6296296296296297&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Z6bicxIx5naLaKRsYOY1ibqKv6Mhav80d64DmbnKJOMhHFvFDRyhibnzYF91fmpxjF0KwtYTnIaGHe7bJicNxDAXkg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;810&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;六边形架构解决了业务逻辑直接依赖外部模块的问题，它们都依赖于抽象，不依赖于直接的实现和细节。它们直接通过定义好的接口进行交互。因为业务逻辑和外部模块没有直接的依赖关系，在修改和替换外部模块时只需要按照接口定义实现功能，不需要改动业务逻辑。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;洋葱圈架构（整洁架构）&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;洋葱圈架构又称为整洁架构，结合了分层架构、六边形架构和领域驱动设计特点的架构设计方法。洋葱圈架构是对六边形架构的进一步扩展，依赖关系依然是外部依赖内部。参考领域驱动设计，将依赖层次划分为3-4层甚至更多。从内向外依次为：领域模型、业务逻辑、领域服务、基础能力、外部模块等。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;洋葱圈架构具有六边形架构的优点，采用依赖倒置的原则使内部业务模型不再直接依赖于外部基础能力。外部模块的变动和替换不影响内部业务逻辑。采用领域驱动设计的方法划分实体和模型，利于业务规则的抽象和业务模型的建立，对未来业务迭代的支持较好。洋葱圈架构使业务实体、业务模型和业务实现处在里层，保证了业务模型和实现的稳定，避免受到外部模块变动的影响。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;例如，使三方SDK或者数据库系统属于最外层，使用依赖注入的方法将它们的实现传入内部逻辑。当替换三方SDK或者数据库系统时，按照接口定义实现具体细节即可。不需要对内部逻辑进行改动。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;领域驱动设计方法&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;领域驱动设计简称为DDD（Domain-Driven Design）。准确来说它不是一个架构设计方法，而是一种以业务分析和划分来驱动系统架构设计的软件开发方法。它强调识别业务的核心问题域来确定问题边界，同时将问题域进行分解降低分析的复杂度。DDD强调通过关注业务核心提升业务价值。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;下面是DDD的一些核心概念，我们做一些简单的介绍。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;1.&lt;/span&gt;&lt;span&gt;领域：&lt;/span&gt;&lt;span&gt;有确定的范围和边界的业务问题域。&lt;/span&gt;&lt;span&gt;实际上是我们要解决什么业务问题的抽象描述。&lt;/span&gt;&lt;span&gt;比如提供给用户当前位置、目的地位置且提供到达信息是高德地图的问题域。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;2.&lt;/span&gt;&lt;span&gt;子域：&lt;/span&gt;&lt;span&gt;将大的问题域根据业务规则的不同拆分成的小问题域。&lt;/span&gt;&lt;span&gt;比如高德地图的问题域太大了，难以解决。&lt;/span&gt;&lt;span&gt;我们可以将问题域拆分成定位、POI搜索、路线规划等子问题域。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;3.&lt;/span&gt;&lt;span&gt;界限上下文：&lt;/span&gt;&lt;span&gt;领域之间的抽象边界。&lt;/span&gt;&lt;span&gt;封装了领域内的概念、规则和模型。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;4.&lt;/span&gt;&lt;span&gt;实体：&lt;/span&gt;&lt;span&gt;具有唯一标识的、存在生命周期的对象。&lt;/span&gt;&lt;span&gt;比如展示给用户可见的POI气泡是一个实体，它有状态和确定的生命周期。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;5.&lt;/span&gt;&lt;span&gt;值对象：&lt;/span&gt;&lt;span&gt;没有唯一标识和生命周期的对象，依附于实体而存在。&lt;/span&gt;&lt;span&gt;比如POI信息是值对象，本身没有状态，只能依附于POI气泡这个实体而存在。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;6.&lt;/span&gt;&lt;span&gt;聚合：&lt;/span&gt;&lt;span&gt;领域内一组实体、值对象的集合。&lt;/span&gt;&lt;span&gt;封装了集合与外界的交互&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;﻿﻿&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.8363171355498721&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Z6bicxIx5naLaKRsYOY1ibqKv6Mhav80d6RKZERq78MMLibgXLlGvicHasYyskXGibOa7x5xky5Z6DQP8BPQfA4Un2A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;782&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;使用DDD对业务问题进行分析和拆解后，可以采用任何一种架构设计方法，无论是分层架构、六边形架构或者整洁架构等。但是DDD要求架构设计从实际的业务场景出发，理解业务的核心问题。架构需要明确概念、规则的设计，并且保证业务模型的稳定性。使用分层架构展现DDD的领域设计方法，将工程分为4层：基础设施层、领域层、应用层和用户接口层。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1.1492537313432836&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Z6bicxIx5naLaKRsYOY1ibqKv6Mhav80d62cnazkq97gtH3mMDn4piaOcoRhZtCfoLmlayBj9rAEQiaVrvDDu1evjA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;268&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;h3 data-cangjie-key=&quot;469&quot; data-cangjie-leaf-block=&quot;true&quot; data-type=&quot;heading-3&quot;&gt;&lt;section&gt;&lt;span&gt;我们所用的架构方案&lt;/span&gt;&lt;/section&gt;&lt;/h3&gt;&lt;h4 data-cangjie-key=&quot;472&quot; data-cangjie-leaf-block=&quot;true&quot; data-type=&quot;heading-4&quot;&gt;&lt;br/&gt;&lt;/h4&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;鹰巢&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;我所在的团队——&lt;/span&gt;&lt;span&gt;鹰巢&lt;/span&gt;&lt;span&gt;业务组负责高德地图规划和导航的业务能力实现。它向下对接引擎层，包括定位引擎、导航引擎、渲染引擎等，向上对接前端JS层。除了承接功能庞大、逻辑复杂的导航业务外，&lt;/span&gt;&lt;span&gt;鹰巢&lt;/span&gt;&lt;span&gt;还负责引擎能力的封装以及将这些封装能力向上层JS透出。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;在进行代码目录划分之前，&lt;/span&gt;&lt;span&gt;鹰巢&lt;/span&gt;&lt;span&gt;的功能实现也是按照模块化进行设计的，但是模块之间并没有明确的依赖关系。任何代码都可以互相的引用，这也就导致了工程中各模块之间有错综复杂的调用关系，很难以说清楚某一个模块应该处于哪个位置，应该如何被引用。虽然我们一直将工程代码分为框架层和业务层，但是框架层和业务层之间的依赖关系并不明确。业务层依赖框架层，框架层也依赖了业务层，并不符合分层架构的设计原则，所以鹰巢的工程架构不属于分层架构。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;在我们去年的代码目录划分的工作中，我们最终参考领域驱动设计的方法对代码目录进行了重新的组织和划分。将工程代码整体上分为4层：基础能力、业务层、工具层和接入层。以下是整体结构图：&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5787321063394683&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Z6bicxIx5naLaKRsYOY1ibqKv6Mhav80d6VW0TAnmUTx9fFj8vfr2zPesRf0SOIQ38rMkpkDfGmQabUZL1MaqtSg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;489&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;适配层与以下的4层不在同一个仓库，它包含了与前端JS交互的必要能力封装。按照模块的划分规则，我们可以说，鹰巢的工程架构属于结合领域驱动设计的松散型分层架构。它的特点是：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;1.&lt;/span&gt;&lt;span&gt;按照领域驱动设计对工程代码进行组织和划分，在业务层按照不同业务领域划分代码模块&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;2.&lt;/span&gt;&lt;span&gt;采用分层架构设计将工程分为多层，上层依赖于下层，下层不能依赖于上层&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;3.&lt;/span&gt;&lt;span&gt;上层任意模块都可以调用下层任意模块，属于松散型架构。&lt;/span&gt;&lt;span&gt;更加灵活&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;工程技术中心C++能力层（包括地图引擎层）&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;在工程技术中心的语言能力框架中，从鹰巢、地图引擎到基础库都是C++语言实现。使用统一的流程管控它们的开发、构建、集成。在&lt;/span&gt;&lt;span&gt;引擎架构升级&lt;/span&gt;&lt;span&gt;之前的相当长的一段时间内，它们都属于松散型分层架构，以下是简化版的结构图：&lt;/span&gt;&lt;span&gt;﻿﻿&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.47045454545454546&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Z6bicxIx5naLaKRsYOY1ibqKv6Mhav80d6RnAQF2vQkCYniaCYamBtdVfKVkbAS3DRWD2WWP69TGTcZFCbvuvTbWQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;440&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;实际上，包括引擎库在内的C++层有几十上百个代码仓库，层次众多，且从上层到下层的依赖关系复杂。如果将所有的依赖关系绘制出来，将是一个复杂的网状。虽然整体架构依然遵守了分层架构的设计原则：只能上层依赖下层。但是因为依赖层次和关系的复杂，导致下层代码的改动对上层的影响很大，在构建时也经常出现库版本不匹配的冲突。这使得上层业务层经常处于不稳定状态，不利于上层业务的快速迭代。并且下层能力升级也必然需要上层业务层做大工作量的适配。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;在去年的&lt;/span&gt;&lt;span&gt;引擎架构升级&lt;/span&gt;&lt;span&gt;中，抽离出抽象层，使得各个仓库都依赖于抽象接口，不再依赖于具体的实现。抽象出来的抽象层包括：InterfaceApp、InterfaceAR、InterfaceARWalk、InterfaceHorus、InterfaceMap、InterfaceVMap、InterfaceTBT、InterfacePosEngine等。比如鹰巢和TBT都依赖于InterfaceTBT抽象层，使用依赖倒置的原则在App初始化时将TBT的实例化对象设置给鹰巢。鹰巢通过调用实例化对象的抽象接口访问TBT的能力。同理，鹰巢和渲染都依赖于InterfaceMap抽象层。这种方式使得上层的业务层比较稳定，只要保证抽象层接口的稳定性，业务层基本上就不会受到下层改动的影响。而且，当下层进行能力升级时，只要按照抽象接口定义实现对应能力即可，不需要业务层做适配。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;从这方面来讲，在引擎架构升级后，引擎具有整洁架构的特征。但是并不能完全称为整洁架构，因为从更大的视角来看（将基础库和Native层包括进去），依然是松散型的分层架构。所以，我们可以称之为具有整洁架构特征的松散型分层架构。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/section&gt;&lt;h3 data-cangjie-key=&quot;554&quot; data-cangjie-leaf-block=&quot;true&quot; data-type=&quot;heading-3&quot;&gt;&lt;section&gt;&lt;span&gt;总结&lt;/span&gt;&lt;/section&gt;&lt;/h3&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;对于架构设计的学习和理解，我认为很难的一点是：即使懂得很多道理还是很难把事情做好。众多的设计原则都是在不同业务场景下提出的，有些原则之间本身就是矛盾的。无论是架构设计方法还是设计原则，它们不是金科玉律，更不可能放之四海而皆准。它们的价值在于告诉我们应该摒弃什么，应该遵守什么。我们不用那些技术官僚的词汇，用更接地气的描述来说，设计原则也只是要求我们做到简洁、规范和易于理解而已。架构设计并不高端，它本身所产生的价值并不明显，真正能够产生价值的在于我们当前正在走的路：如何理解我们的业务问题。&lt;/span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/section&gt;&lt;h3 data-cangjie-key=&quot;563&quot; data-cangjie-leaf-block=&quot;true&quot; data-type=&quot;heading-3&quot;&gt;&lt;strong&gt;&lt;span&gt;参考资料和书籍：&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;span&gt;应用架构之道：分离业务逻辑和技术细节&lt;/span&gt;&lt;span&gt;﻿：https://www.cnblogs.com/alisystemsoftware/p/13846127.html&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;span&gt;The Onion Architecture&lt;/span&gt;&lt;span&gt;﻿：https://jeffreypalermo.com/2008/07/the-onion-architecture-part-1/&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;《架构整洁之道》、&lt;/span&gt;&lt;span&gt;《领域驱动设计-ThoughtWorks洞见》、&lt;/span&gt;&lt;span&gt;《代码精进之路-从码农到工匠》、&lt;/span&gt;&lt;span&gt;《UNIX编程艺术》&lt;/span&gt;&lt;/section&gt;&lt;h3 data-cangjie-key=&quot;628&quot; data-cangjie-leaf-block=&quot;true&quot; data-type=&quot;heading-3&quot;&gt;&lt;strong&gt;&lt;span&gt;附录&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;h3 data-cangjie-key=&quot;628&quot; data-cangjie-leaf-block=&quot;true&quot; data-type=&quot;heading-3&quot;/&gt;&lt;section&gt;&lt;span&gt;工程：是指以某组设想的目标为依据，应用有关的科学知识和技术手段，通过有组织的一群人将某个（或某些）现有实体（自然的或人造的）转化为具有预期使用价值的人造产品过程&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;工程化：是指以提高效率、降低成本、保证质量保证为目的从而促进多人合作，实现功能强大，健壮性好的项目的手段和措施&lt;/span&gt;&lt;/section&gt;&lt;hr/&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;开发者评测局第五期——函数计算Serverless评测征集令&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;开发者评测局上新啦，第五期评测函数计算Serverless江湖征集令来袭，全新玩法，权益升级，价值千元高级版产品乘风者免费限量专享。群雄争霸夺好礼，Beats耳机、机械键盘、千元天猫超市卡等好礼等你来拿，发布你的评测成为江湖新“一代宗师”。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;点击阅读原文查看详情。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;
          &lt;/div&gt;

          

          



           
                                
                    
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>1efa3f754ff03506a99accb0da4340b7</guid>
<title>腾讯低代码平台正式开源！可拖拽、生成手机项目、PC 项目！接私活福利啊！</title>
<link>https://toutiao.io/k/8oqx21m</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;p&gt;&lt;strong/&gt;&lt;strong/&gt;&lt;span&gt;&lt;em&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;点击关注公众号，Java干货&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;span&gt;&lt;em&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;及时送达&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;em&gt;&lt;img data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/b96CibCt70iaajvl7fD4ZCicMcjhXMp1v6UibM134tIsO1j5yqHyNhh9arj090oAL7zGhRJRq6cFqFOlDZMleLl4pw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;64&quot;/&gt;&lt;/em&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzI3ODcxMzQzMw==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/TNUwKhV0JpRmQZ5QvlZZvNdzX7ICmxzLeD6icmhocv2mrIOJEjicPL5DJ3VItG1w2RKB09zY1sl5uC6LHbuXoqjA/0?wx_fmt=png&quot; data-nickname=&quot;Java技术栈&quot; data-alias=&quot;javastack&quot; data-signature=&quot;专注分享Java技术干货，包括多线程、JVM、Spring Boot、Spring Cloud、Intellij IDEA、Dubbo、Zookeeper、Redis、架构设计、微服务、消息队列、Git、面试题、程序员攻略、最新动态等。&quot;/&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;来源：腾讯开源&lt;/span&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;项目简介&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;腾讯tmagic-editor是一个所见即所得的页面可视化编辑器，基于tmagic-editor可以快速搭建可视化页面生产平台，让非技术人员可以通过拖拽和配置，自助生成H5页面、PC页面、TV页面，大大降低页面生产成本，实现零代码/低代码生成页面。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以下是腾讯视频会员业务基于tmagic-editor搭建的可视化页面搭建平台示意图。tmagic-editor已经用于腾讯视频会员、爱玩游戏、云视听极光、腾讯会议等十几个腾讯业务，每月生产和发布数百个页面。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5796296296296296&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/TNUwKhV0JpTBq37BAyzPeibmaDkfng3VACefag60iczTjkT21jKTUmd8V2Sf3womibASPxhsuU8jRiaMqt3B763q8g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;基于可视化编辑器的页面生产流程&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI3ODcxMzQzMw==&amp;amp;mid=2247560648&amp;amp;idx=2&amp;amp;sn=95a21ad7aa23a965574a7dc1feb5a955&amp;amp;chksm=eb5168fedc26e1e82052fbcf0925af99735476480ab8d24b0f019703ef9159f97c8bd1e732ee&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;一、物料开发，主要是指业务组件，比如图片组件、抽奖组件、登录插件等。tmagic-editor本身并不提供业务组件，业务组件由使用tmagic-editor的业务，根据自己的业务需求去自行开发。业务组件一次开发，在多个页面反复使用，业务组件应该提供一些配置选项，保证灵活性，满足不同页面使用该组件时的定制需求。业务组件可以用不同的前端框架实现，如vue2、vue3、react。二、编排，这里指通过对组件的拖拽和配置，完成页面编辑，主要由非技术人员完成。三、保存与发布，这个环节在技术实现上，分为生成DSL、构建、部署。生成DSL：编辑器和生成的页面之间，通过DSL解耦。编辑器上配置页面，得到的产物是一个序列化js对象的页面描述文件，这个对象采用js schema描述，描述页面的基本信息、包含的组件信息、以及组件间逻辑。构建：构建模块基于runtime代码，对组件进行打包构建，生成html、js、css文件。构建环节使用的runtime可以根据业务的需要，选择不同的前端框架实现，tmagic-editor默认提供了vue2、vue3、react三种runtime。部署：将前面环节生成的html、js、css、js schema描述文件，部署到业务自己的服务器上。&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;一、物料开发，主要是指业务组件，比如图片组件、抽奖组件、登录插件等。tmagic-editor本身并不提供业务组件，业务组件由使用tmagic-editor的业务，根据自己的业务需求去自行开发。业务组件一次开发，在多个页面反复使用，业务组件应该提供一些配置选项，保证灵活性，满足不同页面使用该组件时的定制需求。业务组件可以用不同的前端框架实现，如vue2、vue3、react。&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI3ODcxMzQzMw==&amp;amp;mid=2247560648&amp;amp;idx=2&amp;amp;sn=95a21ad7aa23a965574a7dc1feb5a955&amp;amp;chksm=eb5168fedc26e1e82052fbcf0925af99735476480ab8d24b0f019703ef9159f97c8bd1e732ee&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;一、物料开发，主要是指业务组件，比如图片组件、抽奖组件、登录插件等。tmagic-editor本身并不提供业务组件，业务组件由使用tmagic-editor的业务，根据自己的业务需求去自行开发。业务组件一次开发，在多个页面反复使用，业务组件应该提供一些配置选项，保证灵活性，满足不同页面使用该组件时的定制需求。业务组件可以用不同的前端框架实现，如vue2、vue3、react。二、编排，这里指通过对组件的拖拽和配置，完成页面编辑，主要由非技术人员完成。三、保存与发布，这个环节在技术实现上，分为生成DSL、构建、部署。生成DSL：编辑器和生成的页面之间，通过DSL解耦。编辑器上配置页面，得到的产物是一个序列化js对象的页面描述文件，这个对象采用js schema描述，描述页面的基本信息、包含的组件信息、以及组件间逻辑。构建：构建模块基于runtime代码，对组件进行打包构建，生成html、js、css文件。构建环节使用的runtime可以根据业务的需要，选择不同的前端框架实现，tmagic-editor默认提供了vue2、vue3、react三种runtime。部署：将前面环节生成的html、js、css、js schema描述文件，部署到业务自己的服务器上。&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;二、编排，这里指通过对组件的拖拽和配置，完成页面编辑，主要由非技术人员完成。&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI3ODcxMzQzMw==&amp;amp;mid=2247560648&amp;amp;idx=2&amp;amp;sn=95a21ad7aa23a965574a7dc1feb5a955&amp;amp;chksm=eb5168fedc26e1e82052fbcf0925af99735476480ab8d24b0f019703ef9159f97c8bd1e732ee&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;一、物料开发，主要是指业务组件，比如图片组件、抽奖组件、登录插件等。tmagic-editor本身并不提供业务组件，业务组件由使用tmagic-editor的业务，根据自己的业务需求去自行开发。业务组件一次开发，在多个页面反复使用，业务组件应该提供一些配置选项，保证灵活性，满足不同页面使用该组件时的定制需求。业务组件可以用不同的前端框架实现，如vue2、vue3、react。二、编排，这里指通过对组件的拖拽和配置，完成页面编辑，主要由非技术人员完成。三、保存与发布，这个环节在技术实现上，分为生成DSL、构建、部署。生成DSL：编辑器和生成的页面之间，通过DSL解耦。编辑器上配置页面，得到的产物是一个序列化js对象的页面描述文件，这个对象采用js schema描述，描述页面的基本信息、包含的组件信息、以及组件间逻辑。构建：构建模块基于runtime代码，对组件进行打包构建，生成html、js、css文件。构建环节使用的runtime可以根据业务的需要，选择不同的前端框架实现，tmagic-editor默认提供了vue2、vue3、react三种runtime。部署：将前面环节生成的html、js、css、js schema描述文件，部署到业务自己的服务器上。&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;三、保存与发布，这个环节在技术实现上，分为生成DSL、构建、部署。生成DSL：编辑器和生成的页面之间，通过DSL解耦。编辑器上配置页面，得到的产物是一个序列化js对象的页面描述文件，这个对象采用js schema描述，描述页面的基本信息、包含的组件信息、以及组件间逻辑。构建：构建模块基于runtime代码，对组件进行打包构建，生成html、js、css文件。构建环节使用的runtime可以根据业务的需要，选择不同的前端框架实现，tmagic-editor默认提供了vue2、vue3、react三种runtime。部署：将前面环节生成的html、js、css、js schema描述文件，部署到业务自己的服务器上。&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;tmagic-editor提供了什么&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;可视化编辑器&lt;/strong&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5805555555555556&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/TNUwKhV0JpTBq37BAyzPeibmaDkfng3VAJINWMFcjlt0ribOiaJ2ib057sGdGbxDUKKVjkVPExGBLia0XUSCYSZA5eg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如上图所示，就是tmagic-editor可视化编辑器，tmagic-editor基于vue3实现。包括左侧侧边栏、组件列表展示、已选组件的组件树、中间的页面拖拽的画布区域（也叫模拟器）、右侧表单配置区域、正中间上方的画布控制区域（放大缩小、网格线显隐）、预览、保存、查看源码（js schema描述的js对象）、底部区域的页面添加与删除。编辑器具有扩展功能，业务可以根据需要在侧边栏和顶部栏增加版本管理、发布等功能。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;runtime&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;runtime 的概念，是理解tmagic-editor页面运行的重要概念，runtime 是承载tmagic-editor页面的运行环境。可视化页面需要在tmagic-editor编辑器中搭建、渲染，通过模拟器所见即所得。搭建完成后，保存配置并发布，然后渲染成用户访问的真实页面。其中涉及到两个不同的 runtime：编辑器中的模拟器，终端打开真实页面。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由于tmagic-editor在编辑器中的模拟器是通过 iframe 渲染的，和tmagic-editor平台本身可以做到框架解耦，所以 runtime 也可以用不同框架开发。目前tmagic-editor提供了 vue2/vue3 和 react 的 runtime 。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;各个 runtime 的作用除了作为不同场景下的渲染环境，同时也是不同环境的打包构建载体。tmagic-editor示例代码中的打包就是基于 runtime 进行的。&lt;span&gt;最新面试题整理好了，大家可以在&lt;a class=&quot;weapp_text_link js_weapp_entry&quot; data-miniprogram-appid=&quot;wxe57fd7ba3fb24ae8&quot; data-miniprogram-path=&quot;pages/index/list&quot; data-miniprogram-nickname=&quot;Java面试库&quot; href=&quot;&quot; data-miniprogram-type=&quot;text&quot; data-miniprogram-servicetype=&quot;&quot;&gt;Java面试库&lt;/a&gt;小程序在线刷题。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;管理端demo&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;编辑器可以对一个页面进行编辑、配置、发布，我们还需要一个管理端来对页面列表进行管理。我们提供了一个管理端demo，方便业务快速搭建起一个完整的可视化搭建平台。管理端提供了如下能力：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;页面列表展示，查询&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;页面创建，复制&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;页面编辑以及 AB TEST 配置能力&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;页面发布以及发布状态查看和管理&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;使用tmagic-editor的业务需要做什么&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;开发业务组件&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;tmagic-editor并不提供业务组件，业务需要根据自己的业务场景，开发相应的业务组件。比如抽奖组件、视频播放组件等。tmagic-editor的通用性设计，使得业务方可以使用不同的前端框架去开发组件。tmagic-editor官方已经提供了vue2/vue3、react的runtime，意味着业务可以直接使用这些框架开发组件，如果业务想用其它框架开发组件，则需要开发相应的runtime。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;开发业务插件（可选）&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;插件的功能是作为页面逻辑行为的一种补充方式。一般不显式的在模拟器中被渲染出具体内容（除非插件中会生成组件并插入页面），通常我们会用插件实现类似登录，页面环境判断，请求拦截器等功能。跟组件一样，可以用不同前端框架实现。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;部署可视化搭建服务&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;tmagic-editor提供的是开源代码，并不是一个saas服务，因此业务需要自己部署可视化搭建平台的服务。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;构建和发布页面&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;业务需要管理自己的组件库，在发布环节基于拿到的页面js Schema描述文件，基于runtime进行打包构建，并把打包构建的产物部署到自己的服务器/CDN。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;另外，Java 最新系列教程全部整理好了，微信搜索Java技术栈，在后台发送：Java，可以在线阅读。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;其它定制需求&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果对编辑器有一些扩展需求，编辑器已经预留了相应的扩展能力，业务可以开发相应扩展功能。tmagic-editor提供了vue2/vue3、react的runtime，业务可以修改runtime，或者开发其它前端框架的runtime。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;tmagic-editor能力项&lt;/h2&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.2314814814814814&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/TNUwKhV0JpTBq37BAyzPeibmaDkfng3VAichceCXibBiaEvEFRCWiavpib2bkcRvKzBNNYzNDibev5dXwPMy67swreP2A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>aa94590769d9dfa085c937da5bd72702</guid>
<title>一文深入浅出 ETCD</title>
<link>https://toutiao.io/k/ur9pbh3</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                                       &quot; id=&quot;js_content&quot;&gt;
            &lt;fieldset data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;section data-brushtype=&quot;text&quot;&gt;架构师（JiaGouX）&lt;/section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;我们都是架构师！&lt;br/&gt;架构未来，你来不来？&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;/fieldset&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;section&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzAwNjQwNzU2NQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/sXiaukvjR0RCNb3RYsCgx02T4J55ia2SnemY7uJHsDChxq6jAibbATlIKDgzLxz0zekXWjblzCDcL86AjbMNp02Tg/0?wx_fmt=png&quot; data-nickname=&quot;架构师&quot; data-alias=&quot;JiaGouX&quot; data-signature=&quot;专业架构师，专注高质量架构干货分享。三高架构（高可用、高性能、高稳定）、大数据、机器学习、Java架构、系统架构、分布式架构、人工智能等的架构讨论交流，以及结合互联网技术的架构调整，大规模架构实战分享。欢迎有想法、乐于分享的架构师交流学习。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;h1 data-id=&quot;heading-0&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/h1&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;ul type=&quot;disc&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;一 概述&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;1.1
      etcd简介&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;1.2
      发展历史&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;1.3
      etcd的特点&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;1.4
      概念术语&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;1.5
      数据读写顺序&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;1.6
      leader选举&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;1.7
      判断数据是否写入&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;二
      etcd架构及解析&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;2.1
      架构图&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;2.2
      架构解析&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;三 应用场景&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;3.1
      服务注册与发现&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;3.2
      消息发布与订阅&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;3.3
      负载均衡&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;3.4
      分部署通知与协调&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;3.5
      分布式锁&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;3.6
      分布式队列&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;3.7
      集群与监控与Leader选举&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;四 安装部署&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;4.1
      单机部署&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;4.2
      集群部署&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;4.2.1
      主机信息&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;4.2.2
      host配置&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;4.2.3
      etcd安装&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;4.2.4
      etcd配置&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;4.2.5
      查看集群状态&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;五 简单使用&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;5.1 增加&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;5.2 删除&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;5.3 更新&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;5.4 查询&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;5.5
      watch&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;5.6 备份&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;5.7
      member&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;示例&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;六 总结&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;参考链接&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;1.2857142857142858&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YK9e7vHy9IQATwibKVicOpXZibX8VOvBrnF39NdpXQMwdpyIgN0ibicEwRdge0mXthxjHagHgwpWhrsibvMZFibaQC6vQ/640?wx_fmt=png&quot; data-w=&quot;14&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;一 概述&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;1.2857142857142858&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/orc2J6rib40bATuJM23UiaHQ0tsVpvjgyuhk7To5zFqb2fyL9pCr1U7hfeKJELCht0KxWnuias6TLibMdcRhM7QhyQ/640?wx_fmt=png&quot; data-w=&quot;14&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;背景：近期k8s应用中etcd的功能存在一些困惑，对其进行来单独的学习，能更深入理解k8s中的的一些特性。&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 data-id=&quot;heading-1&quot;&gt;&lt;strong&gt;&lt;span&gt;1.1 etcd简介&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;section&gt;&lt;span&gt;etcd是CoreOS团队于2013年6月发起的开源项目，它的目标是构建一个高可用的分布式键值(key-value)数据库。etcd内部采用&lt;/span&gt;&lt;code&gt;&lt;span&gt;raft&lt;/span&gt;&lt;/code&gt;&lt;span&gt;协议作为一致性算法，etcd基于Go语言实现。&lt;/span&gt;&lt;/section&gt;&lt;h2 data-id=&quot;heading-2&quot;&gt;&lt;span&gt;&lt;strong&gt;1.2 发展历史&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.37809187279151946&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/sXiaukvjR0RBRULlsyDzyTrC3hz2YxtgKVah0skGdAQCZpFXODzd6Y1Jt4QQD9nqrxqFXFiaQeTCuCykSrAV0RSQ/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;2264&quot;/&gt;&lt;/section&gt;&lt;figcaption/&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;h2 data-id=&quot;heading-3&quot;&gt;&lt;strong&gt;&lt;span&gt;1.3 etcd的特点&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;简单：安装配置简单，而且提供了HTTP API进行交互，使用也很简单&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;安全：支持SSL证书验证&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;快速：根据官方提供的benchmark数据，单实例支持每秒2k+读操作&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;可靠：采用raft算法，实现分布式系统数据的可用性和一致性&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-id=&quot;heading-4&quot;&gt;&lt;strong&gt;&lt;span&gt;1.4 概念术语&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Raft：etcd所采用的保证分布式系统强一致性的算法。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Node：一个Raft状态机实例。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Member：一个etcd实例。它管理着一个Node，并且可以为客户端请求提供服务。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Cluster：由多个Member构成可以协同工作的etcd集群。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Peer：对同一个etcd集群中另外一个Member的称呼。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Client：向etcd集群发送HTTP请求的客户端。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;WAL：预写式日志，etcd用于持久化存储的日志格式。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;snapshot：etcd防止WAL文件过多而设置的快照，存储etcd数据状态。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Proxy：etcd的一种模式，为etcd集群提供反向代理服务。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Leader：Raft算法中通过竞选而产生的处理所有数据提交的节点。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Follower：竞选失败的节点作为Raft中的从属节点，为算法提供强一致性保证。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Candidate：当Follower超过一定时间接收不到Leader的心跳时转变为Candidate开始竞选。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Term：某个节点成为Leader到下一次竞选时间，称为一个Term。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Index：数据项编号。Raft中通过Term和Index来定位数据。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-id=&quot;heading-5&quot;&gt;&lt;strong&gt;&lt;span&gt;1.5 数据读写顺序&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;section&gt;&lt;span&gt;为了保证数据的强一致性，etcd集群中所有的数据流向都是一个方向，从 Leader （主节点）流向 Follower，也就是所有 Follower 的数据必须与 Leader 保持一致，如果不一致会被覆盖。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;用户对于etcd集群所有节点进行读写&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;读取：由于集群所有节点数据是强一致性的，读取可以从集群中随便哪个节点进行读取数据&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;写入：etcd集群有leader，如果写入往leader写入，可以直接写入，然后然后Leader节点会把写入分发给所有Follower，如果往follower写入，然后Leader节点会把写入分发给所有Follower&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-id=&quot;heading-6&quot;&gt;&lt;strong&gt;&lt;span&gt;1.6 leader选举&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;section&gt;&lt;span&gt;假设三个节点的集群，三个节点上均运行Timer（每个Timer持续时间是随机的），Raft算法使用随机Timer来初始化Leader选举流程，第一个节点率先完成了Timer，随后它就会向其他两个节点发送成为Leader的请求，其他节点接收到请求后会以投票回应然后第一个节点被选举为Leader。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;成为Leader后，该节点会以固定时间间隔向其他节点发送通知，确保自己仍是Leader。有些情况下当Follower们收不到Leader的通知后，比如说Leader节点宕机或者失去了连接，其他节点会重复之前选举过程选举出新的Leader。&lt;/span&gt;&lt;/section&gt;&lt;h2 data-id=&quot;heading-7&quot;&gt;&lt;strong&gt;&lt;span&gt;1.7 判断数据是否写入&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;section&gt;&lt;span&gt;etcd认为写入请求被Leader节点处理并分发给了多数节点后，就是一个成功的写入。那么多少节点如何判定呢，假设总结点数是N，那么多数节点 &lt;/span&gt;&lt;code&gt;&lt;span&gt;Quorum=N/2+1&lt;/span&gt;&lt;/code&gt;&lt;span&gt;。关于如何确定etcd集群应该有多少个节点的问题，上图的左侧的图表给出了集群中节点总数(Instances)对应的Quorum数量，用Instances减去Quorom就是集群中容错节点（允许出故障的节点）的数量。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;所以在集群中推荐的最少节点数量是3个，因为1和2个节点的容错节点数都是0，一旦有一个节点宕掉整个集群就不能正常工作了。&lt;/span&gt;&lt;/section&gt;&lt;h1 data-id=&quot;heading-8&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/h1&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;1.2857142857142858&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YK9e7vHy9IQATwibKVicOpXZibX8VOvBrnF39NdpXQMwdpyIgN0ibicEwRdge0mXthxjHagHgwpWhrsibvMZFibaQC6vQ/640?wx_fmt=png&quot; data-w=&quot;14&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;二 etcd架构及解析&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;1.2857142857142858&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/orc2J6rib40bATuJM23UiaHQ0tsVpvjgyuhk7To5zFqb2fyL9pCr1U7hfeKJELCht0KxWnuias6TLibMdcRhM7QhyQ/640?wx_fmt=png&quot; data-w=&quot;14&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;h2 data-id=&quot;heading-9&quot;&gt;&lt;strong&gt;&lt;span&gt;2.1 架构图&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7493573264781491&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/sXiaukvjR0RBRULlsyDzyTrC3hz2YxtgKP63uoz3GzaukXAxWbTp66d0ibVROOlHNn4HU8qxicThmdDgp7ntZtdicA/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;1556&quot;/&gt;&lt;figcaption/&gt;&lt;/figure&gt;&lt;p&gt;    &lt;/p&gt;&lt;h2 data-id=&quot;heading-10&quot;&gt;&lt;strong&gt;&lt;span&gt;2.2 架构解析&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;section&gt;&lt;span&gt;从 etcd 的架构图中我们可以看到，etcd 主要分为四个部分。&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;HTTP Server：用于处理用户发送的 API 请求以及其它 etcd 节点的同步与心跳信息请求。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Store：用于处理 etcd 支持的各类功能的事务，包括数据索引、节点状态变更、监控与反馈、事件处理与执行等等，是 etcd 对用户提供的大多数 API 功能的具体实现。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Raft：Raft 强一致性算法的具体实现，是 etcd 的核心。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;WAL：Write Ahead Log（预写式日志），是 etcd 的数据存储方式。除了在内存中存有所有数据的状态以及节点的索引以外，etcd 就通过 WAL 进行持久化存储。WAL 中，所有的数据提交前都会事先记录日志。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Snapshot 是为了防止数据过多而进行的状态快照；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Entry 表示存储的具体日志内容。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;section&gt;&lt;span&gt;通常，一个用户的请求发送过来，会经由 HTTP Server 转发给 Store 进行具体的事务处理，如果涉及到节点的修改，则交给 Raft 模块进行状态的变更、日志的记录，然后再同步给别的 etcd 节点以确认数据提交，最后进行数据的提交，再次同步。&lt;/span&gt;&lt;/section&gt;&lt;h1 data-id=&quot;heading-11&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/h1&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;1.2857142857142858&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YK9e7vHy9IQATwibKVicOpXZibX8VOvBrnF39NdpXQMwdpyIgN0ibicEwRdge0mXthxjHagHgwpWhrsibvMZFibaQC6vQ/640?wx_fmt=png&quot; data-w=&quot;14&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;三 应用场景&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;1.2857142857142858&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/orc2J6rib40bATuJM23UiaHQ0tsVpvjgyuhk7To5zFqb2fyL9pCr1U7hfeKJELCht0KxWnuias6TLibMdcRhM7QhyQ/640?wx_fmt=png&quot; data-w=&quot;14&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;h2 data-id=&quot;heading-12&quot;&gt;&lt;strong&gt;&lt;span&gt;3.1 服务注册与发现&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;section&gt;&lt;span&gt;etcd可以用于服务的注册与发现&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5258323765786452&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/sXiaukvjR0RBRULlsyDzyTrC3hz2YxtgKgw55ayYicer2jMHYsb9nMpzwO3sODOjIibCD5zZciajgRic2xEG4ZLw8Uw/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;1742&quot;/&gt;&lt;/section&gt;&lt;figcaption/&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;中间价已经后端服务在etcd中注册，前端和中间价可以很轻松的从etcd中发现相关服务器然后服务器之间根据调用关系相关绑定调用&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5335628227194492&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/sXiaukvjR0RBRULlsyDzyTrC3hz2YxtgKatbFlCtrEdeF8IUibdMXHiasKDibsn16qlR0riaL0LdCkyjpJQbcQfu60w/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;2324&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;后端多个无状态相同副本的app可以同事注册到etcd中，前端可以通过haproxy从etcd中获取到后端的ip和端口组，然后进行请求转发，可以用来故障转移屏蔽后端端口已经后端多组app实例。&lt;/span&gt;&lt;/section&gt;&lt;h2 data-id=&quot;heading-13&quot;&gt;&lt;strong&gt;&lt;span&gt;3.2 消息发布与订阅&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6917885264341957&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/sXiaukvjR0RBRULlsyDzyTrC3hz2YxtgKFJeDW0y8Wsic6zdNiaPRiaZFO58q7W7Vlx19W6ZWI3KRxAD96VnpRibicLQ/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;1778&quot;/&gt;&lt;figcaption/&gt;&lt;/figure&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;etcd可以充当消息中间件，生产者可以往etcd中注册topic并发送消息，消费者从etcd中订阅topic，来获取生产者发送至etcd中的消息。&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;h2 data-id=&quot;heading-14&quot;&gt;&lt;strong&gt;&lt;span&gt;3.3 负载均衡&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7253814147018031&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/sXiaukvjR0RBRULlsyDzyTrC3hz2YxtgKraePxicbdichngIguWBZtSZGHR1vCk9wc2icatflqIkr9TQqfWgQnic08g/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;1442&quot;/&gt;&lt;figcaption/&gt;&lt;/figure&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;后端多组相同的服务提供者可以经自己服务注册到etcd中，etcd并且会与注册的服务进行监控检查，服务请求这首先从etcd中获取到可用的服务提供者真正的ip:port，然后对此多组服务发送请求，etcd在其中充当了负载均衡的功能&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;h2 data-id=&quot;heading-15&quot;&gt;&lt;strong&gt;&lt;span&gt;3.4 分部署通知与协调&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.46546546546546547&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/sXiaukvjR0RBRULlsyDzyTrC3hz2YxtgKnibTibHnBicPianyhg0oEehAwQPcK91ciaSCQqcqImDesOYUvnU0YbAXsTw/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;2664&quot;/&gt;&lt;/figure&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;当etcd watch服务发现丢失，会通知服务检查&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;控制器向etcd发送启动服务，etcd通知服务进行相应操作&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;当服务完成work会讲状态更新至etcd，etcd对应会通知用户&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-id=&quot;heading-16&quot;&gt;&lt;strong&gt;&lt;span&gt;3.5 分布式锁&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5154777927321669&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/sXiaukvjR0RBRULlsyDzyTrC3hz2YxtgK63XrZKjOMCMBJthEcc2IctL0WhrIqkeHfMhfiacSic84Myia5SDj3IAgg/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;1486&quot;/&gt;&lt;figcaption/&gt;&lt;/figure&gt;&lt;section&gt;&lt;span&gt;当有多个竞争者node节点，etcd作为总控，在分布式集群中与一个节点成功分配lock&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;h2 data-id=&quot;heading-17&quot;&gt;&lt;strong&gt;&lt;span&gt;3.6 分布式队列&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4043419267299864&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/sXiaukvjR0RBRULlsyDzyTrC3hz2YxtgKfxJ7VO6EuRn6oxnpZ9Nsz1Lia3AH06e6zlHjbzfYmKjl8R1U0pn5RBQ/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;1474&quot;/&gt;&lt;figcaption/&gt;&lt;/figure&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;有对个node，etcd根据每个node来创建对应node的队列，根据不同的队列可以在etcd中找到对应的competitor&lt;/span&gt;&lt;/p&gt;&lt;h2 data-id=&quot;heading-18&quot;&gt;&lt;strong&gt;&lt;span&gt;3.7 集群与监控与Leader选举&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.37228260869565216&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/sXiaukvjR0RBRULlsyDzyTrC3hz2YxtgKO5pVNEdO4jvvlkibJQ6OVbgJsYkyKLibLrlrqweOIpz9fiaRoRjlTkRRg/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;1472&quot;/&gt;&lt;figcaption/&gt;&lt;/figure&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;etcd可以根据raft算法在多个node节点来选举出leader&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h1 data-id=&quot;heading-19&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/h1&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;1.2857142857142858&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YK9e7vHy9IQATwibKVicOpXZibX8VOvBrnF39NdpXQMwdpyIgN0ibicEwRdge0mXthxjHagHgwpWhrsibvMZFibaQC6vQ/640?wx_fmt=png&quot; data-w=&quot;14&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;四 安装部署&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;1.2857142857142858&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/orc2J6rib40bATuJM23UiaHQ0tsVpvjgyuhk7To5zFqb2fyL9pCr1U7hfeKJELCht0KxWnuias6TLibMdcRhM7QhyQ/640?wx_fmt=png&quot; data-w=&quot;14&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;h2 data-id=&quot;heading-20&quot;&gt;&lt;strong&gt;&lt;span&gt;4.1 单机部署&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;可以使用二进制或源码下载安装，但是危害需要自己写配置文件，如何要启动需要自己写服务启动文件，推荐使用yum安装方式&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;hostnamectl set-hostname etcd-1wget http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpmrpm -ivh epel-release-latest-7.noarch.rpm# yum 仓库中的etcd版本为3.3.11，如果需要最新版本的etcd可以进行二进制安装yum -y install etcd&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;systemctl enable etcd&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;code lang=&quot;arduino&quot;&gt;&lt;span/&gt;&lt;/code&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;可以查看yum安装的etcd的有效配置文件，根据自己的需求来修改数据存储目录，已经监听端口url/etcd的名称等&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;etcd 默认将数据存放到当前路径的 &lt;/span&gt;&lt;code&gt;&lt;span&gt;default.etcd/&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 目录下&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;在 &lt;/span&gt;&lt;code&gt;&lt;span&gt;http://localhost:2380&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 和集群中其他节点通信&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;在 &lt;/span&gt;&lt;code&gt;&lt;span&gt;http://localhost:2379&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 提供 HTTP API 服务，供客户端交互&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;该节点的名称默认为 &lt;/span&gt;&lt;code&gt;&lt;span&gt;default&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;election 为 1000ms，后面会说明这个配置的作用&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;snapshot count 为 10000，后面会说明这个配置的作用&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;集群和每个节点都会生成一个 uuid&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;启动的时候，会运行 raft，选举出 leader&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code lang=&quot;ini&quot;/&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;typescript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;[root@VM_0_8_centos tmp]# grep -Ev &quot;^#|^$&quot; /etc/etcd/etcd.confETCD_DATA_DIR=&quot;/var/lib/etcd/default.etcd&quot;ETCD_LISTEN_CLIENT_URLS=&quot;http://localhost:2379&quot;ETCD_NAME=&quot;default&quot;ETCD_ADVERTISE_CLIENT_URLS=&quot;http://localhost:2379&quot;[root@VM_0_8_centos tmp]# systemctl status etcd复制代码&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;strong&gt;&lt;span&gt;4.2 集群部署&lt;/span&gt;&lt;/strong&gt;&lt;/pre&gt;&lt;p&gt;集群部署最好部署奇数位，此能达到最好的集群容错&lt;/p&gt;&lt;h3 data-id=&quot;heading-22&quot;&gt;&lt;span&gt;&lt;strong&gt;4.2.1 主机信息&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3336065573770492&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/sXiaukvjR0RBRULlsyDzyTrC3hz2YxtgKMRS5ibHQCO2WibnOB6n0Tsht2v5NZNYlFOvibCF9QAccaPwSJ8DhluF3Q/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;2440&quot;/&gt;&lt;figcaption/&gt;&lt;/figure&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;主机名称&lt;/th&gt;&lt;th&gt;系统&lt;/th&gt;&lt;th&gt;IP地址&lt;/th&gt;&lt;th&gt;部署组件&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;etcd-0-8&lt;/td&gt;&lt;td&gt;CentOS 7.3&lt;/td&gt;&lt;td&gt;172.16.0.8&lt;/td&gt;&lt;td&gt;etcd&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;etcd-0-17&lt;/td&gt;&lt;td&gt;CentOS 7.3&lt;/td&gt;&lt;td&gt;172.16.0.17&lt;/td&gt;&lt;td&gt;etcd&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;etcd-0-14&lt;/td&gt;&lt;td&gt;CentOS 7.3&lt;/td&gt;&lt;td&gt;172.16.0.14&lt;/td&gt;&lt;td&gt;etcd&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h3 data-id=&quot;heading-23&quot;&gt;&lt;span&gt;&lt;strong&gt;4.2.2 host配置&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;在此示例用三个节点来部署etcd集群，各节点修改hosts&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;nginx&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;cat &amp;gt;&amp;gt; /etc/hosts &amp;lt;&amp;lt; EOF&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;172.16.0.8 etcd-0-8&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;172.16.0.14 etcd-0-14&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;172.16.0.17 etcd-0-17&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;EOF&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;code lang=&quot;bash&quot;/&gt;&lt;/pre&gt;&lt;h3 data-id=&quot;heading-24&quot;&gt;&lt;span&gt;&lt;strong&gt;4.2.3 etcd安装&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;三个节点均安装etcd&lt;/span&gt;&lt;/p&gt;&lt;pre/&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;wget http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;rpm -ivh epel-release-latest-7.noarch.rpm&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;yum -y install etcd&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;systemctl enable etcdmkdir -p /data/app/etcd/chown etcd:etcd /data/app/etcd/复制代码&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;span&gt;&lt;strong&gt;4.2.4 etcd配置&lt;/strong&gt;&lt;/span&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code lang=&quot;shell&quot;/&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;kotlin&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;[root@etcd-0-8 app]# cat /etc/etcd/etcd.conf#[Member]#ETCD_CORS=&quot;&quot;ETCD_DATA_DIR=&quot;/data/app/etcd/&quot;                                            # etcd数据存储目录，建议存储在数据盘#ETCD_WAL_DIR=&quot;&quot;ETCD_LISTEN_PEER_URLS=&quot;http://172.16.0.8:2380&quot;                            # 与同伴的通讯地址，和其他节点同伴的通讯地址  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;ETCD_LISTEN_CLIENT_URLS=&quot;http://127.0.0.1:2379,http://172.16.0.8:2379&quot;    # 对外提供服务的地址#ETCD_MAX_SNAPSHOTS=&quot;5&quot;                                                    # etcd最大快照保存数#ETCD_MAX_WALS=&quot;5&quot;                                                        # etcd 最大walsETCD_NAME=&quot;etcd-0-8&quot;                                                      # etcd节点名称，集群内需要唯一#ETCD_SNAPSHOT_COUNT=&quot;100000&quot;                                # 指定有多少事务（transaction）被提交时，触发截取快照保存到磁盘#ETCD_HEARTBEAT_INTERVAL=&quot;100&quot;                              # leader 多久发送一次心跳到 followers。默认值是 100ms#ETCD_ELECTION_TIMEOUT=&quot;1000&quot;                                # 重新投票的超时时间，如果 follow 在该时间间隔没有收到心跳包，会触发重新投票，默认为 1000 ms#ETCD_QUOTA_BACKEND_BYTES=&quot;0&quot;#ETCD_MAX_REQUEST_BYTES=&quot;1572864&quot;#ETCD_GRPC_KEEPALIVE_MIN_TIME=&quot;5s&quot;#ETCD_GRPC_KEEPALIVE_INTERVAL=&quot;2h0m0s&quot;#ETCD_GRPC_KEEPALIVE_TIMEOUT=&quot;20s&quot;##[Clustering]ETCD_INITIAL_ADVERTISE_PEER_URLS=&quot;http://172.16.0.8:2380&quot;                     # 该节点同伴监听地址，这个值会告诉集群中其他节点&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;ETCD_ADVERTISE_CLIENT_URLS=&quot;http://127.0.0.1:2379,http://172.16.0.8:2379&quot;    # 对外公告的该节点客户端监听地址，这个值会告诉集群中其他节点#ETCD_DISCOVERY=&quot;&quot;#ETCD_DISCOVERY_FALLBACK=&quot;proxy&quot;#ETCD_DISCOVERY_PROXY=&quot;&quot;#ETCD_DISCOVERY_SRV=&quot;&quot;ETCD_INITIAL_CLUSTER=&quot;etcd-0-8=http://172.16.0.8:2380,etcd-0-17=http://172.16.0.17:2380,etcd-0-14=http://172.16.0.14:2380&quot;                          # 集群中所有节点的信  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;ETCD_INITIAL_CLUSTER_TOKEN=&quot;etcd-token&quot;               # 创建集群的 token，这个值每个集群保持唯一。这样的话，如果你要重新创建集群，即使配置和之前一样，也会再次生成新的集群和节点 uuid；否则会导致多个集群之间的冲突，造成未知的错误&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;ETCD_INITIAL_CLUSTER_STATE=&quot;new&quot;#ETCD_STRICT_RECONFIG_CHECK=&quot;true&quot;                   # 新建集群的时候，这个值为 new；假如已经存在的集群，这个值为 existing#ETCD_ENABLE_V2=&quot;true&quot;##[Proxy]#ETCD_PROXY=&quot;off&quot;#ETCD_PROXY_FAILURE_WAIT=&quot;5000&quot;#ETCD_PROXY_REFRESH_INTERVAL=&quot;30000&quot;#ETCD_PROXY_DIAL_TIMEOUT=&quot;1000&quot;#ETCD_PROXY_WRITE_TIMEOUT=&quot;5000&quot;#ETCD_PROXY_READ_TIMEOUT=&quot;0&quot;##[Security]#ETCD_CERT_FILE=&quot;&quot;#ETCD_KEY_FILE=&quot;&quot;#ETCD_CLIENT_CERT_AUTH=&quot;false&quot;#ETCD_TRUSTED_CA_FILE=&quot;&quot;#ETCD_AUTO_TLS=&quot;false&quot;#ETCD_PEER_CERT_FILE=&quot;&quot;#ETCD_PEER_KEY_FILE=&quot;&quot;#ETCD_PEER_CLIENT_CERT_AUTH=&quot;false&quot;#ETCD_PEER_TRUSTED_CA_FILE=&quot;&quot;#ETCD_PEER_AUTO_TLS=&quot;false&quot;##[Logging]#ETCD_DEBUG=&quot;false&quot;#ETCD_LOG_PACKAGE_LEVELS=&quot;&quot;#ETCD_LOG_OUTPUT=&quot;default&quot;##[Unsafe]#ETCD_FORCE_NEW_CLUSTER=&quot;false&quot;##[Version]#ETCD_VERSION=&quot;false&quot;#ETCD_AUTO_COMPACTION_RETENTION=&quot;0&quot;##[Profiling]#ETCD_ENABLE_PPROF=&quot;false&quot;#ETCD_METRICS=&quot;basic&quot;##[Auth]#ETCD_AUTH_TOKEN=&quot;simple&quot;复制代码&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;etcd-0-8配置：&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;[root@etcd-server ~]# hostnamectl set-hostname etcd-0-8[root@etcd-0-8 ~]# egrep &quot;^#|^$&quot; /etc/etcd/etcd.conf -vETCD_DATA_DIR=&quot;/data/app/etcd/&quot;ETCD_LISTEN_PEER_URLS=&quot;http://172.16.0.8:2380&quot;ETCD_LISTEN_CLIENT_URLS=&quot;http://127.0.0.1:2379,http://172.16.0.8:2379&quot;ETCD_NAME=&quot;etcd-0-8&quot;ETCD_INITIAL_ADVERTISE_PEER_URLS=&quot;http://172.16.0.8:2380&quot;ETCD_ADVERTISE_CLIENT_URLS=&quot;http://127.0.0.1:2379,http://172.16.0.8:2379&quot;ETCD_INITIAL_CLUSTER=&quot;etcd-0-8=http://172.16.0.8:2380,etcd-0-17=http://172.16.0.17:2380,etcd-0-14=http://172.16.0.14:2380&quot;ETCD_INITIAL_CLUSTER_TOKEN=&quot;etcd-token&quot;ETCD_INITIAL_CLUSTER_STATE=&quot;new&quot;复制代码&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;etcd-0-14配置：&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;[root@etcd-server ~]# hostnamectl set-hostname etcd-0-14[root@etcd-server ~]# mkdir -p /data/app/etcd/[root@etcd-0.14 ~]# egrep &quot;^#|^$&quot; /etc/etcd/etcd.conf -vETCD_DATA_DIR=&quot;/data/app/etcd/&quot;ETCD_LISTEN_PEER_URLS=&quot;http://172.16.0.14:2380&quot;ETCD_LISTEN_CLIENT_URLS=&quot;http://127.0.0.1:2379,http://172.16.0.14:2379&quot;ETCD_NAME=&quot;etcd-0-14&quot;ETCD_INITIAL_ADVERTISE_PEER_URLS=&quot;http://172.16.0.14:2380&quot;ETCD_ADVERTISE_CLIENT_URLS=&quot;http://127.0.0.1:2379,http://172.16.0.14:2379&quot;ETCD_INITIAL_CLUSTER=&quot;etcd-0-8=http://172.16.0.8:2380,etcd-0-17=http://172.16.0.17:2380,etcd-0-14=http://172.16.0.14:2380&quot;ETCD_INITIAL_CLUSTER_TOKEN=&quot;etcd-token&quot;ETCD_INITIAL_CLUSTER_STATE=&quot;new&quot;复制代码&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;etcd-0-7配置:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;[root@etcd-server ~]# hostnamectl set-hostname etcd-0-17[root@etcd-server ~]# mkdir -p /data/app/etcd/[root@etcd-0-17 ~]# egrep &quot;^#|^$&quot; /etc/etcd/etcd.conf -vETCD_DATA_DIR=&quot;/data/app/etcd/&quot;ETCD_LISTEN_PEER_URLS=&quot;http://172.16.0.17:2380&quot;ETCD_LISTEN_CLIENT_URLS=&quot;http://127.0.0.1:2379,http://172.16.0.17:2379&quot;ETCD_NAME=&quot;etcd-0-17&quot;ETCD_INITIAL_ADVERTISE_PEER_URLS=&quot;http://172.16.0.17:2380&quot;ETCD_ADVERTISE_CLIENT_URLS=&quot;http://127.0.0.1:2379,http://172.16.0.17:2379&quot;ETCD_INITIAL_CLUSTER=&quot;etcd-0-8=http://172.16.0.8:2380,etcd-0-17=http://172.16.0.17:2380,etcd-0-14=http://172.16.0.14:2380&quot;ETCD_INITIAL_CLUSTER_TOKEN=&quot;etcd-token&quot;ETCD_INITIAL_CLUSTER_STATE=&quot;new&quot;复制代码&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre/&gt;&lt;pre&gt;&lt;code lang=&quot;sql&quot;/&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;nginx&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;systemctl start etcd&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;span&gt;&lt;strong&gt;4.2.5 查看集群状态&lt;/strong&gt;&lt;/span&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code lang=&quot;less&quot;/&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;typescript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;[root@etcd-0-8 default.etcd]# systemctl status etcd● etcd.service - Etcd Server&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   Loaded: loaded (/usr/lib/systemd/system/etcd.service; enabled; vendor preset: disabled)   Active: active (running) since 二 2019-12-03 15:55:28 CST; 8s ago&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; Main PID: 24510 (etcd)   CGroup: /system.slice/etcd.service&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;           └─24510 /usr/bin/etcd --name=etcd-0-8 --data-dir=/data/app/etcd/ --listen-client-urls=http://172.16.0.8:237912月 03 15:55:28 etcd-0-8 etcd[24510]: set the initial cluster version to 3.012月 03 15:55:28 etcd-0-8 etcd[24510]: enabled capabilities for version 3.012月 03 15:55:30 etcd-0-8 etcd[24510]: peer 56e0b6dad4c53d42 became active12月 03 15:55:30 etcd-0-8 etcd[24510]: established a TCP streaming connection with peer 56e0b6dad4c53d42 (stream Message reader)12月 03 15:55:30 etcd-0-8 etcd[24510]: established a TCP streaming connection with peer 56e0b6dad4c53d42 (stream Message writer)12月 03 15:55:30 etcd-0-8 etcd[24510]: established a TCP streaming connection with peer 56e0b6dad4c53d42 (stream MsgApp v2 reader)12月 03 15:55:30 etcd-0-8 etcd[24510]: established a TCP streaming connection with peer 56e0b6dad4c53d42 (stream MsgApp v2 writer)12月 03 15:55:32 etcd-0-8 etcd[24510]: updating the cluster version from 3.0 to 3.312月 03 15:55:32 etcd-0-8 etcd[24510]: updated the cluster version from 3.0 to 3.312月 03 15:55:32 etcd-0-8 etcd[24510]: enabled capabilities for version 3.3复制代码&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre/&gt;&lt;pre&gt;&lt;code lang=&quot;ruby&quot;/&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;ruby&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;[root@etcd-0-8 default.etcd]# netstat -lntup |grep etcdtcp        0      0 172.16.0.8:2379         0.0.0.0:*               LISTEN      25167/etcd&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;tcp        0      0 127.0.0.1:2379          0.0.0.0:*               LISTEN      25167/etcd&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;tcp        0      0 172.16.0.8:2380         0.0.0.0:*               LISTEN      25167/etcd复制代码&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre/&gt;&lt;pre&gt;&lt;code lang=&quot;csharp&quot;/&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cpp&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;[root@etcd-0-8 default.etcd]# etcdctl member list2d2e457c6a1a76cb: name=etcd-0-8 peerURLs=http://172.16.0.8:2380 clientURLs=http://127.0.0.1:2379,http://172.16.0.8:2379 isLeader=false56e0b6dad4c53d42: name=etcd-0-14 peerURLs=http://172.16.0.14:2380 clientURLs=http://127.0.0.1:2379,http://172.16.0.14:2379 isLeader=trued2d2e9fc758e6790: name=etcd-0-17 peerURLs=http://172.16.0.17:2380 clientURLs=http://127.0.0.1:2379,http://172.16.0.17:2379 isLeader=false[root@etcd-0-8 ~]# etcdctl cluster-healthmember 2d2e457c6a1a76cb is healthy: got healthy result from http://127.0.0.1:2379member 56e0b6dad4c53d42 is healthy: got healthy result from http://127.0.0.1:2379member d2d2e9fc758e6790 is healthy: got healthy result from http://127.0.0.1:2379cluster is healthy复制代码&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/pre&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;1.2857142857142858&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YK9e7vHy9IQATwibKVicOpXZibX8VOvBrnF39NdpXQMwdpyIgN0ibicEwRdge0mXthxjHagHgwpWhrsibvMZFibaQC6vQ/640?wx_fmt=png&quot; data-w=&quot;14&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;五 简单使用&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;1.2857142857142858&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/orc2J6rib40bATuJM23UiaHQ0tsVpvjgyuhk7To5zFqb2fyL9pCr1U7hfeKJELCht0KxWnuias6TLibMdcRhM7QhyQ/640?wx_fmt=png&quot; data-w=&quot;14&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;h2 data-id=&quot;heading-28&quot;&gt;&lt;span&gt;&lt;strong&gt;5.1 增加&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;section&gt;&lt;span&gt;指定某个键的值。例如:&lt;/span&gt;&lt;/section&gt;&lt;pre&gt;&lt;section&gt;&lt;code lang=&quot;shell&quot;/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;shell&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;$ etcdctl set /testdir/testkey &quot;Hello world&quot;Hello world&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;span&gt;支持的选项包括：&lt;/span&gt;&lt;/pre&gt;&lt;pre&gt;&lt;section&gt;&lt;code lang=&quot;scss&quot;&gt;&lt;span&gt;--ttl &#x27;0&#x27; 该键值的超时时间(单位为秒)，不配置(默认为0)则永不超时--swap-with-value value 若该键现在的值是value，则进行设置操作--swap-with-index &#x27;0&#x27;   若该键现在的索引值是指定索引，则进行设置操作复制代码&lt;/span&gt;&lt;/code&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section&gt;&lt;span&gt;如果给定的键不存在，则创建一个新的键值。例如:&lt;/span&gt;&lt;/section&gt;&lt;pre&gt;&lt;section&gt;&lt;code lang=&quot;shell&quot;/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;shell&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;$ etcdctl mk /testdir/testkey &quot;Hello world&quot;Hello world&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;span&gt;当键存在的时候，执行该命令会报错，例如:&lt;/span&gt;&lt;/pre&gt;&lt;pre&gt;&lt;section&gt;&lt;code lang=&quot;javascript&quot;/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;$ etcdctl mk /testdir/testkey &quot;Hello world&quot;Error:  105: Key already exists (/testdir/testkey) [8]复制代码&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;span&gt;支持的选项为:&lt;/span&gt;&lt;/pre&gt;&lt;pre&gt;&lt;section&gt;&lt;code lang=&quot;scss&quot;&gt;&lt;span&gt;--ttl &#x27;0&#x27;  超时时间(单位为秒），不配置(默认为 0)。则永不超时复制代码&lt;/span&gt;&lt;/code&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section&gt;&lt;span&gt;如果给定的键目录不存在，则创建一个新的键目录。例如：&lt;/span&gt;&lt;/section&gt;&lt;pre&gt;&lt;section&gt;&lt;code lang=&quot;shell&quot;/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;shell&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;$ etcdctl mkdir testdir2&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;span&gt;当键目录存在的时候，执行该命令会报错，例如：&lt;/span&gt;&lt;/pre&gt;&lt;pre&gt;&lt;section&gt;&lt;code lang=&quot;bash&quot;/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;perl&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;$ etcdctl mkdir testdir2&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;Error:  105: Key already exists (/testdir2) [9]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;span&gt;支持的选项为：&lt;/span&gt;&lt;/pre&gt;&lt;pre&gt;&lt;section&gt;&lt;code lang=&quot;scss&quot;&gt;&lt;span&gt;--ttl &#x27;0&#x27; 超时时间(单位为秒)，不配置(默认为0)则永不超时。复制代码&lt;/span&gt;&lt;/code&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section&gt;&lt;span&gt;创建一个键目录。如果目录不存在就创建，如果目录存在更新目录TTL。&lt;/span&gt;&lt;/section&gt;&lt;pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;shell&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;$ etcdctl setdir testdir3&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;code lang=&quot;ruby&quot;&gt;&lt;span/&gt;&lt;/code&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section&gt;&lt;span&gt;支持的选项为:&lt;/span&gt;&lt;/section&gt;&lt;pre&gt;&lt;section&gt;&lt;code lang=&quot;scss&quot;/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;--ttl &#x27;0&#x27; 超时时间(单位为秒)，不配置(默认为0)则永不超时。&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;span&gt;&lt;strong&gt;5.2 删除&lt;/strong&gt;&lt;/span&gt;&lt;/pre&gt;&lt;section&gt;&lt;span&gt;删除某个键值。例如:&lt;/span&gt;&lt;/section&gt;&lt;pre&gt;&lt;section&gt;&lt;code lang=&quot;shell&quot;/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;shell&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;$ etcdctl rm /testdir/testkeyPrevNode.Value: Hello&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;span&gt;当键不存在时，则会报错。例如:&lt;/span&gt;&lt;/pre&gt;&lt;pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;ruby&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;$ etcdctl rm /testdir/testkey&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;Error:  100: Key not found (/testdir/testkey) [7]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;code lang=&quot;bash&quot;&gt;&lt;span/&gt;&lt;/code&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section&gt;&lt;span&gt;支持的选项为：&lt;/span&gt;&lt;/section&gt;&lt;pre&gt;&lt;section&gt;&lt;code lang=&quot;css&quot;/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;--dir 如果键是个空目录或者键值对则删除--recursive 删除目录和所有子键--with-value  检查现有的值是否匹配--with-index &#x27;0&#x27;检查现有的index是否匹配&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre/&gt;&lt;section&gt;&lt;span&gt;删除一个空目录，或者键值对。&lt;/span&gt;&lt;/section&gt;&lt;pre&gt;&lt;section&gt;&lt;code lang=&quot;shell&quot;/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;ruby&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;$ etcdctl setdir dir1$ etcdctl rmdir dir1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;span&gt;若目录不空，会报错:&lt;/span&gt;&lt;/pre&gt;&lt;pre&gt;&lt;section&gt;&lt;code lang=&quot;shell&quot;/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;$ etcdctl set /dir/testkey hihi$ etcdctl rmdir /dirError:  108: Directory not empty (/dir) [17]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;span&gt;&lt;strong&gt;5.3 更新&lt;/strong&gt;&lt;/span&gt;&lt;/pre&gt;&lt;section&gt;&lt;span&gt;当键存在时，更新值内容。例如：&lt;/span&gt;&lt;/section&gt;&lt;pre&gt;&lt;section&gt;&lt;code lang=&quot;shell&quot;/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;shell&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;$ etcdctl update /testdir/testkey &quot;Hello&quot;Hello&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;span&gt;当键不存在时，则会报错。例如:&lt;/span&gt;&lt;/pre&gt;&lt;pre&gt;&lt;section&gt;&lt;code lang=&quot;javascript&quot;/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;$ etcdctl update /testdir/testkey2 &quot;Hello&quot;Error:  100: Key not found (/testdir/testkey2) [6]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;span&gt;支持的选项为:&lt;/span&gt;&lt;/pre&gt;&lt;pre&gt;&lt;section&gt;&lt;code lang=&quot;scss&quot;/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;--ttl &#x27;0&#x27; 超时时间(单位为秒)，不配置(默认为 0)则永不超时。&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre/&gt;&lt;section&gt;&lt;span&gt;更新一个已经存在的目录。&lt;/span&gt;&lt;/section&gt;&lt;pre&gt;&lt;section&gt;&lt;code lang=&quot;ruby&quot;/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;shell&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;$ etcdctl updatedir testdir2&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;span&gt;支持的选项为:&lt;/span&gt;&lt;/pre&gt;&lt;pre&gt;&lt;section&gt;&lt;code lang=&quot;scss&quot;/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;--ttl &#x27;0&#x27; 超时时间(单位为秒)，不配置(默认为0)则永不超时。&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;span&gt;&lt;strong&gt;5.4 查询&lt;/strong&gt;&lt;/span&gt;&lt;/pre&gt;&lt;section&gt;&lt;span&gt;获取指定键的值。例如：&lt;/span&gt;&lt;/section&gt;&lt;pre&gt;&lt;section&gt;&lt;code lang=&quot;shell&quot;/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;shell&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;$ etcdctl get /testdir/testkeyHello world&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;span&gt;当键不存在时，则会报错。例如：&lt;/span&gt;&lt;/pre&gt;&lt;pre&gt;&lt;section&gt;&lt;code lang=&quot;javascript&quot;/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;ruby&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;$ etcdctl get /testdir/testkey2Error:  100: Key not found (/testdir/testkey2) [5]复制代码&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;span&gt;支持的选项为:&lt;/span&gt;&lt;/pre&gt;&lt;pre&gt;&lt;section&gt;&lt;code lang=&quot;css&quot;/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;diff&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;--sort 对结果进行排序--consistent 将请求发给主节点，保证获取内容的一致性。复制代码&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre/&gt;&lt;section&gt;&lt;span&gt;列出目录(默认为根目录)下的键或者子目录，默认不显示子目录中内容。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;例如：&lt;/span&gt;&lt;/section&gt;&lt;pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;shell&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;$ etcdctl ls/testdir&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;/testdir2&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;/dir&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;$ etcdctl ls dir/dir/testkey&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;code lang=&quot;bash&quot;&gt;&lt;span/&gt;&lt;/code&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section&gt;&lt;span&gt;支持的选项包括:&lt;/span&gt;&lt;/section&gt;&lt;pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;diff&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;--sort 将输出结果排序--recursive 如果目录下有子目录，则递归输出其中的内容&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;-p 对于输出为目录，在最后添加/进行区分&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/pre&gt;&lt;h2 data-id=&quot;heading-32&quot;&gt;&lt;span&gt;&lt;strong&gt;5.5 watch&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;section&gt;&lt;span&gt;监测一个键值的变化，一旦键值发生更新，就会输出最新的值并退出。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;例如:用户更新testkey键值为Hello watch。&lt;/span&gt;&lt;/section&gt;&lt;pre&gt;&lt;section&gt;&lt;code lang=&quot;shell&quot;/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;ruby&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;$ etcdctl get /testdir/testkeyHello world$ etcdctl set /testdir/testkey &quot;Hello watch&quot;Hello watch$ etcdctl watch testdir/testkeyHello watch&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;span&gt;支持的选项包括:&lt;/span&gt;&lt;/pre&gt;&lt;pre&gt;&lt;section&gt;&lt;code lang=&quot;css&quot;/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;perl&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;--forever  一直监测直到用户按CTRL+C退出--after-index &#x27;0&#x27; 在指定index之前一直监测--recursive 返回所有的键值和子键值&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre/&gt;&lt;section&gt;&lt;span&gt;监测一个键值的变化，一旦键值发生更新，就执行给定命令。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;例如：用户更新testkey键值。&lt;/span&gt;&lt;/section&gt;&lt;pre&gt;&lt;section&gt;&lt;code lang=&quot;shell&quot;/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;shell&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;$ etcdctl exec-watch testdir/testkey -- sh -c &#x27;ls&#x27;config  Documentation  etcd  etcdctl  README-etcdctl.md  README.md  READMEv2-etcdctl.md复制代码&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;span&gt;支持的选项包括:&lt;/span&gt;&lt;/pre&gt;&lt;pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;perl&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;--after-index &#x27;0&#x27; 在指定 index 之前一直监测&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;--recursive 返回所有的键值和子键值&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/pre&gt;&lt;h2 data-id=&quot;heading-33&quot;&gt;&lt;span&gt;&lt;strong&gt;5.6 备份&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;section&gt;&lt;span&gt;备份etcd的数据。&lt;/span&gt;&lt;/section&gt;&lt;pre&gt;&lt;section&gt;&lt;code lang=&quot;css&quot;&gt;&lt;span/&gt;&lt;/code&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;$ etcdctl &lt;span class=&quot;code-snippet__keyword&quot;&gt;backup&lt;/span&gt; &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;span&gt;支持的选项包括:&lt;/span&gt;&lt;/pre&gt;&lt;pre&gt;&lt;section&gt;&lt;code lang=&quot;css&quot;&gt;&lt;span/&gt;&lt;/code&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;diff&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__deletion&quot;&gt;--data-dir  etcd的数据目录&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__deletion&quot;&gt;--backup-dir 备份到指定路径复制代码&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;span&gt;5.7 member&lt;/span&gt;&lt;/pre&gt;&lt;section&gt;&lt;span&gt;通过&lt;/span&gt;&lt;code&gt;&lt;span&gt;list&lt;/span&gt;&lt;/code&gt;&lt;span&gt;、&lt;/span&gt;&lt;code&gt;&lt;span&gt;add&lt;/span&gt;&lt;/code&gt;&lt;span&gt;、&lt;/span&gt;&lt;code&gt;&lt;span&gt;remove&lt;/span&gt;&lt;/code&gt;&lt;span&gt;命令列出、添加、删除etcd实例到etcd集群中。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;查看集群中存在的节点&lt;/span&gt;&lt;/section&gt;&lt;pre&gt;&lt;section&gt;&lt;code lang=&quot;bash&quot;&gt;&lt;span/&gt;&lt;/code&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cpp&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;$ etcdctl member &lt;span class=&quot;code-snippet__built_in&quot;&gt;list&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;8e9&lt;/span&gt;e05c52164694d: name=dev-master&lt;span class=&quot;code-snippet__number&quot;&gt;-01&lt;/span&gt; peerURLs=http:&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;span&gt;删除集群中存在的节点&lt;/span&gt;&lt;/pre&gt;&lt;pre&gt;&lt;section&gt;&lt;code lang=&quot;sql&quot;&gt;&lt;span/&gt;&lt;/code&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cs&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;$ etcdctl member &lt;span class=&quot;code-snippet__keyword&quot;&gt;remove&lt;/span&gt; &lt;span class=&quot;code-snippet__number&quot;&gt;8e9&lt;/span&gt;e05c52164694d&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;Removed member &lt;span class=&quot;code-snippet__number&quot;&gt;8e9&lt;/span&gt;e05c52164694d &lt;span class=&quot;code-snippet__keyword&quot;&gt;from&lt;/span&gt; cluste&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;span&gt;向集群中新加节点&lt;/span&gt;&lt;/pre&gt;&lt;pre&gt;&lt;section&gt;&lt;code lang=&quot;sql&quot;&gt;&lt;span/&gt;&lt;/code&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;$ etcdctl member add etcd3 http://192.168.1.100:2380Added member named etcd3 &lt;span class=&quot;code-snippet__keyword&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;ID&lt;/span&gt; &lt;span class=&quot;code-snippet__number&quot;&gt;8e9&lt;/span&gt;e05c52164694d &lt;span class=&quot;code-snippet__keyword&quot;&gt;to&lt;/span&gt; cluster&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;span&gt;示例&lt;/span&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;markdown&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;# 设置一个key值[root@etcd-0-8 ~]# etcdctl set /msg &quot;hello k8s&quot;hello k8s# 获取key的值[root@etcd-0-8 ~]# etcdctl get /msghello k8s# 获取key值的详细信息[root@etcd-0-8 ~]# etcdctl -o extended get /msgKey: /msg&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;Created-Index: 12&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;Modified-Index: 12&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;TTL: 0&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;Index: 12&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;hello k8s# 获取不存在的key回报错[&lt;span class=&quot;code-snippet__string&quot;&gt;root@etcd-0-8 ~&lt;/span&gt;]# etcdctl get /xxzxError:  100: Key not found (/xxzx) [&lt;span class=&quot;code-snippet__string&quot;&gt;12&lt;/span&gt;]# 设置key的ttl，过期后会被自动删除[&lt;span class=&quot;code-snippet__string&quot;&gt;root@etcd-0-8 ~&lt;/span&gt;]# etcdctl set /testkey &quot;tmp key test&quot; --ttl 5tmp key test[&lt;span class=&quot;code-snippet__string&quot;&gt;root@etcd-0-8 ~&lt;/span&gt;]# etcdctl get /testkeyError:  100: Key not found (/testkey) [&lt;span class=&quot;code-snippet__string&quot;&gt;14&lt;/span&gt;]# key 替换操作[&lt;span class=&quot;code-snippet__string&quot;&gt;root@etcd-0-8 ~&lt;/span&gt;]# etcdctl get /msghello k8s[&lt;span class=&quot;code-snippet__string&quot;&gt;root@etcd-0-8 ~&lt;/span&gt;]# etcdctl set --swap-with-value &quot;hello k8s&quot; /msg &quot;goodbye&quot;goodbye[&lt;span class=&quot;code-snippet__string&quot;&gt;root@etcd-0-8 ~&lt;/span&gt;]# etcdctl get /msggoodbye# mk 仅当key不存在时创建(set对同一个key会覆盖)[&lt;span class=&quot;code-snippet__string&quot;&gt;root@etcd-0-8 ~&lt;/span&gt;]# etcdctl get /msggoodbye[&lt;span class=&quot;code-snippet__string&quot;&gt;root@etcd-0-8 ~&lt;/span&gt;]# etcdctl mk /msg &quot;mktest&quot;Error:  105: Key already exists (/msg) [&lt;span class=&quot;code-snippet__string&quot;&gt;18&lt;/span&gt;][&lt;span class=&quot;code-snippet__symbol&quot;&gt;root@etcd-0-8 ~&lt;/span&gt;]# etcdctl mk /msg1 &quot;mktest&quot;mktest# 创建自排序的key[root@etcd-0-8 ~]# etcdctl mk --in-order /queue s1s1[root@etcd-0-8 ~]# etcdctl mk --in-order /queue s2s2[root@etcd-0-8 ~]# etcdctl ls --sort /queue/queue/00000000000000000021&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;/queue/00000000000000000022[root@etcd-0-8 ~]# etcdctl get /queue/00000000000000000021s1# 更新key值[root@etcd-0-8 ~]# etcdctl update /msg1 &quot;update test&quot;update test[root@etcd-0-8 ~]# etcdctl get /msg1update test# 更新key的ttl及值[root@etcd-0-8 ~]# etcdctl update --ttl 5 /msg &quot;aaa&quot;aaa# 创建目录[root@etcd-0-8 ~]# etcdctl mkdir /testdir# 删除空目录[root@etcd-0-8 ~]# etcdctl mkdir /test1[root@etcd-0-8 ~]# etcdctl rmdir /test1# 删除非空目录[root@etcd-0-8 ~]# etcdctl get /testdir/testdir: is a directory[root@etcd-0-8 ~]#[root@etcd-0-8 ~]# etcdctl rm --recursive /testdir# 列出目录内容[root@etcd-0-8 ~]# etcdctl ls //tmp&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;/msg1&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;/queue[root@etcd-0-8 ~]# etcdctl ls /tmp/tmp/a&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;/tmp/b# 递归列出目录的内容[root@etcd-0-8 ~]# etcdctl ls --recursive //msg1&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;/queue&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;/queue/00000000000000000021&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;/queue/00000000000000000022&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;/tmp&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;/tmp/b&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;/tmp/a# 监听key，当key发生改变的时候打印出变化[root@etcd-0-8 ~]# etcdctl watch /msg1xxx[root@VM&lt;span class=&quot;code-snippet__emphasis&quot;&gt;_0_&lt;/span&gt;17_centos ~]# etcdctl update /msg1 &quot;xxx&quot;xxx# 监听某个目录，当目录中任何 node 改变的时候，都会打印出来[root@etcd-0-8 ~]# etcdctl watch --recursive /[update] /msg1&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;xxx[root@VM&lt;span class=&quot;code-snippet__emphasis&quot;&gt;_0_&lt;/span&gt;17&lt;span class=&quot;code-snippet__emphasis&quot;&gt;_centos ~]# etcdctl update /msg1 &quot;xxx&quot;xxx# 一直监听，除非 `CTL + C` 导致退出监听[root@etcd-0-8 ~]# etcdctl watch --forever /# 监听目录，当发生变化时执行一条命令[root@etcd-0-8 ~]# etcdctl exec-watch --recursive / -- sh -c &quot;echo change&quot;change# backup[root@etcd-0-14 ~]# etcdctl backup --data-dir /data/app/etcd --backup-dir /root/etcd_&lt;/span&gt;backup2019-12-04 10:25:16.113237 I | ignoring EntryConfChange raft entry&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;2019-12-04 10:25:16.113268 I | ignoring EntryConfChange raft entry&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;2019-12-04 10:25:16.113272 I | ignoring EntryConfChange raft entry&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;2019-12-04 10:25:16.113293 I | ignoring member attribute update on /0/members/2d2e457c6a1a76cb/attributes&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;2019-12-04 10:25:16.113299 I | ignoring member attribute update on /0/members/d2d2e9fc758e6790/attributes&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;2019-12-04 10:25:16.113305 I | ignoring member attribute update on /0/members/56e0b6dad4c53d42/attributes&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;2019-12-04 10:25:16.113310 I | ignoring member attribute update on /0/members/56e0b6dad4c53d42/attributes&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;2019-12-04 10:25:16.113314 I | ignoring member attribute update on /0/members/2d2e457c6a1a76cb/attributes&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;2019-12-04 10:25:16.113319 I | ignoring member attribute update on /0/members/d2d2e9fc758e6790/attributes&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;2019-12-04 10:25:16.113384 I | ignoring member attribute update on /0/members/56e0b6dad4c53d42/attributes# 使用v3版本&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;# 使用v3版本&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;[root@etcd-0-14 ~]# export ETCDCTL_API=3&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;[root@etcd-0-14 ~]# etcdctl --endpoints=&quot;http://172.16.0.8:2379,http://172.16.0.14:2379,http://172.16.0.17:2379&quot; snapshot save mysnapshot.db&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;Snapshot saved at mysnapshot.db&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;[root@etcd-0-14 ~]# etcdctl snapshot status mysnapshot.db -w json&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&quot;hash&quot;:928285884,&quot;revision&quot;:0,&quot;totalKey&quot;:5,&quot;totalSize&quot;:20480}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;span&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/span&gt;&lt;/pre&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;1.2857142857142858&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YK9e7vHy9IQATwibKVicOpXZibX8VOvBrnF39NdpXQMwdpyIgN0ibicEwRdge0mXthxjHagHgwpWhrsibvMZFibaQC6vQ/640?wx_fmt=png&quot; data-w=&quot;14&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;六 总结&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;1.2857142857142858&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/orc2J6rib40bATuJM23UiaHQ0tsVpvjgyuhk7To5zFqb2fyL9pCr1U7hfeKJELCht0KxWnuias6TLibMdcRhM7QhyQ/640?wx_fmt=png&quot; data-w=&quot;14&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;h1 data-id=&quot;heading-36&quot;&gt;&lt;span/&gt;&lt;/h1&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;etcd 默认只保存 1000 个历史事件，所以不适合有大量更新操作的场景，这样会导致数据的丢失。etcd 典型的应用场景是配置管理和服务发现，这些场景都是读多写少的。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;相比于 zookeeper，etcd 使用起来要简单很多。不过要实现真正的服务发现功能，etcd 还需要和其他工具（比如 registrator、confd 等）一起使用来实现服务的自动注册和更新。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;目前 etcd 还没有图形化的工具。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h1 data-id=&quot;heading-37&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/h1&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;1.2857142857142858&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YK9e7vHy9IQATwibKVicOpXZibX8VOvBrnF39NdpXQMwdpyIgN0ibicEwRdge0mXthxjHagHgwpWhrsibvMZFibaQC6vQ/640?wx_fmt=png&quot; data-w=&quot;14&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;参考链接&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.2857142857142858&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/orc2J6rib40bATuJM23UiaHQ0tsVpvjgyuhk7To5zFqb2fyL9pCr1U7hfeKJELCht0KxWnuias6TLibMdcRhM7QhyQ/640?wx_fmt=png&quot; data-w=&quot;14&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p data-v-c728d904=&quot;&quot;&gt;&lt;span&gt;https://github.com/etcd-io/etcd&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p data-v-c728d904=&quot;&quot;&gt;&lt;span&gt;https://www.hi-linux.com/posts/40915.html&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;www.hi-linux.com/posts/40915…&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p data-v-c728d904=&quot;&quot;&gt;&lt;span&gt;https://cizixs.com/2016/08/02/intro-to-etcd/&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Etcd Raft使用入门及原理解析&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;https://juejin.cn/post/6844903970461351944&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p data-v-c728d904=&quot;&quot;&gt;&lt;span&gt;https://www.infoq.cn/article/coreos-analyse-etcd/&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p data-v-c728d904=&quot;&quot;&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;如喜欢本文，请点击右上角，把文章分享到朋友圈&lt;/span&gt;&lt;br/&gt;&lt;span&gt;如有想了解学习的技术点，请留言给若飞安排分享&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;因公众号更改推送规则，请点“在看”并加“星标”&lt;span&gt;第一时间获取精彩技术分享&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;·END·&lt;/strong&gt;&lt;/p&gt;&lt;pre&gt;&lt;p&gt;&lt;strong&gt;相关阅读：&lt;/strong&gt;&lt;/p&gt;&lt;/pre&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-tools-id=&quot;23409&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span&gt;作者：kaliarch&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;来源：juejin.cn/post/6844904031186321416&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;版权申明：内容来源网络，仅供分享学习，版权归原创者所有。除非无法确认，我们都会标明作者及出处，如有侵权烦请告知，我们会立即删除并表示歉意。谢谢!&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;article ng-controller=&quot;EntryCtrl&quot; ui-lightbox=&quot;&quot;&gt;&lt;section ng-bind-html=&quot;postContentTrustedHtml&quot;&gt;&lt;section data-id=&quot;702&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;&lt;strong data-brushtype=&quot;text&quot;&gt;架构师&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;&lt;p&gt;&lt;span&gt;我们都是架构师！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img border=&quot;0&quot; class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/sXiaukvjR0RB58TtkIHwhn4lpsqLnZgian9d5tr1BibP7XpibGTFFib1nq9YuYq209XZUEfCOqMzepDOBbN9KD9wMSg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;640&quot; data-width=&quot;200px&quot; height=&quot;&quot; opacity=&quot;&quot; title=&quot;&quot; vspace=&quot;0&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;strong&gt;关注&lt;/strong&gt;架构师(JiaGouX)，添加“星标”&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;获取每天技术干货，一起成为牛逼架构师&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;技术群请&lt;/strong&gt;&lt;strong&gt;加若飞：&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;1321113940 &lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;进架构师群&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;投稿、合作、版权等邮箱：&lt;strong&gt;&lt;span&gt;admin@137x.com&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/article&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;
          &lt;/div&gt;

          

          



           
                                
                    
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>fd6f1304e6e6f7edf570a5d8e6233ba1</guid>
<title>一次 MySQL 误操作导致的事故，「高可用」都顶不住了！</title>
<link>https://toutiao.io/k/9whfs9c</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;&lt;span&gt;事故现场&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;环境：测试环境&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;时间：上午10:30&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;反馈人员：测试群，炸锅了，研发同事初步排查后，发现可能是数据库问题。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;然后就开始找原因吧。因为这套集群环境是我部署的，所以我来排查的话轻车熟路。&lt;/span&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/h2&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;系统部署图&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;先说下系统的部署图，方便大家理解。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;两个数据库部署在 node55 和 node56 节点上，它们互为主从关系，所以叫做双主。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.29970674486803517&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/SfAHMuUxqJ3ItMia7ViaOthrVUcg0h0sNFGByKgdN8egLd22Yc1lasaFjpj9iaePlU6Hn5dzN7nxSkbXKtkBxWxTA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1705&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;还有两个 Keepalived 部署在 node55 和 node56 上面，分别监控 MySQL 容器的状态。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5388739946380697&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/SfAHMuUxqJ3ItMia7ViaOthrVUcg0h0sNFBHUBy4qiaWnMxZSnOKZu7AH4Q3YDKicQPBCaFI24PprDzupLIvMfGqKA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1492&quot;/&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;报错原因和解决方案&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我第一个想法就是，不是有 Keepalived 来保证高可用么？即使 MySQL 挂了，也可以通过 Keepalived 来自动重启才对。即使一台重启不起来，还有另外一台可以用的吧？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;那就到服务器上看下 MySQL 容器的状态吧。到 MySQL 的两台服务器上，先看下 MySQL 容器的状态，docker ps  命令，发现两台 MySQL 容器都不在列表中，这代表容器没正常运行。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.08527131782945736&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/SfAHMuUxqJ3ItMia7ViaOthrVUcg0h0sNFtJoFHv04srtIiaYRt5OBTmJQjCv2fNmj3RBoibviaCqIKQviapBaBwKrDQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;387&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这不可能。我可是安装了 Keepalived 高可用组件的，难道 Keepalived 也挂了？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;赶紧检查一波 Keepalived，发现两台 Keepalived 是正常运行的。通过执行命令查看：systemctl status keepalived。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4024896265560166&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/SfAHMuUxqJ3ItMia7ViaOthrVUcg0h0sNF6KLPrvmB8baH6Uhj4aLj5LeXmt3UfH0KYWNwsWOOUmS6DS3IGTHB3w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;964&quot;/&gt;&lt;/figure&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;纳尼？Keepalived 也是正常的。Keepalived 每隔几秒会重启 MySQL，可能我在那一小段空闲时间没看到 MySQL 容器启动？换个命令执行下，docker ps -a，列出所有容器的状态。可以看到 MySQL 启动后又退出了，说明 MySQL 确实是在重启。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.31911532385466035&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/SfAHMuUxqJ3ItMia7ViaOthrVUcg0h0sNFvdQxNzHMM96Uicr0Z609ZFn3n7LJE1vtSfjsjNpf55sPWSdwtaKsibcA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;633&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;那说明 Keepalived 虽然重启了 MySQL 容器，但是 MySQL 自身有问题，那 Keepalived 的高可用也没办法了。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;那怎么整？只能看下 MySQL 报什么错了。执行查看容器日志的命令。docker logs &amp;lt;容器 id&amp;gt;。找到最近发生的日志：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.16630669546436286&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/SfAHMuUxqJ3ItMia7ViaOthrVUcg0h0sNFoYwVgDCKU9qE2EpibmEPtgnVU6wtficUrEia0NU9mtxc3lj4nMhW8xEvg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;926&quot;/&gt;&lt;/figure&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;提示 mysql-bin.index 文件不存在，这个文件是配置在主从同步那里的，在 my.cnf 配置里面。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4950711938663746&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/SfAHMuUxqJ3ItMia7ViaOthrVUcg0h0sNFyck8U2fwiabUo3v8JL8DInzyKd4LCVVkg0lqmhgz9T9zypfGFEUR4wg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;913&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;这个配置好后，然后执行主从同步的时候，就会在 var/lib/mysql/log 目录下生成多个 mysql-bin.xxx 的文件。还有一个 mysql-bin.index 索引文件，它会标记现在 binlog 日志文件记录到哪里了。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.48132780082987553&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/SfAHMuUxqJ3ItMia7ViaOthrVUcg0h0sNFSwSFWsgxwibI7Atnpiaj3JqTfp3Z5ich4GAUt94ibP6F3FDcfy3067BUJw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;241&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;mysql-bin.index 文件里面的内容如下：&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;/&lt;span class=&quot;code-snippet__keyword&quot;&gt;var&lt;/span&gt;/lib/mysql/log/mysql-bin&lt;span class=&quot;code-snippet__number&quot;&gt;.000001&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;这个 mysql-bin.000001 文件还是带序号的，这里还有坑，后面我再说。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;报错信息是提示缺少 mysql-bin.index，那我们就去检查下呗，确实没有啊！先不管&lt;/span&gt;&lt;span&gt;这个文件怎么消失的吧，赶紧把这个 log 文件夹先创建出来，然后 mysql 会自动给我们生成这个文件的。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;解决方案：执行以下命令创建文件夹和添加权限。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;perl&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;mkdir&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;log&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;chmod&lt;/span&gt; &lt;span class=&quot;code-snippet__number&quot;&gt;777&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;log&lt;/span&gt; -R&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;两台服务器上都有这个 log 目录后，Keepalived 也帮我们自动重启好了 MySQL 容器，再来访问下其中一个节点 node56 的 MySQL 的状态。咦？居然报错了。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4884819846426462&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/SfAHMuUxqJ3ItMia7ViaOthrVUcg0h0sNFpnm56DaRLGX0nRSshSK7j6NZeBXfa76v2J0tau6yl496TAZic1sFugA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1693&quot;/&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;Last_IO_Error: Got fatal error &lt;span class=&quot;code-snippet__number&quot;&gt;1236&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;from&lt;/span&gt; master when reading data &lt;span class=&quot;code-snippet__keyword&quot;&gt;from&lt;/span&gt; binary log: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;Could not find first log file name in binary log index file&#x27;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;可以看到几个关键信息：&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;Slave_IO_Running: NO&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;，当前同步的 I/O 线程没有运行，这个 I/O 线程是从库的，它会去请求主库的 binlog，并将得到的 binlog 写到本地的 relay-log (中继日志)文件中。没有运行，则代表从库同步是没有正常运行。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;Master_Log_File: mysql-bin.000014&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;，说明当前同步的日志文件为 000014，之前我们看到节点 node56 上 mysql.index 里面写的是 000001，这个 000014 根本就不在 index 文件里面，所以就会报错了。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;这里涉及到主从同步的原理，上一张图：&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.0869565217391304&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/SfAHMuUxqJ3ItMia7ViaOthrVUcg0h0sNFQkBqLds2hpbA39yriaqRXvDds1nmS4t6G5SwbpiaRdQHPExvOT25LlgA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;943&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;从库会生成两个线程,一个 I/O 线程,一个 SQL 线程;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;I/O线程会去请求主库的 binlog 日志文件,并将得到的 binlog 日志文件 写到本地的 relay-log (中继日志)文件中;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;主库会生成一个 dump 线程,用来给从库 I/O 线程传 binlog;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;SQL线程，会读取 relay log 文件中的日志,并解析成 SQL 语句逐一执行。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;那好办啊，我们重新指定下同步哪个日志文件，以及同步的位置就好了。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;&lt;span&gt;解决方案&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;看下主库 node55 上日志文件状态。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.14285714285714285&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/SfAHMuUxqJ3ItMia7ViaOthrVUcg0h0sNFDmbicgmlkjLGeAcnLECicZ1FVRJBJLTGHgReKJKdQuLGUYyM31DhDrBg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;693&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;记下这两个信息：File=mysql-bin.00001，Position=117748。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;（这里也有个坑：先要锁表，再看这两个值，从库开始同步后，再解锁表）。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;具体执行的命令如下：&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;FLUSH&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;TABLES&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;WITH&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;READ&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;LOCK&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;SHOW&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;MASTER&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;STATUS&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;UNLOCK&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;TABLES&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;然后在从库 node56 上重新指定同步的日志文件和位置：&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;STOP&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;SLAVE&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;CHANGE&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;MASTER&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;TO&lt;/span&gt; MASTER_HOST=&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;10.2.1.55&#x27;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;MASTER_PORT=&lt;span class=&quot;code-snippet__number&quot;&gt;3306&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;MASTER_USER=&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;vagrant&#x27;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;MASTER_PASSWORD=&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;vagrant&#x27;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;MASTER_LOG_FILE=&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;mysql-bin.000001&#x27;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;MASTER_LOG_POS=&lt;span class=&quot;code-snippet__number&quot;&gt;117748&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;START&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;SLAVE&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;再次查看就不报错了，I/O 线程也跑起来了，&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.42758620689655175&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/SfAHMuUxqJ3ItMia7ViaOthrVUcg0h0sNFNkuUPTgIysxTALs6MhrIIy0lntibGq5hJt46ichaOWTicEGj6NjVQHL6A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;870&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;然后将 node55 当做从库，node56 当做主库，同样执行上面的几步，状态显示正常了，然后用 navicat 工具连下数据库，都是正常的。在测试群反馈下结果，搞定收工。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;好像忘了一个问题，&lt;strong&gt;为啥 log 文件夹被干掉了&lt;/strong&gt;？？&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;&lt;span&gt;为什么会出现问题？&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;然后问了一波当时有没有人删除这个 /var/lib/mysql/log 目录，也没有人会随便删除这个目录的吧。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;但是发现 log 的上级目录 /var/lib/mysql 有很多其他文件夹，比如 xxcloud, xxcenter 等。这不就是我们项目中几个数据库的名字么，只要在这个目录的文件夹，都会显示在 navicat 上，是一一对应的，如下图所示。其中也显示了 log 数据库。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.896011396011396&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/SfAHMuUxqJ3ItMia7ViaOthrVUcg0h0sNFcqZwe6GzXZc5ZbUx9McqfiabibE0FPNQsRy70hWYXM1uSItSTkP5gDng/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;702&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;那会不会有人从 navicat 上干掉了 log 数据库？极有可能啊！&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;果然，有位同事之前在迁移升级的过程中，发现这个 log 数据库在老的系统是没有的，所以就清理了。这就相当于把 log 数据库干掉了，同时也会把 log 文件夹干掉了。好了，终于水落石出了！这个其实也是我前期没有考虑到 log 目录的一个问题。没错，这是我的锅~&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;&lt;span&gt;改进&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;其实操作同步数据库的时候，&lt;strong&gt;不应该用这种覆盖同步的方式&lt;/strong&gt;。可以采取单库同步的方式，也就不会干掉 log 数据库了。但是，这个 log 数据库放在这里有点奇怪啊，能不能不要出现在这里呢？&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;我们只要指定这个 log 目录不在  /var/lib/mysql 目录下就好了。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;东哥建议：log 文件和数据库 data 文件进行隔离：&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;ini&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;datadir&lt;/span&gt; = /var/lib/mysql/data&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;log_bin&lt;/span&gt; = /var/lib/mysql/log&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;另外一个问题，我们的高可用真的高可用了吗？&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;至少&lt;strong&gt;没有做到及时报警&lt;/strong&gt;，MySQL 数据库挂了，我是不知道的，都是通过测试同学反馈的。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;能不能及时感知到 MySQL 异常呢？&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;这里可以利用 Keepalived 发送邮件的功能，或者通过日志报警系统。这个是后面需要改进的地方。&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>404c437fe8b1e0e7d6c94a013f7562f0</guid>
<title>难道，降本增效就是裁员吗</title>
<link>https://toutiao.io/k/e3bhmfr</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;原创不易，求分享、求一键三连&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上次提问&lt;strong&gt;团队一盘散沙怎么破&lt;/strong&gt;的粉丝又问了一道大题&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;blockquote&gt;&lt;p&gt;小钗，CEO告诉我：作为总监级应该有&lt;strong&gt;降本增效&lt;/strong&gt;的认知&lt;/p&gt;&lt;p&gt;但每次后续都是裁员，难道降本增效就是裁员吗？&lt;/p&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;额，怎么说呢，降本增效的结果大概率是裁员，但难点应该是&lt;strong&gt;识别&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;降本增效！&lt;/strong&gt;这道题很难，文章会很长需要耐着性子读，首先要分析什么导致了成本上升，效率低下。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当业务复杂到一定阶段的时候，效率问题会首当其冲，基本解法是化整为零、分赛道，对应的产物可以是子公司、事业部、业务单元、项目组。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;好处是目标聚焦、问题也会聚焦；工作内容闭环，团队人数可控，协作、试错成本都会很低；但是不可避免的会有很多问题：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1）重合区域&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2）三不管区域&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.24177777777777779&quot; data-type=&quot;png&quot; data-w=&quot;2250&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdfjlwvwuTCv0j57Pdctq8TPUMiaO1fFQj2JxEBtcSTkkzQFyCPKLXNbloj8ALHnXicGg6FDV4lTrFaNImcdeLJw/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;初期重合、三不管区域占比小于2%，团队总有愿意&lt;strong&gt;吃亏&lt;/strong&gt;的同学，倒也不成问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;随着团队规模扩大，业务复杂度加剧，重合、三不管区域占比大于一定数值，比如10%的时候，加之专业领域冲突，文化冲突，阵营冲突，这种区域所造成的效率影响可能是&lt;strong&gt;成倍增长的&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;DDD可以解决了科学分组的问题，中台要扮演&lt;strong&gt;垃圾桶&lt;/strong&gt;协调解决重合与三不管问题，但是&lt;strong&gt;漏网之屎&lt;/strong&gt;必不可少。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;管理者嘛，无非一天&lt;strong&gt;拉偏架&lt;/strong&gt;协调大家解决这些问题，再决策由谁&lt;strong&gt;吃亏&lt;/strong&gt;（权责利模型）去解决。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里就出了&lt;strong&gt;第一个问题&lt;/strong&gt;，谁去吃亏？&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;谁背这个锅？&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;某天，测试环境有个BUG，前端可以写代码解决，于是后端认为是前端的问题；后端也可以写代码解决，于是前端认为是后端的问题，这是一个有趣的&lt;strong&gt;评价模型&lt;/strong&gt;：&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;谁能解决或者说谁最终的解决了这个问题，谁就变成了这个锅的拥有者&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;两个同学一步不让，10分钟代码的事，扯了一个小时，甚至后端同学已经把前端的代码写出来，贴在了群里，让前端同学发上去即可，可谓侮辱性极强。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;前端同学气不过就是不上传代码，让后端同学自己去上传，于是10分钟的事情两个人拉扯了一天...&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一些同学可能会认为他们&lt;strong&gt;小肚鸡肠&lt;/strong&gt;，于是马上升级场景！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;线上有一&lt;strong&gt;严重事故&lt;/strong&gt;，A团队的同学能解决，B团队的同学也能解决，但是现在&lt;strong&gt;触发点&lt;/strong&gt;在A团队，线上页面&lt;strong&gt;影响面&lt;/strong&gt;却在B团队。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;于是10分钟的事情，两个团队6个人扯了半天有余，都怕这次事故算到自己头上...&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在这个时候你会不会&lt;strong&gt;小肚鸡肠&lt;/strong&gt;呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这种事没有绝对对错，也没有道理可讲的，往往都是看谁&lt;strong&gt;拳头硬&lt;/strong&gt;（势能高、影响力足），如果你看到有个&lt;strong&gt;傻子&lt;/strong&gt;在那里大放厥词，可能有三个理由：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;他在维护自己&lt;strong&gt;较真&lt;/strong&gt;的人设，顺便增加点自己的团队&lt;strong&gt;活跃度&lt;/strong&gt;属性；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;他在以讲道理的方式&lt;strong&gt;叫冤&lt;/strong&gt;，就算输了也要找补下，因为以后的这类&lt;strong&gt;脏活&lt;/strong&gt;是不是都要自己接？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;这是个&lt;strong&gt;真傻子&lt;/strong&gt;......&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;屁股决定脑袋，对站在某个立场的leader或者同学来说，当然是正确的。但是站在全局来说又很有问题，因为&lt;strong&gt;10分钟的事情变成了一天&lt;/strong&gt;啊！&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;这还只是技术团队层面的事情，扩大到产研团队、事业部之间，这类分而治之所导致的效率问题，&lt;strong&gt;不可谓不大&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以上问题已经很令人头条了，但你以为就结束了吗？&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;维护成本&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;公司大了后，无效资源消耗增多已经很让人头疼了，但是真实情况这里还会多出很多&lt;strong&gt;维护成本&lt;/strong&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6897777777777778&quot; data-type=&quot;png&quot; data-w=&quot;2250&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdfjlwvwuTCv0j57Pdctq8TPUMiaO1fFQBgOfps4kA29UyrRecKiaOlO1nkDYX4XPZzcegu63xdwuIicyY116PTkA/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这种维护成本一般由几部分组成：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;之前十分重要的业务，迭代减缓，但依旧有很重的地位，需要持续维护；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;之前不愠不火的业务，直接停止迭代，其中参与人员无事可做，却又因为一些因素（如架构调整、leader离职）没有得到妥善安排；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;之前死掉的业务......&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;类似于这种业务以及之前的部分参与者，都会变成所谓的&lt;strong&gt;维护成本&lt;/strong&gt;，这包括一些之前的&lt;strong&gt;有功之臣&lt;/strong&gt;，处理起来比较麻烦了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这种比例一大整体成本马上就变高了，接下来就会定期出现成本优化，HC冻结事项。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;成本优化是很多公司一直在做的事情，甚至这些公司并不缺钱！。&lt;/p&gt;&lt;p&gt;这里的重要标志就是&lt;strong&gt;限制HC&lt;/strong&gt;、限制成本，对于不缺钱的公司似乎很奇怪。&lt;/p&gt;&lt;p&gt;这是因为公司大盘有一笔账，他识别到整体的业务资源投入是完全够的，比如各团队多给10%资源用以解决冲突问题，但实际情况却是各个团队依旧在闹缺人缺资源，那么公司就会认为我们所付出的&lt;strong&gt;维护成本&lt;/strong&gt;与&lt;strong&gt;解决冲突成本&lt;/strong&gt;过高，公司会认为当下自身&lt;strong&gt;结构出了问题&lt;/strong&gt;。&lt;/p&gt;&lt;p&gt;而事实上多余的人事物所造成的资源浪费和&lt;strong&gt;效率降低&lt;/strong&gt;甚至最终引起&lt;strong&gt;死海效应&lt;/strong&gt;是公司绝对不能接受的，所以成本优化会是一个永久的话题，这里优化的不是成本，而是&lt;strong&gt;缓解系统性问题&lt;/strong&gt;的一种手段。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;话虽然好听，那么冗余成本&lt;strong&gt;如何识别&lt;/strong&gt;呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;团队一旦大了，如何判断哪个团队该投入多少人，各个团队leader是否会因为&lt;strong&gt;本位主义&lt;/strong&gt;而有&lt;strong&gt;善意谎言&lt;/strong&gt;，于是这个时候就会出现所谓的&lt;strong&gt;公司级效率团队&lt;/strong&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但真要细究，这里有几个问题：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;这种识别冗余团队的&lt;strong&gt;效率团队&lt;/strong&gt;本身就是冗余；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;效率团队多数情况只能算老板的传声筒，未必能深入业务、深入团队，所以多数时候能做的有限；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;效率团队是建立在良好数据收集的前提下的，如果各个业务方初期项目数据收集工作都没做，也没办法统计；&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以，公司级的成本优化、效率提升，需要良好的顶层设计，否则成本识别可能成为一笔死账，效率团队在左右横跳中陷入消亡。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如何解决这种效率问题，是我们今天要探讨的...&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;熵增&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上述的问题到底是什么呢？一个物理热词能可解释&lt;strong&gt;熵增&lt;/strong&gt;：&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;熵增：在一个孤立系统里，如果没有外力做功，其总混乱度（即熵）会不断增大&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;管理的动作就是为了对抗熵增。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果你想创造一个能够维持一定秩序、不会分解的系统，那么这个系统必然是一个开放系统，就需要为他注入能力，并让其在系统中流动以维持这种秩序。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;管理动作就是为团队注入能量，能量停止系统就会开始退化，这种持续为组织注入能量的行为、有效的熵减动作，正是领导力的核心。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.3324074074074075&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdfjlwvwuTCv0j57Pdctq8TPUMiaO1fFQ2Sbric7uwUa19xFfQ9arpzKheKOsvMP4zUnOicicgADhamIicMyVwXbzTg/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有两个核心点可以防止熵增：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;之前工作中常常听到一句话&lt;strong&gt;流量红利时代已经结束&lt;/strong&gt;，后续的存量流量争夺可能会有很多公司被埋葬！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这句话背后表达的是在流量自然增长的时代，很多很普通的产品也能有不错的增速，而当增量变得困难的时候，内部问题便会暴露，逐渐走向衰亡。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;增长可以解决很多问题，创新是最好的增长手段，但未必会引起熵减，甚至会加速熵增！&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大侠武功再高，也要放下包袱，背上背着共患难的媳妇，怀里抱着红颜知己，面对真正的强敌时，也不免进退失据。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于公司来说，腐败的员工、落后的制度是必须清理的，国服打野在高端局也带不动四个青铜。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里再举个例子，古代打仗如果没有纪律和机制保障，队长死了有人兜底，兜底的死了还有人兜底，直到兜底到最后一人，很容易出现逃兵。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;具体到我们实际工作中，一个公司存在了很多年后，一年的人力成本是10亿。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;而公司高层有印象的费用估计就1/10。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;并就这1亿的印象都很模糊，只有大框架，没有细节，输入输出也不标准，慢慢就形成了上面乱拍KPI，下面向上管理的情况。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;公司管理复杂度提高，边际效益递减，无效的人事物增加，组织臃肿......&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;嗯？之前的华为貌似就遇到了这个问题&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;二十年前的华为&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1998年9月20日， IBM顾问向任正非阐述了对华为管理问题的十大诊断：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一、缺乏准确、前瞻的客户需求关注，反复做无用功，浪费资源，造成高成本；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;二、没有跨部门的结构化流程，各部门都有自己的流程，但部门流程之间是靠人工衔接，运作过程被割裂；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;三、组织上存在本位主义，部门墙高耸，各自为政，造成内耗；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;四、专业技能不足，作业不规范；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;五、依赖个人英雄，而且这些英雄难以复制；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;六、项目计划无效且实施混乱，无变更控制，版本泛滥&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;……&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其实华为的问题总结下来就两个事：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;规模扩张引起的管理掌控力下降、&lt;strong&gt;跨部门协作&lt;/strong&gt;难度指数级上升；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;专业瓶颈导致的难度；&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;两个因素制约了团队创新。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.946236559139785&quot; data-type=&quot;png&quot; data-w=&quot;1116&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdfjlwvwuTCv0j57Pdctq8TPUMiaO1fFQ656ziaxYbal7IDZaia57HvNT0f5TNia3KTTQEm8jlrVG5q51V4fFRktMw/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;一些解法&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;金山的解法是先做朋友、再做事业，只有关系很好的朋友，和关系一般的朋友；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;阿里的解法是大中台、小前台；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;华为的解法就牛逼了：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6611111111111111&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdfjlwvwuTCv0j57Pdctq8TPUMiaO1fFQBMTqmJvZlQKvn2faWIibPWlNsdNb3ZJuiaJfUAAxibrFcu80173SamaWg/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一套完善的项目管理办法、绩效管理机制，事无巨细全部定义......&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这套东西怕要值不少钱，对于小一点的公司可能不太适用，那么中小型公司应该怎么办呢？&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;利益分配机制&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;问题是什么？&lt;/strong&gt;再次回到最初，问题到底是什么？&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;Case 1，职能线比例&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大概在两年多以前，B站的leader在设计团队招聘的时候，会宏观强调职能比例，比如前后终端有一定比例要求，否则容易出现某个端成为瓶颈的现象：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4548704200178731&quot; data-type=&quot;png&quot; data-w=&quot;2238&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdfjlwvwuTCv0j57Pdctq8TPUMiaO1fFQjTINUCPoVnDuj7sUluepbjbUsuXZOBxjLhXRoVXib8gEURvljqRjbibg/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们遵照这个比例去做事，也确实没有出现过某个端出现瓶颈的问题，除非突然某个端大批量离职。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里的点是将资源，分给了不同的职能线，偶尔也会微调不同职能线资源占比，只要不出问题，那么就会形成一个区间，比如：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们发现前后端的比例在3:7和5:5之间都不会出现什么问题，那么在某个特别需要后端建设的时候，便会尽量压缩到3:7。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;需要知道底线在哪里，可操作空间在哪里，确定这个比例后，便形成了宏观的&lt;strong&gt;机制兜底&lt;/strong&gt;，也是&lt;strong&gt;最外层&lt;/strong&gt;的兜底。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然后才是具体到前端团队的招聘中高级:中级:初级的比例问题，这个会形成&lt;strong&gt;第二层兜底&lt;/strong&gt;，有了这几层兜底，便不容易出现端口上的瓶颈。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里需要注意的一个点是，比例一定要不断微调验证，一旦发现团队因比例减少出现问题的时候，就要开始回调。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;Case 2，家庭收入配比&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在某一段时间里，我的家庭关系处理的很糟糕，现在回想起来，除了最初主动作死之外，最大的矛盾点来自于跟老婆结婚后，由二人世界变成了两个家庭，而在家庭利益分配这个事情上总是达不成一致。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;女人总是帮娘家的嘛，男人虽说会更顾全大局一点，但对自己原生的家庭依旧会有所偏移，于是就容易出现各为各家，鸡飞蛋打的结果。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;后来生了个娃，大家更多的把精力投入到了自己的小家庭，一些矛盾也就自然而然化解了...&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里的点是什么呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有一笔资源，是花在我家，还是我老婆家，整个应该有一个比例，举个例子：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;男方父母:女方父母:小家庭 = 2:3:5，大家都不开心；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;于是调整为3:3:4，双方父母倒是开心，但是我们夫妻不大开心；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最后生一个娃后比例变成了1:1:8，于是我们自己的家庭和谐了；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;双方父母却有所怨言，当变成1.5:1.5:7的时候，似乎进入了一个稳态。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有了这个模型后，我们再观察下当前教育行业的改革，国家医疗的投入，教育的投入，似乎慢慢能看懂一些东西了...&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;顶层设计&lt;/span&gt;&lt;/h2&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;上述Case中只是调整了一些数字，问题却消失了！&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;问题为什么消失，有没有&lt;strong&gt;更宏观&lt;/strong&gt;的视角？再次回到裁员的话题，单单一个裁员就会有几个视角：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;一线员工：公司是不是没钱了；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;leader视野：又瞎搞，我的XX重构做不了了；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;大leader视野：团队可能确实已经产生冗余了，要进行成本优化，接下来需要聚焦，但是那些由于人力短缺做不了的项目怎么办呢？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;老板视野：同样一笔钱，是要用于维护老旧业务还是要用于创新，这是一个问题，但相关的投入比例必须开始调整；&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以这里最宏观的视角是：&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;这里有一笔费用（资源），那么首先应该盘清楚他会被用到几个地方；&lt;/p&gt;&lt;p&gt;如果这个资源（钱）没被用到自己想要的地方，那么就要调整他的比例；&lt;/p&gt;&lt;p&gt;比例调整的时候要慢慢替换，用新的结构替换老的结构，太快容易拉着蛋；&lt;/p&gt;&lt;p&gt;最终拿到最优的分配比例。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;具体到实际案例：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;老板开始识别冗余，发现产研线一个月ROI较低；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;老板约谈产、研负责人，要求做成本优化以及结构调整；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;产研leader私下商量，少裁点，毕竟那么多老旧业务要维护；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;老板不买单，要求首先将总成本减少某个比例，其次将现有资源投入做重新布局；&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里举个例子，之前是有70%的人在维持老旧业务，30%用于新业务探索，老板认为老旧业务投入太大没有未来，于是希望把比例先调成5:5，然后在新体系开辟后逐渐改成4:6乃至3:7。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里产研leader的问题是会被历史包袱束缚，并且这种历史包袱反而是其&lt;strong&gt;安身立命的根本&lt;/strong&gt;，是之前各种考核指标重点考核项，是KPI量化的体现。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以单靠产研leader自己努力，很难跳出框架处理这个问题，老板的策略也很简单，直接调整投入比例，帮产研leader卸下了包袱。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个案例再细化，老旧业务维护资源40%中，到底有哪些业务，这些业务依旧有一个比例，要再细分；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;创新事项、新体系建立事项也是可以穷举的，那么这60%的资源又该如何投入？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以这种利益分配思维思考下去后，会引发以下结果：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;一些老旧业务不得不放弃；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;创新会更有重点，不会想要大而全；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;在不停的调整比例过程中会达成一个动态平衡，确实有一些老旧业务无论如何都必须存在，那么这个就会变成基建或者公共项；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;在系统稳定后开始第二轮迭代；&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;规整一下思路：&lt;/p&gt;&lt;p&gt;1）识别冗余；&lt;/p&gt;&lt;p&gt;2）格局梳理，识别利益分配者；&lt;/p&gt;&lt;p&gt;3）利益比例调整，结构替代法；&lt;/p&gt;&lt;p&gt;4）找到资源分配出去的方法，即如何将资源给到你想给的人事物；&lt;/p&gt;&lt;p&gt;5）确定稳态比例，并开始再迭代；&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如此一来，我们便有了解决冗余问题的大思路了，也就是我们所谓&lt;strong&gt;顶层设计&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;接下来便是机制落地的问题了。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;落地思路·宏观调控+市场经济&lt;/span&gt;&lt;/h2&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5349143610013175&quot; data-type=&quot;png&quot; data-w=&quot;1518&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdfjlwvwuTCv0j57Pdctq8TPUMiaO1fFQFoUQy5a3XCEjmOJ4KP9LD2CBO5lkQJHH2Ej0MvVYef2wiabW4qOOXbQ/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里实行&lt;strong&gt;利益分配机制&lt;/strong&gt;的策略是将公司所有事务分为五类：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;公司级项目&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;部门级项目&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;日常运营事项（包括日常管理）&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;损耗&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以看见，大框架由管人、管部门，演变成由项目管人，是个很大的跨度。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为了降低解释成本这里可以直接使用OKR体系，OKR是一个很好的工具，从本质来说，OKR与否不关键，&lt;strong&gt;资源可控&lt;/strong&gt;，目标实现才是重点，只不过OKR正好契合。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;首先，总办做至上而下的战略宣导，提出自己的OKR，甚至做命题作文形成公司的重点项目；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其次，各部门会形成自己的OKR，这些OKR都会通过总办的Review（整改、优化）形成部门的重点项目；&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;使用OKR是因为每个项目都会有明确的验收标准与时间，这会让很多事项变得&lt;strong&gt;相对可控&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里会形成两套机制保障：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;公司战略输出形成的项目，一定会紧扣公司方向，不太容易出错；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;部门OKR经过审批后的项目会有基本的兜底保障；&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;公司、部门级重点项目各自卷入一批人，能解一部分资源的&lt;strong&gt;有效性&lt;/strong&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为了激励更多人参与到项目中，会有配套的奖惩措施。这里会遵循一个基本逻辑：&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;事前预支，事中监控，事后评估，事成结算。&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;组织结构匹配&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;顶层设计结束，那么就要有对应的组织结构匹配，这里以资金预算流向做结构设计：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6603403141361257&quot; data-type=&quot;png&quot; data-w=&quot;3056&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdfjlwvwuTCv0j57Pdctq8TPUMiaO1fFQsu5DdoV2oN5bW2ZYXtZ35rw3u5npjEnSS50BUphYRCXlRjKplZTbUg/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;正常情况应该分为三个集团：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;总办，最终的买单方；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;职能部门，直接服务于总办，为公司做兜底；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;业务部门，总办给予预算，业务部门承诺KPI；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;业务支持部门，主要从业务部门赚钱，偶尔从总办、职能部门赚钱；&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但如果是&lt;strong&gt;简单情况&lt;/strong&gt;只需要分三条线：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;负责总体预算规划，每个业务分配多少钱，对应KPI是什么；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;拥有独立的商务、产品、运营团队，从总办拿钱，做KPI承诺，部门的预算可以用来做活动运营，也可以采买业务支持部门的能力，帮助自己做产品线建设；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以开发部为例，主要从业务部门接需求赚钱，也可以做总办需求赚钱，目标是自负盈亏。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;但人才法放进去要很注意，因为如果他们为业务团队开后门的话，结果可能很糟糕。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;具体实操上，是公司高管确定当前几个战略级OKR是什么，然后以OKR分成几条业务线，并给予一定预算及考核方案；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;业务部门思考自己OKR的实现路径以及所需的能力去开发部（业务支持部门）采买资源，这个时候开发部可以与其讨价还价；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最终，业务部门关注自己的OKR是否实现，开发部（业务支持部门）关注自己能否服务好业务部门赚取足够的钱（&lt;strong&gt;业务部门不满意有权利外包&lt;/strong&gt;），总办关注所有OKR的达成情况的同时，还会给出一部分预算协助开发部类业务支持部门做基础建设。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这样下来各个部门的目标都很清晰：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;业务部门预算使用自由，但要为最终KPI负责；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;开发部不需要与业务部门绑定，但需要自给自足；&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;特别是类似开发部这种部门，可以不依靠业务部门证明自己的价值，虽然看上去向内部外包，但依旧很值得开心...&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;至此，顶层设计以及匹配设计所需的组织结构就出来了，这也是&lt;strong&gt;第一轮冗余识别&lt;/strong&gt;，因为没有被纳入主赛道的人事物，多数会被&lt;strong&gt;清退&lt;/strong&gt;。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;系统匹配&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;工欲善其事必先利其器，顶层有设计，组织有匹配，这些是先决条件，要想机制运行通畅还需要有匹配的工具：&lt;strong&gt;除了OKR工具，还需要是一套预算监控工具&lt;/strong&gt;，他需要完成以下目标：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;知道一个部门的ROI；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;知道每个人的ROI；&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里要分两个情况：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;业务部门ROI计算方式非常简单：&lt;strong&gt;所有收入➗（所有费用+人力成本）&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;每个人的ROI应该是：&lt;strong&gt;任务赚的钱➗工资&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;具体流程是：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;每个月部门负责人连同Leader一起坐下来算账；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;赚了多少钱，花了多少钱；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;将赚的钱和花的钱分配到任务上；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;任务绑定个人，计算一个人做了多少任务，赚了多少钱，亏了多少钱；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;计算个人ROI，可能是负数；&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;开发部会简单一点，就是做项目赚钱，所以部门ROI=&lt;strong&gt;所有收入➗人力成本&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;每个人的ROI应该是：&lt;strong&gt;任务赚的钱➗工资&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;具体流程是：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;月底开发部负责人与各个业务线负责人结算费用；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;将赚的钱分配到任务上；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;任务绑定个人，计算一个人做了多少任务，赚了多少钱；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;计算个人ROI；&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5382513661202186&quot; data-type=&quot;png&quot; data-w=&quot;3660&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdfjlwvwuTCv0j57Pdctq8TPUMiaO1fFQOX68onkhLzEshawLibjUw77sTFtXRMSeHTt0NNAFSFS4UMeeRqqh5Kg/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;这里为每个任务定价有Leader主观判断可能导致误差，但也算为Leader赋能的一种手段&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;具体实现层面有一个流程要走，一个&lt;strong&gt;日报系统&lt;/strong&gt;要做：&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;需求采买流程&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;流程非常简单，设计一个OA审批即可：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5789473684210527&quot; data-type=&quot;png&quot; data-w=&quot;418&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdfjlwvwuTCv0j57Pdctq8TPUMiaO1fFQicS0evcA8E1w3CqqKfaibILwLsyem5vvpHmuFBszQ1chSfjvfexIiadAQ/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.7865168539325843&quot; data-type=&quot;png&quot; data-w=&quot;1068&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdfjlwvwuTCv0j57Pdctq8TPUMiaO1fFQBqcghUteXfIfqwqVv62voJ9o9Xk66S1OhYXfKwjgKoLyaoaKljeNlA/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;采买页面展示&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.29324324324324325&quot; data-type=&quot;png&quot; data-w=&quot;2960&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdfjlwvwuTCv0j57Pdctq8TPUMiaO1fFQ5yib7EDicMr7jic7baLiaicQZzj5uy0GYc91moibPktFMOI2uLP6tjQxicgzA/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;导出Excel效果：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.3488372093023256&quot; data-type=&quot;png&quot; data-w=&quot;946&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdfjlwvwuTCv0j57Pdctq8TPUMiaO1fFQ33wewAghlrVdaw5iacfR8WibwnlcOrJUOQr5B0a8wngkz8wsKaNRpsCg/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;接下来Leader对每个任务定价和人员ROI页面就不过多展示了，其中的&lt;strong&gt;日报系统&lt;/strong&gt;也不过多展开，算是之前一分钟日报的升级版本，大家可以自己体验：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;https://yexiaochai.github.io/60s_report&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.8694444444444445&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdfjlwvwuTCv0j57Pdctq8TPUMiaO1fFQfXx6o5aUWtl2pQ671aS07lq89km0qmiaufpE33nVfeicSibbzeMGpVWoA/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8768518518518519&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdfjlwvwuTCv0j57Pdctq8TPUMiaO1fFQrDhnO9IibiaYL2BvwHkZjQCJDW6IeQ4efjJibCt6AzsnHuD0fv8zQHH0g/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;如何实施？&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;各位如果以后要推广一个系统或者落地一个机制，一定要先做一个事：&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;打造案例！在你最有话语权的地方打造成功案例。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我在产研话语权很大，系统完成第二天就直接在产研团队使用，要求所有人必须使用，由此在线打磨体验，边修BUG边优化体验，并且拿到了第一波数据，于是可以进一步推广了。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;如何进一步推广？&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有了小案例后就不要闭门造车了，该去找&lt;strong&gt;投资人&lt;/strong&gt;了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;直接拿着当前案例去找CEO，也从他那里拿到了正反馈，这是继续做下去的基础。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;接下来也不必着急全公司推，先看看情况，并且继续打磨产品、控制节奏，鼓励项目组同学加班加点完成新模块开发，并且不断的优化体验。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;因为参与的人多了后，控制权已经不完全在你手里了，要注意节奏，&lt;strong&gt;控制节奏&lt;/strong&gt;这里要做的是去除阻碍，千万不要在&lt;strong&gt;大面积推广过程中被劝退&lt;/strong&gt;，所以这里的问题是：&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;如何去除阻碍？&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1）马上筹备培训材料；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2）马上筹备宣传图册以及宣传海报，比如：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.337037037037037&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdfjlwvwuTCv0j57Pdctq8TPUMiaO1fFQhCDtpYcn2QibhWEdxDmEeuAjKTIficRcAiagrCyDLYqChicTiaYblJNxVhg/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;3）有了成绩后，联合财务部门和人力部门一起玩，记得分功劳，最好拿到红头文件：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.9277777777777778&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdfjlwvwuTCv0j57Pdctq8TPUMiaO1fFQDhut8dpiawdWb1TIx5iaSicLaOAOvVWAPUD8z6CtJ04st3sMevW68ChVQ/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;后面就是顺理成章的事情，只需要不停的优化运营......那么到此就结束了吗？&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;系统与机制&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在某种程度上说，有机制就可以了，机制可以保证很多问题得到根本解决，这里想要表达的点是：&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;所有的数字化转型都需要匹配的机制与流程辅助，甚至系统只是机制的辅助！&lt;/p&gt;&lt;p&gt;但系统可以加速这一切的发生，也可以加固体系的稳定性，是不可或缺的重要组成部分。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以，系统完成后，还需要产出：&lt;strong&gt;奖惩方案&lt;/strong&gt;，每个周期要根据个人ROI匹配奖励；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;除此之外的宣传案例、奖惩策略、汇报模板、会议设置等等全部必须匹配！！！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里直接参考OKR的发起、对齐、考核、复盘模块就好，但每一个模块的推行都很难，其中一个环节出问题甚至会导致所有前期努力白费......&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;这一切很难，因为人都是有防御机制的，部门的防御机制更强。&lt;/p&gt;&lt;p&gt;管理的动作稍有放松，管理的意志稍加薄弱，这些防御机制就会反扑。&lt;/p&gt;&lt;p&gt;他们甚至会不停的试探你的底线，你只要在其中一个小策略松口，就有可能千里之体溃于蚁穴。&lt;/p&gt;&lt;p&gt;这种事情做得好收益很大，做的不好就会变成公司的噪音！里面的拉扯很值得玩味......&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;总之，想完整走完一套降本增效的策略是很难的一件事情，多数人是设计不出来，少数人是设计出来后走不完，只有极少数人走完了完整闭环。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;福利&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为了感谢各位粉丝朋友的支持，&lt;strong&gt;送50本漫画小册&lt;/strong&gt;给大家：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6766917293233082&quot; data-type=&quot;jpeg&quot; data-w=&quot;1596&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/JdfjlwvwuTCv0j57Pdctq8TPUMiaO1fFQAJfjLcyRQXSAEaEiaL0qSN0oZfKVf5Zjjp5hpVyWbIvficqSHsqFaqsg/640?wx_fmt=jpeg&quot;/&gt;&lt;/figure&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7780748663101604&quot; data-type=&quot;png&quot; data-w=&quot;748&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdfjlwvwuTCv0j57Pdctq8TPUMiaO1fFQUmjibpqeysragViaKH8cIuOUoqGkiaL5tyCrjgyBYcjpVx8vqRfVUQurA/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;获取条件：&lt;/strong&gt;&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;点赞、在看、&lt;strong&gt;分享&lt;/strong&gt;、评论；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;加群，加客服留下地址信息（建议不要用真名）；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;因为赔本买卖所以需要自己出快递费，&lt;strong&gt;到付&lt;/strong&gt;；&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;数量有限，先到先得&lt;/strong&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;好了，今天的分享就到这。如果本文对你有帮助的话，欢迎&lt;strong&gt;点赞&amp;amp;评论&amp;amp;在看&amp;amp;分享&lt;/strong&gt;，这对我非常重要，感谢🙏🏻。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;想要更多交流可以加我微信：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5549076773566569&quot; data-type=&quot;png&quot; data-w=&quot;2058&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdfjlwvwuTCv0j57Pdctq8TPUMiaO1fFQLHmbKg3v57SIoSFo56VGQByvXqRMw1oleDhMTGbhmmsO0mVQjInBOQ/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>