<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>29815189d6e84cd053bfbb9592582a30</guid>
<title>Spring 之 Bean 生命周期源码解析</title>
<link>https://toutiao.io/k/5b3p9e1</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content             &quot; id=&quot;js_content&quot;&gt;&lt;h1&gt;Bean的生命周期&lt;/h1&gt;&lt;p&gt;Spring最重要的功能就是帮助程序员创建对象(也就是IOC)，而启动Spring就是为创建对象做准备，所以我们要先明白Spring到底是怎么去创建Bean的，也就是先弄明白Bean的生命周期。&lt;/p&gt;&lt;p&gt;Bean的生命周期是指：&lt;strong&gt;在SpringBean中，一个Bean是如何生成、如何销毁的。&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Bean的生命周期流程如下图所示：&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.5964125560538116&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/75hyljzwsBbNhoWfbAZEmfoRoiaS0hq1yPbXyP5MD7Qp9Ds7qNntwTBngqT8g8wkiaHibnJLfLJEyPqEOPaw78oQQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;892&quot;/&gt;&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;注册BeanDefinition&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;合并BeanDefinition&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;加载类&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;实例化前处理&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;推断构造函数&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;实例化&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;BeanDefinition后置处理&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;属性填充&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;执行Aware&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;初始化前置处理&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;初始化&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;初始化后置处理&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;注册销毁接口&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h1&gt;1.注册BeanDefinition&lt;/h1&gt;&lt;h2&gt;BeanDefinition是什么&lt;/h2&gt;&lt;p&gt;BeanDefinition中存在很多属性用来描述一个Bean的特点，比如：&lt;/p&gt;&lt;h2&gt;为什么需要BeanDefinition&lt;/h2&gt;&lt;p&gt;Spring IOC容器本质上是一个ConcurrentHashMap，key为Bean的Name，Value为Bean的实例对象。&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.05527638190954774&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/75hyljzwsBbNhoWfbAZEmfoRoiaS0hq1yUW1Nia6nL9OvgyuTcK0rMjYCevpgu8Bn2raumMWLiatOqQsjlIhcCALA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;6368&quot;/&gt;&lt;/p&gt;&lt;p&gt;也许你会说，我通过反射机制实例化一个目标对象，以Bean类型名称为key，目标对象为value，存入IOC容器中，不就可以了吗？Spring为什么要搞这么复杂？&lt;/p&gt;&lt;p&gt;我想，Spring之所以这样设计的目的，是可定制性及扩展性。Spring作为一个容器框架，通过IOC(控制反转)和DI(依赖注入)实现Bean之间依赖关系的管理以及Bean的生命周期管理。要实现Bean依赖关系的管理，必然要识别出依赖关系，并把这些信息保存下来以供创建Bean实例时使用 ；要实现Bean的生命周期管理，必然要识别出Bean有哪些生命周期扩展点以及每个扩展点的处理逻辑，并把这些信息保存下来以供创建Bean实例时使用。&lt;/p&gt;&lt;p&gt;这些信息可以看作是Bean的元数据信息，它们应该保存在哪儿呢？&lt;/p&gt;&lt;p&gt;说到这儿，你应该已经恍然大悟了，这些元数据信息就保存在BeanDefinition中，这些元数据信息将会用于指导Bean的创建及生命周期管理。&lt;/p&gt;&lt;h2&gt;怎么注册BeanDefinition&lt;/h2&gt;&lt;p&gt;在Spring中，我们经常会通过以下几种方式来定义Bean&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&amp;lt;bean /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;@Bean&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;@Component(@Service，@Controller等)&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;这些，我们可以称之为&lt;strong&gt;声明式定义Bean&lt;/strong&gt;。&lt;/p&gt;&lt;p&gt;我们还可以&lt;strong&gt;编程式定义Bean&lt;/strong&gt;，即直接通过BeanDefinition，比如：&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.13986013986013987&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/75hyljzwsBbNhoWfbAZEmfoRoiaS0hq1yQja6KQDbiaCteOnyMicCsK0r5OeaYoicneLdribyDe6V5yzibEd6icj9o7QQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;6864&quot;/&gt;&lt;/p&gt;&lt;p&gt;我们还可以通过BeanDefinition设置Bean的其他属性，比如：&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.14285714285714285&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/75hyljzwsBbNhoWfbAZEmfoRoiaS0hq1ywas2U15Qt2Q2hh5DmqgF0frDajVXApsT2wthBerkKvpk3CGTdgEWnw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;4256&quot;/&gt;&lt;/p&gt;&lt;h1&gt;2.合并BeanDefinition&lt;/h1&gt;&lt;p&gt;通过扫描得到所有BeanDefinition之后，就可以根据BeanDefinition创建Bean对象了，但是在Spring中支持父子BeanDefinition。&lt;/p&gt;&lt;p&gt;父子BeanDefinition实际用的比较少，使用是这样的，比如：&lt;/p&gt;&lt;p&gt;这么定义的情况下，child是单例Bean。&lt;/p&gt;&lt;pre&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;&amp;lt;bean&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;parent&quot;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;com.zhouyu.service.Parent&quot;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;scope&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;prototype&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;&amp;lt;bean&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;child&quot;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;com.zhouyu.service.Child&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/pre&gt;&lt;p&gt;但是这么定义的情况下，child就是原型Bean了。&lt;/p&gt;&lt;pre&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;&amp;lt;bean&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;parent&quot;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;com.zhouyu.service.Parent&quot;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;scope&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;prototype&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;&amp;lt;bean&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;child&quot;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;com.zhouyu.service.Child&quot;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;parent&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;parent&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/pre&gt;&lt;p&gt;因为child的父BeanDefinition是parent，所以会继承parent上所定义的scope属性，当然，其他属性也会继承。而在根据child来生成Bean对象之前，需要进行BeanDefinition的合并，得到完整child的BeanDefinition。&lt;/p&gt;&lt;h1&gt;3.加载类&lt;/h1&gt;&lt;p&gt;BeanDefinition合并之后，就可以先去创建Bean对象了，而创建Bean就必须先实例化对象，而实例化就必须先加载BeanDefinition中对应的class，在AbstractAutowireCapableBeanFactory类的createBean方法中，一开始就会调用：&lt;/p&gt;&lt;pre&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;Class&lt;/span&gt;&lt;span&gt;&amp;lt;?&amp;gt;&lt;/span&gt;&lt;span&gt; resolvedClass &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; resolveBeanClass&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;mbd&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt; beanName&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/pre&gt;&lt;p&gt;这行代码就是去加载类，方法是这么实现的：&lt;/p&gt;&lt;pre&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;mbd&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;hasBeanClass&lt;/span&gt;&lt;span&gt;())&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; mbd&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;getBeanClass&lt;/span&gt;&lt;span&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;System&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;getSecurityManager&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;!=&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;null&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;AccessController&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;doPrivileged&lt;/span&gt;&lt;span&gt;((&lt;/span&gt;&lt;span&gt;PrivilegedExceptionAction&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;Class&lt;/span&gt;&lt;span&gt;&amp;lt;?&amp;gt;&amp;gt;)&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;()&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;-&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;        doResolveBeanClass&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;mbd&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt; typesToMatch&lt;/span&gt;&lt;span&gt;),&lt;/span&gt;&lt;span&gt; getAccessControlContext&lt;/span&gt;&lt;span&gt;());&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; doResolveBeanClass&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;mbd&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt; typesToMatch&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/pre&gt;&lt;pre&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; hasBeanClass&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;beanClass &lt;/span&gt;&lt;span&gt;instanceof&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;Class&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/pre&gt;&lt;p&gt;如果beanClass属性的类型是Class，就直接返回；如果不是，则会根据类名进行加载(doResolveBeanClass方法所做的事情)&lt;/p&gt;&lt;p&gt;doResolveBeanClass方法会利用BeanFactory设置的类加载器来加载类，如果没有设置，则默认使用ClassUtils.getDefaultClassLoader()所返回的类加载器来加载。&lt;/p&gt;&lt;p&gt;ClassUtils.getDefaultClassLoader()&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;优先返回当前线程中的ClassLoader&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;线程中类加载器为null的情况下，返回ClassUtils类的类加载器&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;如果ClassUtils的类加载器为null，那么则表示是Bootstrap类加载器加载的ClassUtils类，那么则返回APP ClassLoader&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;也许你会有一个疑问，为什么不在扫描指定路径下就加载类呢？&lt;/p&gt;&lt;p&gt;我们都知道在Java中只有在真正使用一个类时，才会使用类加载器去加载该类对应的Class文件。Spring启动扫描时，如果指定的路径比较宽泛，那么扫描的类时非常多的，如果在Spring启动时就把这些类全部加载进JVM中，这样就不太好了。Spring启动扫描时，使用了ASM技术去解析类的信息，并不会真正的加载类。&lt;/p&gt;&lt;h1&gt;4.实例化前置处理&lt;/h1&gt;&lt;p&gt;当前BeanDefinition对应的类加载成功后，就可以实例化对象了，但是。。。&lt;/p&gt;&lt;p&gt;在Spring中，实例化对象之前，Spring提供了一个扩展点，允许用户来控制在某个或某些Bean实例化之前做一些启动动作。这个扩展点叫&lt;strong&gt;InstantiationAwareBeanPostProcessor.postProcessBeforeInstantiation()&lt;/strong&gt;。如果postProcessBeforeInstantiation()方法返回一个非空对象，表示不需要Spring来实例化，而且后续的Spring依赖注入也不会进行了，会跳过一些步骤，直接执行初始化后置处理这一步。&lt;/p&gt;&lt;pre&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;@Component&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;CustomBeanPostProcessor&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;implements&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;InstantiationAwareBeanPostProcessor&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;@Override&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;Object&lt;/span&gt;&lt;span&gt; postProcessBeforeInstantiation&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;Class&lt;/span&gt;&lt;span&gt;&amp;lt;?&amp;gt;&lt;/span&gt;&lt;span&gt; beanClass&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;String&lt;/span&gt;&lt;span&gt; beanName&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;throws&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;BeansException&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;&quot;userService&quot;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;equals&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;beanName&lt;/span&gt;&lt;span&gt;))&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;            &lt;/span&gt;&lt;span&gt;System&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;out&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;println&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;&quot;实例化前&quot;&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;UserService&lt;/span&gt;&lt;span&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;null&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/pre&gt;&lt;h1&gt;5.实例化&lt;/h1&gt;&lt;p&gt;在这个步骤中就会根据BeanDefinition去创建一个对象了。&lt;/p&gt;&lt;h2&gt;5.1 Supplier创建对象&lt;/h2&gt;&lt;p&gt;首先判断BeanDefinition中是否设置了Supplier，如果设置了则调用Supplier的get()得到对象。&lt;/p&gt;&lt;p&gt;我们可以使用BeanDefinition对象来设置Supplier，比如：&lt;/p&gt;&lt;pre&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;AbstractBeanDefinition&lt;/span&gt;&lt;span&gt; beanDefinition &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;BeanDefinitionBuilder&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;genericBeanDefinition&lt;/span&gt;&lt;span&gt;().&lt;/span&gt;&lt;span&gt;getBeanDefinition&lt;/span&gt;&lt;span&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;beanDefinition&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;setInstanceSupplier&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;Supplier&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;Object&lt;/span&gt;&lt;span&gt;&amp;gt;()&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;@Override&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;Object&lt;/span&gt;&lt;span&gt; get&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;UserService&lt;/span&gt;&lt;span&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;context&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;registerBeanDefinition&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;&quot;userService&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt; beanDefinition&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/pre&gt;&lt;h2&gt;5.2 工厂方法创建对象&lt;/h2&gt;&lt;p&gt;如果没有设置Supplier，则检查BeanDefinition中是否设置了factoryMethod，也就是工厂方法，有两种方法可以设置factoryMethodName，比如：&lt;/p&gt;&lt;p&gt;方式一：直接指定factory-method属性&lt;/p&gt;&lt;pre&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;&amp;lt;bean&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;userService&quot;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;com.test.service.UserService&quot;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;factory-method&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;createUserService&quot;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/pre&gt;&lt;p&gt;方式二：同时指定factory-bean和factory-method属性&lt;/p&gt;&lt;pre&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;&amp;lt;bean&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;commonService&quot;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;com.test.service.CommonService&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;&amp;lt;bean&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;userService1&quot;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;factory-bean&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;commonService&quot;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;factory-method&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;createUserService&quot;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/pre&gt;&lt;p&gt;值得注意的是，我们通过@Bean所定义的BeanDefinition，是存在factoryMethod和factoryBean的，也就是和方式二类似，factoryMethod就是@Bean注解的方法，factoryBean就是配置类的Bean实例。&lt;/p&gt;&lt;h2&gt;5.3 推断构造方法&lt;/h2&gt;&lt;p&gt;如果没有设置Supplier，也没有指定factory-bean和factory-method，就需要选择一个构造方法来进行实例化了。&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;先检查是否指定了具体的构造方法或构造方法参数值，或者在BeanDefinition中缓存了具体的构造方法或构造方法参数值，如果存在那么就直接使用该构造方法进行实例化&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;如果没有确定的构造方法或构造方法参数值，那么&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;如果没有确定的构造方法，那么则找出类中所有的构造方法&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;如果只有一个无参的构造方法，那么直接使用无参的构造方法进行实例化&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;如果有多个可用的构造方法，根据getBean指定的构造方法参数值对这些构造方法的匹配程度进行打分，找到一个最匹配的。匹配程度打分的算法很复杂，这里就不展开了。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h1&gt;6.BeanDefinition后置处理&lt;/h1&gt;&lt;p&gt;Bean对象实例化出来之后，接下来就应该给对象的属性进行赋值了。在真正给属性进行赋值之前，Spring又提供了一个扩展点 &lt;strong&gt;MergedBeanDefinitionPostProcessor.postProcessMergedBeanDefinition()&lt;/strong&gt;，可以对此时的BeanDefinition进行加工，比如：&lt;/p&gt;&lt;pre&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;@Component&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;CustomMergedBeanDefinitionPostProcessor&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;implements&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;MergedBeanDefinitionPostProcessor&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;  &lt;/span&gt;&lt;span&gt;@Override&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;  &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;void&lt;/span&gt;&lt;span&gt; postProcessMergedBeanDefinition&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;RootBeanDefinition&lt;/span&gt;&lt;span&gt; beanDefinition&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;Class&lt;/span&gt;&lt;span&gt;&amp;lt;?&amp;gt;&lt;/span&gt;&lt;span&gt; beanType&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;String&lt;/span&gt;&lt;span&gt; beanName&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;&quot;userService&quot;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;equals&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;beanName&lt;/span&gt;&lt;span&gt;))&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;      beanDefinition&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;getPropertyValues&lt;/span&gt;&lt;span&gt;().&lt;/span&gt;&lt;span&gt;add&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;&quot;orderService&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;OrderService&lt;/span&gt;&lt;span&gt;());&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;  &lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/pre&gt;&lt;p&gt;在Spring中，AutowiredAnnotationBeanPostProcessor就是一个MergedBeanDefinitionPostProcessor，它的postProcessMergedBeanDefinition方法中会去查找注入点，并缓存在AutowiredAnnotationBeanPostProcessor的对象的一个Map中(injectionMetadataCache)。&lt;/p&gt;&lt;h1&gt;7.实例化后&lt;/h1&gt;&lt;p&gt;在处理完BeanDefinition后，Spring又设计了一个扩展点：&lt;strong&gt;InstantiationAwareBeanPostProcessor.postProcessAfterInstantiation()&lt;/strong&gt;，利用这个扩展点可以对Bean实例对象进行处理。&lt;/p&gt;&lt;h1&gt;8.属性填充&lt;/h1&gt;&lt;p&gt;这个步骤中，就会处理@Autowired、@Resource等注解，也是通过&lt;strong&gt;instantiationAwareBeanPostProcessor.postProcessProperties()&lt;/strong&gt;扩展点来实现的，我们甚至可以实现自定义的自动注入功能，比如：&lt;/p&gt;&lt;pre&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;@Component&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;CustomInstantiationAwareBeanPostProcessor&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;implements&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;InstantiationAwareBeanPostProcessor&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;@Override&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;PropertyValues&lt;/span&gt;&lt;span&gt; postProcessProperties&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;PropertyValues&lt;/span&gt;&lt;span&gt; pvs&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;Object&lt;/span&gt;&lt;span&gt; bean&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;String&lt;/span&gt;&lt;span&gt; beanName&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;throws&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;BeansException&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;&quot;userService&quot;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;equals&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;beanName&lt;/span&gt;&lt;span&gt;))&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;            &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;Field&lt;/span&gt;&lt;span&gt; field &lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; bean&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;getClass&lt;/span&gt;&lt;span&gt;().&lt;/span&gt;&lt;span&gt;getFields&lt;/span&gt;&lt;span&gt;())&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;                &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;field&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;isAnnotationPresent&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;ZhouyuInject&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;))&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;                    field&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;setAccessible&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;                    &lt;/span&gt;&lt;span&gt;try&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;                        field&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;set&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;bean&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;&quot;123&quot;&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;                    &lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;catch&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;IllegalAccessException&lt;/span&gt;&lt;span&gt; e&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;                        e&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;printStackTrace&lt;/span&gt;&lt;span&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;                    &lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;                &lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;            &lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; pvs&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/pre&gt;&lt;h2&gt;@Value实现原理&lt;/h2&gt;&lt;p&gt;@Value可以指定目标bean的名字，如果指定了目标bean的名字，则根据指定的名字从容器中查找到目标表，赋值给@Value注解的属性高。&lt;/p&gt;&lt;h2&gt;@Autowired实现原理&lt;/h2&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;先根据type查找bean&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;检查BeanDefinition的autowireCandidate属性，为true表示通过筛选&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;检查BeanDefinition的beanClass属性是否和当前注入点的type匹配，匹配则通过筛选&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;检查BeanDefinition的qualifier属性是否和当前注入点的qualifier属性匹配，匹配则通过筛选&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;如果第1步没有找到bean&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;如果isRequired为true，直接报错&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;如果isRequired为false，返回null&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;如果第1步找到唯一匹配的bean，直接返回&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;如果第一步找到多个bean&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;从多个bean中选择标注了@Primary注解的Bean，如果有多个bean标注了@Primary会报错&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;如果没有找到标注@Primary的bean，看是否定义了@Priority，如果定义了则获取优先级最高的bean&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;如果没有定义优先级，则根据属性名或方法参数名查找，如果找到了直接返回；如果找不到，且isRequired属性为true，直接报错；否则返回null&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h2&gt;@Resource实现原理&lt;/h2&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;如果@Resource指定了name属性，则只会根据name指定的名称获取bean，如果找不到则报错&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;如果没有指定name属性，则以当前注入点名称（属性名）为名称进行查找，如果找到，直接返回；如果找不到，则根据注入点类型继续查找。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h1&gt;9.执行Aware&lt;/h1&gt;&lt;p&gt;完成了属性赋值之后，Spring会执行一些Aware回调，包括：&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;BeanNameAware：回传beanName给bean对象&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;BeanClassLoaderAware：回传classLoader给bean对象&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;BeanFactoryAware：回传beanFactory给对象&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h1&gt;10.初始化前置处理&lt;/h1&gt;&lt;p&gt;初始化前，也是Spring提供的一个扩展点：&lt;strong&gt;BeanPostProcessor.postProcessBeforeInitialization()&lt;/strong&gt;，利用这个扩展点，可以对进行了依赖注入的Bean进行加工处理。&lt;/p&gt;&lt;p&gt;在Spring中，&lt;strong&gt;InitDestroyAnnotationBeanPostProcessor&lt;/strong&gt;、&lt;strong&gt;ApplicationContextAwareProcessor&lt;/strong&gt;实现了这个扩展点。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;BeanPostProcessor.postProcessBeforeInitialization&lt;/strong&gt;()：执行@PostConstruct标注的方法&lt;/p&gt;&lt;p&gt;&lt;strong&gt;ApplicationContextAwareProcessor.postProcessBeforeInitialization&lt;/strong&gt;：执行其他@Aware的回调&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;EnvironmentAware：回传环境变量&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;EmbeddedValueResolverAware：回传占位符解析器&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;ResourceLoaderAware：回传资源加载器&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;ApplicationEventPublisherAware：回传事件发布器&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;MessageSourceAware：回传国际化资源&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;ApplicationStartupAware：回传应用其他监听对象，可忽略&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;ApplicationContextAware：回传Spring容器ApplicationContext&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h1&gt;11.初始化&lt;/h1&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;查看当前Bean实例对象是否实现了InitializingBean接口 ，如果实现了就调用afterPropertiesSet()方法&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;执行BeanDefinition中指定的初始化方法&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h1&gt;12.初始化后置处理&lt;/h1&gt;&lt;p&gt;这是Bean创建过程中的最后一个步骤，也是Spring提供的一个扩展点：&lt;strong&gt;BeanPostProcessor.postProcessAfterInitialization()&lt;/strong&gt;。&lt;/p&gt;&lt;p&gt;可以在这个步骤中，对Bean进行最终处理，Spring中的AOP就是基于这个扩展点实现的， postProcessAfterInitialization()方法返回的对象才是最终的Bean对象。&lt;/p&gt;&lt;h1&gt;13.注册销毁接口&lt;/h1&gt;&lt;p&gt;Bean的销毁是发生在Spring容器关闭过程中的。&lt;/p&gt;&lt;p&gt;在Bean创建过程中，在初始化后置处理之后，有一个步骤会判断当前创建的Bean是不是DisposableBean：&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;当前Bean是否实现了Disposablebean接口&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;或者，当前Bean是否实现了AutoCloseable接口&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;BeanDefinition中是否指定了destoryMethod&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;是否有被@PreDestory标注的方法&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;把符合上述任意一个条件的Bean适配成DisposableBeanAdapter对象，并存入disposableBeans中(一个LinkedHashMap)&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;在Spring容器关闭时：&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;首先发布ContextClosedEvent事件&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;调用lifecycleProcessor的onClose()方法&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;销毁单例Bean&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;遍历所有disposableBeans，把每个disposableBean从单例池中移除&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;调用disposableBean的destroy方法&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;如果被其他Bean依赖了，销毁其他Bean&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;如果还包含了innerBeans，将这些Bean从单例池中移除掉&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;以上就是我对Spring Bean生命周期源码的粗浅理解，Spring源码博大精深，以上解析未能面面俱到，亦或有错漏之处，欢迎大家批评指正。附赠我自己整理的关于Spring Bean生命周期思维导图链接，欢迎大家按需自取：&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;span&gt;https://www.processon.com/view/link/60bf2df5e0b34d0950a5d052&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;

          
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>8ab1232cb43e3593dab8909a80b74caa</guid>
<title>独立开发变现周刊（第75期）：我的 SaaS 模板代码库每月赚 4 千美元</title>
<link>https://toutiao.io/k/ef49oxe</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;markdown-body-box nuxt-content&quot;&gt;&lt;h1 id=&quot;独立开发变现周刊第75期我的saas模板代码库每月赚4千美元&quot;&gt;&lt;a href=&quot;#%E7%8B%AC%E7%AB%8B%E5%BC%80%E5%8F%91%E5%8F%98%E7%8E%B0%E5%91%A8%E5%88%8A%E7%AC%AC75%E6%9C%9F%E6%88%91%E7%9A%84saas%E6%A8%A1%E6%9D%BF%E4%BB%A3%E7%A0%81%E5%BA%93%E6%AF%8F%E6%9C%88%E8%B5%9A4%E5%8D%83%E7%BE%8E%E5%85%83&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;span class=&quot;icon icon-link&quot;/&gt;&lt;/a&gt;独立开发变现周刊（第75期）：我的SaaS模板代码库每月赚4千美元&lt;/h1&gt;
&lt;p&gt;分享独立开发、产品变现相关内容，每周五发布。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;目录&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1、html2canvas: 使用JavaScript网页截图&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;2、Ezindie: 明星产品的开源替代项目&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;3、Sidekick: 一个让你变的专注的生产力浏览器桌面应用&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;4、我的SaaS模板开发套件每月赚4千美元&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;1html2canvas-使用javascript网页截图&quot;&gt;&lt;a href=&quot;#1html2canvas-%E4%BD%BF%E7%94%A8javascript%E7%BD%91%E9%A1%B5%E6%88%AA%E5%9B%BE&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;span class=&quot;icon icon-link&quot;/&gt;&lt;/a&gt;1、html2canvas: 使用JavaScript网页截图&lt;/h2&gt;
&lt;p&gt;这是一个开源JS库，Github上有26K的Star，允许你直接在用户浏览器上对网页或部分网页进行“截屏”。截图是基于DOM的，因此可能不是100%准确的真实表示，因为它不制作实际的截图，而是基于页面上可用的信息构建截图。&lt;/p&gt;
&lt;p&gt;它不需要来自服务器的任何渲染，因为整个图像是在客户机的浏览器上创建的。但是，由于它严重依赖浏览器，这个库不适合在nodejs中使用。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://tva1.sinaimg.cn/large/008vxvgGly1h72uzteb4xj31t00u0dla.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/niklasvh/html2canvas&quot; rel=&quot;nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;html2canvas开源地址&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;2ezindie-明星产品的开源替代项目&quot;&gt;&lt;a href=&quot;#2ezindie-%E6%98%8E%E6%98%9F%E4%BA%A7%E5%93%81%E7%9A%84%E5%BC%80%E6%BA%90%E6%9B%BF%E4%BB%A3%E9%A1%B9%E7%9B%AE&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;span class=&quot;icon icon-link&quot;/&gt;&lt;/a&gt;2、Ezindie: 明星产品的开源替代项目&lt;/h2&gt;
&lt;p&gt;市场上有很多优秀的产品，同时开源代码里也有类似产品的开源替代，这些开源项目能帮我们快速的实现产品。所以我整理了一些知名产品的开源替代项目，放到的ezindie网站上，今后如果有类似产品的需求，可以及时参考。这个集合页面会不断更新迭代。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://tva1.sinaimg.cn/large/008vxvgGly1h72uzwcs5hj30u01bdtd5.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.ezindie.com/open-source-alternative&quot; rel=&quot;nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Ezindie的开源项目替代&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;3sidekick-一个让你变的专注的生产力浏览器桌面应用&quot;&gt;&lt;a href=&quot;#3sidekick-%E4%B8%80%E4%B8%AA%E8%AE%A9%E4%BD%A0%E5%8F%98%E7%9A%84%E4%B8%93%E6%B3%A8%E7%9A%84%E7%94%9F%E4%BA%A7%E5%8A%9B%E6%B5%8F%E8%A7%88%E5%99%A8%E6%A1%8C%E9%9D%A2%E5%BA%94%E7%94%A8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;span class=&quot;icon icon-link&quot;/&gt;&lt;/a&gt;3、Sidekick: 一个让你变的专注的生产力浏览器桌面应用&lt;/h2&gt;
&lt;p&gt;Sidekick是一款面向知识工作者的生产力浏览器。是Mac上的一款桌面端应用，它集成了所有的web应用程序，以帮助保持组织和高效，同时加快你的工作流程。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://tva1.sinaimg.cn/large/008vxvgGly1h72uzw4xxwj31sm0rsn1i.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;消除标签混乱：会话帮助你分组，保存和打开标签，而不混乱。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://tva1.sinaimg.cn/large/008vxvgGly1h72uzvy21dj31320ogwhr.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;多账户帮助您在Gmail、Slack、concept和messenger中的不同账户之间跳转，而无需注销。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://tva1.sinaimg.cn/large/008vxvgGly1h72uzvr0ymj313i0pmacx.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.meetsidekick.com/&quot; rel=&quot;nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Sikekick官网&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;4我的saas模板开发套件每月赚4千美元&quot;&gt;&lt;a href=&quot;#4%E6%88%91%E7%9A%84saas%E6%A8%A1%E6%9D%BF%E5%BC%80%E5%8F%91%E5%A5%97%E4%BB%B6%E6%AF%8F%E6%9C%88%E8%B5%9A4%E5%8D%83%E7%BE%8E%E5%85%83&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;span class=&quot;icon icon-link&quot;/&gt;&lt;/a&gt;4、我的SaaS模板开发套件每月赚4千美元&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://tva1.sinaimg.cn/large/008vxvgGly1h72uzvnhz8j309y09y74n.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Hi, 我是Alexandro，墨西哥人，我正在开发SaasRock，具有开箱即用的功能，如认证、订阅、验证、事件和Webhooks、定价计划构建器、博客、权限等。使用Remix、Tailwind CSS和Prisma构建，并与Stripe的支付功能、Postmark的邮件功能和Zapier的Webhooks功能进行了很好的集成。托管在Vercel上，使用Supabase作为数据库。&lt;/p&gt;
&lt;p&gt;我的目标用户是全栈开发人员和低代码工程师，他们希望用强大的初始代码库快速构建SaaS应用。&lt;/p&gt;
&lt;p&gt;SaasRock目前的月收入为4380美元。我在今年3月19日开始开发，并在6月1日进行了预发布。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://tva1.sinaimg.cn/large/008vxvgGly1h72uzvk96oj30nm0fijsm.jpg&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;你是怎么想到这个想法的&quot;&gt;&lt;a href=&quot;#%E4%BD%A0%E6%98%AF%E6%80%8E%E4%B9%88%E6%83%B3%E5%88%B0%E8%BF%99%E4%B8%AA%E6%83%B3%E6%B3%95%E7%9A%84&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;span class=&quot;icon icon-link&quot;/&gt;&lt;/a&gt;你是怎么想到这个想法的?&lt;/h3&gt;
&lt;p&gt;我是C#的开发人员，工作了8年，但我想开始构建web应用程序，所以我学习了Vue2，为我的客户建立了两个网站。&lt;/p&gt;
&lt;p&gt;我喜欢前端的Vue和后端的 .NET，所以我建立了一个叫做NetcoreSaas的样板，一个基于 .NET、Vue和Tailwind CSS的SaaS代码库。我在AppSumo上发布了这款模板，总共获得了大约50名用户。&lt;/p&gt;
&lt;p&gt;但我觉得我的开发可以更快，于是将Vue2应用迁移到Vue3，然后是React，然后是slvelte。结果是相同的样板，但有不同的前端，我称之为saasfrontend。过了一段时间，我从中赚到了765美元。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://tva1.sinaimg.cn/large/008vxvgGly1h72uzvh99mj30nm06yt9b.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;然后我发现了Remix，一个专注于web标准的全栈JavaScript框架。我立刻意识到这是一个完美的解决方案，所以我在7天内构建了“the Remix SaaS kit”(现在的SaasRock)的v0.0.1版本，并在24小时内免费提供。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://tva1.sinaimg.cn/large/008vxvgGly1h72uzvd764j30nm0xi41q.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;这条推文很受欢迎，因为Remix团队转发了它，我获得了超过1000次的下载:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://tva1.sinaimg.cn/large/008vxvgGly1h72uzv8qbdj30nm0egwgl.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;在这一点上，我决定开源其他SaaS套件，并专注于SaasRock。&lt;/p&gt;
&lt;h3 id=&quot;描述下启动业务的过程&quot;&gt;&lt;a href=&quot;#%E6%8F%8F%E8%BF%B0%E4%B8%8B%E5%90%AF%E5%8A%A8%E4%B8%9A%E5%8A%A1%E7%9A%84%E8%BF%87%E7%A8%8B&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;span class=&quot;icon icon-link&quot;/&gt;&lt;/a&gt;描述下启动业务的过程&lt;/h3&gt;
&lt;p&gt;所有这些都是我自己启动的。我为saasrock的域名支付了大约300美元，为logo支付了250美元(我没有使用)，为托管+数据库支付了70美元/月。&lt;/p&gt;
&lt;p&gt;这是网站第一次发布时的样子:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://tva1.sinaimg.cn/large/008vxvgGly1h72uzv4aj2j30nm0cbab2.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;这是它现在的样子:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://tva1.sinaimg.cn/large/008vxvgGly1h72uzv16prj30nm0djjsk.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;对于每个网站我发布我需要:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;购买一个域名&lt;/li&gt;
&lt;li&gt;创建Stripe帐户&lt;/li&gt;
&lt;li&gt;创建一个邮戳服务器&lt;/li&gt;
&lt;li&gt;创建一个Gmail帐户谷歌工作区与我的域&lt;/li&gt;
&lt;li&gt;创建一个Twitter账户&lt;/li&gt;
&lt;li&gt;创建一个Instagram账号&lt;/li&gt;
&lt;li&gt;创建一个自定义标志和插图Canva&lt;/li&gt;
&lt;li&gt;使用Cloudflare设置域&lt;/li&gt;
&lt;li&gt;将我的代码提交到私有的GitHub存储库&lt;/li&gt;
&lt;li&gt;创建Supabase数据库服务器&lt;/li&gt;
&lt;li&gt;部署到Vercel&lt;/li&gt;
&lt;li&gt;在IH、Medium、Dev.to、HN、hashnode和LinkedIn上发表博文&lt;/li&gt;
&lt;li&gt;在twitter上发布博文&lt;/li&gt;
&lt;li&gt;使用ConvertKit发送我的通讯订阅博客文章&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;主要有3个阶段:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第一阶段:免费24小时 - 3月28日&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;对于v0.0.1，我获得了大约1000个gumroad“客户”(每人0美元)，我的手机通知一直响个不停。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://tva1.sinaimg.cn/large/008vxvgGly1h72uzuxkk2j30nm0f0di2.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;最终结果:1066人下载了Remix SaaS套件v0.0.1。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://tva1.sinaimg.cn/large/008vxvgGly1h72uzurkn1j30nm1cdgqs.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第二阶段:Remix SaaS套件 — 3月29日 — 299美元&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;第二天，我将口gumroad的价格从0美元调整到299美元。第一天，我得到了2个客户，第二天又有一个客户，到4月底，我得到了19个客户，总计3063美元(我给几乎所有要求的人都提供了折扣)。&lt;/p&gt;
&lt;p&gt;April Remix SaaS套件客户:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://tva1.sinaimg.cn/large/008vxvgGly1h72uzuibo9j30nm19djuj.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Remix SaaS套件的整体分析:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://tva1.sinaimg.cn/large/008vxvgGly1h72uzucc86j30nm0qp408.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;在这个阶段，我遇到了我的产品/营销导师和朋友Chris Kluis。他主动提出帮助我编写样板，因为他对SaaS应用程序很感兴趣。他指出了两件事:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;找到一个与Remix脱钩的域名，并新域名做发布&lt;/li&gt;
&lt;li&gt;每月从299美元改为99美元。&lt;/li&gt;
&lt;li&gt;于是我把它命名为saasrock.com。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;第三阶段：SaasRock发布前 — 6月1日 — 99美元/月&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在发布前，Chris和我决定推出一个核心版和一个企业版。&lt;/p&gt;
&lt;p&gt;$99/m:构建SaaS所需的一切。
$149/m:核心+企业功能:单点登录，附属+推荐，HelpDesk…&lt;/p&gt;
&lt;p&gt;在推出saasrock.com两天之后，我获得了第一个99美元的订阅者。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://tva1.sinaimg.cn/large/008vxvgGly1h72uzu8xhkj30nm0jw75c.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;截至9月15日，也就是发行前的3个月，我已经拥有69名用户，并获得了8000美元的收益。虽然还不足以让你全职工作，但足以让你知道Remix SaaS样板的市场是有潜力的。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://tva1.sinaimg.cn/large/008vxvgGly1h72uzu36yvj30nm0hwjsl.jpg&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;自推出以来是什么有效地吸引和留住了客户&quot;&gt;&lt;a href=&quot;#%E8%87%AA%E6%8E%A8%E5%87%BA%E4%BB%A5%E6%9D%A5%E6%98%AF%E4%BB%80%E4%B9%88%E6%9C%89%E6%95%88%E5%9C%B0%E5%90%B8%E5%BC%95%E5%92%8C%E7%95%99%E4%BD%8F%E4%BA%86%E5%AE%A2%E6%88%B7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;span class=&quot;icon icon-link&quot;/&gt;&lt;/a&gt;自推出以来，是什么有效地吸引和留住了客户?&lt;/h3&gt;
&lt;p&gt;启动Discord是关键。通过这种方式，围绕SaasRock的社区正在成长，每个人都在分享他们对SaasRock应该往何处发展的想法。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://tva1.sinaimg.cn/large/008vxvgGly1h72uztzkx4j30nm0nmabd.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;另外，得到关于我和产品的反馈和好评会让我有动力去回馈!&lt;/p&gt;
&lt;p&gt;排名前三的话题是:&lt;/p&gt;
&lt;p&gt;#general - 我会让每个人都知道我现在在做什么，以及我接下来要做什么。&lt;/p&gt;
&lt;p&gt;#反馈 - 成员们会通知我他们遇到的错误并反馈他们的问题，有时他们互相帮助是如此的高兴。&lt;/p&gt;
&lt;p&gt;#enterprise - 我们谈论即将到来的企业功能。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://tva1.sinaimg.cn/large/008vxvgGly1h72uztuwuwj30nm0futa9.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;总的来说，我认为discord服务可以让我在建立社区的同时与终端用户保持联系，这对SaasRock的前景来说是一个很好的证明。&lt;/p&gt;
&lt;h3 id=&quot;通过创业你学到了什么特别有用的东西吗&quot;&gt;&lt;a href=&quot;#%E9%80%9A%E8%BF%87%E5%88%9B%E4%B8%9A%E4%BD%A0%E5%AD%A6%E5%88%B0%E4%BA%86%E4%BB%80%E4%B9%88%E7%89%B9%E5%88%AB%E6%9C%89%E7%94%A8%E7%9A%84%E4%B8%9C%E8%A5%BF%E5%90%97&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;span class=&quot;icon icon-link&quot;/&gt;&lt;/a&gt;通过创业，你学到了什么特别有用的东西吗?&lt;/h3&gt;
&lt;p&gt;优秀的编码是不够的。我认为最好的营销策略是“打造高质量的产品，顾客就会来”。我意识到我需要尝试所有我能想到的策略: 每隔一天推特、YouTube视频和博客帖子。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://tva1.sinaimg.cn/large/008vxvgGly1h72uztqndmj30nm0ebabd.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;我的营销策略的关键是一切都是相互联系的。我创建了一个功能，我把它添加到更新日志中，我创建了一篇关于它的博客文章，我把我的想法发在推特上，我发布一个YouTube视频解释如何使用它。所以现在，对于我创建的每个功能，我都有一个:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Blog:IH, Dev.to, Medium, Hashnode, LinkedIn和我的博客。&lt;/li&gt;
&lt;li&gt;YouTube视频&lt;/li&gt;
&lt;li&gt;推特&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;重点是开始写你喜欢做的事情，&lt;strong&gt;这样你就可以围绕它建立一个系统。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://tva1.sinaimg.cn/large/008vxvgGly1h72uztko5rj30nm0b0q47.jpg&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;对其他想要起步的开发者有什么建议&quot;&gt;&lt;a href=&quot;#%E5%AF%B9%E5%85%B6%E4%BB%96%E6%83%B3%E8%A6%81%E8%B5%B7%E6%AD%A5%E7%9A%84%E5%BC%80%E5%8F%91%E8%80%85%E6%9C%89%E4%BB%80%E4%B9%88%E5%BB%BA%E8%AE%AE&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;span class=&quot;icon icon-link&quot;/&gt;&lt;/a&gt;对其他想要起步的开发者有什么建议?&lt;/h3&gt;
&lt;p&gt;开始行动，经验比天赋更重要。&lt;/p&gt;
&lt;p&gt;我害怕开设一个youtube频道，因为我需要频繁地发布内容:&lt;/p&gt;
&lt;p&gt;1)我担心会失去质量，&lt;/p&gt;
&lt;p&gt;2)我担心不会说英语。&lt;/p&gt;
&lt;p&gt;我一开始没有发布长视频，而是在Twitter上分享了Loom的短视频。&lt;/p&gt;
&lt;p&gt;慢慢的，我开始获得信心，在两个月后，我开始了SaasRock的youtube频道，这最终成为我在这个项目中做出的最好的决定之一，因为它使我保持进度和动力。&lt;/p&gt;
&lt;p&gt;本次周刊结束，欢迎大家投稿，我们下周见！&lt;/p&gt;&lt;/div&gt; &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>0f53b07e3c44a6fc14031ebae695f128</guid>
<title>优质网站同好者周刊（第 087 期） | 倾城博客</title>
<link>https://toutiao.io/k/v2kryea</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;content&quot;&gt;&lt;p&gt;&lt;a href=&quot;https://nicelinks.site/?utm_source=weekly&quot;&gt;倾城之链&lt;/a&gt;作为一个开放平台，旨在云集全球&lt;strong&gt;优秀网站&lt;/strong&gt;，探索互联网中更广阔的世界。此周刊，将汇聚过去一周&lt;a href=&quot;https://nicelinks.site/?utm_source=weekly&quot;&gt;倾城&lt;/a&gt;所收录的内容，以飨同好；欢迎推荐或自荐（仅限有独立域名的网站，可以是二级域名）。您如果要了解收录要求，请参见&lt;a href=&quot;https://nicelinks.site/about?utm_source=weekly&quot;&gt;关于倾城&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;备注&lt;/strong&gt;：本周刊&lt;strong&gt;每周五&lt;/strong&gt;生成，首发于个人微信公众号&lt;a href=&quot;https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzI5MDIwMzM2Mg==&amp;amp;action=getalbum&amp;amp;album_id=1530765143352082433&amp;amp;scene=173&amp;amp;from_msgid=2650641087&amp;amp;from_itemidx=1&amp;amp;count=3#wechat_redirect&quot;&gt;晚晴幽草轩&lt;/a&gt;、博客&lt;a href=&quot;https://www.jeffjade.com&quot;&gt;晚晴幽草轩&lt;/a&gt;，以及&lt;a href=&quot;https://forum.lovejade.cn/&quot;&gt;悠然宜想亭&lt;/a&gt;社区；此一键生成脚本基于 &lt;a href=&quot;https://nicelinks.site/post/602d30aad099ff5688618591&quot;&gt;Deno&lt;/a&gt; 编写，并在 Github 开源：&lt;a href=&quot;https://github.com/nicejade/nicelinks-weekly&quot;&gt;nicejade/nicelinks-weekly&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/%E8%AE%BE%E8%AE%A1&quot;&gt;&lt;code&gt;设计&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E5%9B%BE%E7%89%87&quot;&gt;&lt;code&gt;图片&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/AI&quot;&gt;&lt;code&gt;AI&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;A graphic design app that helps you create professional quality social media posts, invitations, digital postcards, graphics, and more. Start with your idea and create something unique for you.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/designer.microsoft.com.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 - Microsoft Designer - Stunning designs in a flash&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/redirect?url=https://designer.microsoft.com/&quot;&gt;Microsoft Designer&lt;/a&gt;，一个图形设计应用程序（微软将要「相对于 2022/10/13」推出的设计工具），帮助您创建专业质量的社交媒体帖子、邀请函、数字明信片、图形和更多。从你的想法开始，为您创造独特的东西。只需要输入一个描述或者简单的想法，然后看着你的内容转变（Content Transform）及选择最爱的设计即可，官网称整个过程在瞬间完成（期待）。除此之外，Microsoft Designer 还提及以下功能特征：&lt;/p&gt;&lt;h3 id=&quot;为您的设计创建独一无二的图像&quot;&gt;&lt;a href=&quot;#%E4%B8%BA%E6%82%A8%E7%9A%84%E8%AE%BE%E8%AE%A1%E5%88%9B%E5%BB%BA%E7%8B%AC%E4%B8%80%E6%97%A0%E4%BA%8C%E7%9A%84%E5%9B%BE%E5%83%8F&quot; aria-label=&quot;为您的设计创建独一无二的图像 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;为您的设计创建独一无二的图像&lt;/h3&gt;&lt;p&gt;只需要为你喜欢的图片添加描述，Microsoft Designer 将会在瞬间为您生成；&lt;/p&gt;&lt;h3 id=&quot;获得您正在寻找的灵感&quot;&gt;&lt;a href=&quot;#%E8%8E%B7%E5%BE%97%E6%82%A8%E6%AD%A3%E5%9C%A8%E5%AF%BB%E6%89%BE%E7%9A%84%E7%81%B5%E6%84%9F&quot; aria-label=&quot;获得您正在寻找的灵感 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;获得您正在寻找的灵感&lt;/h3&gt;&lt;p&gt;只需要添加或删除描述内容，便能从 引人注目（Attention-grabbing）的设计中获取灵感；&lt;/p&gt;&lt;h3 id=&quot;designer-让您的内容脱颖而出&quot;&gt;&lt;a href=&quot;#designer-%E8%AE%A9%E6%82%A8%E7%9A%84%E5%86%85%E5%AE%B9%E8%84%B1%E9%A2%96%E8%80%8C%E5%87%BA&quot; aria-label=&quot;designer 让您的内容脱颖而出 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;Designer 让您的内容脱颖而出&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;拥有超过 1 亿张图像和视频，可提供更高质量的视觉效果；&lt;/li&gt;&lt;li&gt;动态图形使您的设计更具吸引力；&lt;/li&gt;&lt;li&gt;直接发布到您的社交网站或发送到您的手机以快速分享；&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Microsoft Designer 目前尚未发布，您可以加入候补名单以提前使用它；站在内容创作者视角，来看它的官网描述及视频介绍，这款应用挺值得尝试，尤其是使用动态图形（当然，目前类似产品较多，效果一般）；期待微软的「&lt;strong&gt;设计&lt;/strong&gt;」。&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/63480c16b1155e08ebc00736&quot;&gt;倾城之链 - Microsoft Designer - Stunning designs in a flash&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/Git&quot;&gt;&lt;code&gt;Git&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E5%BC%80%E6%BA%90&quot;&gt;&lt;code&gt;开源&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E5%85%8D%E8%B4%B9&quot;&gt;&lt;code&gt;免费&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Git is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/git-scm.com.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 - Git | 分布式版本控制软件&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/redirect?url=https://git-scm.com/&quot;&gt;Git&lt;/a&gt; 是一个免费和开源的分布式版本控制系统，旨在以速度和效率处理从小型到大型项目的所有内容。它最初由 Linus Torvalds（林纳斯·托瓦兹） 创作，于 2005 年以 GPL 授权条款释出；最初目的是为了更好地管理 Linux 核心开发而设计。&lt;/p&gt;&lt;p&gt;分布式相比于集中式的最大区别在于开发者可以提交到本地，每个开发者通过克隆（git clone），在本地机器上拷贝一个完整的 Git 仓库。 Git 易于学习， 占用空间小，性能快如闪电。它优于 SCM 工具，如 Subversion、CVS、Perforce 和 ClearCase，具有廉价的本地分支、方便的暂存区域和 多个工作流等功能。&lt;/p&gt;&lt;p&gt;Git 命名：git &quot;这个名字是 Linus Torvalds 在写第一个版本时起的。他把这个工具描述为 &quot;愚蠢的内容跟踪器&quot;，而这个名字是（取决于你的方式）：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;可以发音念出的随机三个字母组合，而且实际上没有任何常见的 UNIX 命令使用。它是 &quot;get &quot;的错误发音这一事实可能与此有关，也可能无关。&lt;/li&gt;&lt;li&gt;&quot;全球信息跟踪器&quot;：你的心情很好，而且它确实对你有用。天使在歌唱，一束光突然充满了整个房间。&lt;/li&gt;&lt;li&gt;愚蠢的、鄙视和卑鄙的、简单。从俚语（英式英语）字典中选择。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;主要功能&lt;/strong&gt;：Git 是用于 Linux 核心开发的版本控制工具。与 CVS、Subversion 一类的集中式版本控制工具不同，它采用了&lt;strong&gt;分散式版本库&lt;/strong&gt;的作法，不需要伺服器端软体，就可以运作版本控制，使得原始码的释出和交流极其方便。git 的速度很快，这对于诸如 Linux 核心这样的大专案来说自然很重要。git 最为出色的是它的合并追踪（merge tracing）能力。&lt;/p&gt;&lt;p&gt;&lt;code&gt;Git&lt;/code&gt;，当今开发者必备工具；它的入门非常简单，但想熟练掌握，又需狠下功夫；如果您有这个需要，&lt;a href=&quot;https://learngitbranching.js.org/&quot;&gt;Learn Git Branching&lt;/a&gt; 是一个很棒的学习网站。值得一提的是，Git 还衍生出非常多产品，诸如： &lt;a href=&quot;https://nicelinks.site/post/59ba80d93df6765c75b77911&quot;&gt;GitHub&lt;/a&gt;、&lt;a href=&quot;https://nicelinks.site/post/5f86ec6ecda9de27bd93a925&quot;&gt;Gitee&lt;/a&gt;、&lt;a href=&quot;https://nicelinks.site/post/61a781e7465c2155e2d1588e&quot;&gt;gitmoji&lt;/a&gt; 等等。&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/6347f81ab1155e08ebc005c7&quot;&gt;倾城之链 - Git | 分布式版本控制软件&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2&quot;&gt;&lt;code&gt;个人博客&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E7%A8%8B%E5%BA%8F%E5%91%98&quot;&gt;&lt;code&gt;程序员&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E6%84%9F%E8%AE%B0&quot;&gt;&lt;code&gt;感记&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;六个周的博客&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/blog.liugezhou.online.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 - 六个周 | enjoy day&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/redirect?url=https://blog.liugezhou.online/&quot;&gt;六个周&lt;/a&gt;，基于 &lt;a href=&quot;https://nicelinks.site/post/5c4c56d5a5957e07a40b3116&quot;&gt;Hexo&lt;/a&gt; 搭建的个人博客（2018 年 07 月 11）；用以承载作者技术总结、所读之书、看过的电影等等。作者在个人主页介绍到：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;第一爱好：&lt;strong&gt;有酒必到&lt;/strong&gt;（Wow😯，撰写推荐语者感叹）；&lt;/li&gt;&lt;li&gt;日常喜好：写代码、背单词、看电影  、喝鸡汤  、写周报  、突发奇想‘&lt;/li&gt;&lt;li&gt;正在培养：读书、学英语、写读后感、跑步；&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;作者（六个周）撰写博文，包含小程序开发、服务端开发、Web 前端开发等领域，对其感兴趣的朋友，可以前往&lt;a href=&quot;https://nicelinks.site/redirect?url=https://blog.liugezhou.online/about/&quot;&gt;六个周关于页&lt;/a&gt;以了解更多。&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/6347c0bbb1155e08ebc00244&quot;&gt;倾城之链 - 六个周 | enjoy day&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/%E7%8B%AC%E7%AB%8B%E5%BC%80%E5%8F%91%E8%80%85&quot;&gt;&lt;code&gt;独立开发者&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E7%A4%BE%E5%8C%BA&quot;&gt;&lt;code&gt;社区&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E5%88%86%E4%BA%AB&quot;&gt;&lt;code&gt;分享&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;「w2solo.com」独立开发者社区，始于 2018.10，由众多独立开发者维护，致力于搭建和维护好国内独立开发者圈子和氛围。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/w2solo.com.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 - w2solo - 独立开发者社区 IndieHackers - 连接每一个独立开发者&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/redirect?url=https://w2solo.com/&quot;&gt;w2solo - 独立开发者社区&lt;/a&gt;， 基于 &lt;a href=&quot;https://nicelinks.site/redirect?url=https://w2solo.com/&quot;&gt;Homeland&lt;/a&gt; 搭建（2018 年 10 月），由众多&lt;a href=&quot;https://nicelinks.site/tags/https://w2solo.com/topics/1&quot;&gt;独立开发者&lt;/a&gt;参与维护，致力于搭建和维护好国内独立开发者圈子和氛围（社群官网域名：&lt;code&gt;w2solo.com&lt;/code&gt; 意思是：way to solo，独立开发之路）。&lt;code&gt;w2solo&lt;/code&gt; 欢迎讨论技术、想法创意、产品和成功故事以及失败经验，并倡导遵守以下要求：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;分享点子，集思广益；&lt;/li&gt;&lt;li&gt;发布和推广自己的产品；&lt;/li&gt;&lt;li&gt;做好自己，鼓励别人；&lt;/li&gt;&lt;li&gt;话题要与独立开发、自由职业相关；&lt;/li&gt;&lt;li&gt;倡导有正向价值的产品；&lt;/li&gt;&lt;li&gt;互相尊重，尊重隐私；&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;如果您是独立开发者，或自由开发者（Freelancer），可以前往 w2solo 社区：提出您的创意、推广您的产品，或分享心得感悟。需要说明的是，w2solo 社区为防止滥发帖子，注册前三天不允许发帖，望知悉。&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/6346dbddb1155e08ebbffb2f&quot;&gt;倾城之链 - w2solo - 独立开发者社区 IndieHackers - 连接每一个独立开发者&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/%E5%91%BD%E4%BB%A4%E8%A1%8C&quot;&gt;&lt;code&gt;命令行&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E7%BB%88%E7%AB%AF&quot;&gt;&lt;code&gt;终端&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E4%BA%A7%E5%93%81&quot;&gt;&lt;code&gt;产品&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;A smart and user-friendly command line shell&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/fishshell.com.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 - fish shell&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/redirect?url=https://fishshell.com/&quot;&gt;fish shell&lt;/a&gt; ，一个智能和用户友好的命令行外壳（Cli Shell），适用于 Linux、macOS、Windows 和其他系统。它具有以下功能特征：&lt;/p&gt;&lt;h3 id=&quot;自动建议&quot;&gt;&lt;a href=&quot;#%E8%87%AA%E5%8A%A8%E5%BB%BA%E8%AE%AE&quot; aria-label=&quot;自动建议 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;自动建议&lt;/h3&gt;&lt;p&gt;自动建议缩略图 fish 在您键入时根据历史记录和完成建议命令，就像 Web 浏览器一样。当心，Netscape Navigator 4.0！&lt;/p&gt;&lt;h3 id=&quot;绚丽的-vga-颜色&quot;&gt;&lt;a href=&quot;#%E7%BB%9A%E4%B8%BD%E7%9A%84-vga-%E9%A2%9C%E8%89%B2&quot; aria-label=&quot;绚丽的 vga 颜色 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;绚丽的 VGA 颜色&lt;/h3&gt;&lt;p&gt;颜色缩略图 fish 支持 24 位真彩色，终端技术最先进。看那等宽的彩虹。&lt;/p&gt;&lt;h3 id=&quot;健全的脚本&quot;&gt;&lt;a href=&quot;#%E5%81%A5%E5%85%A8%E7%9A%84%E8%84%9A%E6%9C%AC&quot; aria-label=&quot;健全的脚本 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;健全的脚本&lt;/h3&gt;&lt;p&gt;脚本缩略图 fish 是完全可编写脚本的，其语法简单、干净且一致。你再也不会写 esac 了。&lt;/p&gt;&lt;h3 id=&quot;基于网络的配置&quot;&gt;&lt;a href=&quot;#%E5%9F%BA%E4%BA%8E%E7%BD%91%E7%BB%9C%E7%9A%84%E9%85%8D%E7%BD%AE&quot; aria-label=&quot;基于网络的配置 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;基于网络的配置&lt;/h3&gt;&lt;p&gt;网络配置缩略图对于那些拥有图形计算机的幸运儿，您可以设置颜色并查看函数、变量和历史记录，所有这些都可以从 网页中进行。&lt;/p&gt;&lt;h3 id=&quot;手册页完成&quot;&gt;&lt;a href=&quot;#%E6%89%8B%E5%86%8C%E9%A1%B5%E5%AE%8C%E6%88%90&quot; aria-label=&quot;手册页完成 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;手册页完成&lt;/h3&gt;&lt;p&gt;手册页完成缩略图其他 shell 支持可编程完成，但只有 fish 通过解析您安装的手册页来自动生成它们。&lt;/p&gt;&lt;h3 id=&quot;开箱即用&quot;&gt;&lt;a href=&quot;#%E5%BC%80%E7%AE%B1%E5%8D%B3%E7%94%A8&quot; aria-label=&quot;开箱即用 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;开箱即用&lt;/h3&gt;&lt;p&gt;开箱即用缩略图 fish 会让你高兴的功能，如制表符补全和语法高亮，这些功能都可以正常工作，无需学习或配置任何新内容。&lt;/p&gt;&lt;p&gt;Fish，最后，一个 90 年代的命令行 shell；它的安装与使用都非常的简单；即便后续涌现了非常多 Shell 工具，诸如：&lt;code&gt;bash&lt;/code&gt;、&lt;code&gt;zsh&lt;/code&gt;、&lt;a href=&quot;https://nicelinks.site/post/61f2984c68ba114abbae6037&quot;&gt;Fig&lt;/a&gt; 等，但 Fish 在很多极客程序员心中，绝对占有一席之地；如果您需要经常操控 Terminal（终端），Fish 想必会得到您的青睐。&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/63456d1abbfa9424bf721d6b&quot;&gt;倾城之链 - fish shell&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/%E5%B9%BF%E5%91%8A&quot;&gt;&lt;code&gt;广告&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E7%BB%9F%E8%AE%A1&quot;&gt;&lt;code&gt;统计&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E7%A4%BE%E4%BA%A4&quot;&gt;&lt;code&gt;社交&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;关键字&lt;/strong&gt;：万维广告, 广告联盟, 万维广告联盟, 买广告, 出售广告, 社交广告, 广告主, 流量主, DSP, SSP, B2B 广告&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;广告可以更简单，优雅，且有效 ~ 万维广告致力于帮助中国的 to B 企业轻松投放更精准且友好的广告。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/wwads.cn.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 - 万维广告&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：万维广告，旨在帮助中国的 to B 企业轻松投放更精准 &amp;amp; 友好的广告平台。&lt;strong&gt;让您的广告简单优雅且有效&lt;/strong&gt;，从创业团队到财富 500 强，都在使用万维广告触达专业受众，建立品牌并获取销售线索。它具有以下功能特色：&lt;/p&gt;&lt;h3 id=&quot;-隐私为先&quot;&gt;&lt;a href=&quot;#-%E9%9A%90%E7%A7%81%E4%B8%BA%E5%85%88&quot; aria-label=&quot; 隐私为先 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;🎭 隐私为先&lt;/h3&gt;&lt;p&gt;万维广告 &lt;a href=&quot;https://wwads.cn/page/end-user-privacy&quot;&gt;尊重并保护各个网站最终用户的隐私&lt;/a&gt; ，不会也不准备给用户打标签做广告推荐系统。&lt;/p&gt;&lt;h3 id=&quot;-广告可以更简单优雅&quot;&gt;&lt;a href=&quot;#-%E5%B9%BF%E5%91%8A%E5%8F%AF%E4%BB%A5%E6%9B%B4%E7%AE%80%E5%8D%95%E4%BC%98%E9%9B%85&quot; aria-label=&quot; 广告可以更简单优雅 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;💃 广告可以更简单优雅&lt;/h3&gt;&lt;p&gt;万维广告的 「 &lt;a href=&quot;https://wwads.cn/secret/friendly-wwads-released/&quot;&gt;非侵入式广告&lt;/a&gt; 」文案简单，样式优雅，更加尊重网站最终用户的观感和体验，保护您的品牌形象。&lt;/p&gt;&lt;h3 id=&quot;-广告还可以更有效&quot;&gt;&lt;a href=&quot;#-%E5%B9%BF%E5%91%8A%E8%BF%98%E5%8F%AF%E4%BB%A5%E6%9B%B4%E6%9C%89%E6%95%88&quot; aria-label=&quot; 广告还可以更有效 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;🎯 广告还可以更有效&lt;/h3&gt;&lt;p&gt;「受众群广告」精准定向专业人士，还支持 插入变量 和 页面话题定位，提升广告投放精准度和您的广告投资回报率。&lt;/p&gt;&lt;h3 id=&quot;-不浪费一毛钱的广告费&quot;&gt;&lt;a href=&quot;#-%E4%B8%8D%E6%B5%AA%E8%B4%B9%E4%B8%80%E6%AF%9B%E9%92%B1%E7%9A%84%E5%B9%BF%E5%91%8A%E8%B4%B9&quot; aria-label=&quot; 不浪费一毛钱的广告费 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;💸 不浪费一毛钱的广告费&lt;/h3&gt;&lt;p&gt;广告主可免费使用「 &lt;a href=&quot;https://wwads.cn/for/analytics&quot;&gt;万维广告互动统计服务&lt;/a&gt; 」，还可以统计转化次数，并针对转化进行投放优化。&lt;/p&gt;&lt;h3 id=&quot;背景初衷&quot;&gt;&lt;a href=&quot;#%E8%83%8C%E6%99%AF%E5%88%9D%E8%A1%B7&quot; aria-label=&quot;背景初衷 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;背景初衷&lt;/h3&gt;&lt;p&gt;互联网广告的销售和购买，一直是千万广告主和流量主的痛点——很多优质流量主没有匹配到合适的广告主，同样，很多优质的广告主，没有找到合适的流量主；特别是面向利基市场的广告主，如 To B，To D（Developers/Designers) 行业由面临着小众，无法精准投放到目标人群等问题。即使广告主成功找到一家流量主，也会面临无第三方监督和担保，传统广告交易流程繁琐等问题。&lt;/p&gt;&lt;p&gt;于是「字节引力」推出了这款产品—— 万维广告 ；顾名思义，它是一个一站式万维网广告交易平台，致力于通过技术创新实现互联网广告交易的标准化、程序化，从而让广告交易像网购一样简单——一站式买卖网站、微信公众号、微博、抖音号、Podcast 等媒介的广告。正如一家好菜馆的特色菜，万维广告也推出了万维广告的特色产品服务：广告包 ——这是他们为利基市场量身定制的自助式量贩广告服务，团队会精心挑选并邀请一些优质的细分行业领域站点，加入一个细分领域的广告包，以便广告主可以以更合理的价格一键购买 N 个垂直领域的站点广告位。&lt;/p&gt;&lt;h3 id=&quot;万维广告如何运&quot;&gt;&lt;a href=&quot;#%E4%B8%87%E7%BB%B4%E5%B9%BF%E5%91%8A%E5%A6%82%E4%BD%95%E8%BF%90&quot; aria-label=&quot;万维广告如何运 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;万维广告如何运&lt;/h3&gt;&lt;p&gt;万维广告的运行方式基于一个基本的逻辑——即&lt;strong&gt;专业人士&lt;/strong&gt;总会聚集在专业的网站上，如果文字广告与受众高度相关，则吸引最终受众的程度和广告点击率就会远远高于随机显示和算法推荐的广告 —— 在万维广告，我们推出了可以定位特定群体的 &lt;a href=&quot;https://nicelinks.site/redirect?url=https://wwads.cn/to&quot;&gt;受众群广告&lt;/a&gt; ，让广告主可以一键购买 定位特定受众的 N 个垂直领域的站点广告位。更重要的是在互联网用户隐私问题日益严重的今天，我们不会给最终用户打标签，万维广告仅通过分析页面的话题和网站的类型等信息优化广告推荐算法，让广告主在&lt;strong&gt;尊重最终用户隐私&lt;/strong&gt;  的前提下也可以精准投放广告，且展示免费，只需为效果付费！&lt;/p&gt;&lt;p&gt;同时我们推出了 &lt;a href=&quot;https://nicelinks.site/redirect?url=https://wwads.cn/secret/friendly-wwads-released/&quot;&gt;非侵入式广告&lt;/a&gt; ，这种广告样式文案简单优雅，样式优雅宜人，对网站的侵入性很小，有效阅读量更多，且与网站上下文内容更加融合。相比大型 Banner 广告，非侵入式广告不会降低包括您在内的最终用户的网站体验，即使不“喧哗夺宠”也能取得应有的效果，且更加尊重了最终用户的观感，保护了流量主网站的用户体验和广告主的品牌形象，实现了&lt;strong&gt;让广告更优雅且有（效）用&lt;/strong&gt;。&lt;/p&gt;&lt;h3 id=&quot;流量主为什么要加入万维广告&quot;&gt;&lt;a href=&quot;#%E6%B5%81%E9%87%8F%E4%B8%BB%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%8A%A0%E5%85%A5%E4%B8%87%E7%BB%B4%E5%B9%BF%E5%91%8A&quot; aria-label=&quot;流量主为什么要加入万维广告 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;流量主为什么要加入万维广告？&lt;/h3&gt;&lt;p&gt;万维广告坚持的理念是：&lt;strong&gt;您专注做好内容，我们为您流量变现&lt;/strong&gt;💰。仅需添加几行代码，即能获得超额收益；&lt;/p&gt;&lt;ol&gt;&lt;li&gt;免费申请开通流量主账户；&lt;/li&gt;&lt;li&gt;添加广告资源及单元、获取广告代码并安装‘&lt;/li&gt;&lt;li&gt;开始投放广告、随时可查看广告互动统计、收益满 100 元即可提现；&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;在 &lt;a href=&quot;https://nicelinks.site/redirect?url=https://wwads.cn/for/publisher&quot;&gt;万维广告官网&lt;/a&gt; ，给出了流量主为什么要加入万维广告的六大理由：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;为您的网站用户提供更有用的广告；&lt;/li&gt;&lt;li&gt;高于其他广告联盟的收益；&lt;/li&gt;&lt;li&gt;简单优雅且尊重用户观感和体验的广告，提升网站用户留存；&lt;/li&gt;&lt;li&gt;不要出卖您的网站访客的隐私；&lt;/li&gt;&lt;li&gt;100% 的广告填充率，200% 的广告收益；&lt;/li&gt;&lt;li&gt;不断提升的广告收益，躺着也能赚钱；&lt;/li&gt;&lt;/ol&gt;&lt;h3 id=&quot;和-adsense-等广告联盟对比优势&quot;&gt;&lt;a href=&quot;#%E5%92%8C-adsense-%E7%AD%89%E5%B9%BF%E5%91%8A%E8%81%94%E7%9B%9F%E5%AF%B9%E6%AF%94%E4%BC%98%E5%8A%BF&quot; aria-label=&quot;和 adsense 等广告联盟对比优势 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;和 AdSense 等广告联盟对比优势&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;万维广告更为尊重贵站最终用户的隐私和体验；&lt;/li&gt;&lt;li&gt;经过我们严格审核的，与网站调性相符且更友好的 非侵入式广告；&lt;/li&gt;&lt;li&gt;更高的 CPC 价格和 RPM 收益，和 100% 的受众群广告填充率让广告收益更上一层楼；&lt;/li&gt;&lt;li&gt;更本土化的服务，更快的提现和客户服务响应；&lt;/li&gt;&lt;li&gt;支持开启 备选广告，访客来自国外或暂无广告投放时可填充 Adsense 等网络的广告保持营收；&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;万维广告拥有针对不同受众群体的网站广告资源，一键购买即可投放到 N 个站点，且展示免费！ 现在购买即可享受当前低价优惠的 CPC 价格，还可以随时续费或投放到多个受众群体。如果您是广告主，可以考虑购买，&lt;a href=&quot;https://nicelinks.site/redirect?url=https://wwads.cn/to&quot;&gt;轻松触达专业受众&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;Google AdSense 是很多流量网站的收入来源之一；但，互联网用户机器上，有较大概率会被 Adblock Plus 类似的广告拦截器所阻挡；另外，Google AdSense 的广告是基于机器自主插入，或有可能与网站调性不太相符相符（内容、界面）；万维广告对这些问题，都做了本土化改进，如果您是流量主，值得考虑入驻；以获取更多收益；（需要说明的是：万维广告是邀请制广告网络，您需要填写邀请码方可注册，如您没有邀请码  &lt;a href=&quot;https://nicelinks.site/redirect?url=https://wwads.cn/request&quot;&gt;可点此免费申请&lt;/a&gt;）。&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/6342b843258efd6ffbd406ef&quot;&gt;倾城之链 - 万维广告&lt;/a&gt;&lt;/p&gt;&lt;p&gt;对倾城之链感兴趣的朋友，可通过 Web，小程序，快应用等渠道进行访问(后续将支持更多，如 VsCode 插件，Chrome 扩展等)。您有任何问题，欢迎随时向我们反馈（您可以通过官网反馈渠道，或添加如下客服微信），🤲 。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://image.nicelinks.site/%E5%80%BE%E5%9F%8E%E4%B9%8B%E9%93%BE-%E5%BE%AE%E4%BF%A1-mini.jpeg&quot; alt=&quot;倾城之链 - 客服微信&quot;/&gt;&lt;/p&gt;&lt;h2 id=&quot;本期文末寄语&quot;&gt;&lt;a href=&quot;#%E6%9C%AC%E6%9C%9F%E6%96%87%E6%9C%AB%E5%AF%84%E8%AF%AD&quot; aria-label=&quot;本期文末寄语 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;本期文末寄语&lt;/h2&gt;&lt;p&gt;有物混成，先天地生。寂兮寥兮，独立而不改，周行而不殆，可以为天地母。吾不知其名，故强字之曰道，强为之名曰大。大曰逝，逝曰远，远曰反。故道大，天大，地大，王亦大。域中有四大，而人居其一焉。&lt;strong&gt;王法地地，法天天，法道道，法自然&lt;/strong&gt;。── 春秋末期人 · 老子李耳《道德经》第二十五章&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://nicelinks.site/?utm_source=weekly&quot;&gt;倾城之链&lt;/a&gt;作为一个开放平台，旨在云集全球&lt;strong&gt;优秀网站&lt;/strong&gt;，探索互联网中更广阔的世界；在这里，你可以轻松发现、学习、分享更多有用或有趣的事物。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://image.nicelinks.site/nicelinks-miniprogram-code.jpeg?imageView2/1/w/250/h/250/interlace/1/ignore-error/1&quot; alt=&quot;小程序码 - 倾城之链&quot;/&gt;&lt;/p&gt;&lt;h2 id=&quot;您可能感兴趣的文章&quot;&gt;&lt;a href=&quot;#%E6%82%A8%E5%8F%AF%E8%83%BD%E6%84%9F%E5%85%B4%E8%B6%A3%E7%9A%84%E6%96%87%E7%AB%A0&quot; aria-label=&quot;您可能感兴趣的文章 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;您可能感兴趣的文章&lt;/h2&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>5ffb42532341cf90edb756b307200312</guid>
<title>彻底搞懂 Eureka 和 Nacos 的区别</title>
<link>https://toutiao.io/k/8rby0oz</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Spring Cloud Eureka 是注册中心，负责微服务的注册与发现，起到承上启下的作用，在微服务架构中相当于人体的 大脑，很重要，Nacos 是阿里巴巴出的，功能类似 Eureka。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Nacos 的部署方式与 Spring Cloud Eureka 不太一样，Euraka 是需要创建 Spring Boot 项目，然后将Euraka 服务端通过依赖的方式加载进来，然后部署项目。Nacos 是直接从阿里巴巴 Nacos 的官网下载 jar 包，启动服务。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Eureka&lt;/h2&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6632970451010887&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/HmXWpTc2vib0OAEzuI4hORgdCTc9ODkhLQePNukV0LwMzGf3LiaqThqcJMyxUsNPMFGwibnSwvfbDkj56smOfZtww/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1286&quot;/&gt;&lt;figcaption&gt;EUREKA-SNAPSHOT&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Eureka Server 之间通过复制的方式完成数据的同步，Eureka 还提供了客户端缓存机制，即使所有的 Eureka Server 都挂掉，客户端依然可以利用缓存中的信息消费其他服务的 API 。综上，Eureka 通过心跳检查、客户端缓存等机制，确保了系统的高可用性、灵活性和可伸缩性。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5970464135021097&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/HmXWpTc2vib0OAEzuI4hORgdCTc9ODkhLicpicwKLEIWQwDvxiapDM3bHW79cR6ibxywxQ4rEpR8qSiaNgZWt9vGjyLA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;474&quot;/&gt;&lt;figcaption&gt;EUREKA-ARCH&lt;/figcaption&gt;&lt;/figure&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;服务注册（register）：Eureka Client 会通过发送 REST 请求的方式，向 Eureka Server 注册自己的服务。注册时，提供自身的元数据，比如 ip 地址、端口、运行状况指标、主页地址等信息。Eureka Server 接收到注册请求后，就会把这些元数据信息存储在一个双层的 Map 中。什么时候注册？在启动微服务的时候。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;服务续约（renew）：在服务注册后，Eureka Client 维护一个心跳来持续通知 Eureka Server，说明服务一直处于可用状态，防止被剔除。默认每隔 30 秒 eureka.instance.lease-renewal-interval-in-seconds 发送一次心跳来进行服务续约。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;获取服务列表（get registry）：服务消费者（Eureka Client）在启动的时候，会发送一个 REST 请求给 Eureka Server，获取注册中心的服务清单，并且缓存在客户端本地。同时，为了性能及安全性考虑，Eureka Server 会每隔30秒更新一次缓存中的服务清单。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;服务调用：服务消费者在获取到服务清单后，可以根据清单中的服务信息，查找到该服务的地址，从而进行访问(远程调用)。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;服务下线（cancel）：当 Eureka Client 需要关闭或重启时，就不希望在这个时间段内再有请求进来，所以，就需要提前先发送 REST 请求给 Eureka Server，告诉 Eureka Server自己要下线了，Eureka Server 在收到请求后，就会把该服务状态置为下线（DOWN），并把该下线事件传播出去。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;失效剔除（evict）：服务实例可能会因为网络故障等原因，导致不能提供服务，而此时该实例也没有发送请求给 Eureka Server 来进行服务下线。所以，还需要有服务剔除的机制。Eureka Server 在启动的时候会创建一个定时任务，每隔一段时间（默认 60 秒），从当前服务清单中把超时没有续约（默认 90 秒 eureka.instance.lease-expiration-duration-inseconds）的服务剔除。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Nacos&lt;/h2&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7521008403361344&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/HmXWpTc2vib0OAEzuI4hORgdCTc9ODkhLc8soiakFianCfudFdc25PwgE9ESpXZpaC2byncuktTfEJY2H6vmvQTzw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;952&quot;/&gt;&lt;figcaption&gt;NACOS-ARCH&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;服务管理：实现服务CRUD，域名CRUD，服务健康状态检查，服务权重管理等功能&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一致性协议：解决不同数据，不同一致性要求情况下，不同一致性机制&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;OpenAPI：暴露标准Rest风格HTTP接口，简单易用，方便多语言集成&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Console：易用控制台，做服务管理、配置管理等操作&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Nacos的服务实例分为两种类型：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;临时实例：如果实例宕机超过一定时间，会从服务列表剔除，默认的类型。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;非临时实例：如果实例宕机，不会从服务列表剔除，也可以叫永久实例。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;配置一个服务实例为永久实例：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;spring:&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;cloud:&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;nacos:&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;discovery:&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;ephemeral:&lt;/span&gt; &lt;span&gt;false&lt;/span&gt; &lt;span&gt;# 设置为非临时实例&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Nacos和Eureka整体结构类似，服务注册、服务拉取、心跳等待，但是也存在一些差异。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Ereka vs Nacos&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;共性&lt;span/&gt;&lt;/h3&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;都支持服务注册和服务拉取&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;都支持服务提供者心跳方式做健康检测&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;区别&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Nacos支持服务端主动检测提供者状态：临时实例采用心跳模式，非临时实例采用主动检测模式&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;临时实例心跳不正常会被剔除，非临时实例则不会被剔除&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Nacos支持服务列表变更的消息推送模式，服务列表更新更及时&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Nacos集群默认采用AP方式，当集群中存在非临时实例时，采用CP模式；Eureka采用AP方式&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1、范围不同。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Nacos 的阈值是针对某个具体 Service 的，而不是针对所有服务的；但 Eureka 的自我保护阈值是针对所有服务的。Nacos 支持 CP 和 AP 两种；Eureka 只支持 AP 。Nacos 使用 Netty，是长连接；Eureka 是短连接，定时发送&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2、保护方式不同。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Eureka 保护方式：当在短时间内，统计续约失败的比例，如果达到一定阈值，则会触发自我保护的机制，在该机制下，Eureka Server 不会剔除任何的微服务，等到正常后，再退出自我保护机制。自我保护开关（eureka.server.enable-self-preservation: false)。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Nacos 保护方式：当域名健康实例占总服务实例的比例小于阈值时，无论实例是否健康，都会将这个实例返回给客户端。这样做虽然损失了一部分流量，但是保证了集群的剩余健康实例能正常工作。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;3、连接方式不同。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Nacos 支持动态刷新，在控制器（Controller）上加 ＠RefreshScope 注解即可，采用 Netty 连接，是长连接；Eureka 本身不支持动态刷新，需要配合 MQ 完成动态刷新，且是短连接，是定时发送。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Nacos中CAP模式切换&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Nacos 支持 AP 和 CP 模式的切换，这意味着 Nacos 同时支持两者一致性协议。这样，Nacos 能够以一个注册中心管理这些生态的服务。不过在 Nacos 中，AP 模式和 CP 模式的具体含义，还需要再说明下。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;AP 模式为了服务的可能性而减弱了一致性，因此 AP 模式下只支持注册临时实例。AP 模式是在网络分区下也能够注册实例。在 AP 模式下也不能编辑服务的元数据等非实例级别的数据，但是允许创建一个默认配置的服务。同时注册实例前不需要进行创建服务的操作，因为这种模式下，服务其实降级成一个简单的字符创标识，不再存储任何属性，会在注册实例的时候自动创建。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;CP 模式下则支持注册持久化实例，此时则是以 Raft 协议为集群运行模式，因此网络分区下不能够注册实例，在网络正常情况下，可以编辑服务器别的配置。该模式下注册实例之前必须先注册服务，如果服务不存在，则会返回错误。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;MIXED 模式可能是一种比较让人迷惑的模式，这种模式的设立主要是为了能够同时支持临时实例和持久化实例的注册。这种模式下，注册实例之前必须创建服务，在服务已经存在的前提下，临时实例可以在网络分区的情况下进行注册。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;PS: 文章附图，人行横道中间有盲道，博主见到的时候就立马拍下了，因为真的很少见，希望这样的有温度的人行横道可以更多一些。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;PS：文章有帮助的话，请点赞、在看、转发吧！&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>f5ed3da1b2256073c32acfa7230894da</guid>
<title>观察和评价研发效能的趋势</title>
<link>https://toutiao.io/k/rtyytne</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;长久以来，如何有效&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5MjY3OTgwMA==&amp;amp;mid=2652477217&amp;amp;idx=1&amp;amp;sn=063127414073aa8309c0c0e3a0a2e0c2&amp;amp;chksm=bd4fa5368a382c20c77d2ceec9c6b00536de144225c2bee388aad8e0fca647fb2f576881f090&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;衡量软件研发效能&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;11&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;衡量软件研发效能&lt;/a&gt;是所有研发管理者心心念念的事，但也一直是个未解的难题。从早期的人均代码行到人均功能点公式计算，再到基于故事点的迭代速率或人均吞吐量，业界一直在探索。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;strong&gt;有失偏颇的指标&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-width=&quot;9&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;人均代码行，若作为关键指标，与更优秀程序员应该用更优雅和少的代码这一逻辑相悖，且将软件编程这一脑力劳动等同于砌砖速度，显然是不合理的。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;功能点计算，通过基于需求分析和设计后确定要修改的页面数、接口数等多种因素构成的复杂公式计算，看似客观，然而忽视了软件研发工作的多样性。渠道侧应用的界面更多，功能点数容易更大，但还有偏后端开发、基础平台开发、数据和报表开发、算法开发等多种类型的工作，前端开发也存在采用不同框架带来的差异性，不可能用几个公式客观衡量团队的产能；另外，越来越复杂的计算公式要依赖准确的设计，且很难让每个人都理解，需要人投入专门的时间来计算，这种没有价值创造的工作本来就是一种浪费。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;随着敏捷开发的发展，故事点作为一种基于团队集体评估复杂度的工具可用于衡量细粒度需求的大小。一些管理者于是考虑用人均故事点来衡量产能。然而故事点没有单位、不同团队故事点基准可以不同，以及评估的主观性特点，让人均故事点、迭代速率很难作为令人满意的效能衡量关键指标。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;strong&gt;关键的研发效能指标集&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-width=&quot;18&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;经过多年的探索总结，DevOps社区提出了衡量IT绩效的&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5MjY3OTgwMA==&amp;amp;mid=2652470540&amp;amp;idx=1&amp;amp;sn=24972614970cee8f6d79e539695893c0&amp;amp;chksm=bd4f4f1b8a38c60d96fa5bb5becd828fe7ecf1642629712c75c9aa8c738540fb061a09b67498&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;四个关键指标&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;四个关键指标&lt;/a&gt;，包括前置时间（或交付周期）、部署频率、部署失败率和线上失败恢复时长，简称“4 Key Metrics”。这是一个很好的方向。不过在实践中，我们发现实际要关心的关键指标其实不止这四个，例如生产缺陷率就是必不可少的关键结果，需求吞吐量也常常很受关注。下面是实践中常见的研发过程度量指标，其中部分是反映最终结果的关键效能指标。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5817805383022774&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/aaVJqS7LaMLp78kxrajkVrjhDA3PNqsGkZsetbAuviapFQ4HM015ZHw5jicdYfofWSY8tM0mBia34vbjVaTsWficHA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;966&quot; title=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;strong&gt;评价效能的关键原则&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-width=&quot;27&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;要观察和评价研发效能，就首先要定义什么是效能？简单一句话，&lt;strong&gt;效能就是团队能持续快速交付价值的能力&lt;/strong&gt;。目的是交付价值，其研发核心能力在于“响应力”与“稳健性”，同时，响应力这一概念又可以从“流动速率”和“资源速率”两个维度来观察。前者是指价值从明确到交付用户的周期时间，而后者是单位人力资源在单位时间里交付价值的数量，对创新与敏捷的要求使得前者的重要性更胜于后者。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;因此，要评价效能，这里就有几个关键原则：&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;ol class=&quot;list-paddingleft-1&quot; start=&quot;1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;任何单一指标并不能合理地观察和评价一个团队的效能，否则会产生副作用。例如单一看吞吐量，会驱使团队一味拆需求，或牺牲质量；若单一看交付周期时间，可能驱使团队减少需求流入。&lt;span/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;评价效能尽可能看全局结果，而非阶段性表现，例如一次转测通过率这样的指标通常很重要，反映开发阶段内建质量的效果，然而用于评价效能不合适，它反映的不是团队整体表现。&lt;span/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;效能评价原始数据应该是来自工具的客观记录，不需要人工计算，不需要为评价浪费时间，且对所有团队是一视同仁的。&lt;span/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;考虑到软件研发工作种类的多样性和以脑力劳动为主的工作性质，研发效能的观察更多应关注团队的改进趋势，而非横向对比的绝对数值。&lt;span/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;那怎么才能更合理有效地达成观察和评价效能的目的呢？最直接的办法，也是最理想的，&lt;strong&gt;就是学会观察分析一组核心指标&lt;/strong&gt;，例如同时拿出4 Metrics的数据趋势，或者上面图中的关键效能指标数据趋势进行分析和观察。一些成熟的企业会将这些关键指标做成Dashboard（仪表盘），便于观察者一目了然分析全局状况。这就像做数字化运营的数据分析一样，只有通过一组数据的对比分析才能得到相对有效的洞察。强烈建议每一位效能管理者、过程改进者以驱动改进为目标，学会和习惯以这种方式来评价一个团队的效能情况。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;strong&gt;观察效能的综合评价指标&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-width=&quot;36&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;但这一理想方式对观察者要求较高，需要充分理解每一个指标的含义和内在逻辑，并且这样一组核心指标对于反映宏观的效能改进趋势还是不够直观，认知负载有点高。尤其对于一些管理层和外部人员，看不出整体效能到底是变好还是变差了。想要解决这个问题，我想到了一些类似的解决方案。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;国家需要一些指标来持续观察一个经济体的整体经济状况，典型的像居民消费价格指数（CPI）、购买力平价指数（PPP），都是采用一篮子指标基于某种内在逻辑构成的复合指标。好处是：&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;ol class=&quot;list-paddingleft-1&quot; start=&quot;1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;虽然不能说明问题根因在哪里，但能更直观反映全局表现&lt;span/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;其变化可综合多种因素的影响，可体现不同因素对整体评价的影响程度&lt;span/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;降低了为使得单一指标好看而采取片面行为的可能性&lt;span/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;于是，在实践案例中，我们设计了下面这样的概念公式，综合了六个要素来产生一个综合评价指数（研发效能CEI），可以以周或月进行统计：&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;综合效能 = （交付吞吐量 &lt;em&gt;部署频率 &lt;/em&gt;发布成功率） / （需求交付周期 &lt;em&gt;线上稳定性 &lt;/em&gt;债务积压）&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>