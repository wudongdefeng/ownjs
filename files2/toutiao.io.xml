<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>bd570fef150e8e95bfd2166883de6323</guid>
<title>如何基于 Apache Doris 构建简易高效的用户行为分析平台？｜解决方案</title>
<link>https://toutiao.io/k/6zaziis</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content js_underline_content               autoTypeSetting24psection&amp;#10;            &quot; id=&quot;js_content&quot;&gt;&lt;p data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.1572093023255814&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/Uecg6b8kbSZZ9RbyicnDZg4k8tN01YPibkjm5mFNaLnuMpZRic7MLScfTm2NsAFSZz5rbzpfebZjT6sNdO7iasP5icA/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;1075&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.4255555555555556&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Uecg6b8kbSY2ibT5SKYVYsG4Us2L4qRMHYfUVficjqEu0aOwrKeFvqPxKCZwkbicbaXnPpa9sKjmPXUNBYRA963Eg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;900&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;用户行为分析是企业了解用户的重要方式之一，可以从点击、登录、观看、跳出、下单购买等多维角度还原用户动态使用场景和用户体验，通过对用户行为埋点数据进行分析，可以详细、清楚地了解用户的行为习惯，从中发现用户使用产品的规律，以用于精确营销、产品优化，从而驱动业务实现增长。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;随着数字化转型进程的不断推进，用户行为分析平台在企业内部扮演的角色愈发重要，如何进一步挖掘用户行为数据价值，也成为了当下各企业不断努力探索的方向。而系统平台建设过程中所遭遇的挑战，也成了制约企业实现精细化运营过程中的重要因素。因此本文将从某社交 APP 的实际业务场景出发，与大家分享 Apache Doris 如何助力企业构建高效的用户行为分析平台，实现数据驱动业务发展。&lt;/span&gt;&lt;/section&gt;&lt;h1&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;#  从一个业务场景说起&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h1&gt;&lt;section&gt;&lt;span&gt;在此以某社交 APP 为例，如果想要更好地提升用户使用体验并进一步实现转化率的增长，基于用户行为数据进行分析并调整业务相应策略是其中的关键，而各个业务团队对用户行为数据往往诉求存在一定差异：&lt;/span&gt;&lt;span/&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;算法团队想知道该 APP 最近一段时间的用户活跃数据，来判断是否需要调整推荐算法；&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;商业部门想知道多少人观看广告后进行了点击，以分析广告带来的用户体验如何；&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;运营部门想知道多少人通过落地页参与活动以及其转化率，以判断活动 ROI；&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;产品部门想知道不同功能用户访问数据的差异，通过 A/B 实验指导正确的产品优化路径；&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;......&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;span&gt;为了承接以上需求，过去该公司使用了基于 Hive 的离线数据仓库，整体数据平台架构如下：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-height=&quot;723&quot; data-ratio=&quot;0.8607142857142858&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Uecg6b8kbSY2ibT5SKYVYsG4Us2L4qRMHLJqPScUHUFHNDuvpJYP3iatCiaX8icO6ia1EbdLtBPZPNnXQibMH3zZxTpg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;840&quot; data-width=&quot;840&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;整体业务数据存量接近 PB 级别，每日新增数据为数 TB&lt;/span&gt;&lt;span&gt;。为了快速接入数据，同时采用了多个组件进行数据的采集与处理：&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;原始数据主要来自关系型数据库 MySQL 、消息队列 Kafka 以及采集到的日志数据；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;利用 Sqoop 和 DataX 进行数据同步，通过 Flink 和 Spark 进行 ETL 以及 Yarn 和 Airflow 进行作业和任务调度；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;处理完成的数据落入 Hive ，Impala 作为分析引擎，为上层自研的 BI 产品提供交互式分析服务；&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;在这样的平台架构下，留存着一系列挑战有待解决：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;以该公司数据为例，&lt;/span&gt;&lt;span&gt;我们将 APP 数据简化抽象出来，以一个常见需求来看数据分析的成本：&lt;/span&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt; &lt;span&gt;-- APP用户表&lt;/span&gt;&lt;br/&gt; &lt;span&gt;CREATE&lt;/span&gt; &lt;span&gt;TABLE&lt;/span&gt; app (&lt;br/&gt;     &lt;span&gt;id&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;,   &lt;span&gt;-- 用户id&lt;/span&gt;&lt;br/&gt;     a_time datetime,   &lt;span&gt;-- 动作的时间&lt;/span&gt;&lt;br/&gt;     act &lt;span&gt;varchar&lt;/span&gt;(&lt;span&gt;20&lt;/span&gt;)  &lt;span&gt;-- 动作（登录、观看、点击等等）&lt;/span&gt;&lt;br/&gt; ) &lt;br/&gt; &lt;span&gt;unique&lt;/span&gt; &lt;span&gt;key&lt;/span&gt; (&lt;span&gt;id&lt;/span&gt;, a_time, act) &lt;br/&gt; &lt;span&gt;COMMENT&lt;/span&gt; &lt;span&gt;&#x27;OLAP&#x27;&lt;/span&gt; &lt;span&gt;DISTRIBUTED&lt;/span&gt; &lt;span&gt;BY&lt;/span&gt; &lt;span&gt;HASH&lt;/span&gt;(&lt;span&gt;`id`&lt;/span&gt;) BUCKETS &lt;span&gt;8&lt;/span&gt;  &lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;section&gt;&lt;code data-wrap=&quot;true&quot;/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section&gt;&lt;span&gt;以背景介绍中的需求为例，算法部门想知道该 APP 最近一段时间的用户活跃及留存数据，来判断是否需要进行推荐算法和展示页的调整。上述其实就是一个求留存率的需求，实现逻辑并不复杂，我们可以很容易写出如下SQL：&lt;/span&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;select&lt;/span&gt; dt, activ_2 / activ_1 &lt;span&gt;as&lt;/span&gt; &lt;span&gt;retention&lt;/span&gt;&lt;br/&gt;&lt;span&gt;from&lt;/span&gt;&lt;br/&gt;(&lt;br/&gt;    &lt;span&gt;select&lt;/span&gt; &lt;span&gt;to_date&lt;/span&gt;(aa.o_time) &lt;span&gt;as&lt;/span&gt; dt, &lt;span&gt;count&lt;/span&gt;(&lt;span&gt;distinct&lt;/span&gt; a.id) &lt;span&gt;as&lt;/span&gt; activ_1,&lt;br/&gt;    &lt;span&gt;count&lt;/span&gt;(&lt;span&gt;distinct&lt;/span&gt; b.id) &lt;span&gt;as&lt;/span&gt;  activ_2&lt;br/&gt;    &lt;span&gt;from&lt;/span&gt; app a&lt;br/&gt;    &lt;span&gt;left&lt;/span&gt; &lt;span&gt;join&lt;/span&gt; app b&lt;br/&gt;    &lt;span&gt;on&lt;/span&gt; a.id = b.id &lt;span&gt;and&lt;/span&gt; &lt;span&gt;to_date&lt;/span&gt;(a.a_time) = days_add(&lt;span&gt;to_date&lt;/span&gt;(b.a_time), &lt;span&gt;1&lt;/span&gt;)&lt;br/&gt;    &lt;span&gt;where&lt;/span&gt; &lt;span&gt;to_date&lt;/span&gt;(a.a_time) = &lt;span&gt;&#x27;xxxx&#x27;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;group&lt;/span&gt; &lt;span&gt;by&lt;/span&gt; &lt;span&gt;to_date&lt;/span&gt;(aa.a_time)&lt;br/&gt;) &lt;span&gt;as&lt;/span&gt; aa&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;但其中不能忽视的问题出现了，我们每查询一个留存比例就需要 Join APP 表自身一次，查询多个比例则需要 Join 该表自身多次，SQL 语句变得无比冗长；同时当执行该 SQL 时，多表 Join 带来的耗时也会变得很长。由此可知，&lt;/span&gt;&lt;span&gt;&lt;strong&gt;没有合适的行为分析函数，会降低分析过程的效率。&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;h1&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;#  全新的用户行为分析平台&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h1&gt;&lt;section&gt;&lt;span&gt;经过慎重选型和对比，该公司决定&lt;/span&gt;&lt;span&gt;使用 Apache Doris 来作为分析和计算引擎&lt;/span&gt;&lt;span&gt;，主要考虑到如下优势：&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;数据集成简易&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;：提供无缝接入 Kafka 和 MySQL 的能力，可复用已有架构并减少对接工作量；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;架构简单&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;：只有 FE 和 BE 两种角色，无需引入第三方组件，维护成本极低；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;性能优异&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;：列式存储引擎、MPP 查询框架、全向量化执行，在实际测试中性能表现突出；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;功能丰富&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;：支持丰富的用户分析函数，分析结果即查即出；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;....&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;在引入 Apahce Doris 后，整体数据架构得到简化，数据处理链路得到大幅缩短，以下是新的架构：&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-height=&quot;445&quot; data-ratio=&quot;0.5297619047619048&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Uecg6b8kbSY2ibT5SKYVYsG4Us2L4qRMHYGfLA7F5QiaI8SyxMZeArumtHPKsbduv2Pw5QMSibBgQync0V7DBgHVw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;840&quot; data-width=&quot;840&quot;/&gt;&lt;/section&gt;&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt; &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;  &lt;/span&gt;&lt;strong&gt;数据导入更便捷&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;首先，&lt;/span&gt;&lt;span&gt;&lt;strong&gt;Apache Doris 数据生态丰富，提供了多种数据导入方式，与已有数据源无缝对接：&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;通过 Routine Load 可以直接订阅 Kafka 数据；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;通过 INSERT INTO SELECT &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;可以导入外部表的数据，目前已支持 MySQL、Oracle、PostgreSQL、SQL Server 等多个数据源；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;通过 Stream Load 可以直接导入本地数据文件；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;......&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;用户可以针对不同的数据源选择不同的数据导入方式，以快速集成来自不同数据源的数据。&lt;/span&gt;&lt;span&gt;文档参考：&lt;/span&gt;&lt;span&gt;&lt;em&gt;&lt;span&gt;https://doris.incubator.apache.org/zh-CN/docs/dev/data-operate/import/load-manual&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;其次，&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;Apache Doris 1.2 版本中增加了 Multi-Catalog 功能&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;，可实现无缝对接外部异构数据源，&lt;/span&gt;&lt;strong&gt;用户无需进行数据导入&lt;/strong&gt;&lt;span&gt;，即可直接通过创建 CREATE CATALOG  来查询底层数据。相对外部表， Multi-Catalog 无需创建表与表之间的映射关系，可以实现元数据层的对接，进一步加强联邦数据分析能力。&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;pre&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;-- 我们以mysql为例，来详细讲解读取和写入的具体实现&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;-- 创建catalog&lt;/span&gt;&lt;br/&gt;&lt;span&gt;CREATE&lt;/span&gt; &lt;span&gt;CATALOG&lt;/span&gt; jdbc PROPERTIES (&lt;br/&gt;    &lt;span&gt;&quot;type&quot;&lt;/span&gt;=&lt;span&gt;&quot;jdbc&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;jdbc.user&quot;&lt;/span&gt;=&lt;span&gt;&quot;root&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;jdbc.password&quot;&lt;/span&gt;=&lt;span&gt;&quot;123456&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;jdbc.jdbc_url&quot;&lt;/span&gt; = &lt;span&gt;&quot;jdbc:mysql://127.0.0.1:13396/demo&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;jdbc.driver_url&quot;&lt;/span&gt; = &lt;span&gt;&quot;file:/path/to/mysql-connector-java-5.1.47.jar&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;jdbc.driver_class&quot;&lt;/span&gt; = &lt;span&gt;&quot;com.mysql.jdbc.Driver&quot;&lt;/span&gt;&lt;br/&gt;);&lt;br/&gt;&lt;br/&gt;其中jdbc.driver_url可以是远程jar包：&lt;br/&gt;&lt;br/&gt;&lt;span&gt;CREATE&lt;/span&gt; &lt;span&gt;CATALOG&lt;/span&gt; jdbc PROPERTIES (&lt;br/&gt;    &lt;span&gt;&quot;type&quot;&lt;/span&gt;=&lt;span&gt;&quot;jdbc&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;jdbc.user&quot;&lt;/span&gt;=&lt;span&gt;&quot;root&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;jdbc.password&quot;&lt;/span&gt;=&lt;span&gt;&quot;123456&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;jdbc.jdbc_url&quot;&lt;/span&gt; = &lt;span&gt;&quot;jdbc:mysql://127.0.0.1:13396/demo&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;jdbc.driver_url&quot;&lt;/span&gt; = &lt;span&gt;&quot;https://path/jdbc_driver/mysql-connector-java-8.0.25.jar&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;jdbc.driver_class&quot;&lt;/span&gt; = &lt;span&gt;&quot;com.mysql.cj.jdbc.Driver&quot;&lt;/span&gt;&lt;br/&gt;);&lt;br/&gt;&lt;br/&gt;&lt;span&gt;-- 创建catalog后，可以通过 SHOW CATALOGS 命令查看 catalog：&lt;/span&gt;&lt;br/&gt;MySQL [(none)]&amp;gt; &lt;span&gt;show&lt;/span&gt; catalogs;&lt;br/&gt;+&lt;span&gt;-----------+-------------+----------+&lt;/span&gt;&lt;br/&gt;| CatalogId | CatalogName | Type     |&lt;br/&gt;+&lt;span&gt;-----------+-------------+----------+&lt;/span&gt;&lt;br/&gt;|         0 | internal    | internal |&lt;br/&gt;|     10480 | jdbc        | jdbc     |&lt;br/&gt;+&lt;span&gt;-----------+-------------+----------+&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;-- 通过 SWITCH 命令切换到 jdbc catalog，并查看其中的数据库&lt;/span&gt;&lt;br/&gt;MySQL [(none)]&amp;gt; switch jdbc;&lt;br/&gt;Query OK, 0 rows affected (0.02 sec)&lt;br/&gt;&lt;br/&gt;MySQL [(none)]&amp;gt; &lt;span&gt;show&lt;/span&gt; &lt;span&gt;databases&lt;/span&gt;;&lt;br/&gt;+&lt;span&gt;--------------------+&lt;/span&gt;&lt;br/&gt;| Database           |&lt;br/&gt;+&lt;span&gt;--------------------+&lt;/span&gt;&lt;br/&gt;| __db1              |&lt;br/&gt;| _db1               |&lt;br/&gt;| db1                |&lt;br/&gt;| demo               |&lt;br/&gt;| information_schema |&lt;br/&gt;| mysql              |&lt;br/&gt;| mysql_db_test      |&lt;br/&gt;| performance_schema |&lt;br/&gt;| sys                |&lt;br/&gt;+&lt;span&gt;--------------------+&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;MySQL [demo]&amp;gt; &lt;span&gt;use&lt;/span&gt; db1;&lt;br/&gt;Reading table information for completion of table and column names&lt;br/&gt;You can turn off this feature to get a quicker startup &lt;span&gt;with&lt;/span&gt; -A&lt;br/&gt;&lt;span&gt;Database&lt;/span&gt; &lt;span&gt;changed&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;MySQL [db1]&amp;gt; &lt;span&gt;show&lt;/span&gt; &lt;span&gt;tables&lt;/span&gt;;&lt;br/&gt;+&lt;span&gt;---------------+&lt;/span&gt;&lt;br/&gt;| Tables_in_db1 |&lt;br/&gt;+&lt;span&gt;---------------+&lt;/span&gt;&lt;br/&gt;| tbl1          |&lt;br/&gt;+&lt;span&gt;---------------+&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;-- 使用catalog查询外部数据源&lt;/span&gt;&lt;br/&gt;MySQL [db1]&amp;gt; &lt;span&gt;select&lt;/span&gt; * &lt;span&gt;from&lt;/span&gt; tbl1;&lt;br/&gt;+&lt;span&gt;------+&lt;/span&gt;&lt;br/&gt;| k1   |&lt;br/&gt;+&lt;span&gt;------+&lt;/span&gt;&lt;br/&gt;|    1 |&lt;br/&gt;|    2 |&lt;br/&gt;|    3 |&lt;br/&gt;|    4 |&lt;br/&gt;+&lt;span&gt;------+&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;-- 创建doris表，注意schema与mysql一致&lt;/span&gt;&lt;br/&gt;&lt;span&gt;CREATE&lt;/span&gt; &lt;span&gt;TABLE&lt;/span&gt; &lt;span&gt;IF&lt;/span&gt; &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;EXISTS&lt;/span&gt; test.test (&lt;br/&gt;    k1 &lt;span&gt;int&lt;/span&gt;&lt;br/&gt;)&lt;br/&gt;&lt;span&gt;DUPLICATE&lt;/span&gt; &lt;span&gt;KEY&lt;/span&gt;(&lt;span&gt;`col1`&lt;/span&gt;)&lt;br/&gt;&lt;span&gt;DISTRIBUTED&lt;/span&gt; &lt;span&gt;BY&lt;/span&gt; &lt;span&gt;HASH&lt;/span&gt;(col1) BUCKETS &lt;span&gt;1&lt;/span&gt;&lt;br/&gt;properties(&lt;br/&gt;&lt;span&gt;&quot;replication_num&quot;&lt;/span&gt;=&lt;span&gt;&quot;1&quot;&lt;/span&gt;&lt;br/&gt;);&lt;br/&gt;&lt;br/&gt;&lt;span&gt;-- 使用catalog直接将mysql中的数据导入doris&lt;/span&gt;&lt;br/&gt;&lt;span&gt;-- 我们只用三级元数据层级，catalog.db.table的方式&lt;/span&gt;&lt;br/&gt;&lt;span&gt;insert&lt;/span&gt; &lt;span&gt;into&lt;/span&gt; internal.test.test &lt;span&gt;select&lt;/span&gt; k1 &lt;span&gt;from&lt;/span&gt; jdbc.db1.tbl1;&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;code data-wrap=&quot;true&quot;/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt; &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;  &lt;/span&gt;&lt;strong&gt;数据时效性提升&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;数据架构简洁有力，&lt;/span&gt;&lt;span&gt;引入 Apache Doris 后，数据架构缩减到 3 层，有效避免了过长数据处理链路带来的时延，&lt;/span&gt;&lt;span&gt;整体数据时效性从&lt;/span&gt;&lt;span&gt;&lt;strong&gt;天级降至分钟级&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;；&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;用户查询耗时更低，&lt;/span&gt;&lt;span&gt;SQL 查询耗时从过去的&lt;/span&gt;&lt;span&gt;&lt;strong&gt;分钟降低至秒级甚至毫秒级&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;，极大提升了业务分析人员的分析效率。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt; &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;  &lt;/span&gt;&lt;strong&gt;数据分析效率进一步提升&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;section&gt;&lt;span&gt;前文中有提到，没有合适的分析函数会使得分析工作变得艰难；而 &lt;/span&gt;&lt;span&gt;&lt;strong&gt;Apache Doris 为用户行为分析提供了丰富的分析函数，使得数据分析难度大幅降低&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;，这些函数包括但不限于：&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;intersect_count&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;sequence_count&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;sequence_match&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;retention&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;window_funnel&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Array 类函数&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;......&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h1&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;#  丰富的用户行为分析函数&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h1&gt;&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt; &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;  &lt;/span&gt;&lt;strong&gt;数据准备&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;h3&gt;&lt;span&gt;在此以上述 APP 表为例，前期需要完成建表以及数据导入等准备工作：&lt;/span&gt;&lt;br/&gt;&lt;/h3&gt;&lt;pre&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt; &lt;span&gt;-- 建表&lt;/span&gt;&lt;br/&gt; &lt;span&gt;CREATE&lt;/span&gt; &lt;span&gt;TABLE&lt;/span&gt; app (&lt;br/&gt;     &lt;span&gt;id&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;,   &lt;span&gt;-- 用户id&lt;/span&gt;&lt;br/&gt;     a_time datetime,   &lt;span&gt;-- 动作的时间&lt;/span&gt;&lt;br/&gt;     act &lt;span&gt;varchar&lt;/span&gt;(&lt;span&gt;20&lt;/span&gt;)  &lt;span&gt;-- 动作（登录、观看、点击等等）&lt;/span&gt;&lt;br/&gt; ) &lt;br/&gt; &lt;span&gt;unique&lt;/span&gt; &lt;span&gt;key&lt;/span&gt; (&lt;span&gt;id&lt;/span&gt;, a_time, act) &lt;br/&gt; &lt;span&gt;COMMENT&lt;/span&gt; &lt;span&gt;&#x27;OLAP&#x27;&lt;/span&gt; &lt;span&gt;DISTRIBUTED&lt;/span&gt; &lt;span&gt;BY&lt;/span&gt; &lt;span&gt;HASH&lt;/span&gt;(&lt;span&gt;`id`&lt;/span&gt;) BUCKETS &lt;span&gt;8&lt;/span&gt;  &lt;br/&gt; PROPERTIES (&lt;span&gt;&quot;replication_allocation&quot;&lt;/span&gt; = &lt;span&gt;&quot;tag.location.default: 1&quot;&lt;/span&gt;);&lt;br/&gt; &lt;br/&gt; &lt;br/&gt; &lt;span&gt;-- 插入数据&lt;/span&gt;&lt;br/&gt;&lt;span&gt;insert&lt;/span&gt; &lt;span&gt;into&lt;/span&gt; app &lt;span&gt;values&lt;/span&gt; &lt;br/&gt;(&lt;span&gt;111&lt;/span&gt;, &lt;span&gt;&#x27;2022-01-01 10:00:00&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;login&#x27;&lt;/span&gt;), &lt;br/&gt;(&lt;span&gt;111&lt;/span&gt;, &lt;span&gt;&#x27;2022-01-01 10:01:00&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;view&#x27;&lt;/span&gt;),&lt;br/&gt;(&lt;span&gt;111&lt;/span&gt;, &lt;span&gt;&#x27;2022-01-01 10:02:00&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;click&#x27;&lt;/span&gt;), &lt;br/&gt;(&lt;span&gt;111&lt;/span&gt;, &lt;span&gt;&#x27;2022-01-02 10:00:00&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;login&#x27;&lt;/span&gt;), &lt;br/&gt;(&lt;span&gt;111&lt;/span&gt;, &lt;span&gt;&#x27;2022-01-02 10:01:00&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;view&#x27;&lt;/span&gt;), &lt;br/&gt;(&lt;span&gt;222&lt;/span&gt;, &lt;span&gt;&#x27;2022-01-01 11:00:00&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;login&#x27;&lt;/span&gt;),&lt;br/&gt;(&lt;span&gt;222&lt;/span&gt;, &lt;span&gt;&#x27;2022-01-01 11:01:00&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;view&#x27;&lt;/span&gt;), &lt;br/&gt;(&lt;span&gt;333&lt;/span&gt;, &lt;span&gt;&#x27;2022-01-01 12:00:00&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;login&#x27;&lt;/span&gt;),&lt;br/&gt;(&lt;span&gt;333&lt;/span&gt;, &lt;span&gt;&#x27;2022-01-01 12:01:00&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;view&#x27;&lt;/span&gt;),&lt;br/&gt;(&lt;span&gt;444&lt;/span&gt;, &lt;span&gt;&#x27;2022-01-01 13:00:00&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;login&#x27;&lt;/span&gt;);&lt;br/&gt; &lt;br/&gt; &lt;span&gt;-- 查看数据&lt;/span&gt;&lt;br/&gt;&lt;span&gt;select&lt;/span&gt; * &lt;span&gt;from&lt;/span&gt; app &lt;span&gt;order&lt;/span&gt; &lt;span&gt;by&lt;/span&gt; a_time;&lt;br/&gt;+&lt;span&gt;------+---------------------+-------+&lt;/span&gt;&lt;br/&gt;| id   | a_time              | act   |&lt;br/&gt;+&lt;span&gt;------+---------------------+-------+&lt;/span&gt;&lt;br/&gt;|  111 | 2022-01-01 10:00:00 | login |&lt;br/&gt;|  111 | 2022-01-01 10:01:00 | view  |&lt;br/&gt;|  111 | 2022-01-01 10:02:00 | click |&lt;br/&gt;|  222 | 2022-01-01 11:00:00 | login |&lt;br/&gt;|  222 | 2022-01-01 11:01:00 | view  |&lt;br/&gt;|  333 | 2022-01-01 12:00:00 | login |&lt;br/&gt;|  333 | 2022-01-01 12:01:00 | view  |&lt;br/&gt;|  444 | 2022-01-01 13:00:00 | login |&lt;br/&gt;|  111 | 2022-01-02 10:00:00 | login |&lt;br/&gt;|  111 | 2022-01-02 10:01:00 | view  |&lt;br/&gt;+&lt;span&gt;------+---------------------+-------+&lt;/span&gt;&lt;br/&gt; &lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;code data-wrap=&quot;true&quot;/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt; &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;  &lt;/span&gt;&lt;strong&gt;留存分析&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;section&gt;&lt;span&gt;算法部门想知道该 APP 最近一段时间的用户活跃及留存数据，来判断是否需要进行推荐算法和展示页的调整。该需求可以理解为留存率，主要是指注册后在一定时间内或者一段时间后有登录行为且仍在继续使用该产品的留存用户，在当时总的新增用户中所占比例。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;该需求为前文提到的第一个需求，接下来我们看看使用 Doris 提供的分析函数如何实现呢？&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;正交 Bitmap 函数计算留存率&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.1890495867768595&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Uecg6b8kbSY2ibT5SKYVYsG4Us2L4qRMHMllzbb1p2olZibMtvrUC3K5sibxAdbC54NTVlyBtb0OLKmwRaE8L3kKA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1936&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;-- 求第N天登录的用户&lt;/span&gt;&lt;br/&gt;&lt;span&gt;select&lt;/span&gt; intersect_count(to_bitmap(&lt;span&gt;id&lt;/span&gt;), &lt;span&gt;to_date&lt;/span&gt;(a_time), &lt;span&gt;&#x27;2022-01-01&#x27;&lt;/span&gt;) &lt;span&gt;as&lt;/span&gt; &lt;span&gt;first&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; app;&lt;br/&gt;+&lt;span&gt;-------+&lt;/span&gt;&lt;br/&gt;| first |&lt;br/&gt;+&lt;span&gt;-------+&lt;/span&gt;&lt;br/&gt;|     4 |&lt;br/&gt;+&lt;span&gt;-------+&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;-- 求第N天和N+1天都登录的用户&lt;/span&gt;&lt;br/&gt;&lt;span&gt;select&lt;/span&gt; intersect_count(to_bitmap(&lt;span&gt;id&lt;/span&gt;), &lt;span&gt;to_date&lt;/span&gt;(a_time), &lt;span&gt;&#x27;2022-01-01&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;2022-01-02&#x27;&lt;/span&gt;) &lt;span&gt;as&lt;/span&gt; &lt;span&gt;second&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; app;&lt;br/&gt;+&lt;span&gt;-------+&lt;/span&gt;&lt;br/&gt;| second |&lt;br/&gt;+&lt;span&gt;-------+&lt;/span&gt;&lt;br/&gt;|     1 |&lt;br/&gt;+&lt;span&gt;-------+&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;-- 二者的比例即为所求&lt;/span&gt;&lt;br/&gt;&lt;span&gt;select&lt;/span&gt; intersect_count(to_bitmap(&lt;span&gt;id&lt;/span&gt;), &lt;span&gt;to_date&lt;/span&gt;(a_time), &lt;span&gt;&#x27;2022-01-01&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;2022-01-02&#x27;&lt;/span&gt;) / intersect_count(to_bitmap(&lt;span&gt;id&lt;/span&gt;), &lt;span&gt;to_date&lt;/span&gt;(a_time), &lt;span&gt;&#x27;2022-01-01&#x27;&lt;/span&gt;) &lt;span&gt;as&lt;/span&gt; rate &lt;span&gt;from&lt;/span&gt; app;&lt;br/&gt;+&lt;span&gt;------+&lt;/span&gt;&lt;br/&gt;| rate |&lt;br/&gt;+&lt;span&gt;------+&lt;/span&gt;&lt;br/&gt;| 0.25 |&lt;br/&gt;+&lt;span&gt;------+&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;Retention 函数计算留存率&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.2268041237113402&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Uecg6b8kbSY2ibT5SKYVYsG4Us2L4qRMHEU7EDDVNjlzwXgoW1mRmBTZ6qaKZeM1O09pVYbwpXibxHHESk7pRSIQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1940&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;Retention 通常需要跟&lt;/span&gt;&lt;code&gt;group by&lt;/code&gt;&lt;span&gt;联合使用，以获取&lt;/span&gt;&lt;code&gt;group by&lt;/code&gt;&lt;span&gt;列匹配的条件。而输入的参数是可变长参数，Retention 会返回跟输入参数长度相等的数组。数组取值则要看匹配条件能否满足，如下图所示：&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-height=&quot;818&quot; data-ratio=&quot;0.7574074074074074&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Uecg6b8kbSY2ibT5SKYVYsG4Us2L4qRMH8rAWD9avhFt3P1AnJWLmIOvpwAYyzBnV8dwcX9hoqebnMpNbQsRtYg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; data-width=&quot;1080&quot;/&gt;&lt;/section&gt;&lt;pre&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;-- 求第N天登录的用户&lt;/span&gt;&lt;br/&gt;&lt;span&gt;select&lt;/span&gt; &lt;span&gt;id&lt;/span&gt;, &lt;span&gt;retention&lt;/span&gt;(&lt;span&gt;to_date&lt;/span&gt;(a_time)=&lt;span&gt;&#x27;2022-01-01&#x27;&lt;/span&gt;) &lt;span&gt;as&lt;/span&gt; &lt;span&gt;first&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; app &lt;span&gt;group&lt;/span&gt; &lt;span&gt;by&lt;/span&gt; &lt;span&gt;id&lt;/span&gt;;&lt;br/&gt;+&lt;span&gt;------+-------+&lt;/span&gt;&lt;br/&gt;| id   | first |&lt;br/&gt;+&lt;span&gt;------+-------+&lt;/span&gt;&lt;br/&gt;|  222 | [1]   |&lt;br/&gt;|  111 | [1]   |&lt;br/&gt;|  444 | [1]   |&lt;br/&gt;|  333 | [1]   |&lt;br/&gt;+&lt;span&gt;------+-------+&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;-- 求第N天和N+1天都登录的用户&lt;/span&gt;&lt;br/&gt;&lt;span&gt;select&lt;/span&gt; &lt;span&gt;id&lt;/span&gt;, &lt;span&gt;retention&lt;/span&gt;(&lt;span&gt;to_date&lt;/span&gt;(a_time)=&lt;span&gt;&#x27;2022-01-01&#x27;&lt;/span&gt;, &lt;span&gt;to_date&lt;/span&gt;(a_time)=&lt;span&gt;&#x27;2022-01-02&#x27;&lt;/span&gt;) &lt;span&gt;as&lt;/span&gt; &lt;span&gt;second&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; app &lt;span&gt;group&lt;/span&gt; &lt;span&gt;by&lt;/span&gt; &lt;span&gt;id&lt;/span&gt;;&lt;br/&gt;+&lt;span&gt;------+--------+&lt;/span&gt;&lt;br/&gt;| id   | second |&lt;br/&gt;+&lt;span&gt;------+--------+&lt;/span&gt;&lt;br/&gt;|  222 | [1, 0] |&lt;br/&gt;|  111 | [1, 1] |&lt;br/&gt;|  444 | [1, 0] |&lt;br/&gt;|  333 | [1, 0] |&lt;br/&gt;+&lt;span&gt;------+--------+&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;-- 二者的比例即为所求&lt;/span&gt;&lt;br/&gt;&lt;span&gt;select&lt;/span&gt; &lt;span&gt;sum&lt;/span&gt;(re[&lt;span&gt;2&lt;/span&gt;])  / &lt;span&gt;sum&lt;/span&gt;(re[&lt;span&gt;1&lt;/span&gt;]) &lt;span&gt;as&lt;/span&gt; rate  &lt;span&gt;from&lt;/span&gt; (&lt;span&gt;select&lt;/span&gt; &lt;span&gt;id&lt;/span&gt;, &lt;span&gt;retention&lt;/span&gt;(&lt;span&gt;to_date&lt;/span&gt;(a_time)=&lt;span&gt;&#x27;2022-01-01&#x27;&lt;/span&gt;, &lt;span&gt;to_date&lt;/span&gt;(a_time)=&lt;span&gt;&#x27;2022-01-02&#x27;&lt;/span&gt;) &lt;span&gt;as&lt;/span&gt; re &lt;span&gt;from&lt;/span&gt; app &lt;span&gt;group&lt;/span&gt; &lt;span&gt;by&lt;/span&gt; &lt;span&gt;id&lt;/span&gt;) &lt;span&gt;as&lt;/span&gt; a;&lt;br/&gt;+&lt;span&gt;------+&lt;/span&gt;&lt;br/&gt;| rate |&lt;br/&gt;+&lt;span&gt;------+&lt;/span&gt;&lt;br/&gt;| 0.25 |&lt;br/&gt;+&lt;span&gt;------+&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt; &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;  &lt;/span&gt;&lt;strong&gt;路径分析&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;商业部门想知道多少人观看广告后进行了点击，以分析广告带来的用户体验是否合适。该需求可以理解为行为分析中的路径分析，而路径分析是一种基于行为顺序、行为偏好、关键节点、转化效率的探索型模型。依据路径分析可以直观掌握用户行为扩展路线，以供优化节点内容、提升整体转化效率。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;sequence_count 路径分析&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.3045267489711934&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Uecg6b8kbSY2ibT5SKYVYsG4Us2L4qRMHn3meiatfOLuDm625kPXdSiapon57jfdsibLBP0YnDXE3IibHxVCOma6ZUw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1944&quot;/&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;sequence_count&lt;/code&gt;&lt;span&gt;通常需要跟&lt;/span&gt;&lt;code&gt;group by&lt;/code&gt;&lt;span&gt;一起使用，以获取&lt;/span&gt;&lt;code&gt;group by&lt;/code&gt;&lt;span&gt;列匹配的条件。&lt;/span&gt;&lt;code&gt;&lt;span&gt;函数使用方法为：&lt;/span&gt;&lt;/code&gt;&lt;code&gt;sequence_count((?1)(?t&amp;lt;3600)(?2), date, col1=1, col3=&#x27;a&#x27;)&lt;/code&gt;&lt;span&gt;，表明当前 col1=1 是第一个条件；此时如果有 col2=a，并且 col2 的时间与 col1 的时间在 3600 秒之内(col2 的时间减去 col1 的时间)，则&lt;/span&gt;&lt;code&gt;sequence_count&lt;/code&gt;&lt;span&gt;对这样一组匹配结果记一个数。其工作逻辑如下图所示：&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-height=&quot;662&quot; data-ratio=&quot;0.7057569296375267&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Uecg6b8kbSY2ibT5SKYVYsG4Us2L4qRMH3NGHKiar8xJxoj7ib9JI6G3609Ph3bx2tK9EHXm7LPT5Fn2MeyRltYibg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;938&quot; data-width=&quot;938&quot;/&gt;&lt;/section&gt;&lt;pre&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt; &lt;span&gt;-- 哪些用户在登录后2分钟内观看了广告&lt;/span&gt;&lt;br/&gt;&lt;span&gt;select&lt;/span&gt; &lt;span&gt;id&lt;/span&gt;, sequence_count(&lt;span&gt;&#x27;(?1)(?t&amp;lt;=120)(?2)&#x27;&lt;/span&gt;, a_time, act = &lt;span&gt;&#x27;login&#x27;&lt;/span&gt;, act = &lt;span&gt;&#x27;view&#x27;&lt;/span&gt;) &lt;span&gt;as&lt;/span&gt; &lt;span&gt;result&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; app &lt;span&gt;group&lt;/span&gt; &lt;span&gt;by&lt;/span&gt; &lt;span&gt;id&lt;/span&gt;;&lt;br/&gt;+&lt;span&gt;------+--------+&lt;/span&gt;&lt;br/&gt;| id   | result |&lt;br/&gt;+&lt;span&gt;------+--------+&lt;/span&gt;&lt;br/&gt;|  111 |      2 |&lt;br/&gt;|  444 |      0 |&lt;br/&gt;|  222 |      1 |&lt;br/&gt;|  333 |      1 |&lt;br/&gt;+&lt;span&gt;------+--------+&lt;/span&gt;&lt;br/&gt;&lt;span&gt;-- 上述SQL可以看到，先观看广告再点击广告的用户有3人；而111这个用户有两次都是登录后观看了广告。pattern中的(?1)对应act = &#x27;login&#x27;，(?2)对应act = &#x27;view&#x27;，时间间隔为120秒&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;-- 哪些用户在登录后2分钟内观看了广告，并在2分钟内点击了广告&lt;/span&gt;&lt;br/&gt;&lt;span&gt;select&lt;/span&gt; &lt;span&gt;id&lt;/span&gt;, sequence_count(&lt;span&gt;&#x27;(?1)(?t&amp;lt;=120)(?2)(?t&amp;lt;=120)(?3)&#x27;&lt;/span&gt;, a_time, act = &lt;span&gt;&#x27;login&#x27;&lt;/span&gt;, act = &lt;span&gt;&#x27;view&#x27;&lt;/span&gt;, act = &lt;span&gt;&#x27;click&#x27;&lt;/span&gt;) &lt;span&gt;as&lt;/span&gt; &lt;span&gt;result&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; app &lt;span&gt;group&lt;/span&gt; &lt;span&gt;by&lt;/span&gt; &lt;span&gt;id&lt;/span&gt;;&lt;br/&gt;+&lt;span&gt;------+--------+&lt;/span&gt;&lt;br/&gt;| id   | result |&lt;br/&gt;+&lt;span&gt;------+--------+&lt;/span&gt;&lt;br/&gt;|  333 |      0 |&lt;br/&gt;|  111 |      1 |&lt;br/&gt;|  444 |      0 |&lt;br/&gt;|  222 |      0 |&lt;br/&gt;+&lt;span&gt;------+--------+&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;code data-wrap=&quot;true&quot;/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt; &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;  &lt;/span&gt;&lt;strong&gt;漏斗分析&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;h3&gt;&lt;span&gt;运营部门想知道多少人通过落地页参与活动以及其转化率，以判断活动 ROI 以及确定策略带来的价值是否符合预期。该需求可以理解为转化率，而转化率主要是指是指用户进行了相应目标行动的次数与总次数的比率；转化率可以衡量一个产品用户需求强弱、评价产品设计好坏、对比流程和渠道权重等。&lt;/span&gt;&lt;br/&gt;&lt;/h3&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;window_funnel 漏斗转化分析&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;pre&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;-- 哪些用户在登录后2分钟内观看了广告&lt;/span&gt;&lt;br/&gt;&lt;span&gt;select&lt;/span&gt; &lt;span&gt;id&lt;/span&gt;, window_funnel(&lt;span&gt;120&lt;/span&gt;, &lt;span&gt;&#x27;default&#x27;&lt;/span&gt;, a_time, act = &lt;span&gt;&#x27;login&#x27;&lt;/span&gt;, act = &lt;span&gt;&#x27;view&#x27;&lt;/span&gt;) &lt;span&gt;as&lt;/span&gt; w  &lt;span&gt;from&lt;/span&gt; app  &lt;span&gt;group&lt;/span&gt; &lt;span&gt;by&lt;/span&gt; &lt;span&gt;id&lt;/span&gt;;&lt;br/&gt;+&lt;span&gt;------+------+&lt;/span&gt;&lt;br/&gt;| id   | w    |&lt;br/&gt;+&lt;span&gt;------+------+&lt;/span&gt;&lt;br/&gt;|  333 |    2 |&lt;br/&gt;|  222 |    2 |&lt;br/&gt;|  111 |    2 |&lt;br/&gt;|  444 |    1 |&lt;br/&gt;+&lt;span&gt;------+------+&lt;/span&gt;&lt;br/&gt;&lt;span&gt;-- 从上述SQL可以看出，第一个参数120秒指定了滑动窗口的大小，并且窗口是按a_time这一列滑动的。act = &#x27;login&#x27;, act = &#x27;view&#x27;是两个条件，显然用户111，222,333均满足这两个条件，即一小时内，先登录再观看广告；但是444这位用户就不满足先登录再观看广告，因为他只有登录操作，所以window_funnel对他返回了1，因为他只满足第一个条件&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;-- 根据上述结果进行筛选，哪些用户在登录后2分钟内观看了广告&lt;/span&gt;&lt;br/&gt;&lt;span&gt;select&lt;/span&gt; &lt;span&gt;id&lt;/span&gt;, window_funnel(&lt;span&gt;120&lt;/span&gt;, &lt;span&gt;&#x27;default&#x27;&lt;/span&gt;, a_time, act = &lt;span&gt;&#x27;login&#x27;&lt;/span&gt;, act = &lt;span&gt;&#x27;view&#x27;&lt;/span&gt;) &lt;span&gt;as&lt;/span&gt; w  &lt;span&gt;from&lt;/span&gt; app  &lt;span&gt;group&lt;/span&gt; &lt;span&gt;by&lt;/span&gt; &lt;span&gt;id&lt;/span&gt; &lt;span&gt;having&lt;/span&gt; w = &lt;span&gt;2&lt;/span&gt;;&lt;br/&gt;+&lt;span&gt;------+------+&lt;/span&gt;&lt;br/&gt;| id   | w    |&lt;br/&gt;+&lt;span&gt;------+------+&lt;/span&gt;&lt;br/&gt;|  111 |    2 |&lt;br/&gt;|  333 |    2 |&lt;br/&gt;|  222 |    2 |&lt;br/&gt;+&lt;span&gt;------+------+&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;-- 哪些用户在一小时内，登录、观看、点击都执行了&lt;/span&gt;&lt;br/&gt;&lt;span&gt;select&lt;/span&gt; &lt;span&gt;id&lt;/span&gt;, window_funnel(&lt;span&gt;3600&lt;/span&gt;, &lt;span&gt;&#x27;default&#x27;&lt;/span&gt;, a_time, act = &lt;span&gt;&#x27;login&#x27;&lt;/span&gt;, act = &lt;span&gt;&#x27;view&#x27;&lt;/span&gt;, act = &lt;span&gt;&#x27;click&#x27;&lt;/span&gt;) &lt;span&gt;as&lt;/span&gt; w &lt;span&gt;from&lt;/span&gt; app  &lt;span&gt;group&lt;/span&gt; &lt;span&gt;by&lt;/span&gt; &lt;span&gt;id&lt;/span&gt; &lt;span&gt;having&lt;/span&gt; w = &lt;span&gt;3&lt;/span&gt;;&lt;br/&gt;+&lt;span&gt;------+------+&lt;/span&gt;&lt;br/&gt;| id   | w    |&lt;br/&gt;+&lt;span&gt;------+------+&lt;/span&gt;&lt;br/&gt;|  111 |    3 |&lt;br/&gt;+&lt;span&gt;------+------+&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;code data-wrap=&quot;true&quot;/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt; &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;  &lt;/span&gt;&lt;strong&gt;其他&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;Array 类函数&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;/h3&gt;&lt;section&gt;&lt;span&gt;熟悉行为分析的同学都知道，固然丰富的分析函数有助于帮助我们提高分析效率，但是分析函数无法覆盖所有的场景，一些特殊的需求还是依赖特殊或者复杂的 SQL 来实现，而这些 SQL 很多都需要借助数组来实现。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;鉴于篇幅所限，该部分不会展示纷繁复杂的需求，而是会通过几个浅显的例子来展示 Apache Doris 丰富的数组类函数。&lt;/span&gt;&lt;/section&gt;&lt;pre&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;// split_by_string函数：指定分隔符切分字符串，得到切分后的数组：&lt;br/&gt;&lt;span&gt;select&lt;/span&gt; split_by_string(&lt;span&gt;&#x27;a#b#c#d&#x27;&lt;/span&gt;,&lt;span&gt;&#x27;#&#x27;&lt;/span&gt;);&lt;br/&gt;+&lt;span&gt;---------------------------------+&lt;/span&gt;&lt;br/&gt;| split_by_string(&#x27;a&lt;span&gt;#b#c#d&#x27;, &#x27;1&#x27;) |&lt;/span&gt;&lt;br/&gt;+&lt;span&gt;---------------------------------+&lt;/span&gt;&lt;br/&gt;| [&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;, &#x27;d&#x27;]            |&lt;br/&gt;+&lt;span&gt;---------------------------------+&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;// array_sort函数：对数组进行升序排序。下表的k1是数组类型：&lt;br/&gt;&lt;span&gt;select&lt;/span&gt; k1, array_sort(k1) &lt;span&gt;from&lt;/span&gt; &lt;span&gt;test&lt;/span&gt;;&lt;br/&gt;+&lt;span&gt;-----------------------------+-----------------------------+&lt;/span&gt;&lt;br/&gt;| k1                          | array_sort(`k1`)            |&lt;br/&gt;+&lt;span&gt;------+-----------------------------+----------------------+&lt;/span&gt;&lt;br/&gt;| NULL                        | NULL                        |&lt;br/&gt;| [1, 2, 3, 4, 5, 4, 3, 2, 1] | [1, 1, 2, 2, 3, 3, 4, 4, 5] |&lt;br/&gt;+&lt;span&gt;-----------------------------+-----------------------------+&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;// array_size函数：获取数组大小。下表的k1是数组类型：&lt;br/&gt;&lt;span&gt;select&lt;/span&gt; k1,&lt;span&gt;size&lt;/span&gt;(k1) &lt;span&gt;from&lt;/span&gt; &lt;span&gt;test&lt;/span&gt;;&lt;br/&gt;+&lt;span&gt;-----------+------------+&lt;/span&gt;&lt;br/&gt;| k1        | size(`k1`) |&lt;br/&gt;+&lt;span&gt;-----------+------------+&lt;/span&gt;&lt;br/&gt;| [1, 2, 3] |          3 |&lt;br/&gt;| []        |          0 |&lt;br/&gt;| NULL      |       NULL |&lt;br/&gt;+&lt;span&gt;-----------+------------+&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;// array_remove函数：返回移除所有的指定元素后的数组。下表k1是数组类型：&lt;br/&gt;&lt;span&gt;select&lt;/span&gt; k1, array_remove(k1, &lt;span&gt;1&lt;/span&gt;) &lt;span&gt;from&lt;/span&gt; &lt;span&gt;test&lt;/span&gt;;&lt;br/&gt;+&lt;span&gt;--------------------+-----------------------+&lt;/span&gt;&lt;br/&gt;| k1                 | array_remove(k1, 1) |&lt;br/&gt;+&lt;span&gt;--------------------+-----------------------+&lt;/span&gt;&lt;br/&gt;| [1, 2, 3]          | [2, 3]                |&lt;br/&gt;| [1, 3]             | [3]                   |&lt;br/&gt;| NULL               | NULL                  |&lt;br/&gt;| [1, 3]             | [3]                   |&lt;br/&gt;| [NULL, 1, NULL, 2] | [NULL, NULL, 2]       |&lt;br/&gt;+&lt;span&gt;--------------------+-----------------------+&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;// array_slice函数：返回一个子数组，包含所有从指定位置开始的指定长度的元素。下表k1是数组类型。从1开始从左至右计数；位置可以为负数，负数从-1开始从右到左开始计数&lt;br/&gt;&lt;br/&gt;&lt;span&gt;select&lt;/span&gt; k1, array_slice(k1, &lt;span&gt;2&lt;/span&gt;, &lt;span&gt;2&lt;/span&gt;) &lt;span&gt;from&lt;/span&gt; array_type_table_nullable;&lt;br/&gt;+&lt;span&gt;-----------------+-------------------------+&lt;/span&gt;&lt;br/&gt;| k1              | array_slice(`k1`, 2, 2) |&lt;br/&gt;+&lt;span&gt;-----------------+-------------------------+&lt;/span&gt;&lt;br/&gt;| [1, 2, 3]       | [2, 3]                  |&lt;br/&gt;| [1, NULL, 3]    | [NULL, 3]               |&lt;br/&gt;| [2, 3]          | [3]                     |&lt;br/&gt;| NULL            | NULL                    |&lt;br/&gt;+&lt;span&gt;-----------------+-------------------------+&lt;/span&gt;&lt;br/&gt;&lt;span&gt;select&lt;/span&gt; k1, array_slice(k1, &lt;span&gt;-2&lt;/span&gt;, &lt;span&gt;1&lt;/span&gt;) &lt;span&gt;from&lt;/span&gt; &lt;span&gt;test&lt;/span&gt;;&lt;br/&gt;+&lt;span&gt;-----------+--------------------------+&lt;/span&gt;&lt;br/&gt;| k1        | array_slice(`k1`, -2, 1) |&lt;br/&gt;+&lt;span&gt;-----------+--------------------------+&lt;/span&gt;&lt;br/&gt;| [1, 2, 3] | [2]                      |&lt;br/&gt;| [1, 2, 3] | [2]                      |&lt;br/&gt;| [2, 3]    | [2]                      |&lt;br/&gt;| [2, 3]    | [2]                      |&lt;br/&gt;+&lt;span&gt;-----------+--------------------------+&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;// array_distinct函数：去除数组中的重复元素。下表k1是数组类型&lt;br/&gt;&lt;span&gt;select&lt;/span&gt; k1, array_distinct(k1) &lt;span&gt;from&lt;/span&gt; &lt;span&gt;test&lt;/span&gt;;&lt;br/&gt;+&lt;span&gt;-----------------------------+---------------------------+&lt;/span&gt;&lt;br/&gt;| k1                          | array_distinct(k1)        |&lt;br/&gt;+&lt;span&gt;-----------------------------+---------------------------+&lt;/span&gt;&lt;br/&gt;| [1, 2, 3, 4, 5]             | [1, 2, 3, 4, 5]           |&lt;br/&gt;| [6, 7, 8]                   | [6, 7, 8]                 |&lt;br/&gt;| []                          | []                        |&lt;br/&gt;| NULL                        | NULL                      |&lt;br/&gt;| [1, 2, 3, 4, 5, 4, 3, 2, 1] | [1, 2, 3, 4, 5]           |&lt;br/&gt;| [1, 2, 3, NULL]             | [1, 2, 3, NULL]           |&lt;br/&gt;| [1, 2, 3, NULL, NULL]       | [1, 2, 3, NULL]     |&lt;br/&gt;+&lt;span&gt;-----------------------------+---------------------------+&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;// 配合array使用较多的explode函数，可以轻松实现列转行：&lt;br/&gt;&lt;span&gt;select&lt;/span&gt; e1 &lt;span&gt;from&lt;/span&gt; (&lt;span&gt;select&lt;/span&gt; &lt;span&gt;1&lt;/span&gt; k1) &lt;span&gt;as&lt;/span&gt; t &lt;span&gt;lateral&lt;/span&gt; &lt;span&gt;view&lt;/span&gt; &lt;span&gt;explode&lt;/span&gt;([&lt;span&gt;1&lt;/span&gt;,&lt;span&gt;2&lt;/span&gt;,&lt;span&gt;3&lt;/span&gt;]) tmp1 &lt;span&gt;as&lt;/span&gt; e1;&lt;br/&gt;+&lt;span&gt;------+&lt;/span&gt;&lt;br/&gt;| e1   |&lt;br/&gt;+&lt;span&gt;------+&lt;/span&gt;&lt;br/&gt;|    1 |&lt;br/&gt;|    2 |&lt;br/&gt;|    3 |&lt;br/&gt;+&lt;span&gt;------+&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;// explode_split函数：按分隔符分割字符串，并将结果打散，实现列转行：&lt;br/&gt;&lt;span&gt;select&lt;/span&gt; * &lt;span&gt;from&lt;/span&gt; example1;&lt;br/&gt;+&lt;span&gt;---------+&lt;/span&gt;&lt;br/&gt;| k1      |&lt;br/&gt;+&lt;span&gt;---------+&lt;/span&gt;&lt;br/&gt;| a, b, c |&lt;br/&gt;+&lt;span&gt;---------+&lt;/span&gt;&lt;br/&gt;&lt;span&gt;select&lt;/span&gt; e1 &lt;span&gt;from&lt;/span&gt; example1 &lt;span&gt;lateral&lt;/span&gt; &lt;span&gt;view&lt;/span&gt; explode_split(k1, &lt;span&gt;&#x27;,&#x27;&lt;/span&gt;) tmp1 &lt;span&gt;as&lt;/span&gt; e1;&lt;br/&gt;+&lt;span&gt;------+&lt;/span&gt;&lt;br/&gt;| e1   |&lt;br/&gt;+&lt;span&gt;------+&lt;/span&gt;&lt;br/&gt;|  b   |&lt;br/&gt;|  c   |&lt;br/&gt;|  a   |&lt;br/&gt;+&lt;span&gt;------+&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;code data-wrap=&quot;true&quot;/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;h1&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;#  总结&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;&lt;span&gt;通过 Apache Doris 系统自身的优异能力和丰富的行为分析函数，已经有越来越多的企业选择基于 Apache Doris 构建高效的用户行为分析平台，更多案例欢迎关注 SelectDB 公众号以及相关技术博客。后续我们仍会持续加强这方面的能力，包括提供更丰富的数据类型以及行为分析函数，如果您在搭建用户行为分析平台过程中遇到任何问题，欢迎联系社区进行支持。同时也欢迎加入 Apache Doris 社区，一起将 Apache Doris 建设地更加强大！&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;作者介绍：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;李仕杨，SelectDB 生态研发工程师，Apache Doris Contributor&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;# 相关链接：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;SelectDB 官网&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;https://selectdb.com &lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;Apache Doris 官网&lt;/strong&gt;：&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;http://doris.apache.org&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;Apache Doris Github&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;https://github.com/apache/doris&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;- End-&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span data-docs-delta=&quot;[[20,{&amp;quot;gallery&amp;quot;:&amp;quot;https://uploader.shimo.im/f/s3aWTKah9u80nENw.png!thumbnail&amp;quot;},&amp;quot;29:0|30:0|3:\&amp;quot;281px\&amp;quot;|4:\&amp;quot;281px\&amp;quot;|crop:\&amp;quot;\&amp;quot;|frame:\&amp;quot;none\&amp;quot;|ori-height:\&amp;quot;700\&amp;quot;|ori-width:\&amp;quot;700\&amp;quot;&amp;quot;]]&quot; data-copy-origin=&quot;https://shimo.im&quot;&gt;&lt;p&gt;&lt;span&gt;欢迎更多的开源技术爱好者加入 Apache Doris 社区交流群，携手成长，共建社区生态。&lt;span&gt;&lt;strong&gt;&lt;span&gt;Apache Doris 社区当前已容纳了上万名开发者和使用者，承载了 30+ 交流社群&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;，如果你也是 Apache Doris 的爱好者，非常欢迎您的加入！&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.37037037037037035&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Uecg6b8kbSa1vNd41IsGbcnyuKVdhnccibPo7TpyHk6KhqX9tJ8UlTzf3GfYFuVFBCSNKMxAvLErEP21iciaYQDLQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;section data-mpa-template-id=&quot;1159112&quot; data-mpa-category=&quot;fav&quot;&gt;&lt;section&gt;&lt;section data-tools-id=&quot;21516&quot;&gt;&lt;section powered-by=&quot;KolEditor.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;KolEditor.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;北京飞轮数据科技有限公司（简称：SelectDB） 是一家专注开源技术创新的云原生实时数据库厂商，也是 Apache Doris 背后的商业化公司，致力于为 Apache Doris 社区提供一个由全职工程师、产品经理和支持工程师组成的团队，繁荣开源社区生态，打造实时分析型数据库领域的国际工业界标准。基于 Apache Doris 研发的新一代云原生实时数仓 SelectDB，运行于多家云上，为客户提供极简运维和极致性价比的数仓服务。&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;h4&gt;&lt;span&gt;▼   点击阅读原文，给 Doris 点个赞吧！&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;mp-style-type data-value=&quot;3&quot;/&gt;&lt;/p&gt;&lt;/div&gt;

          
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>c320ee90138ca7fcdf166bcb6828606b</guid>
<title>深入理解 Taier：MR on Yarn 的实现原理</title>
<link>https://toutiao.io/k/v0thkod</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;mp-common-profile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-weui-theme=&quot;light&quot; data-id=&quot;MzU5ODYyNTkxMA==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/Xxm5O5TNdibjq6vWfzoiatUQqDDbC9ErUmEl9Ob9CxialCIHo1GFzfyRJI1OSstY5vm6tMhMRx2OrazSqnDsQhmpA/0?wx_fmt=png&quot; data-nickname=&quot;数栈研习社&quot; data-alias=&quot;dtstack_tech&quot; data-signature=&quot;袋鼠云旗下专业的数据中台学习交流平台，提供数据中台方法论解析、产品解读、开源技术实践等内容，助你飞速成长&quot; data-from=&quot;0&quot; data-is_biz_ban=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;\&lt;/span&gt; | &lt;span&gt;/&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;关注我们不迷路&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;作者 / 偷天&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;编辑 / 阿晗&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;p powered-by=&quot;xiumi.us&quot;&gt;&lt;/p&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;我们今天常说的大数据技术，它的理论基础来自于2003年  Google 发表的三篇论文，《The Google File System》、《MapReduce: Simplified Data Processing on Large Clusters》、《Bigtable: A Distributed Storage System for Structured Data》。这三篇论文分别对应后来出现的 HDFS，MapReduce， HBase。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;在大数据的发展历史上，还有一个名字是无论如何都绕不开的，那就是 Doug Cutting。Doug是 Apache  Lucene、Nutch、Hadoop、Avro 项目的创始人，2006 年 Docu Cutting 开源了 Hadoop，名字取自于他儿子的玩具小象 Hadoop。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;那么就从 Hadoop 起，我们开始本文的分享。&lt;/p&gt;&lt;/section&gt;&lt;p powered-by=&quot;xiumi.us&quot;&gt;&lt;/p&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;Taier &amp;amp; Yarn&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p powered-by=&quot;xiumi.us&quot;&gt;&lt;/p&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;Hadoop&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p powered-by=&quot;xiumi.us&quot;&gt;新生事物的成长往往是螺旋上升的，Hadoop 也是如此。Hadoop 1.0 是指 MapReduce + HDFS，其中 MapReduce 是一个离线处理框架，由编程模型（新旧API）、运行时环境（JobTracker 和 TaskTracker）和数据处理引擎（MapTask和ReduceTask）三部分组成。早期的 MapReduce 非常臃肿，有着很明显的缺点，JobTracker 有单点故障问题、框架设计只能执行 MapReduce 任务，不能跑 Storm，Flink 等计算框架的任务。&lt;/p&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.0251889&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Xxm5O5TNdibhSv6rK4p2icmwn2c78icTO3SWNSlfa5GbiamrouCgvjqpibQicjt4M1K0OGkgyWWso4qW0eiaPBXIuzM7w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;397&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;Hadoop 1.0 架构图&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;之后迎来的 Hadoop 2.0 是指 MapReduce + HDFS + Yarn，其中 YARN 是一个资源管理系统，负责集群资源管理和调度， MapReduce 则是运行在 YARN 上的离线处理框架。Hadoop 2.0 很好地解决了单点问题，它将 JobTracker 中的资源管理和作业控制分开，分别由 ResourceManager 负责所有应用程序的资源分配，ApplicationMaster 负责管理一个应用程序。并且解决了扩展问题，包括针对 Hadoop 1.0 中的 MapReduce 在扩展性和多框架支持等方面的不足。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8371608&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Xxm5O5TNdibhSv6rK4p2icmwn2c78icTO3SN6V28hX4jekiblI1ZpyknLYUsqflMFg6LdNDW8dVZMjibM1cb1VD96AQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;479&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;Hadoop 2.0 架构图&lt;/p&gt;&lt;/section&gt;&lt;p powered-by=&quot;xiumi.us&quot;&gt;&lt;/p&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;MapReduce 2.0&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p powered-by=&quot;xiumi.us&quot;&gt;MapReduce 1.0的工作机制中，角色主要包括客户端，Jobtracker，Tasktracker。Jobtracker 主要是协调作业的运行，而 Tasktracker 是负责运行作业划分之后的任务。网上关于 MR 1.0 的内容很多，这里就不再过多赘述，流程图如下：&lt;/p&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5037037&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Xxm5O5TNdibhSv6rK4p2icmwn2c78icTO3S3ribx29ppqiagkQJLPq6j6WrdffyVFO2YCT1QibqvDhyVBbswk2I4HNSg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;p powered-by=&quot;xiumi.us&quot;&gt;&lt;/p&gt;&lt;p powered-by=&quot;xiumi.us&quot;&gt;到了 MapReduce 2.0，核心思想则是将 MR 1.0 中 JobTracker 的资源管理和任务调度两个功能分开，分别由 ResourceManager 和 ApplicationMaster 进程实现。&lt;/p&gt;&lt;p powered-by=&quot;xiumi.us&quot;&gt;&lt;/p&gt;&lt;p powered-by=&quot;xiumi.us&quot;&gt;MR 2.0 的工作流程主要分为以下6个执行过程（请将图片和文字对照起来看）：&lt;/p&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.9848714&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Xxm5O5TNdibhSv6rK4p2icmwn2c78icTO3SPy1Vot9NyL0DuNAf6pibr1NY9Hib3tGQX0gd1z1Xhu5aeXmnYviaPliaHg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;661&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;1&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;作业的提交&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;1)客户端向 ResourceManager 请求一个新的作业ID，ResourceManager 收到后，回应一个 ApplicationID，见第2步&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;2)计算作业的输入分片，将运行作业所需要的资源(包括jar文件、配置文件和计算得到的输入分片)复制到一个(HDFS)，见第3步&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;3)告知 ResourceManager 作业准备执行，并且调用 submitApplication() 提交作业，见第4步&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;2&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;作业的初始化&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;4) ResourceManager收到对其 submitApplication() 方法的调用后，会把此调用放入一个内部队列中，交由作业调度器进行调度，并对其初始化，然后为该其分配一个 contain 容器，见第5步&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;5)并与对应的 NodeManager 通信，见第5a步；要求它在 Contain 中启动 ApplicationMaster ，见第5b步&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;6) ApplicationMaster 启动后，会对作业进行初始化，并保持作业的追踪，见第6步&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;7) ApplicationMaster 从 HDFS 中共享资源，接受客户端计算的输入分片为每个分片，见第7步&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;3&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;任务的分配&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;8) ApplicationMaster 向 ResourceManager 注册，这样就可以直接通过 RM 查看应用的运行状态，然后为所有的 map 和 reduce 任务获取资源，见第8步&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;4&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;任务的执行&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;9) ApplicationMaster 申请到资源后，与 NodeManager 进行交互，要求它在 Contain 容器中启动执行任务，见第9a、9b步&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;5&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;进度和状态的更新&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;10)各个任务通过 RPC 协议 umbilical 接口向 ApplicationMaster 汇报自己的状态和进度，方便 ApplicationMaster 随时掌握各个任务的运行状态，用户也可以向 ApplicationMaster 查询运行状态&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;6&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;作业的完成&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;11)应用完成后，ApplicationMaster 向 ResourceManager 注销并关闭自己&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p powered-by=&quot;xiumi.us&quot;&gt;&lt;/p&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;手写一个 Yarn 程序&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p powered-by=&quot;xiumi.us&quot;&gt;如果想要将一个新的应用程序运行在 YARN 之上，通常需要编写两个组件：客户端和  ApplicationMaster。&lt;/p&gt;&lt;p powered-by=&quot;xiumi.us&quot;&gt;&lt;span&gt;&lt;strong&gt;·&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt; &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;客户端编写需要注意：&lt;/strong&gt;客户端通常只需与 ResourceManager 交互，期间涉及到多个数据结构和一个 RPC 协议。&lt;/p&gt;&lt;p powered-by=&quot;xiumi.us&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;·&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;ApplicationMaster 编写需要注意：&lt;/strong&gt;&lt;span&gt;ApplicationMaster 需要与 ResoureManager 和 NodeManager 交互，以申请资源和启动 Container，期间涉及到多个数据结构和两个 RPC 协议。&lt;/span&gt;&lt;/p&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;手写一个 YARN Application 程序对理解 YARN 的运行原理非常有帮助，熟悉 Spark 、Flink  计算组件的同学也可以参考 Spark on Yarn、Flink on Yarn 的源代码。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;Taier&amp;amp;Yarn&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p powered-by=&quot;xiumi.us&quot;&gt;洋洋洒洒，回过头来，现在来给大家介绍一下 Taier 和 Yarn 之间的关系。&lt;/p&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Taier 作为一站式大数据任务调度引擎，是数栈数据中台整体架构的重要枢纽，负责调度日常庞大的任务量。&lt;/strong&gt;它旨在降低ETL开发成本，提高大数据平台稳定性，让大数据开发人员可以在 Taier 直接进行业务逻辑的开发，而不用关心任务错综复杂的依赖关系与底层的大数据平台的架构实现，将工作的重心更多地聚焦在业务之中。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;为了更好地实现让数据开发人员关注业务的目标，Taier 主要在控制台中展示了 Hadoop Yarn的相关信息。分为以下3点：Yarn 配置管理、Yarn 资源管理、任务 on Yarn 的相关配置。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3944444&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Xxm5O5TNdibhSv6rK4p2icmwn2c78icTO3SfvSodibZOwJ5rBvOJGlFZOaiaFDcicRJwY71tUttYuaDFtN61ewiaDmwTA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;下面为大家展示一下 Taier 中 Yarn 相关的页面：&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7665289&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Xxm5O5TNdibhSv6rK4p2icmwn2c78icTO3ShFfCeRjXJN2Znia0k4PsYniasF5tA3s8vfHhKf6LWR2d1s3bDCyWXfVw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;484&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;Yarn 配置管理&lt;/p&gt;&lt;/section&gt;&lt;p powered-by=&quot;xiumi.us&quot;&gt;&lt;/p&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6812816&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Xxm5O5TNdibhSv6rK4p2icmwn2c78icTO3SvR6tzhyQmcl6kotg3iaNVLVexISSoeicm5XDqjXmmJ0fvbxPsTJWr3tw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;593&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;Yarn 资源管理&lt;/p&gt;&lt;/section&gt;&lt;p powered-by=&quot;xiumi.us&quot;&gt;&lt;/p&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7463918&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Xxm5O5TNdibhSv6rK4p2icmwn2c78icTO3SXS0c7EpbPwIR3mhwrnRqY4VY8fPxMDHsKmCoE2U2Z0SUNEAnOibobqw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;485&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;任务 on Yarn&lt;/p&gt;&lt;/section&gt;&lt;p powered-by=&quot;xiumi.us&quot;&gt;&lt;/p&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;实现原理&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p powered-by=&quot;xiumi.us&quot;&gt;&lt;/p&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;前情提要全部讲完，下面为大家重点介绍下 Taier 怎么实现 MR on Yarn 的计算。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;Taier 目前支持22种任务类型&lt;/strong&gt;，支持在 Yarn 上运行的任务有 python、shell、数据同步、实时采集、Flink Jar、Flink SQL、Spark SQL 和 Hadoop MR 等等。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;实现原理&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p powered-by=&quot;xiumi.us&quot;&gt;以 MR on Yarn 任务为例，其实现原理主要有2个关键步骤：&lt;/p&gt;&lt;p powered-by=&quot;xiumi.us&quot;&gt;&lt;span&gt;&lt;strong&gt;·&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt; &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;组装任务运行时的相关信息生成 pluginInfo，信息包含任务相关配置、YARN 配置、HDFS 配置和公共配置。&lt;/p&gt;&lt;p powered-by=&quot;xiumi.us&quot;&gt;&lt;span&gt;&lt;strong&gt;·&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt; &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;根据 pluginInfo 实例化相应的任务提交客户端，客户端负责向 YARN 提交任务，实现了 Taier 与计算集群的解耦、保证节点无侵入。&lt;/p&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4907407&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Xxm5O5TNdibhSv6rK4p2icmwn2c78icTO3S9hicE5R3pVZvK1oOQkLX17gu8ibMn4JURRQqcsXRkUaexHkzjxUqM4yw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;p powered-by=&quot;xiumi.us&quot;&gt;&lt;/p&gt;&lt;p powered-by=&quot;xiumi.us&quot;&gt;下图是目前已经在 Taier 上运行的 Flink 任务的一些参数，包括 groupName、jobID 等：&lt;/p&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6901914&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Xxm5O5TNdibhSv6rK4p2icmwn2c78icTO3SMwfav6umR3ytkho1QibyVLTH1ia3oiaNS7MBia9TLMjalVLbXhnrm40Gwg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;836&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8753117&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Xxm5O5TNdibhSv6rK4p2icmwn2c78icTO3S9T5cF44nCzaS2h1VTKghVoXd7rL9H2xFlPpt3E8LXWyTczKZHCSH0A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;401&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;p powered-by=&quot;xiumi.us&quot;&gt;&lt;/p&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;执行原理&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p powered-by=&quot;xiumi.us&quot;&gt;以 MR on Yarn 任务为例，其执行原理可以分为以下3个阶段：&lt;/p&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5101852&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Xxm5O5TNdibhSv6rK4p2icmwn2c78icTO3SfyzBOTyjLoyWvXYibYjwCLecj0IuraBeT8Jk6EDb7nqUljm1ExoK7Hg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;p powered-by=&quot;xiumi.us&quot;&gt;&lt;/p&gt;&lt;p powered-by=&quot;xiumi.us&quot;&gt;&lt;strong&gt;&lt;span&gt;● 准备阶段&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p powered-by=&quot;xiumi.us&quot;&gt;&lt;span&gt;&lt;strong&gt;·&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt; &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;对普通的 Hadoop MR 任务进行改造，修改 MR 代码的 Main 方法&lt;/p&gt;&lt;p powered-by=&quot;xiumi.us&quot;&gt;&lt;span&gt;&lt;strong&gt;·&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt; &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;编译修改后的 Hadoop MR 任务，并通过 Taier 的资源上传功能将 Jar 进行上传，目标选择 HDFS&lt;/p&gt;&lt;p powered-by=&quot;xiumi.us&quot;&gt;&lt;span&gt;&lt;strong&gt;·&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt; &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;配置 Haddoop MR 任务的任务参数&lt;/p&gt;&lt;p powered-by=&quot;xiumi.us&quot;&gt;&lt;/p&gt;&lt;p powered-by=&quot;xiumi.us&quot;&gt;&lt;strong&gt;&lt;span&gt;● 运行阶段&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p powered-by=&quot;xiumi.us&quot;&gt;&lt;span&gt;&lt;strong&gt;·&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt; &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;Taier 的 worker-plugin 主要负责任务提交相关工作，其中 hadoop 插件会负责 MR 任务的相关处理&lt;/p&gt;&lt;p powered-by=&quot;xiumi.us&quot;&gt;&lt;span&gt;&lt;strong&gt;·&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt; &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;实例化 HadoopClient，并下载准备阶段上传的 MR 任务对应的 Jar（注意这里是一个任务的生命周期，为了保障任务的无状态，所以每次运行都会重新下载一次）&lt;/p&gt;&lt;p powered-by=&quot;xiumi.us&quot;&gt;&lt;span&gt;&lt;strong&gt;·&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt; &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;通过 MapReduceTemplate ，加载 Jar 并构建 MR 任务的类加载器&lt;/p&gt;&lt;p powered-by=&quot;xiumi.us&quot;&gt;&lt;span&gt;&lt;strong&gt;·&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt; &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;通过类加载器实获取 Class 类对象，并调用类对象的 Main 方法，传入 Configuration、args 等参数&lt;/p&gt;&lt;p powered-by=&quot;xiumi.us&quot;&gt;&lt;span&gt;&lt;strong&gt;·&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt; &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;返回 JobId&lt;/p&gt;&lt;p powered-by=&quot;xiumi.us&quot;&gt;&lt;/p&gt;&lt;p powered-by=&quot;xiumi.us&quot;&gt;&lt;strong&gt;&lt;span&gt;● 运维阶段&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p powered-by=&quot;xiumi.us&quot;&gt;&lt;span&gt;&lt;strong&gt;·&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt; &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;处理 JobId 并转化为 ApplicationId&lt;/p&gt;&lt;p powered-by=&quot;xiumi.us&quot;&gt;&lt;span&gt;&lt;strong&gt;·&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt; &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;实例化 YarnClient，获取 MR on Yarn 的相关信息，包括运行状态、日志、停止 Application&lt;/p&gt;&lt;p powered-by=&quot;xiumi.us&quot;&gt;&lt;/p&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;Taier 中的 Hadoop 插件&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p powered-by=&quot;xiumi.us&quot;&gt;Hadoop MR 的任务在 Taier 中的实现是基于 Hadoop 的插件，在里面实现了相关的类，其中比较主要的包括：&lt;/p&gt;&lt;p powered-by=&quot;xiumi.us&quot;&gt;&lt;span&gt;&lt;strong&gt;·&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt; &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;HadoopClient：&lt;/strong&gt; 实现任务提交运行的相关接口（init、judgeSlots、processSubmitJobWithType、beforeSubmitFunc、afterSubmitFunc、getJobStatus、getJobLog、cancelJob）&lt;/p&gt;&lt;p powered-by=&quot;xiumi.us&quot;&gt;&lt;span&gt;&lt;strong&gt;·&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt; &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;MapReduceTemplate：&lt;/strong&gt;封装 MR 任务及其重要参数、方法，实例化 PackagedProgram&lt;/p&gt;&lt;p powered-by=&quot;xiumi.us&quot;&gt;&lt;span&gt;&lt;strong&gt;·&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt; &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;PackagedProgram：&lt;/strong&gt;MR 任务提交前的处理实现&lt;/p&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;这一部分相关的代码可以在 PR 中的上下文看到，也可以下载 Taier 插件看到关键类所做的事件，如何相互配合实现 MR 任务往 Yarn 上进行提交。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;相关PR：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;https://github.com/DTStack/Taier/pull/983&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;案例演示&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p powered-by=&quot;xiumi.us&quot;&gt;&lt;/p&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;案例演示的部分，大家直接观看视频，会得到最直观清楚的讲解，本文就不再进行赘述。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;视频链接：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;https://www.bilibili.com/video/BV1ag4y1n7bT/?spm_id_from=333.999.0.0&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7090909&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Xxm5O5TNdibhSv6rK4p2icmwn2c78icTO3S0szscRWiczHSiaOrpDSplgUhmibicrUUVDicUVDMEoia8ouLibw6K60Q9YzwA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;550&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.612963&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Xxm5O5TNdibhSv6rK4p2icmwn2c78icTO3S7sSHcejFBkMaHVqKfFnHY0gz9Uvvsv7zyAC78EvLdVkfS0RqdybrNw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3690722&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Xxm5O5TNdibhSv6rK4p2icmwn2c78icTO3SMyzibKAC59p1icdtZMHTkrbeh246HUS7l3KMgffXKDa6pGP2qic1SZt9g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;970&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3019324&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Xxm5O5TNdibhSv6rK4p2icmwn2c78icTO3SgZlsn3qDgVWjibia4mfw1HeS5zjRdgUHqlBBxKgiaR1fGYqhCv8zicOjmA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;828&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;p powered-by=&quot;xiumi.us&quot;&gt;&lt;/p&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;  &lt;span&gt;&lt;strong&gt;视频课程&amp;amp;PPT获取&lt;/strong&gt;&lt;/span&gt;  &lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;&amp;gt;视频课程：&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;https://www.bilibili.com/video/BV1ag4y1n7bT/?spm_id_from=333.999.0.0&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&amp;gt;课件获取：&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;关注公众号 &lt;strong&gt;&lt;span&gt;“数栈研习社” &lt;/span&gt;&lt;/strong&gt;，后台私信 &lt;span&gt;&lt;strong&gt;“Taier” &lt;/strong&gt;&lt;/span&gt;获得直播课件&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p powered-by=&quot;xiumi.us&quot;&gt;&lt;/p&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;＋&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;往期推荐&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.74&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/Xxm5O5TNdibhSv6rK4p2icmwn2c78icTO3SGIs5zGxMoh4chkVPve8cfI0hbC880Jc0X4to8tw8XbiasiazleevmepQ/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;300&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;▫ &lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU5ODYyNTkxMA==&amp;amp;mid=2247495226&amp;amp;idx=1&amp;amp;sn=08df825e6a917173bc514c48a1520c28&amp;amp;chksm=fe43f523c9347c352ce7c091725329f6141d9f431d3b8f6283d4d3ce08ce0f97c04ea3728e62&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;一看就懂！任务提交的资源判断在Taier中的实践&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;一看就懂！任务提交的资源判断在Taier中的实践&lt;/span&gt;&lt;/a&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;▫ &lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU5ODYyNTkxMA==&amp;amp;mid=2247494989&amp;amp;idx=1&amp;amp;sn=43d754d9895f2b40e6f7b3d78b9c7ee3&amp;amp;chksm=fe43f654c9347f429e92760d30db923ee42fcbd9ee7d8cb3625092b00b6f6ff25746eb6af2f9&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;DAG任务调度系统 Taier 演进之道，探究DataSourceX 模块&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;DAG任务调度系统 Taier 演进之道，探究DataSourceX 模块&lt;/a&gt;&lt;/p&gt;&lt;p&gt;▫ &lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU5ODYyNTkxMA==&amp;amp;mid=2247494697&amp;amp;idx=1&amp;amp;sn=2b0d4144249ea9a12550daa446dbf768&amp;amp;chksm=fe43f730c9347e2690de5d66a3d39b4e21db99018b66beec0419376a6f646d28365646328d1b&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;官宣！Taier1.3新版本正式发布，新鲜功能抢先体验&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;官宣！Taier1.3新版本正式发布，新鲜功能抢先体验&lt;/span&gt;&lt;/a&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;▫ &lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU5ODYyNTkxMA==&amp;amp;mid=2247493745&amp;amp;idx=2&amp;amp;sn=0b7ed813dd5298b41eed663a46eabe8d&amp;amp;chksm=fe43f368c9347a7ea9c947275d151c7a1e296787a14c883031258630c989b9574451c29e4e80&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;任务or实例 详解大数据DAG调度系统Taier任务调度丨直播回顾&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;任务or实例 详解大数据DAG调度系统Taier任务调度丨直播回顾&lt;/span&gt;&lt;/a&gt;&lt;span/&gt;&lt;/p&gt;&lt;/section&gt;&lt;p powered-by=&quot;xiumi.us&quot;&gt;&lt;/p&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;开&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;源&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;交&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;流&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt; ● ChunJun&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;https://github.com/DTStack/chunjun&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://gitee.com/dtstack_dev_0/chunjun&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt; ● Taier&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;https://github.com/DTStack/Taier&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://gitee.com/dtstack_dev_0/taier&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt; ● ChengYing&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;https://github.com/DTStack/chengying&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://gitee.com/dtstack_dev_0/chengying&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt; ● Molecule&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;https://github.com/DTStack/molecule&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://gitee.com/dtstack_dev_0/molecule&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;社&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;群&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;交&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;流&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;209&quot; data-backw=&quot;209&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;209&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;209&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Xxm5O5TNdibhSv6rK4p2icmwn2c78icTO3SG149Nx4eXQgMxLtvZslmta1ialicBSVP145O19LEbhTKXtkoRsVG9HJg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;400&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;袋鼠云Taier交流群&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img data-ratio=&quot;1.3333333&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/Xxm5O5TNdibhSv6rK4p2icmwn2c78icTO3So2knBHOicm6nFu24ZaTn6gdiaO5F7Uhe9hFCsJia1uyPsl1kDJSEmGVRA/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;300&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;点击&lt;span&gt;“阅读原文”&lt;/span&gt;，直达开源社区！&lt;br/&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;1.04&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Xxm5O5TNdibhSv6rK4p2icmwn2c78icTO3STnK8sRI0H3IrWDAibRicRibqTZ6l1HFRnPia3OgQIj1Lb2KDibKEeHjohAw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;400&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>b600d080fea39a873e6a4cf8e36c052d</guid>
<title>震惊，一行 MD5 居然让小伙伴都回不了家！</title>
<link>https://toutiao.io/k/i02ux77</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;preview&quot;&gt;&lt;h4&gt;作者：京东零售 付伟&lt;/h4&gt;

&lt;h1&gt;1. 前言&lt;/h1&gt;

&lt;p&gt;大家好，当你点开这篇文章的时候也许心想是哪个 XX 小编混到这里，先不要着急扔臭鸡蛋，本文是一篇标准（正经）的问题复盘文章。好了，一行MD5居然让小伙伴下不了班，到底是什么问题呢，让我们一起来看看吧。&lt;/p&gt;

&lt;h1&gt;2. 正文&lt;/h1&gt;

&lt;h2&gt;2.1 需求是什么&lt;/h2&gt;

&lt;p&gt;这里不再介绍具体的业务。简而言之，有两个接口（查询、确认）对前端页面提供服务。&lt;/p&gt;

&lt;p&gt;查询接口返回的数据依赖于本地数据与外部接口计算后的结果，也就是页面展示的是数据快照。确认接口是按照页面的展示结果请求外部接口。&lt;/p&gt;

&lt;p&gt;考虑到用户打开展示页面时的数据与提交操作可能间隔很久，实际请求时结果已发生变化，而这种操作会影响业务结果。因此在提交时会进行一次 check，如果发现数据发生变化需要提示页面进行刷新。&lt;/p&gt;

&lt;p&gt;为了方便大家理解，我简单的画了个图，毕竟上面太啰嗦了。&lt;/p&gt;



&lt;p&gt;&lt;img src=&quot;https://p3-sign.toutiaoimg.com/tos-cn-i-qvj2lq49k0/7ab9fdc5ed5e40a181f56cbae51674ea%7Enoop.image?_iz=58558&amp;amp;from=article.pc_detail&amp;amp;x-expires=1679450634&amp;amp;x-signature=R6j05OAHN9VZ%2BZn3WqYijs9AR20%3D&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;



&lt;p&gt;&lt;img src=&quot;https://p3-sign.toutiaoimg.com/tos-cn-i-qvj2lq49k0/9a0a68b2521f40368e6cd91d77d71f9a%7Enoop.image?_iz=58558&amp;amp;from=article.pc_detail&amp;amp;x-expires=1679450634&amp;amp;x-signature=8ic%2F6QsEQn%2BJuAZQb7KiU580Zvg%3D&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;虽然这个图有点草率，但是相信看到这里的小伙伴（默认都是聪明的）都对需求了然于胸了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://p3-sign.toutiaoimg.com/tos-cn-i-qvj2lq49k0/3c7750e71e4b4c9792e4e92320e8da2f%7Enoop.image?_iz=58558&amp;amp;from=article.pc_detail&amp;amp;x-expires=1679450634&amp;amp;x-signature=aGfttWhd90pokIrXZ%2BWwiwjWJGM%3D&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;h2&gt;2.2 我怎么搞得&lt;/h2&gt;

&lt;p&gt;掰扯了半天，我们的主角MD5还没有出场，别着急风雨总在彩虹后。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://p3-sign.toutiaoimg.com/tos-cn-i-qvj2lq49k0/0b205f0978e64817a4a0ee717205593b%7Enoop.image?_iz=58558&amp;amp;from=article.pc_detail&amp;amp;x-expires=1679450634&amp;amp;x-signature=zUAbrJDt8xNYTjvO7sog1FQF29U%3D&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;可以看出，这里需要前端将查询接口的返回值重新组装作为确认接口的入参。而后端需要再次走数据聚合的逻辑与前端传过来的业务值进行比较，如果不匹配则提示页面需要刷新。&lt;/p&gt;

&lt;p&gt;一切看起来都顺理成章，那么小编遇到了什么问题呢？&lt;/p&gt;

&lt;p&gt;简单来说有两点：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; 前端同学表示值不好传，因为这个页面比较复杂，具体原因小编也没深究，可能是被糊弄了。&lt;/li&gt;
&lt;li&gt; 后端同学（也就是小编）发现，这样查询接口和确认接口耦合很严重，如果确认接口需要新的入参，那么就需要改动查询接口。随着查询接口逻辑越来越复杂，确认接口的一个入参就需要一层一层的传过来。很不友好。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;呵呵，机智的小编灵机一动，便想到了了MD5，看看百度百科怎么说&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;MD5 信息摘要算法（英语：MD5 Message-Digest Algorithm），一种被广泛使用的密码散列函数，可以产生出一个 128 位（16 字节）的散列值（hash value），用于确保信息传输完整一致。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;一图胜千言&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://p3-sign.toutiaoimg.com/tos-cn-i-qvj2lq49k0/011dd8d343bd4d639d7d4fec67cbfbb2%7Enoop.image?_iz=58558&amp;amp;from=article.pc_detail&amp;amp;x-expires=1679450634&amp;amp;x-signature=oPOLeYpwcV90ccURlmofCcQukFo%3D&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;在工程，它差不多就是这么用。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;String md5= Md5Utils.get(String source);


&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;可能有聪明的小伙伴会说了，这是散列函数存在哈希碰撞，不同的字符串也有可能生成相同的哈希值。&lt;/p&gt;

&lt;p&gt;是的没错，但是在小编的业务场景中，这种出现的概率微乎其微，忽略不计，解释权归小编所有。&lt;/p&gt;

&lt;p&gt;那么具体怎么做的呢，还是看图说话：&lt;/p&gt;



&lt;p&gt;&lt;img src=&quot;https://p3-sign.toutiaoimg.com/tos-cn-i-qvj2lq49k0/aeff4c33bb3044af8316b41bb4aac552%7Enoop.image?_iz=58558&amp;amp;from=article.pc_detail&amp;amp;x-expires=1679450634&amp;amp;x-signature=80IG3ma%2Butk6FHE5ma1eLhdHErQ%3D&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;



&lt;p&gt;&lt;img src=&quot;https://p3-sign.toutiaoimg.com/tos-cn-i-qvj2lq49k0/f8557733ab324e50a17af394ed94ff2b%7Enoop.image?_iz=58558&amp;amp;from=article.pc_detail&amp;amp;x-expires=1679450634&amp;amp;x-signature=Vo3k2r2KAbn8uPqiU9m%2BRrkvt2U%3D&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;我们需要对查询接口返回的业务集关键属性进行组合哈希，这样可以生成数据快照值。确认接口无需再传入业务集合，只需要传入数据快照值，后端进行对比即可知道是否发生变更。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;一切都是那么的美好，接下来就到了动人心魄的编码环节。话不多说，小编的项目中引入了hutool包，什么你不知道糊涂包？&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Hutool 是一个小而全的 Java 工具类库，通过静态方法封装，降低相关 API 的学习成本，提高工作效率，使 Java 拥有函数式语言般的优雅，让 Java 语言也可以“甜甜的”。Hutool 中的工具方法来自每个用户的精雕细琢，它涵盖了 Java 开发底层代码中的方方面面，它既是大型项目开发中解决小问题的利器，也是小型项目中的效率担当；&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;真不错，果然是效率担当，一行代码就搞定了。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    /**
     * 生成数据哈希
     */
    private String generateSnapShotHash(AcceptListQueryWrapResultDTO wrapResultDTO) {
        StringBuilder builder = new StringBuilder();
        for (AcceptListQueryResultDTO item : wrapResultDTO.getAllList()) {
            builder.append(item.getQuotationId()).append(item.getOperateType()).append(item.getPriceTypeCN());
        }
        return MD5.create().digestHex16(builder.toString());
    }


&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;https://p3-sign.toutiaoimg.com/tos-cn-i-qvj2lq49k0/02586db196bf4b2bbd3a8a68f2b60776%7Enoop.image?_iz=58558&amp;amp;from=article.pc_detail&amp;amp;x-expires=1679450634&amp;amp;x-signature=rF5QFLvRCidBn74FeyUcbyjtjQc%3D&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;请各位看官记住这行代码&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;MD5.create().digestHex16(builder.toString());


&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;毕竟它就是糊弄你点进来的罪魁祸首。&lt;/p&gt;

&lt;h2&gt;2.3 出了什么事&lt;/h2&gt;

&lt;p&gt;当小编开发完以后，开心的部署在了测试环境。和前端联调的时候，发现第一次请求总是超时 ？？？&lt;/p&gt;

&lt;p&gt;一想可能是mock平台的问题，毕竟三方的查询接口还没开发完成，就不以为然。请注意，只是第一次超时。同样的请求参数第二次光速返回。呵呵，你说不是环境的问题，小编自己都不大信呢。&lt;/p&gt;

&lt;p&gt;友方的接口开发完了，小编期待的换上了对方的接口。结果现实给了小编一记左勾拳，还是第一次超时。这不科学？于是小编对自身产生了怀疑？难道不是环境的问题?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://p3-sign.toutiaoimg.com/tos-cn-i-qvj2lq49k0/e414595e91ed4a62a4db3cd8ee11bbad%7Enoop.image?_iz=58558&amp;amp;from=article.pc_detail&amp;amp;x-expires=1679450634&amp;amp;x-signature=hrKiq4GRKbusq63tazFna3c8SP8%3D&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;于是连忙在本地测试了一下，居然是光速返回。作为自信的人一定不是代码的问题，那么这个锅往哪里甩呢？又臭又硬的小编狠狠的思考了一分钟，又将锅甩给了业务网关（统一接收HTTP请求）肯定是它的毛病，毕竟测试环境的网关出问题很常见。&lt;/p&gt;

&lt;p&gt;于是开开心心的准备上预发了。上了预发绝对没问题！！！小编信誓旦旦的对QA说道。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://p3-sign.toutiaoimg.com/tos-cn-i-qvj2lq49k0/c696c7bb596148a8a46c86c27d703178%7Enoop.image?_iz=58558&amp;amp;from=article.pc_detail&amp;amp;x-expires=1679450634&amp;amp;x-signature=4npWLY%2FJ6X8k1wnfIbOLcHG6tO8%3D&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;上帝为你关上一扇门的同时也会为你关上一扇窗，预发环境第一次还是超时！！！小编觉得很惭愧对不起一起上线的小伙伴，毕竟大家都准备十点下机了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://p3-sign.toutiaoimg.com/tos-cn-i-qvj2lq49k0/d15ccdeee903426e87284142e6b31b6c%7Enoop.image?_iz=58558&amp;amp;from=article.pc_detail&amp;amp;x-expires=1679450634&amp;amp;x-signature=0GVmew%2F6IZlTXqrqphwQTiyB%2BBw%3D&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;小编陷入了沉思中。。。&lt;/p&gt;

&lt;h2&gt;2.4 怎么修好的&lt;/h2&gt;

&lt;p&gt;排查了预发环境的接口，友方的杰夫接口TP99只有几毫秒，网关也没有问题，也许是数据库的原因，排查发现也没有问题。顿时，小编又迷茫了。&lt;/p&gt;

&lt;p&gt;山重水复疑无路柳暗花明又一村，机智的小编想到了国内知名厂商开源的一款java诊断工具Arthas，利用它可以查看方法详细耗时。点我查看 主动打开另一扇窗。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;当你遇到以下类似问题而束手无策时，Arthas可以帮助你解决：&lt;/p&gt;

&lt;p&gt;这个类从哪个 jar 包加载的？为什么会报各种类相关的 Exception？&lt;/p&gt;

&lt;p&gt;我改的代码为什么没有执行到？难道是我没 commit？分支搞错了？&lt;/p&gt;

&lt;p&gt;遇到问题无法在线上 debug，难道只能通过加日志再重新发布吗？&lt;/p&gt;

&lt;p&gt;线上遇到某个用户的数据处理有问题，但线上同样无法 debug，线下无法重现！&lt;/p&gt;

&lt;p&gt;是否有一个全局视角来查看系统的运行状况？&lt;/p&gt;

&lt;p&gt;有什么办法可以监控到 JVM 的实时运行状态？&lt;/p&gt;

&lt;p&gt;怎么快速定位应用的热点，生成火焰图？&lt;/p&gt;

&lt;p&gt;怎样直接从 JVM 内查找某个类的实例？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;由于预发环境还是比较麻烦，于是小编在测试环境准备好了arthas环境。&lt;/p&gt;

&lt;p&gt;下面简单介绍下使用步骤：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; 下载全量包 arthas-bin.zip&lt;/li&gt;
&lt;li&gt; 解压&lt;/li&gt;
&lt;li&gt; chmod -777 arthas-boot.jar&lt;/li&gt;
&lt;li&gt; 启动 sudo -u admin -EH java -jar /home/export/App/arthas-boot.jar&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;当看到图标出现时，即启动成功。具体使用方法可以查看官网，此处不再赘述。&lt;/p&gt;

&lt;p&gt;我们使用trace命令查看方法耗时，同时在页面请求该查询接口。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;trace  --skipJDKMethod false com.jd.universal.inquiry.service.protocol.jsf.AcceptListWebErpServiceImpl queryList


&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;https://p3-sign.toutiaoimg.com/tos-cn-i-qvj2lq49k0/be513cd960804d47b28d4cd015c074b9%7Enoop.image?_iz=58558&amp;amp;from=article.pc_detail&amp;amp;x-expires=1679450634&amp;amp;x-signature=xG3XekAh9%2FYm0quyxanw2B4ilLo%3D&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;可以看到这行生成数据快照的方法，耗时占整个接口的99.57%，紧接着我们继续监控generateSnapShotHash方法：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;trace  --skipJDKMethod false com.jd.universal.inquiry.service.protocol.jsf.AcceptListWebErpServiceImpl generateSnapShotHash


&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;https://p3-sign.toutiaoimg.com/tos-cn-i-qvj2lq49k0/222bbe9c3a2a4615b7201a9164961bf4%7Enoop.image?_iz=58558&amp;amp;from=article.pc_detail&amp;amp;x-expires=1679450634&amp;amp;x-signature=RLujp4aFQPMIInMXzeZ9LULWLm4%3D&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;可以看到方法的耗时都集中在&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[99.99% 36562.318173ms ] cn.hutool.crypto.digest.MD5:create() #103


&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;接着再次页面点击请求操作，出现以下情况：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://p3-sign.toutiaoimg.com/tos-cn-i-qvj2lq49k0/e9dd439d120c4ffb9e50c944141036a8%7Enoop.image?_iz=58558&amp;amp;from=article.pc_detail&amp;amp;x-expires=1679450634&amp;amp;x-signature=e4x2dRNv78SUANs2QmdiITzivgk%3D&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;可以看到后面多次请求&lt;br/&gt;
cn.hutool.crypto.digest.MD5:create()方法耗时仅不到一毫秒。和我们之前遇到的状况一致。此时已确定是这行MD5导致的第一次加载很慢。&lt;/p&gt;

&lt;p&gt;虽然原因找到了，但是还是得看下为什么这行代码只有在第一次时这么慢，于是我们进入该方法看看它到底搞什么幺蛾子。&lt;/p&gt;

&lt;p&gt;可以看到初始化方法如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://p3-sign.toutiaoimg.com/tos-cn-i-qvj2lq49k0/de64c08cd0594a7d80d44dace3ddc458%7Enoop.image?_iz=58558&amp;amp;from=article.pc_detail&amp;amp;x-expires=1679450634&amp;amp;x-signature=JqlhXVmYXNgKn5o2H%2BbFjPf33oU%3D&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;由于现象是程序第一次运行很慢，后续很快，根据小编多年的写/修BUG经验怀疑是这段初始化中存在静态加载。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://p3-sign.toutiaoimg.com/tos-cn-i-qvj2lq49k0/03f1492e671f40e3a0b46fde8ba6761f%7Enoop.image?_iz=58558&amp;amp;from=article.pc_detail&amp;amp;x-expires=1679450634&amp;amp;x-signature=9d0bpVz6cRvyLummRe%2BrOHdycWM%3D&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;MessageDigest是JDK自带的类，为应用程序提供摘要算法的，这里我们关注点就落在了上面的一行。我们点进去看一下：&lt;/p&gt;

&lt;p&gt;果然我们看到了他在尝试加载BouncyCastle库，我们来看一下这个库的介绍：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;BouncyCastle（轻量级密码术包）是一种用于 Java 平台的开放源码的轻量级密码术包；Bouncycstle 包含了大量的密码算法，其支持椭圆曲线密码算法，并提供 JCE 1.2.1 的实现。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;https://p3-sign.toutiaoimg.com/tos-cn-i-qvj2lq49k0/5b7b378bd4e3423d8a25eb07dd805450%7Enoop.image?_iz=58558&amp;amp;from=article.pc_detail&amp;amp;x-expires=1679450634&amp;amp;x-signature=duA4I%2BCk5cTTaHl9hJduXlUQtt0%3D&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;所以问题的答案就呼之欲出了，随着源码的深入，我们看到：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  private void setup()
   {
        loadAlgorithms(DIGEST_PACKAGE, DIGESTS);

        loadAlgorithms(SYMMETRIC_PACKAGE, SYMMETRIC_GENERIC);

        loadAlgorithms(SYMMETRIC_PACKAGE, SYMMETRIC_MACS);

        loadAlgorithms(SYMMETRIC_PACKAGE, SYMMETRIC_CIPHERS);

        loadAlgorithms(ASYMMETRIC_PACKAGE, ASYMMETRIC_GENERIC);

        loadAlgorithms(ASYMMETRIC_PACKAGE, ASYMMETRIC_CIPHERS);

        loadAlgorithms(KEYSTORE_PACKAGE, KEYSTORES);

        loadAlgorithms(SECURE_RANDOM_PACKAGE, SECURE_RANDOMS);

        loadPQCKeys();  // so we can handle certificates containing them.
     //省略。。。
    }


&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;正是由于这些算法实现的加载，导致MD5.create()第一次调用时耗时超过数十秒。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://p3-sign.toutiaoimg.com/tos-cn-i-qvj2lq49k0/9e4855b4beae4fda8051926b4b01ad3d%7Enoop.image?_iz=58558&amp;amp;from=article.pc_detail&amp;amp;x-expires=1679450634&amp;amp;x-signature=98QeYMEIsMXzocQwQ5O2EUbZtfk%3D&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;好了，既然找到了问题。那么改动起来就很简单了，小编尝试寻找了糊涂包中提供的方法，发现并没有入参可以关闭该三方加密包的初始化。于是换用了Google提供的MD5的实现。重新打包，部署，一次成功，完美。&lt;/p&gt;

&lt;h1&gt;3. 后语&lt;/h1&gt;

&lt;p&gt;QA同学在测试环境测出了这个问题，而自信的本人不屑一顾，坚持自己愚昧的观点，先认为是Mock的问题，接着又说是网关的问题。由于小编的盲目自信，导致上线到很晚，表示非常的惭愧。总结失败的原因：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; 合理评估使用第三方包&lt;/li&gt;
&lt;li&gt; 测试环境遇到的问题尽力去追，不要盲目下结论&lt;/li&gt;
&lt;li&gt; 要听QA的话&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;4. 参考&lt;/h1&gt;

&lt;p&gt;Bouncy Castle 加密算法包&lt;/p&gt;

&lt;p&gt;arthas 官方文档&lt;/p&gt;

&lt;p&gt;使用 Arthas 进行生产代码热修复&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>2aa26fa547397e7eb005abae9d802dd4</guid>
<title>阿里领导：手下两个应届生，一个踏实喜欢加班，一个技术强挑活，怎么选？</title>
<link>https://toutiao.io/k/px0osmc</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content js_underline_content               autoTypeSetting24psection&amp;#10;            &quot; id=&quot;js_content&quot;&gt;&lt;pre&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;ignored&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;ignored&quot;&gt;&lt;section&gt;&lt;span&gt;点击上方 &lt;/span&gt;&lt;span&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;span&gt;java那些事 &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;，选择 &lt;/span&gt;&lt;span&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;span&gt;星标 &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;公众号&lt;/span&gt;&lt;span/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;h4&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;pre&gt;&lt;pre&gt;&lt;section&gt;&lt;span&gt;重磅资讯，干货，第一时间送达&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;---&lt;/span&gt;&lt;/section&gt;&lt;/pre&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/h4&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;89434&quot;&gt;&lt;p data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;span&gt;近日，有位阿里员工发帖称，自己手下有两个应届生，985本硕和985本，但两人无论性格、技术，还是家境都不一样，问大家如何选择。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;原贴如下：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-fileid=&quot;100011004&quot; data-ratio=&quot;0.8&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/oTKHc6F8tsgtjRE7FZzmJe9kPpxfiaWwXtLJbtvjbBntKV43gOr9gYGlhWiaYGC3yuHbotbMtW5sciaK37Vd5hRbA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;有不少人认为楼主应该考虑选择A。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img data-fileid=&quot;100011006&quot; data-ratio=&quot;1.2472222222222222&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/oTKHc6F8tsgtjRE7FZzmJe9kPpxfiaWwXzMRgCsiaT7HSUwat8ON01dlzb8ibOj0elHc6kUPiciadxMJpG6HFwcYWdg/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;@阿里巴巴员工：&lt;/span&gt;&lt;span&gt;沟通能力强这个真的是练出来的，想法多一定是看到的东西足够多！&lt;/span&gt;&lt;span&gt;A看着平凡，给他环境练一练，不平凡。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;@去哪儿网员工：当然a，不服管教就换人吧。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;@华为技术有限公司员工：B学好了就跑路了。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;@作业帮员工：价值观都正向的情况下，肯定选A，目前这活还没到拼天赋的时候吧。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;@浪潮员工：肯定A呀，要知道A啥活都干，B挑活才跟人产出一样。这还选择不了。你不是当领导的，你是员工吧！别扯什么实现自身价值这些虚的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;但也有网友认为选B最恰当，我喜欢B，B适合单干。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;100011008&quot; data-ratio=&quot;1.113888888888889&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/oTKHc6F8tsgtjRE7FZzmJe9kPpxfiaWwXhFTz06866E4jd17RTzJpw7WszY3xwQ8ia1WJia0JDqaOd7q0W257RQ2A/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;@程序猿：&lt;/span&gt;&lt;span&gt;b，老实人走不远的，会折腾的才厉害。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;@字节跳动员工：事实上绩效好的是B而不是A，因为我就是A这个类型。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;@程序猿：产出相当啊，两个都留住好好培养。给一样的绩效。至于看好谁，我更看好B。A有可能因为你绩效给他打得低，忽略了他的升职加薪，委屈了，他就跑了。反而B，如果你能给他工作上面的动力，可能会非常出色，能在公司一直升。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;@北京中航信柏润员工：当然选B啊，能力强，想法多，这样才能创新，加班是没有效率的人才干的事情，标准是在你能驾驭，如果你不善于知人善用，那么还是选A稳妥。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;但也有网友认为A和B两个人各有各的优点，无法进行比较。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;100011007&quot; data-ratio=&quot;1.1944444444444444&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/oTKHc6F8tsgtjRE7FZzmJe9kPpxfiaWwXa6GTHaXlsvxHLlmLITvvCL9kCTd6h6dUGtAW99EeTRaUJjVcan9nlQ/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;@安东尼奥刘能：A很看重钱，B很看重成就感与自我价值实现。A能轻易被别的厂以更高的价格拐走，B会因为公司待着不舒服离职。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;@阿里巴巴员工：怎么选都有问题，a和b各有各的优点，不发挥人的长处盯着短版，不就pua 吗，本质上达尔文主义那一套，那管理存在又有什么意义和价值。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;@前字节跳动员工：成年人不做选择。各有各的用处，踏实的可以用作后卫把容错率最小最重要的活给他在幕后；把出头沟通横向和门面出彩的活给后面那个。同时要让他俩都知道自己在团队的作用，和自己的不可替代性，用绩效和晋升机会来维持公正。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;还有人觉得两者都要留下来，协同合作，共同发展最为稳妥。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;100011005&quot; data-ratio=&quot;1.0277777777777777&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/oTKHc6F8tsgtjRE7FZzmJe9kPpxfiaWwXkqcwzjw7Zxue9fgIN7CibAriam4iabk8xmamtnSnO8gsVPeFz8D5WtsfA/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;@上海视龙软件员工：让大家都知道你更喜欢A，让B知道你很欣赏他的能力和想法。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;@东集团员工：a是求生存，b是因为喜欢这份工作。发挥不一样的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;@程序猿：&lt;/span&gt;&lt;span&gt;我是a和B的综合。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;@程序猿：有的团队是一只牧羊犬，管着一群羊，有的团队是一匹头狼，带着狼群。取决于你自己是什么。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;@携程员工：两者产出都优秀，也都是企业需要的，都留。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;还有网友认为并不是手下的问题，而是楼主本身管理能力的问题。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;100011009&quot; data-ratio=&quot;1.0277777777777777&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/oTKHc6F8tsgtjRE7FZzmJe9kPpxfiaWwXMq918xYiaXcW9k7GJgk8zia6wVh978ggGN3keqkgrZU1g1RzHPUOCIqQ/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;@北京春闱科技员工：b不服管教的原因可能不在b，有很大可能在于他的上司问题居多。不会领导.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;@Ghidra：看楼主个人的情况了。如果你技术够好能压制B，亦或你人品够好，能让B信服的话，B未来必然是你的强大助力。如果楼主本身并无过人之处，那还是A更合适。不过，考虑到楼主来职言问这种事儿，个人建议考虑A可能更合适一些。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;@归辛树：你这个分析处处透露着你管理水平的低下，为什么不服管，为什么挑活？是不是你无法抓住管理精髓？无法平衡好活脏活的劳得矛盾？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;里面有位网友的评论，想必很多人也比较认可：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;@阿里巴巴（中国）网络技术有限公司员工：题干是应届生，就应该用应届生眼光。首先，学历无差别可认为两人的基础素质和学习能力差不多，只是b性格更跳一些而这是因为他的原生家庭给予了他更多安全感，对于a而言，当他拥有了足够自保的生存空间后，他的沟通表达想法意志不见得会弱于b。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;B的问题在于，他挑活却并没有在活上有超出常人的热忱和产出，说明他的快感仅仅来自于“特立独行”本身，缺少社会层面的大智慧，得看他在这方面能否尽快开窍。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如果你是这位领导，你会选A还是B？&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;更多精彩内容，&lt;strong&gt;关注我们&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;▼▼&lt;/strong&gt;&lt;/p&gt;&lt;section&gt;&lt;mp-common-profile data-weui-theme=&quot;light&quot; class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-id=&quot;MjM5MTM0NjQ2MQ==&quot; data-pluginname=&quot;mpprofile&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/jNmCBexQlC5YGTbia3dRd6YFXWAlPsJK3gZQap6oK8Vk7BLiaBbsvq3BwicyEKwJiaIfeAYXzucAvXP00PKQKVLzJQ/0?wx_fmt=png&quot; data-nickname=&quot;java那些事&quot; data-alias=&quot;csh624366188&quot; data-signature=&quot;分享java开发中常用的技术，分享软件开发中各种新技术的应用方法。每天推送java技术相关或者互联网相关文章。关注“java那些事”，让自己做一个潮流的java技术人！《java程序员由笨鸟到菜鸟》系列文章火热更新中。&quot; data-from=&quot;0&quot; data-is_biz_ban=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;如果看到这里，说明你喜欢这篇文章，&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;标星（置顶）&lt;/span&gt;&lt;span&gt;本公众号可以第一时间接受到博文推送。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;  &lt;/span&gt;&lt;strong&gt;&lt;span&gt; “分享、点赞&lt;/span&gt;&lt;span&gt;、&lt;/span&gt;&lt;span&gt;在看” 支持一波&lt;/span&gt;&lt;/strong&gt;&lt;span&gt; &lt;img data-type=&quot;png&quot; data-ratio=&quot;1&quot; data-w=&quot;64&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/lolOWBY1tkwzw3lDgVHOcuEv7IVq2gCXN5rPlfruYGicNRAP8M5fbZZk7VHjtM8Yv1XVjLFxXnrCQKicmser8veQ/640?wx_fmt=png&quot;/&gt; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;mp-style-type data-value=&quot;3&quot;/&gt;&lt;/p&gt;&lt;/div&gt;

          
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>12d2e76544b42caf2569a83ffff0f1a3</guid>
<title>项目进度管理</title>
<link>https://toutiao.io/k/gh09dh5</link>
<content:encoded>&lt;div&gt;&lt;body id=&quot;readabilityBody&quot; class=&quot;zh_CN wx_wap_page &amp;#10;&amp;#10;                                            wx_wap_desktop_fontsize_2    mm_appmsg&amp;#10; comment_feature&amp;#10; discuss_tab appmsg_skin_default appmsg_style_default&quot;&gt;
    





    






    






&lt;p class=&quot;wx_network_msg_wrp&quot; id=&quot;js_network_msg_wrp&quot;/&gt;

















&lt;div id=&quot;js_pc_weapp_code&quot; class=&quot;weui-desktop-popover weui-desktop-popover_pos-up-center weui-desktop-popover_img-text weapp_code_popover&quot;&gt;
  &lt;div class=&quot;weui-desktop-popover__inner&quot;&gt;
      &lt;div class=&quot;weui-desktop-popover__desc&quot;&gt;
          &lt;img id=&quot;js_pc_weapp_code_img&quot;/&gt;&lt;p&gt;
          Scan with Weixin to &lt;/p&gt;&lt;p&gt;use this Mini Program&lt;/p&gt;&lt;span id=&quot;js_pc_weapp_code_des&quot;/&gt;
      &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;





    
    

&lt;span aria-hidden=&quot;true&quot; class=&quot;weui-a11y_ref&quot; id=&quot;js_a11y_colon&quot;&gt;: &lt;/span&gt;
&lt;span aria-hidden=&quot;true&quot; class=&quot;weui-a11y_ref&quot; id=&quot;js_a11y_comma&quot;&gt;，&lt;/span&gt;
&lt;span aria-hidden=&quot;true&quot; class=&quot;weui-a11y_ref&quot; id=&quot;js_a11y_period&quot;&gt;.&lt;/span&gt;
&lt;span aria-hidden=&quot;true&quot; class=&quot;weui-a11y_ref&quot; id=&quot;js_a11y_space&quot;&gt; &lt;/span&gt;


&lt;span aria-hidden=&quot;true&quot; class=&quot;weui-a11y_ref&quot; id=&quot;js_a11y_type_video&quot;&gt;Video&lt;/span&gt;
&lt;span aria-hidden=&quot;true&quot; class=&quot;weui-a11y_ref&quot; id=&quot;js_a11y_type_weapp&quot;&gt;Mini Program&lt;/span&gt;


&lt;span aria-hidden=&quot;true&quot; class=&quot;weui-a11y_ref&quot; id=&quot;js_a11y_zan_btn_txt&quot;&gt;Like&lt;/span&gt;
&lt;span aria-hidden=&quot;true&quot; class=&quot;weui-a11y_ref&quot; id=&quot;js_a11y_zan_btn_tips&quot;&gt;，轻点两下取消赞&lt;/span&gt;
&lt;span aria-hidden=&quot;true&quot; class=&quot;weui-a11y_ref&quot; id=&quot;js_a11y_like_btn_txt&quot;&gt;Wow&lt;/span&gt;
&lt;span aria-hidden=&quot;true&quot; class=&quot;weui-a11y_ref&quot; id=&quot;js_a11y_like_btn_tips&quot;&gt;，轻点两下取消在看&lt;/span&gt;

    
    
    














    







  &lt;/body&gt;
&lt;/div&gt;</content:encoded>
</item>
</channel></rss>