<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>e5112d4e8699bc2511132c898964c4ee</guid>
<title>【Java综合专栏】「引领序幕」全链路追踪原理之Java Agent探针的技术介绍（上篇）_洛神灬殇的博客-CSDN博客</title>
<link>https://toutiao.io/k/mnunu2w</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div id=&quot;content_views&quot; class=&quot;markdown_views prism-tomorrow-night&quot;&gt;
                    &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;
                        &lt;path stroke-linecap=&quot;round&quot; d=&quot;M5,0 0,2.5 5,5z&quot; id=&quot;raphael-marker-block&quot;/&gt;
                    &lt;/svg&gt;
                    &lt;h3&gt;&lt;a id=&quot;_0&quot;/&gt;前提概要&lt;/h3&gt; 
 
&lt;h3&gt;&lt;a id=&quot;Agent_12&quot;/&gt;Agent的介绍&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Java Agent 直译过来叫做 Java 代理，还有另一种称呼叫做 Java 探针。首先说 Java Agent 是一个 jar 包，只不过这个 jar 包不能独立运行，它需要依附到我们的目标 JVM 进程中。我们来理解一下这两种叫法。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt;&lt;li&gt; &lt;p&gt;代理：比方说我们需要了解目标 JVM 的一些运行指标，我们可以通过 Java Agent 来实现，这样看来它就是一个代理的效果，我们最后拿到的指标是目标 JVM ,但是我们是通过 Java Agent 来获取的，对于目标 JVM 来说，它就像是一个代理；&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;探针：这个说法我感觉非常形象，JVM 一旦跑起来，对于外界来说，它就是一个黑盒。而 Java Agent 可以像一支针一样插到 JVM 内部，探到我们想要的东西，并且可以注入东西进去。&lt;/p&gt; 
  &lt;ul&gt;&lt;li&gt; &lt;p&gt;&lt;strong&gt;拿IDEA调试器来说吧，当开启调试功能后，在debugger面板中可以看到当前上下文变量的结构和内容，还可以在watches面板中运行一些简单的代码，比如取值赋值等操作。&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;&lt;strong&gt;还有Btrace、Arthas这些线上排查问题的工具，比方说有接口没有按预期的返回结果，但日志又没有错误。这时，我们只要清楚方法的所在包名、类名、方法名等，不用修改部署服务，就能查到调用的参数、返回值、异常等信息。&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;&lt;strong&gt;上面只是说到了探测的功能，而热部署功能那就不仅仅是探测这么简单了。热部署的意思就是说再不重启服务的情况下，保证最新的代码逻辑在服务生效。当我们修改某个类后，通过 Java Agent 的 instrument 机制，把之前的字节码替换为新代码所对应的字节码。&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt;&lt;/ul&gt; &lt;/li&gt;&lt;/ul&gt; 
&lt;h3&gt;&lt;a id=&quot;Java_Agent__26&quot;/&gt;Java Agent 结构&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Java Agent 最终以 jar 包的形式存在。主要包含两个部分，一部分是实现代码，一部分是配置文件。配置文件放在 META-INF 目录下，文件名为 MANIFEST.MF 。&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;&lt;a id=&quot;_30&quot;/&gt;包括以下配置项：&lt;/h4&gt; 
&lt;pre&gt;&lt;code&gt;Manifest-Version: 版本号
Created-By: 创作者
Agent-Class: agentmain方法所在类
Can-Redefine-Classes: 是否可以实现类的重定义
Can-Retransform-Classes: 是否可以实现字节码替换
Premain-Class: premain 方法所在类
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;入口类实现 agentmain 和 premain 两个方法即可，方法要实现什么功能就由你的需求决定了。&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;&lt;a id=&quot;Java_Agent__43&quot;/&gt;Java Agent 实现和使用&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;接下来就来实现一个简单的 Java Agent，基于 Java 1.8，主要实现两点简单的功能：&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ol&gt;&lt;li&gt; &lt;p&gt;打印当前加载的所有类的名称；&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;监控一个特定的方法，在方法中动态插入简单的代码并获取方法返回值；&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;在方法中插入代码主要是用到了字节码修改技术，字节码修改技术主要有 javassist、ASM，已经 ASM 的高级封装可扩展 cglib，这个例子中用的是 javassist。所以需要引入相关的 maven 包。&lt;/p&gt; &lt;/li&gt;&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;&amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;javassist&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;javassist&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;3.12.1.GA&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;a id=&quot;_61&quot;/&gt;实现入口类和功能逻辑&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;入口类上面也说了，要实现 agentmain 和 premain 两个方法。&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt;&lt;li&gt; &lt;p&gt;这两个方法的运行时机不一样。这要从 Java Agent 的使用方式来说了，Java Agent 有两种启动方式，一种是以 JVM 启动参数 -javaagent:xxx.jar 的形式随着 JVM 一起启动，这种情况下，会调用 premain方法，并且是在主进程的 main方法之前执行。&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;另外一种是以 loadAgent 方法动态 attach 到目标 JVM 上，这种情况下，会执行 agentmain方法。&lt;/p&gt; &lt;/li&gt;&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;prism language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;premain&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; agentArgs&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Instrumentation&lt;/span&gt; inst&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;premain&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; agentArgs&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;JVM 会优先加载 带 Instrumentation 签名的方法，加载成功忽略第二种，如果第一种没有，则加载第二种方法。Instrumentation是一个重要的参数。&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;在 Java SE 6 的 Instrumentation 当中，提供了一个新的代理操作方法：agentmain，可以在 main 函数开始运行之后再运行，跟premain函数一样， 开发者可以编写一个含有agentmain函数的 Java 类。&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt;&lt;li&gt;采用attach机制，被代理的目标程序VM有可能很早之前已经启动，当然其所有类已经被加载完成，这个时候需要借助Instrumentation#retransformClasses(Class&amp;lt;?&amp;gt;… classes)&lt;/li&gt;&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;让对应的类可以重新转换，从而激活重新转换的类执行ClassFileTransformer列表中的回调&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;prism language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; agentmain &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; agentArgs&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Instrumentation&lt;/span&gt; inst&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; agentmain &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; agentArgs&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;agentMain 主要用于对java程序的监控，调用java进程，将自己编写的agentMain 注入目标完成对程序的监控，修改。&lt;/p&gt; 
&lt;h4&gt;&lt;a id=&quot;_90&quot;/&gt;代码实现如下：&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;prism language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token import&quot;&gt;&lt;span class=&quot;token namespace&quot;&gt;java&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;lang&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;instrument&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Instrumentation&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;MyCustomAgent&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    
    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;premain&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; agentArgs&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Instrumentation&lt;/span&gt; inst&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token class-name&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;out&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;premain&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token function&quot;&gt;customLogic&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;inst&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    
    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;agentmain&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; agentArgs&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Instrumentation&lt;/span&gt; inst&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token class-name&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;out&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;agentmain&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token function&quot;&gt;customLogic&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;inst&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    
    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;customLogic&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Instrumentation&lt;/span&gt; inst&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        inst&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addTransformer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;MyTransformer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token class-name&quot;&gt;Class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; classes &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; inst&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getAllLoadedClasses&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Class&lt;/span&gt; cls &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;classes&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token class-name&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;out&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;cls&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt;&lt;li&gt; &lt;p&gt;我们看到这两个方法都有参数agentArgs和inst，其中 agentArgs 是我们启动 Java Agent 时带进来的参数，比如-javaagent:xxx.jar agentArgs。&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;Instrumentation Java开放出来的专门用于字节码修改和程序监控的实现。我们要实现的打印已加载类和修改字节码也就是基于它来实现的。其中 inst.getAllLoadedClasses()一个方法就实现了获取所以已加载类的功能。&lt;/p&gt; &lt;/li&gt;&lt;/ul&gt; 
&lt;p&gt;inst.addTransformer方法则是实现字节码修改的关键，后面的参数就是实现字节码修改的实现类，代码如下：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;prism language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;MyTransformer&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ClassFileTransformer&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token annotation punctuation&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;ClassLoader&lt;/span&gt; loader&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; className&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Class&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; classBeingRedefined&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ProtectionDomain&lt;/span&gt; protectionDomain&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; classfileBuffer&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;IllegalClassFormatException&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token class-name&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;out&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;正在加载类：&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; className&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;kite/attachapi/Person&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;className&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; classfileBuffer&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;token class-name&quot;&gt;CtClass&lt;/span&gt; cl &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token class-name&quot;&gt;ClassPool&lt;/span&gt; classPool &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ClassPool&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getDefault&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            cl &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; classPool&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;makeClass&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ByteArrayInputStream&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;classfileBuffer&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token class-name&quot;&gt;CtMethod&lt;/span&gt; ctMethod &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; cl&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getDeclaredMethod&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;test&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token class-name&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;out&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;获取方法名称：&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; ctMethod&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            ctMethod&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;insertBefore&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;System.out.println(\&quot; 动态插入的打印语句 \&quot;);&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            ctMethod&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;insertAfter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;System.out.println($_);&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; transformed &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; cl&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;toBytecode&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; transformed&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Exception&lt;/span&gt; e&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            e&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;printStackTrace&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; classfileBuffer&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;以上代码的逻辑就是当碰到加载的类是 kite.attachapi.Person的时候，在其中的 test 方法开始时插入一条打印语句，打印内容是&quot;动态插入的打印语句&quot;，在test方法结尾处，打印返回值，其中$_ 就是返回值，这是 javassist 里特定的标示符。&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;&lt;a id=&quot;MANIFESTMF__165&quot;/&gt;MANIFEST.MF 配置文件&lt;/h4&gt; 
&lt;p&gt;在目录 resources/META-INF/ 下创建文件名为 MANIFEST.MF 的文件，在其中加入如下的配置内容：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Manifest-Version: 1.0
Created-By: fengzheng
Agent-Class: kite.lab.custom.agent.MyCustomAgent
Can-Redefine-Classes: true
Can-Retransform-Classes: true
Premain-Class: kite.lab.custom.agent.MyCustomAgent
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;a id=&quot;_pom__178&quot;/&gt;配置打包所需的 pom 设置&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;最后 Java Agent 是以 jar 包的形式存在，所以最后一步就是将上面的内容打到一个 jar 包里。&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;在 pom 文件中加入以下配置&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;prism language-xml&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;build&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;plugins&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;plugin&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
            &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;groupId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;org.apache.maven.plugins&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;groupId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
            &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;maven-assembly-plugin&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;artifactId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
            &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;configuration&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
                &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;archive&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
                    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;manifestFile&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;src/main/resources/META-INF/MANIFEST.MF&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;manifestFile&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
                &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;archive&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
                &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;descriptorRefs&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
                    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;descriptorRef&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;jar-with-dependencies&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;descriptorRef&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
                &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;descriptorRefs&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
            &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;configuration&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;plugin&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;plugins&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;build&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
 
&lt;pre&gt;&lt;code class=&quot;prism language-xml&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;build&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;plugins&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;plugin&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
            &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;groupId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;org.apache.maven.plugins&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;groupId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
            &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;maven-assembly-plugin&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;artifactId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
            &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;executions&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
                &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;execution&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
                    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;goals&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
                        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;goal&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;attached&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;goal&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
                    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;goals&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
                    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;phase&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;package&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;phase&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
                    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;configuration&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
                        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;descriptorRefs&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
                            &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;descriptorRef&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;jar-with-dependencies&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;descriptorRef&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
                        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;descriptorRefs&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
                        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;archive&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
                            &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;manifestEntries&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
                                &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;Premain-Class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;kite.agent.vmargsmethod.MyAgent&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;Premain-Class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
                                &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;Agent-Class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;kite.agent.vmargsmethod.MyAgent&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;Agent-Class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
                                &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;Can-Redefine-Classes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;true&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;Can-Redefine-Classes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
                                &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;Can-Retransform-Classes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;true&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;Can-Retransform-Classes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
                            &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;manifestEntries&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
                        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;archive&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
                    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;configuration&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
                &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;execution&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
            &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;executions&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;plugin&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;plugins&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;build&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;这种方式是将 MANIFEST.MF 的内容全部写作 pom 配置中，打包的时候就会自动将配置信息生成 MANIFEST.MF 配置文件打进包里。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;添加maven插件指定javaagent类，maven自动完成manifest配置，不用自己再去配置推荐&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;lt;plugin&amp;gt;
&amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;
&amp;lt;artifactId&amp;gt;maven-jar-plugin&amp;lt;/artifactId&amp;gt;
&amp;lt;version&amp;gt;3.1.0&amp;lt;/version&amp;gt;
&amp;lt;configuration&amp;gt;
&amp;lt;archive&amp;gt;
&amp;lt;!--自动添加META-INF/MANIFEST.MF --&amp;gt;
&amp;lt;manifest&amp;gt;
&amp;lt;addClasspath&amp;gt;true&amp;lt;/addClasspath&amp;gt;
&amp;lt;/manifest&amp;gt;
&amp;lt;manifestEntries&amp;gt;
&amp;lt;Premain-Class&amp;gt;com.rickiyang.learn.PreMainTraceAgent&amp;lt;/Premain-Class&amp;gt;
&amp;lt;Agent-Class&amp;gt;com.rickiyang.learn.PreMainTraceAgent&amp;lt;/Agent-Class&amp;gt;
&amp;lt;Can-Redefine-Classes&amp;gt;true&amp;lt;/Can-Redefine-Classes&amp;gt;
&amp;lt;Can-Retransform-Classes&amp;gt;true&amp;lt;/Can-Retransform-Classes&amp;gt;
&amp;lt;/manifestEntries&amp;gt;
&amp;lt;/archive&amp;gt;
&amp;lt;/configuration&amp;gt;
&amp;lt;/plugin&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;a id=&quot;MANIFESTMF_265&quot;/&gt;MANIFEST.MF参数说明&lt;/h4&gt; 
&lt;ul&gt;&lt;li&gt;Premain-Class ：包含 premain 方法的类（类的全路径名）main方法运行前代理&lt;/li&gt;&lt;li&gt;Agent-Class ：包含 agentmain 方法的类（类的全路径名）另一种代理main开始后可以修改类结构&lt;/li&gt;&lt;li&gt;Boot-Class-Path ：设置引导类加载器搜索的路径列表。查找类的特定于平台的机制失败后，引导类加载器会搜索这些路径。按列出的顺序搜索路径。列表中的路径由一个或多个空格分开。路径使用分层 URI 的路径组件语法。如果该路径以斜杠字符（“/”）开头，则为绝对路径，否则为相对路径。相对路径根据代理 JAR 文件的绝对路径解析。忽略格式不正确的路径和不存在的路径。如果代理是在 VM 启动之后某一时刻启动的，则忽略不表示 JAR 文件的路径。（可选）说白就是agent依赖的类&lt;/li&gt;&lt;li&gt;Can-Redefine-Classes ：true表示能重定义此代理所需的类，默认值为 false（可选）&lt;/li&gt;&lt;li&gt;Can-Retransform-Classes ：true 表示能重转换此代理所需的类，默认值为 false （可选）&lt;/li&gt;&lt;li&gt;Can-Set-Native-Method-Prefix： true表示能设置此代理所需的本机方法前缀，默认值为 false（可选）&lt;/li&gt;&lt;/ul&gt; 
&lt;h4&gt;&lt;a id=&quot;_274&quot;/&gt;运行打包命令&lt;/h4&gt; 
&lt;p&gt;接下来就简单了，执行一条 maven 命令即可。&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;mvn assembly:assembly
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;最后打出来的 jar 包默认是以「项目名称-版本号-jar-with-dependencies.jar」这样的格式生成到 target 目录下。&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;&lt;a id=&quot;_Java_Agent_284&quot;/&gt;运行打包好的 Java Agent&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;写个的测试项目，用来作为目标 JVM，稍后会以两种方式将 Java Agent 挂到这个测试项目上。&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;prism language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token import&quot;&gt;&lt;span class=&quot;token namespace&quot;&gt;java&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;util&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Scanner&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;RunJvm&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; args&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token class-name&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;out&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;按数字键 1 调用测试方法&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token class-name&quot;&gt;Scanner&lt;/span&gt; reader &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Scanner&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;in&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; number &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; reader&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;nextInt&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;number&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;token class-name&quot;&gt;Person&lt;/span&gt; person &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
                person&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;以上只有一个简单的 main 方法，用 while 的方式保证线程不退出，并且在输入数字 1 的时候，调用 person.test()方法。&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;以下是 Person 类&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;prism language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Person&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token class-name&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;out&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;执行测试方法&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;I&#x27;m ok&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;a id=&quot;_320&quot;/&gt;以命令行的方式运行&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;java -javaagent:agent1.jar -javaagent:agent2.jar -jar MyProgram.jar&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code&gt;-javaagent:/java-agent路径/lab-custom-agent-1.0-SNAPSHOT-jar-with-dependencies.jar
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;然后直接运行就可以看到效果了，会看到加载的类名称。然后输入数字键 “1”，会看到字节码修改后的内容。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;&lt;a id=&quot;_attach__331&quot;/&gt;以动态 attach 的方式运行&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;测试之前先要把这个测试项目跑起来，并把之前的参数去掉。运行后，找到这个它的进程id，一般利用jps -l即可。&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;动态 attach 的方式是需要代码实现的，实现代码如下：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;prism language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;AttachAgent&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; args&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Exception&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token class-name&quot;&gt;VirtualMachine&lt;/span&gt; vm &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;VirtualMachine&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;attach&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;pid(进程号)&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        vm&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;loadAgent&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;java-agent路径/lab-custom-agent-1.0-SNAPSHOT-jar-with-dependencies.jar&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;运行上面的 main 方法 并在测试程序中输入“1”，会得到上图同样的结果。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;发现了没，我们到这里实现的简单的功能是不是和 BTrace 和 Arthas 有点像呢。我们拦截了指定的一个方法，并在这个方法里插入了代码而且拿到了返回结果。如果把方法名称变成可配置项，并且把返回结果保存到一个公共位置，例如一个内存数据库，是不是我们就可以像 Arthas 那样轻松的检测线上问题了呢。当然了，Arthas 要复杂的多，但原理是一样的。&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;&lt;a id=&quot;sunmanagementAgent__351&quot;/&gt;sun.management.Agent 的实现&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;不知道你平时有没有用过 visualVM 或者 JConsole 之类的工具，其实，它们就是用了 management-agent.jar 这个Java Agent 来实现的。如果我们希望 Java 服务允许远程查看 JVM 信息，往往会配置上一下这些参数&lt;/strong&gt;：&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code&gt;-Dcom.sun.management.jmxremote
-Djava.rmi.server.hostname=192.168.1.1
-Dcom.sun.management.jmxremote.port=9999
-Dcom.sun.management.jmxremote.rmi.port=9999
-Dcom.sun.management.jmxremote.authenticate=false
-Dcom.sun.management.jmxremote.ssl=false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;这些参数都是 management-agent.jar 定义的。&lt;/p&gt; 
&lt;p&gt;我们进到 management-agent.jar 包下，看到只有一个 MANIFEST.MF 配置文件，配置内容为：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Manifest-Version: 1.0
Created-By: 1.7.0_07 (Oracle Corporation)
Agent-Class: sun.management.Agent
Premain-Class: sun.management.Agent
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;可以看到入口 class 为 sun.management.Agent，进到这个类里面可以找到 agentmain 和 premain，并可以看到它们的逻辑。在这个类的开始，能看到我们前面对服务开启远程 JVM 监控需要开启的那些参数定义。&lt;/p&gt; 
&lt;hr/&gt;
                &lt;/div&gt;
                
                
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>5827b3df6c9354f33f4e925b1692ec0d</guid>
<title>图解Kafka消费组偏移量_consumer_offset的数据结构</title>
<link>https://toutiao.io/k/d2l920a</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;1. 前言&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;2. 存储结构&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;3. 写入时机&lt;/p&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;3.1 Group元信息写入时机&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;3.2 Offset写入时机&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;点击&lt;/span&gt;&lt;span&gt;&lt;strong&gt;阅读原文&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;可跳转至我们的Kafka运管平台开源项目&lt;/span&gt;&lt;strong&gt;&lt;span&gt;Know Streaming&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;官网&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;1. 前言&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在之前的文章中, 我们有讲解过消息是如何从Producer存储到Broker中的, 也分析了消息的结构, 如果不清楚的话,可以看看 &lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg4ODY1NTcxNg==&amp;amp;mid=2247493850&amp;amp;idx=1&amp;amp;sn=bcfffcb5094046cf94ad08cc7a6e6f34&amp;amp;chksm=cff572d1f882fbc77280528eaf3cad51a337e158fcc50ad2467717795286a5434540fb1977f3&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;图解Kafka‍的RecordBatch结构&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;图解Kafka的RecordBatch结构&lt;/a&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7150684931506849&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/kmWVxLDDVAU9Q7NkWx89v3LEsrZJyCGZNmiaicvUicqY8DPCnjfoeGHesskBACtpFXsePqaUUKiaicw6sgjoDa2DZjQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1460&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;那么作为消费者, 消费了某条消息之后又是如何记录我已经消费了这条消息呢？&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;如果消费者重启了, 那么又是如何获知我上次消费到了哪个消息呢？&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;既然要解决上述的问题, 那么我们肯定要把我们已经消费的消息给记录下来, 不可能把整个Record给记录下来吧,那也太大了, 但是我们知道消息存储在具体的分区的时候都是有自己的Offset的, 并且是有序的offset, 所以我们只需要记录下当前消费到了哪个Offset就行了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;这个Offset保存在哪里呢？&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在 0.9 版本之前，这个信息是记录在zookeeper内的。但是因为频繁的对zookeeper进行读写,压力太大集群不稳
所以在0.9之后的版本，offset保存在&lt;code&gt;__consumer_offsets&lt;/code&gt; 这个内部的Topic内了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;那么这个是怎么储存的呢?&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;因为本质上还是把消费的offset当做一条普通的消息发送到内部的Topic &lt;code&gt;__consumer_offsets&lt;/code&gt; 中, 所以存储数据的时候, 也就是存到Record消息结构的 Key Value 中。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;根据版本的迭代,存储的Key Value 的Schema也有一些略微不一样, 接下来我会把每个版本的Schema都讲解一下。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;值得一提的是, 这个&lt;code&gt;__consumer_offsets&lt;/code&gt; 保存的并不仅仅是offset的信息, 实际上它分为两种类型的数据&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;一种是 GROUP_METADATA&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这种类型的数据, 存放的是消费组相关的元数据信息&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;一种是 OFFSET_COMMIT&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这种类型的数据,存放的是就是上面说的Offset消费偏移量数据&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.518324607329843&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/kmWVxLDDVAU9Q7NkWx89v3LEsrZJyCGZWAF85cV3bNA9YUPmr6r8wzUH3pOjFNARWg6VF61PeqVAwcbnVFXM0w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1910&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;接下来我们看看他们的数据结构&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;2. 存储结构&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们下面要说的存储结构说的是Record数据结构里面的 Key  Value&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7485852869846402&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/kmWVxLDDVAU9Q7NkWx89v3LEsrZJyCGZ1TtcukgQAg4QNYPZ7OBy7WibzypaiaADkWvWSHIswL8NZCdyaEYk6Oqw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1237&quot;/&gt;&lt;figcaption&gt;&lt;br/&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;2.1 GROUP_METADATA 消费组元信息&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;GROUP_METADATA 存储的是消费组的元信息, 比如groupId 、protocol_type、protocol、leader、members 等等。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如说有很多的消费组  ， 每个消费组有很多消费者客户端member，每个member的 client.id、clien.host等等信息。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个消息的Key  Value数据如下&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.1.1 GROUP_METADATA_KEY&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Key的结构&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.759375&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/kmWVxLDDVAU9Q7NkWx89v3LEsrZJyCGZdxhMESKOt7ql3Z3ozM3fwbEhEq7bQHCvsiawqM4XqJSqE94Os5PlveA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;640&quot;/&gt;&lt;figcaption&gt;GroupMetadataKey结构&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里的GroupMetadataKey的最开始的2个字节存储的是version数据&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;version=2 表示的是这个消息类型就是&lt;strong&gt;GROUP_METADATA&lt;/strong&gt;类型&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;version=0或1 表示的是&lt;strong&gt;OFFSET_COMMIT&lt;/strong&gt;类型。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;除了version,后面的数据才是&lt;strong&gt;Schema&lt;/strong&gt;, 这个Schema只有一个字段就是 group。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;注意: 在数据结构上 version 并不是属于Schema内的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;这里的key就是group.id&lt;/strong&gt;&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.1.2 GROUP_METADATA_VALUE&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;GroupMetaDataValue 的数据结构变更的有点多, 有好几次升级, 版本信息存放在&lt;code&gt;version&lt;/code&gt;里面,并且占用2个字节&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;特别注意的是: version跟其他的并不属于同一个Schema里面。&lt;/strong&gt;&lt;/p&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;1 .Verion0  -- 基础版本,也是所有版本的共有属性&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个是最原始的版本,后续的版本都是在这个基础上做加法&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Kafka版本：kafak version  &amp;lt; &lt;code&gt;0.10.1&lt;/code&gt;Schema：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5129151291512916&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/kmWVxLDDVAU9Q7NkWx89v3LEsrZJyCGZFJmKPqdBqnL5AdQ2ptpib9mKNCxA1mwESJP1sjqDUTyAEjuH45gVSkw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1626&quot;/&gt;&lt;figcaption&gt;&lt;br/&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里是每个结构的共有属性， 后面每个版本讲解的时候只会讲差异&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;属性&lt;/th&gt;&lt;th&gt;描述&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;protocol_type&lt;/td&gt;&lt;td&gt;协议类型,Consumer发起的协议是 comsumer , 另一个可选项为 connect&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;generation&lt;/td&gt;&lt;td&gt;消费组协调器的年代标记,从0自增,每发生一次Rebalance就会增长一代&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;protocol&lt;/td&gt;&lt;td&gt;消费组分区分配策略, 比如&lt;code&gt;range&lt;/code&gt; , 假如多个Member都配置很多策略, 那么会选择他们都支持的策略&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;leader&lt;/td&gt;&lt;td&gt;消费组协调器中总舵Member中的Leader Member, Leader Member有负责根据分区分配策略来计算新的分配方式并返回给组协调器的责任。这个值是Leader MemberId&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;members&lt;/td&gt;&lt;td&gt;消费组下面的所有成员们的元信息,每个元信息的结构请看下面的表格&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Member结构&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;属性&lt;/th&gt;&lt;th&gt;描述&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;member_id&lt;/td&gt;&lt;td&gt;每个成员的唯一标识&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;client_id&lt;/td&gt;&lt;td&gt;客户端的ID&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;client_host&lt;/td&gt;&lt;td&gt;客户端host&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;session_timeout&lt;/td&gt;&lt;td&gt;消费者向组协调器定期发送心跳证明自己的存活，如果在这个时间之内broker没收到，那broker就将此消费者从group中移除，进行一次reblance；默认10000（10 秒）&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;assignment&lt;/td&gt;&lt;td&gt;member对应的自己分配到的分区数据,具体请看下图SyncGroupRequest请求参数&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;subscription&lt;/td&gt;&lt;td&gt;这个是Member对应分配策略的订阅的元信息, 包含的数据有 1. 订阅的topics   2. userData自定义数据  3 ownedPartitions；这个userData,需要分区分配策略实现一个方法返回,；owned_partitons ：这个记录着当前分配到的分区列表,平时是空列表。具体的结构请看下面&lt;strong&gt;JoinGroupRquest&lt;/strong&gt;请求参数的红框起来的部分&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;SyncGroupRequest请求参数&lt;/strong&gt;assignment属性的结构看下图虚线部分的&lt;code&gt; assignment&lt;/code&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;        &lt;span&gt;private&lt;/span&gt; List&amp;lt;TopicPartition&amp;gt; partitions;&lt;br/&gt;        &lt;span&gt;private&lt;/span&gt; ByteBuffer userData;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4245709123757904&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/kmWVxLDDVAU9Q7NkWx89v3LEsrZJyCGZ3baBeLEJroQ6n5nnX2iaaHvdUMP4kEwT5mVAfRgZBfeXYic9zCayT2ww/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2214&quot;/&gt;&lt;figcaption&gt;&lt;br/&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;JoinGroupRquest请求参数&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;subscription属性的结构看下图红线框起来的部分 &lt;code&gt; metadata&lt;/code&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5107370864770748&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/kmWVxLDDVAU9Q7NkWx89v3LEsrZJyCGZhLp3ribf7icianVyIESDfAgLHibZNIcH5GDYwuMNusCmINJticJcn8aibz4w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1723&quot;/&gt;&lt;figcaption&gt;&lt;br/&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;2 .Verion1&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Kafka版本：&lt;code&gt;0.10.1&lt;/code&gt; &amp;lt; kafka version &amp;lt;&lt;code&gt;2.1&lt;/code&gt;Schema：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5658056580565806&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/kmWVxLDDVAU9Q7NkWx89v3LEsrZJyCGZpDt1JRib9XEOA5iaIjrtoxkcAFjxcojJiaibU6vv57FDIU8jRgqL8JVYIw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1626&quot;/&gt;&lt;figcaption&gt;&lt;br/&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;相比于version = 0 的版本，在member里面新增了一个字段&lt;code&gt;rebalance_timeout&lt;/code&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;属性&lt;/th&gt;&lt;th&gt;描述&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;rebalance_timeout&lt;/td&gt;&lt;td&gt;重平衡的超时时间, 由配置&lt;code&gt;max.poll.interval.ms&lt;/code&gt;控制，默认值300000（5 分钟），如果消费者两次poll的时间超过了此值,那就认为此消费者能力不足，将此消费者的commit标记为失败，并将此消费者从group移除，触发一次reblance,将该消费者消费的分区分配给其他人&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;2 .Verion2&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Kafka版本：&lt;code&gt;2.1&lt;/code&gt; &amp;lt; kafka version &amp;lt;&lt;code&gt;2.3&lt;/code&gt;Schema：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5651906519065191&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/kmWVxLDDVAU9Q7NkWx89v3LEsrZJyCGZLiaibrBDRffnEelvdblWmURbibdaEQjS0cjnGKV1DMaygTZtlkwzhvKHA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1626&quot;/&gt;&lt;figcaption&gt;&lt;br/&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;跟V1的版本区别是 新增了一个字段 &lt;code&gt;current_state_timestamp&lt;/code&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;属性&lt;/th&gt;&lt;th&gt;描述&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;current_state_timestamp&lt;/td&gt;&lt;td&gt;当前Group状态流转的时间,从上一个状态流转到下一个状态的这个时间点。&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;2 .Verion3&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Kafka版本：&lt;code&gt;2.3&lt;/code&gt; &amp;lt; kafka version
Schema：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5671728971962616&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/kmWVxLDDVAU9Q7NkWx89v3LEsrZJyCGZHoEwHMEAEO1mbpWyfSZuvS4O4Yq8qThYNWmaIefod49urzjPFQXezw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1712&quot;/&gt;&lt;figcaption&gt;&lt;br/&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;跟V2的版本区别是 member里面新增了一个字段 &lt;code&gt;group_instance_id&lt;/code&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;属性&lt;/th&gt;&lt;th&gt;描述&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;group_instance_id&lt;/td&gt;&lt;td&gt;静态成员的实例ID,关于静态成员和动态成员请看&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;2.2 OFFSET_COMMIT 消费偏移量信息&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这种类型的数据就是跟存储的每个消费组每个分区消费的offset的数据。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.2.1 OFFSET_COMMIT_KEY&lt;span/&gt;&lt;/h4&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.9953775038520801&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/kmWVxLDDVAU9Q7NkWx89v3LEsrZJyCGZZLmbakXXXsRxssK8278cpr5BEoVWial7I3c7S3cn68Xz2tWfjEIU61w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;649&quot;/&gt;&lt;figcaption&gt;&lt;br/&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;version=0或1 表示的是&lt;strong&gt;OFFSET_COMMIT&lt;/strong&gt;类型。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;version=2 表示的是上面提过的&lt;strong&gt;GROUP_METADATA&lt;/strong&gt;类型&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;熟悉&lt;/th&gt;&lt;th&gt;描述&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;group&lt;/td&gt;&lt;td&gt;消费组ID,  &lt;code&gt;group.id&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;topic&lt;/td&gt;&lt;td&gt;订阅的主题&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;partition&lt;/td&gt;&lt;td&gt;订阅的分区&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;因为可能会有很多个不同的消费组消费同一个分区, 并且他们直接是相互独立的, 所以为了区别他们,在存储消费组offset的时候, key的值实际上是 由&lt;code&gt;group.id+topic+partition&lt;/code&gt; 组成的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;并且一个分区在同一个消费组内只会被其中一个消费者消费, 这样就不会出现多个消费者重复消费的问题了。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.2.2 OFFSET_COMMIT_VALUE&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Value是存储的消费组的消费偏移量Offset，这个Offset是针对每个&lt;code&gt;group.id+topic+partition&lt;/code&gt; 维度的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;除了Offset信息,还存了其他的一些信息, 请看下图Value结构的变更历史&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.28980679546968685&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/kmWVxLDDVAU9Q7NkWx89v3LEsrZJyCGZL3IVqR7ReLaItpeCF1BELPNnyAw8Oc0ianibTe6QpibicAvaiaRoIZicaK2w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;3002&quot;/&gt;&lt;figcaption&gt;&lt;br/&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们主要看Version=3的一个版本&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;属性&lt;/th&gt;&lt;th&gt;描述&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;offset&lt;/td&gt;&lt;td&gt;消费偏移量&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;leader_epoch&lt;/td&gt;&lt;td&gt;Leader纪元，如果当前leader不存在为-1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;metadata&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;commit_timestamp&lt;/td&gt;&lt;td&gt;偏移量提交时间&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;3. 写入时机&lt;/span&gt;&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;3.1 Group元信息写入时机&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;元信息的写入源码入口在&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;GroupMetadataManager#storeGroup&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;br/&gt;  &lt;span&gt;/**&lt;br/&gt;  * 公众号：石臻臻的杂货铺&lt;br/&gt;  * Vx: shiyanzu001&lt;br/&gt;  * 领取20万字《Kafka运维实战宝典》&lt;br/&gt;  **/&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;&lt;span&gt;def&lt;/span&gt; &lt;span&gt;storeGroup&lt;/span&gt;&lt;/span&gt;(group: &lt;span&gt;GroupMetadata&lt;/span&gt;,&lt;br/&gt;                 groupAssignment: &lt;span&gt;Map&lt;/span&gt;[&lt;span&gt;String&lt;/span&gt;, &lt;span&gt;Array&lt;/span&gt;[&lt;span&gt;Byte&lt;/span&gt;]],&lt;br/&gt;                 responseCallback: &lt;span&gt;Errors&lt;/span&gt; =&amp;gt; &lt;span&gt;Unit&lt;/span&gt;): &lt;span&gt;Unit&lt;/span&gt; = {&lt;br/&gt;    &lt;span&gt;//读取分区数据,获取消息的结构版本             &lt;/span&gt;&lt;br/&gt;    getMagic(partitionFor(group.groupId)) &lt;span&gt;match&lt;/span&gt; {&lt;br/&gt;      &lt;span&gt;case&lt;/span&gt; &lt;span&gt;Some&lt;/span&gt;(magicValue) =&amp;gt;&lt;br/&gt;        &lt;span&gt;// We always use CREATE_TIME, like the producer. The conversion to LOG_APPEND_TIME (if necessary) happens automatically.&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;val&lt;/span&gt; timestampType = &lt;span&gt;TimestampType&lt;/span&gt;.&lt;span&gt;CREATE_TIME&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;val&lt;/span&gt; timestamp = time.milliseconds()&lt;br/&gt;        &lt;span&gt;// 获取Group元信息的Key结构&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;val&lt;/span&gt; key = &lt;span&gt;GroupMetadataManager&lt;/span&gt;.groupMetadataKey(group.groupId)&lt;br/&gt;        &lt;span&gt;// 获取Group元信息的Value结构&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;val&lt;/span&gt; value = &lt;span&gt;GroupMetadataManager&lt;/span&gt;.groupMetadataValue(group, groupAssignment, interBrokerProtocolVersion)&lt;br/&gt;  &lt;span&gt;//构造消息体&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;val&lt;/span&gt; records = {&lt;br/&gt;          &lt;span&gt;val&lt;/span&gt; buffer = &lt;span&gt;ByteBuffer&lt;/span&gt;.allocate(&lt;span&gt;AbstractRecords&lt;/span&gt;.estimateSizeInBytes(magicValue, compressionType,&lt;br/&gt;            &lt;span&gt;Seq&lt;/span&gt;(&lt;span&gt;new&lt;/span&gt; &lt;span&gt;SimpleRecord&lt;/span&gt;(timestamp, key, value)).asJava))&lt;br/&gt;          &lt;span&gt;val&lt;/span&gt; builder = &lt;span&gt;MemoryRecords&lt;/span&gt;.builder(buffer, magicValue, compressionType, timestampType, &lt;span&gt;0&lt;/span&gt;L)&lt;br/&gt;          builder.append(timestamp, key, value)&lt;br/&gt;          builder.build()&lt;br/&gt;        }&lt;br/&gt;  &lt;span&gt;//构造TopicPartition，消息将会发往这个分区&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;val&lt;/span&gt; groupMetadataPartition = &lt;span&gt;new&lt;/span&gt; &lt;span&gt;TopicPartition&lt;/span&gt;(&lt;span&gt;Topic&lt;/span&gt;.&lt;span&gt;GROUP_METADATA_TOPIC_NAME&lt;/span&gt;, partitionFor(group.groupId))&lt;br/&gt;        &lt;span&gt;val&lt;/span&gt; groupMetadataRecords = &lt;span&gt;Map&lt;/span&gt;(groupMetadataPartition -&amp;gt; records)&lt;br/&gt;        &lt;span&gt;val&lt;/span&gt; generationId = group.generationId&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;//当日志写入成功之和调用这个回调函数，并将 创建的group插入缓存&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;&lt;span&gt;def&lt;/span&gt; &lt;span&gt;putCacheCallback&lt;/span&gt;&lt;/span&gt;(responseStatus: &lt;span&gt;Map&lt;/span&gt;[&lt;span&gt;TopicPartition&lt;/span&gt;, &lt;span&gt;PartitionResponse&lt;/span&gt;]): &lt;span&gt;Unit&lt;/span&gt; = {&lt;br/&gt;        &lt;br/&gt;          &lt;span&gt;// 省略很多代码..&lt;/span&gt;&lt;br/&gt;          }&lt;br/&gt;&lt;br/&gt;          responseCallback(responseError)&lt;br/&gt;        }&lt;br/&gt;        &lt;span&gt;//将数据写入到Log中&lt;/span&gt;&lt;br/&gt;        appendForGroup(group, groupMetadataRecords, putCacheCallback)&lt;br/&gt;&lt;br/&gt;      &lt;span&gt;case&lt;/span&gt; &lt;span&gt;None&lt;/span&gt; =&amp;gt;&lt;br/&gt;        responseCallback(&lt;span&gt;Errors&lt;/span&gt;.&lt;span&gt;NOT_COORDINATOR&lt;/span&gt;)&lt;br/&gt;        &lt;span&gt;None&lt;/span&gt;&lt;br/&gt;    }&lt;br/&gt;  }&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这段代码很简单, 就是构造一下GroupMetadata的消息体并写入&lt;code&gt;__consumer_offset&lt;/code&gt;对应的分区中。我们主要还是要来了解一下在什么情况下才会写入&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们看调用链,发现有三个地方调用了它&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3.1.1 onCompleteJoin 当所有的Member都成功Join之后调用&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个的执行条件是: &lt;strong&gt;当Group当前是Empty的状态,一个Member也没有,那么这个时候写入一个Group元信。&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;GroupCoordinator#onCompleteJoin&lt;/span&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.32913518052057095&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/kmWVxLDDVAU9Q7NkWx89v3LEsrZJyCGZibvjcRQYaAClxq2ukoBBzZaGcPcNtibjSIIU8uQFIGka24Rpib4ic2zfSA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2382&quot;/&gt;&lt;figcaption&gt;&lt;br/&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3.1.2 doSyncGroup 当Leader Member接收到SyncGroup请求&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一般SyncGroup请求都是在JoinGroup完成了之后，所有的Member都会向组协调器发送SyncGroup。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但是Leader Member会带上计算好的新的分区分配方案给协调器&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以协调器当发现是Leader Member给自己发送SyncGroup请求之后,他会把相应的元数据给写入到&lt;code&gt;_consumer_offset&lt;/code&gt;中。(因为Group的元信息有变更了)&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;GroupCoordinator#doSyncGroup&lt;/span&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.398959236773634&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/kmWVxLDDVAU9Q7NkWx89v3LEsrZJyCGZOjcvnszM6U2nibYnqvJjSnR4qAJORLlUx8DexicqFaLVw6EFqviaCCaLg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2306&quot;/&gt;&lt;figcaption&gt;&lt;br/&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上面的一个入参assignments列表, 是SyncGroup请求带进来的,具体的结构请看下图右边虚线框;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4245709123757904&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/kmWVxLDDVAU9Q7NkWx89v3LEsrZJyCGZ3baBeLEJroQ6n5nnX2iaaHvdUMP4kEwT5mVAfRgZBfeXYic9zCayT2ww/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2214&quot;/&gt;&lt;figcaption&gt;&lt;br/&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上图虚线内的单个assignment的数据结构是&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;        &lt;span&gt;private&lt;/span&gt; List&amp;lt;TopicPartition&amp;gt; partitions;&lt;br/&gt;        &lt;span&gt;private&lt;/span&gt; ByteBuffer userData;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;想了解    SyncGroupRequest请看：KafkaConsumer SyncGroupRequest详解&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3.1.3 updateStaticMemberAndRebalance 更新静态成员&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在静态成员JoinGroup的时候, 会走单独的静态成员更新流程&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;GroupCoordinator#updateStaticMemberAndRebalance&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;判断group的下一代的selectedProtocol(所有memmber都支持并排序最靠前)是否会改变&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;如果有变化，应该触发rebalance，让group的assignment和selectProtocol一致&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果没有，则简单地存储group来持久化&lt;strong&gt;更新的静态成员&lt;/strong&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;就是这里的2的情况,去更新一下静态成员的相关信息,主要就是更新 memberId，其他的都没有什么好变更的。分配方案也不会有改变。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;GROUP_METADATA_VALUE_SCHEMA版本选择&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;GroupMetadataManager#groupMetadataValue&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;br/&gt;  &lt;span&gt;&lt;span&gt;def&lt;/span&gt; &lt;span&gt;groupMetadataValue&lt;/span&gt;&lt;/span&gt;(groupMetadata: &lt;span&gt;GroupMetadata&lt;/span&gt;,&lt;br/&gt;                         assignment: &lt;span&gt;Map&lt;/span&gt;[&lt;span&gt;String&lt;/span&gt;, &lt;span&gt;Array&lt;/span&gt;[&lt;span&gt;Byte&lt;/span&gt;]],&lt;br/&gt;                         apiVersion: &lt;span&gt;ApiVersion&lt;/span&gt;): &lt;span&gt;Array&lt;/span&gt;[&lt;span&gt;Byte&lt;/span&gt;] = {&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;val&lt;/span&gt; (version, value) = {&lt;br/&gt;      &lt;span&gt;if&lt;/span&gt; (apiVersion &amp;lt; &lt;span&gt;KAFKA_0_10_1_IV0&lt;/span&gt;)&lt;br/&gt;        (&lt;span&gt;0.&lt;/span&gt;toShort, &lt;span&gt;new&lt;/span&gt; &lt;span&gt;Struct&lt;/span&gt;(&lt;span&gt;GROUP_METADATA_VALUE_SCHEMA_V0&lt;/span&gt;))&lt;br/&gt;      &lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; (apiVersion &amp;lt; &lt;span&gt;KAFKA_2_1_IV0&lt;/span&gt;)&lt;br/&gt;        (&lt;span&gt;1.&lt;/span&gt;toShort, &lt;span&gt;new&lt;/span&gt; &lt;span&gt;Struct&lt;/span&gt;(&lt;span&gt;GROUP_METADATA_VALUE_SCHEMA_V1&lt;/span&gt;))&lt;br/&gt;      &lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; (apiVersion &amp;lt; &lt;span&gt;KAFKA_2_3_IV0&lt;/span&gt;)&lt;br/&gt;        (&lt;span&gt;2.&lt;/span&gt;toShort, &lt;span&gt;new&lt;/span&gt; &lt;span&gt;Struct&lt;/span&gt;(&lt;span&gt;GROUP_METADATA_VALUE_SCHEMA_V2&lt;/span&gt;))&lt;br/&gt;      &lt;span&gt;else&lt;/span&gt;&lt;br/&gt;        (&lt;span&gt;3.&lt;/span&gt;toShort, &lt;span&gt;new&lt;/span&gt; &lt;span&gt;Struct&lt;/span&gt;(&lt;span&gt;GROUP_METADATA_VALUE_SCHEMA_V3&lt;/span&gt;))&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;// 省略。。。&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;3.2 Offset写入时机&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;handleJoinGroupRequest&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;(略)&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>4fb7d5361bcff7fb6faa4accaf861c72</guid>
<title>前后端分离的企业级微服务多租户系统架构，快速开发平台！</title>
<link>https://toutiao.io/k/h9jrp0q</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content js_underline_content             autoTypeSetting24psection&amp;#10;            &quot; id=&quot;js_content&quot;&gt;&lt;p data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;strong&gt;&lt;span&gt;推荐关注&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mp-common-profile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;Mzg2NjY3NzgxOQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/tlRJxOkwJpxBA4Kx5ricGiak4cDKGvYzcWCPiaibOeDOUvwlG0u3oUJecAiamcC46ibtmbWZaeuTibBDNrfCiaWibr8hlzQ/0?wx_fmt=png&quot; data-nickname=&quot;开源手记&quot; data-alias=&quot;&quot; data-signature=&quot;专注分享Github、Gitee 上知名的Java、Python、人工智能、前端、Golang等多个领域的开源项目，学习资源与效率工具。&quot; data-from=&quot;0&quot; data-is_biz_ban=&quot;0&quot;/&gt;&lt;/section&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span&gt;责编：猿哥&lt;span&gt; | 来源：GitHub猿 整理&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;正文&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;大家好。我&lt;/strong&gt;&lt;strong&gt;今天&lt;/strong&gt;&lt;span&gt;，推荐一个快速开发平台系统项目。&lt;/span&gt;&lt;span&gt;猿哥&lt;/span&gt;&lt;span&gt;第&lt;/span&gt;&lt;span&gt;一次使用就有点上头，爱不释手，必须要推荐给大家。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;上次是谁要的快速开发平台系统项目啊，&lt;span&gt;猿哥帮你找&lt;/span&gt;到了。&lt;/p&gt;&lt;section&gt;这是我目前见过最好的快速开发平台系统项目。功能完整，代码结构清晰。值得推荐。&lt;/section&gt;&lt;h2&gt;📚 项目介绍&lt;/h2&gt;&lt;pre mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;pre&gt;&lt;pre mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;pre mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot; mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;91525&quot; mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;section mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;section mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot; mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;91525&quot; mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;section mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;section mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;pre mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;最&lt;span&gt;近猿哥在&lt;/span&gt;逛网站的时候发现一个不错的开源项目，&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span&gt;这个项目目前收获了 &lt;/span&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;7K Star&lt;/span&gt;&lt;/span&gt;&lt;span&gt;，&lt;/span&gt;&lt;span&gt;猿哥觉得不错，&lt;/span&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;值得拿出来和大家分享下。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.547911547911548&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/WZoDoXZNb0uNMztC09fkhkRf8iaoyulBwK8o6IXDkBppDRoJplNHhUPicUjgHrtxo9hTJtVzsiad7d6cXQ6s9kicrg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2442&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;/&gt;&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14.399999618530273&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;p mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;26&quot;&gt;本项目基于SpringBoot2.x、SpringCloud和SpringCloudAlibaba并采用前后端分离的企业级微服务多租户系统架构。并引入组件化的思想实现高内聚低耦合并且高度可配置化，适合学习和企业中使用。真正实现了基于RBAC、jwt和oauth2的无状态统一权限认证的解决方案，面向互联网设计同时适合B端和C端用户，支持CI/CD多环境部署，并提供应用管理方便第三方系统接入；同时还集合各种微服务治理功能和监控功能。模块包括:企业级的认证系统、开发平台、应用监控、慢sql监控、统一日志、单点登录、Redis分布式高速缓存、配置中心、分布式任务调度、接口文档、代码生成等等。&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg4NzY2OTYxMA==&amp;amp;mid=2247485045&amp;amp;idx=1&amp;amp;sn=c0a0cd2b199d1f2f48c88933911ce1e3&amp;amp;chksm=cf879070f8f0196636588bd377820d6f7375aa5ba2bc0df444ada61012ef606e345b52fcdb0e&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;一款神仙接私活儿软件，吊到不行！&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;26&quot;/&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/pre&gt;&lt;/pre&gt;&lt;h2&gt;&lt;span&gt;&lt;strong&gt;1. 总体架构图&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU1NjYxNDc2OQ==&amp;amp;mid=2247502136&amp;amp;idx=1&amp;amp;sn=63679e826d49dea4463dd45fb66bec3f&amp;amp;chksm=fbc0dc26ccb75530633ed56e0162cbc33772e7ab49903108a0fc1fda0bb8730f0020d7799daa&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.557&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/WZoDoXZNb0uNMztC09fkhkRf8iaoyulBwsvqoXPxfbcEgSOpdEWHjxbajrSQfsuSDkhw2DgADWcsKOibWB9dF5ug/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt; &lt;/p&gt;&lt;h2&gt;&lt;span&gt;&lt;strong&gt;2. 功能介绍&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU1NjYxNDc2OQ==&amp;amp;mid=2247502102&amp;amp;idx=1&amp;amp;sn=9b25c7fe16f9e3c6e740d6419a3fc0e5&amp;amp;chksm=fbc0dc08ccb7551e4e3a761f3122b3194570b90dbae1dc060479abe16dd5389e578601edfa78&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.828&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/WZoDoXZNb0uNMztC09fkhkRf8iaoyulBwMmQjJQxIZNk9fYQbHNJ352lP4tiacSxyPZgSRXppWEuu8HmaYs4Eg9Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/pre&gt;&lt;/pre&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;演示环境有全方位的监控示例：日志系统 + APM系统 + GPE系统&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;前后端分离的企业级微服务架构&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;基于 &lt;/span&gt;&lt;span&gt;&lt;span&gt;SpringBoot2.x&lt;/span&gt;&lt;/span&gt;&lt;span&gt;、&lt;/span&gt;&lt;span&gt;&lt;span&gt;Spring Cloud&lt;/span&gt;&lt;/span&gt;&lt;span&gt; 和 &lt;/span&gt;&lt;span&gt;&lt;span&gt;Spring Cloud Alibaba&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;主要针对解决微服务和业务开发时常见的&lt;/span&gt;&lt;span&gt;&lt;span&gt;非功能性需求&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;深度定制&lt;/span&gt;&lt;span&gt;&lt;span&gt;Spring Security&lt;/span&gt;&lt;/span&gt;&lt;span&gt;真正实现了基于&lt;/span&gt;&lt;span&gt;&lt;span&gt;RBAC&lt;/span&gt;&lt;/span&gt;&lt;span&gt;、&lt;/span&gt;&lt;span&gt;&lt;span&gt;jwt&lt;/span&gt;&lt;/span&gt;&lt;span&gt;和&lt;/span&gt;&lt;span&gt;&lt;span&gt;oauth2&lt;/span&gt;&lt;/span&gt;&lt;span&gt;的无状态统一权限认证的解决方案&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;另外，搜索公众号后端架构师后台回复“后台系统”，获取一份惊喜礼包。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;面向互联网设计，同时适合B端和C端用户&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;支持CI/CD多环境部署&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;提供应用管理，方便第三方系统接入，&lt;/span&gt;&lt;span&gt;&lt;span&gt;支持多租户(应用隔离)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;引入组件化的思想实现高内聚低耦合并且高度可配置化&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;注重代码规范，严格控制包依赖，每个工程基本都是最小依赖&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;非常适合学习和企业中使用&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h1 data-track=&quot;58&quot;&gt;运行环境&lt;/h1&gt;&lt;table&gt;&lt;colgroup&gt;&lt;col/&gt;&lt;col/&gt;&lt;/colgroup&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;p data-track=&quot;59&quot;&gt;&lt;span&gt;工具&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p data-track=&quot;60&quot;&gt;&lt;span&gt;版本&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;p data-track=&quot;61&quot;&gt;&lt;span&gt;Java&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p data-track=&quot;62&quot;&gt;&lt;span&gt;8&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;p data-track=&quot;63&quot;&gt;&lt;span&gt;Maven&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p data-track=&quot;64&quot;&gt;&lt;span&gt;3.5.3&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;p data-track=&quot;65&quot;&gt;&lt;span&gt;Redis&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p data-track=&quot;66&quot;&gt;&lt;span&gt;4+&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;p data-track=&quot;67&quot;&gt;&lt;span&gt;Mysql&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p data-track=&quot;68&quot;&gt;&lt;span&gt;5.7+ ，8.0.14+&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;p data-track=&quot;69&quot;&gt;&lt;span&gt;Elasticsearch&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p data-track=&quot;70&quot;&gt;&lt;span&gt;7.x&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;p data-track=&quot;71&quot;&gt;&lt;span&gt;代码仓库&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p data-track=&quot;72&quot;&gt;&lt;span&gt;gitee&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;p data-track=&quot;73&quot;&gt;&lt;span&gt;Maven镜像&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p data-track=&quot;74&quot;&gt;&lt;span&gt;阿里云镜像&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;p data-track=&quot;75&quot;&gt;&lt;span&gt;&lt;span&gt;IDE&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p data-track=&quot;76&quot;&gt;&lt;span&gt;&lt;span&gt;强力推荐IDEA&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;p data-track=&quot;77&quot;&gt;&lt;span&gt;Docker&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p data-track=&quot;78&quot;&gt;&lt;span&gt;1.13.1+&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h1 data-track=&quot;105&quot;&gt;模块说明&lt;/h1&gt;&lt;pre mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-type=&quot;png&quot; data-w=&quot;64&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/b96CibCt70iaajvl7fD4ZCicMcjhXMp1v6UXcBIdyPOYfUfaibicSXbZSrkFL9jwZRTUz8aKA1zXq1GDV8Z7uXeep6w/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/b96CibCt70iaajvl7fD4ZCicMcjhXMp1v6UXcBIdyPOYfUfaibicSXbZSrkFL9jwZRTUz8aKA1zXq1GDV8Z7uXeep6w/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;64&quot;/&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-type=&quot;png&quot; data-w=&quot;64&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/b96CibCt70iaajvl7fD4ZCicMcjhXMp1v6UXcBIdyPOYfUfaibicSXbZSrkFL9jwZRTUz8aKA1zXq1GDV8Z7uXeep6w/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-type=&quot;png&quot; data-w=&quot;64&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/b96CibCt70iaajvl7fD4ZCicMcjhXMp1v6UXcBIdyPOYfUfaibicSXbZSrkFL9jwZRTUz8aKA1zXq1GDV8Z7uXeep6w/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;img data-ratio=&quot;1&quot; data-type=&quot;png&quot; data-w=&quot;64&quot; class=&quot;rich_pages wxw-img&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/b96CibCt70iaajvl7fD4ZCicMcjhXMp1v6UXcBIdyPOYfUfaibicSXbZSrkFL9jwZRTUz8aKA1zXq1GDV8Z7uXeep6w/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-type=&quot;png&quot; data-w=&quot;64&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/b96CibCt70iaajvl7fD4ZCicMcjhXMp1v6UXcBIdyPOYfUfaibicSXbZSrkFL9jwZRTUz8aKA1zXq1GDV8Z7uXeep6w/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/p&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=Mzg5MzcwMzQyMg==&amp;amp;mid=2247486251&amp;amp;idx=1&amp;amp;sn=afc240d0e4ce32c2de4ca7e3225096b7&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;‍牛逼啊！接私活必备的 N 个开源项目！赶快收藏‍&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;牛逼啊！接私活必备的 N 个开源项目！赶快收藏&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;central-platform &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;│  ├─zlt-business &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;│  │  ├─user-center &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;│  │  ├─file-center &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;│  │  ├─code-generator &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;│  │  ├─search-center &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;│  │  │  ├─search-client &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;│  │  │  ├─search-server &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;│  │─zlt-commons &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;│  │  ├─zlt-auth-client-spring-boot-starter &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;│  │  ├─zlt-common-core &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;│  │  ├─zlt-common-spring-boot-starter &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;│  │  ├─zlt-db-spring-boot-starter &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;│  │  ├─zlt-log-spring-boot-starter &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;│  │  ├─zlt-redis-spring-boot-starter &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;│  │  ├─zlt-loadbalancer-spring-boot-starter &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;│  │  ├─zlt-sentinel-spring-boot-starter &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;│  │  ├─zlt-swagger2-spring-boot-starter &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;│  │  ├─zlt-elasticsearch-spring-boot-starter &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;│  │  ├─zlt-oss-spring-boot-starter &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;│  │  ├─zlt-zookeeper-spring-boot-starter &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;│  ├─zlt-config &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;│  ├─zlt-doc &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;│  ├─zlt-gateway &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;│  │  ├─sc-gateway &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;│  ├─zlt-job &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;│  │  ├─job-admin &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;│  │  ├─job-core &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;│  │  ├─job-executor-samples &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;│  ├─zlt-monitor &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;│  │  ├─sc-admin &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;│  │  ├─log-center &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;│  ├─zlt-uaa &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;│  ├─zlt-register &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;│  ├─zlt-web &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;│  │  ├─layui-web &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;│  │  ├─react-web &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;│  ├─zlt-transaction &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;│  │  ├─txlcn-tm &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;│  ├─zlt-demo &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;│  │  ├─txlcn-demo &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;│  │  ├─seata-demo &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;│  │  ├─sharding-jdbc-demo &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;│  │  ├─rocketmq-demo &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;│  │  ├─sso-demo &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;h1 data-track=&quot;105&quot;&gt;&lt;span/&gt;&lt;/h1&gt;&lt;h2&gt;&lt;span&gt;&lt;strong&gt;3. 功能演示&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU1NjYxNDc2OQ==&amp;amp;mid=2247502076&amp;amp;idx=1&amp;amp;sn=12d9d23439d8069039c57c2de4411987&amp;amp;chksm=fbc0dde2ccb754f4535bd7bcd99fa4e1ebfc5ff1bc847ccabdb1510ef8653f0e5e01430e2455&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.4996525364836692&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/WZoDoXZNb0uNMztC09fkhkRf8iaoyulBwfqJ2PvdFF0LYrzE4TZ2oJpurBm88ucnY2W7ZibxkO3LgWS2QcyfKXWw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2878&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU1NjYxNDc2OQ==&amp;amp;mid=2247485155&amp;amp;idx=1&amp;amp;sn=bb8d9b261b739501a007e911b500678c&amp;amp;chksm=fbc313fdccb49aebad7568cc271f349d88c6d5e4c000797a1971848918362408a7e0e1646e47&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.554&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/WZoDoXZNb0uNMztC09fkhkRf8iaoyulBwia9s4rUkUfwe6IUuM55ib52Oo7JDAPX759mKRiadCRVdQgC6rYhrAJQoQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;另外，搜索公众号Linux就该这样学后台回复“知识库”，获取一份惊喜礼包。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU1NjYxNDc2OQ==&amp;amp;mid=2247502020&amp;amp;idx=1&amp;amp;sn=44bcc07d2d98fc66862d3a185eef287c&amp;amp;chksm=fbc0dddaccb754ccc844100908fcb6032fb113dd7659780c88e7413f8a589c4442a121416782&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.3650952858575727&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/WZoDoXZNb0uNMztC09fkhkRf8iaoyulBwUgaphBgTuXY87CrIr5wUnQjR3ic3fR0r0MaEliccTVMwXplZzbjLkibvQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;997&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.3876123876123876&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/WZoDoXZNb0uNMztC09fkhkRf8iaoyulBwCIILBfbHibWAk3RGop9HcfmoyicaDs51V0QgPKQ0DuuCOISrONAIqooA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1001&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.444&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/WZoDoXZNb0uNMztC09fkhkRf8iaoyulBw9zJmbcDUxkNAm7FjF9GUozCQUz4JnbAf3pibsxPFD4iapoAJJJdP5EBg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU1NjYxNDc2OQ==&amp;amp;mid=2247500619&amp;amp;idx=1&amp;amp;sn=58b88975efa9ea0b35e6190b8a469481&amp;amp;chksm=fbc0d655ccb75f435e1ebbddf6b72d0f61d7947d677a65198e0f20da4d2ead1c0950eca0994a&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.824&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/WZoDoXZNb0uNMztC09fkhkRf8iaoyulBwrd5J6IDxE5sZynmaKhMgazYMdPMOhMaVEywZnbicbg7qdG2sz2A13Pw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;pre mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;/p&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-type=&quot;png&quot; data-w=&quot;64&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/b96CibCt70iaajvl7fD4ZCicMcjhXMp1v6UXcBIdyPOYfUfaibicSXbZSrkFL9jwZRTUz8aKA1zXq1GDV8Z7uXeep6w/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/b96CibCt70iaajvl7fD4ZCicMcjhXMp1v6UXcBIdyPOYfUfaibicSXbZSrkFL9jwZRTUz8aKA1zXq1GDV8Z7uXeep6w/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;64&quot;/&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-type=&quot;png&quot; data-w=&quot;64&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/b96CibCt70iaajvl7fD4ZCicMcjhXMp1v6UXcBIdyPOYfUfaibicSXbZSrkFL9jwZRTUz8aKA1zXq1GDV8Z7uXeep6w/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-type=&quot;png&quot; data-w=&quot;64&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/b96CibCt70iaajvl7fD4ZCicMcjhXMp1v6UXcBIdyPOYfUfaibicSXbZSrkFL9jwZRTUz8aKA1zXq1GDV8Z7uXeep6w/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;img data-ratio=&quot;1&quot; data-type=&quot;png&quot; data-w=&quot;64&quot; class=&quot;rich_pages wxw-img&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/b96CibCt70iaajvl7fD4ZCicMcjhXMp1v6UXcBIdyPOYfUfaibicSXbZSrkFL9jwZRTUz8aKA1zXq1GDV8Z7uXeep6w/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-type=&quot;png&quot; data-w=&quot;64&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/b96CibCt70iaajvl7fD4ZCicMcjhXMp1v6UXcBIdyPOYfUfaibicSXbZSrkFL9jwZRTUz8aKA1zXq1GDV8Z7uXeep6w/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/p&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=Mzg5MzcwMzQyMg==&amp;amp;mid=2247486251&amp;amp;idx=1&amp;amp;sn=afc240d0e4ce32c2de4ca7e3225096b7&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;‍牛逼啊！接私活必备的 N 个开源项目！赶快收藏‍&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;牛逼啊！接私活必备的 N 个开源项目！赶快收藏&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.709&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/WZoDoXZNb0uNMztC09fkhkRf8iaoyulBw5QZqV2jibOcyj2nYw3ia4VdAKzVrLWxXh4F8tp0njuKUnhyAG1G0iaXzg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;pre mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/b96CibCt70iaajvl7fD4ZCicMcjhXMp1v6UXcBIdyPOYfUfaibicSXbZSrkFL9jwZRTUz8aKA1zXq1GDV8Z7uXeep6w/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;64&quot;/&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/b96CibCt70iaajvl7fD4ZCicMcjhXMp1v6UXcBIdyPOYfUfaibicSXbZSrkFL9jwZRTUz8aKA1zXq1GDV8Z7uXeep6w/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;64&quot;/&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/b96CibCt70iaajvl7fD4ZCicMcjhXMp1v6UXcBIdyPOYfUfaibicSXbZSrkFL9jwZRTUz8aKA1zXq1GDV8Z7uXeep6w/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;64&quot;/&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/b96CibCt70iaajvl7fD4ZCicMcjhXMp1v6UXcBIdyPOYfUfaibicSXbZSrkFL9jwZRTUz8aKA1zXq1GDV8Z7uXeep6w/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;64&quot;/&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/b96CibCt70iaajvl7fD4ZCicMcjhXMp1v6UXcBIdyPOYfUfaibicSXbZSrkFL9jwZRTUz8aKA1zXq1GDV8Z7uXeep6w/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;64&quot;/&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-type=&quot;png&quot; data-w=&quot;64&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/b96CibCt70iaajvl7fD4ZCicMcjhXMp1v6UXcBIdyPOYfUfaibicSXbZSrkFL9jwZRTUz8aKA1zXq1GDV8Z7uXeep6w/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/p&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=Mzg5MzcwMzQyMg==&amp;amp;mid=2247486251&amp;amp;idx=1&amp;amp;sn=afc240d0e4ce32c2de4ca7e3225096b7&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;‍牛逼啊！接私活必备的 N 个开源项目！赶快收藏‍&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;牛逼啊！接私活必备的 N 个开源项目！赶快收藏&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/WZoDoXZNb0uNMztC09fkhkRf8iaoyulBwA49iack8DtNeQuBPvnbGgasueNj3uK7XsRHpBPHYsZ8ufvCeXfd66CQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU1NjYxNDc2OQ==&amp;amp;mid=2247488313&amp;amp;idx=1&amp;amp;sn=1ca8f6e6ed22275f19f59114eaa4e08c&amp;amp;chksm=fbc30627ccb48f3142155a82d09f046a0d46f3400408c97ee738f0a39658a92c461030c283c1&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.44344344344344344&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/WZoDoXZNb0uNMztC09fkhkRf8iaoyulBwm0iaJoyibaHibHUd8vWpibAhTL6YTKPtwLgp5UfibrqUsxPFol2rLAml6Og/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;999&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU1NjYxNDc2OQ==&amp;amp;mid=2247499237&amp;amp;idx=1&amp;amp;sn=5a7a7afbf9c3c1d30a3ee9ad35fc6f18&amp;amp;chksm=fbc0e8fbccb761ed689c3708d48b7d04fa65546318ac4b236b390c88b4c59c73e506cd0c84b0&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.466&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/WZoDoXZNb0uNMztC09fkhkRf8iaoyulBwaqictARGshQpMNYrTlc6BtviamGGCqmUYdh6Qc9eZvu0kt0shSicu30rg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.434&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/WZoDoXZNb0uNMztC09fkhkRf8iaoyulBwomsbiaw3N6qWZn09ZxXiat6sNcAibjsfeO8X9FGR1pcOyENEXaOhohRvQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;strong&gt;&lt;span/&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.43887775551102204&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/WZoDoXZNb0uNMztC09fkhkRf8iaoyulBwDPq4IZ7DAWMxM7bFY8cZSqOht57HuvuA5dz9bgAzI7DWKgLj2EQLFQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;998&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;strong&gt;&lt;span/&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.46646646646646645&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/WZoDoXZNb0uNMztC09fkhkRf8iaoyulBwE4pJhQAbcnOJLibhSO1fuY9w4icdOq81pRuMHiajBVde9TzvLwB3Wx3Mg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;999&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;strong&gt;&lt;span/&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.46646646646646645&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/WZoDoXZNb0uNMztC09fkhkRf8iaoyulBwcCY9OFdHOAw5yYNS17cYGyxUgw7xsHcgny6cPlgFVTDNOusHW3cEVg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;999&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU1NjYxNDc2OQ==&amp;amp;mid=2247491171&amp;amp;idx=1&amp;amp;sn=e99c88f0734eba29a3195db09fadfd9a&amp;amp;chksm=fbc30b7dccb4826b7cf4540e256715d5b4789eb4437609bfe07b965a41b558a15855047a5e67&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;strong&gt;&lt;span&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.47141424272818455&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/WZoDoXZNb0uNMztC09fkhkRf8iaoyulBwZa8bBdr7CX4ibyjw0iaDPxSOia9miaASDJJZmunXNAaPkd1t9O1WO1fkhQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;997&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;最后，想学习这个项目的可以查看项目地址：&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;pre mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;strong/&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;项目源码，怎么领取？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;pre&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-fileid=&quot;100005085&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/R5ic1icyNBNd7gCjTYibduPsGTxuPTmbuBTIzPJgA0yYfg7ibiabBNY0jLqo1vEII4icCp8rCfmcIwMqicXXibd2FSOCyQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;20&quot;/&gt;&lt;strong&gt;源码获取&lt;/strong&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-fileid=&quot;100005084&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/R5ic1icyNBNd7gCjTYibduPsGTxuPTmbuBTIzPJgA0yYfg7ibiabBNY0jLqo1vEII4icCp8rCfmcIwMqicXXibd2FSOCyQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;20&quot;/&gt;&lt;/p&gt;&lt;pre mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/b96CibCt70iaajvl7fD4ZCicMcjhXMp1v6UXcBIdyPOYfUfaibicSXbZSrkFL9jwZRTUz8aKA1zXq1GDV8Z7uXeep6w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;64&quot;/&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/b96CibCt70iaajvl7fD4ZCicMcjhXMp1v6UXcBIdyPOYfUfaibicSXbZSrkFL9jwZRTUz8aKA1zXq1GDV8Z7uXeep6w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;64&quot;/&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/b96CibCt70iaajvl7fD4ZCicMcjhXMp1v6UXcBIdyPOYfUfaibicSXbZSrkFL9jwZRTUz8aKA1zXq1GDV8Z7uXeep6w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;64&quot;/&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-type=&quot;png&quot; data-w=&quot;64&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/b96CibCt70iaajvl7fD4ZCicMcjhXMp1v6UXcBIdyPOYfUfaibicSXbZSrkFL9jwZRTUz8aKA1zXq1GDV8Z7uXeep6w/640?wx_fmt=png&quot;/&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/b96CibCt70iaajvl7fD4ZCicMcjhXMp1v6UXcBIdyPOYfUfaibicSXbZSrkFL9jwZRTUz8aKA1zXq1GDV8Z7uXeep6w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;64&quot;/&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-type=&quot;png&quot; data-w=&quot;64&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/b96CibCt70iaajvl7fD4ZCicMcjhXMp1v6UXcBIdyPOYfUfaibicSXbZSrkFL9jwZRTUz8aKA1zXq1GDV8Z7uXeep6w/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=Mzg5MzcwMzQyMg==&amp;amp;mid=2247486251&amp;amp;idx=1&amp;amp;sn=afc240d0e4ce32c2de4ca7e3225096b7&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;‍牛逼啊！接私活必备的 N 个开源项目！赶快收藏‍&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;牛逼啊！接私活必备的 N 个开源项目！赶快收藏&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;扫码下方二维码，后台回复【&lt;/span&gt;&lt;span&gt;&lt;strong&gt;快速开发平台&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;】即可获取所有系统&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Ea7dkfAlbibkedyOTvkDh5ichXuZ050KOn2FFcHgXfIymF98ib5zibuT2clgfFFZjva7jLepbMUxzf03n8Cnm3Qnrg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;258&quot;/&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mp-common-profile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;Mzg3MzcxNTA4OQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/QV8UgJzkjrENdDm7WubaV7kAQ6Zy54PMhmABOfk7Sgf7xlMQCVHKLTo3NicpJ4ibYaibnrx2hicjkg6oysMKz40urw/0?wx_fmt=png&quot; data-nickname=&quot;算法面试官&quot; data-alias=&quot;&quot; data-signature=&quot;算法妹每日分享各大企业算法面试题，同时给出最优解题思路和代码，为你的校招或社招助力！&quot; data-from=&quot;1&quot; data-is_biz_ban=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;span/&gt;&lt;span/&gt;&lt;/p&gt;&lt;/pre&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;--END--&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;版权申明：内容来源网络，版权归原创者所有。除非无法确认，我们都会标明作者及出处，如有侵权烦请告知，我们会立即删除并表示歉意。谢谢!&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;span/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-id=&quot;94250&quot;&gt;&lt;section data-id=&quot;91842&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-fileid=&quot;100005089&quot; data-ratio=&quot;0.8936170212765957&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/aBHpjnrGylgHGiaiahLyaaXeFVnHZicULJPngk4rJZcxSMZmibKy9209oStVdZwVKeavskN7MJdbIAAvRGlCVhYLcQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;47&quot;/&gt;&lt;/section&gt;&lt;section&gt;你点的每个赞，我都认真当成了喜欢&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;mp-style-type data-value=&quot;3&quot;/&gt;&lt;/p&gt;&lt;/div&gt;

          
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>e9d645231968384dd9f62fbae8130b90</guid>
<title>vue如何二次封装一个高频可复用的组件</title>
<link>https://toutiao.io/k/fzld64o</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section&gt;&lt;p&gt;在我们的业务里，我们通常会二次封装一些高频业务组件，比如弹框，抽屉，表单等这些业务组件，为什么要二次封装？我们所有人心里的答案肯定是，同样类似的代码太多了，我想复用组件，或者原有组件可能达不到我想要的效果，我想基于原有组件自定义一些自己的接口，那么此时就需要二次封装了。二次封装虽好，但同时也会带来一定的心智负担，因为二次封装的组件可能会变得不那么纯粹。&lt;/p&gt;&lt;p&gt;本文是一篇笔者关于二次封装组件的思考，希望看完在项目中有所思考和帮助。&lt;/p&gt;&lt;p&gt;正文开始...&lt;/p&gt;&lt;p&gt;在内容开始之前，本文主要从以下几个方向去思考：&lt;/p&gt;&lt;p&gt;1、二次组件必须继承原有组件的所有特性&lt;/p&gt;&lt;p&gt;2、二次组件名必须见名知意&lt;/p&gt;&lt;p&gt;3、自定义暴露出来的接口越简单越好&lt;/p&gt;&lt;p&gt;4、留有自定义插槽，让用户可以自己选择&lt;/p&gt;&lt;p&gt;5、封装二次的组件，能根据&lt;code&gt;schame&lt;/code&gt;数据配置，让组件更通用&lt;/p&gt;&lt;h3&gt;继承原有组件接口&lt;/h3&gt;&lt;p&gt;在之前的项目例子中，我们以一个&lt;code&gt;弹框组件为例&lt;/code&gt;&lt;/p&gt;&lt;p&gt;我们看下在业务中一般是怎么写的&lt;/p&gt;&lt;pre&gt;&lt;section&gt;&lt;span/&gt;&lt;span/&gt;&lt;span/&gt;&lt;/section&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;template&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;list-app&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;javascript:void(0)&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;@click&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;handleToHello&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;to hello&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    ...&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;list-modal&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;      &lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;编辑&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;      &lt;/span&gt;&lt;span&gt;width&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;50%&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;      &lt;/span&gt;&lt;span&gt;v-model&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;formParams&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;      &lt;/span&gt;&lt;span&gt;:visible.sync&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;dialogVisible&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;      &lt;/span&gt;&lt;span&gt;@refresh&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;featchList&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;list-modal&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;template&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; { sourceDataMock } &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;@/mock&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; ListModal &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;./ListModal&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; &lt;span&gt;default&lt;/span&gt; {&lt;br/&gt;  &lt;span&gt;name&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;&#x27;list&#x27;&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;components&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; {&lt;br/&gt;    ListModal,&lt;br/&gt;  },&lt;br/&gt;  &lt;span&gt;...&lt;/span&gt;&lt;br/&gt;};&lt;br/&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;我们再继续看下&lt;code&gt;list-modal&lt;/code&gt;这个组件&lt;/p&gt;&lt;pre&gt;&lt;section&gt;&lt;span/&gt;&lt;span/&gt;&lt;span/&gt;&lt;/section&gt;&lt;code&gt;&lt;span&gt;&amp;lt;!--ListModal.vue--&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;template&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;el-dialog&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;:visible.sync&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;currentVisible&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;width&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;30%&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;v-bind&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;$attrs&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;  &lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;el-form&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;label-position&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;left&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;label-width&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;80px&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;:model&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;formParams&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;el-form-item&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;label&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;日期&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;el-input&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;v-model&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;formParams.date&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;el-input&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;el-form-item&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;el-form-item&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;label&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;名称&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;el-input&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;v-model&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;formParams.name&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;el-input&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;el-form-item&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;el-form-item&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;label&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;地址&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;el-input&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;v-model&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;formParams.address&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;el-input&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;el-form-item&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;el-form&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;slot&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;footer&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;dialog-footer&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;el-button&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;@click&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;closeModal&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;取 消&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;el-button&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;el-button&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;primary&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;@click&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;handleSure&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;确 定&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;el-button&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;el-dialog&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;template&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;我们会发现，这个&lt;code&gt;list-modal&lt;/code&gt;业务组件只是包了一层，当我们使用&lt;code&gt;v-bind=&quot;$attrs&quot;&lt;/code&gt;时，&lt;code&gt;vue&lt;/code&gt;提供的这个&lt;code&gt;api&lt;/code&gt;会将父组件所有的&lt;code&gt;props&lt;/code&gt;继承,官方给了一大段解释&lt;/p&gt;&lt;p&gt;&lt;code&gt;包含了父作用域中不作为 prop 被识别 (且获取) 的 attribute 绑定 (class 和 style 除外)。当一个组件没有声明任何 prop 时，这里会包含所有父作用域的绑定 (class 和 style 除外)，并且可以通过 v-bind=&quot;$attrs&quot; 传入内部组件——在创建高级别的组件时非常有用。&lt;/code&gt;&lt;/p&gt;&lt;p&gt;首先我们思考为什么要用这个&lt;code&gt;$attrs&lt;/code&gt;？上面一段话的意思是，父组件&lt;code&gt;class&lt;/code&gt;与&lt;code&gt;style&lt;/code&gt;会排除&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5786764705882353&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/0jXCeiaibicNx7RYwscdsiaa32iaxuXDqr4qHMUuPdicfljJwvNCGOJK7pTA5zld7hFCKic92bWlrUsymOW2y5sNLZpOg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1360&quot;/&gt;&lt;/figure&gt;&lt;p&gt;我们从页面上可以看出&lt;code&gt;title&lt;/code&gt;与&lt;code&gt;width&lt;/code&gt;都是父组件传过来的，但是我们发现，实际上这两个外部看似自己传入的&lt;code&gt;props&lt;/code&gt;也是&lt;code&gt;el-dialog&lt;/code&gt;的&lt;code&gt;props&lt;/code&gt;，所以说我们必须要保持自己二次封装的组件也有&lt;code&gt;el-dialog&lt;/code&gt;所有能力，所以此时&lt;code&gt;v-bind=&#x27;$attrs&#x27;&lt;/code&gt;就可以做到了&lt;/p&gt;&lt;p&gt;&lt;code&gt;包含了父作用域中的 (不含 .native 修饰器的) v-on 事件监听器。它可以通过 v-on=&quot;$listeners&quot; 传入内部组件——在创建更高层次的组件时非常有用。&lt;/code&gt;&lt;/p&gt;&lt;p&gt;在以上的&lt;code&gt;$attrs&lt;/code&gt;我们是将父级的所有的&lt;code&gt;props&lt;/code&gt;都拿到了，但是自定义事件呢，所以才有的了&lt;code&gt;$listeners&lt;/code&gt;&lt;/p&gt;&lt;p&gt;所以你在父组件写了一个&lt;code&gt;el-dialog&lt;/code&gt;的自定义事件想要生效，那么必须要在子组件绑定&lt;code&gt;$listeners&lt;/code&gt;&lt;/p&gt;&lt;pre&gt;&lt;section&gt;&lt;span/&gt;&lt;span/&gt;&lt;span/&gt;&lt;/section&gt;&lt;code&gt;&lt;span&gt;&amp;lt;!--list/ListModal.vue--&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;el-dialog&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;:visible.sync&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;currentVisible&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;width&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;30%&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;v-bind&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;$attrs&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;v-on&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;$listeners&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;  &lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;  ...&lt;br/&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;el-dialog&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;正常来说一个高阶二次组件必须要有&lt;code&gt;v-bind=&quot;$attrs&quot;&lt;/code&gt;与&lt;code&gt;v-on=&quot;$listeners&quot;&lt;/code&gt;&lt;/p&gt;&lt;p&gt;另外我们自己封装的二次组件里有&lt;code&gt;v-model=&#x27;formParams&#x27;&lt;/code&gt;&lt;/p&gt;&lt;p&gt;这个&lt;code&gt;formParams&lt;/code&gt;就是我们弹框内部表单的使用内容&lt;/p&gt;&lt;h3&gt;v-model&lt;/h3&gt;&lt;p&gt;关于&lt;code&gt;v-model&lt;/code&gt;实际上官方解释就是&lt;code&gt;用在组件或者表单上创建双向绑定&lt;/code&gt;，如果把&lt;code&gt;v-model&lt;/code&gt;看成是一个内部提供的一个&lt;code&gt;语法糖&lt;/code&gt;，那么它可以拆解成&lt;code&gt;:value=&quot;value&quot;&lt;/code&gt;与&lt;code&gt;:input=“handleInput”&lt;/code&gt;,&lt;code&gt;v-model&lt;/code&gt;不仅仅是可以作用在&lt;code&gt;表单&lt;/code&gt;元素上，并且还可以作用在&lt;code&gt;组件上&lt;/code&gt;，同时也提供了一个&lt;code&gt;model&lt;/code&gt;的接口，提供自定义修改事件名称&lt;/p&gt;&lt;pre&gt;&lt;section&gt;&lt;span/&gt;&lt;span/&gt;&lt;span/&gt;&lt;/section&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;script&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; &lt;span&gt;default&lt;/span&gt; {&lt;br/&gt;  &lt;span&gt;name&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;&#x27;list-modal&#x27;&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;model&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; {&lt;br/&gt;    &lt;span&gt;prop&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;&#x27;formParams&#x27;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;event&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;&#x27;change&#x27;&lt;/span&gt;,&lt;br/&gt;  },&lt;br/&gt;  &lt;span&gt;props&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; {&lt;br/&gt;    &lt;span&gt;visible&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; {&lt;br/&gt;      &lt;span&gt;type&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;Boolean&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;default&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;,&lt;br/&gt;    },&lt;br/&gt;    &lt;span&gt;formParams&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; {&lt;br/&gt;      &lt;span&gt;type&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;Object&lt;/span&gt;,&lt;br/&gt;    },&lt;br/&gt;  },&lt;br/&gt;  &lt;span&gt;data&lt;/span&gt;() {&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; {&lt;br/&gt;      &lt;span&gt;currentVisible&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;,&lt;br/&gt;    };&lt;br/&gt;  },&lt;br/&gt;  &lt;span&gt;watch&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; {&lt;br/&gt;    &lt;span&gt;visible&lt;/span&gt;(bool) {&lt;br/&gt;      &lt;span&gt;this&lt;/span&gt;.currentVisible &lt;span&gt;=&lt;/span&gt; bool;&lt;br/&gt;    },&lt;br/&gt;    &lt;span&gt;currentVisible&lt;/span&gt;(bool) {&lt;br/&gt;      &lt;span&gt;this&lt;/span&gt;.&lt;span&gt;$emit&lt;/span&gt;(&lt;span&gt;&#x27;update:visible&#x27;&lt;/span&gt;, bool);&lt;br/&gt;    },&lt;br/&gt;  }&lt;br/&gt;};&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;script&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;以上代码就自定义了&lt;code&gt;model&lt;/code&gt;的&lt;code&gt;event&lt;/code&gt;,&lt;code&gt;prop&lt;/code&gt;就是&lt;code&gt;formParams&lt;/code&gt;,同时&lt;code&gt;props&lt;/code&gt;上必须有引入&lt;code&gt;formParams&lt;/code&gt;&lt;/p&gt;&lt;p&gt;不知道你有没有好奇，为啥我&lt;code&gt;data&lt;/code&gt;中定义了一个&lt;code&gt;currentVisible&lt;/code&gt;,而且&lt;code&gt;watch&lt;/code&gt;了&lt;code&gt;visible&lt;/code&gt;与&lt;code&gt;currentVisible&lt;/code&gt;,使用&lt;code&gt;currentVisible&lt;/code&gt;时，这里是有一个坑，因为弹框的&lt;code&gt;icon&lt;/code&gt;关闭操作不会触发最外层事件，也就是你点击右上角的关闭操作后，当你再次打开时，此时，就打不开了，所以就没直接用&lt;code&gt;visible&lt;/code&gt;了，我们需要另一个变量，然后去&lt;code&gt;watch&lt;/code&gt;最终达到我们需要的效果。&lt;/p&gt;&lt;p&gt;在这里有人会奇怪，传入子组件的&lt;code&gt;formParams&lt;/code&gt;直接在表单上使用了，嘿，这样不是直接修改&lt;code&gt;props&lt;/code&gt;吗，但实际上控制台并不会报错，如果你父组件传入的是一个基础数据类型，你在子组件里修改是会直接警告你不能修改的，但是你传入的是一个对象，你此时修改的是对象属性值，并没有修改原对象，所以一个非基础数据类型数据，修改内部值时，是不会警告的，这样做也是ok的。&lt;/p&gt;&lt;h3&gt;插槽&lt;/h3&gt;&lt;p&gt;在这个弹框中的&lt;code&gt;确认&lt;/code&gt;和&lt;code&gt;取消&lt;/code&gt;操作是用插槽&lt;code&gt;slot=&quot;footer&quot;&lt;/code&gt;去显示的，如果你想自定义插槽，那么你可以通过具名插槽进行兼容处理&lt;/p&gt;&lt;pre&gt;&lt;section&gt;&lt;span/&gt;&lt;span/&gt;&lt;span/&gt;&lt;/section&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;el-dialog&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;:visible.sync&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;currentVisible&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;width&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;30%&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;v-bind&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;$attrs&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;v-on&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;$listeners&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;  &lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;  ...&lt;br/&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;template&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;v-if&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;$slots.footer&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;slot&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;footer&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;template&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;v-else&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;slot&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;footer&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;dialog-footer&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;el-button&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;@click&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;closeModal&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;取 消&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;el-button&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;el-button&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;primary&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;@click&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;handleSure&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;确 定&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;el-button&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;el-dialog&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在我们的业务中有大量这样的&lt;code&gt;XXXModal&lt;/code&gt;弹框，如果我们只是这样包了一层，那么我们只是完成了组件的基本使用，也是符合我们常规业务需求，但是你会发现，我们绝大部份业务里的弹框内容都是表单，所以我能不能通过可配置的&lt;code&gt;schame&lt;/code&gt;数据去配置出来呢？&lt;/p&gt;&lt;h3&gt;组件更抽象&lt;/h3&gt;&lt;p&gt;我们在&lt;code&gt;components&lt;/code&gt;下新建了一个&lt;code&gt;form-modal&lt;/code&gt;组件,并注册成全局组件，我的目标是把弹框的内容区域做成可配置化，这样我只需要用配置数据就可以渲染出对应的内容&lt;/p&gt;&lt;pre&gt;&lt;section&gt;&lt;span/&gt;&lt;span/&gt;&lt;span/&gt;&lt;/section&gt;&lt;code&gt;&lt;span&gt;&amp;lt;!--src/components/form-modal/view/index.vue--&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;template&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;form-modal&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;el-dialog&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;:visible.sync&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;currentVisible&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;v-bind&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;$attrs&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;v-on&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;$listeners&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;el-form&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;v-bind&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;formConfig.formAttrs&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;:model&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;formParams&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;v-for&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;(item, index) in formConfig.fields&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;:key&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;index&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;          &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;el-form-item&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;:label&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;item.label&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;&amp;lt;!--自定义插槽--&amp;gt;&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;template&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;v-if&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;item.slot&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;              &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;slot&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;:name&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;item.slot&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;:row&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;{ ...item, formParams, index }&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;template&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;&amp;lt;!--文本or文本域--&amp;gt;&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;template&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;v-else-if&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;[&lt;/span&gt;&lt;span&gt;&#x27;&lt;/span&gt;&lt;span&gt;text&lt;/span&gt;&lt;span&gt;&#x27;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&#x27;&lt;/span&gt;&lt;span&gt;textarea&lt;/span&gt;&lt;span&gt;&#x27;&lt;/span&gt;&lt;span&gt;].includes(item.type)&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;              &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;el-input&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;                &lt;/span&gt;&lt;span&gt;:type&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;item.type&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;                &lt;/span&gt;&lt;span&gt;v-bind&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;item.attrs || {}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;                &lt;/span&gt;&lt;span&gt;v-model&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;formParams[item.key]&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;              &lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;el-input&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;template&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;&amp;lt;!--下拉框--&amp;gt;&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;template&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;v-else-if&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;item.type === &lt;/span&gt;&lt;span&gt;&#x27;&lt;/span&gt;&lt;span&gt;select&lt;/span&gt;&lt;span&gt;&#x27;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;              &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;el-select&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;v-bind&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;item.attrs&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;v-model&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;formParams[item.key]&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;el-option&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;                  &lt;/span&gt;&lt;span&gt;v-for&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;(sitem, index) in item.options.data&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;                  &lt;/span&gt;&lt;span&gt;:key&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;index&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;                  &lt;/span&gt;&lt;span&gt;:label&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;sitem[item.options.extraProps.label]&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;                  &lt;/span&gt;&lt;span&gt;:value&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;sitem[item.options.extraProps.value]&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;                &lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;el-option&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;              &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;el-select&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;template&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;          &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;el-form-item&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;el-form&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;slot&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;footer&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;dialog-footer&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;el-button&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;@click&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;closeModal&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;取 消&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;el-button&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;el-button&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;primary&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;@click&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;handleSure&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;确 定&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;el-button&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;el-dialog&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;template&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;全局注册&lt;/p&gt;&lt;pre&gt;&lt;section&gt;&lt;span/&gt;&lt;span/&gt;&lt;span/&gt;&lt;/section&gt;&lt;code&gt;&lt;span&gt;// src/components/index.js&lt;/span&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; Vue &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;vue&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; FormModal &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;./form-modal&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; custCompoment &lt;span&gt;=&lt;/span&gt; {&lt;br/&gt;  FormModal,&lt;br/&gt;};&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; &lt;span&gt;const&lt;/span&gt; &lt;span&gt;installCustComponent&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; () &lt;span&gt;=&amp;gt;&lt;/span&gt; {&lt;br/&gt;  &lt;span&gt;Object&lt;/span&gt;.&lt;span&gt;keys&lt;/span&gt;(custCompoment).&lt;span&gt;forEach&lt;/span&gt;((key) &lt;span&gt;=&amp;gt;&lt;/span&gt; {&lt;br/&gt;    Vue.&lt;span&gt;component&lt;/span&gt;(key, custCompoment[key]);&lt;br/&gt;  });&lt;br/&gt;};&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;main.js&lt;/code&gt;&lt;/p&gt;&lt;pre&gt;&lt;section&gt;&lt;span/&gt;&lt;span/&gt;&lt;span/&gt;&lt;/section&gt;&lt;code&gt;&lt;span&gt;// main.js&lt;/span&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; { installCustComponent } &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;@/components&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;installCustComponent&lt;/span&gt;();&lt;br/&gt;&lt;span&gt;...&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;我们发现在模版里面有不少添加条件，实际上，这些条件主要根据你业务需要而定，除了模版方式，插槽，我们也可以预留一个自定义&lt;code&gt;formater&lt;/code&gt;的接口，像下面这样&lt;/p&gt;&lt;pre&gt;&lt;section&gt;&lt;span/&gt;&lt;span/&gt;&lt;span/&gt;&lt;/section&gt;&lt;code&gt;&lt;span&gt;&amp;lt;!--src/components/form-modal/view/index.vue--&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;v-for&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;(item, index) in formConfig.fields&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;:key&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;index&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;el-form-item&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;:label&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;item.label&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;&amp;lt;!--自定义render--&amp;gt;&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;template&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;v-if&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;item.formater&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;component&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;          &lt;/span&gt;&lt;span&gt;:is&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&#x27;&lt;/span&gt;&lt;span&gt;renderComponent&lt;/span&gt;&lt;span&gt;&#x27;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;          &lt;/span&gt;&lt;span&gt;:value&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;formParams[item.key]&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;          &lt;/span&gt;&lt;span&gt;:input&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;e =&amp;gt; formParams[item.key] = e&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;          &lt;/span&gt;&lt;span&gt;v-bind&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;{ ...item }&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;component&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;template&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;&amp;lt;!--自定义插槽--&amp;gt;&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;template&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;v-else-if&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;item.slot&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;slot&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;:name&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;item.slot&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;:row&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;{ ...item, formParams, index }&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;template&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;&amp;lt;!--文本or文本域--&amp;gt;&lt;/span&gt;&lt;br/&gt;      ...&lt;br/&gt;    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;el-form-item&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;那么此时你会发现有一个&lt;code&gt;renderComponent&lt;/code&gt;这样的自定义组件，我们必须引入进来&lt;/p&gt;&lt;pre&gt;&lt;section&gt;&lt;span/&gt;&lt;span/&gt;&lt;span/&gt;&lt;/section&gt;&lt;code&gt;&lt;span&gt;/* src/components/form-modal/view/render.js*/&lt;/span&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; &lt;span&gt;default&lt;/span&gt; {&lt;br/&gt;  &lt;span&gt;functional&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;props&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; [&lt;span&gt;&#x27;value&#x27;&lt;/span&gt;],&lt;br/&gt;  &lt;span&gt;render&lt;/span&gt;(h, ctx) {&lt;br/&gt;    &lt;span&gt;const&lt;/span&gt; { formater, attrs, &lt;span&gt;input&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; handleInput } &lt;span&gt;=&lt;/span&gt; ctx.data.attrs;&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;formater&lt;/span&gt;(h, {&lt;br/&gt;      &lt;span&gt;attrs&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; {&lt;br/&gt;        &lt;span&gt;...&lt;/span&gt;attrs,&lt;br/&gt;        &lt;span&gt;value&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; ctx.props.value,&lt;br/&gt;      },&lt;br/&gt;      &lt;span&gt;on&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; {&lt;br/&gt;        &lt;span&gt;input&lt;/span&gt;(e) {&lt;br/&gt;          &lt;span&gt;handleInput&lt;/span&gt;(e);&lt;br/&gt;        },&lt;br/&gt;      },&lt;br/&gt;    });&lt;br/&gt;  },&lt;br/&gt;};&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在&lt;code&gt;form-modal/view/index.vue&lt;/code&gt;中我们必须引入,所以模版中就可以使用了&lt;/p&gt;&lt;pre&gt;&lt;section&gt;&lt;span/&gt;&lt;span/&gt;&lt;span/&gt;&lt;/section&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;script&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;// src/components/form-modal/view/index.vue&lt;/span&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; renderComponent &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;./render&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; &lt;span&gt;default&lt;/span&gt; {&lt;br/&gt;  &lt;span&gt;name&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;&#x27;form-modal&#x27;&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;model&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; {&lt;br/&gt;    &lt;span&gt;prop&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;&#x27;formParams&#x27;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;event&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;&#x27;change&#x27;&lt;/span&gt;,&lt;br/&gt;  },&lt;br/&gt;  &lt;span&gt;components&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; {&lt;br/&gt;    renderComponent,&lt;br/&gt;  },&lt;br/&gt;  &lt;span&gt;props&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; {&lt;br/&gt;    &lt;span&gt;visible&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; {&lt;br/&gt;      &lt;span&gt;type&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;Boolean&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;default&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;,&lt;br/&gt;    },&lt;br/&gt;    &lt;span&gt;formParams&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; {&lt;br/&gt;      &lt;span&gt;type&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;Object&lt;/span&gt;,&lt;br/&gt;    },&lt;br/&gt;    &lt;span&gt;formConfig&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; {&lt;br/&gt;      &lt;span&gt;type&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;Object&lt;/span&gt;,&lt;br/&gt;    },&lt;br/&gt;  },&lt;br/&gt;  &lt;span&gt;...&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;script&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;我们再看下我们之前业务弹框与&lt;code&gt;schame&lt;/code&gt;再次抽象后的两个组件，其实第二个全局组件就多了一个&lt;code&gt;formConfig&lt;/code&gt;,我们统一把内容抽离了出去，实际上呢，我们的&lt;code&gt;form-modal&lt;/code&gt;就变得更加通用，我们只需要关注&lt;code&gt;formConfig&lt;/code&gt;这份配置数据就行&lt;/p&gt;&lt;pre&gt;&lt;section&gt;&lt;span/&gt;&lt;span/&gt;&lt;span/&gt;&lt;/section&gt;&lt;code&gt;/* eslint-disable func-names */&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;template&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;list-app&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;   ...&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;list-modal&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;      &lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;编辑&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;      &lt;/span&gt;&lt;span&gt;width&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;50%&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;      &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;list-modal&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;      &lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;border&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;px&lt;/span&gt;&lt;span&gt; solid &lt;/span&gt;&lt;span&gt;transparent&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;      &lt;/span&gt;&lt;span&gt;v-model&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;formParams&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;      &lt;/span&gt;&lt;span&gt;:visible.sync&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;dialogVisible&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;      &lt;/span&gt;&lt;span&gt;@refresh&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;featchList&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;      &lt;/span&gt;&lt;span&gt;@close&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;handleClose&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;slot&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;footer&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;确定&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;list-modal&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;form-modal&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;      &lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;编辑&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;      &lt;/span&gt;&lt;span&gt;width&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;50%&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;      &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;list-modal&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;      &lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;border&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;px&lt;/span&gt;&lt;span&gt; solid &lt;/span&gt;&lt;span&gt;transparent&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;      &lt;/span&gt;&lt;span&gt;v-model&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;formParams&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;      &lt;/span&gt;&lt;span&gt;:formConfig&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;formConfig&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;      &lt;/span&gt;&lt;span&gt;:visible.sync&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;dialogVisible2&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;      &lt;/span&gt;&lt;span&gt;@refresh&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;featchList&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;      &lt;/span&gt;&lt;span&gt;@close&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;handleClose&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;template&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;slot-scope&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;{ row }&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;slot&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;number&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;el-input&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;          &lt;/span&gt;&lt;span&gt;:type&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;row.type&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;          &lt;/span&gt;&lt;span&gt;v-bind&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;row.attrs || {}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;          &lt;/span&gt;&lt;span&gt;v-model&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;row.formParams[row.slot]&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;el-input&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;template&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;form-modal&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;template&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; { sourceDataMock } &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;@/mock&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; ListModal &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;./ListModal&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; &lt;span&gt;default&lt;/span&gt; {&lt;br/&gt;  &lt;span&gt;name&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;&#x27;list&#x27;&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;components&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; {&lt;br/&gt;    ListModal,&lt;br/&gt;  },&lt;br/&gt;  &lt;span&gt;data&lt;/span&gt;() {&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; {&lt;br/&gt;      &lt;span&gt;...&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;tableData&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; [],&lt;br/&gt;      &lt;span&gt;dialogVisible&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;dialogVisible2&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;formParams&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; {&lt;br/&gt;        &lt;span&gt;date&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;&#x27;&#x27;&lt;/span&gt;,&lt;br/&gt;        &lt;span&gt;name&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;&#x27;&#x27;&lt;/span&gt;,&lt;br/&gt;        &lt;span&gt;address&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;&#x27;&#x27;&lt;/span&gt;,&lt;br/&gt;        &lt;span&gt;number&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;&#x27;1&#x27;&lt;/span&gt;,&lt;br/&gt;        &lt;span&gt;scholl&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;&#x27;公众号:Web技术学苑&#x27;&lt;/span&gt;,&lt;br/&gt;      },&lt;br/&gt;    };&lt;br/&gt;  },&lt;br/&gt;  &lt;span&gt;computed&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; {&lt;br/&gt;    &lt;span&gt;formConfig&lt;/span&gt;() {&lt;br/&gt;      &lt;span&gt;return&lt;/span&gt; {&lt;br/&gt;        &lt;span&gt;formAttrs&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; {&lt;br/&gt;          &lt;span&gt;labelWidth&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;&#x27;80px&#x27;&lt;/span&gt;,&lt;br/&gt;          &lt;span&gt;labelPosition&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;&#x27;left&#x27;&lt;/span&gt;,&lt;br/&gt;        },&lt;br/&gt;        &lt;span&gt;fields&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; [&lt;br/&gt;          {&lt;br/&gt;            &lt;span&gt;type&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;&#x27;text&#x27;&lt;/span&gt;,&lt;br/&gt;            &lt;span&gt;key&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;&#x27;date&#x27;&lt;/span&gt;,&lt;br/&gt;            &lt;span&gt;label&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;&#x27;日期&#x27;&lt;/span&gt;,&lt;br/&gt;            &lt;span&gt;attrs&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; {&lt;br/&gt;              &lt;span&gt;placeholder&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;&#x27;请填写日期&#x27;&lt;/span&gt;,&lt;br/&gt;            },&lt;br/&gt;          },&lt;br/&gt;          {&lt;br/&gt;            &lt;span&gt;type&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;&#x27;text&#x27;&lt;/span&gt;,&lt;br/&gt;            &lt;span&gt;key&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;&#x27;name&#x27;&lt;/span&gt;,&lt;br/&gt;            &lt;span&gt;label&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;&#x27;名称&#x27;&lt;/span&gt;,&lt;br/&gt;            &lt;span&gt;attrs&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; {&lt;br/&gt;              &lt;span&gt;placeholder&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;&#x27;请填写名称&#x27;&lt;/span&gt;,&lt;br/&gt;            },&lt;br/&gt;          },&lt;br/&gt;          {&lt;br/&gt;            &lt;span&gt;type&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;&#x27;select&#x27;&lt;/span&gt;,&lt;br/&gt;            &lt;span&gt;key&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;&#x27;address&#x27;&lt;/span&gt;,&lt;br/&gt;            &lt;span&gt;label&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;&#x27;地址&#x27;&lt;/span&gt;,&lt;br/&gt;            &lt;span&gt;attrs&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; {&lt;br/&gt;              &lt;span&gt;placeholder&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;&#x27;请选择地址&#x27;&lt;/span&gt;,&lt;br/&gt;              &lt;span&gt;style&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; {&lt;br/&gt;                &lt;span&gt;width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;&#x27;100%&#x27;&lt;/span&gt;,&lt;br/&gt;              },&lt;br/&gt;            },&lt;br/&gt;            &lt;span&gt;options&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; {&lt;br/&gt;              &lt;span&gt;data&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;.tableData,&lt;br/&gt;              &lt;span&gt;extraProps&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; {&lt;br/&gt;                &lt;span&gt;value&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;&#x27;address&#x27;&lt;/span&gt;,&lt;br/&gt;                &lt;span&gt;label&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;&#x27;address&#x27;&lt;/span&gt;,&lt;br/&gt;              },&lt;br/&gt;            },&lt;br/&gt;          },&lt;br/&gt;          {&lt;br/&gt;            &lt;span&gt;type&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;&#x27;text&#x27;&lt;/span&gt;,&lt;br/&gt;            &lt;span&gt;slot&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;&#x27;number&#x27;&lt;/span&gt;,&lt;br/&gt;            &lt;span&gt;label&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;&#x27;编号&#x27;&lt;/span&gt;,&lt;br/&gt;            &lt;span&gt;attrs&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; {&lt;br/&gt;              &lt;span&gt;placeholder&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;&#x27;请输入编号&#x27;&lt;/span&gt;,&lt;br/&gt;            },&lt;br/&gt;          },&lt;br/&gt;          {&lt;br/&gt;            &lt;span&gt;type&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;&#x27;text&#x27;&lt;/span&gt;,&lt;br/&gt;            &lt;span&gt;key&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;&#x27;scholl&#x27;&lt;/span&gt;,&lt;br/&gt;            &lt;span&gt;label&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;&#x27;毕业学校&#x27;&lt;/span&gt;,&lt;br/&gt;            &lt;span&gt;attrs&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; {&lt;br/&gt;              &lt;span&gt;placeholder&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;&#x27;请输入毕业学校&#x27;&lt;/span&gt;,&lt;br/&gt;            },&lt;br/&gt;            &lt;span&gt;formater&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; (h, props) &lt;span&gt;=&amp;gt;&lt;/span&gt;&lt;br/&gt;              &lt;span&gt;h&lt;/span&gt;(&lt;span&gt;&#x27;el-input&#x27;&lt;/span&gt;, {&lt;br/&gt;                &lt;span&gt;...&lt;/span&gt;props,&lt;br/&gt;              }),&lt;br/&gt;          },&lt;br/&gt;        ],&lt;br/&gt;      };&lt;br/&gt;    },&lt;br/&gt;  },&lt;br/&gt;};&lt;br/&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;scoped&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;.list-app&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;.el-form&lt;/span&gt; {&lt;br/&gt;  &lt;span&gt;text-align&lt;/span&gt;: left;&lt;br/&gt;}&lt;br/&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;看下最终的结果&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6998892580287929&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/0jXCeiaibicNx7RYwscdsiaa32iaxuXDqr4qHvz3jrol0sXvluU3w08Wqe65bDS4libGVOjjMeWNfibgUoW7uP2saoWyQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;903&quot;/&gt;&lt;/figure&gt;&lt;p&gt;在我们自定义一个&lt;code&gt;formater&lt;/code&gt;的接口，我们注意到，实际上这里有用&lt;code&gt;vue&lt;/code&gt;的纯函数组件，我们注意到在&lt;code&gt;render.js&lt;/code&gt;中我们是申明了&lt;code&gt;functional: true&lt;/code&gt;,这里会有巨坑，如果是一个函数组件，在&lt;code&gt;render&lt;/code&gt;函数中是获取不到&lt;code&gt;this&lt;/code&gt;的，只能通过第二个&lt;code&gt;ctx&lt;/code&gt;参数获取父组件传入的&lt;code&gt;props&lt;/code&gt;信息&lt;/p&gt;&lt;pre&gt;&lt;section&gt;&lt;span/&gt;&lt;span/&gt;&lt;span/&gt;&lt;/section&gt;&lt;code&gt;&lt;span&gt;/* eslint-disable no-param-reassign */&lt;/span&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; &lt;span&gt;default&lt;/span&gt; {&lt;br/&gt;  &lt;span&gt;functional&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;props&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; [&lt;span&gt;&#x27;value&#x27;&lt;/span&gt;],&lt;br/&gt;  &lt;span&gt;render&lt;/span&gt;(h, ctx) {&lt;br/&gt;    &lt;span&gt;// console.log(this, &#x27;---&#x27;); // 会是null，只能通过第二个参数ctx拿对应参数&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;const&lt;/span&gt; { formater, attrs, &lt;span&gt;input&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; handleInput } &lt;span&gt;=&lt;/span&gt; ctx.data.attrs;&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;formater&lt;/span&gt;(h, {&lt;br/&gt;      &lt;span&gt;attrs&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; {&lt;br/&gt;        &lt;span&gt;...&lt;/span&gt;attrs,&lt;br/&gt;        &lt;span&gt;value&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; ctx.props.value,&lt;br/&gt;      },&lt;br/&gt;      &lt;span&gt;on&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; {&lt;br/&gt;        &lt;span&gt;input&lt;/span&gt;(e) {&lt;br/&gt;          &lt;span&gt;handleInput&lt;/span&gt;(e);&lt;br/&gt;        },&lt;br/&gt;      },&lt;br/&gt;    });&lt;br/&gt;  },&lt;br/&gt;};&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;并且我们修改数据，我们发现我们用了一个父组件传入的一个回调函数去修改，这在&lt;code&gt;react&lt;/code&gt;很常见，这里我们也是通过回调方式修改数据，因为&lt;code&gt;vue&lt;/code&gt;数据流是单向的，所以只能这种方式去修改了&lt;/p&gt;&lt;p&gt;因此在业务中我们的&lt;code&gt;form-modal&lt;/code&gt;就变得更通用，更高频了，这样会减少你重复劳动的时间，你只需要关注配置接口信息就行。&lt;/p&gt;&lt;p&gt;但是这样带来的负担是有的，如果这个&lt;code&gt;form-modal&lt;/code&gt;耦合了太多业务逻辑，那么带来的心智负担是有的，当你二次封装的一个高频组件，你组内小伙伴不能像使用&lt;code&gt;第三方组件库&lt;/code&gt;那么快捷时，说明组件的&lt;code&gt;接口设计&lt;/code&gt;还有提高的空间，判断一个组件好不好用的标准就是，零负担，而且人人能改，人人都能改动，如果因为业务特殊，当我们考虑二次封装一个组件参杂很多业务逻辑判断时，那我的观点是，还是不要进行二次封装了。&lt;/p&gt;&lt;h3&gt;总结&lt;/h3&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;以一个弹框组件为例，我们二次封装组件到底需要注意哪些问题，以及我们必须注意些什么，核心思想就是继承原有组件的特性，&lt;code&gt;v-bind=&#x27;$attrs&#x27;&lt;/code&gt;与&lt;code&gt;v-on=&quot;$listeners&quot;&lt;/code&gt;是核心&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;当我们二次封装一个组件时，我们自定义的一些接口能少就少，组件名必须见名知意&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;二次封装的组件不仅仅只是包一层，我们可以尝试用&lt;code&gt;数据配置&lt;/code&gt;方式让组件更通用，预留一些接口插槽，或者自定义&lt;code&gt;formater&lt;/code&gt;函数，不强制约束，让组件灵活性拓展性更强些&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;组件的&lt;code&gt;props&lt;/code&gt;名字尽量不要带来负担，最好与原有组件&lt;code&gt;props&lt;/code&gt;保持一致&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;本文 &lt;span&gt;code example&lt;span&gt;[1]&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;参考资料&lt;/h3&gt;&lt;p&gt;&lt;span&gt;[1]&lt;/span&gt;&lt;span&gt;code example：&lt;em&gt; https://github.com/maicFir/lessonNote/tree/master/vue/05-keep-alive&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>8a8391e5e814103395f05bcafed00d71</guid>
<title>Ethers.js 非权威开发指南（4）</title>
<link>https://toutiao.io/k/nkodrli</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content js_underline_content             autoTypeSetting24psection&amp;#10;            &quot; id=&quot;js_content&quot;&gt;&lt;section data-tool=&quot;markdown编辑器&quot; data-website=&quot;https://markdown.com.cn/editor&quot;&gt;&lt;p data-tool=&quot;markdown.com.cn编辑器&quot;&gt;从&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzIyOTY1NDYyMw==&amp;amp;mid=2247484599&amp;amp;idx=1&amp;amp;sn=29bed6f53de918392cac8055681927af&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;上一篇&lt;/a&gt;起，一个关于 Ethers.js 开发的系列事实上诞生了。既然如此，我也乐得顺水推舟，干脆将其打造成一个使用 Ethers.js 开发以太坊应用的 Cookbook，以此来记录日常开发中的收获。于是乎，标题不再是上、下、续之类的麻烦字眼，直接替换成了自增数字，😄。&lt;/p&gt;&lt;p data-tool=&quot;markdown.com.cn编辑器&quot;&gt;闲话说完，言归正传。通过本篇你可以了解到：&lt;/p&gt;&lt;ul data-tool=&quot;markdown.com.cn编辑器&quot; class=&quot; list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;transaction 的取消或加速&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;EIP1559 对 GasPrice 的影响&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;什么是 HD Wallet 以及它的用途&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;对 contract 日志实现任意查询&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;contract 方法调用的权限控制&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;markdown.com.cn编辑器&quot;&gt;&lt;span/&gt;如何取消或加速 Transaction&lt;/h2&gt;&lt;p data-tool=&quot;markdown.com.cn编辑器&quot;&gt;说到取消或加速 Transaction 的原因，有人可能会列出一大堆：&lt;/p&gt;&lt;ul data-tool=&quot;markdown.com.cn编辑器&quot; class=&quot; list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;太慢了，希望快点结束；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;后悔了，想取消；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;市场变了，按原来的输入明显会失败，不如取消重来；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;……&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;markdown.com.cn编辑器&quot;&gt;但在我看来，最大的原因还是迟迟不能被 confirm 的 Transaction 会影响当前 Wallet 的使用，导致整个 wallet 被堵住无法使用。如果它是个人用的，影响的也就是单个人而已；但如果它是被系统使用的服务器端 wallet，那影响面可想而知。&lt;/p&gt;&lt;p data-tool=&quot;markdown.com.cn编辑器&quot;&gt;在介绍 Transaction 的取消和交易之前，必须先了解一个基本概念：nonce。单看字面意思，dapp 开发的初学者可能会摸不着头脑。但假如把它换成另一个词 sequence，相信就好懂多了。&lt;/p&gt;&lt;p data-tool=&quot;markdown.com.cn编辑器&quot;&gt;简单讲，nonce 的基本作用：&lt;/p&gt;&lt;ul data-tool=&quot;markdown.com.cn编辑器&quot; class=&quot; list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;表示当前地址已提交 transaction 的个数。它和 sequence 一样是自增的，每提交一次，个数加一。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;防止重放攻击，由于每次提交之后都会变化且包含在 transaction 中，这样就杜绝了过往 transaction 签名被重用的可能性。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;markdown.com.cn编辑器&quot;&gt;同时，transaction 只能按顺序执行，前面的不被确认，后面的就无法被执行，就算可以不断提交，但依旧也只是进入到等待队列，对于实际的活动帮助并不大，反而还会留下一大堆未来需要处理的麻烦事。&lt;/p&gt;&lt;p data-tool=&quot;markdown.com.cn编辑器&quot;&gt;假如你的 dapp 只有前端且由用户负责发起 transaction ，典型如 uniswap，那么作为开发者，你是不必过于关心 nonce 或 wallet 是否被堵住这类琐碎的。这并不是说使用这类 dapp 的 wallet 并不会被堵住，而是说该操心的不是你的代码，而是使用者本身。&lt;/p&gt;&lt;p data-tool=&quot;markdown.com.cn编辑器&quot;&gt;但倘若你的 dapp 涉及到服务端且存在服务端代码需要发起 transaction 时，你的麻烦就来了。&lt;/p&gt;&lt;p data-tool=&quot;markdown.com.cn编辑器&quot;&gt;首先，你需要有办法知道服务端的 wallet 是否被堵住。这个简单，使用下面的代码就可以办到：&lt;/p&gt;&lt;p&gt;&lt;mp-pay-preview-filter/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;

          
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>