<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>a822ba951b5c918848900e00841ab9ba</guid>
<title>向 Rust 学习？Go 考虑简单字符串插值特性</title>
<link>https://toutiao.io/k/tkrrzuz</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大家好，我是煎鱼。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在日常开发 Go 工程中，我们经常会用 &lt;code&gt;fmt.Printf&lt;/code&gt; 或 &lt;code&gt;fmt.Sprintf&lt;/code&gt; 去写类似的拼装字符串的业务。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如下代码：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;fmt.Printf(&lt;span&gt;&quot;Hello Gopher %s, you are %d years old and you&#x27;re favorite food is %s&quot;&lt;/span&gt;, name, age, favoriteFood)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这业务迭代迭代着，日积月累的，有一部分常变的拼装逻辑会来越长。小小的电脑显示屏已经不足以让代码在一行内显示了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有许多特性会把字符串转为变量，但后面那串又臭又长的变量依然无法简单甩掉，因此有大部分同学会选择把代码格式化了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如下代码：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;s :=  &lt;span&gt;&quot;Hello Gopher %s, you are %d years old and you&#x27;re favorite food is %s&quot;&lt;/span&gt;&lt;br/&gt;fmt.Printf(&lt;br/&gt;    s, &lt;br/&gt;    name, &lt;br/&gt;    age, &lt;br/&gt;    favoriteFood,&lt;br/&gt;)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;你可能以为这是个例？实际并不，很多人都遇到了。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;简单字符串插值&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这在 Go issues 中社区讨论了三四年了，@Ian Lance Taylor 发起了新提案《&lt;span&gt;proposal: spec: add simple string interpolation similar to Swift&lt;/span&gt;&lt;sup&gt;[1]&lt;/sup&gt;》。希望能够得到更多的讨论，增加新特性解决这个问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个新特性，类似于 Swift 中的字符串插值的简单版本。我们直接看例子：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;fmt.Println(&lt;span&gt;&quot;\(person.Name()) is \(person.Age()) years old&quot;&lt;/span&gt;)&lt;br/&gt;&lt;br/&gt;fmt.Println(&lt;span&gt;&quot;The time is \(time.Now().Round(0))&quot;&lt;/span&gt;)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对应的输出结果：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;Ken Thompson is 79 years old&lt;br/&gt;&lt;br/&gt;The time is 2023-01-04 16:22:01.204034106 -0800 PST&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;提案计划新增的 “字符串插值”，规范如下：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;新转义语法：&lt;code&gt;\(xxxx)&lt;/code&gt;，开头是 &lt;code&gt;\(&lt;/code&gt;，结尾是 &lt;code&gt;)&lt;/code&gt;，成对出现。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;在格式上，一个有效的 &lt;code&gt;\(&lt;/code&gt;，后面必须有一个表达式和一个尾部的 &lt;code&gt;）&lt;/code&gt;，这样才能生效。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上面的例子中，以下几个都是字符串插值：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;\(person.Name())&lt;br/&gt;&lt;br/&gt;\(person.Age())&lt;br/&gt;&lt;br/&gt;\(time.Now().Round(&lt;span&gt;0&lt;/span&gt;))&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;会有同学疑惑像 &lt;code&gt;person&lt;/code&gt; 看起来就是结构体的是怎么取值的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Go 有一个神奇的约定方法，像结构体这类类型，如果有 &lt;code&gt;String() string&lt;/code&gt; 方法，将会调用该方法以获取字符串值。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果没有 String 方法，需要是字符串、整数、浮点数、复数、常量或布尔值等类型，可以取值后格式化。否则将会报错。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;其他语言例子&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Swift&lt;span/&gt;&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;let&lt;/span&gt; multiplier = &lt;span&gt;3&lt;/span&gt;&lt;br/&gt;&lt;span&gt;let&lt;/span&gt; message = &lt;span&gt;&quot;\(multiplier) times 2.5 is \(Double(multiplier) * 2.5)&quot;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;// message is &quot;3 times 2.5 is 7.5&quot;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Kotlin&lt;span/&gt;&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;var&lt;/span&gt; age = &lt;span&gt;21&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;println(&lt;span&gt;&quot;My Age Is: &lt;span&gt;$age&lt;/span&gt;&quot;&lt;/span&gt;)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;C#&lt;span/&gt;&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;string&lt;/span&gt; name = &lt;span&gt;&quot;Mark&quot;&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;var&lt;/span&gt; date = DateTime.Now;&lt;br/&gt;&lt;br/&gt;Console.WriteLine(&lt;span&gt;$&quot;Hello, &lt;span&gt;{name}&lt;/span&gt;! Today is &lt;span&gt;{date.DayOfWeek}&lt;/span&gt;, it&#x27;s &lt;span&gt;{date:HH:mm}&lt;/span&gt; now.&quot;&lt;/span&gt;);&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Rust&lt;span/&gt;&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;let&lt;/span&gt; person = get_person();&lt;br/&gt;&lt;span&gt;println!&lt;/span&gt;(&lt;span&gt;&quot;Hello, {person}!&quot;&lt;/span&gt;); &lt;span&gt;// captures the local `person`&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;println!&lt;/span&gt;(&lt;span&gt;&quot;Hello, {}!&quot;&lt;/span&gt;, get_person());                &lt;span&gt;// implicit position&lt;/span&gt;&lt;br/&gt;&lt;span&gt;println!&lt;/span&gt;(&lt;span&gt;&quot;Hello, {0}!&quot;&lt;/span&gt;, get_person());               &lt;span&gt;// explicit index&lt;/span&gt;&lt;br/&gt;&lt;span&gt;println!&lt;/span&gt;(&lt;span&gt;&quot;Hello, {person}!&quot;&lt;/span&gt;, person = get_person()); &lt;span&gt;// named&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;let&lt;/span&gt; (width, precision) = get_format();&lt;br/&gt;&lt;span&gt;for&lt;/span&gt; (name, score) &lt;span&gt;in&lt;/span&gt; get_scores() {&lt;br/&gt;  &lt;span&gt;println!&lt;/span&gt;(&lt;span&gt;&quot;{name}: {score:width$.precision$}&quot;&lt;/span&gt;);&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;争论矛盾点&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当前的主要争论点之一，像是 &lt;code&gt;fmt.Sprintf&lt;/code&gt; 等方法也可以完成字符串插值一模一样的效果，为什么还要新增这个功能特性（或是语法糖）？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;主流观点是现有的格式化字符串的方法，在参数数量多了后，很容易出错（例如：顺序搞错），也比较松散，一大坨代码。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在新增字符串插值的特性/语法糖后，可以更好阅读、更好修改，不需要过于依赖编写变量的顺序、更紧凑。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;具体的例子如下，现有版本代码：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;errorf(pos, &lt;span&gt;&quot;arguments to copy %s and %s have different element types %s and %s&quot;&lt;/span&gt;, x, &amp;amp;y, dst.elem, src.elem)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;应用新特性后会变成：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;error(pos, &lt;span&gt;&quot;arguments to copy \(x) and \(&amp;amp;y) have different element types \(dst.elem) and \(src.elem)&quot;&lt;/span&gt;)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;总结&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其实我们在工作中都经常遇到这个问题，甚至在 issues 中有同学反馈，他经常要写 50 个以上参数的格式化参数，在 Go 这维护起来比较痛苦。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果你是长期维护某几个项目的开发者，不断持续新增、变更的现有格式化字符串的方法，和新增的字符串插值。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在接下来的几年中，你会选择哪一个？或是有没有新的想法？&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;推荐阅读&lt;span/&gt;&lt;/h4&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;参考资料&lt;/span&gt;&lt;/h3&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;span&gt;[1]&lt;/span&gt;&lt;p&gt;proposal: spec: add simple string interpolation similar to Swift: &lt;em&gt;https://github.com/golang/go/issues/57616&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>fddf74136b8a7ff3e2f3c4963b5424b2</guid>
<title>凹语言 Docker + WebAssembly 3 分钟入门</title>
<link>https://toutiao.io/k/h9zh039</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content js_underline_content             autoTypeSetting24psection&amp;#10;            &quot; id=&quot;js_content&quot;&gt;&lt;p&gt;&lt;span&gt;2022 年底，Docker 发布了对 WebAssembly 支持的预览版本，标志着 &lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg2NzAwMTYzOQ==&amp;amp;mid=2247484925&amp;amp;idx=1&amp;amp;sn=f370023450dda5efdd24c2b962e1d61e&amp;amp;chksm=ce4371b5f934f8a390a1b81c813863642f9cc07045d08f3044c89409894fcf602bc26f7bf5f8&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;WASM 原生时代到来&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;11&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;WASM 原生时代到来&lt;/a&gt;。Docker 通过集成 WasmEdge 运行时支持WASM模块。Docker 运行时已经准备就绪，那么如何构建出 WASM 模块呢？目前支持 Wasm 的语言有很多，这里我们选择凹语言来构建 Wasm 镜像。Docker 官方博文：&lt;/span&gt;&lt;em&gt;&lt;span&gt;https://www.docker.com/blog/docker-wasm-technical-preview/&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.41603630862329805&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/QAncwTWS4Gq66QNIv3PoEMqFRIJcFNHZ3kEtmRLYhUoe7myIRtSOO5pB2qZkFchxeIs4OIOv3WQs9m5DX13pkg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;661&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p data-line=&quot;12&quot; dir=&quot;auto&quot;&gt;&lt;span&gt;本文的例子代码：&lt;/span&gt;&lt;em&gt;&lt;span&gt;https://gitee.com/wa-lang/wa/tree/dev-wasi/_examples/docker-wasm&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;&lt;h2 data-line=&quot;14&quot; dir=&quot;auto&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1. 凹语言到WASM模块&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p data-line=&quot;16&quot; dir=&quot;auto&quot;&gt;&lt;span&gt;凹语言是针对 WebAssembly 设计的语言，也是国内第一个实现纯浏览器内编译、执行全链路的自研静态类型的编译型通用编程语言。这里我们再尝试通过凹语言来构造 Docker 的 Wasm 镜像。&lt;/span&gt;&lt;/p&gt;&lt;p data-line=&quot;18&quot; dir=&quot;auto&quot;&gt;&lt;span&gt;凹语言是 Go 语言开发的编译器，因此需要本地先安装 Go1.17+ 版本环境。然后基于 dev-wasi 分支最新代码构造出 wa 语言编译器命令。或者通过以下命令安装：&lt;/span&gt;&lt;code&gt;&lt;span&gt;go install wa-lang.org/wa@dev-wasi&lt;/span&gt;&lt;/code&gt;&lt;span&gt;，安装的命令默认在 &lt;/span&gt;&lt;code&gt;&lt;span&gt;$HOME/go/bin&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 目录。确保本地 &lt;/span&gt;&lt;code&gt;&lt;span&gt;wa&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 命令行可以使用，可以通过 &lt;/span&gt;&lt;code&gt;&lt;span&gt;wa -v&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 查看版本。&lt;/span&gt;&lt;/p&gt;&lt;p data-line=&quot;20&quot; dir=&quot;auto&quot;&gt;&lt;span&gt;凹语言环境配置好之后，创建 hello.wa 文件:&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;&lt;code data-line=&quot;22&quot; dir=&quot;auto&quot;&gt;&lt;code&gt;// 版权 @2019 凹语言 作者。保留所有权利。&lt;br/&gt;&lt;br/&gt;import &quot;fmt&quot;&lt;br/&gt;import &quot;runtime&quot;&lt;br/&gt;&lt;br/&gt;func main {&lt;br/&gt;println(&quot;你好，凹语言！&quot;, runtime.WAOS)&lt;br/&gt;println(add(40, 2))&lt;br/&gt;&lt;br/&gt;fmt.Println(1+1)&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;func add(a: i32, b: i32) =&amp;gt; i32 {&lt;br/&gt;return a+b&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-line=&quot;40&quot; dir=&quot;auto&quot;&gt;&lt;span&gt;然后在命令行运行程序：&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;&lt;code data-line=&quot;42&quot; dir=&quot;auto&quot;&gt;&lt;code&gt;$ wa run hello.wa&lt;br/&gt;你好，凹语言！wasi&lt;br/&gt;42&lt;br/&gt;2&lt;br/&gt;&lt;/code&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-line=&quot;49&quot; dir=&quot;auto&quot;&gt;&lt;span&gt;一切正常！&lt;/span&gt;&lt;/p&gt;&lt;h2 data-line=&quot;51&quot; dir=&quot;auto&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;2. 构建 wasm 模块&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p data-line=&quot;53&quot; dir=&quot;auto&quot;&gt;&lt;span&gt;通过 &lt;/span&gt;&lt;code&gt;&lt;span&gt;wa build hello.wa&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 命令生成 a.out.wasm 模块，大小约 3.6KB。然后通过 wasmer 执行：&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;&lt;code data-line=&quot;55&quot; dir=&quot;auto&quot;&gt;&lt;code&gt;$ wa build hello.wa&lt;br/&gt;$ wasmer a.out.wasm&lt;br/&gt;你好，凹语言！wasi&lt;br/&gt;42&lt;br/&gt;2&lt;br/&gt;&lt;/code&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-line=&quot;63&quot; dir=&quot;auto&quot;&gt;&lt;span&gt;也可以通过 wabt 等辅助工具测试。输出结果说明一切正常。&lt;/span&gt;&lt;/p&gt;&lt;h2 data-line=&quot;65&quot; dir=&quot;auto&quot;&gt;&lt;strong&gt;&lt;span&gt;3. 配置 Docker wasm 环境&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;p data-line=&quot;67&quot; dir=&quot;auto&quot;&gt;&lt;span&gt;完整的 Docker wasm 官方文档可以看这里：&lt;/span&gt;&lt;em&gt;&lt;span&gt;https://docs.docker.com/desktop/wasm/&lt;/span&gt;&lt;/em&gt;&lt;span&gt; 。按照好最新的 Docker 之后，按照 &lt;/span&gt;&lt;em&gt;&lt;span&gt;https://docs.docker.com/desktop/containerd/#enabling-the-containerd-image-store-feature&lt;/span&gt;&lt;/em&gt;&lt;span&gt; 的提示（Settings页面的Experimental菜单），打开“Use containerd for pulling and storing images”特性。&lt;/span&gt;&lt;/p&gt;&lt;h2 data-line=&quot;69&quot; dir=&quot;auto&quot;&gt;&lt;strong&gt;&lt;span&gt;4. 构建 Docker wasm 镜像&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;p data-line=&quot;71&quot; dir=&quot;auto&quot;&gt;&lt;span&gt;在当前目录创建 Dockerfile，内容如下：&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;&lt;code data-line=&quot;73&quot; dir=&quot;auto&quot;&gt;&lt;span&gt;FROM&lt;/span&gt; scratch&lt;br/&gt;&lt;span&gt;ADD&lt;/span&gt; a.out.wasm /hello.wasm&lt;br/&gt;&lt;span&gt;ENTRYPOINT&lt;/span&gt; [&lt;span&gt;&quot;hello.wasm&quot;&lt;/span&gt;]&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-line=&quot;79&quot; dir=&quot;auto&quot;&gt;&lt;span&gt;执行以下命令创建 Docker wasm 镜像：&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;&lt;code data-line=&quot;81&quot; dir=&quot;auto&quot;&gt;&lt;code&gt;$ docker buildx build --platform wasi/wasm32 -t wa-lang/hello-world .&lt;br/&gt;[+] Building 5.2s (8/8) FINISHED&lt;br/&gt; =&amp;gt; [internal] load build definition from Dockerfile      0.1s&lt;br/&gt; =&amp;gt; =&amp;gt; transferring dockerfile: 191B                      0.0s&lt;br/&gt; =&amp;gt; [internal] load .dockerignore                         0.2s&lt;br/&gt; =&amp;gt; =&amp;gt; transferring context: 2B                           0.0s&lt;br/&gt; =&amp;gt; resolve image config for docker.io/docker/dockerfile:13.9s&lt;br/&gt; =&amp;gt; [auth] docker/dockerfile:pull token for registry-1.docker.io       0.0s&lt;br/&gt; =&amp;gt; CACHED docker-image://docker.io/docker/dockerfile:1@sha256:d2...   0.2s&lt;br/&gt; =&amp;gt; =&amp;gt; resolve docker.io/docker/dockerfile:1@sha256:d2d74ff22a0e4...   0.2s&lt;br/&gt; =&amp;gt; [internal] load build context                         0.1s&lt;br/&gt; =&amp;gt; =&amp;gt; transferring context: 3.71kB                       0.0s&lt;br/&gt; =&amp;gt; [1/1] ADD a.out.wasm /hello.wasm                      0.1s&lt;br/&gt; =&amp;gt; exporting to image                                    0.3s&lt;br/&gt; =&amp;gt; =&amp;gt; exporting layers                                   0.1s&lt;br/&gt; =&amp;gt; =&amp;gt; exporting manifest sha256:47686ab02b26ea0ed51...   0.0s&lt;br/&gt; =&amp;gt; =&amp;gt; exporting config sha256:95cf2c26b4bcf8ae39c99...   0.0s&lt;br/&gt; =&amp;gt; =&amp;gt; naming to docker.io/wa-lang/hello-world:latest     0.0s&lt;br/&gt; =&amp;gt; =&amp;gt; unpacking to docker.io/wa-lang/hello-world:latest  0.1s&lt;br/&gt;$&lt;br/&gt;&lt;/code&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-line=&quot;104&quot; dir=&quot;auto&quot;&gt;&lt;span&gt;需要注意的是这里使用的是 &lt;/span&gt;&lt;code&gt;&lt;span&gt;buildx&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 子命令，并且输出的是 &lt;/span&gt;&lt;code&gt;&lt;span&gt;wasi/wasm32&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 目标平台。完成后可以通过 &lt;/span&gt;&lt;code&gt;&lt;span&gt;docker image list&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 查看新生成的镜像。&lt;/span&gt;&lt;/p&gt;&lt;h2 data-line=&quot;106&quot; dir=&quot;auto&quot;&gt;&lt;strong&gt;&lt;span&gt;5. 执行 Docker wasm 镜像&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;p data-line=&quot;108&quot; dir=&quot;auto&quot;&gt;&lt;span&gt;通过以下命令执行 Docker wasm 镜像：&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;&lt;code data-line=&quot;110&quot; dir=&quot;auto&quot;&gt;&lt;code&gt;$ docker run --rm \&lt;br/&gt;--name=wasm-hello \&lt;br/&gt;--runtime=io.containerd.wasmedge.v1 \&lt;br/&gt;--platform=wasi/wasm32 \&lt;br/&gt;docker.io/wa-lang/hello-world:latest&lt;br/&gt;你好，凹语言！wasi&lt;br/&gt;42&lt;br/&gt;2&lt;br/&gt;&lt;/code&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-line=&quot;121&quot; dir=&quot;auto&quot;&gt;&lt;span&gt;首先要选择 &lt;/span&gt;&lt;code&gt;&lt;span&gt;io.containerd.wasmedge.v1&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 运行时，同时也u有指定 &lt;/span&gt;&lt;code&gt;&lt;span&gt;wasi/wasm32&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 平台类型。如果一切顺利就可以看到输出结果了。&lt;/span&gt;&lt;/p&gt;&lt;h2 data-line=&quot;123&quot; dir=&quot;auto&quot;&gt;&lt;strong&gt;&lt;span&gt;6. 总结展望&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;p data-line=&quot;125&quot; dir=&quot;auto&quot;&gt;&lt;span&gt;Docker 的创始人曾经说过，如果 Wasm 技术早点出现那么就不会有 Docker 这个技术。而目前 Docker 对 wasm 的支持也说明了其本身的应用场景。其实 Wasm 虽然诞生于 Web 领域，但是在 Web 之外也有相当广泛的应用场景。不过目前主流编程语言都不是原生为 Wasm 设计的，我们希望通过新的凹语言为 Wasm 提供更好的支持和体验。同时希望未来凹语言可以通过 Wasm 服务更多的场景。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.3649122807017544&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/QAncwTWS4GoROF9U9uuibsPByH1AYvk61pjsHNUNXdQdhpUupxiad7y0PXdibspZpCobBCkqtpHAzR4icFhwicWPajg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1710&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;mp-style-type data-value=&quot;3&quot;/&gt;&lt;/p&gt;&lt;/div&gt;

          
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>c3d46f170601fa99386d09e8833a3b54</guid>
<title>记录一次还算优雅代码设计</title>
<link>https://toutiao.io/k/m7hhqo9</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;preview&quot;&gt;&lt;p&gt;&lt;strong&gt;作者：京东零售 常文标&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;商卡聚合服务是一个小巧的rpc应用，功能是统一查询商品的促销、自营包邮、价格信息、区域库存、区域可配送等等利益点或其他信息。本文重点分享商卡聚合服务的代码设计，包括合理的Sirector线程调度（cpu使用率低），和可维护性的设计。 简版代码示例如下： &lt;a href=&quot;mailto:git@github.com&quot;&gt;git@github.com&lt;/a&gt;:changwenbiao/demosoa.git &lt;/p&gt;

&lt;p&gt;代码使用sirector-core组件并行调度（使用线程并行执行EventHandler的onEvent方法）请求上游rpc接口获取各利益点或其他商品信息。因为请求上游有些通用处理逻辑比如ump监控、调用开关等，所以抽象出一个通用的EventHandler名为AbstractBenefitHandler。具体调用利益点的实现类只需继承AbstractBenefitHandler并重写其抽象方法。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-01-17-10-14eC17nWgUtcWxzyA27.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;接下来重点讲代码如何节省cpu使用率和易于维护的设计。&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;1.如何节省cpu&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;AbstractBenefitHandler提供isSwitchOn方法，用于决定是否使用sirector组件分配线程执行调度EventHandler。相对于分配线程执行全部的EventHandler，判断是否需要调用才分配线程调用的方式可有效减少线程调度从而减少cpu使用率。isSwitchOn方法中可加入cms控制开关逻辑比如使用ducc开关，也可加入根据用户参数判断开关的逻辑，比如查询区域库存需要四级地址，若用户不传四级地址则关闭调用EventHandler（请求上游rpc）。代码实现如下：其中ducc开关在父类中的isSwitchOn中实现，sirector.begin方法接受可变参数列表参数，可将List&lt;abstractbenefithandler&gt;转化为AbstractBenefitHandler[]作为入参。&lt;/abstractbenefithandler&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@Override
public boolean isSwitchOn() {    
    boolean superSwitchOn = super.isSwitchOn();    
    if (!superSwitchOn) {        
        return false;    
    } else {        
        //正常为四级地址，如果少于四级则关闭调用        
        String area = seckillBenefitRequest.getSeckillParam().getArea();        
        return !StringUtils.isBlank(area) &amp;amp;&amp;amp; area.contains(&quot;_&quot;) &amp;amp;&amp;amp; area.split(&quot;_&quot;).length &amp;gt;= 4;   
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;List&amp;lt;String&amp;gt; handlerNames = Lists.newArrayList(&quot;areaStockHandler&quot;, &quot;partitionProductsHandler&quot;);
List&amp;lt;AbstractBenefitHandler&amp;gt; handlerList = handlerNames.stream()        
.map(handlerName -&amp;gt; applicationContext.getBean(handlerName, AbstractBenefitHandler.class).setBenefitRequestAndBizName(request, &quot;demoAppName&quot;))        
.filter(AbstractBenefitHandler::isSwitchOn).collect(Collectors.toList());
Sirector&amp;lt;MiaoShaEvent&amp;gt; sirector = new Sirector&amp;lt;MiaoShaEvent&amp;gt;(bigSeckillEventProcessThreadPool);
AbstractBenefitHandler[] eventHandlersArr = new AbstractBenefitHandler[handlerList.size()];
handlerList.toArray(eventHandlersArr);
sirector.begin(eventHandlersArr);
sirector.ready();
sirector.publish(new MiaoShaEvent(), 500); //这里开始使用线程并行执行EventHandler的onEvent方法
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;2. 如何容易维护&lt;/h3&gt;

&lt;p&gt;减少一些模版代码（如ump监控）：所有Handler的实现类的ump监控都写在父类中的onEvent中，父类的onEvent调用子类实现的onEvent0（处理具体利益点rpc请求处理）方法。&lt;/p&gt;

&lt;p&gt;短小代码的实现：AbstractBenefitHandler提供fillResponseInfo方法以向“ResponseVO”中填数据，具体填利益点数据的代码则由相应handler实现类处理。因此各个handler填充利益点“ResponseVO”的代码都是短小的，避免了代码写在一起的长代码。单个handler填充利益点数据和批量统一填充利益点数据代码分别如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@Override
public void fillResponseInfo(List&amp;lt;BftInfo&amp;gt; bftInfoList) {    
    if (MapUtils.isNotEmpty(areaStockMap)) {        
        for (BftInfo result : bftInfoList) {            
            String skuId = result.getBaseInfo().getSkuId();            
            if (areaStockMap.containsKey(skuId)) {                
                result.getCommonInfo().setAreaStock(areaStockMap.get(skuId));            
            }        
        }    
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;handlerList.forEach(h -&amp;gt; h.fillResponseInfo(bftInfoList));
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;减少一些硬编码：handler实现类配置为原型模式（scope=&quot;prototype&quot;）的spring bean，通过applicationContext.getBean方法统一获取，避免一些创建（new关键字）具体实现类的代码，若新增利益点调用只需编码AbstractBenefitHandler实现类并配置为spring bean即可。批量获取handler代码如下&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;List&amp;lt;String&amp;gt; handlerNames = Lists.newArrayList(&quot;areaStockHandler&quot;, &quot;partitionProductsHandler&quot;);
List&amp;lt;AbstractBenefitHandler&amp;gt; handlerList = handlerNames.stream()        
.map(handlerName -&amp;gt; applicationContext.getBean(handlerName, AbstractBenefitHandler.class).setBenefitRequestAndBizName(request, &quot;demoAppName&quot;))        
.filter(AbstractBenefitHandler::isSwitchOn).collect(Collectors.toList());
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
  &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>3f5a49c82365052dabf48934f21d9380</guid>
<title>畅销 10 年的数据库技术图书，当之无愧的霸主！还有谁？</title>
<link>https://toutiao.io/k/16ljlo2</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;article data-content=&quot;[{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;3060-1621846615933&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;paragraph&amp;quot;,&amp;quot;data&amp;quot;:{},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;p5PQ-1621846617594&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;说起数据库领域的技术图书，&amp;quot;,&amp;quot;marks&amp;quot;:[]}]}],&amp;quot;state&amp;quot;:{}},{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;HRQ4-1675826955641&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;paragraph&amp;quot;,&amp;quot;data&amp;quot;:{},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;7nnn-1675826955638&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;相信很多小伙伴都会想到《高性能MySQL》~~&amp;quot;,&amp;quot;marks&amp;quot;:[]}]}],&amp;quot;state&amp;quot;:{}},{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;QIBe-1675836062850&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;paragraph&amp;quot;,&amp;quot;data&amp;quot;:{},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;gIKE-1675836062848&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;marks&amp;quot;:[]}]}],&amp;quot;state&amp;quot;:{}},{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;Hiev-1675826985780&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;paragraph&amp;quot;,&amp;quot;data&amp;quot;:{},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;ocat-1675826985779&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;没错！&amp;quot;,&amp;quot;marks&amp;quot;:[]}]}],&amp;quot;state&amp;quot;:{}},{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;0N8S-1675826989838&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;paragraph&amp;quot;,&amp;quot;data&amp;quot;:{},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;4IH2-1675826989836&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;它绝对称得上这个领域当之无愧的霸主！&amp;quot;,&amp;quot;marks&amp;quot;:[]}]}],&amp;quot;state&amp;quot;:{}},{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;aFG1-1675835220747&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;paragraph&amp;quot;,&amp;quot;data&amp;quot;:{},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;SqOw-1675835220745&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;marks&amp;quot;:[]}]}],&amp;quot;state&amp;quot;:{}},{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;LkYz-1675827219677&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;paragraph&amp;quot;,&amp;quot;data&amp;quot;:{&amp;quot;style&amp;quot;:{}},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;Y3KO-1675827219670&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;这可不是博文菌瞎说的，&amp;quot;,&amp;quot;marks&amp;quot;:[]}]}],&amp;quot;state&amp;quot;:{}},{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;yP5n-1675839392109&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;paragraph&amp;quot;,&amp;quot;data&amp;quot;:{&amp;quot;style&amp;quot;:{}},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;pNSH-1675839392108&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;我们今天就来看看，它为什么值得！&amp;quot;,&amp;quot;marks&amp;quot;:[]}]}],&amp;quot;state&amp;quot;:{}},{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;DbAw-1675839434112&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;paragraph&amp;quot;,&amp;quot;data&amp;quot;:{&amp;quot;style&amp;quot;:{}},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;IYvK-1675839434110&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;marks&amp;quot;:[]}]}],&amp;quot;state&amp;quot;:{}},{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;YdnH-1675836562987&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;paragraph&amp;quot;,&amp;quot;data&amp;quot;:{},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;sbzU-1675836562985&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;《高性能MySQL（第3版）》中文版自从2013年出版至今，&amp;quot;,&amp;quot;marks&amp;quot;:[]}]}],&amp;quot;state&amp;quot;:{}},{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;riGj-1675839284780&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;paragraph&amp;quot;,&amp;quot;data&amp;quot;:{},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;FmQ6-1675839284778&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;已畅销10年，销量近20W册，&amp;quot;,&amp;quot;marks&amp;quot;:[]}]}],&amp;quot;state&amp;quot;:{}},{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;IXGj-1675835491828&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;paragraph&amp;quot;,&amp;quot;data&amp;quot;:{},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;ZeFO-1675835491826&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;豆瓣评分9.3，看看这评价人数，也绝不是刷出来的分！&amp;quot;,&amp;quot;marks&amp;quot;:[]}]}],&amp;quot;state&amp;quot;:{}},{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;JZT9-1675836722242&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;paragraph&amp;quot;,&amp;quot;data&amp;quot;:{},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;qseX-1675836722241&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;marks&amp;quot;:[]}]}],&amp;quot;state&amp;quot;:{}},{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;WaaC-1675836722443&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;paragraph&amp;quot;,&amp;quot;data&amp;quot;:{},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;SOfM-1675836722442&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;读者们都给出了最真实的评价！&amp;quot;,&amp;quot;marks&amp;quot;:[]}]}],&amp;quot;state&amp;quot;:{}},{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;OwIR-1675836824453&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;paragraph&amp;quot;,&amp;quot;data&amp;quot;:{},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;iCvH-1675836824452&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;有人说它是“&amp;quot;,&amp;quot;marks&amp;quot;:[]}]},{&amp;quot;type&amp;quot;:&amp;quot;inline&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;IoTy-1675836863677&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;link&amp;quot;,&amp;quot;data&amp;quot;:{&amp;quot;href&amp;quot;:&amp;quot;https://book.douban.com/review/9245789/&amp;quot;},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;5lM9-1675836863678&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;非常全面的一本有关MySQL应用的书籍&amp;quot;,&amp;quot;marks&amp;quot;:[]}]}]},{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;crYx-1675836863687&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;”！&amp;quot;,&amp;quot;marks&amp;quot;:[]}]}],&amp;quot;state&amp;quot;:{}},{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;zvYs-1675836892607&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;paragraph&amp;quot;,&amp;quot;data&amp;quot;:{},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;XGTU-1675836892605&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;marks&amp;quot;:[]}]}],&amp;quot;state&amp;quot;:{}},{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;AY7p-1675836892768&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;paragraph&amp;quot;,&amp;quot;data&amp;quot;:{},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;b7Ox-1675836892767&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;也有人说它是“&amp;quot;,&amp;quot;marks&amp;quot;:[]}]},{&amp;quot;type&amp;quot;:&amp;quot;inline&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;upkL-1675836914164&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;link&amp;quot;,&amp;quot;data&amp;quot;:{&amp;quot;href&amp;quot;:&amp;quot;https://book.douban.com/review/14967676/&amp;quot;},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;DTAL-1675836914166&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;在“如何更好使用 MySQL”方面无出其右的书&amp;quot;,&amp;quot;marks&amp;quot;:[]}]}]},{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;435U-1675836914175&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;”！&amp;quot;,&amp;quot;marks&amp;quot;:[]}]}],&amp;quot;state&amp;quot;:{}},{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;6M02-1675837008016&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;paragraph&amp;quot;,&amp;quot;data&amp;quot;:{},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;sX61-1675837008014&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;marks&amp;quot;:[]}]}],&amp;quot;state&amp;quot;:{}},{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;KNPL-1675837008497&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;paragraph&amp;quot;,&amp;quot;data&amp;quot;:{},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;Pu2g-1675837008496&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;京东的购书读者说它是“&amp;quot;,&amp;quot;marks&amp;quot;:[]},{&amp;quot;text&amp;quot;:&amp;quot;是菜鸟和大神之间必经的一段路程”，&amp;quot;,&amp;quot;marks&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;color&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;#333333&amp;quot;},{&amp;quot;type&amp;quot;:&amp;quot;backgroundColor&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;rgb(255, 255, 255)&amp;quot;}]}]}],&amp;quot;state&amp;quot;:{}},{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;RcH0-1675837065408&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;paragraph&amp;quot;,&amp;quot;data&amp;quot;:{},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;F9jD-1675837065407&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;marks&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;color&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;#333333&amp;quot;},{&amp;quot;type&amp;quot;:&amp;quot;backgroundColor&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;rgb(255, 255, 255)&amp;quot;}]}]}],&amp;quot;state&amp;quot;:{}},{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;fdon-1675837065618&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;paragraph&amp;quot;,&amp;quot;data&amp;quot;:{},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;co7v-1675837065617&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;“MySQL学习的经典书籍，内容很详实，对MySQL应用问题的解决很有帮助，结合应用中遇到的问题来读，帮助更大！”&amp;quot;,&amp;quot;marks&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;color&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;#333333&amp;quot;},{&amp;quot;type&amp;quot;:&amp;quot;backgroundColor&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;rgb(255, 255, 255)&amp;quot;},{&amp;quot;type&amp;quot;:&amp;quot;fontSize&amp;quot;,&amp;quot;value&amp;quot;:14}]}]}],&amp;quot;state&amp;quot;:{}},{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;UtM6-1675835678107&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;paragraph&amp;quot;,&amp;quot;data&amp;quot;:{},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;KML5-1675835678100&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;marks&amp;quot;:[]}]}],&amp;quot;state&amp;quot;:{}},{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;miBx-1675837628191&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;paragraph&amp;quot;,&amp;quot;data&amp;quot;:{},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;dwcK-1675837628190&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;这本书虽然：&amp;quot;,&amp;quot;marks&amp;quot;:[]}]}],&amp;quot;state&amp;quot;:{}},{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;mIe6-1675837628410&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;paragraph&amp;quot;,&amp;quot;data&amp;quot;:{&amp;quot;style&amp;quot;:{}},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;zoDe-1675837628409&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;覆盖了MySOL所有功能特性；&amp;quot;,&amp;quot;marks&amp;quot;:[]}]}],&amp;quot;state&amp;quot;:{}},{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;bAxd-1675837690298&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;paragraph&amp;quot;,&amp;quot;data&amp;quot;:{&amp;quot;style&amp;quot;:{},&amp;quot;version&amp;quot;:1},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;t0oF-1675837690297&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;操作细节详尽完整；&amp;quot;,&amp;quot;marks&amp;quot;:[]}]}],&amp;quot;state&amp;quot;:{}},{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;hjwt-1675837690302&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;paragraph&amp;quot;,&amp;quot;data&amp;quot;:{&amp;quot;style&amp;quot;:{},&amp;quot;version&amp;quot;:1},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;1tIH-1675837690301&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;可用作stepbystep的上手操作指导；&amp;quot;,&amp;quot;marks&amp;quot;:[]}]}],&amp;quot;state&amp;quot;:{}},{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;IPzn-1675837690304&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;paragraph&amp;quot;,&amp;quot;data&amp;quot;:{&amp;quot;style&amp;quot;:{},&amp;quot;version&amp;quot;:1},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;QUBI-1675837690303&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;是集MySOL各版设计之大成；&amp;quot;,&amp;quot;marks&amp;quot;:[]}]}],&amp;quot;state&amp;quot;:{}},{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;ZGpd-1675837690306&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;paragraph&amp;quot;,&amp;quot;data&amp;quot;:{&amp;quot;style&amp;quot;:{},&amp;quot;version&amp;quot;:1},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;mv3s-1675837690305&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;适合首度拥抱这一技术的人群潜心研读、案头备查。&amp;quot;,&amp;quot;marks&amp;quot;:[]}]}],&amp;quot;state&amp;quot;:{}},{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;dHhj-1675837762604&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;paragraph&amp;quot;,&amp;quot;data&amp;quot;:{&amp;quot;style&amp;quot;:{},&amp;quot;version&amp;quot;:1},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;lmDQ-1675837762602&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;marks&amp;quot;:[]}]}],&amp;quot;state&amp;quot;:{}},{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;7yM0-1675837795054&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;paragraph&amp;quot;,&amp;quot;data&amp;quot;:{&amp;quot;style&amp;quot;:{},&amp;quot;version&amp;quot;:1},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;KZCC-1675837795053&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;但是，像前面京东购买评论中小伙伴所期待的，&amp;quot;,&amp;quot;marks&amp;quot;:[]}]}],&amp;quot;state&amp;quot;:{}},{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;M4QN-1675839264677&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;paragraph&amp;quot;,&amp;quot;data&amp;quot;:{&amp;quot;style&amp;quot;:{},&amp;quot;version&amp;quot;:1},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;5wda-1675839264675&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;MySOL毕竟经历了十年的版本变迁、技术更迭，&amp;quot;,&amp;quot;marks&amp;quot;:[]}]}],&amp;quot;state&amp;quot;:{}},{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;GvKV-1675838278855&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;paragraph&amp;quot;,&amp;quot;data&amp;quot;:{&amp;quot;style&amp;quot;:{},&amp;quot;version&amp;quot;:1},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;a7Tp-1675838278854&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;《高性能MySQL》也需要进行内容上的更新和补充，&amp;quot;,&amp;quot;marks&amp;quot;:[]}]}],&amp;quot;state&amp;quot;:{}},{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;QAu6-1675838094196&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;paragraph&amp;quot;,&amp;quot;data&amp;quot;:{&amp;quot;style&amp;quot;:{},&amp;quot;version&amp;quot;:1},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;77lO-1675838094195&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;因此，&amp;quot;,&amp;quot;marks&amp;quot;:[]},{&amp;quot;text&amp;quot;:&amp;quot;《高性能 MySQL（第4版）》&amp;quot;,&amp;quot;marks&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;color&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;#e36c09&amp;quot;},{&amp;quot;type&amp;quot;:&amp;quot;backgroundColor&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;rgb(255, 255, 255)&amp;quot;},{&amp;quot;type&amp;quot;:&amp;quot;fontFamily&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;Arial&amp;quot;},{&amp;quot;type&amp;quot;:&amp;quot;bold&amp;quot;}]},{&amp;quot;text&amp;quot;:&amp;quot;全新打磨知识库，雷霆来袭！&amp;quot;,&amp;quot;marks&amp;quot;:[]}]}],&amp;quot;state&amp;quot;:{}},{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;ThTK-1675838406110&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;paragraph&amp;quot;,&amp;quot;data&amp;quot;:{&amp;quot;style&amp;quot;:{},&amp;quot;version&amp;quot;:1},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;laql-1675838406109&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;marks&amp;quot;:[]}]}],&amp;quot;state&amp;quot;:{}},{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;jyCg-1675838406281&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;paragraph&amp;quot;,&amp;quot;data&amp;quot;:{&amp;quot;style&amp;quot;:{},&amp;quot;version&amp;quot;:1},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;VLaG-1675838406279&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;经过更新后的第4版：&amp;quot;,&amp;quot;marks&amp;quot;:[]}]}],&amp;quot;state&amp;quot;:{}},{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;29eI-1675838519649&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;paragraph&amp;quot;,&amp;quot;data&amp;quot;:{&amp;quot;style&amp;quot;:{},&amp;quot;version&amp;quot;:1},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;CJIY-1675838519648&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;彻底告别5.5全面拥抱8.0&amp;quot;,&amp;quot;marks&amp;quot;:[]}]}],&amp;quot;state&amp;quot;:{}},{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;QQQ9-1675838519922&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;paragraph&amp;quot;,&amp;quot;data&amp;quot;:{&amp;quot;style&amp;quot;:{},&amp;quot;version&amp;quot;:1},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;9ROr-1675838519921&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;重磅剖析现代云数据库与大规模运维实践&amp;quot;,&amp;quot;marks&amp;quot;:[]}]}],&amp;quot;state&amp;quot;:{}},{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;xMTb-1675838532987&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;paragraph&amp;quot;,&amp;quot;data&amp;quot;:{&amp;quot;style&amp;quot;:{},&amp;quot;version&amp;quot;:1},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;xsA3-1675838532985&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;是利于深入理解原理和趋势的权威手册&amp;quot;,&amp;quot;marks&amp;quot;:[]}]}],&amp;quot;state&amp;quot;:{}},{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;gZ7T-1675838471174&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;paragraph&amp;quot;,&amp;quot;data&amp;quot;:{&amp;quot;style&amp;quot;:{},&amp;quot;version&amp;quot;:1},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;LMsA-1675838471173&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;适合对版本敏感或从低版跨越至高版的人群快速入门或精度提升境界&amp;quot;,&amp;quot;marks&amp;quot;:[]}]}],&amp;quot;state&amp;quot;:{}},{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;kDSu-1675838119685&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;paragraph&amp;quot;,&amp;quot;data&amp;quot;:{&amp;quot;style&amp;quot;:{},&amp;quot;version&amp;quot;:1},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;Qoy8-1675838119683&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;marks&amp;quot;:[]}]}],&amp;quot;state&amp;quot;:{}},{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;wzP9-1675838712276&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;paragraph&amp;quot;,&amp;quot;data&amp;quot;:{&amp;quot;style&amp;quot;:{},&amp;quot;version&amp;quot;:1},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;34Ev-1675838712275&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;《高性能 MySQL（第4版）》出版后同样不负所望，&amp;quot;,&amp;quot;marks&amp;quot;:[]}]}],&amp;quot;state&amp;quot;:{}},{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;R6yL-1675838858300&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;paragraph&amp;quot;,&amp;quot;data&amp;quot;:{&amp;quot;style&amp;quot;:{},&amp;quot;version&amp;quot;:1},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;mYcE-1675838858298&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;如今，豆瓣评分9.2，被豆友呼吁“各位技术人员绝对不能错过”！&amp;quot;,&amp;quot;marks&amp;quot;:[]}]}],&amp;quot;state&amp;quot;:{}},{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;d94K-1675839069881&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;paragraph&amp;quot;,&amp;quot;data&amp;quot;:{&amp;quot;style&amp;quot;:{},&amp;quot;version&amp;quot;:1},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;XgZ9-1675839069879&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;marks&amp;quot;:[]}]}],&amp;quot;state&amp;quot;:{}},{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;K2pR-1675839070055&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;paragraph&amp;quot;,&amp;quot;data&amp;quot;:{&amp;quot;style&amp;quot;:{},&amp;quot;version&amp;quot;:1},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;Pojp-1675839070054&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;同样，京东的购书读者也表示新版的内容很不错！&amp;quot;,&amp;quot;marks&amp;quot;:[]}]}],&amp;quot;state&amp;quot;:{}},{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;JHiB-1675839583171&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;paragraph&amp;quot;,&amp;quot;data&amp;quot;:{&amp;quot;style&amp;quot;:{},&amp;quot;version&amp;quot;:1},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;BoZG-1675839583169&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;marks&amp;quot;:[]}]}],&amp;quot;state&amp;quot;:{}},{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;15Fn-1675839583389&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;paragraph&amp;quot;,&amp;quot;data&amp;quot;:{&amp;quot;style&amp;quot;:{},&amp;quot;version&amp;quot;:1},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;Itqp-1675839583388&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;不过，&amp;quot;,&amp;quot;marks&amp;quot;:[]}]}],&amp;quot;state&amp;quot;:{}},{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;6U2L-1675840092087&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;paragraph&amp;quot;,&amp;quot;data&amp;quot;:{&amp;quot;style&amp;quot;:{},&amp;quot;version&amp;quot;:1},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;lmfj-1675840092085&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;就像上面这位读者所发现的，《高性能 MySQL（第4版）》不像第3版那么大部头，&amp;quot;,&amp;quot;marks&amp;quot;:[]}]}],&amp;quot;state&amp;quot;:{}},{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;tJR5-1675840309997&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;paragraph&amp;quot;,&amp;quot;data&amp;quot;:{&amp;quot;style&amp;quot;:{},&amp;quot;version&amp;quot;:1},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;rQEE-1675840309995&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;第3版有764页，而第4版，只有344页！&amp;quot;,&amp;quot;marks&amp;quot;:[]}]}],&amp;quot;state&amp;quot;:{}},{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;pdjT-1675840223045&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;paragraph&amp;quot;,&amp;quot;data&amp;quot;:{&amp;quot;style&amp;quot;:{},&amp;quot;version&amp;quot;:1},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;cY1e-1675840223043&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;第 4 版在上一版内容的基础上延续了之前的经典内容，包括架构设计、优化、高可用等内容，同时新增了云数据库、扩展性等过去十年发展的相关内容，另外还增加了 MySQL 过去十年里的新版本（包括 57、80 版本）的新特性，是第3版的补充更新，无法替代第3版！&amp;quot;,&amp;quot;marks&amp;quot;:[]}]}],&amp;quot;state&amp;quot;:{}},{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;Dhx6-1675840442783&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;paragraph&amp;quot;,&amp;quot;data&amp;quot;:{&amp;quot;style&amp;quot;:{},&amp;quot;version&amp;quot;:1},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;37oE-1675840442782&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;两版合璧，各尽所能&amp;quot;,&amp;quot;marks&amp;quot;:[]}]}],&amp;quot;state&amp;quot;:{}},{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;DshT-1675840483316&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;paragraph&amp;quot;,&amp;quot;data&amp;quot;:{&amp;quot;style&amp;quot;:{},&amp;quot;version&amp;quot;:1},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;x8tT-1675840483314&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;360度鹰眼扫尽MySQL知识盲区&amp;quot;,&amp;quot;marks&amp;quot;:[]}]}],&amp;quot;state&amp;quot;:{}},{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;pMzk-1675839018647&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;paragraph&amp;quot;,&amp;quot;data&amp;quot;:{&amp;quot;style&amp;quot;:{},&amp;quot;version&amp;quot;:1},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;VSCK-1675839018645&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;marks&amp;quot;:[]}]}],&amp;quot;state&amp;quot;:{}},{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;QX4v-1675839018812&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;paragraph&amp;quot;,&amp;quot;data&amp;quot;:{&amp;quot;style&amp;quot;:{},&amp;quot;version&amp;quot;:1},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;UcpP-1675839018810&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;marks&amp;quot;:[]}]}],&amp;quot;state&amp;quot;:{}},{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;nZdM-1675839018940&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;paragraph&amp;quot;,&amp;quot;data&amp;quot;:{&amp;quot;style&amp;quot;:{},&amp;quot;version&amp;quot;:1},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;Hdx0-1675839018938&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;marks&amp;quot;:[]}]}],&amp;quot;state&amp;quot;:{}},{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;xpO8-1675836522634&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;paragraph&amp;quot;,&amp;quot;data&amp;quot;:{&amp;quot;style&amp;quot;:{}},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;Fq9j-1675836522632&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;有人说，《高性能MySQL》的每一章均别具匠心，力求理论与实践的精确平衡，且布满无价之宝，有时甚至越过MySQL舞台，完全适用于任一数据库。&amp;quot;,&amp;quot;marks&amp;quot;:[]}]}],&amp;quot;state&amp;quot;:{}},{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;wjWJ-1675837616169&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;paragraph&amp;quot;,&amp;quot;data&amp;quot;:{&amp;quot;style&amp;quot;:{}},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;MauX-1675837616167&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;这样被读者如此推崇的技术书，不读一下着实可惜~~&amp;quot;,&amp;quot;marks&amp;quot;:[]}]}],&amp;quot;state&amp;quot;:{}},{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;EvUs-1675840606254&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;paragraph&amp;quot;,&amp;quot;data&amp;quot;:{&amp;quot;style&amp;quot;:{}},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;1EXQ-1675840606253&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;正好最近开学季，第4版有五折优惠，第3版也有不错的折扣，&amp;quot;,&amp;quot;marks&amp;quot;:[]}]}],&amp;quot;state&amp;quot;:{}},{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;BPJV-1675840680859&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;paragraph&amp;quot;,&amp;quot;data&amp;quot;:{&amp;quot;style&amp;quot;:{}},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;jeW9-1675840680858&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;需要的小伙伴赶紧入手吧！&amp;quot;,&amp;quot;marks&amp;quot;:[]}]}],&amp;quot;state&amp;quot;:{}},{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;fVTA-1675840606516&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;paragraph&amp;quot;,&amp;quot;data&amp;quot;:{&amp;quot;style&amp;quot;:{}},&amp;quot;nodes&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;text&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;hEqO-1675840606514&amp;quot;,&amp;quot;leaves&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;marks&amp;quot;:[]}]}],&amp;quot;state&amp;quot;:{}}]&quot;&gt;&lt;p&gt;&lt;span&gt;👆&lt;/span&gt;&lt;span&gt;点击“&lt;/span&gt;&lt;span&gt;博文视点Broadview&lt;/span&gt;&lt;span&gt;”，获取更多书讯&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.05669291338582677&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PW0wIHxgg3nr1VNxfeqxVOw2nPJHVH4xeZibzPY5F4ibOuOZLMsUMrzIibGB6KMw7EurSKv6DkrtLzuhYdBa30A9Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;635&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;说起数据库领域的技术图书，&lt;/span&gt;&lt;span&gt;相信很多小伙伴都会想到&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;《高性能MySQL》&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;~~&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4936014625228519&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PW0wIHxgg3ljJXT3RzFFiaOckCKa1dDIjPtJmUew7sHsEfGt6w8tkp571lxICF8ODbTkoQ7sWsS9Ylb3chw37BA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;547&quot; data-width=&quot;306px&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;没错！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;它绝对称得上这个领域当之无愧的霸主！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8321428571428572&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/PW0wIHxgg3ljJXT3RzFFiaOckCKa1dDIje3PuPUdEMCBjPoU5tjxdjSn3IOIJKzibLAtJmsjy13diaW6C1mQTiaF7Q/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;280&quot; data-width=&quot;156px&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这可不是博文菌瞎说的，&lt;/span&gt;&lt;span&gt;我们今天就来看看，它为什么值得！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-src=&quot;https://res.wx.qq.com/t/wx_fed/we-emoji/res/v1.3.10/assets/newemoji/LetMeSee.png&quot; data-w=&quot;20&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;《高性能MySQL（第3版）》&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;中文版自从2013年出版至今，&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;已畅销&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;10年&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;，销量近&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;20W册&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;，&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;豆瓣评分&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;9.3&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;，看看这评价人数，这评分也绝不是刷出来的！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.46476761619190404&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PW0wIHxgg3ljJXT3RzFFiaOckCKa1dDIj1xHO7Wfr3o8d62lTxvhzRKGGWSZiaURcZkAZTFvIu7u5QI863ABxt1w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;667&quot; data-width=&quot;356px&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;读者们都给出了最真实的评价！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;有人说它是“&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;非常全面的一本有关MySQL应用的书籍&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;”！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5130813953488372&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PW0wIHxgg3ljJXT3RzFFiaOckCKa1dDIjydYKLo4Ue7QqjLjEoyGahQjZwS7qfckAQwwtsk3bvaSyQIoxzdjfMA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;688&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;也有人说它是“&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;在‘如何更好使用 MySQL&lt;span&gt;’&lt;/span&gt;方面无出其右的书&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;”！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5655270655270656&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PW0wIHxgg3ljJXT3RzFFiaOckCKa1dDIjROLeJDHbgU1Hrwj1nnWZxByUjeHDU3UUjMBibv7E5qk35WMxicjGnVjQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;702&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;京东的购书读者说它是“&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;是菜鸟和大神之间必经的一段路程&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;”，&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.08884297520661157&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PW0wIHxgg3ljJXT3RzFFiaOckCKa1dDIjJhO8rticPNicdhmpUic7ecf3MuwrNYxE3pSPRHbxt5j02TIY4qxIicwOOA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;968&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;“MySQL学习的经典书籍，内容很详实，对MySQL应用问题的解决很有帮助，&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;结合应用中遇到的问题来读，帮助更大&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;！”&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.13394683026584867&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PW0wIHxgg3ljJXT3RzFFiaOckCKa1dDIjHasCDrJENmHZQJqDEUWr5Svn0C8DqNic2m3kkEib10ILr9lFlIPicsWrA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;978&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;这本书虽然：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-role=&quot;list&quot;&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;覆盖了MySOL所有功能特性；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;操作细节详尽完整；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;可用作stepbystep的上手操作指导；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;是集MySOL各版设计之大成；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;适合首度拥抱这一技术的人群潜心研读、案头备查。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.8906666666666667&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/PW0wIHxgg3ljJXT3RzFFiaOckCKa1dDIj4klR63Wsxo5ZP6nYbzoE4wN0jicBticl0GzGkpz1o7JlCctz4ydEGxeg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;750&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;但是，像&lt;/span&gt;&lt;span&gt;前面京东购买评论中小伙伴所期待的，&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;MySQL毕竟经历了十年的版本变迁、技术更迭，&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;《高性能MySQL》也需要进行内容上的更新和补充，&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;因此，&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;《高性能 MySQL（第4版）》&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;全新打磨知识库，雷霆来袭！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8313609467455622&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PW0wIHxgg3ljJXT3RzFFiaOckCKa1dDIjssic51yBybS0kCS2r66y08lLTCZLHic2C6ibeAJDvITwkZQmEGuec9qXA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;676&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;经过更新后的第4版：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-role=&quot;list&quot;/&gt;&lt;p&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;4.236686390532545&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PW0wIHxgg3ljJXT3RzFFiaOckCKa1dDIjEvbRvTbTxZz7OtW8iadjGMAQRWXkaOoM4ZYzBpJRkyVSTJRiccwS6Fzg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;676&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;《高性能 MySQL（第4版）》出版后也不负所望，&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如今，豆瓣评分&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;9.2&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;，被豆友呼吁“各位技术人员绝对不能错过”！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.39880952380952384&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PW0wIHxgg3ljJXT3RzFFiaOckCKa1dDIjKZDJ9Q1hX1eE1g5a9GVyRJSTPfdmPFdECx7icqG6EJWG2C0bSbibxXCQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;672&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.1855072463768116&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PW0wIHxgg3ljJXT3RzFFiaOckCKa1dDIjCEiaHgaP9iaKobhMSdm2lh4z0sNKzmu5hKRqyKSg6dyrqdkicq3Texic5w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;690&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;同样，京东的购书读者也表示新版的内容很不错！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.09513960703205791&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PW0wIHxgg3ljJXT3RzFFiaOckCKa1dDIj1dLOEY2gK5aCSCzFd1icX14OaeItibgZfUia8cfdXicC2nfrgpzGU9rPBg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;967&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.20296296296296296&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PW0wIHxgg3ljJXT3RzFFiaOckCKa1dDIjv1eAYD4VZ9lwmG79Otd0uPSVd8JGEXXRUPxiatPHicbbrZf77JShjgZw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;675&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.12538860103626942&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PW0wIHxgg3ljJXT3RzFFiaOckCKa1dDIjnuKC1e6ShVFBib0B7EpoRicEmcU7TkZZ745j7unGXVGCComK90JV30WQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;965&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.15832482124616956&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PW0wIHxgg3ljJXT3RzFFiaOckCKa1dDIjB8RIStfP5CZaO7gLJqFXdA6f5UIwFzwYGxqb1XoQotZniaSSr1110vg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;979&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;不过，&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p draggable=&quot;true&quot;&gt;&lt;span&gt;就像上面这位读者所发现的，《高性能 MySQL（第4版）》不像第3版那么大部头，&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;第3版&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;有&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;764页&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;，而&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;第4版&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;，只有&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;344页&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;第4版&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;在上一版内容的基础上延续了之前的经典内容，包括架构设计、优化、高可用等内容，同时新增了云数据库、扩展性等过去十年发展的相关内容，另外还增加了 MySQL 过去十年里的新版本（包括 57、80 版本）的新特性，&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;是第3版的补充更新，两者&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;无法互相替代&lt;/span&gt;！&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;两版合璧，各尽所能&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;360度鹰眼扫尽MySQL知识盲区&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.2662721893491125&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PW0wIHxgg3ljJXT3RzFFiaOckCKa1dDIjlLwwrly1yibcVXykXibE9e911TBKQvxYiagSApV46P7JYicWMIp5iaz2c9w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;676&quot;/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;有人说，《高性能MySQL》的每一章均别具匠心，力求理论与实践的精确平衡，且布满无价之宝，有时甚至越过MySQL舞台，完全适用于任一数据库。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这样被读者如此推崇的技术书，不读一下着实可惜&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-src=&quot;https://res.wx.qq.com/t/wx_fed/we-emoji/res/v1.3.10/assets/newemoji/2_06.png&quot; data-w=&quot;20&quot;/&gt;~~&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;正好最近开学季，第4版有&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;五折优惠&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;，第3版也有不错的折扣，&lt;/span&gt;&lt;span&gt;需要的小伙伴赶紧入手吧！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;mpcps class=&quot;js_editor_new_cps&quot; data-templateid=&quot;list&quot; data-traceid=&quot;e4ac7097-b3d0-4c0d-9a9c-80552fedbd1e&quot; data-goodssouce=&quot;1&quot; data-pid=&quot;101_11220393&quot; data-appuin=&quot;2395946309&quot; data-buffer=&quot;{&amp;quot;category_id&amp;quot;:106,&amp;quot;pid&amp;quot;:&amp;quot;101_11220393&amp;quot;,&amp;quot;biz_uin&amp;quot;:&amp;quot;2395946309&amp;quot;,&amp;quot;trace_id&amp;quot;:&amp;quot;e4ac7097-b3d0-4c0d-9a9c-80552fedbd1e&amp;quot;,&amp;quot;sku_id&amp;quot;:&amp;quot;101_11220393&amp;quot;,&amp;quot;source_id&amp;quot;:2,&amp;quot;source_name&amp;quot;:&amp;quot;京东&amp;quot;,&amp;quot;audit_state&amp;quot;:1,&amp;quot;main_img&amp;quot;:&amp;quot;https://pcm-img.zhls.qq.com/productcenter-a4e444e4--1018824-1859178068214577786/86556301329072022/af73c97925cd2c095315fbac9a21a52a.jpg&amp;quot;,&amp;quot;product_name&amp;quot;:&amp;quot;高性能MySQL（第3版）(博文视点出品)&amp;quot;,&amp;quot;current_price&amp;quot;:9920,&amp;quot;first_category_id&amp;quot;:&amp;quot;106&amp;quot;,&amp;quot;product_label_name_list&amp;quot;:[&amp;quot;京东配送&amp;quot;],&amp;quot;select_tag_name_list&amp;quot;:[],&amp;quot;templateId&amp;quot;:&amp;quot;list&amp;quot;,&amp;quot;appuin&amp;quot;:&amp;quot;2395946309&amp;quot;,&amp;quot;isNewCpsKOL&amp;quot;:1}&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;mpcps class=&quot;js_editor_new_cps&quot; data-templateid=&quot;list&quot; data-traceid=&quot;f864d387-58b4-4c95-b870-85409cea416a&quot; data-goodssouce=&quot;1&quot; data-pid=&quot;101_13430143&quot; data-appuin=&quot;2395946309&quot; data-buffer=&quot;{&amp;quot;category_id&amp;quot;:106,&amp;quot;pid&amp;quot;:&amp;quot;101_13430143&amp;quot;,&amp;quot;biz_uin&amp;quot;:&amp;quot;2395946309&amp;quot;,&amp;quot;trace_id&amp;quot;:&amp;quot;f864d387-58b4-4c95-b870-85409cea416a&amp;quot;,&amp;quot;sku_id&amp;quot;:&amp;quot;101_13430143&amp;quot;,&amp;quot;source_id&amp;quot;:2,&amp;quot;source_name&amp;quot;:&amp;quot;京东&amp;quot;,&amp;quot;audit_state&amp;quot;:1,&amp;quot;main_img&amp;quot;:&amp;quot;https://pcm-img.zhls.qq.com/productcenter-de2d7376--1018824-5504516255325544661/00745101509102022/ed0be87ba7dd42a82261567840eedd2f.jpg&amp;quot;,&amp;quot;product_name&amp;quot;:&amp;quot;高性能MySQL（第4版）&amp;quot;,&amp;quot;current_price&amp;quot;:5000,&amp;quot;first_category_id&amp;quot;:&amp;quot;106&amp;quot;,&amp;quot;product_label_name_list&amp;quot;:[&amp;quot;京东配送&amp;quot;],&amp;quot;select_tag_name_list&amp;quot;:[],&amp;quot;templateId&amp;quot;:&amp;quot;list&amp;quot;,&amp;quot;appuin&amp;quot;:&amp;quot;2395946309&amp;quot;,&amp;quot;isNewCpsKOL&amp;quot;:1}&quot;/&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;2280&quot;&gt;&lt;section&gt;&lt;section data-width=&quot;50%&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PW0wIHxgg3ljJXT3RzFFiaOckCKa1dDIj9s3WZicEma1ld0XBkHbElqMibv8UbZedsJXY2Yvu7lmejSzlRTOA4xRw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;300&quot;/&gt;&lt;section&gt;&lt;p&gt;第3版&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-width=&quot;50%&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PW0wIHxgg3ljJXT3RzFFiaOckCKa1dDIjLGrbko727DKxMiaf4OXCfCzBHaItRVcY6zMBOHKjuxvwAiawBUOic8ic9w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;300&quot;/&gt;&lt;section&gt;&lt;p&gt;第4版&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/article&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>7d5b8c1b024e1f3e0700148753644ef9</guid>
<title>基于 ShardingSphere 的分布式数据库负载均衡架构搭建实战</title>
<link>https://toutiao.io/k/xz2cm9p</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content js_underline_content             autoTypeSetting24psection&amp;#10;            &quot; id=&quot;js_content&quot;&gt;&lt;section data-style-id=&quot;39250&quot; data-type=&quot;undefined&quot; data-id=&quot;39250&quot; data-vip=&quot;1&quot; data-free=&quot;0&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;本文主要分为 3 部分，将依次介绍：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt; 基于 ShardingSphere 的分布式数据库「负载均衡架构搭建」要点&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;结合实际的「用户问题案例」，介绍引入「负载均衡」的影响&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;介绍并展示 ShardingSphere 分布式数据库在云上的「一站式解决方案」&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-style-id=&quot;34416&quot; data-type=&quot;undefined&quot; data-id=&quot;34416&quot; data-vip=&quot;1&quot; data-free=&quot;0&quot;&gt;&lt;section data-align=&quot;title&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;要点介绍&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-width=&quot;95%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;em&gt;&lt;strong&gt;ShardingSphere 负载均衡架构搭建要点&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;Apache ShardingSphere 是一款分布式的数据库生态系统，可以将任意数据库转换为分布式数据库，并通过数据分片、弹性伸缩、加密等能力对原有数据库进行增强。它由 ShardingSphere-JDBC 和 ShardingSphere-Proxy 这 2 款既能够独立部署，又支持混合部署配合使用的产品组成。混合部署架构如下：&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-height=&quot;300&quot; data-ratio=&quot;0.7074422583404619&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/0UoCt9tgpnmDDCwwZaCYyBriaQMa3UxuoockwRGATJe8ia0fmIwm9D10VicaUoIbe5nhD3VCfQXibvR4ewS7n6c7nw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1169&quot; data-width=&quot;425&quot;/&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;负载均衡方案：&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;ShardingSphere-JDBC&lt;/span&gt;&lt;/strong&gt;&lt;strong/&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;其中，ShardingSphere-JDBC 定位为轻量级 Java 框架，在 Java 的 JDBC 层提供的额外服务。ShardingSphere-JDBC 只是在应用进行数据库操作前增加了计算操作，应用进程仍然是通过数据库驱动直接连接数据库。&lt;/span&gt;&lt;span&gt;因此，&lt;/span&gt;&lt;span&gt;&lt;strong&gt;用户无须单独考虑 ShardingSphere-JDBC 的&lt;/strong&gt;&lt;strong&gt;负载均衡&lt;/strong&gt;&lt;strong&gt;，只需关注其应用程序本身如何进行负载均衡即可&lt;/strong&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;负载均衡方案：&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;ShardingSphere-&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;Proxy &lt;/strong&gt;&lt;strong/&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;h4&gt;&lt;span&gt;&lt;strong&gt;部署架构&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;&lt;section&gt;&lt;span&gt;ShardingSphere-Proxy 定位为透明化的数据库代理端，通过数据库协议，向数据库客户端提供服务。ShardingSphere-Proxy 作为一个独立部署的进程，在其上层进行负载均衡的参考架构如下：&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-height=&quot;384&quot; data-ratio=&quot;1.02676399026764&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/0UoCt9tgpnmDDCwwZaCYyBriaQMa3UxuoGmDfxJQS3jibbLRWMMNAmHl4fqOmouSVgNnPDBeVXEgOQl2iaEHnyprg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1233&quot; data-width=&quot;373&quot;/&gt;&lt;/p&gt;&lt;h4&gt;&lt;span&gt;&lt;strong&gt;负载均衡&lt;/strong&gt;&lt;strong&gt;方案要点&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;&lt;section&gt;&lt;span&gt;社区有同学详细讨论过如何搭建 ShardingSphere-Proxy 集群，也有同学咨询过 ShardingSphere-Proxy 负载均衡后的行为和想象中不一致的问题：&lt;/span&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;如何来搭建 &lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;ShardingSphere-Proxy 集群？&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;🔗参考：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;em&gt;&lt;span&gt;https://github.com/apache/shardingsphere/discussions/12593&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;客户端发送的请求通过 HAProxy 后&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;未轮询多个 ShardingSphere-Proxy 实例：&lt;/strong&gt;&lt;/span&gt;&lt;strong/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;🔗&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;参考&lt;/span&gt;&lt;strong&gt;&lt;span&gt;：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;&lt;span&gt;https://github.com/apache/shardingsphere/issues/20016&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;ShardingSphere-Proxy 集群负载均衡的要点：&lt;strong&gt;数据库协议本身设计是有状态的&lt;/strong&gt;。例如连接认证状态、事务状态、预编译语句（Prepared Statement）等。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如果 ShardingSphere-Proxy 上层的负载均衡无法理解数据库协议，则只能选择四层负载均衡代理 ShardingSphere-Proxy 集群，客户端与 ShardingSphere-Proxy 的数据库连接状态由具体的 Proxy 实例维护。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;由于连接本身状态维护在一个具体的 Proxy 实例中，四层负载均衡只能做到连接级别的负载均衡。对于同一个数据库连接的多个请求，无法轮询到多个 Proxy 实例执行，即无法做到请求级别的负载均衡。&lt;/span&gt;&lt;span&gt;关于四层负载均衡与七层负载均衡的详细信息，本文不再赘述。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;对应用层的建议&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;客户端直接连接单个 ShardingSphere-Proxy 与通过负载均衡入口连接 ShardingSphere-Proxy 集群相比，从理论上来说，在功能上没有区别。但不同负载均衡的技术实现与配置存在一些差异。&lt;/span&gt;例如，在直接连接 ShardingSphere-Proxy 且没有限制数据库连接会话保持最长时间的情况下，某些 ELB 产品的四层会话保持最长时间为 60 分钟，如果空闲的数据库连接被负载均衡超时关闭，但客户端又对被动的 TCP 连接关闭没有感知，可能会导致应用程序报错。&lt;/span&gt;&lt;span&gt;因此，除了在负载均衡层面进行考虑，客户端本身也可以考虑采取一些措施来避免引入负载均衡带来的影响。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;执行间隔较长的场景&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;考虑「按需创建连接」&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;例如在执行间隔 1 小时且执行时间较短的定时作业，如果创建连接单例并持续使用，数据库连接在大部分时间都处于空闲状态。如果客户端本身无法感知连接状态的变化，长时间空闲会增加连接状态的不确定性。&lt;/span&gt;&lt;span&gt;对于执行间隔较长的场景，可以考虑按需创建连接，使用完毕后释放。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;一般的数据库连接池都具备维护有效连接、剔除失效连接等能力，通过连接池管理数据库连接，可以减少自行维护连接的成本。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;一般客户端都支持配置 TCP KeepAlive，例如：&lt;/span&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;💡 &lt;/span&gt;&lt;span&gt;MySQL Connector/J&lt;/span&gt;&lt;span&gt; 支持配置 &lt;/span&gt;&lt;span&gt;autoReconnect&lt;/span&gt;&lt;span&gt; 或 &lt;/span&gt;&lt;span&gt;tcpKeepAlive&lt;/span&gt;&lt;span&gt;，默认不开启；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;💡 &lt;/span&gt;PostgreSQL JDBC Driver&lt;/span&gt;&lt;span&gt; 支持配置 &lt;/span&gt;&lt;span&gt;tcpKeepAlive&lt;/span&gt;&lt;span&gt;，默认不开启；&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;不过，启用 TCP KeepAlive 的方式存在限制：&lt;/span&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;💡 &lt;/span&gt;客户端不一定支持配置 &lt;/span&gt;&lt;span&gt;TCP KeepAlive&lt;/span&gt;&lt;span&gt; 或自动重连；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;💡 &lt;/span&gt;客户端不打算做任何代码或配置调整；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;💡 &lt;/span&gt;TCP KeepAlive&lt;/span&gt;&lt;span&gt; 依赖操作系统实现与配置；&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-style-id=&quot;34416&quot; data-type=&quot;undefined&quot; data-id=&quot;34416&quot; data-vip=&quot;1&quot; data-free=&quot;0&quot;&gt;&lt;section data-align=&quot;title&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;用户案例&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-width=&quot;95%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;&lt;span&gt;负载均衡配置不合理造成连接中断的问题&lt;/span&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;前段时间有用户反馈，其部署的 ShardingSphere-Proxy 集群通过上层负载均衡对外提供服务，使用过程中，发现应用与 ShardingSphere-Proxy 之间的连接稳定性存在问题。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;h3&gt;&lt;span&gt;&lt;strong&gt;问题描述&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;section&gt;&lt;span&gt;某用户生产环境使用 3 节点 ShardingSphere-Proxy 集群，集群通过某云厂商的 ELB 对应用提供服务。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-height=&quot;385&quot; data-ratio=&quot;1.02676399026764&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/0UoCt9tgpnl80GJ6F4ibgB1arVrWibZNnOKEVRm223PSGV9m9wA5PTju9icVTYcGAEKZz7BXDx1VdUZYINpjmgGmw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1233&quot; data-width=&quot;375&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;其中一个应用是执行定时作业的常驻进程，定时作业执行频率为每小时执行一次，作业逻辑中存在数据库操作。用户反馈，每次定时作业触发时，应用日志中都会出现报错：&lt;/span&gt;&lt;/section&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;send of 115 bytes failed with errno=104 Connection reset by peer&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;检查 ShardingSphere-Proxy 日志，没有任何异常信息。&lt;/span&gt;&lt;span&gt;该问题仅在执行频率为一小时的定时作业中出现，其他应用访问 ShardingSphere-Proxy 均正常。&lt;/span&gt;&lt;span&gt;由于作业逻辑具备重试机制，每次重试后作业执行都能成功，对原本的业务没有造成影响。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;h3&gt;&lt;span&gt;&lt;strong&gt;问题分析&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;应用显示报错的原因非常明确：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;em&gt;&lt;span&gt;客户端向一个已经关闭的 TCP 连接发送数据。&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;因此，问题排查的目标是：明确该 TCP 连接关闭的具体原因。&lt;/span&gt;&lt;span&gt;出于以下考虑，我们建议用户在问题复现时间点的前后几分钟内，对应用与 ShardingSphere-Proxy 两侧同时进行网络抓包：&lt;/span&gt;&lt;/section&gt;&lt;ul start=&quot;1&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;该问题会每小时准时复现；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;该问题与网络相关；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;该问题不影响用户实时业务。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4&gt;&lt;span&gt;&lt;strong&gt;抓包现象一&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;&lt;section&gt;&lt;span&gt;ShardingSphere-Proxy 每 15 秒都会受到客户端发起的 TCP 连接建立请求，在完成三次握手建立连接后，客户端却立即向 Proxy 发送了 RST。MySQL 协议的连接建立是由服务端先主动发送 Greeting 给客户端，从抓包结果中看，客户端在接收到 Server Greeting 后没有任何回应就向 Proxy 发送了 RST，甚至在 Proxy 还没有发送 Server Greeting 时就发送了 RST。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-height=&quot;219&quot; data-ratio=&quot;0.5157407407407407&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/0UoCt9tgpnl80GJ6F4ibgB1arVrWibZNnOU8V6t9ib88dcCfjSvHNBlicpibtLYPvTwDzI1K0ycPFvazmUdgQ9ichfYA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot; data-width=&quot;425&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;但是，在应用侧抓包结果中，却没有找到符合以上行为的流量。&lt;/span&gt;&lt;span&gt;在阅读用户所使用的 ELB 的文档发现，以上网络交互是该 ELB 的四层健康检查机制的实现方式。因此，该现象与本案例的问题无关。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-height=&quot;94&quot; data-ratio=&quot;0.22314814814814815&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/0UoCt9tgpnl80GJ6F4ibgB1arVrWibZNnOqxA0tD4geWT2W3UnYn28Wib0aWm7P7YdXvs0l37pBwmTjuGAolUaN9Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; data-width=&quot;425&quot;/&gt;&lt;/section&gt;&lt;h4&gt;&lt;br/&gt;&lt;/h4&gt;&lt;h4&gt;&lt;span&gt;&lt;strong&gt;抓包现象二&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;&lt;section&gt;&lt;span&gt;客户端与 ShardingSphere-Proxy 所建立的 MySQL 连接，在 TCP 连接断开阶段，客户端向 Proxy 发送了 RST。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-height=&quot;108&quot; data-ratio=&quot;0.2564814814814815&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/0UoCt9tgpnl80GJ6F4ibgB1arVrWibZNnOfRfMjKMtOiatKa4D9ACoCRyltN0KayuiatOicjSlv82yEJELgGF7f3Y1g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; data-width=&quot;425&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;以上抓包结果显示，客户端先主动向 ShardingSphere-Proxy 发送了 COM_QUIT 命令，即该 MySQL 连接是由客户端主动断开，包括但不限于以下可能的情况：&lt;/span&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;💡 &lt;/span&gt;应用程序对 MySQL 连接的使用已完毕，正常关闭数据库连接；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;span&gt;💡 &lt;/span&gt;应用程序与 ShardingSphere-Proxy 的数据库连接受到连接池管理，连接池对空闲超时、或超出最长生命周期的空闲连接进行释放操作。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;由于连接是应用侧主动关闭，如非应用本身逻辑存在问题，理论上不影响其他业务操作。经过多轮抓包分析，在问题复现前后的几分钟内，都没有发现 ShardingSphere-Proxy 向客户端发送 RST 的情况。根据现有信息推测，客户端与 ShardingSphere-Proxy 的连接有可能在更早的时候就断开了，只是抓包时长有限，没有采集到断开的那一刻。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;由于 ShardingSphere-Proxy 本身没有主动断开客户端连接的逻辑，因此考虑从客户端与 ELB 这两层去排查问题。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;h4&gt;&lt;span&gt;&lt;strong&gt;客户端应用与 ELB 配置检查&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;&lt;section&gt;&lt;span&gt;根据用户反馈：&lt;/span&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;💡 &lt;/span&gt;应用的定时作业为每小时执行一次，应用没有使用数据库连接池，手动维护了一个数据库连接，提供给定时作业持续使用；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;span&gt;💡 &lt;/span&gt;ELB 配置了四层会话保持，会话空闲超时时间为 40 分钟。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;考虑定时作业执行的频率，我们建议用户修改 ELB 会话空闲超时大于定时作业的执行间隔时间。用户修改 ELB 超时时间为 66 分钟后，Connection reset 问题不再出现。&lt;/span&gt;&lt;span&gt;如果问题排查过程中持续抓包，极有可能在每小时的第 40 分钟捕获到 ELB 断开 TCP 连接的流量。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;h4&gt;&lt;span&gt;&lt;strong&gt;问题结论&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;&lt;section&gt;&lt;span&gt;客户端报错 Connection reset by peer 根本原因：&lt;/span&gt;&lt;span&gt;ELB 空闲超时时间小于定时任务执行间隔，客户端空闲的时间超过了 ELB 的会话保持超时时间，导致客户端与 ShardingSphere-Proxy 之间的连接被 ELB 超时断开。&lt;/span&gt;&lt;span&gt;客户端向已经被 ELB 关闭的 TCP 连接发送数据，导致报错 Connection reset by peer。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;h4&gt;&lt;span&gt;&lt;strong&gt;超时模拟实验&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;&lt;section&gt;&lt;span&gt;本文进行一个简单的实验，验证客户端在负载均衡会话超时后的表现，并在实验过程中进行抓包，分析网络流量观察负载均衡的行为。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;h5&gt;&lt;span&gt;&lt;strong&gt;搭建&lt;/strong&gt;&lt;strong&gt;负载均衡&lt;/strong&gt;&lt;strong&gt;的 ShardingSphere-Proxy 集群环境&lt;/strong&gt;&lt;/span&gt;&lt;/h5&gt;&lt;section&gt;&lt;span&gt;理论上任何四层负载均衡实现都能作为本文探讨的对象，因此本文使用 nginx 作为四层负载均衡技术实现。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;h5&gt;&lt;span&gt;&lt;strong&gt;配置 nginx stream&lt;/strong&gt;&lt;/span&gt;&lt;/h5&gt;&lt;p&gt;&lt;span&gt;空闲超时设置 1 分钟，即 TCP 会话保持最多 1 分钟。&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;user  nginx;&lt;br/&gt;worker_processes  auto;&lt;br/&gt;&lt;br/&gt;error_log  /var/&lt;span&gt;log&lt;/span&gt;/nginx/error.log notice;&lt;br/&gt;pid        /var/run/nginx.pid;&lt;br/&gt;&lt;br/&gt;events {&lt;br/&gt;    worker_connections  1024;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;stream {&lt;br/&gt;    upstream shardingsphere {&lt;br/&gt;        &lt;span&gt;hash&lt;/span&gt; &lt;span&gt;$remote_addr&lt;/span&gt; consistent;&lt;br/&gt;&lt;br/&gt;        server proxy0:3307;&lt;br/&gt;        server proxy1:3307;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    server {&lt;br/&gt;        listen 3306;&lt;br/&gt;        proxy_timeout 1m;&lt;br/&gt;        proxy_pass shardingsphere;&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h5&gt;&lt;br/&gt;&lt;/h5&gt;&lt;h5&gt;&lt;strong&gt;&lt;span&gt;构造 Docker compose&lt;/span&gt;&lt;/strong&gt;&lt;/h5&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;version:&lt;/span&gt; &lt;span&gt;&quot;3.9&quot;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;services:&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;nginx:&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;image:&lt;/span&gt; &lt;span&gt;nginx:1.22.0&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;ports:&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;-&lt;/span&gt; &lt;span&gt;3306&lt;/span&gt;&lt;span&gt;:3306&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;volumes:&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;-&lt;/span&gt; &lt;span&gt;/path/to/nginx.conf:/etc/nginx/nginx.conf&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;proxy0:&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;image:&lt;/span&gt; &lt;span&gt;apache/shardingsphere-proxy:5.3.0&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;hostname:&lt;/span&gt; &lt;span&gt;proxy0&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;ports:&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;-&lt;/span&gt; &lt;span&gt;3307&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;proxy1:&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;image:&lt;/span&gt; &lt;span&gt;apache/shardingsphere-proxy:5.3.0&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;hostname:&lt;/span&gt; &lt;span&gt;proxy1&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;ports:&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;-&lt;/span&gt; &lt;span&gt;3307&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h5&gt;&lt;br/&gt;&lt;/h5&gt;&lt;h5&gt;&lt;strong&gt;&lt;span&gt;启动环境&lt;/span&gt;&lt;/strong&gt;&lt;/h5&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt; $ docker compose up -d &lt;br/&gt;[+] Running 4/4&lt;br/&gt; ⠿ Network lb_default     Created                                                                                                      0.0s&lt;br/&gt; ⠿ Container lb-proxy1-1  Started                                                                                                      0.5s&lt;br/&gt; ⠿ Container lb-proxy0-1  Started                                                                                                      0.6s&lt;br/&gt; ⠿ Container lb-nginx-1   Started                                                                                                      0.6s&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h5&gt;&lt;br/&gt;&lt;/h5&gt;&lt;h5&gt;&lt;span&gt;&lt;strong&gt;模拟客户端基于同连接定时任务&lt;/strong&gt;&lt;/span&gt;&lt;/h5&gt;&lt;h6&gt;&lt;strong&gt;&lt;span&gt;构造客户端延迟执行 SQL&lt;/span&gt;&lt;/strong&gt;&lt;/h6&gt;&lt;p&gt;&lt;span&gt;此处通过 Java 和 MySQL Connector/J 访问 ShardingSphere-Proxy。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;逻辑大致如下：&lt;/span&gt;&lt;/p&gt;&lt;ol start=&quot;1&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;与 ShardingSphere-Proxy 建立连接，并向 Proxy 执行一次查询；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;等待 55 秒后，再向 Proxy 执行一次查询；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;等待 65 秒后，再向 Proxy 执行一次查询。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;main&lt;/span&gt;&lt;span&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;try&lt;/span&gt; (Connection connection = DriverManager.getConnection(&lt;span&gt;&quot;jdbc:mysql://127.0.0.1:3306?useSSL=false&quot;&lt;/span&gt;, &lt;span&gt;&quot;root&quot;&lt;/span&gt;, &lt;span&gt;&quot;root&quot;&lt;/span&gt;); Statement statement = connection.createStatement()) {&lt;br/&gt;        log.info(getProxyVersion(statement));&lt;br/&gt;        TimeUnit.SECONDS.sleep(&lt;span&gt;55&lt;/span&gt;);&lt;br/&gt;        log.info(getProxyVersion(statement));&lt;br/&gt;        TimeUnit.SECONDS.sleep(&lt;span&gt;65&lt;/span&gt;);&lt;br/&gt;        log.info(getProxyVersion(statement));&lt;br/&gt;    } &lt;span&gt;catch&lt;/span&gt; (Exception e) {&lt;br/&gt;        log.error(e.getMessage(), e);&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; String &lt;span&gt;getProxyVersion&lt;/span&gt;&lt;span&gt;(Statement statement)&lt;/span&gt; &lt;span&gt;throws&lt;/span&gt; SQLException &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;try&lt;/span&gt; (ResultSet resultSet = statement.executeQuery(&lt;span&gt;&quot;select version()&quot;&lt;/span&gt;)) {&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (resultSet.next()) {&lt;br/&gt;            &lt;span&gt;return&lt;/span&gt; resultSet.getString(&lt;span&gt;1&lt;/span&gt;);&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt;    &lt;span&gt;throw&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; UnsupportedOperationException();&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h6&gt;&lt;br/&gt;&lt;/h6&gt;&lt;h6&gt;&lt;strong&gt;&lt;span&gt;预期结果与客户端运行结果&lt;/span&gt;&lt;/strong&gt;&lt;/h6&gt;&lt;p&gt;&lt;span&gt;预期结果：&lt;/span&gt;&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;客户端与 ShardingSphere-Proxy 连接建立且第一次查询成功；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;客户端第二次查询成功；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;由于 nginx 空闲超时设置为 1 分钟，客户端第三次查询因 TCP 连接断开报错。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;执行结果与预期符合。由于编程语言与数据库驱动的差异，报错信息表现不一致，但根本原因相同：&lt;/span&gt;&lt;span&gt;都是 TCP 连接已断开&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;span&gt;日志如下所示：&lt;/span&gt;&lt;/section&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;15:29:12.734 [main] INFO icu.wwj.hello.jdbc.ConnectToLBProxy - 5.7.22-ShardingSphere-Proxy 5.1.1&lt;br/&gt;15:30:07.745 [main] INFO icu.wwj.hello.jdbc.ConnectToLBProxy - 5.7.22-ShardingSphere-Proxy 5.1.1&lt;br/&gt;15:31:12.764 [main] ERROR icu.wwj.hello.jdbc.ConnectToLBProxy - Communications link failure&lt;br/&gt;The last packet successfully received from the server was 65,016 milliseconds ago. The last packet sent successfully to the server was 65,024 milliseconds ago.&lt;br/&gt;        at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174)&lt;br/&gt;        at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64)&lt;br/&gt;        at com.mysql.cj.jdbc.StatementImpl.executeQuery(StatementImpl.java:1201)&lt;br/&gt;        at icu.wwj.hello.jdbc.ConnectToLBProxy.getProxyVersion(ConnectToLBProxy.java:28)&lt;br/&gt;        at icu.wwj.hello.jdbc.ConnectToLBProxy.main(ConnectToLBProxy.java:21)&lt;br/&gt;Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure&lt;br/&gt;&lt;br/&gt;The last packet successfully received from the server was 65,016 milliseconds ago. The last packet sent successfully to the server was 65,024 milliseconds ago.&lt;br/&gt;        at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)&lt;br/&gt;        at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)&lt;br/&gt;        at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)&lt;br/&gt;        at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)&lt;br/&gt;        at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)&lt;br/&gt;        at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)&lt;br/&gt;        at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)&lt;br/&gt;        at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)&lt;br/&gt;        at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)&lt;br/&gt;        at com.mysql.cj.protocol.a.NativeProtocol.readMessage(NativeProtocol.java:581)&lt;br/&gt;        at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:761)&lt;br/&gt;        at com.mysql.cj.protocol.a.NativeProtocol.sendCommand(NativeProtocol.java:700)&lt;br/&gt;        at com.mysql.cj.protocol.a.NativeProtocol.sendQueryPacket(NativeProtocol.java:1051)&lt;br/&gt;        at com.mysql.cj.protocol.a.NativeProtocol.sendQueryString(NativeProtocol.java:997)&lt;br/&gt;        at com.mysql.cj.NativeSession.execSQL(NativeSession.java:663)&lt;br/&gt;        at com.mysql.cj.jdbc.StatementImpl.executeQuery(StatementImpl.java:1169)&lt;br/&gt;        ... 2 common frames omitted&lt;br/&gt;Caused by: java.io.EOFException: Can not read response from server. Expected to read 4 bytes, read 0 bytes before connection was unexpectedly lost.&lt;br/&gt;        at com.mysql.cj.protocol.FullReadInputStream.readFully(FullReadInputStream.java:67)&lt;br/&gt;        at com.mysql.cj.protocol.a.SimplePacketReader.readHeaderLocal(SimplePacketReader.java:81)&lt;br/&gt;        at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:63)&lt;br/&gt;        at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:45)&lt;br/&gt;        at com.mysql.cj.protocol.a.TimeTrackingPacketReader.readHeader(TimeTrackingPacketReader.java:52)&lt;br/&gt;        at com.mysql.cj.protocol.a.TimeTrackingPacketReader.readHeader(TimeTrackingPacketReader.java:41)&lt;br/&gt;        at com.mysql.cj.protocol.a.MultiPacketReader.readHeader(MultiPacketReader.java:54)&lt;br/&gt;        at com.mysql.cj.protocol.a.MultiPacketReader.readHeader(MultiPacketReader.java:44)&lt;br/&gt;        at com.mysql.cj.protocol.a.NativeProtocol.readMessage(NativeProtocol.java:575)&lt;br/&gt;        ... 8 common frames omitted&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h6&gt;&lt;strong&gt;&lt;span/&gt;&lt;/strong&gt;&lt;/h6&gt;&lt;h6&gt;&lt;strong&gt;&lt;span/&gt;&lt;/strong&gt;&lt;/h6&gt;&lt;h6&gt;&lt;strong&gt;&lt;span/&gt;&lt;/strong&gt;&lt;/h6&gt;&lt;h6&gt;&lt;strong&gt;&lt;span/&gt;&lt;/strong&gt;&lt;/h6&gt;&lt;h6&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/h6&gt;&lt;h6&gt;&lt;strong&gt;&lt;span&gt;抓包结果分析&lt;/span&gt;&lt;/strong&gt;&lt;/h6&gt;&lt;section&gt;&lt;span&gt;抓包结果显示，在连接空闲超时后，nginx 同时断开了和客户端、Proxy 的 TCP 连接。但由于客户端没有任何感知，发送命令后，nginx 返回了 RST。&lt;/span&gt;&lt;span&gt;nginx 连接空闲超时后，与 Proxy 正常完成了 TCP 断开连接的流程，后续客户端使用已断开的连接发送请求时，Proxy 是完全没有感知的。分析以下抓包结果：&lt;/span&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;编号 1~44 是客户端与 ShardingSphere-Proxy 建立 MySQL 连接的交互过程；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;编号 45~50 是客户端执行第一次查询；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;编号 55~60 是客户端执行第一次查询的 55 秒后，执行第二次查询；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;编号 73～77 是在会话超时后，nginx 同时向客户端与 ShardingSphere-Proxy 发起 TCP 连接断开流程；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;编号 78～79 是客户端执行第二次查询的 65 秒后，执行第三次查询，发生 Connection Reset。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.69296875&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/0UoCt9tgpnl80GJ6F4ibgB1arVrWibZNnOpJOEZhibsVYykyj2YO5TdjfmttcJicvzGrqOcKbbRfITHgsicA6ksTCLQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/section&gt;&lt;section data-style-id=&quot;34416&quot; data-type=&quot;undefined&quot; data-id=&quot;34416&quot; data-vip=&quot;1&quot; data-free=&quot;0&quot;&gt;&lt;section data-align=&quot;title&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;解决方案&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-width=&quot;95%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;ShardingSphere on Cloud &lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;一站式解决方案&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;人工部署、运维 ShardingSphere-Proxy 集群及负载均衡，难免消耗一定的人力、时间成本。对此，&lt;strong&gt;Apache ShardingSphere 重磅推出云上解决方案集合——ShardingSphere on Cloud&lt;/strong&gt;。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;ShardingSphere on Cloud 包括在 AWS、GCP、阿里云等云环境下面向虚机的自动化部署脚本，如 CloudFormation Stack 模板、Terraform 一键部署脚本等，在 Kubernetes 云原生环境下的 Helm Charts、Operator、自动水平扩缩容等工具，以及高可用、可观测性、安全合规、等方面的各类实践内容。&lt;/span&gt;&lt;span&gt;ShardingSphere on Cloud 包括以下能力：&lt;/span&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section&gt;&lt;span&gt;基于 Helm Charts 的 ShardingSphere-Proxy 在 Kubernetes 环境下「一键部署」&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;基于 Operator 的 ShardingSphere-Proxy 在 Kubernetes 环境下「一键部署&amp;amp;自动运维」&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;基于 AWS CloudFormation 的 ShardingSphere-Proxy 「快速部署」&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;基于 Terraform 的 AWS 环境下 ShardingSphere-Proxy 「快速部署」&lt;/span&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;本文简要展示 ShardingSphere on Cloud 的基本能力之一：&lt;/span&gt;&lt;span&gt;使用 Helm Charts 在 Kubernetes 一键部署 ShardingSphere-Proxy 集群。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;使用以下 3 行命令，即可实现以默认配置在 Kubernetes 集群内创建一个 3 节点的 ShardingSphere-Proxy 集群，并通过 Service 提供服务。&lt;/span&gt;&lt;/section&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section&gt;helm repo add shardingsphere &lt;span&gt;https://apache.github.io/shardingsphere-on-cloud&lt;/span&gt;&lt;br/&gt;helm repo update&lt;br/&gt;helm install shardingsphere-proxy shardingsphere/apache-shardingsphere-proxy-charts -n shardingsphere&lt;br/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.178125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/0UoCt9tgpnl80GJ6F4ibgB1arVrWibZNnOz4KicPZalicn4QhjUNIoJMhcwibTNd62rBTibjYEA4NJQict7rPibHgpjSsw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;应用即可通过 svc 域名访问 ShardingSphere-Proxy 集群。&lt;/span&gt;&lt;/section&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;kubectl run mysql-client --image=mysql:5.7.36 --image-pull-policy=IfNotPresent -- sleep 300&lt;br/&gt;kubectl &lt;span&gt;exec&lt;/span&gt; -i -t mysql-client -- mysql -h shardingsphere-proxy-apache-shardingsphere-proxy.shardingsphere.svc.cluster.local -P3307 -uroot -proot&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.309375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/0UoCt9tgpnl80GJ6F4ibgB1arVrWibZNnO2xf1kzUiahKZTw0V8SJ5jFMWjyrkumhHIEzBiayWbQZ8GlCaP1ic4ia4VQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;以上仅仅是对 ShardingSphere on Cloud 基本能力之一的展示，对于更多生产可用的高级特性，欢迎点击探索 ShardingSphere on Cloud 官方文档。&lt;/span&gt;&lt;strong&gt;&lt;em&gt;&lt;span/&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;🔗 &lt;/span&gt;&lt;span&gt;https://shardingsphere.apache.org/oncloud/current/cn/overview/&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;p&gt;&lt;mp-style-type data-value=&quot;3&quot;/&gt;&lt;/p&gt;&lt;/div&gt;

          
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>