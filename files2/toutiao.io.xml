<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>d8c857be010c42c55c3a62efe5a251bf</guid>
<title>1.8w 字的 SQL 优化大全</title>
<link>https://toutiao.io/k/tz7p6nl</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;分享一篇关于SQL优化的硬核文章，全文有点长，建议收藏后慢慢看。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;很多朋友在做数据分析时，分析两分钟，跑数两小时？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在使用SQL过程中不仅要关注数据结果，同样要注意SQL语句的执行效率。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本文涉及三部分：&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;1、MySQL的基本架构&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;1）MySQL的基础架构图&lt;/strong&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5642076502732241&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/JNfe5NcuJicsZXiaj3mKR159vg5Ltw2UWRac0pq5WnQHMQRMNH2XERKichicl2f6Yibs4nhI2sRpicQia2eUERC47e9PA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;732&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;左边的client可以看成是客户端，客户端有很多，像我们经常你使用的CMD黑窗口，像我们经常用于学习的WorkBench，像企业经常使用的Navicat工具，它们都是一个客户端。右边的这一大堆都可以看成是Server(MySQL的服务端)，我们将Server在细分为sql层和存储引擎层。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当查询出数据以后，会返回给执行器。执行器一方面将结果写到查询缓存里面，当你下次再次查询的时候，就可以直接从查询缓存中获取到数据了。另一方面，直接将结果响应回客户端。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;2）查询数据库的引擎&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;① show engines;&lt;/strong&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4746317512274959&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JNfe5NcuJicsZXiaj3mKR159vg5Ltw2UWRNwA6UUa9QChSIB47Afkg0iaibgIZKo9iaP9GJVbEibC3U1pQXKcUVLRbUw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;611&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;② show variables like “%storage_engine%”;&lt;/strong&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4691689008042895&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JNfe5NcuJicsZXiaj3mKR159vg5Ltw2UWROyeX5x7ga6l8D2CbiaoE2X3h22BuSIgRDKicOhIIyzehQFSpliaLQvqZA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;373&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;3）指定数据库对象的存储引擎&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;create table tb(&lt;br/&gt;    id int(4) auto_increment,&lt;br/&gt;    name varchar(5),&lt;br/&gt;    dept varchar(5),&lt;br/&gt;    primary key(id)&lt;br/&gt;) engine=myISAM auto_increment=1 default charset=utf8;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;SQL优化&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;1）为什么需要进行SQL优化？&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在进行多表连接查询、子查询等操作的时候，由于你写出的SQL语句欠佳，导致的服务器执行时间太长，我们等待结果的时间太长。基于此，我们需要学习怎么优化SQL。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;2）mysql的编写过程和解析过程&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;① 编写过程&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;select dinstinct  ..from  ..join ..on ..&lt;span&gt;where&lt;/span&gt; ..group by ..having ..order by ..&lt;span&gt;limit&lt;/span&gt; ..&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;② 解析过程&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;from .. on.. join ..&lt;span&gt;where&lt;/span&gt; ..group by ..having ..select dinstinct ..order by ..&lt;span&gt;limit&lt;/span&gt; ..&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;提供一个网站，详细说明了mysql解析过程：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;https://www.cnblogs.com/annsshadow/p/5037667.html&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;3）SQL优化—主要就是优化索引&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;优化SQL，最重要的就是优化SQL索引。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;索引相当于字典的目录。利用字典目录查找汉字的过程，就相当于利用SQL索引查找某条记录的过程。有了索引，就可以很方便快捷的定位某条记录。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;① 什么是索引？&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;索引就是帮助MySQL高效获取数据的一种【数据结构】。索引是一种树结构，MySQL中一般用的是【B+树】。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;② 索引图示说明(这里用二叉树来帮助我们理解索引)&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;树形结构的特点是：子元素比父元素小的，放在左侧；子元素比父元素大的，放在右侧。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个图示只是为了帮我们简单理解索引的，真实的关于【B+树】的说明，我们会在下面进行说明。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.39814814814814814&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JNfe5NcuJicsZXiaj3mKR159vg5Ltw2UWRFTXXvJRNTUuf7ciblRxd6wpctkS8mcAd8ibaMd6ZvnprX3tP9rePfs1A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;索引是怎么查找数据的呢？两个字【指向】，上图中我们给age列指定了一个索引，即类似于右侧的这种树形结构。mysql表中的每一行记录都有一个硬件地址，例如索引中的age=50，指向的就是源表中该行的标识符(“硬件地址”)。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;也就是说，树形索引建立了与源表中每行记录硬件地址的映射关系，当你指定了某个索引，这种映射关系也就建成了，这就是为什么我们可以通过索引快速定位源表中记录的原因。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以【select * from student where age=33】查询语句为例。当我们不加索引的时候，会从上到下扫描源表，当扫描到第5行的时候，找到了我们想要找到了元素，一共是查询了5次。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当添加了索引以后，就直接在树形结构中进行查找，33比50小，就从左侧查询到了23，33大于23，就又查询到了右侧，这下找到了33，整个索引结束，一共进行了3次查找。是不是很方便，假如我们此时需要查找age=62，你再想想“添加索引”前后，查找次数的变化情况。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;4）索引的弊端&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1.当数据量很大的时候，索引也会很大(当然相比于源表来说，还是相当小的)，也需要存放在内存/硬盘中(通常存放在硬盘中)，占据一定的内存空间/物理空间。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2.索引并不适用于所有情况：a.少量数据；b.频繁进行改动的字段，不适合做索引；c.很少使用的字段，不需要加索引；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;3.索引会提高数据查询效率，但是会降低“增、删、改”的效率。当不使用索引的时候，我们进行数据的增删改，只需要操作源表即可，但是当我们添加索引后，不仅需要修改源表，也需要再次修改索引，很麻烦。尽管是这样，添加索引还是很划算的，因为我们大多数使用的就是查询，“查询”对于程序的性能影响是很大的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;5）索引的优势&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1.提高查询效率(降低了IO使用率)。当创建了索引后，查询次数减少了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2.降低CPU使用率。比如说【…order by age desc】这样一个操作，当不加索引，会把源表加载到内存中做一个排序操作，极大的消耗了资源。但是使用了索引以后，第一索引本身就小一些，第二索引本身就是排好序的，左边数据最小，右边数据最大。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;6）B+树图示说明&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;MySQL中索引使用的就是B+树结构。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5716535433070866&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/JNfe5NcuJicsZXiaj3mKR159vg5Ltw2UWRb3bItTolRVicv7CnuIHNXjmSasTcPuK8zNktWT0yweboXFRgm2Z6ZtA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;635&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;关于B+树的说明：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;首先，Btree一般指的都是【B+树】，数据全部存放在叶子节点中。对于上图来说，最下面的第3层，属于叶子节点，真实数据部份都是存放在叶子节点当中的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那么对于第1、2层中的数据又是干嘛的呢？答：用于分割指针块儿的，比如说小于26的找P1，介于26-30之间的找P2，大于30的找P3。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其次，三层【B+树】可以存放上百万条数据。这么多数据怎么放的呢？增加“节点数”。图中我们只有三个节点。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最后，【B+树】中查询任意数据的次数，都是n次，n表示的是【B+树】的高度。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;3、索引的分类与创建&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;1）索引分类&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;单值索引&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;唯一索引&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;复合索引&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;① 单值索引&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;利用表中的某一个字段创建单值索引。一张表中往往有多个字段，也就是说每一列其实都可以创建一个索引，这个根据我们实际需求来进行创建。还需要注意的一点就是，一张表可以创建多个“单值索引”。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;假如某一张表既有age字段，又有name字段，我们可以分别对age、name创建一个单值索引，这样一张表就有了两个单值索引。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;② 唯一索引&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;也是利用表中的某一个字段创建单值索引，与单值索引不同的是：创建唯一索引的字段中的数据，不能有重复值。像age肯定有很多人的年龄相同，像name肯定有些人是重名的，因此都不适合创建“唯一索引”。像编号id、学号sid，对于每个人都不一样，因此可以用于创建唯一索引。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;③ 复合索引&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;多个列共同构成的索引。比如说我们创建这样一个“复合索引”(name,age)，先利用name进行索引查询，当name相同的时候，我们利用age再进行一次筛选。注意：复合索引的字段并不是非要都用完，当我们利用name字段索引出我们想要的结果以后，就不需要再使用age进行再次筛选了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;2）创建索引&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;① 语法&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;语法：create 索引类型 索引名 on 表(字段);&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;建表语句如下：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;查询表结构如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3812785388127854&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JNfe5NcuJicsZXiaj3mKR159vg5Ltw2UWReAGFRqYCZArIQVVxtbWEbZgSJvdU1JjcucCnUc6OWrGswoou9KyXDw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;438&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;② 创建索引的第一种方式&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Ⅰ 创建单值索引&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;create index dept_index on tb(dept);&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Ⅱ 创建唯一索引：这里我们假定name字段中的值都是唯一的&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;create unique index name_index on tb(name);&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Ⅲ 创建复合索引&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;create index dept_name_index on tb(dept,name);&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;③ 创建索引的第二种方式&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;先删除之前创建的索引以后，再进行这种创建索引方式的测试；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;语法：alter table 表名 add 索引类型 索引名(字段)&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Ⅰ 创建单值索引&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;alter table tb add index dept_index(dept);&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Ⅱ 创建唯一索引：这里我们假定name字段中的值都是唯一的&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;alter table tb add unique index name_index(name);&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Ⅲ 创建复合索引&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;alter table tb add index dept_name_index(dept,name);&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;④ 补充说明&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果某个字段是primary key，那么该字段默认就是主键索引。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;主键索引和唯一索引非常相似。相同点：该列中的数据都不能有相同值；不同点：主键索引不能有null值，但是唯一索引可以有null值。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;3）索引删除和索引查询&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;① 索引删除&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;语法：drop index 索引名 on 表名;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;drop index name_index on tb;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;② 索引查询&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;语法：show index from 表名;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;show index from tb;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.22954303931987247&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JNfe5NcuJicsZXiaj3mKR159vg5Ltw2UWRNlkk8vdMVzibqFGUFUgQXWqA76hoyOPWyAAETqPKVQ4boFAR7dgWHyA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;941&quot;/&gt;&lt;/p&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;4、SQL性能问题的探索&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;人为优化：&lt;/strong&gt; 需要我们使用explain分析SQL的执行计划。该执行计划可以模拟SQL优化器执行SQL语句，可以帮助我们了解到自己编写SQL的好坏。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;SQL优化器自动优化：&lt;/strong&gt; 最开始讲述MySQL执行原理的时候，我们已经知道MySQL有一个优化器，当你写了一个SQL语句的时候，SQL优化器如果认为你写的SQL语句不够好，就会自动写一个好一些的等价SQL去执行。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;SQL优化器自动优化功能【会干扰】我们的人为优化功能。当我们查看了SQL执行计划以后，如果写的不好，我们会去优化自己的SQL。当我们以为自己优化的很好的时候，最终的执行计划，并不是按照我们优化好的SQL语句来执行的，而是有时候将我们优化好的SQL改变了，去执行。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;SQL优化是一种概率问题，有时候系统会按照我们优化好的SQL去执行结果(优化器觉得你写的差不多，就不会动你的SQL)。有时候优化器仍然会修改我们优化好的SQL，然后再去执行。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;1）查看执行计划&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;语法：explain + SQL语句&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;eg：explain select * from tb;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;2）“执行计划”中需要知道的几个“关键字”&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;id ：编号&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;select_type ：查询类型&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;table ：表&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;type ：类型&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;possible_keys ：预测用到的索引&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;key ：实际使用的索引&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;key_len ：实际使用索引的长度&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;ref ：表之间的引用&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;rows ：通过索引查询到的数据量&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Extra ：额外的信息&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;建表语句和插入数据：&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;# 建表语句&lt;/span&gt;&lt;br/&gt;create table course&lt;br/&gt;(    &lt;br/&gt;    cid int(3),   &lt;br/&gt;    cname varchar(20),   &lt;br/&gt;    tid int(3)&lt;br/&gt;);&lt;br/&gt;&lt;br/&gt;create table teacher&lt;br/&gt;(  &lt;br/&gt;    tid int(3),  &lt;br/&gt;    tname varchar(20),  &lt;br/&gt;    tcid int(3)&lt;br/&gt;);&lt;br/&gt;&lt;br/&gt;create table teacherCard&lt;br/&gt;(   &lt;br/&gt;    tcid int(3),  &lt;br/&gt;    tcdesc varchar(200)&lt;br/&gt;);&lt;br/&gt;&lt;br/&gt;&lt;span&gt;# 插入数据&lt;/span&gt;&lt;br/&gt;insert into course values(1,&lt;span&gt;&#x27;java&#x27;&lt;/span&gt;,1);&lt;br/&gt;insert into course values(2,&lt;span&gt;&#x27;html&#x27;&lt;/span&gt;,1);&lt;br/&gt;insert into course values(3,&lt;span&gt;&#x27;sql&#x27;&lt;/span&gt;,2);&lt;br/&gt;insert into course values(4,&lt;span&gt;&#x27;web&#x27;&lt;/span&gt;,3);&lt;br/&gt;&lt;br/&gt;insert into teacher values(1,&lt;span&gt;&#x27;tz&#x27;&lt;/span&gt;,1);&lt;br/&gt;insert into teacher values(2,&lt;span&gt;&#x27;tw&#x27;&lt;/span&gt;,2);&lt;br/&gt;insert into teacher values(3,&lt;span&gt;&#x27;tl&#x27;&lt;/span&gt;,3);&lt;br/&gt;&lt;br/&gt;insert into teacherCard values(1,&lt;span&gt;&#x27;tzdesc&#x27;&lt;/span&gt;) ;&lt;br/&gt;insert into teacherCard values(2,&lt;span&gt;&#x27;twdesc&#x27;&lt;/span&gt;) ;&lt;br/&gt;insert into teacherCard values(3,&lt;span&gt;&#x27;tldesc&#x27;&lt;/span&gt;) ;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;explain执行计划常用关键字详解&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;1）id关键字的使用说明&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;① 案例：查询课程编号为2 或 教师证编号为3 的老师信息：&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;# 查看执行计划&lt;/span&gt;&lt;br/&gt;explain select t.*&lt;br/&gt;from teacher t,course c,teacherCard tc&lt;br/&gt;&lt;span&gt;where&lt;/span&gt; t.tid = c.tid and t.tcid = tc.tcid&lt;br/&gt;and (c.cid = 2 or tc.tcid = 3);&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.1301518438177874&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JNfe5NcuJicsZXiaj3mKR159vg5Ltw2UWRYsVwEXRs6KRqd7KVgh7gDkQFSdbQOBLF9txhKhqpibwoJjYkpjIuakw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;922&quot;/&gt;&lt;/p&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;接着，在往teacher表中增加几条数据。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;insert into teacher values(4,&lt;span&gt;&#x27;ta&#x27;&lt;/span&gt;,4);&lt;br/&gt;insert into teacher values(5,&lt;span&gt;&#x27;tb&#x27;&lt;/span&gt;,5);&lt;br/&gt;insert into teacher values(6,&lt;span&gt;&#x27;tc&#x27;&lt;/span&gt;,6);&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;再次查看执行计划。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;# 查看执行计划&lt;/span&gt;&lt;br/&gt;explain select t.*&lt;br/&gt;from teacher t,course c,teacherCard tc&lt;br/&gt;&lt;span&gt;where&lt;/span&gt; t.tid = c.tid and t.tcid = tc.tcid&lt;br/&gt;and (c.cid = 2 or tc.tcid = 3);&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.16251638269986893&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JNfe5NcuJicsZXiaj3mKR159vg5Ltw2UWR5n6NNGBffx6P4nlMFDCu1PjGk1PZ2CuONmoTUJC0YoAY1Qialv8nfEQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;763&quot;/&gt;&lt;/p&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;表的执行顺序 ，因表数量改变而改变的原因：笛卡尔积。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;a   b   c&lt;br/&gt;2   3   4&lt;br/&gt;最终：2 * 3 * 4  = 6 * 4 = 24&lt;br/&gt;c   b   a&lt;br/&gt;4   3   2&lt;br/&gt;最终：4 * 3 * 2 = 12 * 2 = 24&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;分析：最终执行的条数，虽然是一致的。但是中间过程，有一张临时表是6，一张临时表是12，很明显6 &amp;lt; 12，对于内存来说，数据量越小越好，因此优化器肯定会选择第一种执行顺序。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结论：id值相同，从上往下顺序执行。表的执行顺序因表数量的改变而改变。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;② 案例：查询教授SQL课程的老师的描述(desc)&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;# 查看执行计划&lt;/span&gt;&lt;br/&gt;explain select tc.tcdesc from teacherCard tc &lt;br/&gt;&lt;span&gt;where&lt;/span&gt; tc.tcid = &lt;br/&gt;(    &lt;br/&gt;    select t.tcid from teacher t  &lt;br/&gt;    &lt;span&gt;where&lt;/span&gt;  t.tid =   &lt;br/&gt;    (select c.tid from course c &lt;span&gt;where&lt;/span&gt; c.cname = &lt;span&gt;&#x27;sql&#x27;&lt;/span&gt;)&lt;br/&gt;);&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.13631406761177753&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JNfe5NcuJicsZXiaj3mKR159vg5Ltw2UWRIcibpUXy3gKyB74ZicY5KL7bhiakGFc0OV3LaqwibInmo1orkwiaEXpfp9w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;917&quot;/&gt;&lt;/p&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结论：id值不同，id值越大越优先查询。这是由于在进行嵌套子查询时，先查内层，再查外层。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;③ 针对②做一个简单的修改&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;# 查看执行计划&lt;/span&gt;&lt;br/&gt;explain select t.tname ,tc.tcdesc from teacher t,teacherCard tc &lt;br/&gt;&lt;span&gt;where&lt;/span&gt; t.tcid= tc.tcid&lt;br/&gt;and t.tid = (select c.tid from course c &lt;span&gt;where&lt;/span&gt; cname = &lt;span&gt;&#x27;sql&#x27;&lt;/span&gt;) ;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.13034188034188035&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JNfe5NcuJicsZXiaj3mKR159vg5Ltw2UWR8AAzugKLb1ZrYIibbWS8X5bOTpGEQMaibYDT1Ibld20JCOTg47WRxtgg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;936&quot;/&gt;&lt;/p&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结论：id值有相同，又有不同。id值越大越优先；id值相同，从上往下顺序执行。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;2）select_type关键字的使用说明：查询类型&lt;/strong&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.8908045977011494&quot; data-type=&quot;png&quot; data-w=&quot;174&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JNfe5NcuJicsZXiaj3mKR159vg5Ltw2UWR7ucQLQmpicib17zTNlIYAAzVoYXicewzVB9jw8zibD9vl8wKe65dwanttg/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;① simple：简单查询&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不包含子查询，不包含union查询。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;explain select * from teacher;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.14097968936678615&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JNfe5NcuJicsZXiaj3mKR159vg5Ltw2UWRFhWiccl1icDTnQV2KXoF64XnHwX0vlY4hcic2q5Q6VrvAkxyOO6Du1P3g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;837&quot;/&gt;&lt;/p&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;② primary：包含子查询的主查询(最外层)&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;③ subquery：包含子查询的主查询(非最外层)&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;④ derived：衍生查询(用到了临时表)&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;a.在from子查询中，只有一张表；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;b.在from子查询中，如果table1 union table2，则table1就是derived表；&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;explain select  cr.cname    &lt;br/&gt;from ( select * from course &lt;span&gt;where&lt;/span&gt; tid = 1  union select * from course &lt;span&gt;where&lt;/span&gt; tid = 2 ) cr ;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.16609783845278725&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JNfe5NcuJicsZXiaj3mKR159vg5Ltw2UWRU3JKh0byiabVfsiamXeezCH3CTWHcObHzUK474v8rj0GHejUL1HKHTqw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;879&quot;/&gt;&lt;/p&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;⑤ union：union之后的表称之为union表，如上例&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;⑥ union result：告诉我们，哪些表之间使用了union查询&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;3）type关键字的使用说明：索引类型&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;system、const只是理想状况，实际上只能优化到index --&amp;gt; range --&amp;gt; ref这个级别。要对type进行优化的前提是，你得创建索引。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.0918580375782881&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JNfe5NcuJicsZXiaj3mKR159vg5Ltw2UWRHicgnicpbyRvS5yqTURic12g3hlJloLzhdgHgGRbzR3qHYmIHibAxeEibSA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;479&quot;/&gt;&lt;/p&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;① system&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;源表只有一条数据(实际中，基本不可能)；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;衍生表只有一条数据的主查询(偶尔可以达到)。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;② const&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;仅仅能查到一条数据的SQL ,仅针对Primary key或unique索引类型有效。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;explain select tid from test01 &lt;span&gt;where&lt;/span&gt; tid =1 ;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.1356297093649085&quot; data-type=&quot;png&quot; data-w=&quot;929&quot; class=&quot;rich_pages wxw-img&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JNfe5NcuJicsZXiaj3mKR159vg5Ltw2UWRaMILvWL1oZPyKPO3X1ibRw73phY0FTN7dDibibRzfHLMw4MxBKC0tQ10w/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;删除以前的主键索引后，此时我们添加一个其他的普通索引：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;create index test01_index on test01(tid) ;&lt;br/&gt;&lt;span&gt;# 再次查看执行计划&lt;/span&gt;&lt;br/&gt;explain select tid from test01 &lt;span&gt;where&lt;/span&gt; tid =1 ;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.12134344528710726&quot; data-type=&quot;png&quot; data-w=&quot;923&quot; class=&quot;rich_pages wxw-img&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JNfe5NcuJicsZXiaj3mKR159vg5Ltw2UWRCcf1kVicmmzsprk9mRF3EvbcpcD78Hnvibe2p13cAa8WtIFw5MdzLIxw/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;③ eq_ref&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;唯一性索引，对于每个索引键的查询，返回匹配唯一行数据（有且只有1个，不能多 、不能0），并且查询结果和数据条数必须一致。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;此种情况常见于唯一索引和主键索引。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;delete from teacher &lt;span&gt;where&lt;/span&gt; tcid &amp;gt;= 4;&lt;br/&gt;alter table teacherCard add constraint pk_tcid primary key(tcid);&lt;br/&gt;alter table teacher add constraint uk_tcid unique index(tcid) ;&lt;br/&gt;explain select t.tcid from teacher t,teacherCard tc &lt;span&gt;where&lt;/span&gt; t.tcid = tc.tcid ;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.14776274713839752&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JNfe5NcuJicsZXiaj3mKR159vg5Ltw2UWRxN8djARcuBzAT3vq7dCEkqZ34tfBQtxHXOD3lmCtjHTmoiceHy3ciaoA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;961&quot;/&gt;&lt;/p&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;总结：以上SQL，用到的索引是t.tcid，即teacher表中的tcid字段；如果teacher表的数据个数和连接查询的数据个数一致（都是3条数据），则有可能满足eq_ref级别；否则无法满足。条件很苛刻，很难达到。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;④ ref&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;非唯一性索引，对于每个索引键的查询，返回匹配的所有行（可以0，可以1，可以多）&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;准备数据：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.0975&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JNfe5NcuJicsZXiaj3mKR159vg5Ltw2UWRbPicvjMXiahD9zvh8I031cFPiboGo55A8EM0VdUibjqvSbiaiaiaAtXHEfib4Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;400&quot;/&gt;&lt;/p&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;创建索引，并查看执行计划：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;# 添加索引&lt;/span&gt;&lt;br/&gt;alter table teacher add index index_name (tname) ;&lt;br/&gt;&lt;span&gt;# 查看执行计划&lt;/span&gt;&lt;br/&gt;explain select * from teacher     &lt;span&gt;where&lt;/span&gt; tname = &lt;span&gt;&#x27;tz&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.13149171270718232&quot; data-type=&quot;png&quot; data-w=&quot;905&quot; class=&quot;rich_pages wxw-img&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JNfe5NcuJicsZXiaj3mKR159vg5Ltw2UWRQ3tjYTBib20icdlQku7JgpMrnyOJztM2ZCKnvFVFVfshB6Cqlcn9k9GQ/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;⑤ range&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;检索指定范围的行 ,where后面是一个范围查询(between, &amp;gt;, &amp;lt;, &amp;gt;=, in)&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;in有时候会失效，从而转为无索引时候的ALL&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;# 添加索引&lt;/span&gt;&lt;br/&gt;alter table teacher add index tid_index (tid) ;&lt;br/&gt;&lt;span&gt;# 查看执行计划：以下写了一种等价SQL写法，查看执行计划&lt;/span&gt;&lt;br/&gt;explain select t.* from teacher t &lt;span&gt;where&lt;/span&gt; t.tid &lt;span&gt;in&lt;/span&gt; (1,2) ;&lt;br/&gt;explain select t.* from teacher t &lt;span&gt;where&lt;/span&gt; t.tid &amp;lt;3 ;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.3111111111111111&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; class=&quot;rich_pages wxw-img&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JNfe5NcuJicsZXiaj3mKR159vg5Ltw2UWRwcAYl6GoPgKWSS3ZxodbXtXoUKhy8og7ECVcvTXJn7UJfFibUakia78g/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;⑥ index&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;查询全部索引中的数据(扫描整个索引)&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;⑦ ALL&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;查询全部源表中的数据(暴力扫描全表)&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5416267942583732&quot; data-type=&quot;png&quot; data-w=&quot;1045&quot; class=&quot;rich_pages wxw-img&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JNfe5NcuJicsZXiaj3mKR159vg5Ltw2UWRNpveicZqFGS60QqBuIKN7z2Zdkz99qT9CGsfc7FlAG68NH1VokPHlOg/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;注意：cid是索引字段，因此查询索引字段，只需要扫描索引表即可。但是tid不是索引字段，查询非索引字段，需要暴力扫描整个源表，会消耗更多的资源。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;4）possible_keys和key&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;possible_keys可能用到的索引。是一种预测，不准。了解一下就好。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;key指的是实际使用的索引。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;# 先给course表的cname字段，添加一个索引&lt;/span&gt;&lt;br/&gt;create index cname_index on course(cname);&lt;br/&gt;&lt;span&gt;# 查看执行计划&lt;/span&gt;&lt;br/&gt;explain select t.tname ,tc.tcdesc from teacher t,teacherCard tc&lt;br/&gt;&lt;span&gt;where&lt;/span&gt; t.tcid= tc.tcid&lt;br/&gt;and t.tid = (select c.tid from course c &lt;span&gt;where&lt;/span&gt; cname = &lt;span&gt;&#x27;sql&#x27;&lt;/span&gt;) ;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.18500948766603414&quot; data-type=&quot;png&quot; data-w=&quot;1054&quot; class=&quot;rich_pages wxw-img&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JNfe5NcuJicsZXiaj3mKR159vg5Ltw2UWRiaE1g4gWc3F92Jv1NqSehiaqeYbfxchzfdu8Syf6KIZ7Ky9RGicotf4tg/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有一点需要注意的是：如果possible_key/key是NULL，则说明没用索引。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;5）key_len&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;索引的长度，用于判断复合索引是否被完全使用(a,b,c)。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;① 新建一张新表，用于测试&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;# 创建表&lt;/span&gt;&lt;br/&gt;create table test_kl&lt;br/&gt;(  &lt;br/&gt;  name char(20) not null default &lt;span&gt;&#x27;&#x27;&lt;/span&gt;&lt;br/&gt;);&lt;br/&gt;&lt;span&gt;# 添加索引&lt;/span&gt;&lt;br/&gt;alter table test_kl add index index_name(name) ;&lt;br/&gt;&lt;span&gt;# 查看执行计划&lt;/span&gt;&lt;br/&gt;explain select * from test_kl &lt;span&gt;where&lt;/span&gt; name =&lt;span&gt;&#x27;&#x27;&lt;/span&gt; ; &lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.3702064896755162&quot; data-type=&quot;png&quot; data-w=&quot;678&quot; class=&quot;rich_pages wxw-img&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JNfe5NcuJicsZXiaj3mKR159vg5Ltw2UWRRH3iakVmeGicdB1qKq5xBTTUCT417zN5dYP3yhAFiaYKdrUYogOpr4kNA/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果分析：因为我没有设置服务端的字符集，因此默认的字符集使用的是latin1，对于latin1一个字符代表一个字节，因此这列的key_len的长度是20，表示使用了name这个索引。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;② 给test_kl表，新增name1列，该列没有设置“not null”&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.2973372781065089&quot; data-type=&quot;png&quot; data-w=&quot;676&quot; class=&quot;rich_pages wxw-img&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JNfe5NcuJicsZXiaj3mKR159vg5Ltw2UWRWmVjaHWheDkDWU9p2ZjTDkNo6jPdF70Q9PEmbWtJrrhy4WrhER8riaw/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果分析：如果索引字段可以为null，则mysql底层会使用1个字节用于标识。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;③ 删除原来的索引name和name1，新增一个复合索引&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;# 删除原来的索引name和name1&lt;/span&gt;&lt;br/&gt;drop index index_name on test_kl ;&lt;br/&gt;drop index index_name1 on test_kl ;&lt;br/&gt;&lt;span&gt;# 增加一个复合索引&lt;/span&gt;&lt;br/&gt;create index name_name1_index on test_kl(name,name1);&lt;br/&gt;&lt;span&gt;# 查看执行计划&lt;/span&gt;&lt;br/&gt;explain select * from test_kl &lt;span&gt;where&lt;/span&gt; name1 = &lt;span&gt;&#x27;&#x27;&lt;/span&gt; ; --121&lt;br/&gt;explain select * from test_kl &lt;span&gt;where&lt;/span&gt; name = &lt;span&gt;&#x27;&#x27;&lt;/span&gt; ; --60&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.45322793148880103&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JNfe5NcuJicsZXiaj3mKR159vg5Ltw2UWRUmzStdtSUQbVln5niaiauj4bkZoyNs8tdice2Lv2nw8NgDH3MF8xpeqog/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;759&quot;/&gt;&lt;/p&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;结果分析：&lt;/strong&gt; 对于下面这个执行计划，可以看到我们只使用了复合索引的第一个索引字段name，因此key_len是20，这个很清楚。再看上面这个执行计划，我们虽然仅仅在where后面使用了复合索引字段中的name1字段，但是你要使用复合索引的第2个索引字段，会默认使用了复合索引的第1个索引字段name，由于name1可以是null，因此key_len = 20 + 20 + 1 = 41呀！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;④ 再次怎加一个name2字段，并为该字段创建一个索引。&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不同的是：该字段数据类型是varchar&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;# 新增一个字段name2，name2可以为null&lt;/span&gt;&lt;br/&gt;alter table test_kl add column name2 varchar(20) ; &lt;br/&gt;&lt;span&gt;# 给name2字段，设置为索引字段&lt;/span&gt;&lt;br/&gt;alter table test_kl add index name2_index(name2) ;&lt;br/&gt;&lt;span&gt;# 查看执行计划&lt;/span&gt;&lt;br/&gt;explain select * from test_kl &lt;span&gt;where&lt;/span&gt; name2 = &lt;span&gt;&#x27;&#x27;&lt;/span&gt; ;  &lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.2503419972640219&quot; data-type=&quot;png&quot; data-w=&quot;731&quot; class=&quot;rich_pages wxw-img&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JNfe5NcuJicsZXiaj3mKR159vg5Ltw2UWRmooKV9saQezGTlS9rxakMc8h2BYL1iamRH2Zz4Tnrx4PCasa5icnbr8w/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;结果分析：&lt;/strong&gt; key_len = 20 + 1 + 2，这个20 + 1我们知道，这个2又代表什么呢？原来varchar属于可变长度，在mysql底层中，用2个字节标识可变长度。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;6）ref&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里的ref的作用，指明当前表所参照的字段。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;注意与type中的ref值区分。在type中，ref只是type类型的一种选项值。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;# 给course表的tid字段，添加一个索引&lt;/span&gt;&lt;br/&gt;create index tid_index on course(tid);&lt;br/&gt;&lt;span&gt;# 查看执行计划&lt;/span&gt;&lt;br/&gt;explain select * from course c,teacher t &lt;br/&gt;&lt;span&gt;where&lt;/span&gt; c.tid = t.tid  &lt;br/&gt;and t.tname = &lt;span&gt;&#x27;tw&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.2546583850931677&quot; data-type=&quot;png&quot; data-w=&quot;805&quot; class=&quot;rich_pages wxw-img&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JNfe5NcuJicsZXiaj3mKR159vg5Ltw2UWRv8Y0KQj9HyGdJXpyicgiaLRiaITCot3TTHkiaictb9IRSRdFoM0tHXFJvYQ/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;结果分析：&lt;/strong&gt; 有两个索引，c表的c.tid引用的是t表的tid字段，因此可以看到显示结果为【数据库名.t.tid】，t表的t.name引用的是一个常量&quot;tw&quot;，因此可以看到结果显示为const，表示一个常量。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;7）rows(这个目前还是有点疑惑)&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;被索引优化查询的数据个数 (实际通过索引而查询到的数据个数)&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;explain select *&lt;br/&gt;from course c,teacher t  &lt;br/&gt;&lt;span&gt;where&lt;/span&gt; c.tid = t.tid&lt;br/&gt;and t.tname = &lt;span&gt;&#x27;tz&#x27;&lt;/span&gt; ;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5542168674698795&quot; data-type=&quot;png&quot; data-w=&quot;830&quot; class=&quot;rich_pages wxw-img&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JNfe5NcuJicsZXiaj3mKR159vg5Ltw2UWREgPGlTHgt8cqLSiaKF35jK81eibkmf0jgrs2FoibpjYUibyZyUSfoMicn7A/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;8）extra&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;表示其他的一些说明，也很有用。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;① using filesort：针对单索引的情况&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当出现了这个词，表示你当前的SQL性能消耗较大。表示进行了一次“额外”的排序。常见于order by语句中。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;Ⅰ 什么是“额外”的排序？&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为了讲清楚这个，我们首先要知道什么是排序。我们为了给某一个字段进行排序的时候，首先你得先查询到这个字段，然后在将这个字段进行排序。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;紧接着，我们查看如下两个SQL语句的执行计划。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;# 新建一张表，建表同时创建索引&lt;/span&gt;&lt;br/&gt;create table test02&lt;br/&gt;(   &lt;br/&gt;  a1 char(3),    &lt;br/&gt;  a2 char(3),   &lt;br/&gt;  a3 char(3),   &lt;br/&gt;  index idx_a1(a1),  &lt;br/&gt;  index idx_a2(a2),   &lt;br/&gt;  index idx_a3(a3)&lt;br/&gt;);&lt;br/&gt;&lt;span&gt;# 查看执行计划&lt;/span&gt;&lt;br/&gt;explain select * from test02 &lt;span&gt;where&lt;/span&gt; a1 =&lt;span&gt;&#x27;&#x27;&lt;/span&gt; order by a1 ;&lt;br/&gt;explain select * from test02 &lt;span&gt;where&lt;/span&gt; a1 =&lt;span&gt;&#x27;&#x27;&lt;/span&gt; order by a2 ; &lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.29782359679266895&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JNfe5NcuJicsZXiaj3mKR159vg5Ltw2UWRE9AZQ83LtiblhzeU7XOhuoWtOMlVE2zDW1micIpwfr2AicMzJdXNdlxNg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;873&quot;/&gt;&lt;/p&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;结果分析：&lt;/strong&gt; 对于第一个执行计划，where后面我们先查询了a1字段，然后再利用a1做了依次排序，这个很轻松。但是对于第二个执行计划，where后面我们查询了a1字段，然而利用的却是a2字段进行排序，此时myql底层会进行一次查询，进行“额外”的排序。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;总结：对于单索引，如果排序和查找是同一个字段，则不会出现using filesort；如果排序和查找不是同一个字段，则会出现using filesort；因此where哪些字段，就order by哪些些字段。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;② using filesort：针对复合索引的情况&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不能跨列(官方术语：最佳左前缀)&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;# 删除test02的索引&lt;/span&gt;&lt;br/&gt;drop index idx_a1 on test02;&lt;br/&gt;drop index idx_a2 on test02;&lt;br/&gt;drop index idx_a3 on test02;&lt;br/&gt;&lt;span&gt;# 创建一个复合索引&lt;/span&gt;&lt;br/&gt;alter table test02 add index idx_a1_a2_a3 (a1,a2,a3) ;&lt;br/&gt;&lt;span&gt;# 查看下面SQL语句的执行计划&lt;/span&gt;&lt;br/&gt;explain select *from test02 &lt;span&gt;where&lt;/span&gt; a1=&lt;span&gt;&#x27;&#x27;&lt;/span&gt; order by a3 ;  --using filesort&lt;br/&gt;explain select *from test02 &lt;span&gt;where&lt;/span&gt; a2=&lt;span&gt;&#x27;&#x27;&lt;/span&gt; order by a3 ; --using filesort&lt;br/&gt;explain select *from test02 &lt;span&gt;where&lt;/span&gt; a1=&lt;span&gt;&#x27;&#x27;&lt;/span&gt; order by a2 ;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5684931506849316&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JNfe5NcuJicsZXiaj3mKR159vg5Ltw2UWR88swtFueO8NicNHnhibicWGw6ZQIkvvzF1aYJNZqM21gr4ukjVmjP4Ribg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;876&quot;/&gt;&lt;/p&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;结果分析：&lt;/strong&gt; 复合索引的顺序是(a1,a2,a3)，可以看到a1在最左边，因此a1就叫做“最佳左前缀”，如果要使用后面的索引字段，必须先使用到这个a1字段。对于explain1，where后面我们使用a1字段，但是后面的排序使用了a3，直接跳过了a2，属于跨列；对于explain2，where后面我们使用了a2字段，直接跳过了a1字段，也属于跨列；对于explain3，where后面我们使用a1字段，后面使用的是a2字段，因此没有出现【using filesort】。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;③ using temporary&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当出现了这个词，也表示你当前的SQL性能消耗较大。这是由于当前SQL用到了临时表。一般出现在group by中。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;explain select a1 from test02 &lt;span&gt;where&lt;/span&gt; a1 &lt;span&gt;in&lt;/span&gt; (&lt;span&gt;&#x27;1&#x27;&lt;/span&gt;,&lt;span&gt;&#x27;2&#x27;&lt;/span&gt;,&lt;span&gt;&#x27;3&#x27;&lt;/span&gt;) group by a1 ;&lt;br/&gt;explain select a1 from test02 &lt;span&gt;where&lt;/span&gt; a1 &lt;span&gt;in&lt;/span&gt; (&lt;span&gt;&#x27;1&#x27;&lt;/span&gt;,&lt;span&gt;&#x27;2&#x27;&lt;/span&gt;,&lt;span&gt;&#x27;3&#x27;&lt;/span&gt;) group by a2 ; --using temporary&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.24743326488706366&quot; data-type=&quot;png&quot; data-w=&quot;974&quot; class=&quot;rich_pages wxw-img&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JNfe5NcuJicsZXiaj3mKR159vg5Ltw2UWRYngGLbH88yoLMyWo8Wiba8YiaKywQ8yYPXJqhKZKeIbJeg84z9kL7T6w/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;结果分析：&lt;/strong&gt; 当你查询哪个字段，就按照那个字段分组，否则就会出现using temporary。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;针对using temporary，我们在看一个例子：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;using temporary表示需要额外再使用一张表，一般出现在group by语句中。虽然已经有表了，但是不适用，必须再来一张表。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;再次来看mysql的编写过程和解析过程。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;Ⅰ 编写过程&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;select dinstinct  ..from  ..join ..on ..&lt;span&gt;where&lt;/span&gt; ..group by ..having ..order by ..&lt;span&gt;limit&lt;/span&gt; ..&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;Ⅱ 解析过程&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;from .. on.. join ..&lt;span&gt;where&lt;/span&gt; ..group by ..having ..select dinstinct ..order by ..&lt;span&gt;limit&lt;/span&gt; ..&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;很显然，where后是group by，然后才是select。基于此，我们再查看如下两个SQL语句的执行计划。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;explain select * from test03 &lt;span&gt;where&lt;/span&gt; a2=2 and a4=4 group by a2,a4;&lt;br/&gt;explain select * from test03 &lt;span&gt;where&lt;/span&gt; a2=2 and a4=4 group by a3;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;分析如下：&lt;/strong&gt; 对于第一个执行计划，where后面是a2和a4，接着我们按照a2和a4分组，很明显这两张表已经有了，直接在a2和a4上分组就行了。但是对于第二个执行计划，where后面是a2和a4，接着我们却按照a3分组，很明显我们没有a3这张表，因此有需要再来一张临时表a3。因此就会出现using temporary。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;④ using index&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当你看到这个关键词，恭喜你，表示你的SQL性能提升了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;using index称之为“索引覆盖”。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当出现了using index，就表示不用读取源表，而只利用索引获取数据，不需要回源表查询。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;只要使用到的列，全部出现在索引中，就是索引覆盖。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;# 删除test02中的复合索引idx_a1_a2_a3&lt;/span&gt;&lt;br/&gt;drop index idx_a1_a2_a3 on test02;&lt;br/&gt;&lt;span&gt;# 重新创建一个复合索引&lt;/span&gt;&lt;br/&gt;idx_a1_a2create index idx_a1_a2 on test02(a1,a2);&lt;br/&gt;&lt;span&gt;# 查看执行计划&lt;/span&gt;&lt;br/&gt;explain select a1,a3 from test02 &lt;span&gt;where&lt;/span&gt; a1=&lt;span&gt;&#x27;&#x27;&lt;/span&gt; or a3= &lt;span&gt;&#x27;&#x27;&lt;/span&gt; ;&lt;br/&gt;explain select a1,a2 from test02 &lt;span&gt;where&lt;/span&gt; a1=&lt;span&gt;&#x27;&#x27;&lt;/span&gt; and a2= &lt;span&gt;&#x27;&#x27;&lt;/span&gt; ;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.36538461538461536&quot; data-type=&quot;png&quot; data-w=&quot;936&quot; class=&quot;rich_pages wxw-img&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JNfe5NcuJicsZXiaj3mKR159vg5Ltw2UWRsvNYNUeCczRbkicHm80M4m4vs12eGQib6ZUtbicc2cM7u2BGq7zMb8Y3w/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;结果分析：&lt;/strong&gt; 我们创建的是a1和a2的复合索引，对于第一个执行计划，我们却出现了a3，该字段并没有创建索引，因此没有出现using index，而是using where，表示我们需要回表查询。对于第二个执行计划，属于完全的索引覆盖，因此出现了using index。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;针对using index，我们在查看一个案例：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;explain select a1,a2 from test02 &lt;span&gt;where&lt;/span&gt; a1=&lt;span&gt;&#x27;&#x27;&lt;/span&gt; or a2= &lt;span&gt;&#x27;&#x27;&lt;/span&gt; ;&lt;br/&gt;explain select a1,a2 from test02;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果如下：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果用到了索引覆盖(using index时)，会对possible_keys和key造成影响：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;a.如果没有where，则索引只出现在key中；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;b.如果有where，则索引 出现在key和possible_keys中。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;⑤ using where&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;表示需要【回表查询】，表示既在索引中进行了查询，又回到了源表进行了查询。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;# 删除test02中的复合索引idx_a1_a2&lt;/span&gt;&lt;br/&gt;drop index idx_a1_a2 on test02;&lt;br/&gt;&lt;span&gt;# 将a1字段，新增为一个索引&lt;/span&gt;&lt;br/&gt;create index a1_index on test02(a1);&lt;br/&gt;&lt;span&gt;# 查看执行计划&lt;/span&gt;&lt;br/&gt;explain select a1,a3 from test02 &lt;span&gt;where&lt;/span&gt; a1=&lt;span&gt;&quot;&quot;&lt;/span&gt; and a3=&lt;span&gt;&quot;&quot;&lt;/span&gt; ;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.18435754189944134&quot; data-type=&quot;png&quot; data-w=&quot;895&quot; class=&quot;rich_pages wxw-img&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JNfe5NcuJicsZXiaj3mKR159vg5Ltw2UWRbV5xBVmpHbMjagaOXJ5ib0OMoItlmqZsM2yhs1AI1aNx4oR93WyVCag/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;结果分析：&lt;/strong&gt; 我们既使用了索引a1，表示我们使用了索引进行查询。但是又对于a3字段，我们并没有使用索引，因此对于a3字段，需要回源表查询，这个时候出现了using where。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;⑥ impossible where(了解)&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当where子句永远为False的时候，会出现impossible where&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;# 查看执行计划&lt;/span&gt;&lt;br/&gt;explain select a1 from test02 &lt;span&gt;where&lt;/span&gt; a1=&lt;span&gt;&quot;a&quot;&lt;/span&gt; and a1=&lt;span&gt;&quot;b&quot;&lt;/span&gt; ;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.13903743315508021&quot; data-type=&quot;png&quot; data-w=&quot;935&quot; class=&quot;rich_pages wxw-img&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JNfe5NcuJicsZXiaj3mKR159vg5Ltw2UWRYgjNWAiawRsKPXxZ69yndQdspPWH2Db0sArlM0uakWeJiaR5odavr6zg/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;6、优化示例&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;1）引入案例&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;# 创建新表&lt;/span&gt;&lt;br/&gt;create table test03&lt;br/&gt;(  &lt;br/&gt;  a1 int(4) not null,   &lt;br/&gt;  a2 int(4) not null,    &lt;br/&gt;  a3 int(4) not null,   &lt;br/&gt;  a4 int(4) not null&lt;br/&gt;);&lt;br/&gt;&lt;span&gt;# 创建一个复合索引&lt;/span&gt;&lt;br/&gt;create index a1_a2_a3_test03 on test03(a1,a2,a3);&lt;br/&gt;&lt;span&gt;# 查看执行计划&lt;/span&gt;&lt;br/&gt;explain select a3 from test03 &lt;span&gt;where&lt;/span&gt; a1=1 and a2=2 and a3=3;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.36987951807228914&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JNfe5NcuJicsZXiaj3mKR159vg5Ltw2UWRRUQ93rIr2L2LV10zqzc8EfoQ7EGqGVzHMuWHYMb1sc8mzKXcCV9tYA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;830&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;推荐写法：&lt;/strong&gt; 复合索引顺序和使用顺序一致。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下面看看【&lt;strong&gt;不推荐写法&lt;/strong&gt;】：复合索引顺序和使用顺序不一致。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;# 查看执行计划&lt;/span&gt;&lt;br/&gt;explain select a3 from test03 &lt;span&gt;where&lt;/span&gt; a3=1 and a2=2 and a1=3;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.145933014354067&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JNfe5NcuJicsZXiaj3mKR159vg5Ltw2UWRPJwLbBcNDicjb8MHQbOhaDqnqr1HYOia4jh6liamjarnkibRzPkkO7vMNw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;836&quot;/&gt;&lt;/p&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;结果分析：&lt;/strong&gt; 虽然结果和上述结果一致，但是不推荐这样写。但是这样写怎么又没有问题呢？这是由于SQL优化器的功劳，它帮我们调整了顺序。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最后再补充一点：对于复合索引，不要跨列使用&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;# 查看执行计划&lt;/span&gt;&lt;br/&gt;explain select a3 from test03 &lt;span&gt;where&lt;/span&gt; a1=1 and a3=2 group by a3;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.18241469816272965&quot; data-type=&quot;png&quot; data-w=&quot;762&quot; class=&quot;rich_pages wxw-img&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JNfe5NcuJicsZXiaj3mKR159vg5Ltw2UWRKOgicIOZqQIj6vorIPWUjyA95SSLjd3X5j6PaGV0TeXPiaJfnc48mKvg/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;结果分析：&lt;/strong&gt; a1_a2_a3是一个复合索引，我们使用a1索引后，直接跨列使用了a3，直接跳过索引a2，因此索引a3失效了，当使用a3进行分组的时候，就会出现using where。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;2）单表优化&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;# 创建新表&lt;/span&gt;&lt;br/&gt;create table book&lt;br/&gt;(    &lt;br/&gt;    bid int(4) primary key,      &lt;br/&gt;    name varchar(20) not null,     &lt;br/&gt;    authorid int(4) not null,     &lt;br/&gt;    publicid int(4) not null,    &lt;br/&gt;    typeid int(4) not null &lt;br/&gt;);&lt;br/&gt;&lt;span&gt;# 插入数据&lt;/span&gt;&lt;br/&gt;insert into book values(1,&lt;span&gt;&#x27;tjava&#x27;&lt;/span&gt;,1,1,2) ;&lt;br/&gt;insert into book values(2,&lt;span&gt;&#x27;tc&#x27;&lt;/span&gt;,2,1,2) ;&lt;br/&gt;insert into book values(3,&lt;span&gt;&#x27;wx&#x27;&lt;/span&gt;,3,2,1) ;&lt;br/&gt;insert into book values(4,&lt;span&gt;&#x27;math&#x27;&lt;/span&gt;,4,2,3) ;    &lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5098591549295775&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JNfe5NcuJicsZXiaj3mKR159vg5Ltw2UWRuRwgmjgTkQ2egg9lIEzF5DZficCzR2aSShrq1Ommqb9fLAPZuLibjIUQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;355&quot;/&gt;&lt;/p&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;案例：查询authorid=1且typeid为2或3的bid，并根据typeid降序排列。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;explain &lt;br/&gt;select bid from book &lt;br/&gt;&lt;span&gt;where&lt;/span&gt; typeid &lt;span&gt;in&lt;/span&gt;(2,3) and authorid=1 &lt;br/&gt;order by typeid desc ;    &lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.21418826739427013&quot; data-type=&quot;png&quot; data-w=&quot;733&quot; class=&quot;rich_pages wxw-img&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JNfe5NcuJicsZXiaj3mKR159vg5Ltw2UWRbgDfKKZ7cAORpBC2ckYCWicypsweAxicojjXsDRiagJUgRic45X1xI20icg/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这是没有进行任何优化的SQL，可以看到typ为ALL类型，extra为using filesort，可以想象这个SQL有多恐怖。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;优化：添加索引的时候，要根据MySQL解析顺序添加索引，又回到了MySQL的解析顺序，下面我们再来看看MySQL的解析顺序。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;from .. on.. join ..&lt;span&gt;where&lt;/span&gt; ..group by ..having ..select dinstinct ..order by ..&lt;span&gt;limit&lt;/span&gt; ..&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;① 优化1：基于此，我们进行索引的添加，并再次查看执行计划。&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;# 添加索引&lt;/span&gt;&lt;br/&gt;create index typeid_authorid_bid on book(typeid,authorid,bid);&lt;br/&gt;&lt;span&gt;# 再次查看执行计划&lt;/span&gt;&lt;br/&gt;explain &lt;br/&gt;select bid from book &lt;br/&gt;&lt;span&gt;where&lt;/span&gt; typeid &lt;span&gt;in&lt;/span&gt;(2,3) and authorid=1  &lt;br/&gt;order by typeid desc ;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.2597864768683274&quot; data-type=&quot;png&quot; data-w=&quot;843&quot; class=&quot;rich_pages wxw-img&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JNfe5NcuJicsZXiaj3mKR159vg5Ltw2UWR0gogyZoJEYbyqLsVbVdDbSHbicCtOperF6nwUFxJIBtqM41enW4ntfQ/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;结果分析：&lt;/strong&gt; 结果并不是和我们想象的一样，还是出现了using where，查看索引长度key_len=8，表示我们只使用了2个索引，有一个索引失效了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;② 优化2：使用了in有时候会导致索引失效，基于此有了如下一种优化思路。&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;将in字段放在最后面。需要注意一点：每次创建新的索引的时候，最好是删除以前的废弃索引，否则有时候会产生干扰(索引之间)。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;# 删除以前的索引&lt;/span&gt;&lt;br/&gt;drop index typeid_authorid_bid on book;&lt;br/&gt;&lt;span&gt;# 再次创建索引&lt;/span&gt;&lt;br/&gt;create index authorid_typeid_bid on book(authorid,typeid,bid);&lt;br/&gt;&lt;span&gt;# 再次查看执行计划&lt;/span&gt;&lt;br/&gt;explain &lt;br/&gt;select bid from book &lt;br/&gt;&lt;span&gt;where&lt;/span&gt; authorid=1  and typeid &lt;span&gt;in&lt;/span&gt;(2,3) &lt;br/&gt;order by typeid desc ;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.09501187648456057&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JNfe5NcuJicsZXiaj3mKR159vg5Ltw2UWRmDt4fSOBM0qDkJXWiaC3hbRnsneXBzkZ3V4icBYmhAsU1e8XgqfP541A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;842&quot;/&gt;&lt;/p&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;结果分析：&lt;/strong&gt; 这里虽然没有变化，但是这是一种优化思路。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;总结如下：&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;a.最佳做前缀，保持索引的定义和使用的顺序一致性&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;b.索引需要逐步优化(每次创建新索引，根据情况需要删除以前的废弃索引)&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;c.将含In的范围查询，放到where条件的最后，防止失效。&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本例中同时出现了Using where（需要回原表）; Using index（不需要回原表）：原因，where authorid=1 and typeid in(2,3)中authorid在索引(authorid,typeid,bid)中，因此不需要回原表（直接在索引表中能查到）；而typeid虽然也在索引(authorid,typeid,bid)中，但是含in的范围查询已经使该typeid索引失效，因此相当于没有typeid这个索引，所以需要回原表（using where）；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;例如以下没有了In，则不会出现using where：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;explain select bid from book &lt;br/&gt;&lt;span&gt;where&lt;/span&gt;  authorid=1 and typeid =3&lt;br/&gt;order by typeid desc ;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.20580474934036938&quot; data-type=&quot;png&quot; data-w=&quot;758&quot; class=&quot;rich_pages wxw-img&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JNfe5NcuJicsZXiaj3mKR159vg5Ltw2UWRw94sQqibWtuwYmoPKo6mSeYJu9Gtb06oNvYu2QVJRbusUnW9Lq8F8jw/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;3）两表优化&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;# 创建teacher2新表&lt;/span&gt;&lt;br/&gt;create table teacher2&lt;br/&gt;(      &lt;br/&gt;    tid int(4) primary key,     &lt;br/&gt;    cid int(4) not null&lt;br/&gt;);&lt;br/&gt;&lt;span&gt;# 插入数据&lt;/span&gt;&lt;br/&gt;insert into teacher2 values(1,2);&lt;br/&gt;insert into teacher2 values(2,1);&lt;br/&gt;insert into teacher2 values(3,3);&lt;br/&gt;&lt;span&gt;# 创建course2新表&lt;/span&gt;&lt;br/&gt;create table course2&lt;br/&gt;(  &lt;br/&gt;    cid int(4) ,  &lt;br/&gt;    cname varchar(20)&lt;br/&gt;);&lt;br/&gt;&lt;span&gt;# 插入数据&lt;/span&gt;&lt;br/&gt;insert into course2 values(1,&lt;span&gt;&#x27;java&#x27;&lt;/span&gt;);&lt;br/&gt;insert into course2 values(2,&lt;span&gt;&#x27;python&#x27;&lt;/span&gt;);&lt;br/&gt;insert into course2 values(3,&lt;span&gt;&#x27;kotlin&#x27;&lt;/span&gt;);&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;案例：使用一个左连接，查找教java课程的所有信息。&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;explain &lt;br/&gt;select *&lt;br/&gt;from teacher2 t&lt;br/&gt;left outer join course2 c&lt;br/&gt;on t.cid=c.cid &lt;br/&gt;&lt;span&gt;where&lt;/span&gt; c.cname=&lt;span&gt;&#x27;java&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.25635103926096997&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JNfe5NcuJicsZXiaj3mKR159vg5Ltw2UWR7n4iaCLZGzEvZYrftngKkX2eMI0f7iaD4eHiaHA7Wsvp6BVRPVxwF8TTA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;866&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;① 优化&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于两张表，索引往哪里加？答：对于表连接，小表驱动大表。索引建立在经常使用的字段上。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;为什么小表驱动大表好一些呢？&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;    小表:10   &lt;br/&gt;    大表:300&lt;br/&gt;&lt;span&gt;# 小表驱动大表&lt;/span&gt;&lt;br/&gt;select ...&lt;span&gt;where&lt;/span&gt; 小表.x10=大表.x300 ;&lt;br/&gt;&lt;span&gt;for&lt;/span&gt;(int i=0;i&amp;lt;小表.length10;i++)&lt;br/&gt;{   &lt;br/&gt;    &lt;span&gt;for&lt;/span&gt;(int j=0;j&amp;lt;大表.length300;j++)  &lt;br/&gt;    {       &lt;br/&gt;        ...   &lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;span&gt;# 大表驱动小表&lt;/span&gt;&lt;br/&gt;select ...&lt;span&gt;where&lt;/span&gt; 大表.x300=小表.x10 ;&lt;br/&gt;&lt;span&gt;for&lt;/span&gt;(int i=0;i&amp;lt;大表.length300;i++)&lt;br/&gt;{  &lt;br/&gt;    &lt;span&gt;for&lt;/span&gt;(int j=0;j&amp;lt;小表.length10;j++)   &lt;br/&gt;    {     &lt;br/&gt;        ...   &lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;分析：&lt;/strong&gt; 以上2个FOR循环，最终都会循环3000次；但是对于双层循环来说：一般建议，将数据小的循环，放外层。数据大的循环，放内层。不用管这是为什么，这是编程语言的一个原则，对于双重循环，外层循环少，内存循环大，程序的性能越高。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结论：当编写【…on t.cid=c.cid】时，将数据量小的表放左边（假设此时t表数据量小，c表数据量大。）&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们已经知道了，对于两表连接，需要利用小表驱动大表，例如【…on t.cid=c.cid】，t如果是小表(10条)，c如果是大表(300条)，那么t每循环1次，就需要循环300次，即t表的t.cid字段属于，经常使用的字段，因此需要给cid字段添加索引。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;更深入的说明：&lt;/strong&gt; 一般情况下，左连接给左表加索引。右连接给右表加索引。其他表需不需要加索引，我们逐步尝试。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;# 给左表的字段加索引&lt;/span&gt;&lt;br/&gt;create index cid_teacher2 on teacher2(cid);&lt;br/&gt;&lt;span&gt;# 查看执行计划&lt;/span&gt;&lt;br/&gt;explain &lt;br/&gt;select *&lt;br/&gt;from teacher2 t &lt;br/&gt;left outer join course2 c&lt;br/&gt;on t.cid=c.cid&lt;br/&gt;&lt;span&gt;where&lt;/span&gt; c.cname=&lt;span&gt;&#x27;java&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.12757731958762886&quot; data-type=&quot;png&quot; data-w=&quot;776&quot; class=&quot;rich_pages wxw-img&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JNfe5NcuJicsZXiaj3mKR159vg5Ltw2UWRTu8faicPwazTxBwKhMVVIzQmRcjw6FB2flmiaiajsFMUiapC4OiaJ18DthA/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当然你可以下去接着优化，给cname添加一个索引。索引优化是一个逐步的过程，需要一点点尝试。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;# 给cname的字段加索引&lt;/span&gt;&lt;br/&gt;create index cname_course2 on course2(cname);&lt;br/&gt;&lt;span&gt;# 查看执行计划&lt;/span&gt;&lt;br/&gt;explain&lt;br/&gt;select t.cid,c.cname&lt;br/&gt;from teacher2 t&lt;br/&gt;left outer join course2 c&lt;br/&gt;on t.cid=c.cid &lt;br/&gt;&lt;span&gt;where&lt;/span&gt; c.cname=&lt;span&gt;&#x27;java&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.11086474501108648&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JNfe5NcuJicsZXiaj3mKR159vg5Ltw2UWRAx8JRqc5cn1piaRvETvp5PvO1BjLO8yUMgolYq4XRMllMElNicJI8U8g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;902&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最后补充一个：Using join buffer是extra中的一个选项，表示Mysql引擎使用了“连接缓存”，即MySQL底层动了你的SQL，你写的太差了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;4）三表优化&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;大于等于张表，优化原则一样&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;小表驱动大表&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;索引建立在经常查询的字段上&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;7、避免索引失效的一些原则&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;① 复合索引需要注意的点&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;复合索引，不要跨列或无序使用(最佳左前缀)&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;复合索引，尽量使用全索引匹配，也就是说，你建立几个索引，就使用几个索引&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;② 不要在索引上进行任何操作(计算、函数、类型转换)，否则索引失效&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;explain select * from book &lt;span&gt;where&lt;/span&gt; authorid = 1 and typeid = 2;&lt;br/&gt;explain select * from book &lt;span&gt;where&lt;/span&gt; authorid*2 = 1 and typeid = 2 ;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.2944038929440389&quot; data-type=&quot;png&quot; data-w=&quot;822&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JNfe5NcuJicsZXiaj3mKR159vg5Ltw2UWRxyhJULGyL9icEPYpDj2X5ibB5DN8txP1etPycmgp9RAibqktn6oWYFRiag/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;③ 索引不能使用不等于（!= &amp;lt;&amp;gt;）或is null (is not null)，否则自身以及右侧所有全部失效(针对大多数情况)。复合索引中如果有&amp;gt;，则自身和右侧索引全部失效。&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;# 针对不是复合索引的情况&lt;/span&gt;&lt;br/&gt;explain select * from book &lt;span&gt;where&lt;/span&gt; authorid != 1 and typeid =2 ;&lt;br/&gt;explain select * from book &lt;span&gt;where&lt;/span&gt; authorid != 1 and typeid !=2 ;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.39740820734341253&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JNfe5NcuJicsZXiaj3mKR159vg5Ltw2UWRncelqFlhOpicDb4eH66eMDWefG10uppvyFLxRgQRvyMYomyw9uP69lw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;926&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;再观看下面这个案例：&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;# 删除单独的索引&lt;/span&gt;&lt;br/&gt;drop index authorid_index on book;&lt;br/&gt;drop index typeid_index on book;&lt;br/&gt;&lt;span&gt;# 创建一个复合索引&lt;/span&gt;&lt;br/&gt;alter table book add index idx_book_at (authorid,typeid);&lt;br/&gt;&lt;span&gt;# 查看执行计划&lt;/span&gt;&lt;br/&gt;explain select * from book &lt;span&gt;where&lt;/span&gt; authorid &amp;gt; 1 and typeid = 2 ;&lt;br/&gt;explain select * from book &lt;span&gt;where&lt;/span&gt; authorid = 1 and typeid &amp;gt; 2 ;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.27682403433476394&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JNfe5NcuJicsZXiaj3mKR159vg5Ltw2UWRWunbtKgbGm8WzWtLBFibXiba1oTv4TIMlknc2eukpSry3AKHm4cKsWzg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;932&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结论：复合索引中如果有【&amp;gt;】，则自身和右侧索引全部失效。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在看看复合索引中有【&amp;lt;】的情况：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.2926829268292683&quot; data-type=&quot;png&quot; data-w=&quot;902&quot; class=&quot;rich_pages wxw-img&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JNfe5NcuJicsZXiaj3mKR159vg5Ltw2UWR1wGicucsic52Xas2MqicfzkRgcE1aKEanzib0SWEJYEkPjXJDqJfR6YxAg/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们学习索引优化 ，是一个大部分情况适用的结论，但由于SQL优化器等原因 该结论不是100%正确。一般而言， 范围查询（&amp;gt; &amp;lt; in），之后的索引失效。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;④ SQL优化，是一种概率层面的优化。至于是否实际使用了我们的优化，需要通过explain进行推测。&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;# 删除复合索引&lt;/span&gt;&lt;br/&gt;drop index authorid_typeid_bid on book;&lt;br/&gt;&lt;span&gt;# 为authorid和typeid，分别创建索引&lt;/span&gt;&lt;br/&gt;create index authorid_index on book(authorid);&lt;br/&gt;create index typeid_index on book(typeid);&lt;br/&gt;&lt;span&gt;# 查看执行计划&lt;/span&gt;&lt;br/&gt;explain select * from book &lt;span&gt;where&lt;/span&gt; authorid = 1 and typeid =2 ;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.14161490683229813&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JNfe5NcuJicsZXiaj3mKR159vg5Ltw2UWRkWzzpXibWib9TYPfKyuIyibyRYJft6zYEoN5Ub2KYgPU4vQMF736pPE5A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;805&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;结果分析：&lt;/strong&gt; 我们创建了两个索引，但是实际上只使用了一个索引。因为对于两个单独的索引，程序觉得只用一个索引就够了，不需要使用两个。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当我们创建一个复合索引，再次执行上面的SQL：&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;# 查看执行计划&lt;/span&gt;&lt;br/&gt;explain select * from book &lt;span&gt;where&lt;/span&gt; authorid = 1 and typeid =2 ;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.08916478555304741&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JNfe5NcuJicsZXiaj3mKR159vg5Ltw2UWRmN1iao7TibPqy47TjLmdPcN3icN9vd6V5fLjTIkiciazu7iaUv4wf3hFicT4A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;886&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;⑤ 索引覆盖，百分之百没问题&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;⑥ like尽量以“常量”开头，不要以’%&#x27;开头，否则索引失效&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;explain select * from teacher &lt;span&gt;where&lt;/span&gt; tname like &lt;span&gt;&quot;%x%&quot;&lt;/span&gt; ;&lt;br/&gt;explain select * from teacher  &lt;span&gt;where&lt;/span&gt; tname like &lt;span&gt;&#x27;x%&#x27;&lt;/span&gt;;&lt;br/&gt;explain select tname from teacher  &lt;span&gt;where&lt;/span&gt; tname like &lt;span&gt;&#x27;%x%&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.41430192962542567&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JNfe5NcuJicsZXiaj3mKR159vg5Ltw2UWRGGNEZDeIID2hh4vyG0fBmria61gxad1EKS9kX7LbZGwDsJr7ONCJK6w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;881&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;结论如下：&lt;/strong&gt; like尽量不要使用类似&quot;%x%&quot;情况，但是可以使用&quot;x%&quot;情况。如果非使用 &quot;%x%&quot;情况，需要使用索引覆盖。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;⑦ 尽量不要使用类型转换（显示、隐式），否则索引失效&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;explain select * from teacher &lt;span&gt;where&lt;/span&gt; tname = &lt;span&gt;&#x27;abc&#x27;&lt;/span&gt; ;&lt;br/&gt;explain select * from teacher &lt;span&gt;where&lt;/span&gt; tname = 123 ;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.2997512437810945&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JNfe5NcuJicsZXiaj3mKR159vg5Ltw2UWR5icL4gxKcdnjsRhS7o1XiaxnHw1oNvfT3BZN6WtKib2Gia3T8klicowCiaHg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;804&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;⑧ 尽量不要使用or，否则索引失效&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;explain select * from teacher &lt;span&gt;where&lt;/span&gt; tname =&lt;span&gt;&#x27;&#x27;&lt;/span&gt; and tcid &amp;gt;1 ;&lt;br/&gt;explain select * from teacher &lt;span&gt;where&lt;/span&gt; tname =&lt;span&gt;&#x27;&#x27;&lt;/span&gt; or tcid &amp;gt;1 ;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.27303370786516856&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JNfe5NcuJicsZXiaj3mKR159vg5Ltw2UWRQyd2nmE6WPKdkWFBnoQ729Vbraj5gcRgM3pFIicicv7Rg1SPgSj1zcsg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;890&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;注意：or很猛，会让自身索引和左右两侧的索引都失效。&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;8、一些其他的优化方法&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;1）exists和in的优化&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果主查询的数据集大，则使用i关键字，效率高。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果子查询的数据集大，则使用exist关键字,效率高。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;select ..from table &lt;span&gt;where&lt;/span&gt; exist (子查询) ;&lt;br/&gt;select ..from table &lt;span&gt;where&lt;/span&gt; 字段 &lt;span&gt;in&lt;/span&gt;  (子查询) ;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;2）order by优化&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;IO就是访问硬盘文件的次数&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;using filesort 有两种算法：双路排序、单路排序（根据IO的次数）&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;MySQL4.1之前默认使用双路排序；双路：扫描2次磁盘(1：从磁盘读取排序字段,对排序字段进行排序(在buffer中进行的排序)2：扫描其他字段)&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;MySQL4.1之后默认使用单路排序：只读取一次（全部字段），在buffer中进行排序。但种单路排序会有一定的隐患(不一定真的是“单路/1次IO”，有可能多次IO)。原因：如果数据量特别大，则无法将所有字段的数据一次性读取完毕，因此会进行“分片读取、多次读取”。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;注意：单路排序 比双路排序 会占用更多的buffer。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;单路排序在使用时，如果数据大，可以考虑调大buffer的容量大小：&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;# 不一定真的是“单路/1次IO”，有可能多次IO&lt;/span&gt;&lt;br/&gt;&lt;span&gt;set&lt;/span&gt; max_length_for_sort_data = 1024 &lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果max_length_for_sort_data值太低，则mysql会自动从 单路-&amp;gt;双路(太低：需要排序的列的总大小超过了max_length_for_sort_data定义的字节数)&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;① 提高order by查询的策略：&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;选择使用单路、双路 ；调整buffer的容量大小&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;避免使用select * …（select后面写所有字段，也比写*效率高）&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;复合索引，不要跨列使用 ，避免using filesort保证全部的排序字段，排序的一致性（都是升序或降序）&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;篇幅很长，内容较多，建议收藏。&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>3b793c90d3f61770a9fafe66de780bbb</guid>
<title>声网开发者创业讲堂丨第 5 期：技术创业者如何做好技术团队管理？</title>
<link>https://toutiao.io/k/peycpb0</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;event-intro tab-content&quot; id=&quot;eventContentAreaMain&quot;&gt;&amp;#13;
                    &amp;#13;
&amp;#13;
                    &lt;div class=&quot;  &quot; id=&quot;event_desc_page&quot;&gt;&amp;#13;
                        &lt;p ql-global-para=&quot;true&quot; line=&quot;Sl5P&quot; class=&quot;ql-align-justify ql-long-10306337&quot; linespacing=&quot;200&quot;&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;span class=&quot;ql-author-7400209&quot; ql-global=&quot;true&quot;&gt;对一家科技公司来说，技术团队非常重要，担负着公司产品研发和保障业务的重大使命。技术团队的建设和管理更是非常重要的，一个好的团队不会自然而然的生成，需要做好管理才能让团队高效运作起来。技术工作看似一个纯代码、易量化、好考核的工作，但实际上非常需要技术人员保持创新精神，很难做到精确管理。那么怎样才能成为一个优秀的技术团队领导者，做好技术团队的&lt;/span&gt;&lt;span class=&quot;ql-author-6873529&quot; ql-global=&quot;true&quot;&gt;管理&lt;/span&gt;&lt;span class=&quot;ql-author-7400209&quot; ql-global=&quot;true&quot;&gt;？&lt;/span&gt;&lt;span&gt;&lt;span data-docs-delta=&quot;[[20,&amp;quot;对一家科技公司来说，技术团队非常重要，担负着公司产品研发和保障业务的重大使命。技术团队的建设和管理更是非常重要的，一个好的团队不会自然而然的生成，需要做好管理才能让团队高效运作起来。技术工作看似一个纯代码、易量化、好考核的工作，但实际上非常需要技术人员保持创新精神，很难做到精确管理。那么怎样才能成为一个优秀的技术团队领导者，做好技术团队的管理？&amp;quot;],[20,&amp;quot;\n&amp;quot;,&amp;quot;24:\&amp;quot;PcsK\&amp;quot;|7:3|direction:\&amp;quot;ltr\&amp;quot;|linespacing:\&amp;quot;150\&amp;quot;&amp;quot;],[20,&amp;quot;\n&amp;quot;,&amp;quot;24:\&amp;quot;WuFJ\&amp;quot;|7:3|direction:\&amp;quot;ltr\&amp;quot;|linespacing:\&amp;quot;150\&amp;quot;&amp;quot;],[20,&amp;quot;9 月 24 日下午，声网开发者创业讲堂 • 第 5 期将以「技术创业者如何做好技术团队管理？」为题，邀请杨帆、翟佳、史海峰三位资深的技术专家为大家带来精彩的分享。&amp;quot;]]&quot; data-copy-origin=&quot;https://shimo.im&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p ql-global-para=&quot;true&quot; line=&quot;WuFJ&quot; class=&quot;ql-align-justify ql-direction-ltr&quot; linespacing=&quot;150&quot; ql-global=&quot;true&quot;&gt; &lt;/p&gt;&lt;p ql-global-para=&quot;true&quot; line=&quot;30GJ&quot; class=&quot;ql-align-justify ql-direction-ltr ql-long-7400209&quot; linespacing=&quot;150&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;​9 月 24 日下午&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;，声网开发者创业讲堂 • 第 5 期将以「&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;技术创业者如何做好技术团队管理？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;」为题，&lt;/span&gt;&lt;span&gt;邀请&lt;span&gt;&lt;span&gt;翟佳、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;杨帆、史海峰&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;三位资深的技术专家为大家带来精彩的分享。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p ql-global-para=&quot;true&quot; line=&quot;Sl5P&quot; class=&quot;ql-align-justify ql-long-10306337&quot; linespacing=&quot;200&quot;&gt;&lt;span/&gt;&lt;/p&gt;&lt;h4 data-foldable-wrapper=&quot;&quot; class=&quot;ql-long-10306337&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;时间地点&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/h4&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;活动时间：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;9 月 &lt;/span&gt;&lt;span&gt;24 日（星期六）&lt;/span&gt;&lt;span&gt; 14:00——16:30&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;活动地点：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;线上直播&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;h4 data-foldable-wrapper=&quot;&quot; class=&quot;ql-long-10306337&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;活动流程&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/h4&gt;&lt;p&gt;&lt;strong&gt; &lt;/strong&gt;&lt;span&gt;14:00-14:10 开场&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; 14:10-14:50 《StreamNative 组织构建之路》翟佳 StreamNative 联合创始人，Apache Pulsar PMC 成员&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; 14:50-15:30 《拆解研发流程，做好探索型项目的过程管理》杨帆（Danney） CODE.FUN 创始人 &amp;amp; CEO&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; 15:30-16:10《 成为技术领导者》史海峰 公众号“IT民工闲话作者”&amp;amp;前贝壳金服小微企业生态CTO&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; 16:10-16:30 抽奖&lt;/span&gt;&lt;/p&gt;&lt;p helvetica=&quot;&quot; hiragino=&quot;&quot; sans=&quot;&quot; noto=&quot;&quot; cjk=&quot;&quot; microsoft=&quot;&quot; apple=&quot;&quot; color=&quot;&quot; segoe=&quot;&quot; ui=&quot;&quot; text-align:=&quot;&quot; text-size-adjust:=&quot;&quot; letter-spacing:=&quot;&quot; line-height:=&quot;&quot; span=&quot;&quot; strong=&quot;&quot; p=&quot;&quot;&gt;​&lt;/p&gt;&lt;h4 data-foldable-wrapper=&quot;&quot; class=&quot;ql-long-10306337&quot;&gt;&lt;span ql-global=&quot;true&quot; class=&quot;ql-author-10306337&quot;/&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section microsoft=&quot;&quot; line-height:=&quot;&quot; border:=&quot;&quot; text-align:=&quot;&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;嘉宾一&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p ql-global-para=&quot;true&quot; line=&quot;5mYi&quot; class=&quot;ql-align-justify ql-long-10306337&quot; linespacing=&quot;200&quot;&gt;&lt;img src=&quot;http://cdn.huodongxing.com/file/ue/20150907/11EC6A5AE18CC6F72FD13133F73B484844/30304624787715078.jpg&quot; title=&quot;翟佳.jpg&quot; alt=&quot;翟佳.jpg&quot;/&gt;&lt;/p&gt;&lt;p ql-global-para=&quot;true&quot; line=&quot;5mYi&quot; class=&quot;ql-align-justify ql-long-10306337&quot; linespacing=&quot;200&quot;&gt;&lt;span class=&quot;ql-author-7400209 ql-font-microsoftyahei&quot; ql-global=&quot;true&quot; microsoft=&quot;&quot;/&gt;&lt;/p&gt;&lt;p ql-global-para=&quot;true&quot; line=&quot;M81Y&quot; class=&quot;ql-align-justify ql-long-10306337&quot; linespacing=&quot;200&quot;&gt;&lt;strong class=&quot;ql-author-7400209 ql-font-microsoftyahei&quot; ql-global=&quot;true&quot; microsoft=&quot;&quot;&gt;翟佳，StreamNative 联合创始人，Apache Pulsar PMC 成员&lt;/strong&gt;&lt;/p&gt;&lt;p ql-global-para=&quot;true&quot; line=&quot;M81Y&quot; class=&quot;ql-align-justify ql-long-10306337&quot; linespacing=&quot;200&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;分享主题&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p ql-global-para=&quot;true&quot; line=&quot;M81Y&quot; class=&quot;ql-align-justify ql-long-10306337&quot; linespacing=&quot;200&quot;&gt;&lt;strong class=&quot;ql-author-7400209&quot; ql-global=&quot;true&quot;&gt;StreamNative 组织构建之路&lt;/strong&gt;&lt;/p&gt;&lt;p ql-global-para=&quot;true&quot; line=&quot;5mYi&quot; class=&quot;ql-align-justify ql-long-10306337&quot; linespacing=&quot;200&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span ql-global=&quot;true&quot; class=&quot;ql-author-10306337&quot;&gt;&lt;span/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;个人简介：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p ql-global-para=&quot;true&quot; line=&quot;5mYi&quot; class=&quot;ql-align-justify ql-long-10306337&quot; linespacing=&quot;200&quot;&gt;&lt;span&gt;StreamNative 联合创始人，Apache Pulsar PMC 成员，2010年硕士毕业于中国科学院计算技术研究所。毕业后加入EMC，从事分布式、文件系统、流存储相关的设计和开发。之后联合创立 StreamNative。一直从事开源项目Apache BookKeeper和Apache Pulsar的设计开发和社区运营工作。他在分布式、存储、消息等领域有深厚的积累和经验，在工作过程中，在相关领域先后获得中美专利10余项。&lt;/span&gt;&lt;/p&gt;&lt;p ql-global-para=&quot;true&quot; line=&quot;Ji92&quot; class=&quot;ql-align-justify ql-long-10306337&quot; linespacing=&quot;200&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;分享简介：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p ql-global-para=&quot;true&quot; line=&quot;LCNh&quot; linespacing=&quot;200&quot; class=&quot;ql-long-10306337&quot;&gt;&lt;span&gt;​从 2018 年 9 月起到今日，Apache Pulsar 毕业成为 Apache 软件基金会顶级项目已近 4 年。作为下一代云原生消息流系统，Apache Pulsar 被认为是云原生时代实时消息流传输、存储和计算的最佳解决方案。&lt;/span&gt;&lt;span&gt;在近 4 年中，Apache Pulsar 项目的 Star 数和贡献者数量飞速增长，目前已达 11K Star、全球贡献者突破 560 名；团队正式成员也已达到 80+ 人，是一家全员远程、跨时区办公的公司。在本次分享中，演讲者将结合项目的发展历程，分享开源商业化项目在团队组织构建与技术管理方面的实践。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/h4&gt;&lt;p&gt;&lt;/p&gt;&lt;h4 data-foldable-wrapper=&quot;&quot; class=&quot;ql-long-10306337&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span microsoft=&quot;&quot; font-size:=&quot;&quot; font-weight:=&quot;&quot; letter-spacing:=&quot;&quot; text-align:=&quot;&quot; text-size-adjust:=&quot;&quot; background-color:=&quot;&quot;/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;section helvetica=&quot;&quot; pingfang=&quot;&quot; hiragino=&quot;&quot; sans=&quot;&quot; microsoft=&quot;&quot; yahei=&quot;&quot; font-size:=&quot;&quot; letter-spacing:=&quot;&quot; text-align:=&quot;&quot; white-space:=&quot;&quot; text-size-adjust:=&quot;&quot; section=&quot;&quot; line-height:=&quot;&quot; border:=&quot;&quot; span=&quot;&quot; p=&quot;&quot; img=&quot;&quot; src=&quot;http://cdn.huodongxing.com/file/ue/20150907/11EC6A5AE18CC6F72FD13133F73B484844/30294520688364826.jpg&quot; title=&quot;讲师-3.jpg&quot; alt=&quot;讲师-3.jpg&quot; ql-global-para=&quot;true&quot; line=&quot;92I0&quot; class=&quot;ql-author-10306337&quot; linespacing=&quot;200&quot; strong=&quot;&quot; ql-global=&quot;true&quot; h4=&quot;&quot; data-foldable-wrapper=&quot;&quot;&gt;&lt;section microsoft=&quot;&quot; line-height:=&quot;&quot; border:=&quot;&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;嘉宾二&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/h4&gt;&lt;p&gt;&lt;/p&gt;&lt;p ql-global-para=&quot;true&quot; line=&quot;5mYi&quot; class=&quot;ql-align-justify ql-long-10306337&quot; linespacing=&quot;200&quot;&gt;&lt;img src=&quot;http://cdn.huodongxing.com/file/ue/20150907/11EC6A5AE18CC6F72FD13133F73B484844/30474624791375188.jpg&quot; title=&quot;杨帆.jpg&quot; alt=&quot;杨帆.jpg&quot;/&gt;&lt;/p&gt;&lt;p ql-global-para=&quot;true&quot; line=&quot;5mYi&quot; class=&quot;ql-align-justify ql-long-10306337&quot; linespacing=&quot;200&quot;&gt;&lt;strong class=&quot;ql-author-7400209 ql-font-microsoftyahei&quot; ql-global=&quot;true&quot; microsoft=&quot;&quot;&gt;&lt;span data-docs-delta=&quot;[[20,&amp;quot;杨帆 （Danney）&amp;quot;,&amp;quot;8:1&amp;quot;],[20,&amp;quot;\n&amp;quot;,&amp;quot;24:\&amp;quot;CnsT\&amp;quot;|7:1|direction:\&amp;quot;ltr\&amp;quot;|linespacing:\&amp;quot;150\&amp;quot;&amp;quot;],[20,&amp;quot;CODE.FUN 创始人 &amp;amp; CEO&amp;quot;,&amp;quot;8:1&amp;quot;]]&quot; data-copy-origin=&quot;https://shimo.im&quot;&gt;&lt;strong class=&quot;ql-author-7400209&quot; ql-global=&quot;true&quot;&gt;​杨帆 （Danney），&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;strong class=&quot;ql-author-7400209&quot; ql-global=&quot;true&quot;&gt;CODE.FUN 创始人 &amp;amp; CEO&lt;/strong&gt;&lt;/p&gt;&lt;p ql-global-para=&quot;true&quot; line=&quot;5mYi&quot; class=&quot;ql-align-justify ql-long-10306337&quot; linespacing=&quot;200&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;分享主题&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p ql-global-para=&quot;true&quot; line=&quot;5mYi&quot; class=&quot;ql-align-justify ql-long-10306337&quot; linespacing=&quot;200&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;strong ql-global=&quot;true&quot; class=&quot;ql-author-10306337&quot;&gt;&lt;span/&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p ql-global-para=&quot;true&quot; line=&quot;ezi5&quot; linespacing=&quot;200&quot; class=&quot;ql-long-10306337&quot;&gt;&lt;strong class=&quot;ql-author-7400209 ql-font-microsoftyahei&quot; ql-global=&quot;true&quot; microsoft=&quot;&quot;&gt;拆解研发流程，做好探索型项目的过程管理&lt;/strong&gt;&lt;/p&gt;&lt;p ql-global-para=&quot;true&quot; line=&quot;5mYi&quot; class=&quot;ql-align-justify ql-long-10306337&quot; linespacing=&quot;200&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;strong ql-global=&quot;true&quot; class=&quot;ql-author-10306337&quot;&gt;&lt;span/&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;个人简介：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p ql-global-para=&quot;true&quot; line=&quot;5mYi&quot; class=&quot;ql-align-justify ql-long-10306337&quot; linespacing=&quot;200&quot;&gt;&lt;span&gt;&lt;span&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span&gt;CODE.FUN 创始人 &amp;amp; CEO，前腾讯 QQ 团队高级工程师、Win8QQ Team Leader，TGO 鲲鹏会成员，是一个技术爱好狂热者。2017 年正式开始创业，希望通过 AI 、编译器等相关技术，在跨平台、代码生成器、低代码等多种解决方案的融合下，打造下一代软件工程解决方案。 经过近两年的技术打磨和算法改进，推出产品 CodeFun，通过 UI 设计稿一键智能生成源代码，可让研发效率至少提升 500% 以上。&lt;/span&gt;&lt;/p&gt;&lt;p ql-global-para=&quot;true&quot; line=&quot;Ji92&quot; class=&quot;ql-align-justify ql-long-10306337&quot; linespacing=&quot;200&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;分享简介：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p ql-global-para=&quot;true&quot; line=&quot;LCNh&quot; linespacing=&quot;200&quot; class=&quot;ql-long-10306337&quot;&gt;&lt;span&gt;在面对项目研发中各类未知问题挑战的时候，我尝尝在反思一个问题：功能性产品可以拆解工作量、可以堆人力，但当我们面对一个巨大又难拆解的探索型需求/课题/业务时，会不会感觉迭代永无尽头 ？传统的研发流程是否还继续适用 ？&lt;/span&gt;&lt;/p&gt;&lt;p ql-global-para=&quot;true&quot; line=&quot;LCNh&quot; linespacing=&quot;200&quot; class=&quot;ql-long-10306337&quot;&gt;&lt;span&gt;在 CODE.FUN 近三年的研发过程中，我们尝试在不同的节点，不断的重塑团队，寻找新的团队合作模式，逐步探索出了一套更适合我们自己的协作方式，从而避免大家迷失在迭代的循环往复中，造成研发资源的浪费，这正是今天想要跟大家分享的话题。&lt;/span&gt;&lt;/p&gt;&lt;p ql-global-para=&quot;true&quot; line=&quot;LCNh&quot; linespacing=&quot;200&quot; class=&quot;ql-long-10306337&quot;&gt;&lt;span microsoft=&quot;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h4 data-foldable-wrapper=&quot;&quot; class=&quot;ql-long-10306337&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span microsoft=&quot;&quot; font-size:=&quot;&quot; font-weight:=&quot;&quot; letter-spacing:=&quot;&quot; text-align:=&quot;&quot; text-size-adjust:=&quot;&quot; background-color:=&quot;&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;section helvetica=&quot;&quot; pingfang=&quot;&quot; hiragino=&quot;&quot; sans=&quot;&quot; microsoft=&quot;&quot; yahei=&quot;&quot; font-size:=&quot;&quot; letter-spacing:=&quot;&quot; text-align:=&quot;&quot; white-space:=&quot;&quot; text-size-adjust:=&quot;&quot; section=&quot;&quot; line-height:=&quot;&quot; border:=&quot;&quot; span=&quot;&quot; p=&quot;&quot; img=&quot;&quot; src=&quot;http://cdn.huodongxing.com/file/ue/20150907/11EC6A5AE18CC6F72FD13133F73B484844/30294520688364826.jpg&quot; title=&quot;讲师-3.jpg&quot; alt=&quot;讲师-3.jpg&quot; ql-global-para=&quot;true&quot; line=&quot;92I0&quot; class=&quot;ql-author-10306337&quot; linespacing=&quot;200&quot; strong=&quot;&quot; ql-global=&quot;true&quot; h4=&quot;&quot; data-foldable-wrapper=&quot;&quot;&gt;&lt;section microsoft=&quot;&quot; line-height:=&quot;&quot; border:=&quot;&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;嘉宾三&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/h4&gt;&lt;p&gt;&lt;/p&gt;&lt;p ql-global-para=&quot;true&quot; line=&quot;LCNh&quot; linespacing=&quot;200&quot; class=&quot;ql-long-10306337&quot;&gt;&lt;span microsoft=&quot;&quot;/&gt;&lt;/p&gt;&lt;p ql-global-para=&quot;true&quot; line=&quot;xXLn&quot; class=&quot;ql-align-justify ql-long-10306337&quot; linespacing=&quot;200&quot;&gt;&lt;span class=&quot;ql-author-7400209&quot; ql-global=&quot;true&quot;&gt;&lt;img src=&quot;http://cdn.huodongxing.com/file/ue/20150907/11EC6A5AE18CC6F72FD13133F73B484844/30914624791615202.jpg&quot; title=&quot;史海峰.jpg&quot; alt=&quot;史海峰.jpg&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p ql-global-para=&quot;true&quot; line=&quot;xXLn&quot; class=&quot;ql-align-justify ql-long-10306337&quot; linespacing=&quot;200&quot;&gt;&lt;span class=&quot;ql-author-7400209&quot; ql-global=&quot;true&quot;&gt;&lt;span data-docs-delta=&quot;[[20,&amp;quot;史海峰&amp;quot;,&amp;quot;8:1&amp;quot;],[20,&amp;quot;\n&amp;quot;,&amp;quot;24:\&amp;quot;9bpS\&amp;quot;|7:1|direction:\&amp;quot;ltr\&amp;quot;|linespacing:\&amp;quot;150\&amp;quot;&amp;quot;],[20,&amp;quot;公众号“IT民工闲话作者”， 前贝壳金服小微企业生态CTO&amp;quot;,&amp;quot;8:1&amp;quot;]]&quot; data-copy-origin=&quot;https://shimo.im&quot;&gt;&lt;strong class=&quot;ql-author-7400209&quot; ql-global=&quot;true&quot;&gt;史海峰，&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;strong class=&quot;ql-author-7400209&quot; ql-global=&quot;true&quot;&gt;公众号“IT民工闲话作者”， 前贝壳金服小微企业生态CTO&lt;/strong&gt;&lt;/p&gt;&lt;p ql-global-para=&quot;true&quot; line=&quot;xXLn&quot; class=&quot;ql-align-justify ql-long-10306337&quot; linespacing=&quot;200&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;分享主题&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p ql-global-para=&quot;true&quot; line=&quot;xXLn&quot; class=&quot;ql-align-justify ql-long-10306337&quot; linespacing=&quot;200&quot;&gt;&lt;span&gt;成为技术领导者&lt;/span&gt;&lt;/p&gt;&lt;p ql-global-para=&quot;true&quot; line=&quot;Sl5P&quot; class=&quot;ql-align-justify ql-long-10306337&quot; linespacing=&quot;200&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;个人简介：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p ql-global-para=&quot;true&quot; line=&quot;Sl5P&quot; class=&quot;ql-align-justify ql-long-10306337&quot; linespacing=&quot;200&quot;&gt;&lt;span&gt;曾在神州数码、亚信联创长期从事电信行业业务支撑系统集成工作，参与中国移动、中国联通多个项目，具有丰富的大型业务系统研发实施经验。曾在当当负责总体架构规划、技术规范制定和技术预研推广，善于把握复杂业务需求，提出创新性解决方案，参与多个重点项目的方案设计，在项目中对系统架构进行持续改造优化。负责技术委员会组织管理工作，发掘最佳实践、推动技术革新、开源产品，组织内外部技术交流。曾负责饿了么技术创新部产品研发团队，完成多个创新性业务项目及技术产品。曾在贝壳金服负责小微企业生态金融服务产品规划、技术团队管理、系统建设。多次参加业界技术大会，包括ArchSummit、QCon、SACC、TOP100、SDCC、GITC、MPD、GIAC、CSDI等，任讲师及出品人，不定期更新自媒体微信公众号“IT民工闲话”。&lt;/span&gt;&lt;/p&gt;&lt;p ql-global-para=&quot;true&quot; line=&quot;Sl5P&quot; class=&quot;ql-align-justify ql-long-10306337&quot; linespacing=&quot;200&quot;&gt;&lt;span&gt;&lt;span/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p ql-global-para=&quot;true&quot; line=&quot;Los9&quot; class=&quot;ql-align-justify ql-long-10306337&quot; linespacing=&quot;200&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;分享简介：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p ql-global-para=&quot;true&quot; line=&quot;Sl5P&quot; class=&quot;ql-align-justify ql-long-10306337&quot; linespacing=&quot;200&quot;&gt;&lt;span&gt;&lt;span&gt;多数技术管理者都是从技术人员转型到管理岗位的，缺乏管理的系统知识学习和实践，更倾向于简单的二元认知，凭自我感觉出发带领团队，自然会遇到很多挑战，什么人适合做领导者，怎样转换思维，做领导者需要有哪些基本动作，又需要怎样提升，本次分享为管理者提供最基本的管理方法，便于应用，突破自我。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p ql-global-para=&quot;true&quot; line=&quot;Los9&quot; class=&quot;ql-align-justify ql-long-10306337&quot; linespacing=&quot;200&quot;&gt;&lt;/p&gt;&lt;p ql-global-para=&quot;true&quot; line=&quot;Los9&quot; class=&quot;ql-align-justify ql-long-10306337&quot; linespacing=&quot;200&quot;&gt;&lt;span/&gt;&lt;/p&gt;&lt;p ql-global-para=&quot;true&quot; line=&quot;LCNh&quot; linespacing=&quot;200&quot; class=&quot;ql-long-10306337&quot;&gt;&lt;/p&gt;&lt;h4 data-foldable-wrapper=&quot;&quot; class=&quot;ql-long-10306337&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;活动社群&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/h4&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;当下是一个人人可创业的时代，对技术人来说，更是一个创业友好的时代。如果你懂技术，会比其他人更容易将自己的创业想法和梦想付诸实践。但创业意味着要从 0 到 1，意味着要持续的创造和创新，意味着创业者和团队需要不断的成长和突破。只有这样才能打造出满足市场需求的、有价值的产品，逐渐形成企业的优势和壁垒，成长为一家成熟的企业。声网关注有创新能力、开发能力和创业意向的开发者，并希望为开发者提供相应的支持和服务。为此，我们推出了“声网开发者创业讲堂”系列创业分享，以便为大家在成长和创业路上提供更多的帮助。欢迎扫码申请加入我们的创业开发者社群！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://cdn.huodongxing.com/file/ue/20150907/11EC6A5AE18CC6F72FD13133F73B484844/30544638663025948.jpg&quot; title=&quot;200*200.jpeg&quot; alt=&quot;200*200.jpeg&quot;/&gt;&lt;/p&gt;&lt;p ql-global-para=&quot;true&quot; line=&quot;LCNh&quot; linespacing=&quot;200&quot; class=&quot;ql-long-10306337&quot;&gt;&lt;/p&gt;&lt;h4 data-foldable-wrapper=&quot;&quot; class=&quot;ql-long-10306337&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;活动福利&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;报名直播参与活动，即有机会领取&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;精美声网周边&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;，心动不如行动，赶快报名本次活动吧！&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;img src=&quot;http://cdn.huodongxing.com/file/ue/20150907/11EC6A5AE18CC6F72FD13133F73B484844/30444624798315422.jpg&quot; title=&quot;礼物图片_副本.jpeg&quot; alt=&quot;礼物图片_副本.jpeg&quot;/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;主办方&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;img src=&quot;http://cdn.huodongxing.com/file/ue/20150907/11EC6A5AE18CC6F72FD13133F73B484844/30674624794715301.png&quot; title=&quot;白色底蓝色logo.png&quot; alt=&quot;白色底蓝色logo.png&quot;/&gt;&lt;/p&gt;&lt;p helvetica=&quot;&quot; pingfang=&quot;&quot; hiragino=&quot;&quot; sans=&quot;&quot; microsoft=&quot;&quot; yahei=&quot;&quot; font-size:=&quot;&quot; text-size-adjust:=&quot;&quot; letter-spacing:=&quot;&quot; line-height:=&quot;&quot; text-align:=&quot;&quot; img=&quot;&quot; src=&quot;http://cdn.huodongxing.com/file/ue/20150907/11EC6A5AE18CC6F72FD13133F73B484844/30264520732955891.jpg&quot; title=&quot;联合主办.jpeg&quot; alt=&quot;联合主办.jpeg&quot; section=&quot;&quot; powered-by=&quot;xiumi.us&quot; white-space:=&quot;&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;合作伙伴&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;img src=&quot;http://cdn.huodongxing.com/file/ue/20150907/11EC6A5AE18CC6F72FD13133F73B484844/30864624794485297.jpg&quot; title=&quot;合作伙伴_副本.jpeg&quot; alt=&quot;合作伙伴_副本.jpeg&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/p&gt;&lt;p/&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&amp;#13;
                    &lt;/div&gt;&amp;#13;
                    &lt;p class=&quot;clear&quot;&gt;&amp;#13;
                    &lt;/p&gt;&amp;#13;
                    &amp;#13;
                    &amp;#13;
                &lt;/div&gt;&amp;#13;
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>b920dc76932b689ea47f4dcd4f78055b</guid>
<title>字节二面：Redis 的大 Key 对持久化有什么影响？</title>
<link>https://toutiao.io/k/dwzvr51</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7620370370370371&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/J0g14CUwaZclQSAM41A1ZnFukibKNKGiapfQQZJOKziaehj1pZzNHTicFkDKBMhTBzjZjys2GHM2nWd3LWt5SA7y0A/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;作者：小林coding&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;八股文网站：&lt;/span&gt;&lt;span&gt;xiaolincoding.com&lt;/span&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大家好，我是小林。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上周有位读者字节一二面时，被问到：&lt;strong&gt;Redis 的大 Key 对持久化有什么影响？&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5018518518518519&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/J0g14CUwaZfyKst8QpumWAlMcdhiarA6wmjRbACJxIibSdOuUIbXMISUSicP6kHv5LO88Ovh2x44N2OJyLWibvteCw/640?wx_fmt=jpeg&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Redis 的持久化方式有两种：AOF 日志和 RDB 快照。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以接下来，针对这两种持久化方式具体分析分析。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;大 Key 对 AOF 日志的影响&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;先说说 AOF 日志三种写回磁盘的策略&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Redis 提供了 3 种 AOF 日志写回硬盘的策略，分别是：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;Always，这个单词的意思是「总是」，所以它的意思是每次写操作命令执行完后，同步将 AOF 日志数据写回硬盘；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Everysec，这个单词的意思是「每秒」，所以它的意思是每次写操作命令执行完后，先将命令写入到 AOF 文件的内核缓冲区，然后每隔一秒将缓冲区里的内容写回到硬盘；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;No，意味着不由 Redis 控制写回硬盘的时机，转交给操作系统控制写回的时机，也就是每次写操作命令执行完后，先将命令写入到 AOF 文件的内核缓冲区，再由操作系统决定何时将缓冲区内容写回硬盘。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这三种策略只是在控制 fsync() 函数的调用时机。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当应用程序向文件写入数据时，内核通常先将数据复制到内核缓冲区中，然后排入队列，然后由内核决定何时写入硬盘。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.2277039848197344&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/J0g14CUwaZfyKst8QpumWAlMcdhiarA6wZEMQBhfd2P0ByI0EUMkFmKD70RlxHia2wlNpRw2xCRKeHibibbxjxc1nA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;527&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果想要应用程序向文件写入数据后，能立马将数据同步到硬盘，就可以调用 fsync() 函数，这样内核就会将内核缓冲区的数据直接写入到硬盘，等到硬盘写操作完成后，该函数才会返回。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;Always 策略就是每次写入 AOF 文件数据后，就执行 fsync() 函数；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Everysec 策略就会创建一个异步任务来执行 fsync() 函数；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;No 策略就是永不执行 fsync() 函数;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;分别说说这三种策略，在持久化大 Key 的时候，会影响什么？&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在使用 Always 策略的时候，主线程在执行完命令后，会把数据写入到 AOF 日志文件，然后会调用  fsync() 函数，将内核缓冲区的数据直接写入到硬盘，等到硬盘写操作完成后，该函数才会返回。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;当使用 Always 策略的时候，如果写入是一个大 Key，主线程在执行 fsync() 函数的时候，阻塞的时间会比较久，因为当写入的数据量很大的时候，数据同步到硬盘这个过程是很耗时的&lt;/strong&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当使用 Everysec 策略的时候，由于是异步执行 fsync() 函数，所以大 Key 持久化的过程（数据同步磁盘）不会影响主线程。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当使用 No 策略的时候，由于永不执行 fsync() 函数，所以大 Key 持久化的过程不会影响主线程。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;大 Key 对 AOF 重写和 RDB 的影响&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当 AOF 日志写入了很多的大 Key，AOF 日志文件的大小会很大，那么很快就会触发 &lt;strong&gt;AOF 重写机制&lt;/strong&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;AOF 重写机制和 RDB 快照（bgsave 命令）的过程，都会分别通过 &lt;code&gt;fork()&lt;/code&gt; 函数创建一个子进程来处理任务。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在创建子进程的过程中，操作系统会把父进程的「页表」复制一份给子进程，这个页表记录着虚拟地址和物理地址映射关系，而不会复制物理内存，也就是说，两者的虚拟空间不同，但其对应的物理空间是同一个。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.91343669250646&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/J0g14CUwaZfyKst8QpumWAlMcdhiarA6w9nuL1LxHCoUBMnUHOer2WQicZp7jbgzgxWIrXJJ66iaKZMY8zLC0PQQg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;774&quot;/&gt;这样一来，子进程就共享了父进程的物理内存数据了，这样能够节约物理内存资源，页表对应的页表项的属性会标记该物理内存的权限为&lt;strong&gt;只读&lt;/strong&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;随着 Redis 存在越来越多的大 Key，那么 Redis 就会占用很多内存，对应的页表就会越大。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在通过  &lt;code&gt;fork()&lt;/code&gt;  函数创建子进程的时候，虽然不会复制父进程的物理内存，但是&lt;strong&gt;内核会把父进程的页表复制一份给子进程，如果页表很大，那么这个复制过程是会很耗时的，那么在执行 fork 函数的时候就会发生阻塞现象&lt;/strong&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;而且，fork 函数是由 Redis 主线程调用的，如果 fork 函数发生阻塞，那么意味着就会阻塞 Redis 主线程。由于 Redis 执行命令是在主线程处理的，所以当 Redis 主线程发生阻塞，就无法处理后续客户端发来的命令。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们可以执行 &lt;code&gt;info &lt;/code&gt; 命令获取到 latest_fork_usec 指标，表示 Redis 最近一次 fork 操作耗时。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;# 最近一次 fork 操作耗时&lt;/span&gt;&lt;br/&gt;latest_fork_usec:315&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果 fork 耗时很大，比如超过1秒，则需要做出优化调整：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;单个实例的内存占用控制在 10 GB 以下，这样 fork 函数就能很快返回。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果 Redis 只是当作纯缓存使用，不关心 Redis 数据安全性问题，可以考虑关闭 AOF 和 AOF 重写，这样就不会调用 fork 函数了。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;在主从架构中，要适当调大 repl-backlog-size，避免因为  repl_backlog_buffer 不够大，导致主节点频繁地使用全量同步的方式，全量同步的时候，是会创建 RDB 文件的，也就是会调用 fork 函数。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;那什么时候会发生物理内存的复制呢？&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当父进程或者子进程在向共享内存发起写操作时，CPU 就会触发&lt;strong&gt;缺页中断&lt;/strong&gt;，这个缺页中断是由于违反权限导致的，然后操作系统会在「缺页异常处理函数」里进行物理内存的复制，并重新设置其内存映射关系，将父子进程的内存读写权限设置为可读写，最后才会对内存进行写操作，这个过程被称为「**写时复制(Copy On Write)**」。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7296181630546955&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/J0g14CUwaZfyKst8QpumWAlMcdhiarA6w4bEyvfkg6RrgwX7RUyDDR7IeAsAwBMvJzhVDtQelhibXM1wjicqYHNxQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;969&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;写时复制顾名思义，在发生写操作的时候，操作系统才会去复制物理内存，这样是为了防止 fork 创建子进程时，由于物理内存数据的复制时间过长而导致父进程长时间阻塞的问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果创建完子进程后，&lt;strong&gt;父进程对共享内存中的大 Key 进行了修改，那么内核就会发生写时复制，会把物理内存复制一份，由于大 Key 占用的物理内存是比较大的，那么在复制物理内存这一过程中，也是比较耗时的，于是父进程（主线程）就会发生阻塞&lt;/strong&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以，有两个阶段会导致阻塞父进程：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;创建子进程的途中，由于要复制父进程的页表等数据结构，阻塞的时间跟页表的大小有关，页表越大，阻塞的时间也越长；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;创建完子进程后，如果子进程或者父进程修改了共享数据，就会发生写时复制，这期间会拷贝物理内存，如果内存越大，自然阻塞的时间也越长；&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里额外提一下， 如果 &lt;strong&gt;Linux 开启了内存大页，会影响 Redis 的性能的&lt;/strong&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Linux 内核从 2.6.38 开始支持内存大页机制，该机制支持 2MB 大小的内存页分配，而常规的内存页分配是按 4KB 的粒度来执行的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果采用了内存大页，那么即使客户端请求只修改 100B 的数据，在发生写时复制后，Redis 也需要拷贝 2MB 的大页。相反，如果是常规内存页机制，只用拷贝 4KB。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;两者相比，你可以看到，每次写命令引起的&lt;strong&gt;复制内存页单位放大了 512 倍，会拖慢写操作的执行时间，最终导致 Redis 性能变慢&lt;/strong&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那该怎么办呢？很简单，关闭内存大页（默认是关闭的）。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;禁用方法如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;echo never &amp;gt;  /sys/kernel/mm/transparent_hugepage/enabled&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;总结&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当 AOF 写回策略配置了 Always 策略，如果写入是一个大 Key，主线程在执行 fsync() 函数的时候，阻塞的时间会比较久，因为当写入的数据量很大的时候，数据同步到硬盘这个过程是很耗时的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;AOF 重写机制和 RDB 快照（bgsave 命令）的过程，都会分别通过 &lt;code&gt;fork()&lt;/code&gt; 函数创建一个子进程来处理任务。会有两个阶段会导致阻塞父进程（主线程）：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;创建子进程的途中，由于要复制父进程的页表等数据结构，阻塞的时间跟页表的大小有关，页表越大，阻塞的时间也越长；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;创建完子进程后，如果父进程修改了共享数据中的大 Key，就会发生写时复制，这期间会拷贝物理内存，由于大 Key 占用的物理内存会很大，那么在复制物理内存这一过程，就会比较耗时，所以有可能会阻塞父进程。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;大 key 除了会影响持久化之外，还会有以下的影响。&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;客户端超时阻塞&lt;/span&gt;。由于 Redis 执行命令是单线程处理，然后在操作大 key 时会比较耗时，那么就会阻塞 Redis，从客户端这一视角看，就是很久很久都没有响应。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;引发网络阻塞&lt;/span&gt;。每次获取大 key 产生的网络流量较大，如果一个 key 的大小是 1 MB，每秒访问量为 1000，那么每秒会产生 1000MB 的流量，这对于普通千兆网卡的服务器来说是灾难性的。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;阻塞工作线程&lt;/span&gt;。如果使用 del 删除大 key 时，会阻塞工作线程，这样就没办法处理后续的命令。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;内存分布不均&lt;/span&gt;。集群模型在 slot 分片均匀情况下，会出现数据和查询倾斜情况，部分有大 key 的 Redis 节点占用内存多，QPS 也会比较大。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如何避免大 Key 呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最好在设计阶段，就把大 key 拆分成一个一个小 key。或者，定时检查 Redis 是否存在大 key ，如果该大 key 是可以删除的，不要使用 DEL 命令删除，因为该命令删除过程会阻塞主线程，而是用 unlink 命令（Redis 4.0+）删除大 key，因为该命令的删除过程是异步的，不会阻塞主线程。 &lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;完！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;推荐阅读&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUxODAzNDg4NQ==&amp;amp;mid=2247507000&amp;amp;idx=1&amp;amp;sn=c045101b45dd70ec37f9b81361b09f14&amp;amp;chksm=f98d9892cefa1184ac8e278e468a8a225cd5a6f4c3dfba83ed223c5da69421041961bfb945cc&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;小林的网站上线啦！&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;小林的网站上线啦！&lt;/a&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUxODAzNDg4NQ==&amp;amp;mid=2247518433&amp;amp;idx=2&amp;amp;sn=e78f630c07f4e60fb78999eb3d742e9e&amp;amp;chksm=f98dcc4bcefa455d8ffde9ad6c8da9b3371a401766a55cbee7af11c87be070d823c8d5926aef&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;面试官：Redis 大 key 要如何处理？&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;面试官：Redis 大 key 要如何处理？&lt;/a&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUxODAzNDg4NQ==&amp;amp;mid=2247516196&amp;amp;idx=1&amp;amp;sn=bf62f4349a10d2516b9b1e1ba9a4bde7&amp;amp;chksm=f98dc48ecefa4d98ea178347a93ff4b1a7bf02ff07fbe72975691cf4480f43e772346976cfbb&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;2 万字 + 40 张图 ｜ 攻破 Redis 常见面试题&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;2 万字 + 40 张图 ｜ 攻破 Redis 常见面试题&lt;/a&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUxODAzNDg4NQ==&amp;amp;mid=2247520075&amp;amp;idx=1&amp;amp;sn=3119bcb4f3c2dde7dfa2070f26816eed&amp;amp;chksm=f98dcbe1cefa42f76d1d944898ad1ed12ac645aa41fbc03405e33970eb62e3b2b73ca1de858b&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;美团二面：考我幻读，结果答的不好&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;美团二面：考我幻读，结果答的不好&lt;/a&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mp-common-profile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzUxODAzNDg4NQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/J0g14CUwaZfTwwjfpJhXgIrYMgtVcLhQQBVb02clZfKicbxaibSTNJqXe9Zu8ydiavZKJWJAIhKcnD9hBuKU92JZQ/0?wx_fmt=png&quot; data-nickname=&quot;小林coding&quot; data-alias=&quot;CodingLin&quot; data-signature=&quot;专注图解计算机基础，让天下没有难懂的八股文！刷题网站：xiaolincoding.com&quot; data-from=&quot;0&quot; data-is_biz_ban=&quot;0&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>19b9976ac12d64c32dfd6c72fbed0ac3</guid>
<title>千万千万不要在方法上打断点！太坑了！</title>
<link>https://toutiao.io/k/se8mzu6</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mp-common-profile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;Mzg4NjYyODc4OA==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/J4jTHmo8Xh6qM32ASOtVbXNoiaegrI26qLRw6r6FTI7dZw6TMT7vecvnjd1O8xSsM5MiajIuQZicxSC6KFK8TMpbg/0?wx_fmt=png&quot; data-nickname=&quot;java突击队&quot; data-alias=&quot;&quot; data-signature=&quot;技术经验分享&quot; data-from=&quot;0&quot; data-is_biz_ban=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;你好呀，我是苏三。&lt;span/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我上周遇到了一个莫名其妙的搞心态的问题，浪费了我好几个小时。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;气死我了，拿这几个小时来敲（摸）代（摸）码（鱼）不香吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;主要是最后问题的解决方式也让我特别的无语，越想越气，写篇文章吐槽一下。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;先说结论，也就是标题：&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;在本地以 Debug 模式启动项目的时候，千万不要在方法上打断点！千万不要！&lt;/p&gt;&lt;/blockquote&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ELQw2WCMgt1Fz8zGHDdK9icdf1FueSW3GWymP4X6bdX9HwgBAX9mKzKMT8ZzHRkOFaqHJHD9ySj0Q8qMMuzGyjA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;500&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;首先什么是方法断点呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如这样的，打在方法名这一行的断点：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6193415637860082&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ELQw2WCMgt1Fz8zGHDdK9icdf1FueSW3GlnIbTgcj4QibeO1UzytBCD9sVwLkoUn55pn0vz4MAicJ3IzgVvEUSaBg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;486&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;你点击 IDEA 里面的下面这个图标，View Breakpoints，它会给你弹出一个框。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个弹框里面展示的就是当前项目里面所有的断点，其中有一个复选框，Java Method Breakpoints，就是当前项目里面所有的“方法断点”：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.9679144385026738&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ELQw2WCMgt1Fz8zGHDdK9icdf1FueSW3GCQOMCxfNxRcHUic8qM7CgV720UJ0GlkQkDg55X5I6TgIGPJ0Yqn6JzQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;374&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那么这个玩意到底有什么坑呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;当项目以 Debug 模式启动的时候&lt;/strong&gt;，非常非常非常严重的拖慢启动速度。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;给你看两个截图。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下面这个是我本地的一个非常简单的项目，没有方法断点的时候，只要 1.753 秒就启动完成了：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.32907801418439714&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ELQw2WCMgt1Fz8zGHDdK9icdf1FueSW3GUmZ8aib3OmYhgF5hORdTGAwKS1aSnNU4GHIleZIACRiaicg9DwGPabakg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;705&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但是当我加上一个方法断点的时候，启动时间直接来到了 35.035 秒：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.32538569424964936&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ELQw2WCMgt1Fz8zGHDdK9icdf1FueSW3GzzYj3QlzdibYyBfgWUtgibbwu9WczdXbY0L97LUjuHRXOG8GWFkocDXQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;713&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从 1.7 秒直接飙升到 35 秒，启动时间涨幅 2000%。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;你说遭不遭得住？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;遭不住，对不对。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那么我是怎么踩到这个坑的呢？&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7589743589743589&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ELQw2WCMgt1Fz8zGHDdK9icdf1FueSW3G1IKiaflZGibdwo6v3Pt5cWToVDs8HRoAFDWqBy5n5B9YPGTODYwa2NhQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;195&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一个同事说他项目里面遇到一个匪夷所思的 BUG，想让我帮忙一起看看。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;于是我先把项目拉了下来，然后简单的看了一下代码，准备把项目先在本地跑起来调试一下。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然而半个小时过去了，项目还没起来。我问他：这个项目本地启动时间怎么这么长呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;他答：正常来说半分钟应该就启动起来了呀。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;接着他还给我演示了一下，在他那边确实 30 多秒就启动成功了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;很明显，一样的代码，一个地方启动慢，一个地方启动快，首先怀疑环境问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;于是我准备按照下面的流程走一次。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;检查设置 -&amp;gt; 清空缓存 -&amp;gt; 换workspace -&amp;gt; 重启 -&amp;gt; 换电脑 -&amp;gt;  辞职&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我检查了所有的配置、启动项、网络连接什么的，确保和他本地的环境是一模一样的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这一套操作下来，差不多一小时过去了，并没有找到什么头绪。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但是那个时候我一点都不慌，我还有终极绝招：重启。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;毕竟我的电脑已经好几个月没有关闭过了，重启一下也挺好的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;果然，重启了电脑之后，还是没有任何改变。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;正在焦头烂额之际，同事过来问我啥进度了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我能怎么说？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我只能说：从时间上来说应该解决了，但是实际上我连项目都还没启动成功。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;听到这话，他坐在我的工位，准备帮我看一下。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;半分钟之后，一个神奇的场景出现了，他在我的电脑上直接就把项目启动起来了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一盘问，他并没有以 Debug 的模式启动，而是直接运行的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用脚趾头想也知道，肯定是 Debug 模式在搞事情。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然后基于面向浏览器编程的原则，我现在有了几个关键词：IDEA debug 启动缓慢。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然后发现有很多人遇到了类似的问题，解决方法就是启动的时候取消项目里面的“方法断点”。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但是，遗憾的是，没有大多数文章都是说这样做就好了。但是并没有告诉我为什么这样做就好了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我很想知道为什么会有这个坑，因为我用方法断点用的还是很多的，关键是以前在使用的过程中完全没有注意到还有这个坑。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;“方法断点”还是非常实用的，比如我随便个例子。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;之前写事务相关的文章的时候，提到过这样的一个方法：&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;java.sql.Connection#setAutoCommit&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;setAutoCommit 这个方法有好几个实现类，我也不知道具体会走哪一个：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6629055007052186&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ELQw2WCMgt1Fz8zGHDdK9icdf1FueSW3GxRQwjib3Sue4btvR072HBzjbhrJwyxMFmfUsetBNGYhphWcc6bAVAEw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;709&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以，调试的时候可以在下面这个接口打上一个断点：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.17890772128060264&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ELQw2WCMgt1Fz8zGHDdK9icdf1FueSW3GicfnLPcK54ggica4r2rXLzaYEzsPXL2GopgYrfoOu8x894M7iaC1PxUHg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;531&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然后重启程序，IDEA 会自动帮你判断走那个实现类的：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3550834597875569&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ELQw2WCMgt1Fz8zGHDdK9icdf1FueSW3GoSpT2c0NCfqnApKSvJib4oPEhBAxtEgnON1FAHNuQ0QDnicanzEvYlfA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;659&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但是需要特别说明的是，不是所有的方法断点都会导致启动缓慢的问题。至少在我本地看起来是这样的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当我把方法断点加在 Mapper 的接口里面的时候，能稳定复现这个问题：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6193415637860082&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ELQw2WCMgt1Fz8zGHDdK9icdf1FueSW3GlnIbTgcj4QibeO1UzytBCD9sVwLkoUn55pn0vz4MAicJ3IzgVvEUSaBg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;486&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当把方法断点加在项目的其他方法上的时候，不是必现的，偶尔才会出现这个问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;另外，其实当你以 Debug 模式启动且带有方法断点的时候，IDEA 是会弹出这个提醒，告诉你方法断点会导致 Debug 缓慢的问题：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.21012658227848102&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ELQw2WCMgt1Fz8zGHDdK9icdf1FueSW3GpMXoT1g7wLPsS7QpCbnFzSdAw8tficpWMMticJKmia1Ba5Vk1CelErhaw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;395&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但是，真男人，从不看提醒。反正我是直接就忽略了，根本没有关心弹窗的内容。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;至于为什么会在 Mapper 的接口上打方法断点？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;都怪我手贱，行了吧。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.0466101694915255&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ELQw2WCMgt1Fz8zGHDdK9icdf1FueSW3GibaXyzzJvIdlW5JoI73UmpDeXcjOCVV3cIXeiaWmR6W7nuBBg1JK0QIw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;236&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;到底为什么&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在找答案的过程中，我发现了这个 idea 的官方社区的链接：&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;https://intellij-support.jetbrains.com/hc/en-us/articles/206544799-Java-slow-performance-or-hangups-when-starting-debugger-and-stepping&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个贴子，是 JetBrains Team 发布的，关于 Debug 功能可能会导致的性能缓慢的问题。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.0136986301369864&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ELQw2WCMgt1Fz8zGHDdK9icdf1FueSW3GFZ4XqEeuQJdftLSRkPCiadqDg5cWXan2vWewcVHZYDDic9pfbHUESXqA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1022&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在这个帖子中，第一个性能点，就是 Method breakpoints。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;官方是怎么解释这个问题的呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我给你翻译一波。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;Method breakpoints will slow down debugger a lot because of the JVM design, they are expensive to evaluate.&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;他们说由于 JVM 的设计，方法断点会大大降低调试器的速度，因为这玩意的 “evaluate” 成本很高。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;evaluate，四级单词，好好记一下，考试会考：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7265415549597856&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ELQw2WCMgt1Fz8zGHDdK9icdf1FueSW3Gkv0l3IynCJ0mL1VtLM1yfdQc6ZXvT8kUxNlcQTibfup1icYJre78yDTg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;373&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大概就是说你要用方法断点的功能，在启动过程中，就涉及到一个关于该断点进行“评估”的成本。成本就是启动缓慢。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;怎么解决这个“评估”带来的成本呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;官方给出的方案很简单粗暴：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不要使用方法断点，不就没有成本了？&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ELQw2WCMgt1Fz8zGHDdK9icdf1FueSW3GTChjplXWk8icibJMlwR2Sza7ah9SpIVueKBwOPs2EF5ro5D0313CqgRA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;240&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以，Remove，完事：&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;Remove method breakpoints and consider using the regular line breakpoints.&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;删除方法断点并考虑使用常规的 line breakpoints。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;官方还是很贴心的，怕你不知道怎么 Remove 还专门补充了一句：&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;To verify that you don&#x27;t have any method breakpoints open .idea/workspace.xml file in the project root directory (or&lt;project&gt;.iws file if you are using the old project format) and look for any breakpoints inside the method_breakpoints node.&lt;/project&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以通过下面这个方法去验证你是否打开了方法断点。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;就是去 .idea/workspace.xml 文件中，找到 method_breakpoints 这个 Node，如果有就 Remove 一下。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然后我看了一下我项目里面对应的文件，没有找到 method_breakpoints 关键字，但是找到了下面这个。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;应该是文档发生了变化，问题不大，反正是一个意思，&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4202226345083488&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ELQw2WCMgt1Fz8zGHDdK9icdf1FueSW3GeaogHgVv2tK9Ik6lhMBM3WfFJqwe0wJkmfKu5QJ3aehPaprWBnl4Uw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1078&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其实官方给出的这个方法，虽然逼格稍微高一点，但还是我前面给的这个操作更简单：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.9679144385026738&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ELQw2WCMgt1Fz8zGHDdK9icdf1FueSW3GCQOMCxfNxRcHUic8qM7CgV720UJ0GlkQkDg55X5I6TgIGPJ0Yqn6JzQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;374&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;针对“到底为什么”这个问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在这里，官方给的回答，特别的模糊：because of the JVM design。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;别问，问就是由于 JVM 设计如此。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我觉得这不是我想要的答案，但是好在我在这个帖子下面找到了一个“好事之人”写的回复：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.496875&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ELQw2WCMgt1Fz8zGHDdK9icdf1FueSW3GyAJcVW5JsXXVuYPacecVA8wD4iaM78vSD2NqApOzEqv6z8OEpgUic2XQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;960&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个好事之人叫做 Gabi 老铁，我看到他回复的第一句话 “I made some research”，我就知道，这波稳了，找对地方了，答案肯定就藏在他附上的这个链接里面。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Gabi 老铁说：哥子们，我研究了一下这个方法断点为啥会慢的原因，研究报告在这里：&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;http://www.smartik.net/2017/11/method-breakpoints-are-evil.html&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;他甚至还来了一个概要：To make the long story short，长话短时。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;他真的很贴心，我哭死。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;他首先指出了问题的根本原因：&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;it seems that the root issue is that Method Breakpoints are implemented by using JDPA&#x27;s Method Entry &amp;amp; Method Exit feature.&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;根本问题在于方法断点是通过使用 JDPA 的 Method Entry &amp;amp; Method Exit 特性实现的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有同学就要问了，JDPA，是啥？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;是个宝贝：&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;https://docs.oracle.com/javase/8/docs/technotes/guides/jpda/index.html&lt;/p&gt;&lt;/blockquote&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4188034188034188&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ELQw2WCMgt1Fz8zGHDdK9icdf1FueSW3GdRbayXwrbVX2eibicvHrX502rfI5q1k1Zb0uCZIegUKrI6e52L3EWerg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;702&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;JPDA，全称 Java Platform Debugger Architecture。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;IDEA 里面的各种 Debug 功能，就是基于这个玩意来实现的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不懂也没关系，这个东西面试又不考，在这里知道有这个技术就行。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;接着，他用了四个 any 来完成了跳句四押：&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;This implementation requires the JVM to fire an event each time any thread enters any method and when any thread exits any method.&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个实现，要求 JVM，每次，在任何（any）线程进入任何（any）方法时，以及在任何（any）线程退出任何（any）方法时触发事件。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;好家伙，这不就是个 AOP 吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这么一说，我就明白为什么方法断点的性能这么差了。要触发这么多进入方法和退出方法的事件，可不得耗费这么多时间吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;具体的细节，他在前面说的研究报告里面都写清楚了，如果你对细节感兴趣的话，可以咨询阅读一下他的那篇报告。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;话说他这个报告的名字也起的挺唬人的：Method Breakpoints are Evil。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我带你看两个关键的地方。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;第一个是关于 Method Entry &amp;amp; Method Exit 的：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.3578643578643579&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ELQw2WCMgt1Fz8zGHDdK9icdf1FueSW3GJrdCflqmuuX3KpzFURUzJGyBJiaocBekXaoW10tl5W9s4ia3avZVSlYA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;693&quot;/&gt;&lt;/figure&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;IDE 将断点添加到其内部方法断点 list 中&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;IDE 告诉前端启用 Method Entry &amp;amp; Method Exit 事件&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;前端（调试器）通过代理将请求传递给 VM&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;在每个 Method Entry &amp;amp; Method Exit 事件中，通过整个链将通知转发到 IDE&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;IDE 检查其方法断点 list 是否包含当前的这个方法。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果发现包含，说明这个方法上有一个方法断点，则 IDE 将向 VM 发送一个 SetBreakpoint 请求，打上断点。否则，VM 的线程将被释放，不会发生任何事情&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里是表明，前面我说的那个类似 AOP 的稍微具体一点的操作。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;核心意思就一句话：触发的事件太多，导致性能下降厉害。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;第二个关键的地方是这样的：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5417156286721504&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ELQw2WCMgt1Fz8zGHDdK9icdf1FueSW3G9b6EBZqhht4Oj0qJbUFrCkUPHwaFia6EyvRFVHTNZWnMg6goeOIp3PA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;851&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;文章的最后给出了五个结论：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;方法断点 IDE 的特性，不是 JPDA 的特性&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;方法断点是真的邪恶，evil 的一比&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;方法断点将极大的影响调试程序&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;只有在真正需要时才使用它们&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果必须使用方法作为断点，请考虑关闭方法退出事件&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;前面四个点没啥说的了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最后一个点：考虑关闭方法退出事件。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个点验证起来非常简单，在方法断点上右键可以看到这个选项，Method Entry &amp;amp; Method Exit 默认都是勾选上了：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.806060606060606&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ELQw2WCMgt1Fz8zGHDdK9icdf1FueSW3GdN9HPRiaafOopNFKKIL0tFB5QGYciaZibjicFNQb08xRzTm9uABMsG3TsA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;495&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以我在本地随便用一个项目验证了一下。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;打开 Method Exit 事件，启动耗时：113.244 秒。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;关闭 Method Exit 事件，启动耗时：46.754 秒。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;你别说，还真有用。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;现在我大概是知道为什么方法断点这么慢了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这真不是 BUG，而是 feature。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;而关于方法断点的这个问题，我顺便在社区搜索了一下，最早我追溯到了 2008 年：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.30358785648574055&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ELQw2WCMgt1Fz8zGHDdK9icdf1FueSW3GHqdZ0zOMMsVKSVByJPMNphAww6ibmVI4wxsZ6wqzO3QibeJ0vWf06SDA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1087&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个老哥说他调试 Web 程序的速度慢到无法使用的程度。他的项目只启用了一行断点，没有方法断点。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;请求大佬帮他看看。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然后大佬帮他一顿分析也没找到原因。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;他自己也特别的纳闷，说：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.10077519379844961&quot; data-type=&quot;png&quot; data-w=&quot;903&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ELQw2WCMgt1Fz8zGHDdK9icdf1FueSW3GCOv068RLo5oDg4gN4OhUcr4GmUAItYtmibOfpIX3qCiaZib6Od9bnNwoA/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我啥也没动，太奇怪了。这玩意有时可以，有时不行。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;像不像一句经典台词：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.839041095890411&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ELQw2WCMgt1Fz8zGHDdK9icdf1FueSW3GibIlyxXkjTgvm63cmVmKjQCugFa5xFHU5XI6yPYlgd9Rrmwq2u3of2w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;292&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但是问题最后还是解决了。怎么解决的呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;他自己说：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.19839142091152814&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ELQw2WCMgt1Fz8zGHDdK9icdf1FueSW3G96Om2rXztNv6icchglBIJI2AoDHia3253p19H3McrAcjzHlJeIj4TFXw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1119&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;确实是有个方法断点，他也不知道怎么打上这个断点的，可能和我一样，是手抖了吧。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;意外收获&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在前面出现的官方帖子的最下面，有这样的两个链接：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.0318725099601593&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ELQw2WCMgt1Fz8zGHDdK9icdf1FueSW3GaWydiafONY3vThmsbftmfFF8XP7GIiaWVVmo6y2YdwyiaKFpfnRVVEHQA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1004&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;它指向了这个地方：&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;https://www.jetbrains.com/help/idea/debugging-code.html&lt;/p&gt;&lt;/blockquote&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6035031847133758&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ELQw2WCMgt1Fz8zGHDdK9icdf1FueSW3Gdiatmn1xYTVhSicjKuHXWAIY9QUkXZDEWW9QUdrnJIJYTFWSpfsrsx4w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1256&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我把这部分链接都打开看了一遍，经过鉴定，这可真是好东西啊。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这是官方在手摸手教学，教你如何使用 Debug 模式。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我之前看过的一些调试小技巧相关的文章，原来就是翻译自官方这里啊。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我在这里举两个例子，算是一个导读，强烈推荐那些在 Debug 程序的时候，只知道不停的下一步、跳过当前断点等这样的基本操作的同学去仔细阅读，动手实操一把。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;首先是这个：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4167794316644114&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ELQw2WCMgt1Fz8zGHDdK9icdf1FueSW3GDIJbouHtTxHqxMiaXibAFpBbiaxnhNUTrEIgvXOibwYzc4kQfkk7ab1IRA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;739&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;针对 Java 的 Streams 流的调试。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;官方给了一个调试的代码示例，我做了一点点微调，你粘过去就能跑：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;class PrimeFinder {&lt;br/&gt;&lt;br/&gt;    public static void main(String[] args) {&lt;br/&gt;        IntStream.iterate(1, n -&amp;gt; n + 1)&lt;br/&gt;                .&lt;span&gt;limit&lt;/span&gt;(100)&lt;br/&gt;                .filter(PrimeTest::isPrime)&lt;br/&gt;                .filter(value -&amp;gt; value &amp;gt; 50)&lt;br/&gt;                .forEach(System.out::println);&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;class PrimeTest {&lt;br/&gt;    static boolean isPrime(int candidate) {&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; candidate == 91 ||&lt;br/&gt;                IntStream.rangeClosed(2, (int) Math.sqrt(candidate))&lt;br/&gt;                        .noneMatch(n -&amp;gt; (candidate % n == 0));&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;代码逻辑很简单，就是找 100 以内的，大于 50 的素数。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;很明显，在 isPrime 方法里面对 91 这个非素数做了特殊处理，导致程序最终会输出 91，也就是出 BUG 了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;虽然这个 BUG 一目了然，但是不要笑，要忍住，要假装不知道为什么。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;现在我们要通过调试的方式找到 BUG。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;断点打在这个位置：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6440366972477064&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ELQw2WCMgt1Fz8zGHDdK9icdf1FueSW3GB3DCkzExRJlEQtmLqLmW4fAn6Sk6Ifak5rPV3dLibYJDwcsBlgdNK4g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;545&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以 Debug 的模式运行的时候，有这样的一个图标：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3865814696485623&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ELQw2WCMgt1Fz8zGHDdK9icdf1FueSW3Gb8Dkb2auiaibqmVmqMtwfvEoqSm0ian5NFKEMGqowQmVGPIwtTUMhUsbw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;626&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;点击之后会有这样的一个弹窗出来：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6384615384615384&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ELQw2WCMgt1Fz8zGHDdK9icdf1FueSW3GLBDdObcLYJDW9Xy4359MB8ibH8fTX11CD7b6VxPSgJbTJO6pruOcuYg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;910&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上面框起来的是对应着程序的每一个方法调用顺序，以及调用完成之后的输出是什么。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下面框起来的这个 “Flat Mode” 点击之后是这样的：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6384615384615384&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ELQw2WCMgt1Fz8zGHDdK9icdf1FueSW3GJS2RPwibUu3WBib75ibFEfX6oMqbW5q0icH3sQYV1icZFgEV6SnwR3yd7wA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;910&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最右边，也就是经过 filter 之后输出的结果。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;里面就包含了 91 这个数：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6384615384615384&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ELQw2WCMgt1Fz8zGHDdK9icdf1FueSW3GEyg8T45Ad6iaRdwbzEeboKfCkYwpc6RgIN49dt3cC3O1d2U8SuPq4Xw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;910&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;点击这个 “91”，发现在经过第一个 filter 之后，91 这个数据还在。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;说明这个地方出问题了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;而这个地方就是前面提到的对 “91” 做了特殊处理的 isPrime 方法。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这样就能有针对性的去分析这个方法，缩小问题排除范围。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个功能怎么说呢，反正我的评论是：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.9133858267716536&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ELQw2WCMgt1Fz8zGHDdK9icdf1FueSW3GomDx5hhpThPFoRhlliaa8KriaCkdlXibQpAamq5CRWbZ3268oeP5tnJzA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;254&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;总之，以上就是 IDEA 对于 Streams 流进行调试的一个简单示例。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;接着再演示一个并发相关的：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.42745098039215684&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ELQw2WCMgt1Fz8zGHDdK9icdf1FueSW3Go6lK7SamiaBbTOHTiaI8OG4znRodeo6qIc8EYb6MB6IfzSFrGHPJ1doA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;765&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;官方给了这样的一个示例：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;public class ConcurrencyTest {&lt;br/&gt;    static final List a = Collections.synchronizedList(new ArrayList());&lt;br/&gt;&lt;br/&gt;    public static void main(String[] args) {&lt;br/&gt;        Thread t = new Thread(() -&amp;gt; addIfAbsent(17));&lt;br/&gt;        t.start();&lt;br/&gt;        addIfAbsent(17);&lt;br/&gt;        t.join();&lt;br/&gt;        System.out.println(a);&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    private static void addIfAbsent(int x) {&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (!a.contains(x)) {&lt;br/&gt;            a.add(x);&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;代码里面搞一个线程安全的 list 集合，然后主线程和一个异步线程分别往这个 list 里面塞同一个数据。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;按照 addIfAbsent 方法的意思，如果要添加的元素在 list 里面存在了，则不添加。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;你说这个程序是线程安全的吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;肯定不是。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;你想想，先判断，再添加，经典的非原子性操作。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但是这个程序你拿去直接跑，又不太容易跑出线程不安全的场景：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7392795883361921&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ELQw2WCMgt1Fz8zGHDdK9icdf1FueSW3Gia5T9zot9wmjUuMrCBV0FoTPbnCzLcO10aUEuxUuiaY9VCicCtfUCwlwg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;583&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;怎么办？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Debug 就来帮你干这个事儿了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在这里打一个断点，然后右键断点，选择 “Thread”：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8156521739130435&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ELQw2WCMgt1Fz8zGHDdK9icdf1FueSW3G2dEzHIeSvkWfMsiaU47UTJ2ZVkz0WKaG0cZAXwroPQOL29JCqwr7ZoA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;575&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这样程序跑起来的时候主线程和异步线程都会在这个地方停下来：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8007968127490039&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ELQw2WCMgt1Fz8zGHDdK9icdf1FueSW3G4I236yKo1Sia80TcDoANicawfaIzVKFXdO85Is9RzG0wHK49hlSUYFicw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;502&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以通过 “Frames” 中的下拉框分别选择 Debug 主线程还是异步线程。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由于两个线程都执行到了 add 方法，所以最终的输出是这样的：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6977777777777778&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ELQw2WCMgt1Fz8zGHDdK9icdf1FueSW3Gv1ygHpJfrbzbz2PNT0iac4JFfwByEFtKjf2YvWtRWatH78icCWeQlmKg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;450&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这不就出现线程不安全了吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;即使你知道这个地方是线程不安全的，但是如果没有 Debug 来帮忙调试，要通过程序输出来验证还是比较困难的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;毕竟多线程问题，大多数情况下都不是每次都能必现的问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;定位到问题之后，官方也给出了正确的代码片段：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.608875128998968&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ELQw2WCMgt1Fz8zGHDdK9icdf1FueSW3G0yosIPrudlpicrXFhzBBhaccw5Smjgasww2Z721KjrIeQw5MibY1vUFg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;969&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;好了，说好了是导读，这都是基本操作。还是那句话，如果感兴趣，自己去翻一下，跟着案例操作一下。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;就算你看到有人把 Debug 源码，玩出花来了，也无外乎不过是这样的几个基础操作的组合而已。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;回首往事&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;让我们再次回到官方的“关于 Debug 功能可能会导致的性能缓慢的问题”这个帖子里面：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8765670202507232&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ELQw2WCMgt1Fz8zGHDdK9icdf1FueSW3GvaNT52KoJamtulLqNOuRrkt6dySPTdJaXF3XjZQSUce4xHiaR0m6Flg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1037&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当我看到方框里面框起来的 “Collections classes” 和 “toString()” 方法的时候，眼泪都快下来了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我最早开始写文章的时候，曾经被这个玩意坑惨了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;三年前，2019 年，我写了这篇文章&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=Mzg3NjU3NTkwMQ==&amp;amp;mid=2247505066&amp;amp;idx=1&amp;amp;sn=81faa5b423f01bcb00bc93a8656a5109&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;《这道Java基础题真的有坑！我也没想到还有续集。》&lt;/a&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当时 Debug 调试 ArrayList 的时候遇到一个问题，我一度以为我被质子干扰了：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;3.70234375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/ELQw2WCMgt1Fz8zGHDdK9icdf1FueSW3GibnSGd9kLADPQlOtdveHfFh7VEQZa7dQiaaziaJU1LjfIjOVSysBhjnAw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一句话汇总就是在单线程的情况下，程序直接运行的结果和 Debug 输出的结果是不一样的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当时我是百思不得其解。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;直到 8 个月后，写&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=Mzg3NjU3NTkwMQ==&amp;amp;mid=2247505131&amp;amp;idx=1&amp;amp;sn=37e0ef42d6812f22197cd23724f01875&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;《JDK的BUG导致的内存溢出！反正我是没想到还能有续集》&lt;/a&gt;这篇文章的时候才偶然间找到问题的答案。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;根本原因就是在 Debug 模式下，IDEA 会自动触发集合类的 toString 方法。而在某些集合类的 toString 方法里面，会有诸如修改头节点的逻辑，导致程序运行结果和预期的不匹配。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;也就是对应这句话：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.16770740410347904&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ELQw2WCMgt1Fz8zGHDdK9icdf1FueSW3GCNGbQDWrXaiaWHMt85Du9N9zgB3sd1ZrO2iaHVBYAUCvrCzxo9XD8HTg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1121&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;翻译过来就是：老铁请注意，如果 toString 方法中的代码更改了程序的状态，则在 debug 状态下运行时，这些方法也可以更改应用程序的运行结果。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最后的解决方案就是关闭 IDEA 的这两个配置：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7437437437437437&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ELQw2WCMgt1Fz8zGHDdK9icdf1FueSW3GcdsaxIKxiaMtPc9vmLrDR3LkR4YPZESeaTiaibI225hAa9YlvIdz8QMjA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;999&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;同时，我也在官方文档中找到了这个两个配置的解释：&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;https://www.jetbrains.com/help/idea/customizing-views.html#renderers&lt;/p&gt;&lt;/blockquote&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.44699453551912566&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ELQw2WCMgt1Fz8zGHDdK9icdf1FueSW3GmSvF5IqyoD1gNUgecJicAgvUk15noxgRDT8xC0dhUXYN9icB4hgpic4ibA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;915&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;主要是为了在 Debug 的过程中用更加友好的形式显示集合类。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;啥意思？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;给你看个例子。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这是没有勾选前面说的配置的时候，map 集合在 Debug 模式下的样子：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.4941176470588236&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ELQw2WCMgt1Fz8zGHDdK9icdf1FueSW3Gfc3NP1gIRtTGHZgzd9d4iaa6IibjZSfNzia0OX1jQQyV543cibOpWq76rw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;425&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这是勾选之后，map 集合在 Debug 模式下的样子：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.9921259842519685&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ELQw2WCMgt1Fz8zGHDdK9icdf1FueSW3GRA0KRTYicHibibAVzOib9xUb72BMojFn78AwrHGh2FAMjUIhqD3CEZT0kw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;381&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;很明显，勾选了之后的样子，更加友好。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但是，为了避免莫名其妙的 BUG，我选择关闭这个功能。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;好了，那本文的技术部分就到这里啦。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下面这个环节叫做[荒腔走板]，技术文章后面我偶尔会记录、分享点生活相关的事情，和技术毫无关系。我知道看起来很突兀，但是我喜欢，因为这是一个普通博主的生活气息。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;你要不喜欢，退出之前记得文末点个“在看”哦。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;荒腔走板&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5625&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/ELQw2WCMgt1Fz8zGHDdK9icdf1FueSW3GiaIqwX3ibvSrxk8zTCFfviaIl8sQCYCjthVZJpdlKSsPRtgj8ia80V1vPQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1920&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这是我上周五晚上拍的。路过一个工地，看到工人师傅们三三两两的就在工地门口的小推车前面吃饭喝酒，缓解一天的疲劳。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在流动路边摊上，吃的都是简单的填肚子的东西，比如一大碗炒饭，一大碗面条什么的，再配上一瓶冰冻的啤酒，一大口下肚，来宣告今天的活就算是干完了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;看到这个场景，让我想起了读大学的时候。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;夏天的晚上，特别喜欢和朋友一起骑车到学校附近的工地上去吃晚饭。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在一张极具工地特色的长桌上吃饭，说是一个桌子其实就是工地上打围用的木板，四个角各支撑几个板凳，就算是一个餐桌了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;整个夏天，我们和工人师傅们在这一张极简的餐桌上吃过好几顿晚饭。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;每次都是吃一碗扎扎实实的素面，五块钱一大碗，啤酒两块钱一瓶。一口面条，一口啤酒，物美价廉，特别带劲。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一次我们坐在还未完工的建筑下面，对面是赤膊吃饭，沉默不语的工人师傅。背后是学生如织，活力青春的大学校园。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;坐在我旁边的几个工人师傅突然问我们：你们是哪里来的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;朋友指着背后的学校说：从学校过来。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;拉扯了几句，说到我们是学计算机的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;接着师傅发起了一个直击灵魂的问题：你们学计算机，毕业后都干啥呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那个时候我才大二，我哪知道是干啥的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;说实在的，这个问题我大四快毕业了都没想清楚。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;现在我明白了，毕业后，我就是国家认证的新生代农民工，也是一个“搬砖”的人而已。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;span&gt;··················END················&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mp-common-profile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;Mzg4NjYyODc4OA==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/J4jTHmo8Xh6qM32ASOtVbXNoiaegrI26qLRw6r6FTI7dZw6TMT7vecvnjd1O8xSsM5MiajIuQZicxSC6KFK8TMpbg/0?wx_fmt=png&quot; data-nickname=&quot;java突击队&quot; data-alias=&quot;&quot; data-signature=&quot;技术经验分享&quot; data-from=&quot;0&quot; data-is_biz_ban=&quot;0&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;strong mpa-from-tpl=&quot;t&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>85b66e73d14879877ef8c6671f8d6a4b</guid>
<title>C++/Qt/VTK技能树</title>
<link>https://toutiao.io/k/erbkznv</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div itemprop=&quot;articleBody&quot; class=&quot;post-content&quot;&gt;&lt;p&gt;刚离职的单位是一家做医疗影像处理软件的创业公司，工作中重度依赖C++、Qt和VTK这三种技术。本人在职是几个项目的项目经理(技术经理)，直接向CTO和CEO汇报。受委托制作了一份C++(客户端)工程师应具备的技能，在此分享给大家，欢迎批评指正。&lt;/p&gt;&lt;figure class=&quot;wp-caption aligncenter&quot;&gt;&lt;a href=&quot;https://itlanyan.com/wp-content/uploads/CPP%E6%8A%80%E8%83%BD%E6%A0%91.png&quot;&gt;&lt;noscript&gt;&lt;img class=&quot;size-full&quot; src=&quot;https://itlanyan.com/wp-content/uploads/CPP%E6%8A%80%E8%83%BD%E6%A0%91.png&quot; alt=&quot;C++技能树&quot;/&gt;&lt;/noscript&gt;&lt;img class=&quot;lazyload size-full&quot; src=&quot;&quot; data-src=&quot;https://itlanyan.com/wp-content/uploads/CPP%E6%8A%80%E8%83%BD%E6%A0%91.png&quot; alt=&quot;C++技能树&quot;/&gt;&lt;/a&gt;&lt;figcaption class=&quot;wp-caption-text&quot;&gt;C++技能树&lt;/figcaption&gt;&lt;/figure&gt;&lt;blockquote&gt;&lt;p&gt;PS：前司正在推行文档的版本化管理，工作中文档优先使用markdown、plantuml等文本文件输出。上图内容使用plantuml编写，文件源码：&lt;a href=&quot;/wp-content/uploads/CPP技能树.puml&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;C++技能树.puml&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p class=&quot;clear&quot;/&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>