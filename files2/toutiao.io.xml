<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>63e3cec3392b716da3a5c270560ebe6a</guid>
<title>微服务网关鉴权：gateway使用、网关限流使用、用户密码加密、JWT鉴权</title>
<link>https://toutiao.io/k/rdhhq5d</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;section&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;chksm=fa496f8ecd3ee698f4954c00efb80fe955ec9198fff3ef4011e331aa37f55a6a17bc8c0335a8&amp;amp;scene=21&amp;amp;token=899450012&amp;amp;lang=zh_CN#wechat_redirect&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.42444444444444446&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/JfTPiahTHJhp96Kmv8yCspX1q0fKdtqfGU2ZrRMICW1oqnS3BicTZaibjddJCzQ4gQpiaUKUcLGSnfocwxGwkYOBNg/640?wx_fmt=jpeg&quot; data-w=&quot;900&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;掌握微服务网关Gateway的系统搭建&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;掌握网关限流的实现&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;能够使用BCrypt实现对密码的加密与验证&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;了解加密算法&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;能够使用JWT实现微服务鉴权&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;基于 Spring Boot + MyBatis Plus + Vue &amp;amp; Element 实现的后台管理系统 + 用户小程序，支持 RBAC 动态权限、多租户、数据权限、工作流、三方登录、支付、短信、商城等功能&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;项目地址：https://gitee.com/zhijiantianya/ruoyi-vue-pro&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;视频教程：https://doc.iocoder.cn/video/&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不同的微服务一般会有不同的网络地址，而外部客户端可能需要调用多个服务的接口才能完成一个业务需求，如果让客户端直接与各个微服务通信，会有以下的问题：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;客户端会多次请求不同的微服务，增加了客户端的复杂性&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;存在跨域请求，在一定场景下处理相对复杂&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;认证复杂，每个服务都需要独立认证&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;难以重构，随着项目的迭代，可能需要重新划分微服务。例如，可能将多个服务合并成一个或者将一个服务拆分成多个。如果客户端直接与微服务通信，那么重构将会很难实施&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;某些微服务可能使用了防火墙 / 浏览器不友好的协议，直接访问会有一定的困难&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以上这些问题可以借助网关解决。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;网关是介于客户端和服务器端之间的中间层，所有的外部请求都会先经过 网关这一层。也就是说，API 的实现方面更多的考虑业务逻辑，而安全、性能、监控可以交由 网关来做，这样既提高业务灵活性又不缺安全性，典型的架构图如图所示：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.487962962962963&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdLkEI9sZfeg7cQTtgZImrT127dywmQEpZyiadyYlEAh8kRLZFbUPTWTZ0iaBXmdQatAaGqSbBbjH0EmeicVN8NDg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/span&gt;&lt;/a&gt;优点如下：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;安全 ，只有网关系统对外进行暴露，微服务可以隐藏在内网，通过防火墙保护。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;易于监控。可以在网关收集监控数据并将其推送到外部系统进行分析。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;易于认证。可以在网关上进行认证，然后再将请求转发到后端的微服务，而无须在每个微服务中进行认证。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;减少了客户端与各个微服务之间的交互次数&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;易于统一授权。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;总结：微服务网关就是一个系统，通过暴露该微服务网关系统，方便我们进行相关的鉴权，安全控制，日志统一处理，易于监控的相关功能。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;实现微服务网关的技术有很多，&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;nginx&lt;/strong&gt; Nginx (engine x) 是一个高性能的HTTP和反向代理web服务器，同时也提供了IMAP/POP3/SMTP服务&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;zuul ,Zuul 是 Netflix 出品的一个基于 JVM 路由和服务端的负载均衡器。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;spring-cloud-gateway, 是spring 出品的 基于spring 的网关项目，集成断路器，路径重写，性能比Zuul好。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们使用gateway这个网关技术，无缝衔接到基于spring cloud的微服务开发中来。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;gateway官网：&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;https://spring.io/projects/spring-cloud-gateway&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由于我们开发的系统 有包括前台系统和后台系统，后台的系统给管理员使用。那么也需要调用各种微服务，所以我们针对管理后台搭建一个网关微服务。分析如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6228893058161351&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdLkEI9sZfeg7cQTtgZImrT127dywmQEymyXOulrF4Uuckkh72aYtdgheF55Hdx32Jw4bicTD3Z7UPavo4wsjIw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1066&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;搭建步骤：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1）在&lt;code&gt;changgou_gateway&lt;/code&gt;工程中，创建 &lt;code&gt;changgou_gateway_system&lt;/code&gt;工程，pom.xml:&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.springframework.cloud&lt;span&gt;&amp;lt;/&lt;span&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;spring-cloud-starter-gateway&lt;span&gt;&amp;lt;/&lt;span&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.springframework.cloud&lt;span&gt;&amp;lt;/&lt;span&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;spring-cloud-starter-netflix-hystrix&lt;span&gt;&amp;lt;/&lt;span&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.springframework.cloud&lt;span&gt;&amp;lt;/&lt;span&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;spring-cloud-starter-netflix-eureka-client&lt;span&gt;&amp;lt;/&lt;span&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2）创建包&lt;code&gt;com.changgou&lt;/code&gt; , 创建引导类：&lt;code&gt;GatewayApplication&lt;/code&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;@SpringBootApplication&lt;/span&gt;&lt;br/&gt;&lt;span&gt;@EnableEurekaClient&lt;/span&gt;&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;GatewayApplication&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;main&lt;/span&gt;&lt;span&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        SpringApplication.run(GatewayApplication&lt;span&gt;.&lt;span&gt;class&lt;/span&gt;, &lt;span&gt;args&lt;/span&gt;)&lt;/span&gt;;&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;3）在&lt;code&gt;resources&lt;/code&gt;下创建application.yml&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;spring:&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;application:&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;name:&lt;/span&gt; &lt;span&gt;sysgateway&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;cloud:&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;gateway:&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;routes:&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;-&lt;/span&gt; &lt;span&gt;id:&lt;/span&gt; &lt;span&gt;goods&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;uri:&lt;/span&gt; &lt;span&gt;lb://goods&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;predicates:&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;-&lt;/span&gt; &lt;span&gt;Path=/goods/**&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;filters:&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;-&lt;/span&gt; &lt;span&gt;StripPrefix=&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;-&lt;/span&gt; &lt;span&gt;id:&lt;/span&gt; &lt;span&gt;system&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;uri:&lt;/span&gt; &lt;span&gt;lb://system&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;predicates:&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;-&lt;/span&gt; &lt;span&gt;Path=/system/**&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;filters:&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;-&lt;/span&gt; &lt;span&gt;StripPrefix=&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;&lt;br/&gt;&lt;span&gt;server:&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;port:&lt;/span&gt; &lt;span&gt;9101&lt;/span&gt;&lt;br/&gt;&lt;span&gt;eureka:&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;client:&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;service-url:&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;defaultZone:&lt;/span&gt; &lt;span&gt;http://127.0.0.1:6868/eureka&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;instance:&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;prefer-ip-address:&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;参考官方手册：&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;https://cloud.spring.io/spring-cloud-gateway/spring-cloud-gateway.html#_stripprefix_gatewayfilter_factory&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;修改application.yml ，在&lt;code&gt;spring.cloud.gateway&lt;/code&gt;节点添加配置，&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;globalcors:&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;cors-configurations:&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&#x27;[/**]&#x27;&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;# 匹配所有请求&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;allowedOrigins:&lt;/span&gt; &lt;span&gt;&quot;*&quot;&lt;/span&gt; &lt;span&gt;#跨域处理 允许所有的域&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;allowedMethods:&lt;/span&gt; &lt;span&gt;# 支持的方法&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;-&lt;/span&gt; &lt;span&gt;GET&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;-&lt;/span&gt; &lt;span&gt;POST&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;-&lt;/span&gt; &lt;span&gt;PUT&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;-&lt;/span&gt; &lt;span&gt;DELETE&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最终配置文件如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;spring:&lt;br/&gt;  application:&lt;br/&gt;    name: sysgateway&lt;br/&gt;  cloud:&lt;br/&gt;    gateway:&lt;br/&gt;      globalcors:&lt;br/&gt;        cors-configurations:&lt;br/&gt;          &lt;span&gt;&#x27;[/**]&#x27;&lt;/span&gt;: # 匹配所有请求&lt;br/&gt;            allowedOrigins: &lt;span&gt;&quot;*&quot;&lt;/span&gt; #跨域处理 允许所有的域&lt;br/&gt;            allowedMethods: # 支持的方法&lt;br/&gt;            - GET&lt;br/&gt;            - POST&lt;br/&gt;            - PUT&lt;br/&gt;            - DELETE&lt;br/&gt;      routes:&lt;br/&gt;      - id: goods&lt;br/&gt;        uri: lb:&lt;span&gt;//goods&lt;/span&gt;&lt;br/&gt;        predicates:&lt;br/&gt;        - Path=/goods&lt;span&gt;/**&lt;br/&gt;        filters:&lt;br/&gt;        - StripPrefix= 1&lt;br/&gt;server:&lt;br/&gt;  port: 9101&lt;br/&gt;eureka:&lt;br/&gt;  client:&lt;br/&gt;    service-url:&lt;br/&gt;      defaultZone: http://127.0.0.1:6868/eureka&lt;br/&gt;  instance:&lt;br/&gt;    prefer-ip-address: true&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们可以通过网关过滤器，实现一些逻辑的处理，比如ip黑白名单拦截、特定地址的拦截等。下面的代码中做了两个过滤器，并且设定的先后顺序，只演示过滤器与运行效果。（具体逻辑处理部分学员实现）&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1）&lt;code&gt;changgou_gateway_system&lt;/code&gt;创建IpFilter&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;@Component&lt;/span&gt;&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;IpFilter&lt;/span&gt; &lt;span&gt;implements&lt;/span&gt; &lt;span&gt;GlobalFilter&lt;/span&gt;, &lt;span&gt;Ordered&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; Mono&amp;lt;Void&amp;gt; &lt;span&gt;filter&lt;/span&gt;&lt;span&gt;(ServerWebExchange exchange, GatewayFilterChain chain)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;br/&gt;        System.out.println(&lt;span&gt;&quot;经过第1个过滤器IpFilter&quot;&lt;/span&gt;);&lt;br/&gt;        ServerHttpRequest request = exchange.getRequest();&lt;br/&gt;        InetSocketAddress remoteAddress = request.getRemoteAddress();&lt;br/&gt;        System.out.println(&lt;span&gt;&quot;ip:&quot;&lt;/span&gt;+remoteAddress.getHostName());&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; chain.filter(exchange);&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; &lt;span&gt;getOrder&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;;&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2）&lt;code&gt;changgou_gateway_system&lt;/code&gt;创建UrlFilter&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;@Component&lt;/span&gt;&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;UrlFilter&lt;/span&gt; &lt;span&gt;implements&lt;/span&gt; &lt;span&gt;GlobalFilter&lt;/span&gt;, &lt;span&gt;Ordered&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; Mono&amp;lt;Void&amp;gt; &lt;span&gt;filter&lt;/span&gt;&lt;span&gt;(ServerWebExchange exchange, GatewayFilterChain chain)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        System.out.println(&lt;span&gt;&quot;经过第2个过滤器UrlFilter&quot;&lt;/span&gt;);&lt;br/&gt;        ServerHttpRequest request = exchange.getRequest();&lt;br/&gt;        String url = request.getURI().getPath();&lt;br/&gt;        System.out.println(&lt;span&gt;&quot;url:&quot;&lt;/span&gt;+url);&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; chain.filter(exchange);&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; &lt;span&gt;getOrder&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;2&lt;/span&gt;;&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;测试，观察控制台输出。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;基于 Spring Cloud Alibaba + Gateway + Nacos + RocketMQ + Vue &amp;amp; Element 实现的后台管理系统 + 用户小程序，支持 RBAC 动态权限、多租户、数据权限、工作流、三方登录、支付、短信、商城等功能&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;项目地址：https://gitee.com/zhijiantianya/yudao-cloud&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;视频教程：https://doc.iocoder.cn/video/&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们之前说过，网关可以做很多的事情，比如，限流，当我们的系统 被频繁的请求的时候，就有可能 将系统压垮，所以 为了解决这个问题，需要在每一个微服务中做限流操作，但是如果有了网关，那么就可以在网关系统做限流，因为所有的请求都需要先通过网关系统才能路由到微服务中。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5368421052631579&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdLkEI9sZfeg7cQTtgZImrT127dywmQEHWxK0xicQ3R4SzBAvbnfYzLJRjKYvHtZdoZlGVKibia5tw2PKBWAlCVOg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;760&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;令牌桶算法是比较常见的限流算法之一，大概描述如下：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;所有的请求在处理之前都需要拿到一个可用的令牌才会被处理；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;根据限流大小，设置按照一定的速率往桶里添加令牌；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;桶设置最大的放置令牌限制，当桶满时、新添加的令牌就被丢弃或者拒绝；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;请求达到后首先要获取令牌桶中的令牌，拿着令牌才可以进行其他的业务逻辑，处理完业务逻辑之后，将令牌直接删除；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;令牌桶有最低限额，当桶中的令牌达到最低限额的时候，请求处理完之后将不会删除令牌，以此保证足够的限流&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如下图：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6347941567065073&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdLkEI9sZfeg7cQTtgZImrT127dywmQEuY2xxen95ESoqSO4aH1G8js8v9YbKfoTon6KG4T6LmyibNzGVIR5wVw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;753&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个算法的实现，有很多技术，Guava(读音: 瓜哇)是其中之一，redis客户端也有其实现。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;需求：每个ip地址1秒内只能发送1次请求，多出来的请求返回429错误。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;代码实现：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1）&lt;code&gt;spring cloud gateway&lt;/code&gt; 默认使用redis的&lt;code&gt;RateLimter&lt;/code&gt;限流算法来实现。所以我们要使用首先需要引入redis的依赖&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&amp;lt;!--redis--&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span&gt;&amp;lt;/&lt;span&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;spring-boot-starter-data-redis-reactive&lt;span&gt;&amp;lt;/&lt;span&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;2.1.3.RELEASE&lt;span&gt;&amp;lt;/&lt;span&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2）定义KeyResolver&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在&lt;code&gt;GatewayApplicatioin&lt;/code&gt;引导类中添加如下代码，&lt;code&gt;KeyResolver&lt;/code&gt;用于计算某一个类型的限流的KEY也就是说，可以通过&lt;code&gt;KeyResolver&lt;/code&gt;来指定限流的Key。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;//定义一个KeyResolver&lt;/span&gt;&lt;br/&gt;&lt;span&gt;@Bean&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; KeyResolver &lt;span&gt;ipKeyResolver&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; KeyResolver() {&lt;br/&gt;        &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;&lt;span&gt;public&lt;/span&gt; Mono&amp;lt;String&amp;gt; &lt;span&gt;resolve&lt;/span&gt;&lt;span&gt;(ServerWebExchange exchange)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;            &lt;span&gt;return&lt;/span&gt; Mono.just(exchange.getRequest().getRemoteAddress().getHostName());&lt;br/&gt;        }&lt;br/&gt;    };&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;3）修改application.yml中配置项，指定限制流量的配置以及&lt;code&gt;REDIS&lt;/code&gt;的配置，修改后最终配置如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;spring:&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;application:&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;name:&lt;/span&gt; &lt;span&gt;sysgateway&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;cloud:&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;gateway:&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;globalcors:&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;cors-configurations:&lt;/span&gt;&lt;br/&gt;          &lt;span&gt;&#x27;[/**]&#x27;&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;# 匹配所有请求&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;allowedOrigins:&lt;/span&gt; &lt;span&gt;&quot;*&quot;&lt;/span&gt; &lt;span&gt;#跨域处理 允许所有的域&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;allowedMethods:&lt;/span&gt; &lt;span&gt;# 支持的方法&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;-&lt;/span&gt; &lt;span&gt;GET&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;-&lt;/span&gt; &lt;span&gt;POST&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;-&lt;/span&gt; &lt;span&gt;PUT&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;-&lt;/span&gt; &lt;span&gt;DELETE&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;routes:&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;-&lt;/span&gt; &lt;span&gt;id:&lt;/span&gt; &lt;span&gt;goods&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;uri:&lt;/span&gt; &lt;span&gt;lb://goods&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;predicates:&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;-&lt;/span&gt; &lt;span&gt;Path=/goods/**&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;filters:&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;-&lt;/span&gt; &lt;span&gt;StripPrefix=&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;-&lt;/span&gt; &lt;span&gt;name:&lt;/span&gt; &lt;span&gt;RequestRateLimiter&lt;/span&gt; &lt;span&gt;#请求数限流 名字不能随便写 &lt;/span&gt;&lt;br/&gt;          &lt;span&gt;args:&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;key-resolver:&lt;/span&gt; &lt;span&gt;&quot;#{@ipKeyResolver}&quot;&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;redis-rate-limiter.replenishRate:&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;redis-rate-limiter.burstCapacity:&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;-&lt;/span&gt; &lt;span&gt;id:&lt;/span&gt; &lt;span&gt;system&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;uri:&lt;/span&gt; &lt;span&gt;lb://system&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;predicates:&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;-&lt;/span&gt; &lt;span&gt;Path=/system/**&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;filters:&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;-&lt;/span&gt; &lt;span&gt;StripPrefix=&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;# 配置Redis 127.0.0.1可以省略配置&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;redis:&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;host:&lt;/span&gt; &lt;span&gt;192.168&lt;/span&gt;&lt;span&gt;.200&lt;/span&gt;&lt;span&gt;.128&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;port:&lt;/span&gt; &lt;span&gt;6379&lt;/span&gt;&lt;br/&gt;&lt;span&gt;server:&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;port:&lt;/span&gt; &lt;span&gt;9101&lt;/span&gt;&lt;br/&gt;&lt;span&gt;eureka:&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;client:&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;service-url:&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;defaultZone:&lt;/span&gt; &lt;span&gt;http://127.0.0.1:6868/eureka&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;instance:&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;prefer-ip-address:&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;解释：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;burstCapacity&lt;/code&gt;：令牌桶总容量。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;replenishRate&lt;/code&gt;：令牌桶每秒填充平均速率。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;key-resolver&lt;/code&gt;：用于限流的键的解析器的 Bean 对象的名字。它使用 SpEL 表达式根据&lt;code&gt;#{@beanName}&lt;/code&gt;从 Spring 容器中获取 Bean 对象。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过在&lt;code&gt;replenishRate&lt;/code&gt;和中设置相同的值来实现稳定的速率&lt;code&gt;burstCapacity&lt;/code&gt;。设置&lt;code&gt;burstCapacity&lt;/code&gt;高于时，可以允许临时突发&lt;code&gt;replenishRate&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在这种情况下，需要在突发之间允许速率限制器一段时间（根据&lt;code&gt;replenishRate&lt;/code&gt;），因为2次连续突发将导致请求被丢弃（HTTP 429 - Too Many Requests）&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;key-resolver&lt;/code&gt;: “&lt;code&gt;#{@userKeyResolver}&lt;/code&gt;” 用于通过SPEL表达式来指定使用哪一个&lt;code&gt;KeyResolver&lt;/code&gt;.&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如上配置：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;表示 一秒内，允许 一个请求通过，令牌桶的填充速率也是一秒钟添加一个令牌。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最大突发状况 也只允许 一秒内有一次请求，可以根据业务来调整 。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;4）测试&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;启动redis-&amp;gt;启动注册中心-&amp;gt;启动商品微服务-&amp;gt;启动gateway网关&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;打开浏览器 &lt;code&gt;http://localhost:9101/goods/brand&lt;/code&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;快速刷新，当1秒内发送多次请求，就会返回429错误。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在用户模块，对于用户密码的保护，通常都会进行加密。我们通常对密码进行加密，然后存放在数据库中，在用户进行登录的时候，将其输入的密码进行加密然后与数据库中存放的密文进行比较，以验证用户密码是否正确。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;目前，MD5和BCrypt比较流行。相对来说，BCrypt比MD5更安全。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;BCrypt 官网http://www.mindrot.org/projects/jBCrypt/&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1）我们从官网下载源码&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2）新建工程，将源码类BCrypt拷贝到工程&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;3）新建测试类，main方法中编写代码，实现对密码的加密&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;String gensalt = BCrypt.gensalt();&lt;span&gt;//这个是盐  29个字符，随机生成&lt;/span&gt;&lt;br/&gt;System.out.println(gensalt);&lt;br/&gt;String password = BCrypt.hashpw(&lt;span&gt;&quot;123456&quot;&lt;/span&gt;, gensalt);  &lt;span&gt;//根据盐对密码进行加密&lt;/span&gt;&lt;br/&gt;System.out.println(password);&lt;span&gt;//加密后的字符串前29位就是盐&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;4）新建测试类，main方法中编写代码，实现对密码的校验。BCrypt不支持反运算，只支持密码校验。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;boolean&lt;/span&gt; checkpw = BCrypt.checkpw(&lt;span&gt;&quot;123456&quot;&lt;/span&gt;,     &lt;span&gt;&quot;$2a$10$61ogZY7EXsMDWeVGQpDq3OBF1.phaUu7.xrwLyWFTOu8woE08zMIW&quot;&lt;/span&gt;);&lt;br/&gt;System.out.println(checkpw);&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;新增管理员，使用BCrypt进行密码加密&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1）将BCrypt源码拷贝到&lt;code&gt;changgou_common&lt;/code&gt;工程 &lt;code&gt;org.mindrot.jbcrypt&lt;/code&gt;包下&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4605009633911368&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdLkEI9sZfeg7cQTtgZImrT127dywmQEcgt75JuUAxibP3XsXosiaNjQHqMVdkktxibHLTCMCK2Gv2R8YibaVl3Ajw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;519&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2）修改&lt;code&gt;changgou_service_system&lt;/code&gt;项目的&lt;code&gt;AdminServiceImpl&lt;/code&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;/**&lt;br/&gt; * 增加&lt;br/&gt; * &lt;span&gt;@param&lt;/span&gt; admin&lt;br/&gt; */&lt;/span&gt;&lt;br/&gt;&lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;add&lt;/span&gt;&lt;span&gt;(Admin admin)&lt;/span&gt;&lt;/span&gt;{&lt;br/&gt;    String password = BCrypt.hashpw(admin.getPassword(), BCrypt.gensalt());&lt;br/&gt;    admin.setPassword(password);   &lt;br/&gt;    adminMapper.insert(admin);&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;系统管理用户需要管理后台，需要先输入用户名和密码进行登录，才能进入管理后台。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;思路：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;用户发送请求，输入用户名和密码&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;后台管理微服务controller接收参数，验证用户名和密码是否正确，如果正确则返回用户登录成功结果&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1）&lt;code&gt;AdminService&lt;/code&gt;新增方法定义&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;/**&lt;br/&gt; * 登录验证密码&lt;br/&gt; * &lt;span&gt;@param&lt;/span&gt; admin&lt;br/&gt; * &lt;span&gt;@return&lt;/span&gt;&lt;br/&gt; */&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;boolean&lt;/span&gt; &lt;span&gt;login&lt;/span&gt;&lt;span&gt;(Admin admin)&lt;/span&gt;&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2）&lt;code&gt;AdminServiceImpl&lt;/code&gt;实现此方法&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt; &lt;span&gt;login&lt;/span&gt;&lt;span&gt;(Admin admin)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;//根据登录名查询管理员&lt;/span&gt;&lt;br/&gt;    Admin admin1=&lt;span&gt;new&lt;/span&gt; Admin();&lt;br/&gt;    admin1.setLoginName(admin.getLoginName());&lt;br/&gt;    admin1.setStatus(&lt;span&gt;&quot;1&quot;&lt;/span&gt;);&lt;br/&gt;    Admin admin2 = adminMapper.selectOne(admin1);&lt;span&gt;//数据库查询出的对象&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt;(admin2==&lt;span&gt;null&lt;/span&gt;){&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;;&lt;br/&gt;    }&lt;span&gt;else&lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;//验证密码, Bcrypt为spring的包, 第一个参数为明文密码, 第二个参数为密文密码&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; BCrypt.checkpw(admin.getPassword(),admin2.getPassword());&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;3）&lt;code&gt;AdminController&lt;/code&gt;新增方法&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;/**&lt;br/&gt; * 登录&lt;br/&gt; * &lt;span&gt;@param&lt;/span&gt; admin&lt;br/&gt; * &lt;span&gt;@return&lt;/span&gt;&lt;br/&gt; */&lt;/span&gt;&lt;br/&gt;&lt;span&gt;@PostMapping&lt;/span&gt;(&lt;span&gt;&quot;/login&quot;&lt;/span&gt;)&lt;br/&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; Result &lt;span&gt;login&lt;/span&gt;&lt;span&gt;(@RequestBody Admin admin)&lt;/span&gt;&lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;boolean&lt;/span&gt; login = adminService.login(admin);&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt;(login){&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; Result();&lt;br/&gt;    }&lt;span&gt;else&lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; Result(&lt;span&gt;false&lt;/span&gt;,StatusCode.LOGINERROR,&lt;span&gt;&quot;用户名或密码错误&quot;&lt;/span&gt;);&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由于在学习JWT的时候会涉及使用很多加密算法, 所以在这里做下扫盲, 简单了解就可以&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;加密算法种类有:&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;解释: 加密后, 密文可以反向解密得到密码原文.&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;【文件加密和解密使用相同的密钥，即加密密钥也可以用作解密密钥】&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;解释:&lt;/strong&gt; 在对称加密算法中，数据发信方将明文和加密密钥一起经过特殊的加密算法处理后，使其变成复杂的加密密文发送出去，收信方收到密文后，若想解读出原文，则需要使用加密时用的密钥以及相同加密算法的逆算法对密文进行解密，才能使其回复成可读明文。在对称加密算法中，使用的密钥只有一个，收发双方都使用这个密钥，这就需要解密方事先知道加密密钥。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;优点:&lt;/strong&gt; 对称加密算法的优点是算法公开、计算量小、加密速度快、加密效率高。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;缺点:&lt;/strong&gt; 没有非对称加密安全.&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;用途：&lt;/strong&gt; 一般用于保存用户手机号、身份证等敏感但能解密的信息。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;常见的对称加密算法有:&lt;/strong&gt; AES、DES、3DES、Blowfish、IDEA、RC4、RC5、RC6、HS256&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;【两个密钥：公开密钥（publickey）和私有密钥，公有密钥加密，私有密钥解密】&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;解释:&lt;/strong&gt; 同时生成两把密钥：私钥和公钥，私钥隐秘保存，公钥可以下发给信任客户端.&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;加密与解密:&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;私钥加密，持有私钥或公钥才可以解密&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;公钥加密，持有私钥才可解密&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;签名:&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;私钥签名, 持有公钥进行验证是否被篡改过.&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;优点:&lt;/strong&gt; 非对称加密与对称加密相比，其安全性更好；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;缺点:&lt;/strong&gt; 非对称加密的缺点是加密和解密花费时间长、速度慢，只适合对少量数据进行加密。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;用途：&lt;/strong&gt; 一般用于签名和认证。私钥服务器保存, 用来加密, 公钥客户拿着用于对于令牌或者签名的解密或者校验使用.&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;常见的非对称加密算法有：RSA、DSA（数字签名用）、ECC（移动设备用）、RS256 (采用SHA-256 的 RSA 签名)&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;解释:&lt;/strong&gt; 一旦加密就不能反向解密得到密码原文.&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;种类:&lt;/strong&gt; Hash加密算法, 散列算法, 摘要算法等&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;用途：&lt;/strong&gt; 一般用于效验下载文件正确性，一般在网站上下载文件都能见到；存储用户敏感信息，如密码、 卡号等不可解密的信息。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;常见的不可逆加密算法有：&lt;/strong&gt; MD5、SHA、HMAC&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Base64是网络上最常见的用于传输8Bit字节代码的编码方式之一。Base64编码可用于在HTTP环境下传递较长的标识信息。采用Base64Base64编码解码具有不可读性，即所编码的数据不会被人用肉眼所直接看到。注意：Base64只是一种编码方式，不算加密方法。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在线编码工具：&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;http://www.jsons.cn/img2base64/&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;JWT一般用于实现单点登录。单点登录：如腾讯下的游戏有很多，包括lol，飞车等，在qq游戏对战平台上登录一次，然后这些不同的平台都可以直接登陆进去了，这就是单点登录的使用场景。&lt;/strong&gt; JWT就是实现单点登录的一种技术，其他的还有oath2等。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们之前已经搭建过了网关，使用网关在网关系统中比较适合进行权限校验。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3417569193742479&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdLkEI9sZfeg7cQTtgZImrT127dywmQEoranbyQgqTlDEECYLT5m2E3jgeE8R4hsxoA8haXlbt63CtuuJ434AQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;831&quot;/&gt;&lt;/span&gt;&lt;/a&gt;那么我们可以采用JWT的方式来实现鉴权校验。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;JSON Web Token（JWT）是一个非常轻巧的规范。这个规范允许我们使用JWT在用户和服务器之间传递安全可靠的信息。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一个JWT实际上就是一个字符串，它由三部分组成，头部、载荷与签名。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;头部用于描述关于该JWT的最基本的信息，例如其类型以及签名所用的算法等。这也可以被表示成一个JSON对象。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;{&lt;span&gt;&quot;typ&quot;&lt;/span&gt;:&lt;span&gt;&quot;JWT&quot;&lt;/span&gt;,&lt;span&gt;&quot;alg&quot;&lt;/span&gt;:&lt;span&gt;&quot;HS256&quot;&lt;/span&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在头部指明了签名算法是HS256算法。我们进行BASE64编码&lt;code&gt;http://base64.xpcha.com/&lt;/code&gt;，编码后的字符串如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;小知识：Base64是一种基于64个可打印字符来表示二进制数据的表示方法。由于2的6次方等于64，所以每6个比特为一个单元，对应某个可打印字符。三个字节有24个比特，对应于4个Base64单元，即3个字节需要用4个可打印字符来表示。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;JDK 中提供了非常方便的 &lt;code&gt;BASE64Encoder&lt;/code&gt; 和 &lt;code&gt;BASE64Decoder&lt;/code&gt;，用它们可以非常方便的完成基于 BASE64 的编码和解码&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;载荷就是存放有效信息的地方。这个名字像是特指飞机上承载的货品，这些有效信息包含三个部分&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1）标准中注册的声明（建议但不强制使用）&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;iss&lt;/code&gt;: jwt签发者&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;sub&lt;/code&gt;: jwt所面向的用户&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;aud&lt;/code&gt;: 接收jwt的一方&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;exp&lt;/code&gt;: jwt的过期时间，这个过期时间必须要大于签发时间&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;nbf&lt;/code&gt;: 定义在什么时间之前，该jwt都是不可用的.&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;iat&lt;/code&gt;: jwt的签发时间&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;jti&lt;/code&gt;: jwt的唯一身份标识，主要用来作为一次性token。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2）公共的声明&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;公共的声明可以添加任何的信息，一般添加用户的相关信息或其他业务需要的必要信息.但不建议添加敏感信息，因为该部分在客户端可解密.&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;3）私有的声明&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;私有声明是提供者和消费者所共同定义的声明，一般不建议存放敏感信息，因为base64是对称解密的，意味着该部分信息可以归类为明文信息。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个指的就是自定义的claim。比如前面那个结构举例中的admin和name都属于自定的claim。这些claim跟JWT标准规定的claim区别在于：&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;JWT规定的claim，JWT的接收方在拿到JWT之后，都知道怎么对这些标准的claim进行验证(还不知道是否能够验证)；而private claims不会验证，除非明确告诉接收方要对这些claim进行验证以及规则才行。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;定义一个payload:&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;{&lt;span&gt;&quot;sub&quot;&lt;/span&gt;:&lt;span&gt;&quot;1234567890&quot;&lt;/span&gt;,&lt;span&gt;&quot;name&quot;&lt;/span&gt;:&lt;span&gt;&quot;John Doe&quot;&lt;/span&gt;,&lt;span&gt;&quot;admin&quot;&lt;/span&gt;:&lt;span&gt;true&lt;/span&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然后将其进行base64加密，得到Jwt的第二部分。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;签证（signature）&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;jwt的第三部分是一个签证信息，这个签证信息由三部分组成：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;header (base64后的)&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;payload (base64后的)&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;secret&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个部分需要base64加密后的header和base64加密后的payload使用.连接组成的字符串，然后通过header中声明的加密方式进行加盐secret组合加密，然后就构成了jwt的第三部分。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;将这三部分用.连接成一个完整的字符串,构成了最终的jwt:&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;注意：secret是保存在服务器端的，jwt的签发生成也是在服务器端的，secret就是用来进行jwt的签发和jwt的验证，所以，它就是你服务端的私钥，在任何场景都不应该流露出去。一旦客户端得知这个secret, 那就意味着客户端是可以自我签发jwt了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;JJWT是一个提供端到端的JWT创建和验证的Java库。永远免费和开源(Apache License，版本2.0)，JJWT很容易使用和理解。它被设计成一个以建筑为中心的流畅界面，隐藏了它的大部分复杂性。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;官方文档：&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;https://github.com/jwtk/jjwt&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1）新建项目中的pom.xml中添加依赖：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&amp;lt;dependency&amp;gt;&lt;br/&gt;    &amp;lt;groupId&amp;gt;io.jsonwebtoken&amp;lt;/groupId&amp;gt;&lt;br/&gt;    &amp;lt;artifactId&amp;gt;jjwt&amp;lt;/artifactId&amp;gt;&lt;br/&gt;    &amp;lt;version&amp;gt;&lt;span&gt;0.9&lt;/span&gt;&lt;span&gt;.0&lt;/span&gt;&amp;lt;/version&amp;gt;&lt;br/&gt;&amp;lt;/dependency&amp;gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;创建测试类，代码如下&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;JwtBuilder builder= Jwts.builder()&lt;br/&gt;        .setId(&lt;span&gt;&quot;888&quot;&lt;/span&gt;)   &lt;span&gt;//设置唯一编号&lt;/span&gt;&lt;br/&gt;        .setSubject(&lt;span&gt;&quot;小白&quot;&lt;/span&gt;)&lt;span&gt;//设置主题  可以是JSON数据&lt;/span&gt;&lt;br/&gt;        .setIssuedAt(&lt;span&gt;new&lt;/span&gt; Date())&lt;span&gt;//设置签发日期&lt;/span&gt;&lt;br/&gt;        .signWith(SignatureAlgorithm.HS256,&lt;span&gt;&quot;itcast&quot;&lt;/span&gt;);&lt;span&gt;//设置签名 使用HS256算法，并设置SecretKey(字符串)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;//构建 并返回一个字符串 &lt;/span&gt;&lt;br/&gt;System.out.println( builder.compact() );&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;运行打印结果：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4ODgiLCJzdWIiOiLlsI_nmb0iLCJpYXQiOjE1NTc5MDQxODF9.ThecMfgYjtoys3JX7dpx3hu6pUm0piZ0tXXreFU_u3Y&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;再次运行，会发现每次运行的结果是不一样的，因为我们的载荷中包含了时间。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们刚才已经创建了token ，在web应用中这个操作是由服务端进行然后发给客户端，客户端在下次向服务端发送请求时需要携带这个token（这就好像是拿着一张门票一样），那服务端接到这个token 应该解析出token中的信息（例如用户id）,根据这些信息查询数据库返回相应的结果。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;String compactJwt=&lt;span&gt;&quot;eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4ODgiLCJzdWIiOiLlsI_nmb0iLCJpYXQiOjE1NTc5MDQxODF9.ThecMfgYjtoys3JX7dpx3hu6pUm0piZ0tXXreFU_u3Y&quot;&lt;/span&gt;;&lt;br/&gt;Claims claims = Jwts.parser().setSigningKey(&lt;span&gt;&quot;itcast&quot;&lt;/span&gt;).parseClaimsJws(compactJwt).getBody();&lt;br/&gt;System.out.println(claims);&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;运行打印效果：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;{jti=&lt;span&gt;888&lt;/span&gt;, sub=小白, iat=&lt;span&gt;1557904181&lt;/span&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;试着将token或签名秘钥篡改一下，会发现运行时就会报错，所以解析token也就是验证token.&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有很多时候，我们并不希望签发的token是永久生效的，所以我们可以为token添加一个过期时间。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1）创建token 并设置过期时间&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;//当前时间&lt;/span&gt;&lt;br/&gt;&lt;span&gt;long&lt;/span&gt; currentTimeMillis = System.currentTimeMillis();&lt;br/&gt;Date date = &lt;span&gt;new&lt;/span&gt; Date(currentTimeMillis);&lt;br/&gt;JwtBuilder builder= Jwts.builder()&lt;br/&gt;        .setId(&lt;span&gt;&quot;888&quot;&lt;/span&gt;)   &lt;span&gt;//设置唯一编号&lt;/span&gt;&lt;br/&gt;        .setSubject(&lt;span&gt;&quot;小白&quot;&lt;/span&gt;)&lt;span&gt;//设置主题  可以是JSON数据&lt;/span&gt;&lt;br/&gt;        .setIssuedAt(&lt;span&gt;new&lt;/span&gt; Date())&lt;span&gt;//设置签发日期&lt;/span&gt;&lt;br/&gt;        .setExpiration(date)&lt;br/&gt;        .signWith(SignatureAlgorithm.HS256,&lt;span&gt;&quot;itcast&quot;&lt;/span&gt;);&lt;span&gt;//设置签名 使用HS256算法，并设置SecretKey(字符串)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;//构建 并返回一个字符串&lt;/span&gt;&lt;br/&gt;System.out.println( builder.compact() );&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;解释：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;  .setExpiration(date)&lt;span&gt;//用于设置过期时间 ，参数为Date类型数据&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;运行，打印效果如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4ODgiLCJzdWIiOiLlsI_nmb0iLCJpYXQiOjE1NTc5MDUzMDgsImV4cCI6MTU1NzkwNTMwOH0&lt;span&gt;.4&lt;/span&gt;q5AaTyBRf8SB9B3Tl-I53PrILGyicJC3fgR3gWbvUI&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2）解析TOKEN&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;String compactJwt=&lt;span&gt;&quot;eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4ODgiLCJzdWIiOiLlsI_nmb0iLCJpYXQiOjE1NTc5MDUzMDgsImV4cCI6MTU1NzkwNTMwOH0.4q5AaTyBRf8SB9B3Tl-I53PrILGyicJC3fgR3gWbvUI&quot;&lt;/span&gt;;&lt;br/&gt;Claims claims = Jwts.parser().setSigningKey(&lt;span&gt;&quot;itcast&quot;&lt;/span&gt;).parseClaimsJws(compactJwt).getBody();&lt;br/&gt;System.out.println(claims);&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;打印效果：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.2184769038701623&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdLkEI9sZfeg7cQTtgZImrT127dywmQEsgZjicicdoxBb26uviazkYCoxUE9buCsib9xqibq57libhRN2TTiaHyyrhBicg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;801&quot;/&gt;&lt;/span&gt;&lt;/a&gt;当前时间超过过期时间，则会报错。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们刚才的例子只是存储了id和subject两个信息，如果你想存储更多的信息（例如角色）可以定义自定义claims。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;创建测试类，并设置测试方法：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;创建token:&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;@Test&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;createJWT&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;&lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;//当前时间&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;long&lt;/span&gt; currentTimeMillis = System.currentTimeMillis();&lt;br/&gt;    currentTimeMillis+=&lt;span&gt;1000000L&lt;/span&gt;;&lt;br/&gt;    Date date = &lt;span&gt;new&lt;/span&gt; Date(currentTimeMillis);&lt;br/&gt;    JwtBuilder builder= Jwts.builder()&lt;br/&gt;            .setId(&lt;span&gt;&quot;888&quot;&lt;/span&gt;)   &lt;span&gt;//设置唯一编号&lt;/span&gt;&lt;br/&gt;            .setSubject(&lt;span&gt;&quot;小白&quot;&lt;/span&gt;)&lt;span&gt;//设置主题  可以是JSON数据&lt;/span&gt;&lt;br/&gt;            .setIssuedAt(&lt;span&gt;new&lt;/span&gt; Date())&lt;span&gt;//设置签发日期&lt;/span&gt;&lt;br/&gt;            .setExpiration(date)&lt;span&gt;//设置过期时间&lt;/span&gt;&lt;br/&gt;            .claim(&lt;span&gt;&quot;roles&quot;&lt;/span&gt;,&lt;span&gt;&quot;admin&quot;&lt;/span&gt;)&lt;span&gt;//设置角色&lt;/span&gt;&lt;br/&gt;            .signWith(SignatureAlgorithm.HS256,&lt;span&gt;&quot;itcast&quot;&lt;/span&gt;);&lt;span&gt;//设置签名 使用HS256算法，并设置SecretKey(字符串)&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;//构建 并返回一个字符串&lt;/span&gt;&lt;br/&gt;    System.out.println( builder.compact() );&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;运行打印效果：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4ODgiLCJzdWIiOiLlsI_nmb0iLCJpYXQiOjE1NTc5MDU4MDIsImV4cCI6MTU1NzkwNjgwMiwicm9sZXMiOiJhZG1pbiJ9.AS5Y2fNCwUzQQxXh_QQWMpaB75YqfuK-&lt;span&gt;2&lt;/span&gt;P7VZiCXEJI&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;解析TOKEN:&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;//解析&lt;/span&gt;&lt;br/&gt;&lt;span&gt;@Test&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;parseJWT&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;&lt;/span&gt;{&lt;br/&gt;    String compactJwt=&lt;span&gt;&quot;eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4ODgiLCJzdWIiOiLlsI_nmb0iLCJpYXQiOjE1NTc5MDU4MDIsImV4cCI6MTU1NzkwNjgwMiwicm9sZXMiOiJhZG1pbiJ9.AS5Y2fNCwUzQQxXh_QQWMpaB75YqfuK-2P7VZiCXEJI&quot;&lt;/span&gt;;&lt;br/&gt;    Claims claims = Jwts.parser().setSigningKey(&lt;span&gt;&quot;itcast&quot;&lt;/span&gt;).parseClaimsJws(compactJwt).getBody();&lt;br/&gt;    System.out.println(claims);&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;运行效果：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.275820170109356&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdLkEI9sZfeg7cQTtgZImrT127dywmQECrxiaUT976tj2s1PCMQWh1okoRNFUb2e06ZsUj1nxXtg3ARugCWRYzQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;823&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/figure&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7233082706766917&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdLkEI9sZfeg7cQTtgZImrT127dywmQEcx0K4qnesI4jghm7OoEmqsb664c97WMg4icgQkNb31iaQDZicVeMYTykQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;665&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/figure&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;用户进入网关开始登陆，网关过滤器进行判断，如果是登录，则路由到后台管理微服务进行登录&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;用户登录成功，后台管理微服务签发&lt;code&gt;JWT TOKEN&lt;/code&gt;信息返回给用户&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;用户再次进入网关开始访问，网关过滤器接收用户携带的TOKEN&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;网关过滤器解析TOKEN ，判断是否有权限，如果有，则放行，如果没有则返回未认证错误&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1）在&lt;code&gt;changgou_service_system&lt;/code&gt;中创建类：&lt;code&gt;JwtUtil&lt;/code&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;package&lt;/span&gt; com.changgou.system.util;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; io.jsonwebtoken.JwtBuilder;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; io.jsonwebtoken.Jwts;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; io.jsonwebtoken.SignatureAlgorithm;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; javax.crypto.SecretKey;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; javax.crypto.spec.SecretKeySpec;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; java.util.Base64;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; java.util.Date;&lt;br/&gt;&lt;span&gt;/**&lt;br/&gt; * JWT工具类&lt;br/&gt; */&lt;/span&gt;&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;JwtUtil&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;//有效期为&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; Long JWT_TTL = &lt;span&gt;3600000L&lt;/span&gt;;&lt;span&gt;// 60 * 60 *1000  一个小时&lt;/span&gt;&lt;br/&gt; &lt;span&gt;//设置秘钥明文&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; String JWT_KEY = &lt;span&gt;&quot;itcast&quot;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;/**&lt;br/&gt;     * 创建token&lt;br/&gt;     * &lt;span&gt;@param&lt;/span&gt; id&lt;br/&gt;     * &lt;span&gt;@param&lt;/span&gt; subject&lt;br/&gt;     * &lt;span&gt;@param&lt;/span&gt; ttlMillis&lt;br/&gt;     * &lt;span&gt;@return&lt;/span&gt;&lt;br/&gt;     */&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; String &lt;span&gt;createJWT&lt;/span&gt;&lt;span&gt;(String id, String subject, Long ttlMillis)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;br/&gt;        SignatureAlgorithm signatureAlgorithm = SignatureAlgorithm.HS256;&lt;br/&gt;        &lt;span&gt;long&lt;/span&gt; nowMillis = System.currentTimeMillis();&lt;br/&gt;        Date now = &lt;span&gt;new&lt;/span&gt; Date(nowMillis);&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt;(ttlMillis==&lt;span&gt;null&lt;/span&gt;){&lt;br/&gt;            ttlMillis=JwtUtil.JWT_TTL;&lt;br/&gt;        }&lt;br/&gt;        &lt;span&gt;long&lt;/span&gt; expMillis = nowMillis + ttlMillis;&lt;br/&gt;        Date expDate = &lt;span&gt;new&lt;/span&gt; Date(expMillis);&lt;br/&gt;        SecretKey secretKey = generalKey();&lt;br/&gt;&lt;br/&gt;        JwtBuilder builder = Jwts.builder()&lt;br/&gt;                .setId(id)              &lt;span&gt;//唯一的ID&lt;/span&gt;&lt;br/&gt;                .setSubject(subject)   &lt;span&gt;// 主题  可以是JSON数据&lt;/span&gt;&lt;br/&gt;                .setIssuer(&lt;span&gt;&quot;admin&quot;&lt;/span&gt;)     &lt;span&gt;// 签发者&lt;/span&gt;&lt;br/&gt;                .setIssuedAt(now)      &lt;span&gt;// 签发时间&lt;/span&gt;&lt;br/&gt;                .signWith(signatureAlgorithm, secretKey) &lt;span&gt;//使用HS256对称加密算法签名, 第二个参数为秘钥&lt;/span&gt;&lt;br/&gt;                .setExpiration(expDate);&lt;span&gt;// 设置过期时间&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; builder.compact();&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;/**&lt;br/&gt;     * 生成加密后的秘钥 secretKey&lt;br/&gt;     * &lt;span&gt;@return&lt;/span&gt;&lt;br/&gt;     */&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; SecretKey &lt;span&gt;generalKey&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;byte&lt;/span&gt;[] encodedKey = Base64.getDecoder().decode(JwtUtil.JWT_KEY);&lt;br/&gt;        SecretKey key = &lt;span&gt;new&lt;/span&gt; SecretKeySpec(encodedKey, &lt;span&gt;0&lt;/span&gt;, encodedKey.length, &lt;span&gt;&quot;AES&quot;&lt;/span&gt;);&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; key;&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2）修改&lt;code&gt;AdminController&lt;/code&gt;的login方法, 用户登录成功 则 签发TOKEN&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;/**&lt;br/&gt; * 登录&lt;br/&gt; * &lt;span&gt;@param&lt;/span&gt; admin&lt;br/&gt; * &lt;span&gt;@return&lt;/span&gt;&lt;br/&gt; */&lt;/span&gt;&lt;br/&gt;&lt;span&gt;@PostMapping&lt;/span&gt;(&lt;span&gt;&quot;/login&quot;&lt;/span&gt;)&lt;br/&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; Result &lt;span&gt;login&lt;/span&gt;&lt;span&gt;(@RequestBody Admin admin)&lt;/span&gt;&lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;boolean&lt;/span&gt; login = adminService.login(admin);&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt;(login){  &lt;span&gt;//如果验证成功&lt;/span&gt;&lt;br/&gt;        Map&amp;lt;String,String&amp;gt; info = &lt;span&gt;new&lt;/span&gt; HashMap&amp;lt;&amp;gt;();&lt;br/&gt;        info.put(&lt;span&gt;&quot;username&quot;&lt;/span&gt;,admin.getLoginName());&lt;br/&gt;        String token = JwtUtil.createJWT(UUID.randomUUID().toString(), admin.getLoginName(), &lt;span&gt;null&lt;/span&gt;);&lt;br/&gt;        info.put(&lt;span&gt;&quot;token&quot;&lt;/span&gt;,token);&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; Result(&lt;span&gt;true&lt;/span&gt;, StatusCode.OK,&lt;span&gt;&quot;登录成功&quot;&lt;/span&gt;,info);&lt;br/&gt;    }&lt;span&gt;else&lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; Result(&lt;span&gt;false&lt;/span&gt;,StatusCode.LOGINERROR,&lt;span&gt;&quot;用户名或密码错误&quot;&lt;/span&gt;);&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用postman 测试&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.45318352059925093&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdLkEI9sZfeg7cQTtgZImrT127dywmQEr9Xdpkmyh8jZNxmUSYjz4No4iaQVmFJ2w02fZMlSqnicAicOCakTLib50Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;801&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1）在&lt;code&gt;changgou_gateway_system&lt;/code&gt;网关系统添加依赖&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&amp;lt;!--鉴权--&amp;gt;&lt;br/&gt;&amp;lt;dependency&amp;gt;&lt;br/&gt;    &amp;lt;groupId&amp;gt;io.jsonwebtoken&amp;lt;/groupId&amp;gt;&lt;br/&gt;    &amp;lt;artifactId&amp;gt;jjwt&amp;lt;/artifactId&amp;gt;&lt;br/&gt;    &amp;lt;version&amp;gt;&lt;span&gt;0.9&lt;/span&gt;&lt;span&gt;.0&lt;/span&gt;&amp;lt;/version&amp;gt;&lt;br/&gt;&amp;lt;/dependency&amp;gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2）创建JWTUtil类&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;package&lt;/span&gt; com.changgou.gateway.util;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; io.jsonwebtoken.Claims;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; io.jsonwebtoken.Jwts;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; javax.crypto.SecretKey;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; javax.crypto.spec.SecretKeySpec;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; java.util.Base64;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;/**&lt;br/&gt; * jwt校验工具类&lt;br/&gt; */&lt;/span&gt;&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;JwtUtil&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;//有效期为&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; Long JWT_TTL = &lt;span&gt;3600000L&lt;/span&gt;;&lt;span&gt;// 60 * 60 *1000  一个小时&lt;/span&gt;&lt;br/&gt; &lt;span&gt;//设置秘钥明文&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; String JWT_KEY = &lt;span&gt;&quot;itcast&quot;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;/**&lt;br/&gt;     * 生成加密后的秘钥 secretKey&lt;br/&gt;     *&lt;br/&gt;     * &lt;span&gt;@return&lt;/span&gt;&lt;br/&gt;     */&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; SecretKey &lt;span&gt;generalKey&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;byte&lt;/span&gt;[] encodedKey = Base64.getDecoder().decode(JwtUtil.JWT_KEY);&lt;br/&gt;        SecretKey key = &lt;span&gt;new&lt;/span&gt; SecretKeySpec(encodedKey, &lt;span&gt;0&lt;/span&gt;, encodedKey.length, &lt;span&gt;&quot;AES&quot;&lt;/span&gt;);&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; key;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;/**&lt;br/&gt;     * 解析&lt;br/&gt;     *&lt;br/&gt;     * &lt;span&gt;@param&lt;/span&gt; jwt&lt;br/&gt;     * &lt;span&gt;@return&lt;/span&gt;&lt;br/&gt;     * &lt;span&gt;@throws&lt;/span&gt; Exception&lt;br/&gt;     */&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; Claims &lt;span&gt;parseJWT&lt;/span&gt;&lt;span&gt;(String jwt)&lt;/span&gt; &lt;span&gt;throws&lt;/span&gt; Exception &lt;/span&gt;{&lt;br/&gt;        SecretKey secretKey = generalKey();&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; Jwts.parser()&lt;br/&gt;                .setSigningKey(secretKey)&lt;br/&gt;                .parseClaimsJws(jwt)&lt;br/&gt;                .getBody();&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;3）创建过滤器，用于token验证&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;/**&lt;br/&gt; * 鉴权过滤器 验证token&lt;br/&gt; */&lt;/span&gt;&lt;br/&gt;&lt;span&gt;@Component&lt;/span&gt;&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;AuthorizeFilter&lt;/span&gt; &lt;span&gt;implements&lt;/span&gt; &lt;span&gt;GlobalFilter&lt;/span&gt;, &lt;span&gt;Ordered&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; String AUTHORIZE_TOKEN = &lt;span&gt;&quot;token&quot;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; Mono&amp;lt;Void&amp;gt; &lt;span&gt;filter&lt;/span&gt;&lt;span&gt;(ServerWebExchange exchange, GatewayFilterChain chain)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;  &lt;span&gt;//1. 获取请求&lt;/span&gt;&lt;br/&gt;        ServerHttpRequest request = exchange.getRequest();&lt;br/&gt;        &lt;span&gt;//2. 则获取响应&lt;/span&gt;&lt;br/&gt;        ServerHttpResponse response = exchange.getResponse();&lt;br/&gt;        &lt;span&gt;//3. 如果是登录请求则放行&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (request.getURI().getPath().contains(&lt;span&gt;&quot;/admin/login&quot;&lt;/span&gt;)) {&lt;br/&gt;            &lt;span&gt;return&lt;/span&gt; chain.filter(exchange);&lt;br/&gt;        }&lt;br/&gt;        &lt;span&gt;//4. 获取请求头&lt;/span&gt;&lt;br/&gt;        HttpHeaders headers = request.getHeaders();&lt;br/&gt;        &lt;span&gt;//5. 请求头中获取令牌&lt;/span&gt;&lt;br/&gt;        String token = headers.getFirst(AUTHORIZE_TOKEN);&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;//6. 判断请求头中是否有令牌&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (StringUtils.isEmpty(token)) {&lt;br/&gt;            &lt;span&gt;//7. 响应中放入返回的状态吗, 没有权限访问&lt;/span&gt;&lt;br/&gt;            response.setStatusCode(HttpStatus.UNAUTHORIZED);&lt;br/&gt;            &lt;span&gt;//8. 返回&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;return&lt;/span&gt; response.setComplete();&lt;br/&gt;        }&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;//9. 如果请求头中有令牌则解析令牌&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;try&lt;/span&gt; {&lt;br/&gt;            JwtUtil.parseJWT(token);&lt;br/&gt;        } &lt;span&gt;catch&lt;/span&gt; (Exception e) {&lt;br/&gt;            e.printStackTrace();&lt;br/&gt;            &lt;span&gt;//10. 解析jwt令牌出错, 说明令牌过期或者伪造等不合法情况出现&lt;/span&gt;&lt;br/&gt;            response.setStatusCode(HttpStatus.UNAUTHORIZED);&lt;br/&gt;            &lt;span&gt;//11. 返回&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;return&lt;/span&gt; response.setComplete();&lt;br/&gt;        }&lt;br/&gt;        &lt;span&gt;//12. 放行&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; chain.filter(exchange);&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; &lt;span&gt;getOrder&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;;&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;4）测试：&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;注意: 数据库中管理员账户为 : admin , 密码为 : 123456&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果不携带token直接访问，则返回401错误&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.1715686274509804&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdLkEI9sZfeg7cQTtgZImrT127dywmQEFgIaKZYhV3KicCfP9ZUiaJSEcWtDOI0gJQuOTVRveDibpnCP273kNeic1g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;816&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果携带正确的token，则返回查询结果&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.48886138613861385&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdLkEI9sZfeg7cQTtgZImrT127dywmQEUvG0FVEkoNPWNw4AhCdlQuicyWRKU3Zy8zIRMyp9qXp0PuMk9gP7Xaw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;808&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>1f48f5e177dad3de9271a779ff9bd893</guid>
<title>已入字节的大佬各厂三年Go面经</title>
<link>https://toutiao.io/k/a39rox2</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;strong&gt;常见面试问题记录&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;blockquote class=&quot;js_blockquote_wrap&quot; data-type=&quot;2&quot; data-url=&quot;&quot; data-author-name=&quot;&quot; data-content-utf8-length=&quot;58&quot; data-source-title=&quot;&quot; data-text=&quot;原文链接：https://www.nowcoder.com/discuss/662296  面经内容较长，建议先收藏后看&quot; data-editid=&quot;32juuwx5fm1lk5mu58g&quot;&gt;&lt;section class=&quot;js_blockquote_digest&quot;&gt;&lt;p&gt;原文链接：&lt;span&gt;https://www.nowcoder.com/discuss/662296 &lt;/span&gt; 面经内容较长，建议先收藏后看&lt;/p&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;包含的公司：映客、好未来、猿辅导、知乎、高德、滴滴、字节、腾讯、美团、格步科技、旷视科技、网易、新浪、百度、小米、京东云、伴鱼；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;前面是汇总，各家公司面经在后面，大而全，是我一个月的全部面试记录，整体看下来问题是比较基础的，基本都是远程面试。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-3&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;rpc微服务框架&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;mq底层数仓&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;runtime包里面的方法&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;redis过期策略和内存淘汰策略&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;sql索引优化问题&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;一个update语句的执行过程&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;go的profile工具？&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;http和tcp有什么区别&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;用netstat看tcp连接的时候有关注过time_wait和close_wait吗？&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;fork的底层实现方式&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;go语言的时候垃圾回收，写代码的时候如何减少小对象分配&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;redis的存储结构？&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;实现map的方法除了哈希还有哪些？&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;redis的setnx底层怎么实现的？&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;go的gc原理了解吗？&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;gin框架的路由是怎么处理的？&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;mysql索引结构&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;B+树和B树有什么区别&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;sql查询性能瓶颈处理方式&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;sql索引优化方式，explain字段含义&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;gmp具体的调度策略&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;B+树细节优势，和哈希索引的区别，是为了解决什么问题？&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;事务四个特性四个隔离级别&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;httptime_wait状态分析&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;nginx负载均衡策略&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;es内部实现原理，如何保证数据一致性，如何降低压力&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;linux查看磁盘、io、内存情况的命令&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;分库分表联表查询有哪些方式&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;覆盖查询&amp;amp;回表查询&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;聚簇索引&amp;amp;非聚簇索引&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;go实现不重启热部署&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;go性能分析工具&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;tcp如何保证稳定性&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;http和http2区别&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;https的连接过程&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;kafka如何做到高可用&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;分布式锁如何实现&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;读扩散&amp;amp;写扩散&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;goroutine创建数量有限制吗？&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;go并发机制&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;线程协程区别&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;锁的可重入&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;常用限流算法&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;rpc调用过程&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;熔断降级开源框架&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;serviceMash&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;什么操作会影响联表查询效率&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;一个sql的查询过程&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;redis单线程是如何做到支持高并发的&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;IO多路复用&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;为什么内存操作很快&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;innoDB为什么支持事务&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;内存操作为什么很快&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;go内存操作也要处理IO，是如何处理的?&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;k8s各种组件&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;gomap并发安全问题，如何解决&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;gogc&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;一个进程能创建的线程数量受到哪些制约？&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;redis主从同步怎么做的&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;k8s组件及其作用&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;k8s基本操作&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;docker底层实现原理&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;docker基本操作&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;linux常用操作&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;linux内核&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;集群分布式&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;线程&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;etcd&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;grpc&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;kafka&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;es&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;数据库分库分表，啥时候分库啥时候分表&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;数据库的存储引擎有哪些，区别是啥&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;innodb索引用的是啥，为什么不用b+、红黑&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;事务的隔离级别&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;层序遍历二叉树&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;判断二叉树是否是镜像二叉树&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;堆排&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;中间件:kafka丢失消息和不重复消费&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;redis底层数据结构实现&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;mysql索引，mongodb和mysql索引的区别，给了条sql语句问索引怎么构建&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;golang:切片和数组、map、gc、gpm调度模型&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;高并发限流、熔断&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;对一个链表进行排序&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;mysql引擎知道哪些，有哪些索引，底层是怎么实现的&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;redis底层实现&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;给n个数1n，随机n次，将这n个数输出&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;线程和协程的区别&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;io多路复用，select\poll\epoll的实现和区别&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;三次握手和四次挥手&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;长连接和短链接(怎么实现的、区别以及应用场景)&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;计算二叉树所有左叶子节点的和&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;n对括号输出所有合法的情况&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;n个有序的数组合并成一个&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;GPM调度模型&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;协程和线程的区别，内核态和用户态&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;btree和b+tree&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;二叉树中序遍历，递归和非递归两种方式&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;kafka如何保证消息有序，消息的重复和丢失&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;http和https的区别，https建立连接的过程&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;http1.1和http2.0的区别&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;缓存和数据库一致性的问题&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;syncpool的实现原理&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;hash冲突解决办法，有什么弊端&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;map里面解决hash冲突怎么做的，冲突了元素放在头还是尾&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;10亿的url去重怎么做&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;rediszset怎么使用的，底层怎么实现的，适用于什么场景&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;单链表找到中间节点&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;设计一个秒杀系统&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;给定一个二叉树和其中的一个结点，请找出中序遍历顺序的下一个结点并且返回。注意，树中的结点不仅包含左右子结点，同时包含指向父结点的指针&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;while(tree){sleep(1)}这个会有什么问题&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;sleep底层实现原理&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;线上问题一般怎么排查，比如oom&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;手写LRU相关知识点：模拟，结构，增删改查&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;一个整型数组，数组中的一个或连续多个整数组成一个子数组。求所有子数组的和的最大值&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;docker和虚拟机区别&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;k8s底层原理&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;linux文件系统&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;网络七层模型和五层模型&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;数据库索引&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;MySQL优化（索引、分表分库）&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;最左匹配原则？问为什么有这个东西？&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;同一个协程里面，对无缓冲channel同时发送和接收数据有什么问题&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;channel和锁对比一下&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;channel的应用场景&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;slice和array区别&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;向为nil的channel发送数据会怎么样&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;map取一个key，然后修改这个值，原map数据的值会不会变化&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;Hash实现、冲突解决、应用&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;输入URL发生的整个网络过程&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;Redis怎么保证数据一致性&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;TCP流量控制、拥塞控制&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;TCP半连接队列&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;TCP半关闭状态&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;TCPTIME_WAIT状态&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;内核态、用户态&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;100枚硬币，其中有一枚硬币重量不一样，用天平秤怎么快速找到这一枚硬币&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;LRU缓存实现，要求set\get操作o(1)时间复杂度&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;TCP滑动窗口&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;一个SQL语句的执行过程&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;MVCC原理&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;ACID的涵义，MYSQL是如何保证的&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;缓存失效的几种场景，以及解决方案&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;缓存雪崩、击穿的解决方案&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;如何排查线上程序问题&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;protobuf为什么快&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;分布式系统优缺点，一致性是如何保证的&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;雪崩、穿透和击穿&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;最终一致性&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;mysql分布式id&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;mysql索引慢分析：线上开启slowlog，提取慢查询，然后仔细分析explain中tye字段以及extra字段，发生的具体场景及mysql是怎么做的&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;mysql分库分表平滑扩容方案&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;docker预热&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;gowaitgroup的坑&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;k8s原理&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;mysql隔离级别、sql慢查询&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;etcd原理&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;给一个栈，用另外一个栈实现排序&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;gostruct能不能比较&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;select可以用于什么&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;context包的用途&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;client如何实现长连接&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;主协程如何等其余协程完再操作&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;slice，len，cap，共享，扩容&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;map如何顺序读取&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;大文件排序&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;数据库如何建索引&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;tcp与udp区别，udp优点，适用场景&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;raft算法是那种一致性算法&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;一个请求到达pod的过程、configmap、dockerfile&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;二叉树遍历，非递归&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;strong&gt;映客&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;goslice和map的区别，slice和数组的区别&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;go结构体和结构体指针的区别&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;go深拷贝，什么时候需要深拷贝&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如何拿到多个goroutine的返回值，如何区别他们&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;go如何避免panic&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;设计用户详情的表，如何生成主键&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;分库之后唯一性如何保证&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;实现一个队列访问复杂度为O(1)&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;设计一个日榜系统，分布式下如何做&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;说下项目里面遇到的优化问题&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;说下项目当时的实现方式&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;哪些键可以设置唯一索引&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如何实现一个短链接服务&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一个SQL语句的执行过程&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;问了很多项目相关问题&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为什么选型redis&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结构体创建优化&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;中间各个链条出现问题怎么办？如何解决，有没有什么其他方案&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;gochannel实现排序&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;连接池&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;读过什么go源码没有&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;linux常用命令罗列一下&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用正则去掉空行&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;四次挥手&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;go语言gc了解吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;redis设计稳定性&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;协程线程区别&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;你有什么薄弱的地方?&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;自己未来的技术规划是什么&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;go什么场景使用接口&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结构体传递场景&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;技术积累&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;技术计划&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;让你最有成就感的事情&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对加班怎么看&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最近在看什么书？&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;strong&gt;伴鱼&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;自我介绍&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;算法题&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;限时二十分钟&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;//给定一个以字符串表示的非负整数num，移除这个数中的k位数字，使得剩下的数字最小。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;//注意:&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;//●num的长度小于10002且≥k。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;//●num不会包含任何前导零。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;//输入/输出示例：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;//Input:&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;//num=&quot;1432219&quot;,k=3&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;//Output:&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;//&quot;1219&quot;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;//Explanation:移除掉三个数字4,3,和2形成一个新的最小的数字1219。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;docker容器化技术的核心技术&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对k8s的基础概念的了解情况&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对k8s有哪些操作呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;k8syml文件是如何写的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;linux常用操作&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;查端口用什么命令？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;lsof查不到的话用什么命令？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;系统上有个大文件，但是不知道文件的名字和路径，在当前用户的用户空间下，如何找到他？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;看cpu负载用什么命令&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;看io用什么命令&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对mysql的设计掌握如何？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;什么场景下联合索引会失效？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;mysql默认的存储引擎&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用的索引数据结构是什么？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;B+数和B树相比有什么优点？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;默认的事务隔离级别是什么？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个隔离级别是如何实现的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果实现分布式事务？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对redis有了解吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;redis数据持久化方式有哪些？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;主从模式下，新加入一台从服务器，数据同步是怎么同步的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;集群模式下如何保证高可用&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;redis有哪些数据类型&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有序集合底层怎么实现的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;redis字符串是如何存储的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;tcp握手，为什么是四次挥手&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;挥手time_wait阶段是什么时候&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;time_wait时间太长会怎样？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;你有哪些擅长的基础知识是我还没问到的吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;项目讨论：个人项目讨论&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;项目设计：多平台消息推送系统&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果要你实现这样一个系统，你思考下如何实现，说下实现方式&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;你能想到哪些问题？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;推送量很大，资源隔离问题&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;消息的可靠性自己做IM消息，第三方可靠性不强&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果要做群聊，对于离线的人上线之后如何收到未收到的消息？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;写扩散和读扩散概念？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;未来的技术规划是怎样的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;未来找工作会更看重哪些点？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在推动项目上有什么经验吗？&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;strong&gt;跟谁学&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;算法题&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;限时十分钟&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;//实现一个有序的map&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;//支持add&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;//支持delete&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;//支持迭代&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;自我介绍&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;着重讲下简历里的一个项目&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为什么没有选择开源ELK体系，后续有了解吗？为什么要做重复造轮子的事情&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;goroutine在项目里面主要承担了什么责任&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;channel在项目里面是什么作用？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;项目中正则处理火焰图是如何评估的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有对比过其他库吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;go开发多长时间了？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;数组和切片的关系和区别&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;内存申请上有什么区别&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;函数传递有什么区别&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;切片底层的架构&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如何把数组转化成一个切片&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;gmp模型说一下&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;服务能开多少个m由什么决定&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;开多少个p由什么决定&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;m和p是什么样的关系&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;同时启了一万个g，如何调度的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;go里面channel是什么样的概念&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;channel和共享内存有什么优劣势？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;channel的底层有了解过吗&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;go里面interface是什么概念&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;相比于javac++interface有什么区别吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;docker是基于什么来实现的&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;docker分层打包了解吗&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;docker怎么看日志&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;容器的cpu和内存占比&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;docker端口映射怎么看？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;后续的技术规划是怎样的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;反问&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;你是这边项目的leader吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;团队情况是什么样的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;面试的岗位是不确定的是吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;会有月度谈话之类的吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;您能说下您的工作经历吗？&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;strong&gt;京东云&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;实现lru，大概写下思路&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;自我介绍&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;项目介绍：问的比较细&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;devops相关&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;介绍下k8s的基础组件&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;k8s组件的职责&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;介绍下和k8s有关的项目&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;项目优化流程怎么做的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;问了很多项目细节&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;实时报警怎么做的&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;性能优化怎么做的？怎么发现问题的？怎么修复的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;项目里面你的职责主要是什么？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对linux常用命令熟悉吗&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;数组和切片的区别&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;线程和协程的区别&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一个进程能创建多少线程受哪些因素的限制&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;golang用到哪些框架&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;反转单链表如何实现，口述一下&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;说一下上面lru算法的实现思路&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;你觉得java和golang有什么优势劣势？&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;strong&gt;旷视科技&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;快排&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对docker和k8s使用多吗？使用到什么程度？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;定制化开发了哪些功能？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;监听pod状态变化是怎么实现的&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对k8s使用了解到什么程度，组件这些&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果有一个节点不可用了，如何把pod驱逐到其他节点&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;kubectlapply和create有什么区别&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如何更新一个k8s服务&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;pod里面可以有多个容器吗&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;pod内容器是相互隔离的吗&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;你们怎么去监控一个服务是否故障&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;容器日志是如何采集的，流程是怎么走的&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;dockerfile经常写，有什么常用命令&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;cmd和entrypoint有什么区别&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;介绍下在线上课的项目&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对redis作为缓存使用熟悉吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;雪崩、穿透、击穿说下以及如何解决预防&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;缓存淘汰机制了解吗，lru说下&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;golangwait.group用过吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;go里面map是并发安全的吗？不是并发安全该如何使用？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;读写锁说下&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;defer用的多吗？有哪些应用&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;异常捕获是如何做的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;常用的数据结构说下&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;redis跳表知道吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;跳表和二叉检索树优劣&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;数组是如何实现用下标访问任意元素的&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;浏览器浏览网页前进后退如何实现？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如何查找一个无序数组的第K大元素&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;strong&gt;滴滴&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;写个二分查找&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;自我介绍&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;挑一个项目具体说下&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;怎么理解“不要用共享内存来通信，而是用通信来共享内存”&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用过什么缓存？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;redis是单线程还是多线程？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;redis作为单线程，是怎么支持高并发的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对内存操作更深入的了解过吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有没有想过内存操作为什么很快？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;redis内存操作很快？有没有IO读写&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;IO读写什么时候会发生？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;IO什么时候会做写入？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;redis写入通信协议是什么？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;redis写入操作IO操作快是因为异步&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用go协程的时候也是要走IO的，go是如何处理的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;IO多路复用有看过吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;redis的数据结构了解哪些？深入说下内部实现&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;跳表是一种什么结构？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;扩展类型说下&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;hyperloglog详细说下&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;数据库用过哪些？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;数据库引擎用什么?&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;怎么理解ACID这个概念&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;innoDB支持事务，他为什么支持事务？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;看过B树B+树这些数据结构吗？理解不理解这些树的构造，是要解决什么问题？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;说下对docker的理解，是解决什么问题的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;工作的时候用过什么消息中间件？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;版本控制用的什么？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;平时是怎么学习的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;自我介绍&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;你个人更偏好业务方向和基础架构方向？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;挑一个对你来说有挑战的项目，说下其中的难点，是怎么解决的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用redis在服务里面解决什么样的问题？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;nodejs和go是基于什么样的考虑是用这两种语言的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;限制用户评论过去一个小时内只能评论三次，用redis实现？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;mysql的存储引擎了解哪些？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;mysql索引用过哪些？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;了解过聚簇索引和非聚簇索引吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;覆盖查询和回表查询了解吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;分析sql性能好坏如何分析？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;explain里面其他字段关注过吗？type字段关注过吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;B+树和哈希索引区别是什么？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;锁的类型用过哪些&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;什么叫悲观锁、什么叫乐观锁&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;乐观锁如何保证最终一致性？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;事务的基本特性？解释一下&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;事务隔离级别有哪些？解释一下&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;分库分表分区有哪些差别？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;分表遇到联表查询怎么分页？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;shardingjdbc如何实现分页查询的？其内部偏移如何实现的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;除了用jdbc和中间件方式之外，分库分表下联表查询还有别的解决方案吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;nginx用过吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大致了解nginx的哪些功能？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;nginx的负载均衡是在第几层？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;除了nginx的负载均衡还了解过其他负载均衡吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;反向代理和正向代理有什么差别吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;linux熟悉吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如何统计nginx日志里面的访问量最多的十个IP地址？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;es用过吗？使用过哪些功能？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;了解其内部实现吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;es写入数据如何保证两边数据一致性，两边数据同时写入会越来越大？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;自我介绍&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对新的机会主要看哪些方面？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;挑一个个人感觉比较满意，存在技术挑战的事情，说一下细节&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在基础架构服务稳定性方面有什么总结吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如何保证服务高并发的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;细节的优化点有哪些？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;golang垃圾回收机制了解吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;mysql主键索引和非主键索引在搜索和检索过程中有什么区别吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;事务的隔离级别有哪些？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;脏读幻读说一下&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;mysql如何实现事务的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;mysql主从同步过程了解吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;分库分表常用模式&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一开始一个项目数据比较多，后来需要分库分表，有什么思路在不停服务的情况下做到平滑切换？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;设计一个短链接服务&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;strong&gt;学而思&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;自我介绍&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在第一家公司主要做些什么？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;后端核心开发的项目是什么？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;权限系统如何做？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;接口权限如何做？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在线消息服务讲下&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如何避免redis故障&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;日志监控怎么做的？如何设计的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;写入ES想过如何降低压力吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;火焰图怎么来寻找瓶颈的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;gpm模型&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如何实现一个线程安全的map&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;创建一个数组底层扩容&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;make一个slice参数怎么写？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;mysql的索引结构&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对b+树了解吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;什么会影响联合索引查询效率&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用栈实现队列&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用栈能实现双向队列吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;主要做哪些基础架构工作呢？&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;strong&gt;网易&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;自我介绍&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;未来的主要方向&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;介绍下之前的项目用到的优化点、难点&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为什么不要大量使用goroutine&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;gpm模型&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;go里面goroutine创建数量有限制吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;线程和协程有什么区别&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;golang支持哪些并发机制&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;go利用channel通信的方式&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有缓冲和无缓冲channel的区别&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;channel实现原理&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;被close的channel会有什么问题&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;分布式锁知道哪些？用channel如何实现？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;集群用channel如何实现分布式锁&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;并行goroutine如何实现&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;go用共享内存的方式实现并发如何保证安全？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;go的锁是可重入的吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;获取不到锁会一直等待吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那如何实现一个timeout的锁？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;go切片是如何实现的&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;主要用redis实现哪些功能&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;缓存穿透如何解决&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;常用限流算法&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;令牌桶和漏桶有什么区别&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不同服务之间通信有哪些方式&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一次rpc要经过哪些过程&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;rpc框架如何做性能调优&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用过哪些rpc框架&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;说下熔断、限流、降级、雪崩&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;熔断降级知道哪些开源框架吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;docker和虚拟机有什么区别&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;serviceMash用来解决什么问题的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;devops相关技术有哪些&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;strong&gt;美团&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;自我介绍&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;监控软件用的什么？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为什么没用开源监控软件&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;现在的监控体系是什么流程？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为什么没用logstash？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;非递归方式实现前序遍历二叉树&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;strong&gt;腾讯&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;算法lru&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;项目相关&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;go语言如何实现服务不重启热部署&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;go性能分析工具&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;tcp如何实现稳定性&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;http和http2区别&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;https如何实现的，证书是怎么获取的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如何实现分布式锁&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;gpm模型&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为什么gpm模型会更快？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;线程协程区别&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;redis如何做到高可用&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;redis故障转移策略&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;kafka如何做到高可用&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;mysql事务的隔离级别&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;strong&gt;格步科技&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;自我介绍&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用k8s主要做哪些功能？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;链表和数组的区别，以及各种操作上的复杂度&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;谈下对散列表的理解，深入&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对lru算法了解吗？在上面场景下使用呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;说下你知道的排序算法&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;说下快排的大概的操作过程&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;快排的平均的时间复杂度&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;快排什么情况下是最慢的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;常用的数据库有哪些？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;mysql的事务四个特性&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;mysql事务的隔离级别，分别解决了什么问题？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一条sql语句比较慢用什么方式去优化？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从浏览器上输入一个网址到浏览器加载内容，中间过程中发生了哪些事情？尽可能说知道的&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;nginx负载均衡策略&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;服务器上有大量time_wait状态，如何分析一下为什么会这样？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;算法：一个奇怪的没听明白的问题&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;算法：括号匹配问题，说下思路&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;strong&gt;知乎&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;实现一个函数，有两个参数分别是升序的整数数组a和b，返回合并后的升序整数数组&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;待优化SQL&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;SELECT a,b,c,d FROM tb &lt;br/&gt;&lt;br/&gt; WHERE c=4 &lt;br/&gt;&lt;br/&gt; ORDER BY a,b &lt;br/&gt;&lt;br/&gt; 索引 &lt;br/&gt;&lt;br/&gt; (c) &lt;br/&gt;&lt;br/&gt; 待优化SQL &lt;br/&gt;&lt;br/&gt; SELECT a,b,c,d FROM tb &lt;br/&gt;&lt;br/&gt; WHERE a=9 AND c=4 &lt;br/&gt;&lt;br/&gt; ORDER BY a,b &lt;br/&gt;&lt;br/&gt; 索引 &lt;br/&gt;&lt;br/&gt; (a,c) &lt;br/&gt;&lt;br/&gt; 待优化SQL &lt;br/&gt;&lt;br/&gt; SELECT a,b,c,d FROM tb &lt;br/&gt;&lt;br/&gt; WHERE b=9 AND a&amp;gt;4 &lt;br/&gt;&lt;br/&gt; ORDER BY a,b &lt;br/&gt;&lt;br/&gt; 索引 &lt;br/&gt;&lt;br/&gt; (a,b) &lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;说下项目&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;视频是如何做的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;展开讲下技术点和收获&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;知道mysqlinnodb是什么数据结构吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用基础数据结构实现一个map&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;map会遇到一些并发安全的问题，为什么就并发不安全了？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为什么给变量一个基础类型没有并发安全问题？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如何解决这个问题？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;rpc底层实现&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;是如何做到和本地调用一样的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;rpc服务是如何找到其他目标服务的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;redis数据结构有哪些？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;了解redis数据结构底层实现吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;跳表是怎样的数据结构&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为什么跳表查询复杂度很低&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;redis应用场景还有哪些？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;httprestful的定义规范&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;常见的http状态码&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;golang介绍下gmp模型&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;自我介绍&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;说一个觉得不错的项目&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;说一下项目的业务场景&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;命令的时间差如何保证，命令混乱了怎么办（时间戳记录在服务器可以吗？）&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最近在学习什么？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;你个人最近感兴趣的点是什么？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;docker是解决什么问题？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;k8s是解决什么问题？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为什么现在考虑换工作&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;你想找什么样新的工作？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下一份工作看重什么？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果说你现在定一个目标三到五年之后想要成为什么样子？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;技术和业务方面的要求是什么？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果让你选择只做技术和只做业务你选择哪个？&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;strong&gt;网易&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;自我介绍&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有挑战性的项目介绍下&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;项目优化点说一下&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;tcp和udp有什么区别，在基础时间和传输层有什么区别&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;http和tcp有什么区别&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用操作系统接口写过网络接口客户端&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;linux一般常用哪些命令&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用netstat看tcp连接的时候有关注过time_wait和close_wait吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;fork的底层实现方式&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;redis如何实现事务&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;复杂一点的条件，比如说判断一个数字大于多少如何实现事务？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果要从redis里面删除大量的数据要怎么做？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;list里面有大量数据，删除大量数据要注意什么&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;go语言的时候垃圾回收，写代码的时候如何减少小对象分配&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;string和byte数组有什么区别？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;channel有缓冲和无缓冲在使用上有什么区别？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;关闭channel有什么作用？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果一个包要依赖另一个包，这个时候如何写单元测试&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;知道浮点数在机器上面怎么存储的&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用go实现一个协程池，大概用什么实现&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;lru如何实现&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;反问：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这是交叉面试吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;传媒部这边主要负责网易那块儿业务&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;技术部这边是往go这边切吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;往go这边切的原因是什么？&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;strong&gt;百度&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;自我介绍&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;详细说下公司里面大的系统遇到的技术难点&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;消息转发用的什么技术&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;线上流量多大？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为什么不用一些更稳定的消息队列&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;go里面为什么需要多协程？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;知道processor大小是多少吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;goroutine为什么会存在，为什么不使用线程？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;算法：二维矩阵顺时针原地旋转90度&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;算法：找出字符串中不包含重复子串的最大长度&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;redis的存储结构？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;redis单线程为什么快？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;k8s里面调度的关键步骤&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;strong&gt;猿辅导&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;自我介绍&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;说一下代表你技术能力的项目&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;你在项目里面的职责是什么？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;cicddevops做了什么说一下&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;redis这边做了什么？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;个人对mysql和redis细节了解吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;redis的string是怎么存储的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;了解过redis的存储方式吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;系统日志监控怎么做的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;已经上了k8s为什么不用推荐的开源体系？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有没有什么我没有问到你想说的技术点&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;算法：实现lru，不考虑线程安全，可以使用所有标准库&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;解释下你写的算法&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;算法：两个数组，求两个数组的交集&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为什么map是O(1)的时间复杂度&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;实现map的方法除了哈希还有哪些？&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;strong&gt;高德&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;自我介绍&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;选一个比较熟悉的项目讲讲&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;筛选日志的时候，日志格式是不一样的，你们是如何处理的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;处理日志的时候如果日志量比较大会堆积吗？怎么处理的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;日志落盘到机器上，是如何采集的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;采集服务有问题的话可能会影响报警的及时性吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;处理日志的时候如果发现突然量变大，该如何扩容让以前堆积的日志可以消耗掉？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;调研的正则库内部是怎么实现的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;go里面比较成熟的日志框架了解过没有&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;redis发布订阅怎么实现的？你自己要怎么实现？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;redis高可用怎么做？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;了解redis主从复制机制吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;分布式锁有哪些实现方式&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;redis的setnx底层怎么实现的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;go协程线程进程区别&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;详细讲下gmp模型&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;了解的gc算法有哪些？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;go的gc原理了解吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;go的init函数是什么时候执行的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;多个init函数执行顺序能保证吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;gin框架的路由是怎么处理的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;mysql索引结构&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;B+树和B树有什么区别&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;快排&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;strong&gt;新浪&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;自我介绍&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;挑一个项目介绍下亮点和难点&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;说下websocket是哪一层协议？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;osit层&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;常见http状态码&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;各种项目问题&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;进程阻塞怎么处理？就是进程完全不运行了，但是pid还在&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;CICD主要做了什么？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用火焰图的优势？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;cgo了解过引入的风险点吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为什么不要频繁创建和停止goroutine&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;channel底层是用什么实现的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;数据库加密算法是怎么设计的？设计这种东西通用规范是怎么设计的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在第一个公司为什么离开了&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;时间同步问题？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;ntp协议&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;strong&gt;小米&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;自我介绍&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;算法：二分查找&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;sql索引优化问题&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;mysql数据库引擎&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;tcp三次握手四次挥手&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;项目用redis的原因&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;go的切片扩容机制&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;linux里面线程和进程的区别&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;go使用中遇到的问题&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一个update语句的执行过程&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;websocket请求头&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;消息队列这些用过吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;微服务注册发现说一下&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;说一下从浏览器按下一个搜索的完整过程&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;gomap的底层实现&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;说一下同步阻塞和异步非阻塞&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;go的profile工具？&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;/h3&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;strong&gt;字节&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;自我介绍&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;forrange坑输出&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;gmp模型&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;遇到过什么语法问题&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对比下node和go&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为什么用redis没有用成熟的kafka这些消息队列&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;redis的基础数据结构和底层实现&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;网关层限流，限流策略&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;消息重试，消息幂等问题&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;实现一个Promise.all&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;go实现一个并发限制爬虫&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;自我介绍&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;服务需要做迁移的原因是什么？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;迁移主要写哪些服务？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;自己做的定制化功能相对于开源的有哪些优势？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用过哪些开源的配置中心？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;定时任务是一个什么场景？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;日志扫描和处理怎么做的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;日志采集有哪些开源方案看过吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;前端这边接触哪些？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;前端这边用什么什么框架知道吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;nodejs什么场景下用的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;给自己未来发展的定位是什么？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从技术角度讲对自己的要求是什么？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;服务打日志的时候涉及过哪些中间件？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;借助第三方自己产出的中间件有哪些？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;参数检查中间件核心功能有哪些？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;业务的npm包有哪些例子吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;cicd做了哪些？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;es存储日志的时长是多久？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;es数据有做一些聚合吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;说说火焰图？如何分析的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;写一个东西：一个字符串json，转成一个直接可用的map，字符串可能是任何形式&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;算法题：给一个字符串，从里面找到最长的回文字符串（先说思路）&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;挑一个比较突出的技术成就聊一下&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;websocket的稳定性是如何做的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;海外机器的延迟如何保证&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为什么会选用websocket？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;websocket兼容性是如何做的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;兼容性如何保证的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果现在选型的话会如何选？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;能对比一下websocket、长连接、EventSource的优缺点吗&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在前端如何处理websocket兼容性问题？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如何去设计兼容这一层？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;你对前端这边了解到什么程度？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;js原型链原型继承了解吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;js变量提升作用域问题？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;算法题：n*n的矩阵，按圈顺时针打印这个矩阵&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;写完之后做一些testcase，把需要的case都列一下&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;strong&gt;好未来&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;自我介绍&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;说一个项目的架构&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;go主要用搜框架&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对go的中间件和工作机制有了解吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对数据库操作有什么了解吗&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对连接池有了解吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;go的垃圾回收机制&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;gmp模型&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;go的sync.Map了解吗&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;channel主要做什么事情&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;数据库这块儿mysql用的多吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;存储引擎了解哪些？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对mysql索引了解哪些&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;redis的过期策略是什么？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;微服务这边用到哪些？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;算法：两个无序数组找到他们的交集&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;算法：分层遍历二叉树&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;常见的http状态码&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;tcp和udp区别&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;tcp三次握手四次挥手&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;业务迭代遇到过晚上上线的事情吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上线的时候业务中断有什么方式去规避吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;k8spod切换策略&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;自我介绍&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;做过的项目说一下&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;怎么检查go问题&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;未来技术方向怎么选&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;gmp模型&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;切片的底层实现&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;go和node的差别&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;自我介绍&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;k8s如何找到一个节点上的所有pod&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如何通过goclient写代码获取&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;日志监控怎么做的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;dockerfilecmd和entrypoint有什么区别&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;项目里面有自己独立负责的吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;说下在线教室&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如何保证连接的均衡？不至于所有连接连到一个地方？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;调研的ocr识别是做什么？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;做个题，看下这个这么写有什么问题&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;写个channel相关的题，并发模型，爬虫url，控制并发量&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;context包内部如何实现的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;自我介绍&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;你在第一家公司服务的用户是谁？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;素质教育还是应试教育？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;你在里面用技术解决什么问题？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里面有什么你觉得做得比较好的项目？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;视频用的什么服务？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;信令用wss还是ws？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;调度哪个用户连接哪个机器？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果业务量大，如何让客户端能够均衡的连接服务器&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;wss是基于tcp的，tcp有个半连接队列，有没有遇到发了信令但是服务器没收到的情况？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;自习和用户增长？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;题拍拍主要做拍搜服务的，题拍拍主要做增长，后面会做微服务架构k8s等&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;考虑问题的时候从用户角度去考虑？用户是谁？为谁服务？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;自我介绍&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;devops是怎么做的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;会保留一些tag、镜像之类的东西吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;服务的属性配置用的什么？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;docker是怎么做隔离的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;docker和宿主机有几种网络通信方式&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;k8s和pod什么关系？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;k8s定义了什么标准来操纵docker&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;k8s有几种service类型&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;报警这边怎么做的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为什么没有用ELK&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;go怎么实现封装继承多态&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为什么go的变量申请类型是为了什么？&lt;/p&gt;​​​&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>257bd3c5100d41c583f1950dcbd10b0b</guid>
<title>ZooKeeper如何保证事务原子性?</title>
<link>https://toutiao.io/k/87hrnvb</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                           autoTypeSetting24psection&amp;#10;                          &quot; id=&quot;js_content&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.31733333333333336&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Xxt327ybUOVRpSnmVkUlvEdlibf0FGlTAtMP9dCrgmAicbfHXAMgicI9Pic8hTAC5xBSwlTO2eAjMZ8sgUl5hT60uA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;750&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;先解答疑惑，题主对ZAB理解是正确的。为了便于描述，本文将事务理解为具有ACID的一组操作，一个ZooKeeper请求（例如：create）称之为提案。&lt;/p&gt;&lt;p&gt;ZAB协议是共识算法的一种，共识算法仅能保证单个提案在集群中达成共识，如果是多个提案要保证事务的话，需要在上层再做一次封装。ZAB被称为原子广播协议，也是做了这一层封装，即：multi命令。&lt;/p&gt;&lt;p&gt;multi命令让多个提案，要么同时成功，要么同时失败，所以要知道ZooKeeper怎么处理事务的，只需要关注multi命令的实现即可。&lt;/p&gt;&lt;p&gt;ZooKeeper对提案的协商，是以责任链的形式处理，下图是协商提案的责任链路，大家可以参考。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6674259681093394&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Xxt327ybUOVRpSnmVkUlvEdlibf0FGlTAEfXxEIvkT2nxWfXATwQFQicsl09VK3MiaXiawtPvibicejzzZzcpRKNhzmA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;878&quot;/&gt;&lt;/p&gt;&lt;p&gt;不难发现，客户端的请求，先到达PrepRequestProcessor，那么在PrepRequestProcessor一定可以找到对multi命令的特殊操作。&lt;/p&gt;&lt;p&gt;以下代码为PrepRequestProcessor#pRequestHelper，我省略掉了try-catch和其他无关代码，在处理multi请求时，ZooKeeper会先遍历multiRequest，把每个元素当做一个单独的提案调用pRequest2Txn()方法来协商，当某个提案协商发生异常时，ZooKeeper会调用rollbackPendingChanges()回滚正在执行中的提案。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;// PrepRequestProcessor&lt;br/&gt;&lt;/span&gt;&lt;span/&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;pRequestHelper&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;Request request&lt;span&gt;)&lt;/span&gt; &lt;span&gt;throws&lt;/span&gt; RequestProcessorException &lt;span&gt;{&lt;/span&gt;&lt;br/&gt;&lt;span&gt;switch&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;request&lt;span&gt;.&lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;&lt;br/&gt;&lt;span&gt;case&lt;/span&gt; OpCode&lt;span&gt;.&lt;/span&gt;&lt;span&gt;multi&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;br/&gt;MultiOperationRecord multiRequest &lt;span&gt;=&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; MultiOperationRecord&lt;span&gt;();&lt;/span&gt;&lt;br/&gt;&lt;span&gt;try&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;&lt;br/&gt;ByteBufferInputStream&lt;span&gt;.&lt;/span&gt;&lt;span&gt;byteBuffer2Record&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;request&lt;span&gt;.&lt;/span&gt;&lt;span&gt;request&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; multiRequest&lt;span&gt;);&lt;/span&gt;&lt;br/&gt;&lt;span&gt;}&lt;/span&gt; &lt;span&gt;catch&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;IOException e&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;&lt;br/&gt;request&lt;span&gt;.&lt;/span&gt;&lt;span&gt;setHdr&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;new&lt;/span&gt; TxnHeader&lt;span&gt;(&lt;/span&gt;request&lt;span&gt;.&lt;/span&gt;&lt;span&gt;sessionId&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; request&lt;span&gt;.&lt;/span&gt;&lt;span&gt;cxid&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; zks&lt;span&gt;.&lt;/span&gt;&lt;span&gt;getNextZxid&lt;/span&gt;&lt;span&gt;(),&lt;/span&gt; Time&lt;span&gt;.&lt;/span&gt;&lt;span&gt;currentWallTime&lt;/span&gt;&lt;span&gt;(),&lt;/span&gt; OpCode&lt;span&gt;.&lt;/span&gt;&lt;span&gt;multi&lt;/span&gt;&lt;span&gt;));&lt;/span&gt;&lt;br/&gt;&lt;span&gt;throw&lt;/span&gt; e&lt;span&gt;;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;}&lt;/span&gt;&lt;br/&gt;List&lt;span&gt;&amp;lt;&lt;/span&gt;Txn&lt;span&gt;&amp;gt;&lt;/span&gt; txns &lt;span&gt;=&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; ArrayList&lt;span&gt;&amp;lt;&lt;/span&gt;Txn&lt;span&gt;&amp;gt;();&lt;/span&gt;&lt;br/&gt;&lt;span&gt;long&lt;/span&gt; zxid &lt;span&gt;=&lt;/span&gt; zks&lt;span&gt;.&lt;/span&gt;&lt;span&gt;getNextZxid&lt;/span&gt;&lt;span&gt;();&lt;/span&gt;&lt;br/&gt;KeeperException ke &lt;span&gt;=&lt;/span&gt; &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;Map&lt;span&gt;&amp;lt;&lt;/span&gt;String&lt;span&gt;,&lt;/span&gt; ChangeRecord&lt;span&gt;&amp;gt;&lt;/span&gt; pendingChanges &lt;span&gt;=&lt;/span&gt; getPendingChanges&lt;span&gt;(&lt;/span&gt;multiRequest&lt;span&gt;);&lt;/span&gt;&lt;br/&gt;request&lt;span&gt;.&lt;/span&gt;&lt;span&gt;setHdr&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;new&lt;/span&gt; TxnHeader&lt;span&gt;(&lt;/span&gt;request&lt;span&gt;.&lt;/span&gt;&lt;span&gt;sessionId&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; request&lt;span&gt;.&lt;/span&gt;&lt;span&gt;cxid&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; zxid&lt;span&gt;,&lt;/span&gt;&lt;br/&gt;Time&lt;span&gt;.&lt;/span&gt;&lt;span&gt;currentWallTime&lt;/span&gt;&lt;span&gt;(),&lt;/span&gt; request&lt;span&gt;.&lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;));&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;for&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;Op op &lt;span&gt;:&lt;/span&gt; multiRequest&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;&lt;br/&gt;Record subrequest &lt;span&gt;=&lt;/span&gt; op&lt;span&gt;.&lt;/span&gt;&lt;span&gt;toRequestRecord&lt;/span&gt;&lt;span&gt;();&lt;/span&gt;&lt;br/&gt;&lt;span&gt;int&lt;/span&gt; type&lt;span&gt;;&lt;/span&gt;&lt;br/&gt;Record txn&lt;span&gt;;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;if&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;ke &lt;span&gt;!=&lt;/span&gt; &lt;span&gt;null&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;&lt;br/&gt;type &lt;span&gt;=&lt;/span&gt; OpCode&lt;span&gt;.&lt;/span&gt;&lt;span&gt;error&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;br/&gt;txn &lt;span&gt;=&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; ErrorTxn&lt;span&gt;(&lt;/span&gt;Code&lt;span&gt;.&lt;/span&gt;&lt;span&gt;RUNTIMEINCONSISTENCY&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;intValue&lt;/span&gt;&lt;span&gt;());&lt;/span&gt;&lt;br/&gt;&lt;span&gt;}&lt;/span&gt; &lt;span&gt;else&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;&lt;br/&gt;&lt;span&gt;try&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;&lt;br/&gt;pRequest2Txn&lt;span&gt;(&lt;/span&gt;op&lt;span&gt;.&lt;/span&gt;&lt;span&gt;getType&lt;/span&gt;&lt;span&gt;(),&lt;/span&gt; zxid&lt;span&gt;,&lt;/span&gt; request&lt;span&gt;,&lt;/span&gt; subrequest&lt;span&gt;,&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;&lt;br/&gt;type &lt;span&gt;=&lt;/span&gt; op&lt;span&gt;.&lt;/span&gt;&lt;span&gt;getType&lt;/span&gt;&lt;span&gt;();&lt;/span&gt;&lt;br/&gt;txn &lt;span&gt;=&lt;/span&gt; request&lt;span&gt;.&lt;/span&gt;&lt;span&gt;getTxn&lt;/span&gt;&lt;span&gt;();&lt;/span&gt;&lt;br/&gt;&lt;span&gt;}&lt;/span&gt; &lt;span&gt;catch&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;KeeperException e&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;&lt;br/&gt;ke &lt;span&gt;=&lt;/span&gt; e&lt;span&gt;;&lt;/span&gt;&lt;br/&gt;type &lt;span&gt;=&lt;/span&gt; OpCode&lt;span&gt;.&lt;/span&gt;&lt;span&gt;error&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;br/&gt;txn &lt;span&gt;=&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; ErrorTxn&lt;span&gt;(&lt;/span&gt;e&lt;span&gt;.&lt;/span&gt;&lt;span&gt;code&lt;/span&gt;&lt;span&gt;().&lt;/span&gt;&lt;span&gt;intValue&lt;/span&gt;&lt;span&gt;());&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;if&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;e&lt;span&gt;.&lt;/span&gt;&lt;span&gt;code&lt;/span&gt;&lt;span&gt;().&lt;/span&gt;&lt;span&gt;intValue&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt; Code&lt;span&gt;.&lt;/span&gt;&lt;span&gt;APIERROR&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;intValue&lt;/span&gt;&lt;span&gt;())&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;&lt;br/&gt;LOG&lt;span&gt;.&lt;/span&gt;&lt;span&gt;info&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;&quot;Got user-level KeeperException when processing {} aborting&quot;&lt;/span&gt;&lt;br/&gt; &lt;span&gt;+&lt;/span&gt; &lt;span&gt;&quot; remaining multi ops. Error Path:{} Error:{}&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;br/&gt; request&lt;span&gt;.&lt;/span&gt;&lt;span&gt;toString&lt;/span&gt;&lt;span&gt;(),&lt;/span&gt;&lt;br/&gt; e&lt;span&gt;.&lt;/span&gt;&lt;span&gt;getPath&lt;/span&gt;&lt;span&gt;(),&lt;/span&gt;&lt;br/&gt; e&lt;span&gt;.&lt;/span&gt;&lt;span&gt;getMessage&lt;/span&gt;&lt;span&gt;());&lt;/span&gt;&lt;br/&gt;&lt;span&gt;}&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;request&lt;span&gt;.&lt;/span&gt;&lt;span&gt;setException&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;e&lt;span&gt;);&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;/* Rollback change records from failed multi-op */&lt;/span&gt;&lt;br/&gt;rollbackPendingChanges&lt;span&gt;(&lt;/span&gt;zxid&lt;span&gt;,&lt;/span&gt; pendingChanges&lt;span&gt;);&lt;/span&gt;&lt;br/&gt;&lt;span&gt;}&lt;/span&gt;&lt;br/&gt;&lt;span&gt;}&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;try&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;ByteArrayOutputStream baos &lt;span&gt;=&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; ByteArrayOutputStream&lt;span&gt;())&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;&lt;br/&gt;BinaryOutputArchive boa &lt;span&gt;=&lt;/span&gt; BinaryOutputArchive&lt;span&gt;.&lt;/span&gt;&lt;span&gt;getArchive&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;baos&lt;span&gt;);&lt;/span&gt;&lt;br/&gt;txn&lt;span&gt;.&lt;/span&gt;&lt;span&gt;serialize&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;boa&lt;span&gt;,&lt;/span&gt; &lt;span&gt;&quot;request&quot;&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;&lt;br/&gt;ByteBuffer bb &lt;span&gt;=&lt;/span&gt; ByteBuffer&lt;span&gt;.&lt;/span&gt;&lt;span&gt;wrap&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;baos&lt;span&gt;.&lt;/span&gt;&lt;span&gt;toByteArray&lt;/span&gt;&lt;span&gt;());&lt;/span&gt;&lt;br/&gt;txns&lt;span&gt;.&lt;/span&gt;&lt;span&gt;add&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;new&lt;/span&gt; Txn&lt;span&gt;(&lt;/span&gt;type&lt;span&gt;,&lt;/span&gt; bb&lt;span&gt;.&lt;/span&gt;&lt;span&gt;array&lt;/span&gt;&lt;span&gt;()));&lt;/span&gt;&lt;br/&gt;&lt;span&gt;}&lt;/span&gt;&lt;br/&gt;&lt;span&gt;}&lt;/span&gt;&lt;br/&gt;request&lt;span&gt;.&lt;/span&gt;&lt;span&gt;setTxn&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;new&lt;/span&gt; MultiTxn&lt;span&gt;(&lt;/span&gt;txns&lt;span&gt;));&lt;/span&gt;&lt;br/&gt;&lt;span&gt;if&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;digestEnabled&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;&lt;br/&gt;setTxnDigest&lt;span&gt;(&lt;/span&gt;request&lt;span&gt;);&lt;/span&gt;&lt;br/&gt;&lt;span&gt;}&lt;/span&gt;&lt;br/&gt;&lt;span&gt;break&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;br/&gt;回到问题本身，使用multi命令，创建一个节点和删除一个节点时，当创建节点成功了，但是删除节点失败了，那么ZooKeeper会回滚创建操作。&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mp-common-profile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;Mzg2MDE2NDkwMQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/Xxt327ybUOWIDNUNFzCyBBWMXuNWuWDnElluB7F7nvfd17wFtsD5vB5uibXXU54uj7ooqGM5uVOkup3JF56IGXQ/0?wx_fmt=png&quot; data-nickname=&quot;并发笔记&quot; data-alias=&quot;ofcoder&quot; data-signature=&quot;一位后端开发的养肝历程、护发经验。&quot; data-from=&quot;0&quot; data-is_biz_ban=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;/div&gt;

          

          
          &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>24cdd501e84d7997a7f6a2ea5fde76fc</guid>
<title>IM系统的前世今生，搭建高性能、可拓展的IM系统</title>
<link>https://toutiao.io/k/augw4km</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                           autoTypeSetting24psection&amp;#10;                          &quot; id=&quot;js_content&quot;&gt;&lt;fieldset data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mp-common-profile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzkyNTI5NTQ1NQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/wxcY9TH8dPsYAnrjaZktBe0iahF8ic9QkF26cAw8pK6HPR1bfFEImdyJspvkQvQwmnYxP4eEVW60ewVVickcWXnrQ/0?wx_fmt=png&quot; data-nickname=&quot;架构文摘&quot; data-alias=&quot;ArchDigest&quot; data-signature=&quot;每天一篇架构领域重磅好文，涉及一线互联网公司应用架构（高可用、高性能、高稳定）、大数据、机器学习、Java架构等各个热门领域。&quot; data-from=&quot;0&quot; data-is_biz_ban=&quot;0&quot;/&gt;&lt;/section&gt;&lt;/fieldset&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;1.2857142857142858&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YK9e7vHy9IQATwibKVicOpXZibX8VOvBrnF39NdpXQMwdpyIgN0ibicEwRdge0mXthxjHagHgwpWhrsibvMZFibaQC6vQ/640?wx_fmt=png&quot; data-w=&quot;14&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;1.时代的里程碑——即时通信&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;1.2857142857142858&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/orc2J6rib40bATuJM23UiaHQ0tsVpvjgyuhk7To5zFqb2fyL9pCr1U7hfeKJELCht0KxWnuias6TLibMdcRhM7QhyQ/640?wx_fmt=png&quot; data-w=&quot;14&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;section&gt;前阵子看了《创业时代》,电视剧的剧情大概是这样的:IT工程师郭鑫年与好友罗维与投行精英那蓝等人一起，踏上互联网创业之路。创业开发的是一款叫做“魔晶”的IM产品。郭鑫年在第一次创业失败后，离了婚，还欠了很多外债，骑着自行车经历了西藏一次生死诀别之后产生了灵感，想要创作一款IM产品“魔晶”，“魔晶”的初衷是为了增加人与人之间的感情，虽然剧情纯属虚构，但确实让人浮想QQ当初的设想是不是就是这样的呢？&lt;/section&gt;&lt;section&gt;有一点是可以确定的，即时通信确实是一个时代的里程碑。腾讯的强大离不开两款产品:QQ和微信,这两款产品设计的思路是不一样的，QQ依托于IM系统，为了打造个人空间、全民娱乐而设计，我们常常会看到QQ被初高中生喜爱，QQ账号也往往与音乐、游戏绑定在一起；微信从QQ导流以后，主打商业领域，从刚开始推出微信支付与支付宝竞争，在商业支付领域占得了一席之地(微信支付主要被用户用于小额支付场景，支付宝主要用在企业大额转账、个人金融理财领域)以后。微信又相继推出了公众号、小程序，很明显在商业领域已经占据了支付宝的上风，成为了商业APP中的霸主，后来才有了聊天宝、多闪和马桶三大门派围攻微信的闹剧，结果大家可能都知道了......&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5625&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/sXiaukvjR0RAxU2v3eTEGWyIWSIqeyAe4hcMDZPTvFEHhjWynFkgBp768IeticatQ9DFLyVjeURkZl0ia80c4qlWQ/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;720&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;即使这样，也不可低估了支付宝在商业领域的价值。和微信产品设计的初衷不同，支付宝更青睐于拓展功能自己来集成与实现，做的比较精致。支付宝在支付安全性方面，做的比微信好很多，整个应用用起来也比微信要顺畅，支付宝也有自己的小程序，不过往往都是和相关企业合作或打通接口来创建应用，比如生活缴费、饿了么外卖、滴滴出行等等。而微信则更多将应用的创建权限开放给开发者，由企业开发者来创建小程序、维护公众号，从而实现自己的商业价值，事实证明，微信很成功!&lt;/section&gt;&lt;section&gt;阿里依托于IM系统进击办公领域，打造了“钉钉”,又是一款比较精致的产品，其中打卡考勤、请假审批、会议管理都做的非常好，和微信不同的是，企业通过钉钉交流的信息，对方是能看到信息是否“已读”的(毕竟是办公，这个功能还是很有必要的)。腾讯也不甘示弱，创建“企业微信”，开始和“钉钉”正面交锋，虽然在市场份额上还是落后于钉钉，但用户增长很快。&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3745271122320303&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/sXiaukvjR0RAxU2v3eTEGWyIWSIqeyAe42ibjm6Yia6YVgjg5hAGGUWyUZX11q86UpkvQUjMp6o8VL63xF1YpzLrw/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;793&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;blockquote&gt;&lt;section&gt;钉钉于2015年1月正式上线，2016年4月腾讯正式发布企业微信1.0版本，也只有简单的考勤、请假、报销等功能，在产品功能上略显平淡。彼时再看钉钉，凭借先发优势，初期就确定的产品线“讨好”老板，2016年企业数100万，2018年这个数量上升到700万，可见钉钉发展速度之快，稳固了钉钉在B端市场的地位。企业微信早期举棋不定的打法，也让它在企业OA办公上玩不过钉钉。但企业微信在发布3.0版本后，局面开始扭转，钉钉在用户数量上似乎已经饱和，难以有新的突破，而企业微信才真正开始逐渐占据市场。&lt;/section&gt;&lt;/blockquote&gt;&lt;section&gt;依托于IM系统发展起来的企业还有陌陌、探探，相比较与微信来讲，它们的功能更集中于交友和情感。(不知道这是不是人家企业每年年终都人手一部iphone的原因，开个玩笑)&lt;/section&gt;&lt;section&gt;笔者今年参加了一次Gopher大会，有幸听探探的架构师分享了它们今年微服务化的过程，本文快速搭建的IM系统也是使用Go语言来快速实现的，这里先和各位分享一下探探APP的架构图:&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6029106029106029&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/sXiaukvjR0RAxU2v3eTEGWyIWSIqeyAe4pGibHZQp53VutHsb6OPBAkiadEKgFUedNF6icFMM7eibic4ADLMZ6gKUh3w/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;1924&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;以上讲了一些IM系统的产品的设计，下边我们回归主题，大概说一下本文的章节内容安排。&lt;/section&gt;&lt;h2 data-id=&quot;heading-1&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/h2&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;1.2857142857142858&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YK9e7vHy9IQATwibKVicOpXZibX8VOvBrnF39NdpXQMwdpyIgN0ibicEwRdge0mXthxjHagHgwpWhrsibvMZFibaQC6vQ/640?wx_fmt=png&quot; data-w=&quot;14&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;2.章节概述&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;1.2857142857142858&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/orc2J6rib40bATuJM23UiaHQ0tsVpvjgyuhk7To5zFqb2fyL9pCr1U7hfeKJELCht0KxWnuias6TLibMdcRhM7QhyQ/640?wx_fmt=png&quot; data-w=&quot;14&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;section&gt;本文的目的是帮助读者较为深入的理解socket协议,并快速搭建一个高可用、可拓展的IM系统(文章标题纯属引人眼球，不是真的，请读者不要在意。)，同时帮助读者了解IM系统后续可以做哪些优化和改进。麻雀虽小，五脏俱全，该IM系统包含基本的注册、登录、添加好友基础功能，另外提供单聊、群聊，并且支持发送文字、表情和图片，在搭建的系统上，读者可轻松的拓展语音、视频聊天、发红包等业务。为了帮助读者更清楚的理解IM系统的原理,第3节我会专门深入讲解一下websocket协议，websocket是长链接中比较常用的协议；然后第4节会讲解快速搭建IM系统的技巧和主要代码实现；在第5节笔者会对IM系统的架构升级和优化提出一些建议和思路；在最后章节做本文的回顾总结。&lt;/section&gt;&lt;h2 data-id=&quot;heading-2&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/h2&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;1.2857142857142858&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YK9e7vHy9IQATwibKVicOpXZibX8VOvBrnF39NdpXQMwdpyIgN0ibicEwRdge0mXthxjHagHgwpWhrsibvMZFibaQC6vQ/640?wx_fmt=png&quot; data-w=&quot;14&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;3.深入理解websocket协议&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;1.2857142857142858&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/orc2J6rib40bATuJM23UiaHQ0tsVpvjgyuhk7To5zFqb2fyL9pCr1U7hfeKJELCht0KxWnuias6TLibMdcRhM7QhyQ/640?wx_fmt=png&quot; data-w=&quot;14&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;section&gt;Web Sockets的目标是在一个单独的持久连接上提供全双工、双向通信。在Javascript创建了Web Socket之后，会有一个HTTP请求发送到浏览器以发起连接。在取得服务器响应后，建立的连接会将HTTP升级从HTTP协议交换为WebSocket协议。由于WebSocket使用自定义的协议，所以URL模式也略有不同。未加密的连接不再是http://，而是ws://;加密的连接也不是https://，而是wss://。在使用WebSocket URL时，必须带着这个模式，因为将来还有可能支持其他的模式。使用自定义协议而非HTTP协议的好处是，能够在客户端和服务器之间发送非常少量的数据，而不必担心HTTP那样字节级的开销。由于传递的数据包很小，所以WebSocket非常适合移动应用。上文中只是对Web Sockets进行了笼统的描述，接下来的篇幅会对Web Sockets的细节实现进行深入的探索，本文接下来的四个小节不会涉及到大量的代码片段，但是会对相关的API和技术原理进行分析，相信大家读完下文之后再来看这段描述，会有一种豁然开朗的感觉。&lt;/section&gt;&lt;h3 data-id=&quot;heading-3&quot;&gt;&lt;span&gt;&lt;strong&gt;3.1 WebSocket复用了HTTP的握手通道&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;section&gt;“握手通道”是HTTP协议中客户端和服务端通过&quot;TCP三次握手&quot;建立的通信通道。客户端和服务端使用HTTP协议进行的每次交互都需要先建立这样一条“通道”，然后通过这条通道进行通信。我们熟悉的ajax交互就是在这样一个通道上完成数据传输的，只不过ajax交互是短连接，在一次request-&amp;gt;response之后，“通道”连接就断开了。下面是HTTP协议中建立“握手通道”的过程示意图：&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5975&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/sXiaukvjR0RAxU2v3eTEGWyIWSIqeyAe4gC5eLlK20q8At0wYI8ko7bhk7Mia4czUKPicGtsXyxkTjsd65zZ4DC0A/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;800&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;上文中我们提到：在Javascript创建了WebSocket之后，会有一个HTTP请求发送到浏览器以发起连接，然后服务端响应，这就是“握手“的过程，在这个握手的过程当中，客户端和服务端主要做了两件事情：&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;建立了一条连接“握手通道”用于通信（这点和HTTP协议相同，不同的是HTTP协议完成数据交互后就释放了这条握手通道，这就是所谓的“短连接”，它的生命周期是一次数据交互的时间，通常是毫秒级别的。）&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;将HTTP协议升级到WebSocket协议，并复用HTTP协议的握手通道，从而建立一条持久连接。说到这里可能有人会问：HTTP协议为什么不复用自己的“握手通道”，而非要在每次进行数据交互的时候都通过TCP三次握手重新建立“握手通道”呢？答案是这样的：虽然“长连接”在客户端和服务端交互的过程中省去了每次都建立“握手通道”的麻烦步骤，但是维持这样一条“长连接”是需要消耗服务器资源的，而在大多数情况下，这种资源的消耗又是不必要的，可以说HTTP标准的制定经过了深思熟虑的考量。到我们后边说到WebSocket协议数据帧时，大家可能就会明白，维持一条“长连接”服务端和客户端需要做的事情太多了。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;说完了握手通道，我们再来看HTTP协议如何升级到WebSocket协议的。&lt;/section&gt;&lt;h3 data-id=&quot;heading-4&quot;&gt;&lt;span&gt;&lt;strong&gt;3.2 HTTP协议升级为WebSocket协议&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;section&gt;升级协议需要客户端和服务端交流，服务端怎么知道要将HTTP协议升级到WebSocket协议呢？它一定是接收到了客户端发送过来的某种信号。下面是我从谷歌浏览器中截取的“客户端发起协议升级请求的报文”，通过分析这段报文，我们能够得到有关WebSocket中协议升级的更多细节。&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.48375&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/sXiaukvjR0RAxU2v3eTEGWyIWSIqeyAe41ib4vNN6sgEdAvDOdrQHmwGIia4iblzCfgl3A86rWoLCuIqAjKBHhJib1w/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;800&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;首先，客户端发起协议升级请求。采用的是标准的HTTP报文格式，且只支持GET方法。下面是重点请求的首部的意义：&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;Connection：Upgrade：表示要升级的协议&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Upgrade: websocket：表示要升级到websocket协议&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Sec-WebSocket-Version: 13：表示websocket的版本&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Sec-WebSocket-Key:UdTUf90CC561cQXn4n5XRg== ：与Response Header中的响应首部Sec-WebSocket-Accept: GZk41FJZSYY0CmsrZPGpUGRQzkY=是配套的，提供基本的防护，比如恶意的连接或者无意的连接。其中Connection就是我们前边提到的，客户端发送给服务端的信号，服务端接受到信号之后，才会对HTTP协议进行升级。那么服务端怎样确认客户端发送过来的请求是否是合法的呢？在客户端每次发起协议升级请求的时候都会产生一个唯一码：Sec-WebSocket-Key。服务端拿到这个码后，通过一个算法进行校验，然后通过Sec-WebSocket-Accept响应给客户端，客户端再对Sec-WebSocket-Accept进行校验来完成验证。这个算法很简单：&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;将Sec-WebSocket-Key跟全局唯一的（GUID，[RFC4122]）标识：258EAFA5-E914-47DA-95CA-C5AB0DC85B11拼接&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;通过SHA1计算出摘要，并转成base64字符串&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;section&gt;258EAFA5-E914-47DA-95CA-C5AB0DC85B11这个字符串又叫“魔串&quot;，至于为什么要使用它作为Websocket握手计算中使用的字符串，这点我们无需关心，只需要知道它是RFC标准规定就可以了，官方的解析也只是简单的说此值不大可能被不明白WebSocket协议的网络终端使用。我们还是用世界上最好的语言来描述一下这个算法吧。&lt;/section&gt;&lt;pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;php&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;dohandshake&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;($sock, $data, $key)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; (preg_match(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;/Sec-WebSocket-Key: (.*)\r\n/&quot;&lt;/span&gt;, $data, $match)) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            $response = base64_encode(sha1($match[&lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt;] . &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;258EAFA5-E914-47DA-95CA-C5AB0DC85B11&#x27;&lt;/span&gt;, &lt;span class=&quot;code-snippet__keyword&quot;&gt;true&lt;/span&gt;));&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            $upgrade  = &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;HTTP/1.1 101 Switching Protocol\r\n&quot;&lt;/span&gt; .&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;Upgrade: websocket\r\n&quot;&lt;/span&gt; .&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;Connection: Upgrade\r\n&quot;&lt;/span&gt; .&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;Sec-WebSocket-Accept: &quot;&lt;/span&gt; . $response . &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;\r\n\r\n&quot;&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            socket_write($sock, $upgrade, strlen($upgrade));&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;isHand[$key] = &lt;span class=&quot;code-snippet__keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section&gt;服务端响应客户端的头部信息和HTTP协议的格式是相同的，HTTP1.1协议是以换行符(\r\n)分割的，我们可以通过正则匹配解析出Sec-WebSocket-Accept的值，这和我们使用curl工具模拟get请求是一个道理。这样展示结果似乎不太直观，我们使用命令行CLI来根据上图中的Sec-WebSocket-Key和握手算法来计算一下服务端返回的Sec-WebSocket-Accept是否正确：&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.1275&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/sXiaukvjR0RAxU2v3eTEGWyIWSIqeyAe4NiasGQiaYIKGiaHD1nfsz0vkv7AFb7ul1EtOZEywQaOu3jNg35EEXG1Nw/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;800&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;从图中可以看到，通过算法算出来的base64字符串和Sec-WebSocket-Accept是一样的。那么假如服务端在握手的过程中返回一个错误的Sec-WebSocket-Accept字符串会怎么样呢？当然是客户端会报错，连接会建立失败，大家可以尝试一下，例如将全局唯一标识符258EAFA5-E914-47DA-95CA-C5AB0DC85B11改为258EAFA5-E914-47DA-95CA-C5AB0DC85B12。&lt;/section&gt;&lt;h3 data-id=&quot;heading-5&quot;&gt;&lt;span&gt;&lt;strong&gt;3.3 WebSocket的帧和数据分片传输&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;section&gt;下图是我做的一个测试：将小说《飘》的第一章内容复制成文本数据，通过客户端发送到服务端，然后服务端响应相同的信息完成了一次通信。&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.365&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/sXiaukvjR0RAxU2v3eTEGWyIWSIqeyAe4a9LQrvmR42E2E40yKk3icpyVAeW8Nl3RRTWfiahsfoibh6AZ0aY4W3YcQ/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;800&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;可以看到一篇足足有将近15000字节的数据在客户端和服务端完成通信只用了150ms的时间。我们还可以看到浏览器控制台中frame栏中显示的客户端发送和服务端响应的文本数据，你一定惊讶WebSocket通信强大的数据传输能力。数据是否真的像frame中展示的那样客户端直接将一大篇文本数据发送到服务端，服务端接收到数据之后，再将一大篇文本数据返回给客户端呢？这当然是不可能的，我们都知道HTTP协议是基于TCP实现的，HTTP发送数据也是分包转发的，就是将大数据根据报文形式分割成一小块一小块发送到服务端,服务端接收到客户端发送的报文后，再将小块的数据拼接组装。关于HTTP的分包策略，大家可以查看相关资料进行研究，websocket协议也是通过分片打包数据进行转发的，不过策略上和HTTP的分包不一样。frame（帧）是websocket发送数据的基本单位，下边是它的报文格式：&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.735&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/sXiaukvjR0RAxU2v3eTEGWyIWSIqeyAe4SW2IfroEGibxw33VcxKuKzicPuiaiaCGYMyWvaxiaGRaDYz6DBUyAvePynw/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;800&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;报文内容中规定了数据标示,操作代码、掩码、数据、数据长度等格式。不太理解没关系，下面我通过讲解大家只要理解报文中重要标志的作用就可以了。首先我们明白了客户端和服务端进行Websocket消息传递是这样的:&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;客户端：将消息切割成多个帧，并发送给服务端。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;服务端：接收消息帧，并将关联的帧重新组装成完整的消息。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;服务端在接收到客户端发送的帧消息的时候，将这些帧进行组装，它怎么知道何时数据组装完成的呢？这就是报文中左上角FIN(占一个比特)存储的信息，1表示这是消息的最后一个分片（fragment)如果是0,表示不是消息的最后一个分片。websocket通信中，客户端发送数据分片是有序的，这一点和HTTP不一样，HTTP将消息分包之后，是并发无序的发送给服务端的，包信息在数据中的位置则在HTTP报文中存储，而websocket仅仅需要一个FIN比特位就能保证将数据完整的发送到服务端。接下来的RSV1,RSV2,RSV3三个比特位的作用又是什么呢？这三个标志位是留给客户端开发者和服务端开发者开发过程中协商进行拓展的，默认是0。拓展如何使用必须在握手的阶段就协商好，其实握手本身也是客户端和服务端的协商。&lt;/section&gt;&lt;h3 data-id=&quot;heading-6&quot;&gt;&lt;span&gt;&lt;strong&gt;3.4 Websocket连接保持和心跳检测&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;section&gt;Websocket是长连接，为了保持客户端和服务端的实时双向通信，需要确保客户端和服务端之间的TCP通道保持连接没有断开。但是对于长时间没有数据往来的连接，如果依旧保持着，可能会浪费服务端资源。但是不排除有些场景，客户端和服务端虽然长时间没有数据往来，仍然需要保持连接，就比如说你几个月没有和一个QQ好友聊天了，突然有一天他发QQ消息告诉你他要结婚了，你还是能在第一时间收到。那是因为，客户端和服务端一直再采用心跳来检查连接。客户端和服务端的心跳连接检测就像打乒乓球一样：&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;发送方-&amp;gt;接收方：ping&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;接收方-&amp;gt;发送方：pong&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;等什么时候没有ping、pong了，那么连接一定是存在问题了。说了这么多，接下来我使用Go语言来实现一个心跳检测，Websocket通信实现细节是一件繁琐的事情，直接使用开源的类库是比较不错的选择，我使用的是：gorilla/websocket。这个类库已经将websocket的实现细节（握手，数据解码)封装的很好啦。下面我就直接贴代码了:&lt;/section&gt;&lt;pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;go&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;package&lt;/span&gt; main&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;import&lt;/span&gt; (&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;net/http&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;time&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;github.com/gorilla/websocket&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;var&lt;/span&gt; (&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    upgrade = websocket.Upgrader{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;       &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;       CheckOrigin:&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(r *http.Request)&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;bool&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-snippet__literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;       },&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;wsHandler&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(w http.ResponseWriter, r *http.Request)&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   &lt;span class=&quot;code-snippet__keyword&quot;&gt;var&lt;/span&gt; (&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;         conn *websocket.Conn&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;         err error&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;         data []&lt;span class=&quot;code-snippet__keyword&quot;&gt;byte&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   )&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; conn, err = upgrade.Upgrade(w, r, &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt;); err != &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;go&lt;/span&gt; &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;var&lt;/span&gt; (&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            err error&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        )&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;for&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; err = conn.WriteMessage(websocket.TextMessage, []&lt;span class=&quot;code-snippet__keyword&quot;&gt;byte&lt;/span&gt;(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;heartbeat&quot;&lt;/span&gt;)); err != &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            time.Sleep(&lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt; * time.Second)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   &lt;span class=&quot;code-snippet__keyword&quot;&gt;for&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;         &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; _, data, err = conn.ReadMessage(); err != &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__keyword&quot;&gt;goto&lt;/span&gt; ERR&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; err = conn.WriteMessage(websocket.TextMessage, data); err != &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;         &lt;span class=&quot;code-snippet__keyword&quot;&gt;goto&lt;/span&gt; ERR&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;ERR:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    conn.Close()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    http.HandleFunc(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;/ws&quot;&lt;/span&gt;, wsHandler)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    http.ListenAndServe(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;0.0.0.0:7777&quot;&lt;/span&gt;, &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section&gt;借助go语言很容易搭建协程的特点，我专门开启了一个协程每秒向客户端发送一条消息。打开客户端浏览器可以看到，frame中每秒的心跳数据一直在跳动，当长链接断开之后，心跳就没有了，就像人没有了心跳一样：&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7625&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/sXiaukvjR0RAxU2v3eTEGWyIWSIqeyAe4wjgqlpovaTNTw3feQR7zKWH1V0hZ1CHg4uXtZrnKWMcP6auo5nX0pA/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;800&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;大家对websocket协议已经有了了解，接下来就让我们一起快速搭建一个高性能、可拓展的IM系统吧。&lt;/section&gt;&lt;h2 data-id=&quot;heading-7&quot;&gt;4.快速搭建高性能、可拓展的IM系统&lt;/h2&gt;&lt;h3 data-id=&quot;heading-8&quot;&gt;&lt;span&gt;&lt;strong&gt;4.1 系统架构和代码文件目录结构&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;section&gt;下图是一个比较完备的IM系统架构：包含了C端、接入层（通过协议接入）、S端处理逻辑和分发消息、存储层用来持久化数据。&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.505307855626327&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/sXiaukvjR0RAxU2v3eTEGWyIWSIqeyAe4nUMe3jy1mVCiab4s5EqWz35Vnz9TZEfsWX5SRFTNbn0uOZkJ92QFUVw/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;471&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;我们本节C端使用的是Webapp, 通过Go语言渲染Vue模版快速实现功能；接入层使用的是websocket协议，前边已经进行了深入的介绍；S端是我们实现的重点，其中鉴权、登录、关系管理、单聊和群聊的功能都已经实现，读者可以在这部分功能的基础上再拓展其他的功能，比如：视频语音聊天、发红包、朋友圈等业务模块；存储层我们做的比较简单，只是使用Mysql简单持久化存储了用户关系，然后聊天中的图片资源我们存储到了本地文件中。虽然我们的IM系统实现的比较简化，但是读者可以在次基础上进行改进、完善、拓展，依然能够作出高可用的企业级产品。&lt;/section&gt;&lt;section&gt;我们的系统服务使用Go语言构建，代码结构比较简洁，但是性能比较优秀（这是Java和其他语言所无法比拟的），单机支持几万人的在线聊天。&lt;/section&gt;&lt;section&gt;下边是代码文件的目录结构:&lt;/section&gt;&lt;pre&gt;&lt;section&gt;&lt;code lang=&quot;go&quot;&gt;app&lt;br/&gt;│   ├── args&lt;br/&gt;│   │   ├── contact.&lt;span&gt;go&lt;/span&gt;&lt;br/&gt;│   │   └── pagearg.&lt;span&gt;go&lt;/span&gt;&lt;br/&gt;│   ├── controller           &lt;span&gt;//控制器层，api入口&lt;/span&gt;&lt;br/&gt;│   │   ├── chat.&lt;span&gt;go&lt;/span&gt;&lt;br/&gt;│   │   ├── contract.&lt;span&gt;go&lt;/span&gt;&lt;br/&gt;│   │   ├── upload.&lt;span&gt;go&lt;/span&gt;&lt;br/&gt;│   │   └── user.&lt;span&gt;go&lt;/span&gt;&lt;br/&gt;│   ├── main.&lt;span&gt;go&lt;/span&gt;             &lt;span&gt;//程序入口&lt;/span&gt;&lt;br/&gt;│   ├── model               &lt;span&gt;//数据定义与存储&lt;/span&gt;&lt;br/&gt;│   │   ├── community.&lt;span&gt;go&lt;/span&gt;&lt;br/&gt;│   │   ├── contract.&lt;span&gt;go&lt;/span&gt;&lt;br/&gt;│   │   ├── init.&lt;span&gt;go&lt;/span&gt;&lt;br/&gt;│   │   └── user.&lt;span&gt;go&lt;/span&gt;&lt;br/&gt;│   ├── service             &lt;span&gt;//逻辑实现&lt;/span&gt;&lt;br/&gt;│   │   ├── contract.&lt;span&gt;go&lt;/span&gt;&lt;br/&gt;│   │   └── user.&lt;span&gt;go&lt;/span&gt;&lt;br/&gt;│   ├── util                &lt;span&gt;//帮助函数    &lt;/span&gt;&lt;br/&gt;│   │   ├── md5.&lt;span&gt;go&lt;/span&gt;&lt;br/&gt;│   │   ├── parse.&lt;span&gt;go&lt;/span&gt;&lt;br/&gt;│   │   ├── resp.&lt;span&gt;go&lt;/span&gt;&lt;br/&gt;│   │   └── &lt;span&gt;string&lt;/span&gt;.&lt;span&gt;go&lt;/span&gt;&lt;br/&gt;│   └── view                &lt;span&gt;//模版资源&lt;/span&gt;&lt;br/&gt;│   │   ├── ...&lt;br/&gt;asset                       &lt;span&gt;//js、css文件&lt;/span&gt;&lt;br/&gt;resource                    &lt;span&gt;//上传资源，上传图片会放到这里&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section&gt;从入口函数main.go开始，我们定义了controller层，是客户端api的入口。service用来处理主要的用户逻辑，消息分发、用户管理都在这里实现。model层定义了一些数据表，主要是用户注册和用户好友关系、群组等信息，存储到mysql。util包下是一些帮助函数，比如加密、请求响应等。view下边存储了模版资源信息，上边所说的这些都在app文件夹下存储，外层还有asset用来存储css、js文件和聊天中会用到的表情图片等。resource下存储用户聊天中的图片或者视频等文件。总体来讲，我们的代码目录机构还是比较简洁清晰的。&lt;/section&gt;&lt;section&gt;了解了我们要搭建的IM系统架构，我们再来看一下架构重点实现的功能吧。&lt;/section&gt;&lt;h3 data-id=&quot;heading-9&quot;&gt;&lt;span&gt;&lt;strong&gt;4.2 10行代码万能模版渲染&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;section&gt;Go语言提供了强大的html渲染能力，非常简单的构建web应用，下边是实现模版渲染的代码，它太简单了，以至于可以直接在main.go函数中实现:&lt;/section&gt;&lt;pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;go&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;registerView&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  tpl, err := template.ParseGlob(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;./app/view/**/*&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; err != &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    log.Fatal(err.Error())&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;for&lt;/span&gt; _, v := &lt;span class=&quot;code-snippet__keyword&quot;&gt;range&lt;/span&gt; tpl.Templates() {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    tplName := v.Name()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    http.HandleFunc(tplName, &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(writer http.ResponseWriter, request *http.Request)&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      tpl.ExecuteTemplate(writer, tplName, &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    })&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    ......&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    http.Handle(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;/asset/&quot;&lt;/span&gt;, http.FileServer(http.Dir(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;.&quot;&lt;/span&gt;)))&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  http.Handle(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;/resource/&quot;&lt;/span&gt;, http.FileServer(http.Dir(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;.&quot;&lt;/span&gt;)))&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  registerView()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  log.Fatal(http.ListenAndServe(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;:8081&quot;&lt;/span&gt;, &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt;))&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section&gt;Go实现静态资源服务器也很简单，只需要调用http.FileServer就可以了，这样html文件就可以很轻松的访问依赖的js、css和图标文件了。使用http/template包下的ParseGlob、ExecuteTemplate又可以很轻松的解析web页面，这些工作完全不依赖与nginx。现在我们就完成了登录、注册、聊天C端界面的构建工作:&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.6830985915492958&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/sXiaukvjR0RAxU2v3eTEGWyIWSIqeyAe4ZiczQibuOFsg2ak2koxHsa7aDibTTA9p4iasibXVLQlBibfhYMNjiaMpQ6eibg/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;568&quot;/&gt; &lt;img data-ratio=&quot;1.685512367491166&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/sXiaukvjR0RAxU2v3eTEGWyIWSIqeyAe4OPh12FuEuH1z25Q5Qz82NojiaiaaV5324Kt7zvLYJmzRo3Ud8SdANoxw/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;566&quot; class=&quot;rich_pages wxw-img&quot;/&gt;&lt;/section&gt;&lt;h3 data-id=&quot;heading-10&quot;&gt;&lt;span&gt;&lt;strong&gt;4.3 注册、登录和鉴权&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;section&gt;之前我们提到过，对于注册、登录和好友关系管理，我们需要有一张&lt;code&gt;user&lt;/code&gt;表来存储用户信息。我们使用&lt;code&gt;github.com/go-xorm/xorm&lt;/code&gt;来操作&lt;code&gt;mysql&lt;/code&gt;,首先看一下&lt;code&gt;mysql&lt;/code&gt;表的设计:&lt;/section&gt;&lt;section&gt;app/model/user.go&lt;/section&gt;&lt;pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cpp&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;package model&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;time&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;const&lt;/span&gt; (&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  SexWomen = &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;W&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  SexMan = &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;M&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  SexUnknown = &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;U&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;type User &lt;span class=&quot;code-snippet__class&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;struct&lt;/span&gt; {&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  Id         int64     `xorm:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;pk autoincr bigint(64)&quot;&lt;/span&gt; form:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;id&quot;&lt;/span&gt; json:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;id&quot;&lt;/span&gt;`&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  Mobile   &lt;span class=&quot;code-snippet__built_in&quot;&gt;string&lt;/span&gt;     `xorm:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;varchar(20)&quot;&lt;/span&gt; form:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;mobile&quot;&lt;/span&gt; json:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;mobile&quot;&lt;/span&gt;`&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  Passwd       &lt;span class=&quot;code-snippet__built_in&quot;&gt;string&lt;/span&gt;  `xorm:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;varchar(40)&quot;&lt;/span&gt; form:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;passwd&quot;&lt;/span&gt; json:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;-&quot;&lt;/span&gt;`   &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  Avatar     &lt;span class=&quot;code-snippet__built_in&quot;&gt;string&lt;/span&gt;     `xorm:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;varchar(150)&quot;&lt;/span&gt; form:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;avatar&quot;&lt;/span&gt; json:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;avatar&quot;&lt;/span&gt;`&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  Sex        &lt;span class=&quot;code-snippet__built_in&quot;&gt;string&lt;/span&gt;  `xorm:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;varchar(2)&quot;&lt;/span&gt; form:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;sex&quot;&lt;/span&gt; json:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;sex&quot;&lt;/span&gt;`&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  Nickname    &lt;span class=&quot;code-snippet__built_in&quot;&gt;string&lt;/span&gt;  `xorm:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;varchar(20)&quot;&lt;/span&gt; form:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;nickname&quot;&lt;/span&gt; json:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;nickname&quot;&lt;/span&gt;`&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  Salt       &lt;span class=&quot;code-snippet__built_in&quot;&gt;string&lt;/span&gt;  `xorm:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;varchar(10)&quot;&lt;/span&gt; form:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;salt&quot;&lt;/span&gt; json:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;-&quot;&lt;/span&gt;`&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  Online     &lt;span class=&quot;code-snippet__keyword&quot;&gt;int&lt;/span&gt;  `xorm:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;int(10)&quot;&lt;/span&gt; form:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;online&quot;&lt;/span&gt; json:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;online&quot;&lt;/span&gt;`   &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  Token      &lt;span class=&quot;code-snippet__built_in&quot;&gt;string&lt;/span&gt;  `xorm:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;varchar(40)&quot;&lt;/span&gt; form:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;token&quot;&lt;/span&gt; json:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;token&quot;&lt;/span&gt;`   &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  Memo      &lt;span class=&quot;code-snippet__built_in&quot;&gt;string&lt;/span&gt;  `xorm:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;varchar(140)&quot;&lt;/span&gt; form:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;memo&quot;&lt;/span&gt; json:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;memo&quot;&lt;/span&gt;`&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  Createat   time.Time  `xorm:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;datetime&quot;&lt;/span&gt; form:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;createat&quot;&lt;/span&gt; json:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;createat&quot;&lt;/span&gt;`   &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section&gt;我们&lt;code&gt;user&lt;/code&gt;表中存储了用户名、密码、头像、用户性别、手机号等一些重要的信息，比较重要的是我们也存储了token标示用户在用户登录之后，http协议升级为websocket协议进行鉴权，这个细节点我们前边提到过，下边会有代码演示。接下来我们看一下model初始化要做的一些事情吧：&lt;/section&gt;&lt;section&gt;app/model/init.go&lt;/section&gt;&lt;pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;go&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;package&lt;/span&gt; model&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;import&lt;/span&gt; (&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;errors&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  _ &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;github.com/go-sql-driver/mysql&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;github.com/go-xorm/xorm&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;log&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;var&lt;/span&gt; DbEngine *xorm.Engine&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  driverName := &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;mysql&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  dsnName := &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;root:root@(127.0.0.1:3306)/chat?charset=utf8&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  err := errors.New(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  DbEngine, err = xorm.NewEngine(driverName, dsnName)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; err != &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt; &amp;amp;&amp;amp; err.Error() != &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;&quot;&lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    log.Fatal(err)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  DbEngine.ShowSQL(&lt;span class=&quot;code-snippet__literal&quot;&gt;true&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  DbEngine.SetMaxOpenConns(&lt;span class=&quot;code-snippet__number&quot;&gt;10&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  DbEngine.Sync(&lt;span class=&quot;code-snippet__built_in&quot;&gt;new&lt;/span&gt;(User), &lt;span class=&quot;code-snippet__built_in&quot;&gt;new&lt;/span&gt;(Community), &lt;span class=&quot;code-snippet__built_in&quot;&gt;new&lt;/span&gt;(Contact))&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  fmt.Println(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;init database ok!&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section&gt;我们创建一个DbEngine全局mysql连接对象，设置了一个大小为10的连接池。model包里的init函数在程序加载的时候会先执行，对Go语言熟悉的同学应该知道这一点。我们还设置了一些额外的参数用于调试程序，比如：设置打印运行中的sql，自动的同步数据表等，这些功能在生产环境中可以关闭。我们的model初始化工作就做完了，非常简陋，在实际的项目中，像数据库的用户名、密码、连接数和其他的配置信息，建议设置到配置文件中，然后读取，而不像本文硬编码的程序中。&lt;/section&gt;&lt;section&gt;注册是一个普通的api程序，对于Go语言来说，完成这件工作太简单了，我们来看一下代码:&lt;/section&gt;&lt;pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;go&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;############################&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;############################&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;......&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;UserRegister&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(writer http.ResponseWriter, request *http.Request)&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;var&lt;/span&gt; user model.User&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  util.Bind(request, &amp;amp;user)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  user, err := UserService.UserRegister(user.Mobile, user.Passwd, user.Nickname, user.Avatar, user.Sex)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; err != &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    util.RespFail(writer, err.Error())&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  } &lt;span class=&quot;code-snippet__keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    util.RespOk(writer, user, &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;......&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;############################&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;############################&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;......&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;type&lt;/span&gt; UserService &lt;span class=&quot;code-snippet__keyword&quot;&gt;struct&lt;/span&gt;{}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;(s *UserService)&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;UserRegister&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(mobile, plainPwd, nickname, avatar, sex &lt;span class=&quot;code-snippet__keyword&quot;&gt;string&lt;/span&gt;)&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;(user model.User, err error)&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    registerUser := model.User{}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    _, err = model.DbEngine.Where(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;mobile=? &quot;&lt;/span&gt;, mobile).Get(&amp;amp;registerUser)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; err != &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; registerUser, err&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; registerUser.Id &amp;gt; &lt;span class=&quot;code-snippet__number&quot;&gt;0&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; registerUser, errors.New(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;该手机号已注册&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  registerUser.Mobile = mobile&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  registerUser.Avatar = avatar&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  registerUser.Nickname = nickname&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  registerUser.Sex = sex&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  registerUser.Salt = fmt.Sprintf(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;%06d&quot;&lt;/span&gt;, rand.Int31n(&lt;span class=&quot;code-snippet__number&quot;&gt;10000&lt;/span&gt;))&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  registerUser.Passwd = util.MakePasswd(plainPwd, registerUser.Salt)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  registerUser.Createat = time.Now()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  _, err = model.DbEngine.InsertOne(&amp;amp;registerUser)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; registerUser,  err&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;......&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;############################&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;############################&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;......&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    http.HandleFunc(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;/user/register&quot;&lt;/span&gt;, controller.UserRegister)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section&gt;首先我们使用&lt;code&gt;util.Bind(request, &amp;amp;user)&lt;/code&gt;将用户参数绑定到user对象上，使用的是util包中的Bind函数，具体实现细节读者可以自行研究，主要模仿了Gin框架的参数绑定，可以拿来即用，非常方便。然后我们根据用户手机号搜索数据库中是否已经存在，如果不存在就插入到数据库中，返回注册成功信息，逻辑非常简单。登录逻辑更简单:&lt;/section&gt;&lt;pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;go&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;############################&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;############################&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;UserLogin&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(writer http.ResponseWriter, request *http.Request)&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  request.ParseForm()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  mobile := request.PostForm.Get(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;mobile&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  plainpwd := request.PostForm.Get(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;passwd&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;code-snippet__built_in&quot;&gt;len&lt;/span&gt;(mobile) == &lt;span class=&quot;code-snippet__number&quot;&gt;0&lt;/span&gt; || &lt;span class=&quot;code-snippet__built_in&quot;&gt;len&lt;/span&gt;(plainpwd) == &lt;span class=&quot;code-snippet__number&quot;&gt;0&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    util.RespFail(writer, &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;用户名或密码不正确&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  loginUser, err := UserService.Login(mobile, plainpwd)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; err != &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    util.RespFail(writer, err.Error())&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  } &lt;span class=&quot;code-snippet__keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    util.RespOk(writer, loginUser, &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;############################&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;############################&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;(s *UserService)&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;Login&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(mobile, plainpwd &lt;span class=&quot;code-snippet__keyword&quot;&gt;string&lt;/span&gt;)&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;(user model.User, err error)&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  loginUser := model.User{}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  model.DbEngine.Where(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;mobile = ?&quot;&lt;/span&gt;, mobile).Get(&amp;amp;loginUser)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; loginUser.Id == &lt;span class=&quot;code-snippet__number&quot;&gt;0&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; loginUser, errors.New(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;用户不存在&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; !util.ValidatePasswd(plainpwd, loginUser.Salt, loginUser.Passwd) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; loginUser, errors.New(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;密码不正确&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  token := util.GenRandomStr(&lt;span class=&quot;code-snippet__number&quot;&gt;32&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  loginUser.Token = token&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  model.DbEngine.ID(loginUser.Id).Cols(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;token&quot;&lt;/span&gt;).Update(&amp;amp;loginUser)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; loginUser, &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;############################&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;############################&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;......&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    http.HandleFunc(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;/user/login&quot;&lt;/span&gt;, controller.UserLogin)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section&gt;实现了登录逻辑，接下来我们就到了用户首页，这里列出了用户列表，点击即可进入聊天页面。用户也可以点击下边的tab栏查看自己所在的群组，可以由此进入群组聊天页面。具体这些工作还需要读者自己开发用户列表、添加好友、创建群组、添加群组等功能，这些都是一些普通的api开发工作，我们的代码程序中也实现了，读者可以拿去修改使用，这里就不再演示了。我们再重点看一下用户鉴权这一块吧，用户鉴权是指用户点击聊天进入聊天界面时，客户端会发送一个GET请求给服务端，请求建立一条websocket长连接，服务端收到建立连接的请求之后，会对客户端请求进行校验，以确实是否建立长连接，然后将这条长连接的句柄添加到map当中(因为服务端不仅仅对一个客户端服务，可能存在千千万万个长连接)维护起来。我们下边来看具体代码实现:&lt;/section&gt;&lt;pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;go&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;############################&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;############################&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;......&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;type&lt;/span&gt; Node &lt;span class=&quot;code-snippet__keyword&quot;&gt;struct&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  Conn *websocket.Conn&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  DataQueue &lt;span class=&quot;code-snippet__keyword&quot;&gt;chan&lt;/span&gt; []&lt;span class=&quot;code-snippet__keyword&quot;&gt;byte&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  GroupSets set.Interface&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;......&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;var&lt;/span&gt; clientMap &lt;span class=&quot;code-snippet__keyword&quot;&gt;map&lt;/span&gt;[&lt;span class=&quot;code-snippet__keyword&quot;&gt;int64&lt;/span&gt;]*Node = &lt;span class=&quot;code-snippet__built_in&quot;&gt;make&lt;/span&gt;(&lt;span class=&quot;code-snippet__keyword&quot;&gt;map&lt;/span&gt;[&lt;span class=&quot;code-snippet__keyword&quot;&gt;int64&lt;/span&gt;]*Node, &lt;span class=&quot;code-snippet__number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;var&lt;/span&gt; rwlocker sync.RWMutex&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;Chat&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(writer http.ResponseWriter, request *http.Request)&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  query := request.URL.Query()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  id := query.Get(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;id&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  token := query.Get(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;token&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  userId, _ := strconv.ParseInt(id, &lt;span class=&quot;code-snippet__number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;code-snippet__number&quot;&gt;64&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  islegal := checkToken(userId, token)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  conn, err := (&amp;amp;websocket.Upgrader{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    CheckOrigin: &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(r *http.Request)&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;bool&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; islegal&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    },&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }).Upgrade(writer, request, &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; err != &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    log.Println(err.Error())&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  node := &amp;amp;Node{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    Conn:      conn,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    DataQueue: &lt;span class=&quot;code-snippet__built_in&quot;&gt;make&lt;/span&gt;(&lt;span class=&quot;code-snippet__keyword&quot;&gt;chan&lt;/span&gt; []&lt;span class=&quot;code-snippet__keyword&quot;&gt;byte&lt;/span&gt;, &lt;span class=&quot;code-snippet__number&quot;&gt;50&lt;/span&gt;),&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    GroupSets: set.New(set.ThreadSafe),&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  comIds := concatService.SearchComunityIds(userId)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;for&lt;/span&gt; _, v := &lt;span class=&quot;code-snippet__keyword&quot;&gt;range&lt;/span&gt; comIds {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    node.GroupSets.Add(v)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  rwlocker.Lock()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  clientMap[userId] = node&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  rwlocker.Unlock()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;go&lt;/span&gt; sendproc(node)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;go&lt;/span&gt; recvproc(node)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  sendMsg(userId, []&lt;span class=&quot;code-snippet__keyword&quot;&gt;byte&lt;/span&gt;(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;welcome!&quot;&lt;/span&gt;))&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;......&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;checkToken&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(userId &lt;span class=&quot;code-snippet__keyword&quot;&gt;int64&lt;/span&gt;, token &lt;span class=&quot;code-snippet__keyword&quot;&gt;string&lt;/span&gt;)&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;bool&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  user := UserService.Find(userId)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; user.Token == token&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;......&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;############################&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;############################&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;......&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    http.HandleFunc(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;/chat&quot;&lt;/span&gt;, controller.Chat)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;......&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section&gt;进入聊天室，客户端发起&lt;code&gt;/chat&lt;/code&gt;的GET请求，服务端首先创建了一个&lt;code&gt;Node&lt;/code&gt;结构体，用来存储和客户端建立起来的websocket长连接句柄，每一个句柄都有一个管道&lt;code&gt;DataQueue&lt;/code&gt;，用来收发信息，&lt;code&gt;GroupSets&lt;/code&gt;是客户端对应的群组信息，后边我们会提到。&lt;/section&gt;&lt;pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;go&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;type&lt;/span&gt; Node &lt;span class=&quot;code-snippet__keyword&quot;&gt;struct&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  Conn *websocket.Conn&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  DataQueue &lt;span class=&quot;code-snippet__keyword&quot;&gt;chan&lt;/span&gt; []&lt;span class=&quot;code-snippet__keyword&quot;&gt;byte&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  GroupSets set.Interface&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section&gt;服务端创建了一个map，将客户端用户id和其&lt;code&gt;Node&lt;/code&gt;关联起来：&lt;/section&gt;&lt;pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;go&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;var&lt;/span&gt; clientMap &lt;span class=&quot;code-snippet__keyword&quot;&gt;map&lt;/span&gt;[&lt;span class=&quot;code-snippet__keyword&quot;&gt;int64&lt;/span&gt;]*Node = &lt;span class=&quot;code-snippet__built_in&quot;&gt;make&lt;/span&gt;(&lt;span class=&quot;code-snippet__keyword&quot;&gt;map&lt;/span&gt;[&lt;span class=&quot;code-snippet__keyword&quot;&gt;int64&lt;/span&gt;]*Node, &lt;span class=&quot;code-snippet__number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section&gt;接下来是主要的用户逻辑了，服务端接收到客户端的参数之后，首先校验token是否合法，由此确定是否要升级http协议到websocket协议，建立长连接，这一步称为鉴权。&lt;/section&gt;&lt;pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;go&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  islegal := checkToken(userId, token)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  conn, err := (&amp;amp;websocket.Upgrader{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    CheckOrigin: &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(r *http.Request)&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;bool&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; islegal&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    },&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }).Upgrade(writer, request, &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section&gt;鉴权成功以后，服务端初始化一个&lt;code&gt;Node&lt;/code&gt;,搜索该客户端用户所在的群组&lt;code&gt;id&lt;/code&gt;,填充到群组的&lt;code&gt;GroupSets&lt;/code&gt;属性中。然后将&lt;code&gt;Node&lt;/code&gt;节点添加到&lt;code&gt;ClientMap&lt;/code&gt;中维护起来，我们对&lt;code&gt;ClientMap&lt;/code&gt;的操作一定要加锁，因为Go语言在并发情况下，对map的操作并不保证原子安全:&lt;/section&gt;&lt;pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;go&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  node := &amp;amp;Node{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    Conn:      conn,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    DataQueue: &lt;span class=&quot;code-snippet__built_in&quot;&gt;make&lt;/span&gt;(&lt;span class=&quot;code-snippet__keyword&quot;&gt;chan&lt;/span&gt; []&lt;span class=&quot;code-snippet__keyword&quot;&gt;byte&lt;/span&gt;, &lt;span class=&quot;code-snippet__number&quot;&gt;50&lt;/span&gt;),&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    GroupSets: set.New(set.ThreadSafe),&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  comIds := concatService.SearchComunityIds(userId)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;for&lt;/span&gt; _, v := &lt;span class=&quot;code-snippet__keyword&quot;&gt;range&lt;/span&gt; comIds {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    node.GroupSets.Add(v)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  rwlocker.Lock()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  clientMap[userId] = node&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  rwlocker.Unlock()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section&gt;服务端和客户端建立了长链接之后，会开启两个协程专门来处理客户端消息的收发工作，对于Go语言来说，维护协程的代价是很低的，所以说我们的单机程序可以很轻松的支持成千上完的用户聊天，这还是在没有优化的情况下。&lt;/section&gt;&lt;pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;go&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;......&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;go&lt;/span&gt; sendproc(node)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;go&lt;/span&gt; recvproc(node)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  sendMsg(userId, []&lt;span class=&quot;code-snippet__keyword&quot;&gt;byte&lt;/span&gt;(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;welcome!&quot;&lt;/span&gt;))&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;......&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section&gt;至此，我们的鉴权工作也已经完成了，客户端和服务端的连接已经建立好了，接下来我们就来实现具体的聊天功能吧。&lt;/section&gt;&lt;h3 data-id=&quot;heading-11&quot;&gt;&lt;span&gt;&lt;strong&gt;4.4 实现单聊和群聊&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;section&gt;实现聊天的过程中，消息体的设计至关重要，消息体设计的合理，功能拓展起来就非常的方便，后期维护、优化起来也比较简单。我们先来看一下，我们消息体的设计:&lt;/section&gt;&lt;pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cs&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;############################&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;############################&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;type Message &lt;span class=&quot;code-snippet__keyword&quot;&gt;struct&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  Id      int64  `json:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;id,omitempty&quot;&lt;/span&gt; form:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;id&quot;&lt;/span&gt;`           &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  Userid  int64  `json:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;userid,omitempty&quot;&lt;/span&gt; form:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;userid&quot;&lt;/span&gt;`   &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  Cmd     &lt;span class=&quot;code-snippet__keyword&quot;&gt;int&lt;/span&gt;    `json:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;cmd,omitempty&quot;&lt;/span&gt; form:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;cmd&quot;&lt;/span&gt;`         &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  Dstid   int64  `json:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;dstid,omitempty&quot;&lt;/span&gt; form:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;dstid&quot;&lt;/span&gt;`     &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  Media   &lt;span class=&quot;code-snippet__keyword&quot;&gt;int&lt;/span&gt;    `json:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;media,omitempty&quot;&lt;/span&gt; form:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;media&quot;&lt;/span&gt;`     &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  Content &lt;span class=&quot;code-snippet__keyword&quot;&gt;string&lt;/span&gt; `json:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;content,omitempty&quot;&lt;/span&gt; form:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;content&quot;&lt;/span&gt;` &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  Pic     &lt;span class=&quot;code-snippet__keyword&quot;&gt;string&lt;/span&gt; `json:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;pic,omitempty&quot;&lt;/span&gt; form:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;pic&quot;&lt;/span&gt;`         &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  Url     &lt;span class=&quot;code-snippet__keyword&quot;&gt;string&lt;/span&gt; `json:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;url,omitempty&quot;&lt;/span&gt; form:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;url&quot;&lt;/span&gt;`         &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  Memo    &lt;span class=&quot;code-snippet__keyword&quot;&gt;string&lt;/span&gt; `json:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;memo,omitempty&quot;&lt;/span&gt; form:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;memo&quot;&lt;/span&gt;`       &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  Amount  &lt;span class=&quot;code-snippet__keyword&quot;&gt;int&lt;/span&gt;    `json:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;amount,omitempty&quot;&lt;/span&gt; form:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;amount&quot;&lt;/span&gt;`   &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section&gt;每一条消息都有一个唯一的&lt;code&gt;id&lt;/code&gt;，将来我们可以对消息持久化存储，但是我们系统中并没有做这件工作，读者可根据需要自行完成。然后是&lt;code&gt;userid&lt;/code&gt;，发起消息的用户，对应的是&lt;code&gt;dstid&lt;/code&gt;,要将消息发送给谁。还有一个参数非常重要，就是&lt;code&gt;cmd&lt;/code&gt;,它表示是群聊还是私聊，群聊和私聊的代码处理逻辑有所区别，我们为此专门定义了一些&lt;code&gt;cmd&lt;/code&gt;常量:&lt;/section&gt;&lt;pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;properties&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;//定义命令行格式&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;(&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__attr&quot;&gt;CmdSingleMsg&lt;/span&gt; = &lt;span class=&quot;code-snippet__string&quot;&gt;10&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__attr&quot;&gt;CmdRoomMsg&lt;/span&gt;   = &lt;span class=&quot;code-snippet__string&quot;&gt;11&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__attr&quot;&gt;CmdHeart&lt;/span&gt;     = &lt;span class=&quot;code-snippet__string&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section&gt;&lt;code&gt;media&lt;/code&gt;是媒体类型，我们都知道微信支持语音、视频和各种其他的文件传输，我们设置了该参数之后，读者也可以自行拓展这些功能。&lt;code&gt;content&lt;/code&gt;是消息文本，是聊天中最常用的一种形式。&lt;code&gt;pic&lt;/code&gt;和&lt;code&gt;url&lt;/code&gt;是为图片和其他链接资源所设置的。&lt;code&gt;memo&lt;/code&gt;是简介，&lt;code&gt;amount&lt;/code&gt;是和数字相关的信息，比如说发红包业务有可能使用到该字段。&lt;/section&gt;&lt;section&gt;消息体的设计就是这样，基于此消息体，我们来看一下，服务端如何收发消息，实现单聊和群聊吧。还是从上一节说起，我们为每一个客户端长链接开启了两个协程，用于收发消息，聊天的逻辑就在这两个协程当中实现。&lt;/section&gt;&lt;pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;go&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;############################&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;############################&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;......&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;sendproc&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(node *Node)&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;for&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;select&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;case&lt;/span&gt; data := &amp;lt;-node.DataQueue:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      err := node.Conn.WriteMessage(websocket.TextMessage, data)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; err != &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        log.Println(err.Error())&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;recvproc&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(node *Node)&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;for&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    _, data, err := node.Conn.ReadMessage()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; err != &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      log.Println(err.Error())&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    dispatch(data)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    fmt.Printf(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;recv&amp;lt;=%s&quot;&lt;/span&gt;, data)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;......&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;dispatch&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(data []&lt;span class=&quot;code-snippet__keyword&quot;&gt;byte&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  msg := Message{}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  err := json.Unmarshal(data, &amp;amp;msg)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; err != &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    log.Println(err.Error())&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;switch&lt;/span&gt; msg.Cmd {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;case&lt;/span&gt; CmdSingleMsg:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    sendMsg(msg.Dstid, data)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;case&lt;/span&gt; CmdRoomMsg:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;for&lt;/span&gt; _, v := &lt;span class=&quot;code-snippet__keyword&quot;&gt;range&lt;/span&gt; clientMap {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; v.GroupSets.Has(msg.Dstid) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        v.DataQueue &amp;lt;- data&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;case&lt;/span&gt; CmdHeart:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;sendMsg&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(userId &lt;span class=&quot;code-snippet__keyword&quot;&gt;int64&lt;/span&gt;, msg []&lt;span class=&quot;code-snippet__keyword&quot;&gt;byte&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  rwlocker.RLock()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  node, ok := clientMap[userId]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  rwlocker.RUnlock()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; ok {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    node.DataQueue &amp;lt;- msg&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;......&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section&gt;服务端向客户端发送消息逻辑比较简单，就是将客户端发送过来的消息，直接添加到目标用户&lt;code&gt;Node&lt;/code&gt;的channel中去就好了。通过websocket的&lt;code&gt;WriteMessage&lt;/code&gt;就可以实现此功能：&lt;/section&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;go&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;sendproc&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(node *Node)&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;for&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;select&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;case&lt;/span&gt; data := &amp;lt;-node.DataQueue:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      err := node.Conn.WriteMessage(websocket.TextMessage, data)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; err != &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        log.Println(err.Error())&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;收发逻辑是这样的，服务端通过websocket的&lt;code&gt;ReadMessage&lt;/code&gt;方法接收到用户信息，然后通过&lt;code&gt;dispatch&lt;/code&gt;方法进行调度:&lt;/section&gt;&lt;pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;go&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;recvproc&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(node *Node)&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;for&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    _, data, err := node.Conn.ReadMessage()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; err != &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      log.Println(err.Error())&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    dispatch(data)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    fmt.Printf(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;recv&amp;lt;=%s&quot;&lt;/span&gt;, data)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section&gt;&lt;code&gt;dispatch&lt;/code&gt;方法所做的工作有两件：&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;解析消息体到Message中&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;根据消息类型，将消息体添加到不同用户或者用户组的channel当中&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;Go语言中的channel是协程间通信的强大工具, &lt;code&gt;dispatch&lt;/code&gt;只要将消息添加到channel当中，发送协程就会获取到信息发送给客户端，这样就实现了聊天功能，单聊和群聊的区别只是服务端将消息发送给群组还是个人，如果发送给群组，程序会遍历整个&lt;code&gt;clientMap&lt;/code&gt;, 看看哪个用户在这个群组当中，然后将消息发送。其实更好的实践是我们再维护一个群组和用户关系的Map，这样在发送群组消息的时候，取得用户信息就比遍历整个&lt;code&gt;clientMap&lt;/code&gt;代价要小很多了。&lt;/section&gt;&lt;pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;go&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;dispatch&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(data []&lt;span class=&quot;code-snippet__keyword&quot;&gt;byte&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  msg := Message{}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  err := json.Unmarshal(data, &amp;amp;msg)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; err != &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    log.Println(err.Error())&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;switch&lt;/span&gt; msg.Cmd {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;case&lt;/span&gt; CmdSingleMsg:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    sendMsg(msg.Dstid, data)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;case&lt;/span&gt; CmdRoomMsg:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;for&lt;/span&gt; _, v := &lt;span class=&quot;code-snippet__keyword&quot;&gt;range&lt;/span&gt; clientMap {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; v.GroupSets.Has(msg.Dstid) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        v.DataQueue &amp;lt;- data&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;case&lt;/span&gt; CmdHeart:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;......&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;sendMsg&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(userId &lt;span class=&quot;code-snippet__keyword&quot;&gt;int64&lt;/span&gt;, msg []&lt;span class=&quot;code-snippet__keyword&quot;&gt;byte&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  rwlocker.RLock()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  node, ok := clientMap[userId]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  rwlocker.RUnlock()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; ok {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    node.DataQueue &amp;lt;- msg&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section&gt;可以看到，通过channel，我们实现用户聊天功能还是非常方便的，代码可读性很强，构建的程序也很健壮。下边是笔者本地聊天的示意图：&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.7526501766784452&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/sXiaukvjR0RAxU2v3eTEGWyIWSIqeyAe4hOdT8Na4H3ibWyia5ZTz5E7rSvn1P2xoH9s3exLgxicDiaZgHKuWBQVhMg/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;566&quot;/&gt; &lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.7864768683274022&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/sXiaukvjR0RAxU2v3eTEGWyIWSIqeyAe46OoBzibBbXSMkhuaURibEyXpCQXltAWUzzX20fEwmyLbibbG9blUicYZgw/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;562&quot;/&gt;&lt;/section&gt;&lt;h3 data-id=&quot;heading-12&quot;&gt;&lt;span&gt;&lt;strong&gt;4.5 发送表情和图片&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;section&gt;下边我们再来看一下聊天中经常使用到的发送表情和图片功能是如何实现的吧。其实表情也是小图片，只是和聊天中图片不同的是，表情图片比较小，可以缓存在客户端，或者直接存放到客户端代码的代码文件中（不过现在微信聊天中有的表情包都是通过网络传输的）。下边是一个聊天中返回的图标文本数据：&lt;/section&gt;&lt;pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;json&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;&quot;dstid&quot;&lt;/span&gt;:&lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;&quot;cmd&quot;&lt;/span&gt;:&lt;span class=&quot;code-snippet__number&quot;&gt;10&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;&quot;userid&quot;&lt;/span&gt;:&lt;span class=&quot;code-snippet__number&quot;&gt;2&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;&quot;media&quot;&lt;/span&gt;:&lt;span class=&quot;code-snippet__number&quot;&gt;4&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;&quot;url&quot;&lt;/span&gt;:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;/asset/plugins/doutu//emoj/2.gif&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section&gt;客户端拿到url后，就加载本地的小图标。聊天中用户发送图片也是一样的原理，不过聊天中用户的图片需要先上传到服务器，然后服务端返回url，客户端再进行加载，我们的IM系统也支持此功能，我们看一下图片上传的程序:&lt;/section&gt;&lt;pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;go&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;############################&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;############################&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  os.MkdirAll(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;./resource&quot;&lt;/span&gt;, os.ModePerm)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;FileUpload&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(writer http.ResponseWriter, request *http.Request)&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  UploadLocal(writer, request)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;UploadLocal&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(writer http.ResponseWriter, request *http.Request)&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  srcFile, head, err := request.FormFile(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;file&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; err != &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    util.RespFail(writer, err.Error())&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  suffix := &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;.png&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  srcFilename := head.Filename&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  splitMsg := strings.Split(srcFilename, &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;.&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;code-snippet__built_in&quot;&gt;len&lt;/span&gt;(splitMsg) &amp;gt; &lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    suffix = &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;.&quot;&lt;/span&gt; + splitMsg[&lt;span class=&quot;code-snippet__built_in&quot;&gt;len&lt;/span&gt;(splitMsg)&lt;span class=&quot;code-snippet__number&quot;&gt;-1&lt;/span&gt;]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  filetype := request.FormValue(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;filetype&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;code-snippet__built_in&quot;&gt;len&lt;/span&gt;(filetype) &amp;gt; &lt;span class=&quot;code-snippet__number&quot;&gt;0&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    suffix = filetype&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  filename := fmt.Sprintf(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;%d%s%s&quot;&lt;/span&gt;, time.Now().Unix(), util.GenRandomStr(&lt;span class=&quot;code-snippet__number&quot;&gt;32&lt;/span&gt;), suffix)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  filepath := &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;./resource/&quot;&lt;/span&gt; + filename&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  dstfile, err := os.Create(filepath)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; err != &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    util.RespFail(writer, err.Error())&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  _, err = io.Copy(dstfile, srcFile)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; err != &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    util.RespFail(writer, err.Error())&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  util.RespOk(writer, filepath, &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;......&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;############################&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;############################&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    http.HandleFunc(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;/attach/upload&quot;&lt;/span&gt;, controller.FileUpload)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section&gt;我们将文件存放到本地的一个磁盘文件夹下，然后发送给客户端路径，客户端通过路径加载相关的图片信息。&lt;/section&gt;&lt;section&gt;关于发送图片，我们虽然实现功能，但是做的太简单了，我们在接下来的章节详细的和大家探讨一下系统优化相关的方案。怎样让我们的系统在生产环境中用的更好。&lt;/section&gt;&lt;h2 data-id=&quot;heading-13&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/h2&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;1.2857142857142858&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YK9e7vHy9IQATwibKVicOpXZibX8VOvBrnF39NdpXQMwdpyIgN0ibicEwRdge0mXthxjHagHgwpWhrsibvMZFibaQC6vQ/640?wx_fmt=png&quot; data-w=&quot;14&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;5. 程序优化和系统架构升级方案&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;1.2857142857142858&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/orc2J6rib40bATuJM23UiaHQ0tsVpvjgyuhk7To5zFqb2fyL9pCr1U7hfeKJELCht0KxWnuias6TLibMdcRhM7QhyQ/640?wx_fmt=png&quot; data-w=&quot;14&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;section&gt;我们上边实现了一个功能健全的IM系统，要将该系统应用在企业的生产环境中，需要对代码和系统架构做优化，才能实现真正的高可用。本节主要从代码优化和架构升级上谈一些个人观点，能力有限不可能面面俱到，希望读者也在评论区给出更多好的建议。&lt;/section&gt;&lt;h3 data-id=&quot;heading-14&quot;&gt;&lt;span&gt;&lt;strong&gt;5.1 代码优化&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;section&gt;我们的代码没有使用框架，函数和api都写的比较简陋，虽然进行了简单的结构化，但是很多逻辑并没有解耦，所以建议大家业界比较成熟的框架对代码进行重构，Gin就是一个不错的选择。&lt;/section&gt;&lt;section&gt;系统程序中使用&lt;code&gt;clientMap&lt;/code&gt;来存储客户端长链接信息，Go语言中对于大Map的读写要加锁，有一定的性能限制，在用户量特别大的情况下，读者可以对&lt;code&gt;clientMap&lt;/code&gt;做拆分，根据用户id做hash或者采用其他的策略，也可以将这些长链接句柄存放到redis中。&lt;/section&gt;&lt;section&gt;上边提到图片上传的过程，有很多可以优化的地方，首先是图片压缩(微信也是这样做的)，图片资源的压缩不仅可以加快传输速度，还可以减少服务端存储的空间。另外对于图片资源来说，实际上服务端只需要存储一份数据就够了，读者可以在图片上传的时候做hash校验，如果资源文件已经存在了，就不需要再次上传了，而是直接将url返回给客户端（各大网盘厂商的妙传功能就是这样实现的）&lt;/section&gt;&lt;section&gt;代码还有很多优化的地方，比如我们可以将鉴权做的更好，使用wss://代替ws://，在一些安全领域，可以对消息体进行加密，在高并发领域，可以对消息体进行压缩;对Mysql连接池再做优化，将消息持久化存储到mongo，避免对数据库频繁的写入，将单条写入改为多条一块写入;为了使程序耗费更少的Cpu,降低对消息体进行Json编码的次数，一次编码，多次使用......&lt;/section&gt;&lt;h3 data-id=&quot;heading-15&quot;&gt;&lt;span&gt;&lt;strong&gt;5.2 系统架构升级&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;section&gt;我们的系统太过于简单，所在在架构升级上，有太多的工作可以做，笔者在这里只提几点比较重要的：&lt;/section&gt;&lt;section&gt;我们所说的资源指的是图片、视频等文件，可以选择成熟厂商的Cos，或者自己搭建文件服务器也是可以的，如果资源量比较大，用户比较广，cdn是不错的选择。&lt;/section&gt;&lt;section&gt;对于服务器的选择，一般会选择linux，linux下一切皆文件，长链接也是一样。单机的系统连接数是有限制的，一般来说能达到10万就很不错了，所以在用户量增长到一定程序，需要搭建分布式。分布式的搭建就要优化程序，因为长链接句柄分散到不同的机器，实现消息广播和分发是首先要解决的问题，笔者这里不深入阐述了，一来是没有足够的经验，二来是解决方案有太多的细节需要探讨。搭建分布式环境所面临的问题还有：怎样更好的弹性扩容、应对突发事件等。&lt;/section&gt;&lt;section&gt;我们上边将用户注册、添加好友等功能和聊天功能放到了一起，真实的业务场景中可以将它们做分离，将用户注册、添加好友、创建群组放到一台服务器上，将聊天功能放到另外的服务器上。业务的分离不仅使功能逻辑更加清晰，还能更有效的利用服务器资源。&lt;/section&gt;&lt;section&gt;我们的系统没有将消息持久化，用户信息持久化到mysql中去。在业务当中，如果要对消息做持久化储存，就要考虑数据库I/O的优化，简单讲：合并数据库的写次数、优化数据库的读操作、合理的利用缓存。&lt;/section&gt;&lt;section&gt;上边是就是笔者想到的一些代码优化和架构升级的方案。&lt;/section&gt;&lt;h2 data-id=&quot;heading-16&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/h2&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;1.2857142857142858&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YK9e7vHy9IQATwibKVicOpXZibX8VOvBrnF39NdpXQMwdpyIgN0ibicEwRdge0mXthxjHagHgwpWhrsibvMZFibaQC6vQ/640?wx_fmt=png&quot; data-w=&quot;14&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;6.结束语&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;1.2857142857142858&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/orc2J6rib40bATuJM23UiaHQ0tsVpvjgyuhk7To5zFqb2fyL9pCr1U7hfeKJELCht0KxWnuias6TLibMdcRhM7QhyQ/640?wx_fmt=png&quot; data-w=&quot;14&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;section&gt;不知道大家有没有发现，使用Go搭建一个IM系统比使用其他语言要简单很多，而且具备更好的拓展性和性能(并没有吹嘘Go的意思)。在当今这个时代，5G将要普及，流量不再昂贵，IM系统已经广泛渗入到了用户日常生活中。对于程序员来说，搭建一个IM系统不再是困难的事情, 如果读者根据本文的思路，理解Websocket，Copy代码，运行程序,应该用不了半天的时间就能上手这样一个IM系统。IM系统是一个时代，从QQ、微信到现在的人工智能，都广泛应用了即时通信，围绕即时通信，又可以做更多产品布局。笔者写本文的目的就是想要帮助更多人了解IM，帮助一些开发者快速的搭建一个应用，燃起大家学习网络编程知识的兴趣，希望的读者能有所收获，能将IM系统应用到更多的产品布局中。&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;js_blockquote_wrap&quot; data-type=&quot;2&quot; data-url=&quot;&quot; data-author-name=&quot;&quot; data-content-utf8-length=&quot;19&quot; data-source-title=&quot;&quot;&gt;&lt;section class=&quot;js_blockquote_digest&quot;&gt;&lt;section&gt;&lt;span&gt;回复“im0905“获取本文提到的代码&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;如喜欢本文，请点击右上角，把文章分享到朋友圈&lt;/span&gt;&lt;br/&gt;&lt;span&gt;如有想了解学习的技术点，请留言给若飞安排分享&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;因公众号更改推送规则，请点“在看”并加“星标”&lt;span&gt;第一时间获取精彩技术分享&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;·END·&lt;/strong&gt;&lt;/p&gt;&lt;pre&gt;&lt;p&gt;&lt;strong&gt;相关阅读：&lt;/strong&gt;&lt;/p&gt;&lt;hr/&gt;&lt;/pre&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-tools-id=&quot;23409&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;作者：绘你一世倾城&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;来源：juejin.cn/post/6844904050580783112&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;版权申明：&lt;/span&gt;&lt;span&gt;内容来源网络，仅供分享学习，版权归原创者所有。&lt;/span&gt;&lt;span&gt;除非无法确认，我们都会标明作者及出处，如有侵权烦请告知，我们会立即删除并表示歉意。&lt;/span&gt;&lt;span&gt;谢谢!&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;article ng-controller=&quot;EntryCtrl&quot; ui-lightbox=&quot;&quot;&gt;&lt;section ng-bind-html=&quot;postContentTrustedHtml&quot;&gt;&lt;section data-id=&quot;702&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;pre&gt;&lt;pre&gt;&lt;section data-recommend-type=&quot;list-normal&quot; data-recommend-tid=&quot;2&quot; data-mpa-template=&quot;t&quot; data-mid=&quot;&quot; data-from=&quot;yb-recommend&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-normal&quot; data-recomment-template-id=&quot;2&quot; data-recommend-article-id=&quot;2247501257_1&quot; data-recommend-article-time=&quot;1636251616&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/zc3KLDBfJlm8bD2WBlwbvnsktMdtfSudNaJWbHr1Iyr6HkwCxETHiaiceaWYLmq7tWmHV29U8Xv8UnoeCAOYNj9Q/0?wx_fmt=jpeg&amp;amp;amp;random=0.27521905775014543&quot; data-recommend-article-title=&quot;强势开源一款小程序！&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501257&amp;amp;idx=1&amp;amp;sn=7b4e27cdb1d3146a5e7e1951b5bdc9e8&amp;amp;chksm=c1ca33f9f6bdbaefd3874fa6313e422c8fb6b2799b40d09f36620f0ceaed4fd63c820da1f3ff#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501257&amp;amp;idx=1&amp;amp;sn=7b4e27cdb1d3146a5e7e1951b5bdc9e8&amp;amp;chksm=c1ca33f9f6bdbaefd3874fa6313e422c8fb6b2799b40d09f36620f0ceaed4fd63c820da1f3ff&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;&lt;section data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;强势开源一款小程序！&lt;/p&gt;&lt;p data-recommend-date=&quot;t&quot; data-mid=&quot;&quot;&gt;2021-11-07&lt;/p&gt;&lt;/section&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.42592592592592593&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/zc3KLDBfJlm8bD2WBlwbvnsktMdtfSudNaJWbHr1Iyr6HkwCxETHiaiceaWYLmq7tWmHV29U8Xv8UnoeCAOYNj9Q/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-normal&quot; data-recomment-template-id=&quot;2&quot; data-recommend-article-id=&quot;2247501242_1&quot; data-recommend-article-time=&quot;1634952613&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7UWibGeSzVdcKHzDRdVHusb9CJicA5FdhDVPAiaicdTbibx5XoRkhKA3O7Q727cTSurBkJpciczjLrF2wkA/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;强力推荐一个完善的物流（WMS）管理项目（附代码）&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501242&amp;amp;idx=1&amp;amp;sn=aa2297b69874de0993f62ea404376bab&amp;amp;chksm=c1ca338af6bdba9cf3e051ff3001e1f31f9fa97350f3851c797d6486eca360df537196dbe67b#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501242&amp;amp;idx=1&amp;amp;sn=aa2297b69874de0993f62ea404376bab&amp;amp;chksm=c1ca338af6bdba9cf3e051ff3001e1f31f9fa97350f3851c797d6486eca360df537196dbe67b&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;&lt;section data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;强力推荐一个完善的物流（WMS）管理项目（附代码）&lt;/p&gt;&lt;p data-recommend-date=&quot;t&quot; data-mid=&quot;&quot;&gt;2021-10-23&lt;/p&gt;&lt;/section&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.425&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7UWibGeSzVdcKHzDRdVHusb9CJicA5FdhDVPAiaicdTbibx5XoRkhKA3O7Q727cTSurBkJpciczjLrF2wkA/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-normal&quot; data-recomment-template-id=&quot;2&quot; data-recommend-article-id=&quot;2247501238_1&quot; data-recommend-article-time=&quot;1634606700&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7VduLA9tc9dQkaw5HWIV6pqNrOiciaE17jeIeTtoLfgLbyu67dWkRj3tjKX7AFIMrV0rKD5ic6kwicyxg/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;推荐一个 Spring Boot + MyBatis + Vue 音乐网站&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501238&amp;amp;idx=1&amp;amp;sn=d7e873d752a28b582d70bc9f7a981ddb&amp;amp;chksm=c1ca3386f6bdba9031ce115e734ce04c9b6728e8e027fbcf17d8d07f1e029ea5bea04f4a6273#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501238&amp;amp;idx=1&amp;amp;sn=d7e873d752a28b582d70bc9f7a981ddb&amp;amp;chksm=c1ca3386f6bdba9031ce115e734ce04c9b6728e8e027fbcf17d8d07f1e029ea5bea04f4a6273&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;&lt;section data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;推荐一个 Spring Boot + MyBatis + Vue 音乐网站&lt;/p&gt;&lt;p data-recommend-date=&quot;t&quot; data-mid=&quot;&quot;&gt;2021-10-19&lt;/p&gt;&lt;/section&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.42592592592592593&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7VduLA9tc9dQkaw5HWIV6pqNrOiciaE17jeIeTtoLfgLbyu67dWkRj3tjKX7AFIMrV0rKD5ic6kwicyxg/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-normal&quot; data-recomment-template-id=&quot;2&quot; data-recommend-article-id=&quot;2247501208_1&quot; data-recommend-article-time=&quot;1632101100&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7VibcP3PNgQvXGZ7UJkVeu0JZsrldvF1urHlmNwhUP89IeKHz1PfJ12es2ArTwkYibAh3Y0soOib2rjA/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;分享一套家庭理财系统（附源码）&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501208&amp;amp;idx=1&amp;amp;sn=44fcdfe2d7f81a26845faf33750ea9bb&amp;amp;chksm=c1ca33a8f6bdbabec8ff34719f438465adf745cbef30bfb92be53897c714d8c13bdd01989d17#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501208&amp;amp;idx=1&amp;amp;sn=44fcdfe2d7f81a26845faf33750ea9bb&amp;amp;chksm=c1ca33a8f6bdbabec8ff34719f438465adf745cbef30bfb92be53897c714d8c13bdd01989d17&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;&lt;section data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;分享一套家庭理财系统（附源码）&lt;/p&gt;&lt;p data-recommend-date=&quot;t&quot; data-mid=&quot;&quot;&gt;2021-09-20&lt;/p&gt;&lt;/section&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.42407407407407405&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7VibcP3PNgQvXGZ7UJkVeu0JZsrldvF1urHlmNwhUP89IeKHz1PfJ12es2ArTwkYibAh3Y0soOib2rjA/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-normal&quot; data-recomment-template-id=&quot;2&quot; data-recommend-article-id=&quot;2247501192_1&quot; data-recommend-article-time=&quot;1630718700&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7UG0pYPldneUCCVsPia3Rtr9j3hlFHakhItFlOXuwLicUqQvP1PhkTM28CUU9BpRCWfWPfHYredCBiaA/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;推荐一个互联网企业级别的开源支付系统&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501192&amp;amp;idx=1&amp;amp;sn=444404a565f02a8c532d291d99678a7b&amp;amp;chksm=c1ca33b8f6bdbaaeb7c65d9f6f0c399f609fb203f065b6e88a3ad5431473713dbb5ae3507b32#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501192&amp;amp;idx=1&amp;amp;sn=444404a565f02a8c532d291d99678a7b&amp;amp;chksm=c1ca33b8f6bdbaaeb7c65d9f6f0c399f609fb203f065b6e88a3ad5431473713dbb5ae3507b32&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;&lt;section data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;推荐一个互联网企业级别的开源支付系统&lt;/p&gt;&lt;p data-recommend-date=&quot;t&quot; data-mid=&quot;&quot;&gt;2021-09-04&lt;/p&gt;&lt;/section&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.425&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7UG0pYPldneUCCVsPia3Rtr9j3hlFHakhItFlOXuwLicUqQvP1PhkTM28CUU9BpRCWfWPfHYredCBiaA/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-normal&quot; data-recomment-template-id=&quot;2&quot; data-recommend-article-id=&quot;2247501176_1&quot; data-recommend-article-time=&quot;1629509100&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7VQRwetNLhDOB2Ej0fDZK4eRXsYlRNicgmsWwmuvlhibooic3N3su1lbMQPqWD186JiaOC5yJ9iaaic8bzw/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;推荐一套开源通用后台管理系统（附源码）&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501176&amp;amp;idx=1&amp;amp;sn=68e3ae7a9dc33fbbd379906ddcefdf5b&amp;amp;chksm=c1ca3348f6bdba5e1774625745f5ef40081c9b8eb0189073734b6808efb872720781d25b8dc0#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501176&amp;amp;idx=1&amp;amp;sn=68e3ae7a9dc33fbbd379906ddcefdf5b&amp;amp;chksm=c1ca3348f6bdba5e1774625745f5ef40081c9b8eb0189073734b6808efb872720781d25b8dc0&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;&lt;section data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;推荐一套开源通用后台管理系统（附源码）&lt;/p&gt;&lt;p data-recommend-date=&quot;t&quot; data-mid=&quot;&quot;&gt;2021-08-21&lt;/p&gt;&lt;/section&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4265625&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7VQRwetNLhDOB2Ej0fDZK4eRXsYlRNicgmsWwmuvlhibooic3N3su1lbMQPqWD186JiaOC5yJ9iaaic8bzw/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-normal&quot; data-recomment-template-id=&quot;2&quot; data-recommend-article-id=&quot;2247501153_1&quot; data-recommend-article-time=&quot;1627704022&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7UbyFoOMqOObokEYiahCar20LiaY8ZLGKzU7NYQQoGycgnhrmIzNJibPicGcNia3cbbXlYib6bcLJVV5aww/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;一款神仙接私活儿软件，吊到不行！&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501153&amp;amp;idx=1&amp;amp;sn=bb29cffa56431b72a92709c0ae993af7&amp;amp;chksm=c1ca3351f6bdba4729c671cdcd0ee8b6af75c6ce8a7003e6c032942b849aab5bfedecd0f9d3b#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501153&amp;amp;idx=1&amp;amp;sn=bb29cffa56431b72a92709c0ae993af7&amp;amp;chksm=c1ca3351f6bdba4729c671cdcd0ee8b6af75c6ce8a7003e6c032942b849aab5bfedecd0f9d3b&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;&lt;section data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;一款神仙接私活儿软件，吊到不行！&lt;/p&gt;&lt;p data-recommend-date=&quot;t&quot; data-mid=&quot;&quot;&gt;2021-07-31&lt;/p&gt;&lt;/section&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4265625&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7UbyFoOMqOObokEYiahCar20LiaY8ZLGKzU7NYQQoGycgnhrmIzNJibPicGcNia3cbbXlYib6bcLJVV5aww/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-normal&quot; data-recomment-template-id=&quot;2&quot; data-recommend-article-id=&quot;2247501139_1&quot; data-recommend-article-time=&quot;1626571500&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7VGxZrbRFy96Sm9cXQzVEhiaLibUUYhYH1SJL4HUXenau3DCeq0KEOsguY4CWjaEd1BeAicJd24qFM2w/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;基于 SpringBoot 的仿豆瓣平台【源码分享】&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501139&amp;amp;idx=1&amp;amp;sn=f133e70bda8abae27459ccc4d3d6d8fd&amp;amp;chksm=c1ca3363f6bdba75b9a4145510d9b6108c56146a3146b2e2e6d660a08221618b01c815d55642#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501139&amp;amp;idx=1&amp;amp;sn=f133e70bda8abae27459ccc4d3d6d8fd&amp;amp;chksm=c1ca3363f6bdba75b9a4145510d9b6108c56146a3146b2e2e6d660a08221618b01c815d55642&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;&lt;section data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;基于 SpringBoot 的仿豆瓣平台【源码分享】&lt;/p&gt;&lt;p data-recommend-date=&quot;t&quot; data-mid=&quot;&quot;&gt;2021-07-18&lt;/p&gt;&lt;/section&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.42427884615384615&quot; data-type=&quot;jpeg&quot; data-w=&quot;832&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7VGxZrbRFy96Sm9cXQzVEhiaLibUUYhYH1SJL4HUXenau3DCeq0KEOsguY4CWjaEd1BeAicJd24qFM2w/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-normal&quot; data-recomment-template-id=&quot;2&quot; data-recommend-article-id=&quot;2247501105_1&quot; data-recommend-article-time=&quot;1623979500&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7Xw68Ow8vZian4lanQFAu09f4JOZlXbC85jsByb8V6StkOpibAdgPamPWoPPY3G7S3nic50QvxxuGNrg/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;干掉 Wordpress！这个开源建站神器有点吊！&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501105&amp;amp;idx=1&amp;amp;sn=caf01186b6d2e4a38e940ce07d822238&amp;amp;chksm=c1ca3301f6bdba17ba7127da24e28963ae40f944e587f14b57405e2a9ee9d8cdbcb835c880c8#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501105&amp;amp;idx=1&amp;amp;sn=caf01186b6d2e4a38e940ce07d822238&amp;amp;chksm=c1ca3301f6bdba17ba7127da24e28963ae40f944e587f14b57405e2a9ee9d8cdbcb835c880c8&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;&lt;section data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;干掉 Wordpress！这个开源建站神器有点吊！&lt;/p&gt;&lt;p data-recommend-date=&quot;t&quot; data-mid=&quot;&quot;&gt;2021-06-18&lt;/p&gt;&lt;/section&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.42578125&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7Xw68Ow8vZian4lanQFAu09f4JOZlXbC85jsByb8V6StkOpibAdgPamPWoPPY3G7S3nic50QvxxuGNrg/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-normal&quot; data-recomment-template-id=&quot;2&quot; data-recommend-article-id=&quot;2247501098_2&quot; data-recommend-article-time=&quot;1623461160&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7VzIP6xibP6U8htKa7YEad1iaTE02ZbsOfvDX1D8LoTiaNsMVgdjFOdm5LahpnNXFe3ibSp8S4FJ39KkA/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;从朋友那里搞了 20 个实战项目，速领！&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501098&amp;amp;idx=2&amp;amp;sn=520b81839bb5b4f1c990278e03e1991d&amp;amp;chksm=c1ca331af6bdba0c0e3435da519fadda3be81744168e30c56a823180bd458a5ec8a6b499f2a4#rd&quot;&gt;&lt;section data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501098&amp;amp;idx=2&amp;amp;sn=520b81839bb5b4f1c990278e03e1991d&amp;amp;chksm=c1ca331af6bdba0c0e3435da519fadda3be81744168e30c56a823180bd458a5ec8a6b499f2a4&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot;&gt;从朋友那里搞了 20 个实战项目，速领！&lt;/a&gt;&lt;/p&gt;&lt;p data-recommend-date=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501098&amp;amp;idx=2&amp;amp;sn=520b81839bb5b4f1c990278e03e1991d&amp;amp;chksm=c1ca331af6bdba0c0e3435da519fadda3be81744168e30c56a823180bd458a5ec8a6b499f2a4&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot;&gt;2021-06-12&lt;/a&gt;&lt;/p&gt;&lt;/section&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501098&amp;amp;idx=2&amp;amp;sn=520b81839bb5b4f1c990278e03e1991d&amp;amp;chksm=c1ca331af6bdba0c0e3435da519fadda3be81744168e30c56a823180bd458a5ec8a6b499f2a4&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-type=&quot;jpeg&quot; data-w=&quot;200&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7VzIP6xibP6U8htKa7YEad1iaTE02ZbsOfvDX1D8LoTiaNsMVgdjFOdm5LahpnNXFe3ibSp8S4FJ39KkA/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4703703703703704&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Baq5lYpIw7X6YPYGQITyP8Zdk96ab7CX0Ind5E05VokoepTP9Adic0xRwiaQrAvfTeC7iafngRibhBShpVqibqNcCCA/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如有收获，点个在看，诚挚感谢&lt;/span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-fileid=&quot;100018364&quot; data-ratio=&quot;1&quot; data-type=&quot;png&quot; data-w=&quot;19&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/fEsWkVrSk54JM0xl7WLNGnqqwbcXQBWIOCMuOgPHRoOjMamXzrCqMS2xgOo5ibic9icPk7u3zsVgic3s1ZUYJ4xHXg/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/p&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/article&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/div&gt;

          

          
          &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>5e709a4ef0165298e4c7fe0d195f20c2</guid>
<title>重写或替换jar中的类或方法两种方式</title>
<link>https://toutiao.io/k/wuhbt9l</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                                       &quot; id=&quot;js_content&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;ignored&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;p&gt;&lt;span&gt;点击上方“&lt;/span&gt;&lt;span&gt;&lt;span&gt;Java基基&lt;/span&gt;&lt;/span&gt;&lt;span&gt;”，选择“设为星标”&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;做积极的人，而不是积极废人！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;每天 &lt;/span&gt;&lt;span&gt;&lt;strong&gt;14:00&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; 更新文章，每天掉亿点点头发...&lt;/span&gt;&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section data-mpa-template-id=&quot;692363&quot; data-mpa-category=&quot;fav&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;&lt;p&gt;源码精品专栏&lt;/p&gt;&lt;/span&gt; &lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;来源：网络&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;来源：网络&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在某些特殊场景下，我们需要修改 jar 包中的某些类和方法。jar 我们没有修改权限，那么怎么重写里面的类和方法呢？本文教你两种常用的方法，分享给大家，不喜勿喷！&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;基于 Spring Boot + MyBatis Plus + Vue &amp;amp; Element 实现的后台管理系统 + 用户小程序，支持 RBAC 动态权限、多租户、数据权限、工作流、三方登录、支付、短信、商城等功能&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;项目地址：https://gitee.com/zhijiantianya/ruoyi-vue-pro&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;视频教程：https://doc.iocoder.cn/video/&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;重写步骤：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;找到你所要重写的方法的所在类，查看其中的路径；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;在我们的 src 目录下新建一个同包名同类名的类；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;将 jar 包中的重写方法所在类的所有代码复制到我们新建的同包名同类名的类中；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;在我们新建的同包名同类名的类中修改对应的方法中的代码，注意要保持方法中的参数不要发生改变，也不要删除原类中已有的方法，但是可以新增一些方法。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;原理：&lt;code&gt;编译输出的时候会优先使用我们 src 下面的类，而不是优先使用 Jar 包里面的类，这样就达到了覆盖 jar 包方法的目的&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在不影响项目目录结构的情况下可以使用这种方式：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;参考上面第一种方法的步骤 1-4，操作相同。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;将同包名同类名的类重写好，将&lt;code&gt;.java&lt;/code&gt;文件编译成&lt;code&gt;.class&lt;/code&gt;文件。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;桌面新建一个文件夹，将编译好的&lt;code&gt;.class&lt;/code&gt;文件存进去。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;打开 jar 包所在的文件目录&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.2596153846153846&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/6mychickmupXU5RjSEXQohnQfjrkN5UntGIkUd3OxLgl18kKD5HJxy1wLCG8xd1anyGXqJfruXK7AICE3gIt3vA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;624&quot;/&gt;&lt;/span&gt;&lt;/a&gt;5. 使用压缩软件预览 jar 包中的 class 文件&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「压缩软件我用的Bandzip」&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4111111111111111&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/6mychickmupXU5RjSEXQohnQfjrkN5UntzIvZBEO9wJSthGBX56bTWuMsstTezHdSpIv8YQDBOMicehQlF0mpjXg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot;/&gt;&lt;/span&gt;&lt;/a&gt;6. 将 jar 包中需要替换的类删除(jar中的原文件)，把自己编译好的&lt;code&gt;.class&lt;/code&gt;文件复制进去。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6606606606606606&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/6mychickmupXU5RjSEXQohnQfjrkN5UntnNjqPaUI2jNMkibEficQv8W35dichqeYiaRbju7GZ1KTO3Eib5bEBBBia2bA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;999&quot;/&gt;&lt;/span&gt;&lt;/a&gt;class文件添加到压缩文件&lt;/p&gt;&lt;ol start=&quot;7&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;替换&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4925925925925926&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/6mychickmupXU5RjSEXQohnQfjrkN5Unt02hYtasDJvdiaaGzPNGAwHEKUF3Hudt8ictiaoJxSgF5hiar9Zoz4SmcKg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot;/&gt;&lt;/span&gt;&lt;/a&gt;8. 删除在我们的 src 目录下新建的包、类。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;基于 Spring Cloud Alibaba + Gateway + Nacos + RocketMQ + Vue &amp;amp; Element 实现的后台管理系统 + 用户小程序，支持 RBAC 动态权限、多租户、数据权限、工作流、三方登录、支付、短信、商城等功能&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;项目地址：https://gitee.com/zhijiantianya/yudao-cloud&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;视频教程：https://doc.iocoder.cn/video/&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;两种方式各有优缺点，方案一，实现起来简单，但是会在你的项目下，多出一个第三方的包路径。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如，我现在的项目包路径是：&lt;code&gt;com.xttblog.nacos&lt;/code&gt;，我现在需要重写一个 apache 包中的某个类中的代码，我的项目下就需要新建一个包和类：&lt;code&gt;org.apache.tomcat.utils.HelloUtil&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;方案二，其实就是把方案一种产生的 class 文件复制出来，然后把原来的 jar 包中相同的 class 文件给替换掉，然后重新压缩成一个新的 jar 文件。方案二会造成，多数人可能不知道这是一个&quot;野包&quot;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一般遇到这种情况，最好是从上游解决。比如，如果是内部系统，就要求相关团队提供新的jar；如果是开源项目，可以提交新的 pr，也可以自己拉取分支，自己公司单独维护。其他不知名的野包尽量不建议使用。&lt;/p&gt;&lt;/section&gt;&lt;hr/&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;ignored&quot;&gt;&lt;hr/&gt;&lt;p&gt;&lt;span&gt;欢迎加入我的知识星球，一起探讨架构，交流源码。&lt;/span&gt;&lt;span&gt;加入方式，&lt;/span&gt;&lt;strong&gt;&lt;span&gt;长按下方二维码噢&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;ignored&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5493333333333333&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/6mychickmupWvCPbtnO1ap7Octib250ghicPloeaiakSGrRLuGAdvNpA7oHpJV74U7ZQsiaLiaP9Wrxgc68F7dteNIIQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;750&quot;/&gt;&lt;/p&gt;&lt;p&gt;已在知识星球更新源码解析如下：&lt;/p&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;chksm=fa496f8ecd3ee698f4954c00efb80fe955ec9198fff3ef4011e331aa37f55a6a17bc8c0335a8&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot; hasload=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.0718475073313782&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdLkEI9sZfdCa89KZ4Ls04tTqXvgxWVian1HZ76BOz52l4pkqX0IMicM14rRFyiaO0vQENMOufUhDVVtPiadDdoKjQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1364&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;chksm=fa496f8ecd3ee698f4954c00efb80fe955ec9198fff3ef4011e331aa37f55a6a17bc8c0335a8&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot; hasload=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.0319767441860466&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdLkEI9sZfdCa89KZ4Ls04tTqXvgxWViaExAeJx1CZeSaJ9qxh0X70s4JGjIVVlT5ZqBGu51YTedMNfO49DKb6g/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1376&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;chksm=fa496f8ecd3ee698f4954c00efb80fe955ec9198fff3ef4011e331aa37f55a6a17bc8c0335a8&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot; hasload=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7209985315712188&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdLkEI9sZfdCa89KZ4Ls04tTqXvgxWViaCibrYIXNgebWPd5g7Or9dcToN660aLAEJEhz4wLpBBiaFhejsaGDGd2g/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1362&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;ignored&quot;&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;ignored&quot;&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;chksm=fa496f8ecd3ee698f4954c00efb80fe955ec9198fff3ef4011e331aa37f55a6a17bc8c0335a8&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot; hasload=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.42543859649122806&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdLkEI9sZfdCa89KZ4Ls04tTqXvgxWVia4qmv743xvlia1HYmqCDPBLpo3HXtw8Hmo76GkGK5wCqvicAKxd9ET3ow/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1368&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;最近更新《芋道 SpringBoot 2.X 入门》系列&lt;/span&gt;&lt;span&gt;，已经 101 余篇，覆盖了 &lt;/span&gt;&lt;span&gt;MyBatis、Redis、MongoDB、ES、分库分表、读写分离、SpringMVC、Webflux、权限、WebSocket、Dubbo、RabbitMQ、RocketMQ、Kafka、性能测试等等内容。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;提供近 3W 行&lt;span&gt;代码&lt;/span&gt;的 SpringBoot 示例，以及超 6W 行代码的电商微服务项目。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;获取方式：点“&lt;/span&gt;&lt;span&gt;&lt;strong&gt;在看&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;”，关注公众号并回复 &lt;/span&gt;&lt;span&gt;&lt;strong&gt;666&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; 领取，更多内容陆续奉上。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;pre data-darkmode-bgcolor-15923650965579=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15923650965579=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15923650965579=&quot;rgb(167, 167, 167)&quot; data-darkmode-original-color-15923650965579=&quot;rgb(63, 63, 63)&quot; data-style=&quot;letter-spacing: 0.544px; font-size: 16px; color: rgb(63, 63, 63); word-spacing: 1px; line-height: inherit;&quot; class=&quot;js_darkmode__91&quot;&gt;&lt;p data-style=&quot;margin-right: 0.5em; margin-left: 0.5em; font-family: 微软雅黑; white-space: normal; color: rgb(0, 0, 0); letter-spacing: 0px; word-spacing: 2px; text-align: right;&quot; class=&quot;js_darkmode__100&quot; data-darkmode-bgcolor-15923650965579=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15923650965579=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15923650965579=&quot;rgb(230, 230, 230)&quot; data-darkmode-original-color-15923650965579=&quot;rgb(0, 0, 0)&quot;&gt;&lt;span data-darkmode-bgcolor-15923650965579=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15923650965579=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15923650965579=&quot;rgb(255, 41, 65)&quot; data-darkmode-original-color-15923650965579=&quot;rgb(255, 41, 65)&quot;&gt;&lt;strong data-darkmode-bgcolor-15923650965579=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15923650965579=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15923650965579=&quot;rgb(255, 41, 65)&quot; data-darkmode-original-color-15923650965579=&quot;rgb(255, 41, 65)&quot;&gt;文章有帮助的话，在看，转发吧。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-style=&quot;margin-right: 0.5em; margin-left: 0.5em; font-family: 微软雅黑; white-space: normal; color: rgb(0, 0, 0); letter-spacing: 0px; word-spacing: 2px; text-align: right;&quot; class=&quot;js_darkmode__101&quot; data-darkmode-bgcolor-15923650965579=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15923650965579=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15923650965579=&quot;rgb(230, 230, 230)&quot; data-darkmode-original-color-15923650965579=&quot;rgb(0, 0, 0)&quot;&gt;&lt;span data-darkmode-bgcolor-15923650965579=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15923650965579=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15923650965579=&quot;rgb(255, 41, 65)&quot; data-darkmode-original-color-15923650965579=&quot;rgb(255, 41, 65)&quot;&gt;&lt;strong data-darkmode-bgcolor-15923650965579=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15923650965579=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15923650965579=&quot;rgb(255, 41, 65)&quot; data-darkmode-original-color-15923650965579=&quot;rgb(255, 41, 65)&quot;&gt;谢谢支持哟 (*^__^*）&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/div&gt;

          

          
          &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>