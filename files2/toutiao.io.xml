<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>b65acbac354cd57f38fa3af36d8110b6</guid>
<title>【Redis技术探索】「底层架构原理」帮你从底层彻底吃透RDB技术原理（入门第一步）_洛神灬殇的博客-CSDN博客</title>
<link>https://toutiao.io/k/2bcv6ot</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div id=&quot;content_views&quot; class=&quot;markdown_views prism-tomorrow-night&quot;&gt;
                    &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;
                        &lt;path stroke-linecap=&quot;round&quot; d=&quot;M5,0 0,2.5 5,5z&quot; id=&quot;raphael-marker-block&quot;/&gt;
                    &lt;/svg&gt;
                    &lt;h3&gt;&lt;a id=&quot;_0&quot;/&gt;每日一句&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;低头是一种能力，它不是自卑，也不是怯弱，它是清醒中的嬗变。有时，稍微低一下头，或者我们的人生路会更精彩。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;&lt;a id=&quot;_4&quot;/&gt;前提概要&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Redis是一个的键-值（K-V）对的内存数据库服务，通常包含了任意个非空数据库。而每个非空的键值数据库中又可以存放任意个K-V，基本的结构如下图所示：&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/img_convert/4453aaa66c2960fe161b043a8c89e076.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt; 
 
&lt;h4&gt;&lt;a id=&quot;Redis_14&quot;/&gt;Redis服务器的结构&lt;/h4&gt; 
 
&lt;h3&gt;&lt;a id=&quot;RDB_22&quot;/&gt;RDB持久化方式&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;RDB持久化是指在指定的时间间隔内将redis内存中的数据集快照写入磁盘，实现原理是redis服务在指定的时间间隔内先fork一个子进程，由子进程将数据集写入临时文件，写入成功后，再替换之前的文件，用二进制压缩存储，生成dump.rdb文件存放在磁盘中。&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/img_convert/dbd10c2f8f2bdc98e7371315cd4bd4ce.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;a id=&quot;RDB_28&quot;/&gt;RDB机制&lt;/h3&gt; 
 
&lt;h3&gt;&lt;a id=&quot;RDB_35&quot;/&gt;RDB优势&lt;/h3&gt; 
&lt;ul&gt;&lt;li&gt; &lt;p&gt;&lt;strong&gt;一旦采用该方式，那么你的整个Redis数据库将只包含一个文件，这对于文件备份而言是非常完美的。比如，你可能打算每个小时归档一次最近24小时的数据，同时还要每天归档一次最近30天的数据。通过这样的备份策略，一旦系统出现灾难性故障，我们可以非常容易的进行恢复。&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;&lt;strong&gt;对于灾难恢复而言，RDB是非常不错的选择。因为我们可以非常轻松的将一个单独的文件压缩后再转移到其它存储介质上。&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;&lt;strong&gt;性能最大化。对于Redis的服务进程而言，在开始持久化时，它唯一需要做的只是fork出子进程，之后再由子进程完成这些持久化的工作，这样就可以极大的避免服务进程执行IO操作了。&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;&lt;strong&gt;相比于AOF机制，如果数据集很大，RDB的启动效率会更高。&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt;&lt;/ul&gt; 
&lt;h3&gt;&lt;a id=&quot;RDB_45&quot;/&gt;RDB劣势&lt;/h3&gt; 
 
&lt;h3&gt;&lt;a id=&quot;RDB_51&quot;/&gt;RDB配置规则&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;在redis的6379.conf配置文件中：&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;&lt;a id=&quot;_55&quot;/&gt;备份配置参数&lt;/h4&gt; 
&lt;pre&gt;&lt;code&gt;save &amp;lt;seconds&amp;gt; &amp;lt;changes&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;save &amp;lt;指定时间间隔&amp;gt; &amp;lt;执行指定次数更新操作&amp;gt;，满足条件就将内存中的数据同步到硬盘中。官方出厂配置默认是 900秒内有1个更改，300秒内有10个更改以及60秒内有10000个更改，则将内存中的数据快照写入磁盘。&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code&gt;save 900 1      #在900秒（15分钟）之后，如果至少有一个key发生变化，则dump内存快照
save 300 10     #在300秒（15分钟）之后，如果至少有10个key发生变化，则dump内存快照
save 60 10000   #在60秒（1分钟）之后，如果至少有10000个key发生变化，则dump内存快照
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;a id=&quot;_69&quot;/&gt;文件配置参数&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;默认的rdb文件路径是当前目录,文件名是dump.rdb,可以在配置文件中修改路径和文件名,分别是dir和dbfilename.&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code&gt;# 存放快照的目录
dir ./ # rdb文件存储路径
dbfilename dump.rdb # rdb文件名
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;a id=&quot;_79&quot;/&gt;压缩配置参数&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;在进行镜像备份时,是否进行压缩。&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code&gt;rdbcompression yes  #Redis默认是开启压缩的。
# yes：压缩，但是需要一些cpu的消耗。
# no：不压缩，需要更多的磁盘空间。
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;如果没有触发自动快照,需要对Redis执行手动快照操作,save和bgsave命令来手动快照,两个命令是：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt;&lt;li&gt;SAVE：由主进程进行快照，会阻塞其他请求。&lt;/li&gt;&lt;li&gt;BGSAVE：通过fork子进程进行快照，不会阻塞其他请求。&lt;/li&gt;&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;注意:由于Redis使用fork来复制一份当前进程,那么子进程就会占有和主进程一样的内存资源,比如说主进程8G内存,那么在备份的时候,必须保证有16G的内存,要不然会启用虚拟内存,性能非常的差。&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;&lt;a id=&quot;_96&quot;/&gt;快照的过程如下：&lt;/h4&gt; 
&lt;ol&gt;&lt;li&gt;Redis使用fork函数复制一份当前进程（父进程）的副本（子进程）；&lt;/li&gt;&lt;li&gt;父进程继续接收并处理客户端发来的命令，而子进程开始将内存中的数据写入硬盘中的临时文件；&lt;/li&gt;&lt;li&gt;当子进程写入完所有数据后会用该临时文件替换旧的RDB文件，至此一次快照操作完成。（注意：会存在写一部命令压缩缓存区，记录写入rdb文件时候的操作）&lt;/li&gt;&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;在执行fork的时候操作系统会使用写时复制（copy-on-write）策略，即fork函数发生的一刻父子进程共享同一内存数据，当父进程要更改其中某片数据时（如执行一个写命令），操作系统会将该片数据复制一份以保证子进程的数据不受影响，所以新的RDB文件存储的是执行fork时那一刻的内存快照数据。&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;通过上述过程可以发现Redis在进行快照的过程中不会修改RDB文件，只有快照结束后才会将旧的文件替换成新的，也就是说任何时候RDB文件都是完整的。这使得可以通过定时备份RDB文件来实现Redis数据库备份。&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h5&gt;&lt;a id=&quot;_106&quot;/&gt;快照的过程压缩分析：&lt;/h5&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;RDB文件是经过压缩（上文介绍了：可以配置rdbcompression参数以禁用压缩节省CPU占用）的二进制格式，所以占用的空间会小于内存中的数据大小，更加利于传输。&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h5&gt;&lt;a id=&quot;_110&quot;/&gt;快照的读取加载过程：&lt;/h5&gt; 
&lt;ul&gt;&lt;li&gt; &lt;p&gt;&lt;strong&gt;Redis启动后会读取RDB快照文件，将数据从硬盘载入到内存。根据数据量大小与结构和服务器性能不同，这个时间也不同。通常将一个记录一千万个字符串类型键、大小为1GB的快照文件载入到内存中需要花费20～30秒钟&lt;/strong&gt;。&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;&lt;strong&gt;通过RDB方式实现持久化，一旦Redis异常退出，就会丢失最后一次快照以后更改的所有数据。这就需要开发者根据具体的应用场合，通过组合设置自动快照条件的方式来将可能发生的数据损失控制在能够接受的范围。如果数据很重要以至于无法承受任何损失，则可以考虑使用AOF方式进行持久化。&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt;&lt;/ul&gt; 
&lt;h3&gt;&lt;a id=&quot;RDB__116&quot;/&gt;RDB 的优缺点&lt;/h3&gt; 
&lt;h3&gt;&lt;a id=&quot;_118&quot;/&gt;优点：&lt;/h3&gt; 
&lt;ol&gt;&lt;li&gt;适合大规模的数据恢复。&lt;/li&gt;&lt;li&gt;如果业务对数据完整性和一致性要求不高，RDB是很好的选择。&lt;/li&gt;&lt;/ol&gt; 
&lt;h3&gt;&lt;a id=&quot;_122&quot;/&gt;缺点：&lt;/h3&gt; 
&lt;ol&gt;&lt;li&gt;数据的完整性和一致性不高，因为RDB可能在最后一次备份时宕机了。&lt;/li&gt;&lt;li&gt;备份时占用内存，因为Redis 在备份时会独立创建一个子进程，将数据写入到一个临时文件（此时内存中的数据是原来的两倍），最后再将临时文件替换之前的备份文件。&lt;/li&gt;&lt;li&gt;由于RDB是通过fork子进程来协助完成数据持久化工作的，因此，如果当数据集较大时，可能会导致整个服务器停止服务几百毫秒，甚至是1秒钟。(回写和覆盖的时候用的是主进程)。&lt;/li&gt;&lt;/ol&gt; 
&lt;h4&gt;&lt;a id=&quot;RDBAOFAOF_128&quot;/&gt;RDB与AOF二者选择的标准（虽然还没有讲AOF，提前普及）&lt;/h4&gt; 
 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Redis允许同时开启AOF和RDB，既保证了数据安全又使得进行备份等操作十分容易。此时重新启动Redis后Redis会使用AOF文件来恢复数据，因为AOF方式的持久化可能丢失的数据更少。&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;&lt;a id=&quot;_137&quot;/&gt;总结&lt;/h3&gt; 
&lt;ul&gt;&lt;li&gt; &lt;p&gt;Redis 默认开启RDB持久化方式，在指定的时间间隔内，执行指定次数的写操作，则将内存中的数据写入到磁盘中。&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;RDB 持久化适合大规模的数据恢复但它的数据一致性和完整性较差。&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;Redis 需要手动开启AOF持久化方式，默认是每秒将写操作日志追加到AOF文件中。&lt;/p&gt; &lt;/li&gt;&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;所以Redis的持久化和数据的恢复要选择在夜深人静的时候执行是比较合理的。&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt;
                &lt;/div&gt;
                
                
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>c74333899187529141492fccd5d4eb64</guid>
<title>搞定 Redis 数据存储原理，别只会 set、get 了</title>
<link>https://toutiao.io/k/rh0r0wu</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在上一篇&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzkzMDI1NjcyOQ==&amp;amp;mid=2247501663&amp;amp;idx=1&amp;amp;sn=89df690ebcb8badbbd9b64007fe791d1&amp;amp;chksm=c27f8569f5080c7f2c0ba4cc87fb22e8a141cfaec172998c1728ea8a8a976544b2e4030bf218&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;通过源码编译构建出可调式环境&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;通过源码编译构建出可调式环境&lt;/a&gt;之后，想必你想更深入了解我的整体架构。当你熟悉我的整体架构和每个模块，遇到问题才能直击本源，直捣黄龙，一笑破苍穹。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我的核心模块如图 1-10。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5844471445929527&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EoJib2tNvVtepppozb2rlRS7xTEiaEnA4qhLX8VgvPMZFcUiaxIArKdQ7AdEv18iaEjcIbtZG03M68KgPLicuJfghCQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;823&quot;/&gt;&lt;figcaption&gt;图1-10&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;图 1-10&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;Client 客户端，官方提供了 C 语言开发的客户端，可以发送命令，性能分析和测试等。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;网络层事件驱动模型，基于 I/O 多路复用，封装了一个短小精悍的高性能 ae 库，全称是 &lt;code&gt;a simple event-driven programming library&lt;/code&gt;。&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;在 ae 这个库里面，我通过 &lt;code&gt;aeApiState&lt;/code&gt; 结构体对 &lt;code&gt;epoll、select、kqueue、evport&lt;/code&gt;四种 I/O 多路复用的实现进行适配，让上层调用方感知不到在不同操作系统实现 I/O 多路复用的差异。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Redis 中的事件可以分两大类：一类是网络连接、读、写事件；另一类是时间事件，也就是特定时间触发的事件，比如定时执行 rehash 操作。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;section&gt;命令解析和执行层，负责执行客户端的各种命令，比如 &lt;code&gt;SET、DEL、GET&lt;/code&gt;等。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;内存分配和回收，为数据分配内存，提供不同的数据结构保存数据。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;持久化层，提供了 RDB 内存快照文件 和 AOF 两种持久化策略，实现数据可靠性。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;高可用模块，提供了副本、哨兵、集群实现高可用。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;监控与统计，提供了一些监控工具和性能分析工具，比如监控内存使用、基准测试、内存碎片、bigkey 统计、慢指令查询等。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;掌握了整体架构和模块后，接下来进入 src 源码目录，使用如下指令执行 &lt;code&gt;redis-server&lt;/code&gt;可执行程序启动 Redis。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;./redis-server ../redis.conf&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;每个被启动的服务我都会抽象成一个 redisServer，源码定在&lt;code&gt;server.h&lt;/code&gt; 的&lt;code&gt;redisServer&lt;/code&gt; 结构体。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个结构体包含了存储键值对的数据库实例、redis.conf 文件路径、命令列表、加载的 Modules、网络监听、客户端列表、RDB AOF 加载信息、配置信息、RDB 持久化、主从复制、客户端缓存、数据结构压缩、pub/sub、Cluster、哨兵等一些列 Redis 实例运行的必要信息。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结构体字段很多，不再一一列举，部分核心字段如下。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;truct redisServer {&lt;br/&gt;    &lt;span&gt;pid_t&lt;/span&gt; pid;  &lt;span&gt;/* 主进程 pid. */&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;pthread_t&lt;/span&gt; main_thread_id; &lt;span&gt;/* 主线程 id */&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;char&lt;/span&gt; *configfile;  &lt;span&gt;/*redis.conf 文件绝对路径*/&lt;/span&gt;&lt;br/&gt;    redisDb *db; &lt;span&gt;/* 存储键值对数据的 redisDb 实例 */&lt;/span&gt;&lt;br/&gt;   &lt;span&gt;int&lt;/span&gt; dbnum;  &lt;span&gt;/* DB 个数 */&lt;/span&gt;&lt;br/&gt;    dict *commands; &lt;span&gt;/* 当前实例能处理的命令表，key 是命令名，value 是执行命令的入口 */&lt;/span&gt;&lt;br/&gt;    aeEventLoop *el;&lt;span&gt;/* 事件循环处理 */&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;int&lt;/span&gt; sentinel_mode;  &lt;span&gt;/* true 则表示作为哨兵实例启动 */&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;   &lt;span&gt;/* 网络相关 */&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;int&lt;/span&gt; port;&lt;span&gt;/* TCP 监听端口 */&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;list&lt;/span&gt; *clients; &lt;span&gt;/* 连接当前实例的客户端列表 */&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;list&lt;/span&gt; *clients_to_close; &lt;span&gt;/* 待关闭的客户端列表 */&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;    client *current_client; &lt;span&gt;/* 当前执行命令的客户端*/&lt;/span&gt;&lt;br/&gt;};&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;1.2.1 数据存储原理&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其中&lt;code&gt;redisDb *db&lt;/code&gt;指针非常重要，它指向了一个长度为 dbnum（默认 16）的 redisDb 数组，它是整个存储的核心，我就是用这玩意来存储键值对。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;redisDb&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;redisDb 结构体定义如下。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;typedef&lt;/span&gt; &lt;span&gt;&lt;span&gt;struct&lt;/span&gt; &lt;span&gt;redisDb&lt;/span&gt; {&lt;/span&gt;&lt;br/&gt;    dict *dict; &lt;br/&gt;    dict *expires; &lt;br/&gt;    dict *blocking_keys;&lt;br/&gt;    dict *ready_keys;&lt;br/&gt;    dict *watched_keys; &lt;br/&gt;    &lt;span&gt;int&lt;/span&gt; id;          &lt;br/&gt;    &lt;span&gt;long&lt;/span&gt; &lt;span&gt;long&lt;/span&gt; avg_ttl; &lt;br/&gt;    &lt;span&gt;unsigned&lt;/span&gt; &lt;span&gt;long&lt;/span&gt; expires_cursor;&lt;br/&gt;    &lt;span&gt;list&lt;/span&gt; *defrag_later; &lt;br/&gt;    clusterSlotToKeyMapping *slots_to_keys;&lt;br/&gt;} redisDb;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;dict 和 expires&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;dict 和 expires 是最重要的两个属性，底层数据结构是字典，分别用于存储键值对数据和 key 的过期时间。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;expires，底层数据结构是 dict 字典，存储每个 key 的过期时间。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;p&gt;MySQL：“为什么分开存储？”&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;好问题，之所以分开存储，是因为过期时间并不是每个 key 都会设置，它不是键值对的固有属性，分开后虽然需要两次查找，但是能节省内存开销。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;blocking_keys 和 ready_keys&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;底层数据结构是 dict 字典，主要是用于实现 BLPOP 等阻塞命令。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当客户端使用 BLPOP 命令阻塞等待取出列表元素的时候，我会把 key 写到 blocking_keys 中，value 是被阻塞的客户端。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当下一次收到 PUSH 命令执时，我会先检查 blocking_keys 中是否存在阻塞等待的 key，如果存在就把 key 放到 ready_keys 中，在下一次 Redis 事件处理过程中，会遍历 ready_keys 数据，并从 blocking_keys 中取出阻塞的客户端响应。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;watched_keys&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用于实现 watch 命令，存储 watch 命令的 key。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;id&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Redis 数据库的唯一 ID，一个 Redis 服务支持多个数据库，默认 16 个。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;avg_ttl&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用于统计平均过期时间。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;expires_cursor&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;统计过期事件循环执行的次数。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;defrag_later&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;保存逐一进行碎片整理的 key 列表。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;slots_to_keys&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;仅用于 Cluster 模式，当使用 Cluster 模式的时候，只能有一个数据库 db 0。slots_to_keys 用于记录 cluster 模式下，存储 key 与哈希槽映射关系的数组。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;dict&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;Redis 使用 dict 结构来保存所有的键值对（key-value）数据，这是一个散列表，所以 key 查询时间复杂度是 O(1) 。&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所谓散列表，我们可以类比 Java 中的 &lt;code&gt;HashMap&lt;/code&gt;，其实就是一个数组，数组的每个元素叫做哈希桶。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;dict 结构体源码在 &lt;code&gt;dict.h&lt;/code&gt; 中定义。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;struct&lt;/span&gt; &lt;span&gt;dict&lt;/span&gt; {&lt;/span&gt;&lt;br/&gt;    dictType *type;&lt;br/&gt;&lt;br/&gt;    dictEntry **ht_table[&lt;span&gt;2&lt;/span&gt;];&lt;br/&gt;    &lt;span&gt;unsigned&lt;/span&gt; &lt;span&gt;long&lt;/span&gt; ht_used[&lt;span&gt;2&lt;/span&gt;];&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;long&lt;/span&gt; rehashidx;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;int16_t&lt;/span&gt; pauserehash;&lt;br/&gt;    &lt;span&gt;signed&lt;/span&gt; &lt;span&gt;char&lt;/span&gt; ht_size_exp[&lt;span&gt;2&lt;/span&gt;];&lt;br/&gt;};&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;dict 的结构体里，有 &lt;code&gt;dictType *type&lt;/code&gt;，&lt;code&gt;**ht_table[2]&lt;/code&gt;，&lt;code&gt;long rehashidx&lt;/code&gt; 三个很重要的结构。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;type 存储了 hash 函数，key 和 value 的复制等函数；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;ht_table[2]，长度为 2 的数组，默认使用 ht_table[0] 存储键值对数据。我会使用 ht_table[1] 来配合实现渐进式 reahsh 操作。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;rehashidx 是一个整数值，用于标记是否正在执行 rehash 操作，-1 表示没有进行 rehash。如果正在执行 rehash，那么其值表示当前 rehash 操作执行的 ht_table[1] 中的 dictEntry 数组的索引。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;pauserehash 表示 rehash 的状态，大于 0 时表示 rehash 暂停了，小于 0 表示出错了。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;ht_used[2]，长度为 2 的数组，表示每个哈希桶存储了多少个 键值对实体（dictEntry），值越大，哈希冲突的概率越高。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;ht_size_exp[2]，每个散列表的大小，也就是哈希桶个数。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;重点关注 ht_table 数组，数组每个位置叫做哈希桶，就是这玩意保存了所有键值对，每个哈希桶的类型是 dictEntry。&lt;/strong&gt;&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;p&gt;MySQL：“Redis 支持那么多的数据类型，哈希桶咋保存？”&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;他的玄机就在 dictEntry 中，每个 dict 有两个 ht_table，用于存储键值对数据和实现渐进式 rehash。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;dictEntry 结构如下。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;typedef&lt;/span&gt; &lt;span&gt;&lt;span&gt;struct&lt;/span&gt; &lt;span&gt;dictEntry&lt;/span&gt; {&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;void&lt;/span&gt; *key;&lt;br/&gt;    &lt;span&gt;union&lt;/span&gt; {&lt;br/&gt;       &lt;span&gt;// 指向实际 value 的指针&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;void&lt;/span&gt; *val;&lt;br/&gt;        &lt;span&gt;uint64_t&lt;/span&gt; u64;&lt;br/&gt;        &lt;span&gt;int64_t&lt;/span&gt; s64;&lt;br/&gt;        &lt;span&gt;double&lt;/span&gt; d;&lt;br/&gt;    } v;&lt;br/&gt;    &lt;span&gt;// 散列表冲突生成的链表&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;struct&lt;/span&gt; &lt;span&gt;dictEntry&lt;/span&gt; *&lt;span&gt;next&lt;/span&gt;;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;void&lt;/span&gt; *metadata[];&lt;br/&gt;} dictEntry;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;*key&lt;/code&gt; 指向键值对的键的指针，指向一个 sds 对象，key 都是 string 类型。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;v 是键值对的 value 值，是个 union（联合体），当它的值是 uint64_t、int64_t 或 double 数字类型时，就不再需要额外的存储，这有利于减少内存碎片。（为了节省内存操碎了心）当值为非数字类型，就是用 &lt;code&gt;val&lt;/code&gt; 指针存储。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;*next&lt;/code&gt;指向另一个 dictEntry 结构， 多个 dictEntry 可以通过 next 指针串连成链表， 从这里可以看出， ht_table 使用链地址法来处理键碰撞：&lt;strong&gt;当多个不同的键拥有相同的哈希值时，哈希表用一个链表将这些键连接起来。&lt;/strong&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;哈希桶并没有保存值本身，而是指向具体值的指针，从而实现了哈希桶能存不同数据类型的需求&lt;/strong&gt;。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;redisObject&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;dictEntry&lt;/code&gt; 的 &lt;code&gt;*val&lt;/code&gt; 指针指向的值实际上是一个 &lt;code&gt;redisObject&lt;/code&gt; 结构体，这是一个非常重要的结构体。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我的 key 只能是字符串类型，而 value 可以是 String、Lists、Set、Sorted Set、散列表等数据类型。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;键值对的值都被包装成 redisObject 对象， &lt;code&gt;redisObject&lt;/code&gt; 在 &lt;code&gt;server.h&lt;/code&gt; 中定义。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;typedef&lt;/span&gt; &lt;span&gt;&lt;span&gt;struct&lt;/span&gt; &lt;span&gt;redisObject&lt;/span&gt; {&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;unsigned&lt;/span&gt; type:&lt;span&gt;4&lt;/span&gt;;&lt;br/&gt;    &lt;span&gt;unsigned&lt;/span&gt; encoding:&lt;span&gt;4&lt;/span&gt;;&lt;br/&gt;    &lt;span&gt;unsigned&lt;/span&gt; lru:LRU_BITS;&lt;br/&gt;    &lt;span&gt;int&lt;/span&gt; refcount;&lt;br/&gt;    &lt;span&gt;void&lt;/span&gt; *ptr;&lt;br/&gt;} robj;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;type&lt;/strong&gt;：记录了对象的类型，string、set、hash 、Lis、Sorted Set 等，根据该类型来确定是哪种数据类型，使用什么样的 API 操作。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;encoding&lt;/strong&gt;：编码方式，&lt;strong&gt;表示 ptr 指向的数据类型具体数据结构，即这个对象使用了什么数据结构作为底层实现&lt;/strong&gt;保存数据。&lt;strong&gt;同一个对象使用不同编码实现内存占用存在明显差异，内部编码对内存优化非常重要。&lt;/strong&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;lru:LRU_BITS&lt;/strong&gt;：LRU 策略下对象最后一次被访问的时间，如果是 LFU 策略，那么低 8 位表示访问频率，高 16 位表示访问时间。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;refcount&lt;/strong&gt; ：表示引用计数，由于 C 语言并不具备内存回收功能，所以 Redis 在自己的对象系统中添加了这个属性，当一个对象的引用计数为 0 时，则表示该对象已经不被任何对象引用，则可以进行垃圾回收了。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;ptr 指针&lt;/strong&gt;：指向对象的底层实现数据结构，指向&lt;strong&gt;值的指针&lt;/strong&gt;。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如图 1-11 是由 redisDb、dict、dictEntry、redisObejct 关系图：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6568694463431306&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EoJib2tNvVtepppozb2rlRS7xTEiaEnA4qlOuRaCXhDXVNC2pVRq4Mta8g75PhmBgCiaYogERIXo0FFPYU8qOUV6w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1463&quot;/&gt;&lt;figcaption&gt;图1-11&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;图 1-11&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;注意，一开始的时候，我只使用 ht_table[0] 这个散列表读写数据，ht_table[1] 指向 NULL，当这个散列表容量不足，触发扩容操作，这时候就会创建一个更大的散列表 ht_table[1]。&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;接着我会使用渐进式 rehash 的方式将 ht_table[0] 的数据迁移到 ht_table[1] 上，全部迁移完成后，再修改下指针，让 ht_table[0] 指向扩容后的散列表，回收掉原来的散列表，ht_table[1] 再次指向 NULL。&lt;/strong&gt;&lt;/p&gt;&lt;section&gt;&lt;mp-common-profile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-weui-theme=&quot;light&quot; data-id=&quot;MzkzMDI1NjcyOQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/EoJib2tNvVtf7icAmS0BQH6oDVG37Q8NzcfdguS5qAqOhfxvZyIKqmuX5BbnDjynrBbZzktp1EiaeFLzapp1nHysw/0?wx_fmt=png&quot; data-nickname=&quot;码哥字节&quot; data-alias=&quot;MageByte&quot; data-signature=&quot;拥抱硬核技术和对象，面向人民币编程。&quot; data-from=&quot;0&quot; data-is_biz_ban=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;公众号后台回复「pdf」获取码哥专属《Redis 高手心法》&lt;/span&gt;。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;课后思考&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;当客户端发送一个指令请求，Redis 服务端会发生什么？&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;好文推荐&lt;/span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzkzMDI1NjcyOQ==&amp;amp;mid=2247501514&amp;amp;idx=1&amp;amp;sn=6f813d2ff241d52f47abcdc2a4db5346&amp;amp;chksm=c27f84fcf5080dea97475b4c55c3c1e161a651c64936efff2107676527918efbd37069ea2965&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;redis.conf 7.0 配置和原理全解，生产王者必备&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;Redis.conf 7.0 配置和原理全解，生产王者必备&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzkzMDI1NjcyOQ==&amp;amp;mid=2247500693&amp;amp;idx=1&amp;amp;sn=f0765bd947e74304b239044a45b96f8e&amp;amp;chksm=c27f81a3f50808b565e8621c810182afa89a499293ec29925376c1df7dd9086475f18003a419&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;Redis 内存优化神技，小内存保存大数据&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;Redis 内存优化神技，小内存保存大数据&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzkzMDI1NjcyOQ==&amp;amp;mid=2247500306&amp;amp;idx=1&amp;amp;sn=dc683616c9e2531a5eb37b19a4976a6a&amp;amp;chksm=c27f8024f50809328c9141b191890a3fce7bc2c05d2d3f53cbec344f2f6b0a6da4d71b240ccd&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;掘地三尺搞定 Redis 与 MySQL 数据一致性问题&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;掘地三尺搞定 Redis 与 MySQL 数据一致性问题&lt;/a&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>9763f381ed2bea65860bf8701ee94db6</guid>
<title>程序员职场晋升：与阿里前P9的一次近距离互动</title>
<link>https://toutiao.io/k/dcmc39o</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-role=&quot;outer&quot; label=&quot;edit by 135editor&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;p&gt;&lt;span&gt;👆&lt;/span&gt;&lt;span&gt;点击“&lt;/span&gt;&lt;span&gt;博文视点Broadview&lt;/span&gt;&lt;span&gt;”，获取更多书讯&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.05669291338582677&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PW0wIHxgg3nr1VNxfeqxVOw2nPJHVH4xeZibzPY5F4ibOuOZLMsUMrzIibGB6KMw7EurSKv6DkrtLzuhYdBa30A9Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;635&quot;/&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;107290&quot;&gt;&lt;section&gt;&lt;section fix=&quot;310:579&quot; hm=&quot;&quot;&gt;&lt;section&gt;&lt;svg version=&quot;1.1&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; x=&quot;0px&quot; y=&quot;0px&quot; viewbox=&quot;0 0 334.6 286.9&quot;&gt;&lt;polygon points=&quot;334.6,286.9 185.3,286.9 185.3,0.4 334.6,150.4 &quot;/&gt;&lt;polygon points=&quot;147.6,283.9 3.3,283.9 3.3,7.4 147.6,150.4 &quot;/&gt;&lt;/svg&gt;&lt;/section&gt;&lt;section data-autoskip=&quot;1&quot;&gt;&lt;p&gt;&lt;span&gt;程序员职场晋升，想必是很多技术同学想要了解的内容：&lt;/span&gt;&lt;span&gt;晋升遵循怎样的路径？怎样才能顺利晋升？晋升时要注意哪些坑，又有哪些技巧？……&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;博文视点“解惑杂优铺”栏目邀请到&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;畅销书&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;《互联网大厂晋升指南：从P5到P9的升级攻略》作&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;者李运华老师&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;来进行了一场&lt;/span&gt;&lt;strong&gt;&lt;span&gt;“从&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;程序员职场晋升直播课，与阿里前P9的一次近距离互动&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;”&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;的主题直播&lt;/span&gt;&lt;span&gt;访谈，希望可以解答小伙伴们在晋升道路上的一些疑问。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;李运华老师，阿里前资深技术专家（P9），有16年的软件设计开发经验，曾就职于华为、UCWEB、阿里巴巴、蚂蚁金服，承担架构设计、架构重构、技术团队管理、技术培训等职责；专注于开源技术、系统分析、架构设计，对互联网技术的特点和发展趋势有较深入的研究和理解，先后负责过阿里游戏异地多活、飞鸽消息队列、交易平台解耦、蚂蚁国际澳门钱包等项目，对于高性能、高可用、业务架构、系统解耦等方面有非常丰富的经验。&lt;/span&gt;&lt;span&gt;同时，李运华老师也是《编程的逻辑》《从零开始学架构》《互联网大厂晋升指南》3本书的作者。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;7&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;p data-autoskip=&quot;1&quot; hm_fix=&quot;309:367&quot;&gt;以下为简单整理的访谈文字稿，更多精彩内容欢迎关注“博文视点Broadview”视频号观看完整直播视频！&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section class=&quot;channels_iframe_wrp wxw_wechannel_card_not_horizontal&quot;&gt;&lt;mpvideosnap class=&quot;js_uneditable custom_select_card channels_iframe videosnap_video_iframe&quot; data-pluginname=&quot;videosnap&quot; data-id=&quot;export/UzFfAgtgekIEAQAAAAAAya4ImAyYLwAAAAstQy6ubaLX4KHWvLEZgBPE5YFYQCY3J8CBzNPgMIsJXdtRMDLgZbzYvn03B7Qc&quot; data-url=&quot;https://findermp.video.qq.com/251/20304/stodownload?encfilekey=rjD5jyTuFrIpZ2ibE8T7Ym3K77SEULgkia0Z2uibftst9wj0z83mUW2eOEkkw1ibckuNDl6NIj5EV1JDcobnpVibtYjtV30AHcUBJJxeJvK1IyGzntrmKCtQ9qw&amp;amp;adaptivelytrans=0&amp;amp;bizid=1023&amp;amp;dotrans=0&amp;amp;hy=SZ&amp;amp;idx=1&amp;amp;m=&amp;amp;scene=0&amp;amp;token=AxricY7RBHdXfPvvpOT5cGm7etibgTpaFIL3np1LrOZ1c1yzGeO74yQDVbnVhhS4R7K0WGKZiaqdwo&quot; data-headimgurl=&quot;http://wx.qlogo.cn/finderhead/oLU121BePGlK5gCzY9FXd7w0qDZtIDcFtaSTNicpYrEvHvAA2kfCLKg/0&quot; data-username=&quot;v2_060000231003b20faec8c7e48b1dc6dccd04e436b0771df137f3e0832e32a92192ea2165411c@finder&quot; data-nickname=&quot;博文视点Broadview&quot; data-desc=&quot;互联网从业人员完整的职场晋升路线：从P5到P9的升职秘籍、19个高效工作和学习方法&quot; data-nonceid=&quot;4456329807045195335&quot; data-type=&quot;video&quot; data-authiconurl=&quot;https://dldir1v6.qq.com/weixin/checkresupdate/icons_filled_channels_authentication_enterprise_a2658032368245639e666fb11533a600.png&quot; data-width=&quot;1080&quot; data-height=&quot;1920&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.7466666666666667&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/PW0wIHxgg3nPUUMzTgIacMOlv6joLjy4mwwibbn6q2eBfBIHn4pgjaib74hBvzdicibdAkluu8khfJ74CZWfNja4jA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;750&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;Q：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/em&gt;&lt;strong&gt;&lt;span&gt;可能有很多小伙伴对大厂的职级体系还不够了解，老师先来介绍一下大厂的职级体系吧~~&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;答：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;我先简单介绍一下自己的经历吧，因为可能大家对我个人的经历也比较感兴趣。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;为什么我能够写《互联网大厂晋升指南：从&lt;/span&gt;&lt;span&gt;P5&lt;/span&gt;&lt;span&gt;到&lt;/span&gt;&lt;span&gt;P9&lt;/span&gt;&lt;span&gt;的升级攻略》这样一本书，也和我的工作经历有关！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;工作经历的话，&lt;/span&gt;&lt;span&gt;04&lt;/span&gt;&lt;span&gt;年到&lt;/span&gt;&lt;span&gt;09&lt;/span&gt;&lt;span&gt;年是在华为，&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;&lt;span&gt;年开始在&lt;/span&gt;&lt;span&gt;UC&lt;/span&gt;&lt;span&gt;，直到&lt;/span&gt;&lt;span&gt;UC&lt;/span&gt;&lt;span&gt;被阿里收购，后来一直在阿里，&lt;/span&gt;&lt;span&gt;18&lt;/span&gt;&lt;span&gt;年转岗到蚂蚁金服。我在这三个公司都经历过职级的定级和评审。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我刚在华为的时候，华为的值级还不是现在的&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;&lt;span&gt;、&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;&lt;span&gt;、&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;&lt;span&gt;、&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;&lt;span&gt;、&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;&lt;span&gt;这种，是&lt;/span&gt;&lt;span&gt;T1&lt;/span&gt;&lt;span&gt;、 &lt;/span&gt;&lt;span&gt;T2&lt;/span&gt;&lt;span&gt;、 &lt;/span&gt;&lt;span&gt;T3&lt;/span&gt;&lt;span&gt;、 &lt;/span&gt;&lt;span&gt;T4&lt;/span&gt;&lt;span&gt;，然后每一级有&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;、&lt;/span&gt;&lt;span&gt;b&lt;/span&gt;&lt;span&gt;、&lt;/span&gt;&lt;span&gt;c&lt;/span&gt;&lt;span&gt;、&lt;/span&gt;&lt;span&gt;d&lt;/span&gt;&lt;span&gt;四等。但是那个时候刚定完级别我就走了，我都忘了我当时是什么级别了，好像因为刚毕业四五年左右定了一个&lt;/span&gt;&lt;span&gt;T2-b&lt;/span&gt;&lt;span&gt;还是什么。我走了之后，华为改成了&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;&lt;span&gt;、&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;&lt;span&gt;、&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;&lt;span&gt;、&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;&lt;span&gt;、&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;&lt;span&gt;这种。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;后来去了&lt;/span&gt;&lt;span&gt;UC&lt;/span&gt;&lt;span&gt;，&lt;/span&gt;&lt;span&gt;UC&lt;/span&gt;&lt;span&gt;虽然是一个创业公司，但也有自己的一个职级体系，也是用&lt;/span&gt;&lt;span&gt;T1&lt;/span&gt;&lt;span&gt;、 &lt;/span&gt;&lt;span&gt;T2&lt;/span&gt;&lt;span&gt;、 &lt;/span&gt;&lt;span&gt;T3&lt;/span&gt;&lt;span&gt;、 &lt;/span&gt;&lt;span&gt;T4&lt;/span&gt;&lt;span&gt;，然后每一级分&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;、&lt;/span&gt;&lt;span&gt;b&lt;/span&gt;&lt;span&gt;、&lt;/span&gt;&lt;span&gt;c&lt;/span&gt;&lt;span&gt;三等。后来被阿里收购后也是&lt;/span&gt;&lt;span&gt;P5&lt;/span&gt;&lt;span&gt;、&lt;/span&gt;&lt;span&gt;P6&lt;/span&gt;&lt;span&gt;、&lt;/span&gt;&lt;span&gt;P7&lt;/span&gt;&lt;span&gt;、&lt;/span&gt;&lt;span&gt;P8&lt;/span&gt;&lt;span&gt;这种等级。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;所以，我个人职业生涯经历过的这几个公司都有职级体系，我有机会去接触不同的职级体系，以及不同职级体系里面会有一些怎样的玩法，甚至说有一些什么样的技巧或潜规则之类的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;另外，我自己晋升还算是比较顺利的。我主要是在&lt;/span&gt;&lt;span&gt;UC&lt;/span&gt;&lt;span&gt;和阿里晋升的，从&lt;/span&gt;&lt;span&gt;UC&lt;/span&gt;&lt;span&gt;的&lt;/span&gt;&lt;span&gt;T2-a&lt;/span&gt;&lt;span&gt;一路晋升，并到阿里之后从&lt;/span&gt;&lt;span&gt;P7&lt;/span&gt;&lt;span&gt;晋升到&lt;/span&gt;&lt;span&gt;P8&lt;/span&gt;&lt;span&gt;，从&lt;/span&gt;&lt;span&gt;P8&lt;/span&gt;&lt;span&gt;晋升到&lt;/span&gt;&lt;span&gt;P9&lt;/span&gt;&lt;span&gt;，整体上来说都是比较这个顺利的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;后来带团队，我又指导了我的一些下属晋升到&lt;/span&gt;&lt;span&gt;P7&lt;/span&gt;&lt;span&gt;、&lt;/span&gt;&lt;span&gt;P8&lt;/span&gt;&lt;span&gt;。后来因为我晋升到了&lt;/span&gt;&lt;span&gt;P9&lt;/span&gt;&lt;span&gt;，所以就作为晋升评委去评&lt;/span&gt;&lt;span&gt;P6&lt;/span&gt;&lt;span&gt;升&lt;/span&gt;&lt;span&gt;P7&lt;/span&gt;&lt;span&gt;和&lt;/span&gt;&lt;span&gt;P7&lt;/span&gt;&lt;span&gt;升&lt;/span&gt;&lt;span&gt;P8&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在做晋升评委的时候，实际上有很多机会去跟其他部门、其他业务线，甚至其他背景的评委一起来考察这个申请者，所以也会有更多的视角去看大家怎样去理解晋升，怎么去判别晋升。所以，在这一块我自己形容自己是球员、教练和裁判都做过。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;简单地给大家讲解一下我在晋升这一块的经验。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;互联网行业现在比较常见的两个职级体系：一类是阶梯式的，以腾讯为代表，腾讯以前是T2.1……T3.1……T4.1……腾讯后来改了一次，改成T6、T7、T8、T9……但实际上都是换汤不换药，本质上都是阶梯式的，也就是说两个级别之间的这个差异是比较小的；另外一类是比较典型的跨越式的，就是阿里这种职级，包括百度、滴滴也是类似的，以阿里为例，就是P5、P6、P7、P8、P9……这种职级的P6和P7的差别就比较大，这就是为什么叫跨越式，因为你可能要花很大的力气才能从一个级别晋升到另一个级别。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;所以目前来说，互联网行业主要是阶梯式和跨越式这两种职级体系。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;但是你要问哪一个更好的话，我个人觉得在实际操作过程中，其实阿里的这种体系更合理一些，而且现在阿里的这种职级体系基本上也是行业的硬通货，基本上大家问你是什么级别的时候，你说一个公司的级别，面试官可能对你们公司的级别不太了解，他就会问你对标到阿里是哪个级别。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;其实现在稍具规模的公司都有晋升体系，所以大家也不要觉得自己在“中厂”是不是就没有机会了。自己可以看一下公司的一些规章制度和规范。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;em&gt;&lt;strong&gt;&lt;span&gt;Q：&lt;/span&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;晋升时需要通过哪些“关卡”，哪个关卡最重要？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;答：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;这里大概来跟大家讲解一下这几个晋升的关卡，每个关卡里面的重点事项。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;首先，这里说的是我经历过的最全面、最完整的流程，当然如果你们的公司为了一些晋升效率，可能会进行一些裁剪或者合并，这也是可能的。这就需要自己去看一下公司的规定。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;通常情况下，&lt;/span&gt;&lt;span&gt;&lt;span&gt;晋升要经历提名、预审、评审、复审、审批和沟通这&lt;/span&gt;&lt;span&gt;6&lt;/span&gt;&lt;span&gt;个阶段。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;听起来很多，但大家不用担心，其实你自己真正要参与的其实就两个阶段。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我先每一个阶段都介绍一下，它是干什么的，你在里面要做什么事情。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;提名阶段，&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;就是团队或者你自己去提名，提名可能要满足一些标准跟要求，比如你的绩效、工作年薪、能力要求等等。在这一步，如果你是自主提名，或者主管说让你准备晋升，那么可能你要写个提名词。那么，怎么写提名词呢？提名词不是写一篇文章，而是可能就200字以内，你要把晋升的理由讲出来，那这里面其实是有非常多的技巧的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这是第一点，第二点大家注意是主管是可以提免你晋升的。如果你的绩效一般，但是主管觉得达到了晋升的话，也是可以提名的。这里就有一个大家注意的事项了，平时很多人都说这要跟主管关系好才行，这个观察肯定有一定的偏颇的，但是如果你跟主管的关系非常差，那我可以很明白地告诉你，你的晋升确实会受影响！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;有人的地方就有江湖，大家为了自己的前途不要把和主管的关系搞得太差，毕竟在提名阶段他就可以卡你了。但绝大部分主管不会为了个人恩怨来卡你，因为主管自己也希望带领团队做出绩效和价值。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;预审阶段，&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;其实就是部门内拉通。每个小组都会提名，大家疯狂地提名，那是不是都去晋升呢？那肯定不行，因为每年晋升都有一定的限额。不是你想提谁谁就去，结果一面评发现明显不行，那这不浪费大家时间吗？所以就有预审这么一个步骤。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;预审其实就是部门的大佬（&lt;/span&gt;&lt;span&gt;P8&lt;/span&gt;&lt;span&gt;、&lt;/span&gt;&lt;span&gt;P9&lt;/span&gt;&lt;span&gt;、&lt;/span&gt;&lt;span&gt;P10&lt;/span&gt;&lt;span&gt;的几个大佬）一起讨论一下这个名单，看一看有没有哪一个不合适。那这些大佬怎么知道哪个人合适哪个人不合适呢？这其实就是根据他平时&lt;/span&gt;&lt;span&gt;各种渠道了解到的一些信息，比如你某一次开会表现很积极，或者某一次处理问题很积极，有个大佬可能看到或者听到了。当然如果你哪一次跟别人发生了激烈的争执，然后别人去投诉了，那大佬当然也知道了。这里其实就想提醒大家，在职场里还是要考虑合作共赢，尽量不要引起矛盾；另外就是平时大家还是要善于表达和表现自己，这不是说去演戏，而是说你不要以为我把这个事情做好了就可以了，老大自然就知道了，这个其实不太可能的。比如我之前下面管理的人可能有将近&lt;/span&gt;&lt;span&gt;100&lt;/span&gt;&lt;span&gt;个，每一个人我都很清楚也很难。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;评审阶段，&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;你要写PPT，写完PPT去答辩，答辩的时候你讲PPT，然后问答，可能是3个评委或者5个评委，然后评委根据你的答辩情况决定你通过还是不通过，这就是评审阶段。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;复审阶段，&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;就是你答辩完了，已经不关你的事情了，整个部门甚至整个公司一起来看一下，今年的通过率会不会太高了，或者今年的通过率会不会太低了，这里就涉及大家经常说的运气。今年如果都很牛，公司又有限制说你不能晋升那么多，那有的人能力稍微比别人差一点的可能就晋升不了了。这也是晋升里很大的一个运气因素。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;有公司的通过率指标，也有部门的通过率指标，你们部门今年晋升了几十个，别的部门才晋升十几个，那肯定要把你们部门的刷一刷。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;审批阶段，&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;最后名单都确定了，公司大老板决定怎么发钱，有的年份公司绩效好可能多发一点，有的年份可能公司绩效不好，可能就少发一点，这也是跟运气相关的，你也控制不了。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;沟通阶段，&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;就是结果出来之后，你的主管和&lt;/span&gt;&lt;span&gt;HR&lt;/span&gt;&lt;span&gt;要找你沟通。如果通过了，为什么通过了？还有哪些需要改进的？如果不通过，原因是什么？接下来应该怎么做？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;所以，要完成晋升对于公司来说，全流程投入的人力还是挺多的，但是对于个人来说，基本上只要搞定提名、评审阶段。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;总体来说，肯定是评审阶段对你是最重要的！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;但是一定要注意，不是说你把评审阶段搞好就行，提名、预审、评审其实都是你平时工作的一个体现，不是说我平时什么都不关心，就希望把PPT写得非常漂亮，然后一下子就通过了，这个是很难的！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;Q：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/em&gt;&lt;strong&gt;&lt;span&gt;什么样的人更容易晋升？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;答：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;其实很多同学如果没有经历过晋升的过程，或者是说自己可能参与了晋升，但是对于晋升的全貌不了解的话可能会有比较多的误区。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我先说误区吧！很多同学的第一个误区就是觉得技术能力越牛越好，要天天去刷&lt;/span&gt;&lt;span&gt;LeetCode&lt;/span&gt;&lt;span&gt;、刷数据结构和算法、看源码之类的，我的能力越强，晋升越容易。这是一个非常大的误区！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;实际上，不管是站在企业的角度，还是站在团队的角度，都不会因为你天天花时间研究数据结构、算法、源码就给你晋升，这样的话最后就没人干公司的活儿了。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;所以，&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;晋升的首要原则&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;是一定要为公司带来价值！你做的事情一定要为公司或团队创造价值，比如你做的这个业务效果很好，为公司降低成本、提升效率、提升质量等。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;第二是主动原则！&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;很多人觉得我只要把自己事情做好，把自己的能力提升了，主管肯定会看到，尤其是技术人都比较腼腆，比较崇拜技术，不喜欢表现，认为金子在哪里都会发光的，酒香不怕巷子深。这些都是错误的认知！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;你要主动去寻找和抓住有利于晋升的机遇。因为主管的风格有很多种，并不是每一个主管都会关注团队人员的成长和晋升的。应该主动去跟主管沟通，或者主动去抓住机会，提升跟工作相关的能力，而不是等着主管来安排，等着机会砸到自己身上！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;当然，这对大家的要求就会高了。什么时候找主管？你是不是天天找主管？那也不行！需要你有更多对团队、对业务的理解，对上下游的理解，能够主动识别出哪些地方有机会、哪些地方有困难，然后你能够针对这些机会、针对这些困难做好准备，机会来临的时候，你跳出来说“我可以做这个”……&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;第三是成长原则。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;就是不管做什么事情，一定要想着自己的能力要有成长，包括你的业务能力、技术能力、沟通能力、团队管理能力……不要老是说“哎呀，我就拿1万块钱工资，反正我就做这么多事情，对得起这些工资就行了”，你如果抱着这种态度的话，可能感觉自己心里很爽，但是长期来看，对自己是得不偿失的……&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;一定要想着我做这些事情，除了赚这份工资以外，还一定要积累经验提升自己的能力，就算是我的能力在当前这个公司、当前这个团队得不到发挥，得不到回报，那我也有这个底气去其他地方，找到属于自己的机会。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;em&gt;&lt;strong&gt;&lt;span&gt;Q：&lt;/span&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;在晋升时，评审团如何判断我有没有达到晋升标准呢？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;答：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;评委为什么认为有的人可以晋升，有的人不能晋升，背后的逻辑是什么？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我知道之前很多同学可能有一些误区，会觉得这个人特别会说、&lt;/span&gt;&lt;span&gt;PPT&lt;/span&gt;&lt;span&gt;写得很漂亮、讲话口若悬河，所以他晋升了。但其实这些都不是决定性因素，也不会成为一个关键性因素。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;也有的同学会说，“那个人的绩效还不如我，我的绩效比他好，为什么他晋升了，我没有晋升呢？”这其实就是第二个误区！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;所以，关于什么样的人在评审（就是面评的时候）会通过晋升，其实背后是有个逻辑的，&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;我把这个逻辑整理成一句话，就是你在当前级别把下一级别的事情做好了，你就可以晋升！&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;所以，你不要觉得我是个&lt;/span&gt;&lt;span&gt;P6&lt;/span&gt;&lt;span&gt;，我怎么做的事情跟&lt;/span&gt;&lt;span&gt;P7&lt;/span&gt;&lt;span&gt;一样，我是不是吃亏了？这个时候你应该要感到高兴才对，说明主管已经在安排机会给你锻炼了。你在&lt;/span&gt;&lt;span&gt;P6+&lt;/span&gt;&lt;span&gt;的时候做的跟&lt;/span&gt;&lt;span&gt;P7&lt;/span&gt;&lt;span&gt;的事情一样，做好了之后，拿到了绩效再去晋升，评委会看你做的这个事情是不是真的能符合&lt;/span&gt;&lt;span&gt;P7&lt;/span&gt;&lt;span&gt;的能力要求。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;那&lt;/span&gt;&lt;span&gt;P7&lt;/span&gt;&lt;span&gt;有什么样的能力要求？我在《互联网大厂晋升指南：从&lt;/span&gt;&lt;span&gt;P5&lt;/span&gt;&lt;span&gt;到&lt;/span&gt;&lt;span&gt;P9&lt;/span&gt;&lt;span&gt;的升级攻略》这本书中总结出了一个模型：面相复杂度的多维度模型。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;不同的技术、不同的业务、不同的管理的复杂度是不一样的，能力要求也不一样。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;多维度就是技术、管理和业务这三个维度，你的级别不同，这三个维度的要求是不一样的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;所以，评委会根据级别本身的要求以及你做过的事情能不能匹配这个级别的要求，来评判是否可以晋升。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;em&gt;&lt;strong&gt;&lt;span&gt;Q：&lt;/span&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;在晋升的时候，不同级别的Title可能听起来会比较抽象，比如，“工程师”“高级工程师”“专家工程师”，那这个“高级”具体高级在哪里呢？我怎么把这种抽象的字眼转化成具体技能做更有针对性地提升呢？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;答：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;我还是以阿里的职级为例解读一下&lt;/span&gt;&lt;span&gt;P5&lt;/span&gt;&lt;span&gt;到&lt;/span&gt;&lt;span&gt;P9&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;P5&lt;/span&gt;&lt;span&gt;到&lt;/span&gt;&lt;span&gt;P6&lt;/span&gt;&lt;span&gt;，用一个关键词来总结，叫工匠！工匠的核心任务是完成任务！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;那&lt;/span&gt;&lt;span&gt;P5&lt;/span&gt;&lt;span&gt;跟&lt;/span&gt;&lt;span&gt;P6&lt;/span&gt;&lt;span&gt;的区别是什么？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;P5&lt;/span&gt;&lt;span&gt;可能还不能独立完成任务，还有一个师傅带着；&lt;/span&gt;&lt;span&gt;P6&lt;/span&gt;&lt;span&gt;就是独立完成任务了。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;那&lt;/span&gt;&lt;span&gt;P5&lt;/span&gt;&lt;span&gt;跟&lt;/span&gt;&lt;span&gt;P6&lt;/span&gt;&lt;span&gt;的核心要求是什么？专业能力！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;P7&lt;/span&gt;&lt;span&gt;到&lt;/span&gt;&lt;span&gt;P8&lt;/span&gt;&lt;span&gt;，用一个关键词来总结，叫指挥！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;大家想想一个交响乐团为什么要有一个指挥？指挥的目的是什么？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;指挥团队大家来合作协作，一起把大的任务完成！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;所以，你想晋升到&lt;/span&gt;&lt;span&gt;P7&lt;/span&gt;&lt;span&gt;、&lt;/span&gt;&lt;span&gt;P8&lt;/span&gt;&lt;span&gt;，要想想自己有没有真正指挥过……&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;P9&lt;/span&gt;&lt;span&gt;到&lt;/span&gt;&lt;span&gt;P10&lt;/span&gt;&lt;span&gt;，是导演！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;那导演跟指挥有什么区别？指挥是拿别人的乐谱来演奏，指挥是不需要自己创作这个乐谱的，&lt;/span&gt;&lt;span&gt;导演很大程度上决定了这个作品是否优秀，导演定目标和基调，决定一些关键的事项、想创造一个什么样的作品。所以&lt;/span&gt;&lt;span&gt;P9&lt;/span&gt;&lt;span&gt;跟&lt;/span&gt;&lt;span&gt;P10&lt;/span&gt;&lt;span&gt;的要求就更高了！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;实际上，每一个级别具体的要求就比较多比较细了，大家有兴趣的话，可以看一下《互联网大厂晋升指南：从&lt;/span&gt;&lt;span&gt;P5&lt;/span&gt;&lt;span&gt;到&lt;/span&gt;&lt;span&gt;P9&lt;/span&gt;&lt;span&gt;的升级攻略》这本书。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;em&gt;&lt;strong&gt;&lt;span&gt;Q：&lt;/span&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;是不是PPT做得好就容易晋升？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;答：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;首先，是不是&lt;/span&gt;&lt;span&gt;PPT&lt;/span&gt;&lt;span&gt;做得好就能够晋升呢？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;那当然不是的！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我见过很多&lt;/span&gt;&lt;span&gt;PPT&lt;/span&gt;&lt;span&gt;做得很好的，结果一面评发现完全不是那么回事。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我们就怀疑这个&lt;/span&gt;&lt;span&gt;PPT&lt;/span&gt;&lt;span&gt;是不是主管教他这么写的。为什么这么说呢？因为这个&lt;/span&gt;&lt;span&gt;PPT&lt;/span&gt;&lt;span&gt;写的重点和调理都很清楚，但是我们在面评针对&lt;/span&gt;&lt;span&gt;PPT&lt;/span&gt;&lt;span&gt;里面的内容去展开问的时候，很多东西他都答不上来。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;当然，&lt;/span&gt;&lt;span&gt;PPT&lt;/span&gt;&lt;span&gt;本身如果是你自己写的，而且又写得好的话，那确实有助于晋升。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;很多技术同学觉得&lt;/span&gt;&lt;span&gt;PPT&lt;/span&gt;&lt;span&gt;是耍嘴皮子功夫、是表面功夫，甚至有的同学不屑一顾，总觉得我的代码写的好就可以，但是你要知道晋升的时候没办法看你的代码，所以大家一定要注意写&lt;/span&gt;&lt;span&gt;PPT&lt;/span&gt;&lt;span&gt;并不是一个耍嘴皮子的功夫。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;同样一件事情，不同的人写出来，&lt;/span&gt;&lt;span&gt;PPT&lt;/span&gt;&lt;span&gt;的内容就是差异很大的；同样一个&lt;/span&gt;&lt;span&gt;PPT&lt;/span&gt;&lt;span&gt;，不同的人讲出来的东西也是差别很大的，那背后的逻辑是什么？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;大家一定要注意，&lt;/span&gt;&lt;span&gt;PPT&lt;/span&gt;&lt;span&gt;其实就是要你把你做过的事情的逻辑结构、关键点背后的原因讲出来、&lt;/span&gt;&lt;span&gt;总结提炼出来。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;能把&lt;/span&gt;&lt;span&gt;PPT&lt;/span&gt;&lt;span&gt;写好说明你本身的逻辑、思维都是清晰的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;讲PPT其实基本上就是把你写的过程中的逻辑展现出来。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;这里有很多技巧，比如说金字塔原则、STAR原则，大家有兴趣可以自己去查一查。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;评委也是针对&lt;/span&gt;&lt;span&gt;PPT&lt;/span&gt;&lt;span&gt;上的内容来提问，或者是由&lt;/span&gt;&lt;span&gt;PPT&lt;/span&gt;&lt;span&gt;上的内容展开来提问的，所以&lt;/span&gt;&lt;span&gt;PPT&lt;/span&gt;&lt;span&gt;这一块大家一定要重视！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如果你马上就要晋升了，有没有技巧来尽快提升你的质量呢？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;就是&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;模拟面评&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;！写完之后首先自己对着屏幕讲3遍，看一下哪里会卡住，时间用了多少，自己觉得讲得很顺之后，再拉上你的主管或者同事到会议室里，给他们讲一下，让他们问你一些问题，通过他们的视角帮你完善这个PPT和一些问题的答案。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;em&gt;&lt;strong&gt;&lt;span&gt;Q：&lt;/span&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;晋升答辩的时候，是不是答得越多越能展现自己能力？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;答：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;其实不是！就像前面讲的，并不是说这个人特别会说就可以。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;评委随便问一个什么问题，他都能说&lt;/span&gt;&lt;span&gt;5&lt;/span&gt;&lt;span&gt;分钟，评委最怕这样了，为什么？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;第一，&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;答辩的时候，评委要考核的东西是不少的，但是答辩的时间是有限的，一般来说答辩大概就30~50分钟，如果一个问题说10分钟，评委总共能问的问题就少，怎么综合来看你的能力呢？所以不要以为说越多越好！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;第二，&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;评委并不要求你把每一个问题的代码细节给他背出来。我们考察的时候，其实就看你有没有把握住这个地方的关键点，你把这个关键点讲清楚了，我们基本上就认为你已经掌握了，也不可能让你现场去写代码。如果评委还有兴趣展开的话，那他继续问你继续答就可以了！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;大家注意，在真正回答问题的时候也是有技巧的，你要明白问题的分类有什么，不同的问题，答的时间不一样，答的内容也不一样，具体每一类问题答什么，大家可以详细看一下《互联网大厂晋升指南：从&lt;/span&gt;&lt;span&gt;P5&lt;/span&gt;&lt;span&gt;到&lt;/span&gt;&lt;span&gt;P9&lt;/span&gt;&lt;span&gt;的升级攻略》这本书！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这不是我一个人的经验总结，都是综合我多次评审过程中，和我合作的、不同背景的评委，总结观察发现的一个共性！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;em&gt;&lt;strong&gt;&lt;span&gt;Q：&lt;/span&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;为什么答辩感觉很好，结果却还是没通过&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;答：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;这是有可能的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;你觉得答辩还好，但最后结果没过，这里有几种情况：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;第一种&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;就是你可能自己答得很嗨，但都是答非所问或者没有答到重点！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;第二种&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;就是你自己觉得自己答得好，实际上你答得并不好。就是我刚才说的，你滔滔不绝地答了很多，有的评委可能比较累了，会比较烦了，他就懒得让你再答，结果一场面试下来，就答了三四个问题，评委也不知道你能不能过。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;第三种&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;就是跟运气相关了，就像在前面介绍的，在晋升流程里的复审阶段，部门或者公司要把所有的晋升数据拿过来看一下，根据晋升通过率把一批人给刷下去。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;所以晋升的时候也确实有很多不确定性的因素，大家如果第一次晋升没通过，也不要灰心，也不要气馁，有可能是运气的原因。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;em&gt;&lt;strong&gt;&lt;span&gt;Q：&lt;/span&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;最后，老师还有没有一些忠告想要给大家？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;答：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;第一，&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;现在整体来说大环境不太好，面对这种外部大环境的不可控，还是要更多关注于自己内在的能力提升，这样在潮水来的时候大家都能浮起来，潮水退去之后，能力过硬的人才能够更好地生存，找到更好的机会！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;第二，&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;因为每次都有同学问我，所以今天统一跟大家说一下：未来10~20年国内的技术趋势，大家把握三个关键字——数字化、国产化和云原生！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;大家可以在这三个方面积累一些经验、提升自己的能力，尝试去抓住一些机遇。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;最后，祝大家早日晋升！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;……&lt;/p&gt;&lt;p&gt;&lt;span&gt;更多精彩内容尽在李运华老师的著作&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;《互联网大厂晋升指南：从P5到P9的升级攻略》&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;一书中，欢迎大家阅读此书了解关于晋升的更多内容！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;258&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;258&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PW0wIHxgg3kvSnlZvbtWKFGSmO6Aia5GP88jrsA9h4bxMS4QJ9CaBOOL1Z9fCKrveLHQn66ljf1lbdyeIsk9gUg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;800&quot; data-width=&quot;307px&quot; title=&quot;9787121441059.png&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;▊《互联网大厂晋升指南：从P5到P9的升级攻略&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;》&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;李运华 著&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;90239&quot;&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section&gt;&lt;section data-role=&quot;list&quot;&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;从&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;P5 &lt;/span&gt;&lt;span&gt;到 &lt;/span&gt;&lt;span&gt;P9 &lt;/span&gt;&lt;span&gt;的升职秘籍&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;实用的职场晋升技巧&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;19 &lt;/span&gt;&lt;span&gt;个高效工作和学习方法&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;完整的职场晋升路线&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;本书&lt;/span&gt;&lt;span&gt;主要介绍了一套系统的晋升方法论，涵盖&lt;/span&gt;&lt;span&gt;“理解晋升→准备晋升→参与晋升→获得晋升”这条完整的晋升链条，深入剖析了晋升背后的规则、“潜规则”、技巧和套路，帮助读者找到正确的发力点，顺利通过晋升，获得更好的职业发展。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;108&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;108&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PW0wIHxgg3nPUUMzTgIacMOlv6joLjy4WkVcgiapUP1GOsIxEa61wnLCltZr0pscxuEjpfPtrnKBnPKWZwDAzPQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;300&quot; title=&quot;互联网大厂二维码 (3).png&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;（扫码了解本书详情！）&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-role=&quot;title&quot; data-tools=&quot;135编辑器&quot; data-id=&quot;97718&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.5555555555555556&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PW0wIHxgg3nPUUMzTgIacMOlv6joLjy4PIpwTJjoibqicKRtDQ2BAsnFSBhibPcbeesZNAAkQbfkLAicbfia2PNU5lQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;54&quot; data-width=&quot;100%&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;李运华老师其他著作&lt;/strong&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;42&quot; data-cropselx2=&quot;303&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;345&quot; data-ratio=&quot;1.28125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/PW0wIHxgg3lB95Sk8Smy75YRQb1sEFgRUOOiaTrSqDknGRYQThhls49pFPb58dp4uJNbW7y6K41aq7ozOLl2QCA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;800&quot; title=&quot;从零开始学架构：照着做，你也能成为架构师.jpg&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;strong&gt;▊《&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;从零开始学架构：照着做，你也能成为架构师&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;strong&gt;》&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;李运华 著&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;90239&quot;&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section&gt;&lt;section data-role=&quot;list&quot;/&gt;&lt;p&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;架构设计是技术人员成长和晋升过程中必须掌握的技能，但目前业界缺乏架构师学习和培养方面体系化的知识和实践的指导，本书结合作者多年在架构设计方面的学习、思考、实践，提出了完整的一套架构设计方法论，包括什么是架构、架构设计的目的、架构设计原则、架构设计流程、架构设计模式和技巧、互联网公司技术演进等内容。这套架构设计方法论适合不同行业，比如互联网、企业应用等；也适合不同的技术领域，比如后端架构设计、前端架构设计、客户端架构设计、测试平台架构设计、运维平台架构设计等&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;128&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;128&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PW0wIHxgg3nPUUMzTgIacMOlv6joLjy4qVUfyoPqf0W8icPF3cB9icO0ibd8nqHdf7OGj8DNlMkAEaTaxyicxO4weA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;300&quot; title=&quot;从零开始学架构二维码.png&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;（扫码了解本书详情）&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;42&quot; data-cropselx2=&quot;303&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;345&quot; data-ratio=&quot;1.33&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/PW0wIHxgg3nPUUMzTgIacMOlv6joLjy4ciaTNJFwcBZEiaTLD04uicG6EMKDq3QG82kp17ibGsgfBNQGcUB4OHvyOw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;800&quot; data-width=&quot;330px&quot; title=&quot;编程的逻辑：如何用面向对象方法实现复杂业务需求.jpg&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;strong&gt;▊《&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;编程的逻辑：如何用面向对象方法实现复杂业务需求》&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;李运华 著&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;90239&quot;&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section&gt;&lt;section data-role=&quot;list&quot;&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;剖析面向对象本质&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;落地面向对象技术&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;梳理面向对象流程&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;实战面向对象案例&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;本书系统地讲述了面向对象技术的相关内容，包括面向对象的基本概念、面向对象开发的流程、面向对象的各种技巧，以及如何在实际开发项目中应用面向对象技术进行设计和开发。在讲述相关知识或技术的时候，除了从“是什么”这个角度进行介绍外，更加着重于从“为什么”和“如何用”这两个角度进行剖析，力争让读者做到“知其然，并知其所以然”，从而达到在实践中既能正确又能优秀地应用面向对象的相关技术和技巧。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;115&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;115&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PW0wIHxgg3nPUUMzTgIacMOlv6joLjy4opBaRWKLrRrDjx22lzIPWMpwqzXJu9LzcoByvwn83GQ3zZBpeoej4w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;300&quot; title=&quot;程序员修炼之道二维码.png&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;（扫码查看本书详情！）&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;title&quot; data-tools=&quot;135编辑器&quot; data-id=&quot;97718&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5555555555555556&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PW0wIHxgg3kq7YukTRZYaicDKguKnSecIdtN7LfXL1Tn3EbibEFoAwXR3uJopPFFUNWUcRYV4VIGnMc9l8w7a4ug/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;54&quot; data-width=&quot;100%&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section hm_fix=&quot;232:294&quot;&gt;&lt;strong&gt;更多相关图书&lt;/strong&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PW0wIHxgg3nWx1jHXwKABH9Hp0dojnTftdgZSdiaqBqpoRuHHxWHKVDDzK9NG8CaISk4QcAbcjRj985o8QlE7ow/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;800&quot; data-width=&quot;337px&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;strong&gt;▊《&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;程序员修炼之道：从小工到专家&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;》&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;[美] 亨特（Andrew Hunt），[美] 托马斯（Daid Thomas） 著&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;马维达 译&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;90239&quot;&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section&gt;&lt;section data-role=&quot;list&quot;&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;全球票选程序员读物&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;常读常新的不老神话&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;从开发到架构注重实效永不过时&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;一本被所有编程翘楚力荐过的书&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;span/&gt;&lt;span&gt;本书&lt;span&gt;由一系列独立的部分组成，涵盖的主题从个人责任、职业发展，直到用于使代码保持灵活、并且易于改编和复用的各种架构技术，利用许多富有娱乐性的奇闻轶事、有思想性的例子及有趣的类比，全面阐释了软件开发的许多不同方面的较佳实践和重大陷阱。无论你是初学者，是有经验的程序员，还是软件项目经理，本书都适合你阅读。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;mpcps class=&quot;js_editor_new_cps&quot; data-templateid=&quot;list&quot; data-traceid=&quot;20e50fc7-a7dc-4b73-9210-3c1abd696bf6&quot; data-goodssouce=&quot;1&quot; data-pid=&quot;101_10393278&quot; data-appuin=&quot;2395946309&quot; data-buffer=&quot;{&amp;quot;category_id&amp;quot;:106,&amp;quot;pid&amp;quot;:&amp;quot;101_10393278&amp;quot;,&amp;quot;biz_uin&amp;quot;:&amp;quot;2395946309&amp;quot;,&amp;quot;trace_id&amp;quot;:&amp;quot;20e50fc7-a7dc-4b73-9210-3c1abd696bf6&amp;quot;,&amp;quot;sku_id&amp;quot;:&amp;quot;101_10393278&amp;quot;,&amp;quot;source_id&amp;quot;:2,&amp;quot;source_name&amp;quot;:&amp;quot;京东&amp;quot;,&amp;quot;audit_state&amp;quot;:1,&amp;quot;main_img&amp;quot;:&amp;quot;https://pcm-img.zhls.qq.com/productcenter-5e3f955e--1018824-7538276201268856122/03436011429072022/da75c30213df5e1434c3026a180f8d69.jpg&amp;quot;,&amp;quot;product_name&amp;quot;:&amp;quot;程序员修炼之道：从小工到专家(博文视点出品)&amp;quot;,&amp;quot;current_price&amp;quot;:4340,&amp;quot;first_category_id&amp;quot;:&amp;quot;106&amp;quot;,&amp;quot;product_label_name_list&amp;quot;:[&amp;quot;京东配送&amp;quot;],&amp;quot;select_tag_name_list&amp;quot;:[],&amp;quot;appuin&amp;quot;:&amp;quot;2395946309&amp;quot;,&amp;quot;isNewCpsKOL&amp;quot;:1,&amp;quot;templateId&amp;quot;:&amp;quot;list&amp;quot;}&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;42&quot; data-cropselx2=&quot;303&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;345&quot; data-ratio=&quot;1.33&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/PW0wIHxgg3kvaBZngpdG4eFGWTIEsz78myoF1H0Wu2F0hIoPB93Id0yHtyo8CrA1tyjLHy1VxFWibibF6a5dAYYQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;800&quot; data-width=&quot;252px&quot; title=&quot;程序员修炼之道：通向务实的最高境界（第2版）.jpg&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;strong&gt;▊《&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;程序员修炼之道：通向务实的最高境界（第2版）》&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;[美] David，Thomas（大卫托马斯），Andrew，Hunt（安德鲁亨特） 著&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;云风 译&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;90239&quot;&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section&gt;&lt;section data-role=&quot;list&quot;&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;《从小工到专家》重磅新版&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;雄踞“全球程序员至爱书单”顶端&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;开发新兵走向卓越领袖&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;span/&gt;&lt;span&gt;本书&lt;span&gt;之所以在全球范围内广泛传播，被一代代开发者奉为圭臬，盖因它可以创造出真正的价值：或编写出更好的软件，或探究出编程的本质，而所有收获均不依赖于特定语言、框架和方法。时隔20年的新版，经过全面的重新选材、组织和编写，覆盖哲学、方法、工具、设计、解耦、并发、重构、需求、团队等务实话题的最佳实践及重大陷阱，以及易于改造、复用的架构技术。本书极具洞察力与趣味性，适合从初学者到架构师的各阶层读者潜心研读或增广见闻。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;mpcps class=&quot;js_editor_new_cps&quot; data-templateid=&quot;list&quot; data-traceid=&quot;99922c0f-0fe4-420f-be0a-6db15749726c&quot; data-goodssouce=&quot;1&quot; data-pid=&quot;101_12828404&quot; data-appuin=&quot;2395946309&quot; data-buffer=&quot;{&amp;quot;category_id&amp;quot;:106,&amp;quot;pid&amp;quot;:&amp;quot;101_12828404&amp;quot;,&amp;quot;biz_uin&amp;quot;:&amp;quot;2395946309&amp;quot;,&amp;quot;trace_id&amp;quot;:&amp;quot;99922c0f-0fe4-420f-be0a-6db15749726c&amp;quot;,&amp;quot;sku_id&amp;quot;:&amp;quot;101_12828404&amp;quot;,&amp;quot;source_id&amp;quot;:2,&amp;quot;source_name&amp;quot;:&amp;quot;京东&amp;quot;,&amp;quot;audit_state&amp;quot;:1,&amp;quot;main_img&amp;quot;:&amp;quot;https://pcm-img.zhls.qq.com/productcenter-3a5029e3--1018824-609250206127523853/21721191429072022/e96f99efcf0a4b17ddb6c389d6cca02e.jpg&amp;quot;,&amp;quot;product_name&amp;quot;:&amp;quot;程序员修炼之道：通向务实的最高境界（第2版）(博文视点出品)&amp;quot;,&amp;quot;current_price&amp;quot;:7020,&amp;quot;first_category_id&amp;quot;:&amp;quot;106&amp;quot;,&amp;quot;product_label_name_list&amp;quot;:[&amp;quot;京东配送&amp;quot;],&amp;quot;select_tag_name_list&amp;quot;:[],&amp;quot;appuin&amp;quot;:&amp;quot;2395946309&amp;quot;,&amp;quot;isNewCpsKOL&amp;quot;:1,&amp;quot;templateId&amp;quot;:&amp;quot;list&amp;quot;}&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PW0wIHxgg3kvaBZngpdG4eFGWTIEsz78l9QiaGQazDAEYhcv7sfq2wYlAvFljYNXib2BQpe1ibEpax5J3fJy2CGmA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;800&quot; title=&quot;程序员的自我修养.png&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;▊&lt;/strong&gt;&lt;strong&gt;《&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;程序员的自我修养：链接、装载与库》&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;俞甲子，石凡，潘爱民&lt;/span&gt;&lt;span&gt;&lt;span&gt; 著&lt;/span&gt;&lt;span/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;90239&quot;&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section&gt;&lt;section data-role=&quot;list&quot;&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;本书主要介绍系统软件的运行机制和原理，涉及在Windows和Linux两个系统平台上，一个应用程序在编译、链接和运行时刻所发生的各种事项，包括：代码指令是如何保存的，库文件如何与应用程序代码静态链接，应用程序如何被装载到内存中并开始运行，动态链接如何实现，C/C++运行库的工作原理，以及操作系统提供的系统服务是如何被调用的。每个技术专题都配备了大量图、表和代码实例，力求将复杂的机制以简洁的形式表达出来。本书最后还提供了一个小巧且跨平台的C/C++运行库MiniCRT，综合展示了与运行库相关的各种技术&lt;/span&gt;。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;mpcps class=&quot;js_editor_new_cps&quot; data-templateid=&quot;list&quot; data-traceid=&quot;e4747cef-dbcd-4f70-82e6-5aa6e716001c&quot; data-goodssouce=&quot;1&quot; data-pid=&quot;101_10067200&quot; data-appuin=&quot;2395946309&quot; data-buffer=&quot;{&amp;quot;category_id&amp;quot;:10,&amp;quot;pid&amp;quot;:&amp;quot;101_10067200&amp;quot;,&amp;quot;biz_uin&amp;quot;:&amp;quot;2395946309&amp;quot;,&amp;quot;trace_id&amp;quot;:&amp;quot;e4747cef-dbcd-4f70-82e6-5aa6e716001c&amp;quot;,&amp;quot;sku_id&amp;quot;:&amp;quot;101_10067200&amp;quot;,&amp;quot;source_id&amp;quot;:2,&amp;quot;source_name&amp;quot;:&amp;quot;京东&amp;quot;,&amp;quot;audit_state&amp;quot;:1,&amp;quot;main_img&amp;quot;:&amp;quot;https://pcm-img.zhls.qq.com/productcenter-8f93e825--1018824-883587553517829823/62408030616082022/b857afce9d104402461b72007fdfc5ee.jpg&amp;quot;,&amp;quot;product_name&amp;quot;:&amp;quot;程序员的自我修养：链接、装载与库(博文视点出品)&amp;quot;,&amp;quot;current_price&amp;quot;:7800,&amp;quot;first_category_id&amp;quot;:&amp;quot;10&amp;quot;,&amp;quot;product_label_name_list&amp;quot;:[&amp;quot;京东配送&amp;quot;],&amp;quot;select_tag_name_list&amp;quot;:[],&amp;quot;appuin&amp;quot;:&amp;quot;2395946309&amp;quot;,&amp;quot;isNewCpsKOL&amp;quot;:1,&amp;quot;templateId&amp;quot;:&amp;quot;list&amp;quot;}&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;258&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;258&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/PW0wIHxgg3kvaBZngpdG4eFGWTIEsz78TibNwp0DJZTtGPP2IGZUURtoXQgurPwicz9KNsaom77tV1qJMSgv7w9w/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;800&quot; title=&quot;程序员的底层思维.jpg&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;▊《&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;程序员的底层思维》&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;张建飞 著&lt;/span&gt;&lt;/p&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;90239&quot;&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section&gt;&lt;section data-role=&quot;list&quot;&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;揭秘软件设计背后的16种底层逻辑与思维能力&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;大厂资深程序员修炼之道与思维秘籍&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;本书涵盖程序员应知应会的16种思维能力，共18章，分为三部分。第一部分主要介绍抽象思维、逻辑思维、结构化思维、批判性思维、维度思维、分类思维、分治思维、简单思维，以及成长型思维等解决日常问题的基础思维能力。第二部分结合软件行业的特点，主要介绍解耦思维、契约思维、模型思维、工具化思维、量化思维、数据思维，以及产品思维等专业思维能力。第三部分主要是对上述思维能力的综合运用实践。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;mpcps class=&quot;js_editor_new_cps&quot; data-templateid=&quot;list&quot; data-traceid=&quot;872ba9a3-7904-433f-96a0-6ff2558ba4b7&quot; data-goodssouce=&quot;1&quot; data-pid=&quot;101_13652002&quot; data-appuin=&quot;2395946309&quot; data-buffer=&quot;{&amp;quot;category_id&amp;quot;:10,&amp;quot;pid&amp;quot;:&amp;quot;101_13652002&amp;quot;,&amp;quot;biz_uin&amp;quot;:&amp;quot;2395946309&amp;quot;,&amp;quot;trace_id&amp;quot;:&amp;quot;872ba9a3-7904-433f-96a0-6ff2558ba4b7&amp;quot;,&amp;quot;sku_id&amp;quot;:&amp;quot;101_13652002&amp;quot;,&amp;quot;source_id&amp;quot;:2,&amp;quot;source_name&amp;quot;:&amp;quot;京东&amp;quot;,&amp;quot;audit_state&amp;quot;:1,&amp;quot;main_img&amp;quot;:&amp;quot;https://pcm-img.zhls.qq.com/productcenter-6a522fa5--1018824-2866067724287112580/55329151030072022/9cf74515971a571443bc894063338f87.jpg&amp;quot;,&amp;quot;product_name&amp;quot;:&amp;quot;程序员的底层思维(博文视点出品)&amp;quot;,&amp;quot;current_price&amp;quot;:10170,&amp;quot;first_category_id&amp;quot;:&amp;quot;10&amp;quot;,&amp;quot;product_label_name_list&amp;quot;:[&amp;quot;京东配送&amp;quot;],&amp;quot;select_tag_name_list&amp;quot;:[],&amp;quot;appuin&amp;quot;:&amp;quot;2395946309&amp;quot;,&amp;quot;isNewCpsKOL&amp;quot;:1,&amp;quot;templateId&amp;quot;:&amp;quot;list&amp;quot;}&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;258&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;258&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/PW0wIHxgg3kvaBZngpdG4eFGWTIEsz78WG1bMWeAJKneq85sm0azXS7ciajbumb0RkzFuGcPDMDHkAb4kCtEt8A/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;800&quot; title=&quot;技术人修炼之道：从程序员到百万高管的72项技能.jpg&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;▊&lt;/strong&gt;&lt;strong&gt;《&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;技术人修炼之道：从程序员到百万高管的72项技能&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;》&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span/&gt;&lt;p&gt;&lt;span&gt;黄哲铿 著&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;90239&quot;&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section&gt;&lt;section data-role=&quot;list&quot;&gt;&lt;section data-role=&quot;list&quot;/&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;本书旨在帮助IT技术人员提升职场核心技能、架构思维、团队管理能力、商业认知，让每一位普通的技术从业者，修炼成为“技术职场超级个体”，通过全面升级个人的底层操作系统，突破瓶颈，实现职场跃迁。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;mpcps class=&quot;js_editor_new_cps&quot; data-templateid=&quot;list&quot; data-traceid=&quot;c84cb9ef-0fba-4baf-8f63-6fd6ddf514db&quot; data-goodssouce=&quot;1&quot; data-pid=&quot;101_13045896&quot; data-appuin=&quot;2395946309&quot; data-buffer=&quot;{&amp;quot;category_id&amp;quot;:10,&amp;quot;pid&amp;quot;:&amp;quot;101_13045896&amp;quot;,&amp;quot;biz_uin&amp;quot;:&amp;quot;2395946309&amp;quot;,&amp;quot;trace_id&amp;quot;:&amp;quot;c84cb9ef-0fba-4baf-8f63-6fd6ddf514db&amp;quot;,&amp;quot;sku_id&amp;quot;:&amp;quot;101_13045896&amp;quot;,&amp;quot;source_id&amp;quot;:2,&amp;quot;source_name&amp;quot;:&amp;quot;京东&amp;quot;,&amp;quot;audit_state&amp;quot;:1,&amp;quot;main_img&amp;quot;:&amp;quot;https://pcm-img.zhls.qq.com/productcenter-9397e877--1018824-5481342878208477075/59815082129072022/e5280879fd013d6ed3d4b4ba30fcc802.jpg&amp;quot;,&amp;quot;product_name&amp;quot;:&amp;quot;技术人修炼之道：从程序员到百万高管的72项技能(博文视点出品)&amp;quot;,&amp;quot;current_price&amp;quot;:7020,&amp;quot;first_category_id&amp;quot;:&amp;quot;10&amp;quot;,&amp;quot;product_label_name_list&amp;quot;:[&amp;quot;秒杀&amp;quot;,&amp;quot;京东配送&amp;quot;],&amp;quot;select_tag_name_list&amp;quot;:[],&amp;quot;appuin&amp;quot;:&amp;quot;2395946309&amp;quot;,&amp;quot;isNewCpsKOL&amp;quot;:1,&amp;quot;templateId&amp;quot;:&amp;quot;list&amp;quot;}&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PW0wIHxgg3mTNxJdCdfFYibP8WFmld5kqUv7Dpiapt1ibLI93icvFVz5BLvyaVgAKTrXdYpQibG1dQA3CWQia3UlIR2w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;800&quot; data-width=&quot;373px&quot; title=&quot;9787121435881.png&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;▊&lt;/strong&gt;&lt;strong&gt;《&lt;/strong&gt;&lt;strong&gt;卓有成效的工程师》&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;[美] Edmond Lau 著，万学凡，顾宇 译&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;90239&quot;&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section&gt;&lt;section data-role=&quot;list&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;本书介绍一个强大的框架——杠杆率，用来推断、分析工作的有效性与影响力，研究并说明如何成为一名卓有成效的工程师。更为重要的是，本书提供了一系列可落地且经过验证的策略作为框架的补充，读者可以立即应用这些策略来提高工作成效。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;本书的内容分为三个部分，第一部分阐述提高成效的思维模式切入；第二部分深入探讨持续提升执行力及取得工作进展的关键策略；在第三部分，作者转换角度，阐述了创造长期价值的方法。通过阅读本书，读者能够获得思维启发和高价值的实践经验，成为卓有成效的工程师，并打造高效的软件工程团队。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;mpcps class=&quot;js_editor_new_cps&quot; data-templateid=&quot;list&quot; data-traceid=&quot;8e7f530e-3fd9-4385-b3bd-1b81ee8a2e84&quot; data-goodssouce=&quot;1&quot; data-pid=&quot;101_10055927617157&quot; data-appuin=&quot;2395946309&quot; data-buffer=&quot;{&amp;quot;category_id&amp;quot;:10,&amp;quot;pid&amp;quot;:&amp;quot;101_10055927617157&amp;quot;,&amp;quot;biz_uin&amp;quot;:&amp;quot;2395946309&amp;quot;,&amp;quot;trace_id&amp;quot;:&amp;quot;8e7f530e-3fd9-4385-b3bd-1b81ee8a2e84&amp;quot;,&amp;quot;sku_id&amp;quot;:&amp;quot;101_10055927617157&amp;quot;,&amp;quot;source_id&amp;quot;:2,&amp;quot;source_name&amp;quot;:&amp;quot;京东&amp;quot;,&amp;quot;audit_state&amp;quot;:1,&amp;quot;main_img&amp;quot;:&amp;quot;https://pcm-img.zhls.qq.com/productcenter-55ac317a--1018824-2647140122461268781/51515041114102022/fe104d7f0ffda22127acbf79153beeae.jpg&amp;quot;,&amp;quot;product_name&amp;quot;:&amp;quot;卓有成效的工程师 [Effective Engineer] 强大的框架 杠杆率 用来推断 分析工作的有效性与影响力 电子工业出版社 工程师高效工作&amp;quot;,&amp;quot;current_price&amp;quot;:5780,&amp;quot;first_category_id&amp;quot;:&amp;quot;10&amp;quot;,&amp;quot;product_label_name_list&amp;quot;:[],&amp;quot;select_tag_name_list&amp;quot;:[],&amp;quot;appuin&amp;quot;:&amp;quot;2395946309&amp;quot;,&amp;quot;isNewCpsKOL&amp;quot;:1,&amp;quot;templateId&amp;quot;:&amp;quot;list&amp;quot;}&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;292&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;292&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/PW0wIHxgg3k5SUhP2CiaIBQyYncM0IibagpPxiayjZbsT9dxyosvEXQ2FhZCCOO2ooMjVlodhWv5WEnlz8HvcyDVA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;800&quot; data-width=&quot;312px&quot; title=&quot;匠艺整洁之道：程序员的职业修养.jpg&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;▊&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;《&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;匠艺整洁之道：程序员的职业修养》&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;[美] 罗伯特·马丁（Robert C.Martin） 著，韩磊 译&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;90239&quot;&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section&gt;&lt;section data-role=&quot;list&quot;&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;鲍勃大叔封山之作&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;向着软件匠艺的“北极星”前进：达到了解如何写好代码的境界&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;关于应用五项核心纪律的实用且详尽的指导：测试驱动开发、重构、简单设计、协同编程和验收测试&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;开发者和团队如何提升生产力、质量和勇气&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;程序员们精诚一致的真正意义，以及每位软件专业人员都该给出的十条具体承诺&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;span/&gt;&lt;span&gt;本书&lt;span&gt;共分三部分，前两部分用实例阐释TDD在敏捷软件中的运用，以及验收测试、协同编程等常被忽视的敏捷侧面与具体策略，还探讨了颇有价值的软件设计方案相关话题；第Ⅲ部分拔地而起，直接提出十条堪称金玉良言的“规劝”，以帮助程序员成为团队基石&lt;/span&gt;。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;本书适合所有软件开发者、测试工程师及工程类院校师生，对技术团队负责人及架构师同样大有助益&lt;/span&gt;。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;mpcps class=&quot;js_editor_new_cps&quot; data-templateid=&quot;list&quot; data-traceid=&quot;47dc577c-2e77-4da3-9c93-c384a1f2ee2f&quot; data-goodssouce=&quot;1&quot; data-pid=&quot;101_13722384&quot; data-appuin=&quot;2395946309&quot; data-buffer=&quot;{&amp;quot;category_id&amp;quot;:10,&amp;quot;pid&amp;quot;:&amp;quot;101_13722384&amp;quot;,&amp;quot;biz_uin&amp;quot;:&amp;quot;2395946309&amp;quot;,&amp;quot;trace_id&amp;quot;:&amp;quot;47dc577c-2e77-4da3-9c93-c384a1f2ee2f&amp;quot;,&amp;quot;sku_id&amp;quot;:&amp;quot;101_13722384&amp;quot;,&amp;quot;source_id&amp;quot;:2,&amp;quot;source_name&amp;quot;:&amp;quot;京东&amp;quot;,&amp;quot;audit_state&amp;quot;:1,&amp;quot;main_img&amp;quot;:&amp;quot;https://pcm-img.zhls.qq.com/productcenter-9ab9e8af--1018824-6770533509815068911/08534320827072022/5873ae8780056c117c417c9552570107.jpg&amp;quot;,&amp;quot;product_name&amp;quot;:&amp;quot;匠艺整洁之道：程序员的职业修养&amp;quot;,&amp;quot;current_price&amp;quot;:10090,&amp;quot;first_category_id&amp;quot;:&amp;quot;10&amp;quot;,&amp;quot;product_label_name_list&amp;quot;:[&amp;quot;京东配送&amp;quot;],&amp;quot;select_tag_name_list&amp;quot;:[],&amp;quot;appuin&amp;quot;:&amp;quot;2395946309&amp;quot;,&amp;quot;isNewCpsKOL&amp;quot;:1,&amp;quot;templateId&amp;quot;:&amp;quot;list&amp;quot;}&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;258&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;258&quot; data-ratio=&quot;1.322&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/PW0wIHxgg3kvaBZngpdG4eFGWTIEsz785gAfbjDRCNvoXbkbFBdIXskerpFsGIkiaec33l7ETWJND87G94nSJWg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;500&quot; data-width=&quot;243px&quot; title=&quot;架构整洁之道.jpg&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;▊《架构整洁之道》&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span/&gt;&lt;p&gt;&lt;span&gt;[美] Robert C. Martin（罗伯特C.马丁） 著&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;孙宇聪 译，鄢倩 校&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;90239&quot;&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section&gt;&lt;section data-role=&quot;list&quot;&gt;&lt;section data-role=&quot;list&quot;/&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Martin在《架构整洁之道》中远不只是在为我们提供选项，他几乎是在将软件世界中横跨半个世纪的各种架构类型的经验倾囊相授，目的是让读者既能阅尽所有架构选型，又可通晓其如何决定成败。Martin也的确不负厚望，本书中充满了直接而有效的解决方案，以供读者应对自己面临的真正挑战——那些或最终成就或彻底破坏项目的挑战&lt;/span&gt;&lt;/span&gt;。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;mpcps class=&quot;js_editor_new_cps&quot; data-templateid=&quot;list&quot; data-traceid=&quot;759eba16-c256-4caf-a759-f66c3e61cd59&quot; data-goodssouce=&quot;1&quot; data-pid=&quot;101_12447192&quot; data-appuin=&quot;2395946309&quot; data-buffer=&quot;{&amp;quot;category_id&amp;quot;:10,&amp;quot;pid&amp;quot;:&amp;quot;101_12447192&amp;quot;,&amp;quot;biz_uin&amp;quot;:&amp;quot;2395946309&amp;quot;,&amp;quot;trace_id&amp;quot;:&amp;quot;759eba16-c256-4caf-a759-f66c3e61cd59&amp;quot;,&amp;quot;sku_id&amp;quot;:&amp;quot;101_12447192&amp;quot;,&amp;quot;source_id&amp;quot;:2,&amp;quot;source_name&amp;quot;:&amp;quot;京东&amp;quot;,&amp;quot;audit_state&amp;quot;:1,&amp;quot;main_img&amp;quot;:&amp;quot;https://pcm-img.zhls.qq.com/productcenter-7e55cafd--1018824-5493516862768260860/89905491329072022/d3c5d02823560bc9e756e982516a9b85.jpg&amp;quot;,&amp;quot;product_name&amp;quot;:&amp;quot;架构整洁之道(博文视点出品)&amp;quot;,&amp;quot;current_price&amp;quot;:7800,&amp;quot;first_category_id&amp;quot;:&amp;quot;10&amp;quot;,&amp;quot;product_label_name_list&amp;quot;:[&amp;quot;京东配送&amp;quot;],&amp;quot;select_tag_name_list&amp;quot;:[],&amp;quot;appuin&amp;quot;:&amp;quot;2395946309&amp;quot;,&amp;quot;isNewCpsKOL&amp;quot;:1,&amp;quot;templateId&amp;quot;:&amp;quot;list&amp;quot;}&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;292&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;292&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/PW0wIHxgg3kvaBZngpdG4eFGWTIEsz78F3JfndaIibbyejC5KmXiaibgrtibOKicNCVVH9tzNABVrHw672ouA3QYpJA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;800&quot; title=&quot;代码的艺术：用工程思维驱动软件开发.jpg&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;▊《&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;代码的艺术：用工程思维驱动软件开发（双色精装版）&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;》&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;章淼  著&lt;/span&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;90239&quot;&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section&gt;&lt;section data-role=&quot;list&quot;&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;提升软件工程能力大成之作&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;涵盖代码、文档、项目管理和实际案例解剖&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;百度技术学院【官方用书】&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;清华、IT名企精品课指定用书&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;附配套教学视频，作者在线答疑&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;本书是作者围绕软件工程能力所做的系列培训的内容汇编。这些内容来源于作者20 多年以来对软件工程的学习体会和项目实践，以及对中国工业界软件工程师的观察和教育实践。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;mpcps class=&quot;js_editor_new_cps&quot; data-templateid=&quot;list&quot; data-traceid=&quot;30a27192-aba5-4aef-8737-88fa6fe7b84e&quot; data-goodssouce=&quot;1&quot; data-pid=&quot;101_13619780&quot; data-appuin=&quot;2395946309&quot; data-buffer=&quot;{&amp;quot;category_id&amp;quot;:10,&amp;quot;pid&amp;quot;:&amp;quot;101_13619780&amp;quot;,&amp;quot;biz_uin&amp;quot;:&amp;quot;2395946309&amp;quot;,&amp;quot;trace_id&amp;quot;:&amp;quot;30a27192-aba5-4aef-8737-88fa6fe7b84e&amp;quot;,&amp;quot;sku_id&amp;quot;:&amp;quot;101_13619780&amp;quot;,&amp;quot;source_id&amp;quot;:2,&amp;quot;source_name&amp;quot;:&amp;quot;京东&amp;quot;,&amp;quot;audit_state&amp;quot;:1,&amp;quot;main_img&amp;quot;:&amp;quot;https://pcm-img.zhls.qq.com/productcenter-cdd819ba--1018824-1746808768376138002/33357091211102022/8937baaceaf42d8621acbbd630b967ce.jpg&amp;quot;,&amp;quot;product_name&amp;quot;:&amp;quot;代码的艺术：用工程思维驱动软件开发（双色精装版）(博文视点出品)&amp;quot;,&amp;quot;current_price&amp;quot;:7880,&amp;quot;first_category_id&amp;quot;:&amp;quot;10&amp;quot;,&amp;quot;product_label_name_list&amp;quot;:[&amp;quot;京东配送&amp;quot;],&amp;quot;select_tag_name_list&amp;quot;:[],&amp;quot;appuin&amp;quot;:&amp;quot;2395946309&amp;quot;,&amp;quot;isNewCpsKOL&amp;quot;:1,&amp;quot;templateId&amp;quot;:&amp;quot;list&amp;quot;}&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;42&quot; data-cropselx2=&quot;303&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;345&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/PW0wIHxgg3kvaBZngpdG4eFGWTIEsz78ibDVzWScyXsc2fdog9J4IXnIJEaKT0UHGMHkPZKCnu0VziaEJHaFcTcw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;800&quot; title=&quot;软件开发的201个原则.jpg&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;▊《软件开发的201个原则（精装版）》&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;[美] Alan M.Davis 著&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;叶王 等 译&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;90239&quot;&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section&gt;&lt;section data-role=&quot;list&quot;&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;罗振宇推荐，原著亚马逊4.5高分，豆瓣9.7分&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;首本实现轻阅读的研发字典书&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;用【简单原则】讲透软件研发重要思想&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;百度学院指定用书&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;掌握方法，效率提高不止100%&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;本书汇总了软件工程原则。原则是关于软件工程的基本原理、规则或假设，不管所选的技术、工具或语言是什么，这些原则都有效。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;全书共9章，第1章为引言，后面8章将201个软件工程的原则划分为8个大的类别：一般原则、需求工程原则、设计原则、编码原则、测试原则、管理原则、产品保证原则和演变原则。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;mpcps class=&quot;js_editor_new_cps&quot; data-templateid=&quot;list&quot; data-traceid=&quot;4da25ab7-b5a9-47d1-ae98-bef8629c5a4a&quot; data-goodssouce=&quot;1&quot; data-pid=&quot;101_13443818&quot; data-appuin=&quot;2395946309&quot; data-buffer=&quot;{&amp;quot;category_id&amp;quot;:10,&amp;quot;pid&amp;quot;:&amp;quot;101_13443818&amp;quot;,&amp;quot;biz_uin&amp;quot;:&amp;quot;2395946309&amp;quot;,&amp;quot;trace_id&amp;quot;:&amp;quot;4da25ab7-b5a9-47d1-ae98-bef8629c5a4a&amp;quot;,&amp;quot;sku_id&amp;quot;:&amp;quot;101_13443818&amp;quot;,&amp;quot;source_id&amp;quot;:2,&amp;quot;source_name&amp;quot;:&amp;quot;京东&amp;quot;,&amp;quot;audit_state&amp;quot;:1,&amp;quot;main_img&amp;quot;:&amp;quot;https://pcm-img.zhls.qq.com/productcenter-2419c4b3--1018824-6347464348872660603/29145101211102022/454b2b3b46d71b9adcfbb756c523c6f8.jpg&amp;quot;,&amp;quot;product_name&amp;quot;:&amp;quot;软件开发的201个原则（精装版）(博文视点出品)&amp;quot;,&amp;quot;current_price&amp;quot;:8280,&amp;quot;first_category_id&amp;quot;:&amp;quot;10&amp;quot;,&amp;quot;product_label_name_list&amp;quot;:[&amp;quot;京东配送&amp;quot;],&amp;quot;select_tag_name_list&amp;quot;:[],&amp;quot;appuin&amp;quot;:&amp;quot;2395946309&amp;quot;,&amp;quot;isNewCpsKOL&amp;quot;:1,&amp;quot;templateId&amp;quot;:&amp;quot;list&amp;quot;}&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86122&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p data-brushtype=&quot;text&quot;&gt;&lt;span&gt;&lt;strong&gt;书单好书任你选&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;按以下方式与博文菌互动，即有机会获赠&lt;strong&gt;以上任意一本图书&lt;/strong&gt;！&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;活动方式&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：&lt;span&gt;关注下方“博文视点Broadview”公众号，在后台回复“&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;书&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;单抽奖&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;”参与活动，届时会在参与的小伙伴中&lt;span&gt;抽取&lt;/span&gt;&lt;span&gt;&lt;strong&gt;3名&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;幸运鹅！&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;mp-common-profile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-weui-theme=&quot;light&quot; data-id=&quot;MjM5NTk0NjMwOQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/PW0wIHxgg3lICy34AaLxSSBtOGFrm6eovZRP96ic72ibb6aTQiaYEeIPd1Jl7r7wia7Bh3v8HOmOQgCQUMaTicfROgQ/0?wx_fmt=png&quot; data-nickname=&quot;博文视点Broadview&quot; data-alias=&quot;bvbooks&quot; data-signature=&quot;IT出版旗舰品牌，实时发布最新鲜的IT热点图书资讯，分享优质图书内容，打造与万千精英读者良好的互动平台。&quot; data-from=&quot;0&quot; data-is_biz_ban=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;活动时间&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：截至12月19日开奖。&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;快快拉上你的小伙伴参与进来吧~~&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;span&gt;发布：刘恩惠&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;审核：陈歆懿&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-croporisrc=&quot;https://mmbiz.qpic.cn/mmbiz_png/PW0wIHxgg3ntPMYAJur3UuYzhSDgO7Puv74VHDtgNjyJbpQvt1gicgSpjrlpDy6BheYoAmtjiaF7cdIuPkuUlFkw/0?wx_fmt=png&quot; data-cropx1=&quot;0&quot; data-cropx2=&quot;1920&quot; data-cropy1=&quot;0&quot; data-cropy2=&quot;29.8961937716263&quot; data-ratio=&quot;0.01574074074074074&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/PW0wIHxgg3ntPMYAJur3UuYzhSDgO7Pu8DQL5f0FQIuDZC87yrAuNLy4frEdlMeWkthrlzczb0RbMOBQCAwDrA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot;/&gt;&lt;span&gt; &lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;如果喜欢本文&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;欢迎&lt;/span&gt; &lt;span&gt;&lt;strong&gt;在看&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;丨&lt;/span&gt;&lt;span&gt;&lt;strong&gt;留言&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;丨&lt;/span&gt;&lt;span&gt;&lt;strong&gt;分享至朋友圈&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; 三连&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-id=&quot;92644&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-width=&quot;100%&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;span&gt; &lt;strong&gt;热文推荐 &lt;/strong&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;hr/&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;574&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;244&quot; data-ratio=&quot;0.4255555555555556&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PW0wIHxgg3m3jibtjia3lCrCvUY6N19QMZ3FjCcpuHouXkdLicQVUiaLicgR8cgSbk7RA8G427GKowhbEvVefuJp53g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;900&quot;/&gt;&lt;/p&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/section&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>a8615812dde79ab8e91cc03cad8a0a1b</guid>
<title>基于开源体系的云原生微服务治理实践与探索</title>
<link>https://toutiao.io/k/qz5wt4d</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;profile_inner&quot;&gt;
                  &lt;strong class=&quot;profile_nickname&quot;&gt;携程技术&lt;/strong&gt;
                  &lt;img class=&quot;profile_avatar&quot; id=&quot;js_profile_qrcode_img&quot; src=&quot;&quot; alt=&quot;&quot;/&gt;

                  &lt;p class=&quot;profile_meta&quot;&gt;
                  &lt;label class=&quot;profile_meta_label&quot;&gt;Weixin ID&lt;/label&gt;
                  &lt;span class=&quot;profile_meta_value&quot;&gt;ctriptech&lt;/span&gt;
                  &lt;/p&gt;

                  &lt;p class=&quot;profile_meta&quot;&gt;
                  &lt;label class=&quot;profile_meta_label&quot;&gt;About Feature&lt;/label&gt;
                  &lt;span class=&quot;profile_meta_value&quot;&gt;携程技术官方账号，分享交流成长。&lt;/span&gt;
                  &lt;/p&gt;
                &lt;/div&gt;
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>f7bfa24df85b120c385ee24fb6ab6d2d</guid>
<title>3分钟搞清楚 JVM逃逸分析</title>
<link>https://toutiao.io/k/7jeznmw</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;你好，我是田哥&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;作为一个合格java开发者都知道，基本上所有对象都是在堆上创建。但是，这里还是没有把话说绝对哈，指的是&lt;strong&gt;基本上所有&lt;/strong&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;昨天一位朋友在面试中，就说了所有对象都在堆中创建，然后背面试官一阵的嘲笑。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;开始我们的正文，我们今天来聊聊关于逃逸分析。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;逃逸分析&lt;/strong&gt;（Escape Analysis）是目前Java虚拟机中比较前沿的优化技术。这是一种可以有效减少Java 程序中同步负载和内存堆分配压力的跨函数全局数据流分析算法。通过逃逸分析，Java Hotspot编译器能够分析出一个新的对象的引用的使用范围从而决定是否要将这个对象分配到堆上。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;逃逸分析的基本原理是&lt;/strong&gt;：分析对象动态作用域，当一个对象在方法里面被定义后，它可能被外部方法所引用，例如作为调用参数传递到其他方法中，这种称为方法逃逸；甚至还有可能被外部线程访问到，譬如赋值给可以在其他线程中访问的实例变量，这种称为线程逃逸；从不逃逸、方法逃逸到线程逃逸，称为对象由低到高的不同逃逸程度。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;开启逃逸分析，编译器可以对代码进行如下优化&lt;/strong&gt;：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;同步消除：如果一个对象被逃逸分析发现只能被一个线程所访问，那对于这个对象的操作可以不同步。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;栈上分配：如果确定一个对象不会逃逸出线程之外，那让这个对象在栈上分配内存将会是一个很不错的主意，对象所占用的内存空间就可以随栈帧出栈而销毁。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;标量替换：如果一个对象被逃逸分析发现不会被外部方法访问，并且这个对象可以拆散，那么程序真正执行的时候将可能不去创建这个对象，而改为直接创建它的若干个比这个方法使用的成员变量来代替。&lt;strong&gt;将对象拆分后，可以让对象的成员变量在栈上分配和读写&lt;/strong&gt;。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;JVM中通过如下参数可以指定是否开启逃逸分析&lt;/strong&gt;：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;-XX:+DoEscapeAnalysis&lt;/code&gt; ：表示开启逃逸分析（JDK 1.7之后默认开启）。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;-XX:-DoEscapeAnalysis&lt;/code&gt; ：表示关闭逃逸分析。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;同步消除&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;线程同步本身是一个相对耗时的过程，如果逃逸分析能够确定一个变量不会逃逸出线程，无法被其他线程访问，那么这个变量的读写肯定就不会有竞争，对这个变量实施的同步措施也就可以安全地消除掉。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如以下代码：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;method&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    Object o = &lt;span&gt;new&lt;/span&gt; Object();&lt;br/&gt;    &lt;span&gt;synchronized&lt;/span&gt; (o) {&lt;br/&gt;        System.out.println(o);&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对&lt;code&gt;对象o&lt;/code&gt;加锁，但是对象o的生命周期与方法method()一样，所以不会被其他线程访问到，不会发生线程安全问题，那么在JIT编译阶段会被优化为如下所示：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;method&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    Object o = &lt;span&gt;new&lt;/span&gt; Object();&lt;br/&gt;    System.out.println(o);&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这也被称为&lt;strong&gt;锁消除&lt;/strong&gt;。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;栈上分配&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在Java虚拟机中，Java堆上分配创建对象的内存空间几乎是Java程序员都知道的常识，Java堆中的对象对于各个线程都是共享和可见的，只要持有这个对象的引用，就可以访问到堆中存储的对象数据。虚拟机的垃圾收集子系统会回收堆中不再使用的对象，但回收动作无论是标记筛选出可回收对象，还是回收和整理内存，都需要耗费大量资源。但是，存在一种特殊情况，如果逃逸分析确认对象不会逃逸出线程之外，那么就可能被优化成栈上分配。这样就无需在堆上分配内存，也无须进行垃圾回收了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如以下代码：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;main&lt;/span&gt;&lt;span&gt;(String[] args)&lt;/span&gt; &lt;span&gt;throws&lt;/span&gt; InterruptedException &lt;/span&gt;{&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = &lt;span&gt;0&lt;/span&gt;; i &amp;lt; &lt;span&gt;1000000&lt;/span&gt;; i++) {&lt;br/&gt;        alloc();&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    Thread.sleep(&lt;span&gt;100000&lt;/span&gt;);&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;alloc&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    User user = &lt;span&gt;new&lt;/span&gt; User();&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;代码很简单，就是循环创建100万次，使用alloc()方法创建100万个User对象。这里的alloc()方法中定义了User对象并没有被其他方法引用，所以符合栈上分配的要求。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;JVM参数如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;-Xmx2G -Xms2G -XX:+DoEscapeAnalysis -XX:+PrintGCDetails -XX:+HeapDumpOnOutOfMemoryError &lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;启动程序，通过jmap工具查看实例数：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;jmap -histo pid&lt;br/&gt;&lt;br/&gt;num     &lt;span&gt;#instances         #bytes  class name&lt;/span&gt;&lt;br/&gt;----------------------------------------------&lt;br/&gt;1:          3771        2198552  [B&lt;br/&gt;2:         10617        1722664  [C&lt;br/&gt;3:        104057        1664912  com.miracle.current.lock.StackAllocationTest&lt;span&gt;$User&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们可以看到程序总共创建了104057个User对象，远小于100万。我们可以关闭逃逸分析再来看下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;-Xmx2G -Xms2G -XX:-DoEscapeAnalysis -XX:+PrintGCDetails -XX:+HeapDumpOnOutOfMemoryError &lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;启动程序，通过jmap工具查看实例数：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;jmap -histo 42928&lt;br/&gt;&lt;br/&gt; num     &lt;span&gt;#instances         #bytes  class name&lt;/span&gt;&lt;br/&gt;----------------------------------------------&lt;br/&gt;   1:           628       22299176  [I&lt;br/&gt;   2:       1000000       16000000  com.miracle.current.lock.StackAllocationTest&lt;span&gt;$User&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以看到，关闭逃逸分析后总共创建了100万个User对象。对比来看，栈上分配对堆内存消耗，GC都有着重要的作用。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;标量替换&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;若一个数据已经无法再分解成更小的数据来表示了，Java虚拟机中的原始数据类型（int 、long 等数值类型及reference类型等）都不能再进一步分解了，那么这些数据就可以被称为标量。相对的，如果一个数据可以继续分解，那它就被称为聚合量（Aggregate），Java中的对象就是典型的聚合量。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;假如逃逸分析能够证明一个对象不会被方法外部访问，并且这个对象可以被拆散，那么程序真正执行的时候将可能不去创建这个对象，而改为直接创建它的若干个被这个方法使用的成员变量来代替。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有如下代码：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;main&lt;/span&gt;&lt;span&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;br/&gt;    method();&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;method&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    User user = &lt;span&gt;new&lt;/span&gt; User(&lt;span&gt;25&lt;/span&gt;);&lt;br/&gt;&lt;br/&gt;    System.out.println(user.age);&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;User&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; age;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;User&lt;/span&gt;&lt;span&gt;(&lt;span&gt;int&lt;/span&gt; age)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;this&lt;/span&gt;.age = age;&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在&lt;code&gt;method()&lt;/code&gt;方法中创建User对象，指定age为25，这里User不会被其他方法引用，也就是说它不会逃逸出方法，并且User是可以拆解为标量的。所以&lt;code&gt;alloc()&lt;/code&gt;代码会优化为如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;alloc&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;int&lt;/span&gt; age = &lt;span&gt;25&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;    System.out.println(age);&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;总结&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;尽管目前逃逸分析技术仍在发展之中，未完全成熟，但它是即时编译器优化技术的一个重要前进方向，在日后的Java虚拟机中，逃逸分析技术肯定会支撑起一系列更实用、有效的优化技术。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果你也在准备面试，记得找我，我给你做最专业面试辅导。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;欢迎加入我的知识星球：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;2.818840579710145&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/07BicZywOVtkfh91a09FywgiapFm9TjTt1dJcJsJSDDhT1FibtQy4X4gmrOdwnhSaFogqRVB7tLVnFvYBmMw2ZNqQ/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;1242&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;知识星球详情，可以进入我的博客：&lt;span&gt;&lt;strong&gt;http://woaijava.cc/blog/1&lt;/strong&gt;&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;模拟面试重点：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;快速发现你的不足，如何改正&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;回答问题方式不对，如何回答&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;复习太慢，如何快速复习&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;软实力问题，如何回答&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;传授一些面试技巧&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>