<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>c9f6780aa877506838c8a852e390772a</guid>
<title>Docker 下快速搭建 MySQL 和 Redis</title>
<link>https://toutiao.io/k/w39ytdk</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content js_underline_content             autoTypeSetting24psection&amp;#10;            &quot; id=&quot;js_content&quot;&gt;&lt;section&gt;&lt;mp-common-profile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzI0MzA2OTc4MQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/Bfv9smoHwth5nBzNr9kZshQ25yhLz08JicGiaeuWY5k8z6JHS4KYxQ2zp2lU9mjSC6PsvBlib658u3CnrSQsuCzAg/0?wx_fmt=png&quot; data-nickname=&quot;码农UP2U&quot; data-alias=&quot;&quot; data-signature=&quot;关于 Java、PHP、其他编程语言……或安全、或码农、或技术、或总结！学习交流，共同进步！码农 up to you，码农UP2U!&quot; data-from=&quot;0&quot; data-is_biz_ban=&quot;0&quot; data-weui-theme=&quot;light&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;早期文章&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.2459016393442623&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Bfv9smoHwtjkRulU9ibyGWmthOxbo86D6olNnT89mIwdwGicloBjqFHic9SmdDEwibdib0LyQQnAVicItPDVsm9KFWlg/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;1037&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;        MySQL 和 Redis 在实际的项目中已经是非常常用的环境了，在开发时也是不能缺少的，总不至于用线上环境当作开发环境来用吧。一般情况下，这样的开发环境我们都有，但是在新机器上如果没有，找人要安装包、或者自己去网上找安装包又十分的麻烦。那么，不如试试通过 Docker 来搭建这些开发环境，既轻松也省事。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;       这里安装 MySQL 5.7 和 最新版的 Redis 来进行简单的演示。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;一、安装MySQL 5.7&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;1、直接通过 docker pull 拉取 MySQL 5.7&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;makefile&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;[root@localhost ~]# docker pull mysql:5.7&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;5.7: Pulling from library/mysql&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;9a0b9cd2dfe6: Pull complete&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;c637408ee7df: Pull complete&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;4c517093c276: Pull complete&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;301cc7d68c2a: Pull complete&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;17ca9bf9231a: Pull complete&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;9ae101e5c786: Pull complete&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;04baa409344e: Pull complete&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;f0b6015bf853: Pull complete&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;6005bb052ef8: Pull complete&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;99f303d57050: Pull complete&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;307a9a80c1df: Pull complete&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;Digest: sha256:0e3435e72c493aec752d8274379b1eac4d634f47a7781a7a92b8636fa1dc94c1&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;Status: Downloaded newer image for mysql:5.7&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;docker.io/library/mysql:5.7&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2、查看拉取下来的镜像&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cs&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;[&lt;span class=&quot;code-snippet__meta&quot;&gt;root@localhost ~&lt;/span&gt;]&lt;span class=&quot;code-snippet__meta&quot;&gt;# docker images&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;REPOSITORY   TAG       IMAGE ID       CREATED       SIZE&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;mysql        &lt;span class=&quot;code-snippet__number&quot;&gt;5.7&lt;/span&gt;       eef0fab001e8   &lt;span class=&quot;code-snippet__number&quot;&gt;2&lt;/span&gt; weeks ago   &lt;span class=&quot;code-snippet__number&quot;&gt;495&lt;/span&gt;MB&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;3.启动 MySQL 5.7&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;nginx&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attribute&quot;&gt;docker&lt;/span&gt; run -p &lt;span class=&quot;code-snippet__number&quot;&gt;3306&lt;/span&gt;:&lt;span class=&quot;code-snippet__number&quot;&gt;3306&lt;/span&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;--name mysql &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;-v /mydata/mysql/log:/var/log/mysql &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;-v /mydata/mysql/data:/var/lib/mysql &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;-v /mydata/mysql/conf:/etc/mysql/conf &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;-e MYSQL_ROOT_PASSWORD=root &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;-d mysql:&lt;span class=&quot;code-snippet__number&quot;&gt;5&lt;/span&gt;.&lt;span class=&quot;code-snippet__number&quot;&gt;7&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;        这里需要说明一下，-e 用来设置环境变量，这里设置 MySQL 5.7 的 root 密码为 root。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;4.查看 Docker 运行的容器&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;perl&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;[root@localhost containers]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;CONTAINER ID   IMAGE       COMMAND                  CREATED         STATUS         PORTS NAMES&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;4&lt;/span&gt;f6de6ccec9f   mysql:&lt;span class=&quot;code-snippet__number&quot;&gt;5.7&lt;/span&gt;   &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;docker-entrypoint.s…&quot;&lt;/span&gt;   &lt;span class=&quot;code-snippet__number&quot;&gt;3&lt;/span&gt; seconds ago   Up &lt;span class=&quot;code-snippet__number&quot;&gt;2&lt;/span&gt; seconds   &lt;span class=&quot;code-snippet__number&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;code-snippet__number&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;code-snippet__number&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;code-snippet__number&quot;&gt;0&lt;/span&gt;:&lt;span class=&quot;code-snippet__number&quot;&gt;3306&lt;/span&gt;-&amp;gt;&lt;span class=&quot;code-snippet__number&quot;&gt;3306&lt;/span&gt;/tcp, :::&lt;span class=&quot;code-snippet__number&quot;&gt;3306&lt;/span&gt;-&amp;gt;&lt;span class=&quot;code-snippet__number&quot;&gt;3306&lt;/span&gt;/tcp, &lt;span class=&quot;code-snippet__number&quot;&gt;33060&lt;/span&gt;/tcp   mysql&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;5.&lt;/span&gt;&lt;span&gt;创建 my.conf 文件并重启 MySQL&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;        在上面的步骤虽然挂载了 conf 目录，但是在 conf 目录下并没有具体的配置文件，这里可以在 /mydata/mysql/conf 目录下创建一个 my.conf 文件作为 mysql 的配置文件（去找一份现成的配置改改，或者直接用现成，改也不用改）。创建好文件以后，重启 MySQL 容器，命令如下：&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;perl&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;[root@localhost containers]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;4&lt;/span&gt;f&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;[root@localhost containers]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;CONTAINER ID   IMAGE       COMMAND                  CREATED         STATUS         PORTS&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                  NAMES&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;4&lt;/span&gt;f6de6ccec9f   mysql:&lt;span class=&quot;code-snippet__number&quot;&gt;5.7&lt;/span&gt;   &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;docker-entrypoint.s…&quot;&lt;/span&gt;   &lt;span class=&quot;code-snippet__number&quot;&gt;2&lt;/span&gt; minutes ago   Up &lt;span class=&quot;code-snippet__number&quot;&gt;2&lt;/span&gt; seconds   &lt;span class=&quot;code-snippet__number&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;code-snippet__number&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;code-snippet__number&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;code-snippet__number&quot;&gt;0&lt;/span&gt;:&lt;span class=&quot;code-snippet__number&quot;&gt;3306&lt;/span&gt;-&amp;gt;&lt;span class=&quot;code-snippet__number&quot;&gt;3306&lt;/span&gt;/tcp, :::&lt;span class=&quot;code-snippet__number&quot;&gt;3306&lt;/span&gt;-&amp;gt;&lt;span class=&quot;code-snippet__number&quot;&gt;3306&lt;/span&gt;/tcp, &lt;span class=&quot;code-snippet__number&quot;&gt;33060&lt;/span&gt;/tcp   mysql&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;6. 测试连接&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;        上面的步骤就已经完成了 MySQL 5.7 的安装，我们可以通过命令行，或者 Navicate 工具连接 MySQL 进行测试。发现 MySQL 可以被 Navicate 进行远程连接。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;二、安装 Redis&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;        Redis 的安装与 MySQL 的安装基本是一样的，这里直接上操作。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;1、&lt;span&gt;直接通过 docker pull 拉取 Redis&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;makefile&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;[root@localhost containers]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;Using default tag: latest&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;latest: Pulling from library/redis&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;a603fa5e3b41: Pull complete&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;77631c3ef092: Pull complete&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;ed3847cf62b8: Pull complete&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;261a8b530567: Pull complete&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;7d9005a8af6d: Pull complete&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;828da1afb5be: Pull complete&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;Digest: sha256:1e3207c292225b6dd21cb74d59255748a50e8f739dd983040df38fa913927cf1&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;Status: Downloaded newer image for redis:latest&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;docker.io/library/redis:latest&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;span/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2、创建 Redis 的配置文件并启动 Redis&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;        我们在 /mydata/redis/conf 目录下创建一个 Redis 的配置文件，这里一样是找个现成的配置文件即可。&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;typescript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;[root&lt;span class=&quot;code-snippet__meta&quot;&gt;@localhost&lt;/span&gt; conf]# docker run -d -p &lt;span class=&quot;code-snippet__number&quot;&gt;6379&lt;/span&gt;:&lt;span class=&quot;code-snippet__number&quot;&gt;6379&lt;/span&gt; --name mall-redis -v /mydata/redis/data:&lt;span class=&quot;code-snippet__regexp&quot;&gt;/data -v /my&lt;/span&gt;data/redis/conf:&lt;span class=&quot;code-snippet__regexp&quot;&gt;/etc/&lt;/span&gt;redis redis redis-server /etc/redis/redis.conf&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;6284&lt;/span&gt;d4089225fb0c311507cc14d11ca9e4d4ca02dd48f766bf70c604a1ccbcb3&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;        启动 MySQL 时没有 my.conf 文件是可以启动的，启动 Redis 的时候因为我们要指定一个配置文件，如果没有配置文件，则 Redis 会启动失败。因此提前准备一份 Redis 的配置文件即可。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;3、修改配置并进行远程连接&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;        Redis 的默认配置不支持远程访问，只需要修改配置文件中的 bind 参数，并给 Redis 加一个密码，或者关掉它的保护模式的参数就可以了。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;4、让容器可以开机自启动&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;        让我们的 MySQL 和 Redis 随着虚拟机的启动而启动，只需要使用 docker up --restart=always 进行设置即可。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;        &lt;/span&gt;到此，一份Docker快速搭建MySQL和Redis的教程就完毕了！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.0712962962962963&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Bfv9smoHwthBDooApBDUM9yqM6BWHMOaJyrXzMxqibI7B90xNgZswWSVSatF56vMAicAA56UmJkc2rQlDUARycYQ/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;公众号内回复 【mongo】 下载 SpringBoot 整合操作 MongoDB 的文档。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;公众号内回复 【&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;cisp知识整理&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;】 下载 CISP 读书笔记。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;公众号内&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;回复【java开发手册】获取《Java开发手册》黄山版。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;mp-common-profile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzI0MzA2OTc4MQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/Bfv9smoHwth5nBzNr9kZshQ25yhLz08JicGiaeuWY5k8z6JHS4KYxQ2zp2lU9mjSC6PsvBlib658u3CnrSQsuCzAg/0?wx_fmt=png&quot; data-nickname=&quot;码农UP2U&quot; data-alias=&quot;&quot; data-signature=&quot;关于 Java、PHP、其他编程语言……或安全、或码农、或技术、或总结！学习交流，共同进步！码农 up to you，码农UP2U!&quot; data-from=&quot;0&quot; data-is_biz_ban=&quot;0&quot; data-weui-theme=&quot;light&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.36484375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Bfv9smoHwth5nBzNr9kZshQ25yhLz08JHWsQdz8yVn3MVh22hia7NFoPyNJz4ZI7XUnMa9xM50TJRqPkWf7BRibQ/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;mp-style-type data-value=&quot;3&quot;/&gt;&lt;/p&gt;&lt;/div&gt;

          
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>27f599f1fd5ec947119b762b6b5fdd5a</guid>
<title>Java 高级用法，写个代理侵入你 ?</title>
<link>https://toutiao.io/k/xjbpbso</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大家好，我是小菜。一个希望能够成为 &lt;strong&gt;吹着牛X谈架构&lt;/strong&gt; 的男人！如果你也想成为我想成为的人，不然点个关注做个伴，让小菜不再孤单！&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;本文主要介绍 &lt;code&gt;Java高级用法之Insrument&lt;/code&gt;&lt;/p&gt;&lt;p&gt;如有需要，可以参考&lt;/p&gt;&lt;p&gt;如有帮助，不忘 &lt;strong&gt;点赞&lt;/strong&gt; ❥&lt;/p&gt;&lt;p&gt;微信公众号已开启，&lt;strong&gt;菜农曰&lt;/strong&gt;，没关注的同学们记得关注哦！&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;小王是一个刚来不久的妹子，啊呸，是一个刚来不久的程序媛，经常垂头丧气的~让我很是不解，终于有一天我怕小王哪天想不开离职了岂不是会增加我的工作量（&lt;code&gt;部门为数不多的妹子 - 1&lt;/code&gt;）？于是乎，我主动找小王进行了谈心找到了问题所在，原来是小王编程经验不足，不知道如何巧妙的进行日志打印，那么因果关系就总结出来了：&lt;code&gt;经验不足导致编码经常出错，编码出错由于日志未打印导致排查困难，排查困难导致开发抑郁&lt;/code&gt;。查到问题的原因，那么进行对症下药即可~&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其实以上问题我相信很多小伙伴都遇到过，开发过程中未出现的错误在上线后就频频出现，那么只能不断的进行添加日志打印然后再打包上传进行问题跟踪，一天的时间绝大部分都浪费在了打包上传的上面。那么能不能直接进行bug跟踪，然后查看到问题出错的所在？这种需求不亚于&lt;code&gt;给奔跑中的汽车更换轮胎&lt;/code&gt;，匪夷所思却又无可奈何~其实有开发经验的小伙伴已经想出来一个中间件，那就是 &lt;code&gt;Arthas&lt;/code&gt;！但是这篇文章不是介绍如何使用 &lt;code&gt;Archas&lt;/code&gt;，而是我们自己能不能实现这种动态调试的技能？那么就进入我们今天的整体 --- &lt;strong&gt;Java Agent&lt;/strong&gt; 技术&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;Java Instrument&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个玩意并不是什么 Java 的新特性，早在 JDK 1.5 的时候就诞生了，位于  &lt;code&gt;java.lang.instrument.Instrumentation&lt;/code&gt; 中，它的作用就是用来在运行的时候重新加载某个类的 calss 文件的 &lt;code&gt;api&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这种类的实现方式其实是一种 &lt;code&gt;Java Agent&lt;/code&gt; 技术，我们这里可以顺带了解一下什么是 Java Agent。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;一、Java Agent&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;代理这个词对于我们开发人员来说并不默认，我们经常用到的 AOP 面向切面编程用到的就是代理方式。它可以动态切入某个面，进行代码增强 。这种不用重复补充轮子的方式大大增加了我们开发效率，那么这里捕获到了一个关键词 &lt;code&gt;动态&lt;/code&gt;。那么 Java Agent 如何实现？那就可以说到 &lt;strong&gt;JVMTI（JVM Tool Interface）&lt;/strong&gt; ，这是Java 虚拟机对外提供的 Native 编程接口，通过它我们可以获取运行时JVM的诸多信息，而 &lt;strong&gt;Agent&lt;/strong&gt; 是一个运行在目标 JVM 的特定程序，它可以从目标 JVM 获取数据，然后将数据传递给外部进程，然后外部进程可以根据获取到的数据进行动态Enhance。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.43869209809264303&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/P7WuIzkp9iaVIYBybn9HXR4aGZPlXwotVb8xaUegOpySU7WibQEMgM4hW0fUO8ZsBoib3RDqryqy9azQgDJX169lg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;367&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那么 Java Agent 什么时候能够加载？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那么我们关注的是 &lt;code&gt;运行时&lt;/code&gt; ，这样子就能满足我们动态加载的需求。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;而 Java Agent看上去这么高大上，我们要如何编写？当然在 JDK 1.5 之前，实现起来是具有困难性的，我们需要编写 Native 代码来实现，那么 JDK 1.5 之后我们就可以利用上面说到的 &lt;code&gt;Java Instrument&lt;/code&gt; 来实现了！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;首先我们先了解一下 &lt;strong&gt;Instrumentation&lt;/strong&gt; 这个接口，其中有几个方法：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;addTransformer(ClassFileTransformer transformer, boolean canRetransform)&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;加入一个转换器 &lt;strong&gt;Transformer&lt;/strong&gt; ，之后所有的目标类加载都会被 Transformer 拦截，可自定义实现 &lt;strong&gt;ClassFileTransformer&lt;/strong&gt; 接口，重写该接口的唯一方法 &lt;code&gt;transform()&lt;/code&gt; 方法，返回值是转换后的类字节码文件&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;retransformClasses(Class&amp;lt;?&amp;gt;... classes)&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对 JVM 已经加载的类重新触发类加载，使用上面自定义的转换器进行处理。该方法可以修改方法体，常量池和属性值，但不能新增、删除、重命名属性或方法，也不能修改方法的签名&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;redefineClasses(ClassDefinition... definitions)&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;此方法用于替换类的定义，而不引用现有类文件字节。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;getObjectSize(Object objectToSize)&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;获取一个对象的大小&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;appendToBootstrapClassLoaderSearch(JarFile jarfile)&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;将一个 jar 文件添加到 bootstrap classload 的 classPath 中&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;获取当前被 JVM 加载的所有类对象&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;redefineClasses 和 retransformClasses 补充说明&lt;/p&gt;&lt;p&gt;redefineClasses 是自己提供字节码文件替换掉已存在的 class 文件&lt;/p&gt;&lt;p&gt;retransformClasses 是在已存在的字节码文件上修改后再进行替换&lt;/p&gt;&lt;p&gt;如果一个被修改的方法已经在栈帧中存在，则栈帧中的方法会继续使用旧字节码运行，新字节码会在新栈帧中运行&lt;/p&gt;&lt;p&gt;两个方法都是只能改变类的方法体、常量池和属性值，但不能新增、删除、重命名属性或方法，也不能修改方法的签名&lt;/p&gt;&lt;/blockquote&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;二、实现 Agent&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;1、编写方法&lt;/span&gt;&lt;span/&gt;&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上面我们已经说到了有两处地方可以进行 Java Agent 的加载，分别是 &lt;code&gt;目标JVM启动时加载&lt;/code&gt; 和 &lt;code&gt;目标JVM运行时加载&lt;/code&gt;，这两种不同的加载模式使用不同的入口函数：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1、&lt;strong&gt;JVM 启动时加载&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;入口函数如下所示：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt; &lt;span&gt;// 函数1&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;premain&lt;/span&gt;&lt;span&gt;(String agentArgs, Instrumentation inst)&lt;/span&gt;&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;// 函数2&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;premain&lt;/span&gt;&lt;span&gt;(String agentArgs)&lt;/span&gt;&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;JVM 首先寻找&lt;code&gt;函数1&lt;/code&gt;，如果没有发现函数1，则会寻找函数2&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2、&lt;strong&gt;JVM 运行时加载&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;入口函数如下所示：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;// 函数1&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;agentmain&lt;/span&gt;&lt;span&gt;(String agentArgs, Instrumentation inst)&lt;/span&gt;&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;// 函数2&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;agentmain&lt;/span&gt;&lt;span&gt;(String agentArgs)&lt;/span&gt;&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;与上述一致，JVM 首先寻找&lt;code&gt;函数1&lt;/code&gt;，如果没有发现函数1，则会寻找函数2&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这两组方法的第一个参数 &lt;code&gt;agentArgs&lt;/code&gt; 是随同 “-javaagent” 一起传入的程序参数，如果这个字符串代表了多个参数，就需要自己解析这参数，&lt;code&gt;inst&lt;/code&gt; 是 Instrumentation 类型的对象，是 JVM 自己传入的，我们可以 拿这个参数进行参数的增强操作。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.629742033383915&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/P7WuIzkp9iaVIYBybn9HXR4aGZPlXwotVT32sO2qBkReaDAMjCHR4SH5K1pQ7icShDXREebjO3NvvOf7kgjlAPtg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;659&quot;/&gt;&lt;/figure&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;2、声明方法&lt;/span&gt;&lt;span/&gt;&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当定义完这两组方法后，要使之生效还需要手动声明，声明方式有两种：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1、&lt;strong&gt;使用 MANIFEST.MF 文件&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们需要创建&lt;code&gt;resources/META-INF.MANIFEST.MF&lt;/code&gt; 文件，当 jar包打包时将文件一并打包，文件内容如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;Manifest-Version: 1.0&lt;br/&gt;Can-Redefine-Classes: true   # true表示能重定义此代理所需的类，默认值为 false（可选）&lt;br/&gt;Can-Retransform-Classes: true    # true 表示能重转换此代理所需的类，默认值为 false （可选）&lt;br/&gt;Premain-Class: cbuc.life.agent.MainAgentDemo   #premain方法所在类的位置&lt;br/&gt;Agentmain-Class: cbuc.life.agent.MainAgentDemo   #agentmain方法所在类的位置&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2、&lt;strong&gt;如果是maven项目，在pom.xml加入&lt;/strong&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8429003021148036&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/P7WuIzkp9iaVIYBybn9HXR4aGZPlXwotVpycI0YOnJXoufYc2uf2Wtgd8icyEbTxLHOW3qkGIgc4VgNMMJngRdJw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;662&quot;/&gt;&lt;/figure&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;3、指定 agent&lt;/span&gt;&lt;span/&gt;&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;要让目标JVM认你这个 Agent ，你就要给目标JVM介绍这个 Agent&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1、&lt;strong&gt;JVM 启动时加载&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们直接在 JVM 启动参数中加入 -javaagent 参数并指定 jar 文件的位置&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 将该类编译成 class 文件&lt;/span&gt;&lt;br/&gt;javac TargetJvm.java&lt;br/&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 指定agent程序并运行该类&lt;/span&gt;&lt;br/&gt;java -javaagent:./java-agent.jar TargetJvm&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2、&lt;strong&gt;JVM 运行时加载&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;要实现动态调试，我们就不能将目标JVM停机后再重新启动，这不符合我们的初衷，因此我们可以使用 JDK 的 Attach Api 来实现运行时挂载 Agent。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Attach Api 是 SUN 公司提供的一套扩展 API，用来向目标 JVM 附着（attach）在目标程序上，有了它我们可以很方便地监控一个 JVM。Attach Api 对应的代码位于 &lt;code&gt;com.sun.tools.attach&lt;/code&gt;包下，提供的功能也非常简单：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;列出当前所有的 JVM 实例描述&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Attach 到其中一个 JVM 上，建立通信管道&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;让目标JVM加载Agent&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;该包下有一个类 &lt;code&gt;VirtualMachine&lt;/code&gt;，它提供了两个重要的方法：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;VirtualMachine attach(String var0)&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;传递一个进程号，返回目标 JVM 进程的 vm 对象，该方法是 JVM进程之间指令传递的桥梁，底层是通过 socket 进行通信&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;void loadAgent(String var1)&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;该方法允许我们将 agent 对应的 jar 文件地址作为参数传递给目标 JVM，目标 JVM 收到该命令后会加载这个 Agent&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有了 Attach Api ，我们就可以创建一个java进程，用它attach到对应的jvm，并加载agent。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以下是简单的 Attach 代码实现：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7431850789096126&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/P7WuIzkp9iaVIYBybn9HXR4aGZPlXwotVcqibYibO5gSyMP8ee7icqg1aPD031ONktVj31Mra5Y2ZVXs5wxM67KksA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;697&quot;/&gt;&lt;/figure&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;注意：在mac上安装了的jdk是能直接找到 VirtualMachine 类的，但是在windows中安装的jdk无法找到，如果你遇到这种情况，请手动将你jdk安装目录下：lib目录中的tools.jar添加进当前工程的Libraries中。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上面代码十分简易的实现了 Attach 的方式，通过寻找当前系统中所有运行的 JVM 进程，然后通过比对 PID 来筛选出目标JVM，然后让 Agent 附着在目标 JVM 上。当然这边已经简易到直接在代码中指定目标JVM的 PID，这种方式在实际生产中是十分不可取的，我们可以通过动态参数的方式传入 PID~！而 Attach 的执行原理也不复杂，简单流程如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4829821717990275&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/P7WuIzkp9iaVIYBybn9HXR4aGZPlXwotVp2NPibLnvp3ibGgIbVBkTg6Uq6yUiaqfzuq7WeS2hxKcozdPe4Hiaib1eibg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;617&quot;/&gt;&lt;/figure&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;三、案例说明&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们上述简单聊了下 Java Agent 的实现过程，那我们下面也简单写个案例来理解一下 Java Agent 的实现过程~&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5486111111111112&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/P7WuIzkp9iaVIYBybn9HXR4aGZPlXwotVL4IndyvJQ35DLtz2MbIo0GxyicVpjdWVec4J3ibYdYWontZNAwJic0ia9w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;432&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们上面说到可以使用 Java Instrumentation 来完成动态类修改的功能，并且在 Instrumentation 接口中我们可以通过 &lt;code&gt;addTransformer()&lt;/code&gt; 方法来增加一个类转换器，类转换器由类 ClassFileTransformer 接口实现。该接口中有一个唯一的方法 &lt;code&gt;transform()&lt;/code&gt; 用于实现类的转换，也就是我们可以增强类处理的地方！当类被加载的时候就会调用 &lt;code&gt;transform()&lt;/code&gt;方法，实现对类加载的事件进行拦截并返回转换后新的字节码，通过 &lt;code&gt;redefineClasses()&lt;/code&gt;或&lt;code&gt;retransformClasses()&lt;/code&gt;都可以触发类的重新加载事件。&lt;/p&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;实际操作&lt;/span&gt;&lt;span/&gt;&lt;/h5&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;1）准备目标JVM&lt;/span&gt;&lt;span/&gt;&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们这里直接使用一个 SpringBoot 项目来试验，方便大家增强改造~ 项目结构如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;target-jvm&lt;br/&gt;    ├─src&lt;br/&gt;       ├─main&lt;br/&gt;          ├─java&lt;br/&gt;             └─cbuc&lt;br/&gt;                 └─life&lt;br/&gt;                     └─targetjvm&lt;br/&gt;                         ├─controller&lt;br/&gt;                         |     └─TestController.java&lt;br/&gt;                         └─service&lt;br/&gt;                         |     └─SimpleService.java&lt;br/&gt;                         └─TargetJvmApplication.java&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其中 &lt;code&gt;TestController&lt;/code&gt; 和 &lt;code&gt;SimpleService&lt;/code&gt; 两个类的内容也很简单，直接贴代码&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.9379014989293362&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/P7WuIzkp9iaVIYBybn9HXR4aGZPlXwotVOlatXeqrXJ3zM220b3928ByiaicGfwWTkdhVnLoxlyJOrFUfEFvSTMiaw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;467&quot;/&gt;&lt;/figure&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;1.3026819923371646&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/P7WuIzkp9iaVIYBybn9HXR4aGZPlXwotVMDPNPXuGR8H5COPop1yT3GwAa77HR0AXYZf9iazENW272DMo127nohw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;783&quot;/&gt;&lt;/figure&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;2）准备 Agent&lt;/span&gt;&lt;span/&gt;&lt;/h5&gt;&lt;h6 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;1、编写方法&lt;/span&gt;&lt;span/&gt;&lt;/h6&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然后编写我们的&lt;code&gt;Agent&lt;/code&gt; jar包。因为懒惰，所以我这边将 premain 和 agentmain 两个方法写在同一个 jar 包中，然后分别以 &lt;code&gt;启动时&lt;/code&gt; 和 &lt;code&gt;运行时&lt;/code&gt; 来模拟场景~&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.359823399558499&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/P7WuIzkp9iaVIYBybn9HXR4aGZPlXwotVpUkSLSE3nMZDk0YtpicknPEBynFrh8pDdj2L2GJLibQqf9zkV0R4kYUw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;906&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;很简单，一个类中包含了我们需要的所有功能~ 防止图片内容过于拥挤，小菜贴心地分别粘贴出核心代码：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.39144215530903326&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/P7WuIzkp9iaVIYBybn9HXR4aGZPlXwotVCWxibGj1eNJ4qcYmQaiaWmGnAcHyIUvibPv6e0uPxgOOdWF44ibobsCib2g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;631&quot;/&gt;&lt;/figure&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5506555423122765&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/P7WuIzkp9iaVIYBybn9HXR4aGZPlXwotVQy5aOVgyvQxOE90VwCAutt5mQC5G92kM1dumJzBLohlYCKevdTBgKQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;839&quot;/&gt;&lt;/figure&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.8066666666666666&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/P7WuIzkp9iaVIYBybn9HXR4aGZPlXwotVZyvpMicactCbPZfFRREA3ovCsSSJq0nMKU5chiaDM00MvyWESmhPbeWw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;900&quot;/&gt;&lt;/figure&gt;&lt;h6 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;2）声明方法&lt;/span&gt;&lt;span/&gt;&lt;/h6&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然后将 Agent 打包，打包的时候需要在 pom.xml 文件中添加以下内容&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.8429003021148036&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/P7WuIzkp9iaVIYBybn9HXR4aGZPlXwotVpycI0YOnJXoufYc2uf2Wtgd8icyEbTxLHOW3qkGIgc4VgNMMJngRdJw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;662&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然后运行&lt;code&gt;mvn assembly:assembly&lt;/code&gt; 既可&lt;/p&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;3）启动 Agent&lt;/span&gt;&lt;span/&gt;&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当我们已经准备好了两个 jar 包便可以开始测试了！&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.15091678420310295&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/P7WuIzkp9iaVIYBybn9HXR4aGZPlXwotVALDZhVad3nlcrupVaiaJno7URPo6eRt8oZp9lvc8lX0uxDJbByT1SQQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;709&quot;/&gt;&lt;/figure&gt;&lt;h6 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;strong&gt;1、启动时加载&lt;/strong&gt;&lt;/span&gt;&lt;span/&gt;&lt;/h6&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;nohup java -javaagent:./java-agent-jar-with-dependencies.jar -jar target-jvm.jar &amp;amp;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们直接启动时添加参数，带上我们的 Agent jar包&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6170376055257099&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/P7WuIzkp9iaVIYBybn9HXR4aGZPlXwotVtoISAQ3hyoF8zO2rmicdzpvr6PKcRFM1wPueR4YWjpXBrBzLssQQjAQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1303&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果并没有让小菜太尴尬，成功的实现我们想要的功能，但是这只是启动时加载，明显不是我们想要的~ 我们来试下运行时如何加载&lt;/p&gt;&lt;h6 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;2、运行时加载&lt;/span&gt;&lt;span/&gt;&lt;/h6&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.3779527559055118&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/P7WuIzkp9iaVIYBybn9HXR4aGZPlXwotVLk1UkyicFfnLrVoT4jMzia5NQicDu8fcKSyOTzs7mHldHIKF8Xk9yFib1A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1651&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;正常运行下，方法并没有做耗时统计，我们的需求就来了，我们想要统计该方法的耗时，首先获取该进程ID&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.06811145510835913&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/P7WuIzkp9iaVIYBybn9HXR4aGZPlXwotVzg7YScB7mvtMmSs92ibhypicUmVrBZKKpDt0xTP0dRlIdnPRn3vAicCtA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2261&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然后通过 Attach 方式（调用controller 的 active() 方法）附着 Agent，我们可以实时查看控制台&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.2314540059347181&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/P7WuIzkp9iaVIYBybn9HXR4aGZPlXwotVD16czCMYa5WUuv3aiaurfUrJPe7DGZPce4H6Z2efQicz0Ix6IZsN5iazw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1685&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;已经可以看到 Agent 似乎已经成功附着了，然后我们继续请求 test 接口&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.3365553602811951&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/P7WuIzkp9iaVIYBybn9HXR4aGZPlXwotVzicdQNegz4PSsnibicsF7kiaQ5tTl1RH40oCm01Xj9u9XQUlIibB42W4xVg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1138&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以发现 resolve 方法已经被我们增强了！&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;四、题外话&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上面我们已经简单的实现了动态操作目标类文件，文章开头就说明了&lt;code&gt;给奔跑中的汽车更换轮胎&lt;/code&gt;是一个匪夷所思却又无可奈何的需求，但是这个需求能不能让别人实现，其实是可以的，而这个就是小菜的主要目的，我们了解了如何实现动态换轮胎的原理后，当我们运用其成熟的中间件也能更加应手而不会不知所措，知识不能让我们只学会&lt;code&gt;卧槽&lt;/code&gt;两个字，而是当别人实现的时候我们能默默思考，思考后再说出&lt;code&gt;牛逼&lt;/code&gt;~！感兴趣的同学不妨拉取一下源码演练一番：Arthas gitee，已经使用过类似 Arthas 或 BTrace 的同学，看完相信会更加了解其工作运行原理，没使用过的同学下次用到的时候也不会那么战战兢兢！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不要空谈，不要贪懒，和小菜一起做个&lt;code&gt;吹着牛X做架构&lt;/code&gt;的程序猿吧~点个关注做个伴，让小菜不再孤单。咱们下文见！&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;今天的你多努力一点，明天的你就能少说一句求人的话！&lt;em&gt;我是小菜，一个和你一起变强的男人。&lt;/em&gt; &lt;code&gt;💋&lt;/code&gt;微信公众号已开启，&lt;strong&gt;菜农曰&lt;/strong&gt;，没关注的同学们记得关注哦！&lt;/p&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>2be2ef5e3fdabee9e1662b181624abc6</guid>
<title>Solidity 非权威开发指南（3）： OpenZepplin</title>
<link>https://toutiao.io/k/ye6ah6c</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;post-header&quot;&gt;
&lt;h1 class=&quot;title&quot;&gt;Solidity 非权威开发指南（3）： OpenZepplin&lt;/h1&gt;
&lt;p class=&quot;meta&quot;&gt;胡键 Posted at — Dec 4, 2022
&lt;span class=&quot;meta&quot; id=&quot;busuanzi_container_page_pv&quot;&gt;阅读 &lt;span id=&quot;busuanzi_value_page_pv&quot;/&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;markdown&quot;&gt;
&lt;p&gt;OpenZepplin 已经成为如今合约开发的事实标准，很难找到一个完全不使用它而完全从零自行打造合约系统的例子。除非要开发一个竞品，摆脱它既无必要，也不经济，同时还浪费时间。&lt;/p&gt;
&lt;p&gt;在一般语境下，OpenZepplin 指代的其实是：OpenZepplin Contract，一组合约开发的可重用包。同时，由于合约升级相对特殊，它还专门提供了用于编写可升级合约的包。关于可升级合约，本系列会另行说明，本文对此将直接略过。&lt;/p&gt;
&lt;p&gt;OpenZepplin 的各部分组成如下。&lt;/p&gt;
&lt;h2 id=&quot;interfaces支持接口&quot;&gt;interfaces，支持接口&lt;/h2&gt;
&lt;h3 id=&quot;for-tokens&quot;&gt;for tokens&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;IERC20 / IERC721 / IERC777 / IERC1155
&lt;ul&gt;
&lt;li&gt;关于 ERC20/721/1155，已有很多文章介绍过，不必在赘述。&lt;/li&gt;
&lt;li&gt;ERC777 可以简单理解问 ERC20 的升级版，提供了向后兼容同时涵盖更多场景，并提供了更多的接口。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;draft-IERC2612
&lt;ul&gt;
&lt;li&gt;对于 ERC20 permit 的扩展，允许 owner 只通过签名就可以授权。这带来了几个好处：
&lt;ul&gt;
&lt;li&gt;owner 可以只提供签名，但不必亲自执行 permit 方法（如元交易场景），可参见&lt;a href=&quot;https://mp.weixin.qq.com/s/5yPo2h_2qN0toe9_CdURNg&quot;&gt;这篇 Uniswap 文章&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;更好的用户体验和更低的 gas fee，因为可以将若干操作打包在一起一次执行。而不像 erc20 中 approve 和 transfer 因为是两个不同人，得分别执行。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;IERC1363
&lt;ul&gt;
&lt;li&gt;扩展 erc20 行为，提供：transfer and call 和 approve and call。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;IERC2981
&lt;ul&gt;
&lt;li&gt;nft royal 规范，不过请注意：不见得所有市场都支持它。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;IERC4626

&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;for-upgrade&quot;&gt;for upgrade&lt;/h3&gt;

&lt;h3 id=&quot;for-flash-load&quot;&gt;for flash load&lt;/h3&gt;

&lt;h3 id=&quot;for-introspection&quot;&gt;for introspection&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;IERC165

&lt;/li&gt;
&lt;li&gt;IERC1820
&lt;ul&gt;
&lt;li&gt;合约接口注册表规范，熟悉 web service 历史的开发者应该记得“服务注册表”这个概念。此规范的目前与之类似，帮助实现一个注册表合约，让账户注册：

&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;for-cryptography&quot;&gt;for cryptography&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;IERC1271
&lt;ul&gt;
&lt;li&gt;合约签名验证标准接口，注意，此处签名是合约产生，而非外部账户。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;supporting支撑代码&quot;&gt;supporting，支撑代码&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;utils
&lt;ul&gt;
&lt;li&gt;工具类和方法，著名的 safeMath、Merkle Proof 等都在这里。对于 solidity 0.8.0 之后，safe math 已不是必须。关于 merkle proof，会有专文介绍其妙用。关于 merkle tree，可参见&lt;a href=&quot;../2020-02/%E5%9B%BE%E8%A7%A3%E9%BB%98%E5%85%8B%E5%B0%94%E6%A0%91.html&quot;&gt;图解默克尔树&lt;/a&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;access
&lt;ul&gt;
&lt;li&gt;封装了访问控制，通过它可以实现 RBAC。最出名的接口就是 Ownable。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;security

&lt;/li&gt;
&lt;li&gt;metatx
&lt;ul&gt;
&lt;li&gt;元交易工具类，实现了 ERC2771 规范。但若真要使你的合约支持元交易，建议基于 GSN 实现更佳，未来会有专文介绍。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;biz业务流程&quot;&gt;biz，业务流程&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;tokens

&lt;/li&gt;
&lt;li&gt;governance
&lt;ul&gt;
&lt;li&gt;封装了基本的治理逻辑，其中的 TimelockController 可以关注一下。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;finance
&lt;ul&gt;
&lt;li&gt;封装了分账和分期兑现逻辑，其中的 PaymentSplitter 可以关注一下。关于分账，有兴趣的同学还可以看一下&lt;a href=&quot;https://www.0xsplits.xyz/&quot;&gt;0xsplits&lt;/a&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;maintenance&quot;&gt;maintenance&lt;/h2&gt;

&lt;h2 id=&quot;cross-chain&quot;&gt;cross chain&lt;/h2&gt;
&lt;p&gt;封装跨链逻辑，使合约可以方便的实现跨链功能。但此处经验值为 0，故略过不提。&lt;/p&gt;

&lt;h2 id=&quot;最后&quot;&gt;最后&lt;/h2&gt;
&lt;p&gt;由上可知，OpenZepplin 本身是一个范围广泛、功能完善的合约开发框架，但使用时也请注意几点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不要生搬硬套，按照需求本身来合理选择使用那些类和库。理由很简单，gas fee。&lt;/li&gt;
&lt;li&gt;在使用之前务必：熟悉其背后的 EIP，同时熟悉代码。&lt;/li&gt;
&lt;li&gt;不要把它当做唯一选择，了解其他备选方案，比如 &lt;a href=&quot;https://github.com/chiru-labs/ERC721A&quot;&gt;ERC721A&lt;/a&gt; 就提供了更省 gas fee 的实现。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;

&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>ae4e03347443cc704dd8e4b4dcd86a9f</guid>
<title>如何搭建一个自己的音乐服务器</title>
<link>https://toutiao.io/k/i0pdq5y</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content js_underline_content             autoTypeSetting24psection&amp;#10;            &quot; id=&quot;js_content&quot;&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span&gt;最&lt;/span&gt;&lt;span&gt;近发现，经常用的网易云音乐，有很多歌曲下架了，能听的越来越少了；&lt;/span&gt;&lt;span&gt;歌单里的一些歌曲，现在要开通 VIP 才能听了。&lt;/span&gt;&lt;span&gt;其实自己常听的歌曲不是很多，现在却有很多听不了了。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.525&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/4lfok2icUkibS52D8Y3DFt5xPpHuPr6999xCMKUfVoZ71F5UZsIHGibJPialicwH2WKuFkTc5lvGjWjxiaFr1ddn9DicQ/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1000&quot; title=&quot;null&quot;/&gt;&lt;/figure&gt;&lt;p&gt;怎么办呢，付费吗？花钱当然是一个好方式，花 1 分钟开通 VIP，立马就可以畅听起来。&lt;/p&gt;&lt;p&gt;不过前两天翻东西时刚好发现自己还有一个吃灰多年的大学时代的树莓派，不如废物利用起来，使用树莓派搭建一个自己的&lt;strong&gt;音乐服务器&lt;/strong&gt;用来听歌吧。&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.615&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/4lfok2icUkibS52D8Y3DFt5xPpHuPr6999efq95jq2Bw6SUrOy0uIuzQYAKgkwFdwn2RfepwPMrIfD3V2IloQxlA/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1000&quot; title=&quot;null&quot;/&gt;&lt;figcaption&gt;树莓派&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;下面的文章是使用树莓派搭建音乐服务器，如果你手上没有树莓派，那么使用任何一个云服务器都是一样的，甚至因为云服务器具备公网 IP ，使用场景更加广泛。文章只为分享，不要传播具有版权的音乐！&lt;/p&gt;&lt;h2&gt;树莓派启动&lt;/h2&gt;&lt;p&gt;说干就干，树莓派通电。结果太久不用，密码忘了，只能为树莓派重新烧录系统。我这里选择了 Raspberry Pi OS 轻量无桌面 Linux 系统，可以减少资源的占用。因为后面的服务都是通过 Docker 安装，其实这里选择什么发行版的 Linux 区别并不大。&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3626943005181347&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/4lfok2icUkibS52D8Y3DFt5xPpHuPr6999WXldiayG1aZMZUGFor9PwzDHjS2M7bxzpMjeWbEjyOmKk1Iu21ROo5g/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;386&quot; title=&quot;null&quot;/&gt;&lt;/figure&gt;&lt;p&gt;链接：&lt;span&gt;Raspberry Pi OS 64 位系统下载&lt;/span&gt;&lt;/p&gt;&lt;h2&gt;安装 Docker&lt;/h2&gt;&lt;p&gt;安装 Docker 过程网上教程很多，下面只简单记录。&lt;/p&gt;&lt;p&gt;Ubuntu 系统为了安装软件速度更快，可以先更换软件源为国内软件源。&lt;/p&gt;&lt;p&gt;编辑文件：&lt;/p&gt;&lt;pre&gt;&lt;span/&gt;&lt;code&gt;sudo vim /etc/apt/sources.list&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;使用下面的阿里云软件源配置进行内容替换。&lt;/p&gt;&lt;pre&gt;&lt;span/&gt;&lt;code&gt;deb https://mirrors.aliyun.com/debian/ bullseye main non-free contrib&lt;br/&gt;deb-src https://mirrors.aliyun.com/debian/ bullseye main non-free contrib&lt;br/&gt;deb https://mirrors.aliyun.com/debian-security/ bullseye-security main&lt;br/&gt;deb-src https://mirrors.aliyun.com/debian-security/ bullseye-security main&lt;br/&gt;deb https://mirrors.aliyun.com/debian/ bullseye-updates main non-free contrib&lt;br/&gt;deb-src https://mirrors.aliyun.com/debian/ bullseye-updates main non-free contrib&lt;br/&gt;deb https://mirrors.aliyun.com/debian/ bullseye-backports main non-free contrib&lt;br/&gt;deb-src https://mirrors.aliyun.com/debian/ bullseye-backports main non-free contrib&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;安装 Dokcer，直接使用一句话脚本安装。&lt;/p&gt;&lt;pre&gt;&lt;span/&gt;&lt;code&gt;curl -sSL https://get.daocloud.io/docker | sh&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;安装过程：&lt;/p&gt;&lt;pre&gt;&lt;span/&gt;&lt;code&gt;linux@darcy:~ $ curl -sSL https://get.daocloud.io/docker | sh&lt;br/&gt;&lt;span&gt;# &lt;/span&gt;Executing docker install script, commit: 4f282167c425347a931ccfd95cc91fab041d414f&lt;br/&gt;+ sudo -E sh -c apt-get update -qq &amp;gt;/dev/null&lt;br/&gt;+ sudo -E sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq apt-transport-https ca-certificates curl &amp;gt;/dev/null&lt;br/&gt;+ sudo -E sh -c mkdir -p /etc/apt/keyrings &amp;amp;&amp;amp; chmod -R 0755 /etc/apt/keyrings&lt;br/&gt;+ sudo -E sh -c curl -fsSL &quot;https://download.docker.com/linux/debian/gpg&quot; | gpg --dearmor --yes -o /etc/apt/keyrings/docker.gpg&lt;br/&gt;+ sudo -E sh -c chmod a+r /etc/apt/keyrings/docker.gpg&lt;br/&gt;+ sudo -E sh -c echo &quot;deb [arch=arm64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian bullseye stable&quot; &amp;gt; /etc/apt/sources.list.d/docker.list&lt;br/&gt;+ sudo -E sh -c apt-get update -qq &amp;gt;/dev/null&lt;br/&gt;+ sudo -E sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq --no-install-recommends docker-ce docker-ce-cli containerd.io docker-compose-plugin &amp;gt;/dev/null&lt;br/&gt;+ version_gte 20.10&lt;br/&gt;+ [ -z  ]&lt;br/&gt;+ return 0&lt;br/&gt;+ sudo -E sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq docker-ce-rootless-extras &amp;gt;/dev/null&lt;br/&gt;+ sudo -E sh -c docker version&lt;br/&gt;Client: Docker Engine - Community&lt;br/&gt; Version:           20.10.21&lt;br/&gt; API version:       1.41&lt;br/&gt; Go version:        go1.18.7&lt;br/&gt; Git commit:        baeda1f&lt;br/&gt; Built:             Tue Oct 25 18:01:19 2022&lt;br/&gt; OS/Arch:           linux/arm64&lt;br/&gt; Context:           default&lt;br/&gt; Experimental:      true&lt;br/&gt;&lt;br/&gt;Server: Docker Engine - Community&lt;br/&gt; Engine:&lt;br/&gt;  Version:          20.10.21&lt;br/&gt;  API version:      1.41 (minimum version 1.12)&lt;br/&gt;  Go version:       go1.18.7&lt;br/&gt;  Git commit:       3056208&lt;br/&gt;  Built:            Tue Oct 25 17:59:41 2022&lt;br/&gt;  OS/Arch:          linux/arm64&lt;br/&gt;  Experimental:     false&lt;br/&gt; containerd:&lt;br/&gt;  Version:          1.6.10&lt;br/&gt;  GitCommit:        770bd0108c32f3fb5c73ae1264f7e503fe7b2661&lt;br/&gt; runc:&lt;br/&gt;  Version:          1.1.4&lt;br/&gt;  GitCommit:        v1.1.4-0-g5fd4c4d&lt;br/&gt; docker-init:&lt;br/&gt;  Version:          0.19.0&lt;br/&gt;  GitCommit:        de40ad0&lt;br/&gt;&lt;br/&gt;================================================================================&lt;br/&gt;&lt;br/&gt;To run Docker as a non-privileged user, consider setting up the&lt;br/&gt;Docker daemon in rootless mode for your user:&lt;br/&gt;&lt;br/&gt;    dockerd-rootless-setuptool.sh install&lt;br/&gt;&lt;br/&gt;Visit https://docs.docker.com/go/rootless/ to learn about rootless mode.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;To run the Docker daemon as a fully privileged service, but granting non-root&lt;br/&gt;users access, refer to https://docs.docker.com/go/daemon-access/&lt;br/&gt;&lt;br/&gt;WARNING: Access to the remote API on a privileged Docker daemon is equivalent&lt;br/&gt;         to root access on the host. Refer to the &#x27;Docker daemon attack surface&#x27;&lt;br/&gt;         documentation for details: https://docs.docker.com/go/attack-surface/&lt;br/&gt;&lt;br/&gt;================================================================================&lt;br/&gt;&lt;br/&gt;darcy@darcy:~ $&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;安装 docker-compose.&lt;/p&gt;&lt;pre&gt;&lt;span/&gt;&lt;code&gt;linux@darcy:~/music $ sudo apt install docker-compose&lt;br/&gt;Reading package lists... Done&lt;br/&gt;Building dependency tree... Done&lt;br/&gt;Reading state information... Done&lt;br/&gt;The following packages were automatically installed and are no longer required:&lt;br/&gt;  libslirp0 slirp4netns&lt;br/&gt;Use &#x27;sudo apt autoremove&#x27; to remove them.&lt;br/&gt;The following additional packages will be installed:&lt;br/&gt;  apparmor cgroupfs-mount containerd docker.io git git-man liberror-perl libintl-perl libintl-xs-perl libmodule-find-perl libmodule-scandeps-perl libproc-processtable-perl libsort-naturally-perl libterm-readkey-perl&lt;br/&gt;  needrestart python3-attr python3-cached-property python3-distutils python3-docker python3-dockerpty python3-docopt python3-importlib-metadata python3-jsonschema python3-lib2to3 python3-more-itertools python3-pyrsistent&lt;br/&gt;  python3-setuptools python3-texttable python3-websocket python3-yaml python3-zipp runc tini&lt;br/&gt;Suggested packages:&lt;br/&gt;  apparmor-profiles-extra apparmor-utils containernetworking-plugins docker-doc aufs-tools btrfs-progs debootstrap rinse rootlesskit xfsprogs zfs-fuse | zfsutils-linux git-daemon-run | git-daemon-sysvinit git-doc git-el&lt;br/&gt;  git-email git-gui gitk gitweb git-cvs git-mediawiki git-svn needrestart-session | libnotify-bin iucode-tool python-attr-doc python-jsonschema-doc python-setuptools-doc&lt;br/&gt;Recommended packages:&lt;br/&gt;  criu&lt;br/&gt;The following packages will be REMOVED:&lt;br/&gt;  containerd.io docker-ce docker-ce-cli docker-ce-rootless-extras&lt;br/&gt;The following NEW packages will be installed:&lt;br/&gt;  apparmor cgroupfs-mount containerd docker-compose docker.io git git-man liberror-perl libintl-perl libintl-xs-perl libmodule-find-perl libmodule-scandeps-perl libproc-processtable-perl libsort-naturally-perl&lt;br/&gt;  libterm-readkey-perl needrestart python3-attr python3-cached-property python3-distutils python3-docker python3-dockerpty python3-docopt python3-importlib-metadata python3-jsonschema python3-lib2to3&lt;br/&gt;  python3-more-itertools python3-pyrsistent python3-setuptools python3-texttable python3-websocket python3-yaml python3-zipp runc tini&lt;br/&gt;0 upgraded, 34 newly installed, 4 to remove and 39 not upgraded.&lt;br/&gt;Need to get 55.9 MB of archives.&lt;br/&gt;After this operation, 45.4 MB disk space will be freed.&lt;br/&gt;Do you want to continue? [Y/n] y&lt;br/&gt;Get:1 https://mirrors.aliyun.com/debian bullseye/main arm64 runc arm64 1.0.0~rc93+ds1-5+deb11u2 [2,078 kB]&lt;br/&gt;Get:2 https://mirrors.aliyun.com/debian bullseye/main arm64 containerd arm64 1.4.13~ds1-1~deb11u2 [14.7 MB]&lt;br/&gt;Get:3 https://mirrors.aliyun.com/debian bullseye/main arm64 tini arm64 0.19.0-1 [209 kB]&lt;br/&gt;Get:4 https://mirrors.aliyun.com/debian bullseye/main arm64 docker.io arm64 20.10.5+dfsg1-1+deb11u2 [28.8 MB]&lt;br/&gt;Get:5 https://mirrors.aliyun.com/debian bullseye/main arm64 apparmor arm64 2.13.6-10 [601 kB]&lt;br/&gt;Get:6 https://mirrors.aliyun.com/debian bullseye/main arm64 cgroupfs-mount all 1.4 [6,276 B]&lt;br/&gt;Get:7 https://mirrors.aliyun.com/debian bullseye/main arm64 python3-cached-property all 1.5.2-1 [12.5 kB]&lt;br/&gt;Get:8 https://mirrors.aliyun.com/debian bullseye/main arm64 python3-lib2to3 all 3.9.2-1 [77.8 kB]&lt;br/&gt;Get:9 https://mirrors.aliyun.com/debian bullseye/main arm64 python3-distutils all 3.9.2-1 [143 kB]&lt;br/&gt;Get:10 https://mirrors.aliyun.com/debian bullseye/main arm64 python3-websocket all 0.57.0-1 [34.3 kB]&lt;br/&gt;Get:11 https://mirrors.aliyun.com/debian bullseye/main arm64 python3-docker all 4.1.0-1.2 [85.2 kB]&lt;br/&gt;Get:12 https://mirrors.aliyun.com/debian bullseye/main arm64 python3-dockerpty all 0.4.1-2 [11.1 kB]&lt;br/&gt;Get:13 https://mirrors.aliyun.com/debian bullseye/main arm64 python3-docopt all 0.6.2-3 [26.6 kB]&lt;br/&gt;Get:14 https://mirrors.aliyun.com/debian bullseye/main arm64 python3-attr all 20.3.0-1 [52.9 kB]&lt;br/&gt;Get:15 https://mirrors.aliyun.com/debian bullseye/main arm64 python3-more-itertools all 4.2.0-3 [42.7 kB]&lt;br/&gt;Get:16 https://mirrors.aliyun.com/debian bullseye/main arm64 python3-zipp all 1.0.0-3 [6,060 B]&lt;br/&gt;Get:17 https://mirrors.aliyun.com/debian bullseye/main arm64 python3-importlib-metadata all 1.6.0-2 [10.3 kB]&lt;br/&gt;Get:18 https://mirrors.aliyun.com/debian bullseye/main arm64 python3-setuptools all 52.0.0-4 [366 kB]&lt;br/&gt;Get:19 https://mirrors.aliyun.com/debian bullseye/main arm64 python3-pyrsistent arm64 0.15.5-1+b3 [58&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;启动 docker&lt;/p&gt;&lt;pre&gt;&lt;span/&gt;&lt;code&gt;# 查看docker服务是否启动&lt;br/&gt;sudo systemctl status docker&lt;br/&gt;# 如果没有启动&lt;br/&gt;sudo systemctl start docker&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;安装音乐服务器&lt;/h2&gt;&lt;p&gt;网上搜索了很多音乐服务器，综合对比之后选择了 Navidrome，Navidrome是一款完全开源免费的音乐服务器，且有很多开源客户端可以直接使用，十分方便。&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.316&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/4lfok2icUkibS52D8Y3DFt5xPpHuPr6999VTZK5UvzVPe5XmS0jLFLC66RWWROx2nqZePNiaCYT9HR8t4OQUho3mw/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1000&quot; title=&quot;null&quot;/&gt;&lt;figcaption&gt;Navidrome 音乐服务器&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;官方也给出了如何使用 Docker 安装 Navidrome 的教程，可以点击查看。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;链接：&lt;span&gt;Docker 安装 Navidrome 音乐服务器&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;编写 docker-compose.yml 文件，配置中使用 volumes 指定了配置文件夹 data，歌曲存放文件夹 folder.&lt;/p&gt;&lt;pre&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;version:&lt;/span&gt; &lt;span&gt;&quot;3&quot;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;services:&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;navidrome:&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;image:&lt;/span&gt; &lt;span&gt;deluan/navidrome:latest&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;user:&lt;/span&gt; &lt;span&gt;1000&lt;/span&gt;&lt;span&gt;:1000&lt;/span&gt; &lt;span&gt;# should be owner of volumes&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;ports:&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;-&lt;/span&gt; &lt;span&gt;&quot;4533:4533&quot;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;restart:&lt;/span&gt; &lt;span&gt;unless-stopped&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;environment:&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;# Optional: put your config options customization here. Examples:&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;ND_SCANSCHEDULE:&lt;/span&gt; &lt;span&gt;1h&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;ND_LOGLEVEL:&lt;/span&gt; &lt;span&gt;info&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;ND_SESSIONTIMEOUT:&lt;/span&gt; &lt;span&gt;24h&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;ND_BASEURL:&lt;/span&gt; &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;volumes:&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;-&lt;/span&gt; &lt;span&gt;&quot;~/app/music/data:/data&quot;&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;-&lt;/span&gt; &lt;span&gt;&quot;~/app/music/folder:/music:ro&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;下载 docker 镜像，等待 navidrome 镜像下载完成。&lt;/p&gt;&lt;pre&gt;&lt;span/&gt;&lt;code&gt;linux@darcy:~/music $ sudo docker-compose up -d&lt;br/&gt;Creating network &quot;music_default&quot; with the default driver&lt;br/&gt;Pulling navidrome (deluan/navidrome:latest)...&lt;br/&gt;latest: Pulling from deluan/navidrome&lt;br/&gt;9b18e9b68314: Extracting [==================================================&amp;gt;]  2.708MB/2.708MB&lt;br/&gt;6faacaf0d83b: Downloading [=================&amp;gt;                                 ]  11.49MB/32.64MB&lt;br/&gt;4f4fb700ef54: Download complete&lt;br/&gt;e67430195958: Downloading [========&amp;gt;                                          ]  2.203MB/13.64MB&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;音乐上传&lt;/h2&gt;&lt;p&gt;歌曲的来源这里不细说，我电脑上刚好有几首不知何年何月使用网易云音乐时保存的歌曲，上传歌曲文件到树莓派服务器。&lt;/p&gt;&lt;p&gt;这里直接使用 scp 命令进行上传，需要在歌曲所在文件夹下运行。&lt;/p&gt;&lt;pre&gt;&lt;span/&gt;&lt;code&gt;➜  folder scp ./* darcy@192.168.31.21:/home/darcy/music/folder&lt;br/&gt;darcy@192.168.31.21&#x27;s password:&lt;br/&gt;GALA - 追梦赤子心.mp3                        100%   13MB   7.0MB/s   00:01&lt;br/&gt;伍佰 - 晚风.mp3                              100% 4102KB   9.4MB/s   00:00&lt;br/&gt;暗杠 - 狂草.mp3                              100% 9693KB   9.1MB/s   00:01&lt;br/&gt;被动(Live).mp3                               100% 4463KB  10.4MB/s   00:00&lt;br/&gt;刘德华 - 17岁 (Live).mp3                      100%   12MB  10.0MB/s   00:01&lt;br/&gt;张雨生 - 我期待.mp3                            100%   14MB   6.8MB/s   00:02&lt;br/&gt;赵英俊 - 方的言.ncm&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;启动音乐服务器&lt;/h2&gt;&lt;p&gt;先使用 &lt;code&gt;sudo docker ps -a&lt;/code&gt; 查看 Navidrome 是否已经启动了，如果没有启动可以使用 &lt;code&gt;docker start id&lt;/code&gt; 进行启动。服务的默认端口是 &lt;code&gt;4533&lt;/code&gt;。&lt;/p&gt;&lt;pre&gt;&lt;span/&gt;&lt;code&gt;linux@darcy:~ $ sudo docker ps -a&lt;br/&gt;CONTAINER ID   IMAGE                     COMMAND            CREATED       STATUS                 PORTS                    NAMES&lt;br/&gt;97a8a2681179   deluan/navidrome:latest   &quot;/app/navidrome&quot;   2 weeks ago   Up 6 hours (healthy)   0.0.0.0:4533-&amp;gt;4533/tcp   music_navidrome_1&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;浏览器访问&lt;/h2&gt;&lt;p&gt;&lt;code&gt;IP:PORT&lt;/code&gt; 访问音乐服务，Navidrome 为 PC 端和手机端已经适配了不同的 UI 界面。&lt;/p&gt;&lt;p&gt;PC 浏览器：&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.654&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/4lfok2icUkibS52D8Y3DFt5xPpHuPr69996XCKsyeVjicMicjpyC8Rmc6xOA6OXMzT2g2nnqpVlkL2dL2vuLDQjUdg/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1000&quot; title=&quot;null&quot;/&gt;&lt;figcaption&gt;navidrome pc 端&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;移动浏览器：&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;2.1324503311258276&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/4lfok2icUkibS52D8Y3DFt5xPpHuPr6999BoLksibcH07iaibFz23kRIq4kfkI4xxLp1c8rNkUrgmtPhAiaDKM8ozKhA/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;604&quot; title=&quot;null&quot;/&gt;&lt;figcaption&gt;navidrome 手机端&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Navidrome 的管理功能尚可，点击右上角的头像，可以&lt;strong&gt;新增用户&lt;/strong&gt;，可以为其他人创建一个登录账户。&lt;/p&gt;&lt;h2&gt;使用 APP 访问&lt;/h2&gt;&lt;p&gt;兼容 Navidrome 的 APP 有很多，这里我使用 Substreamer 这款 APP，界面算得上简洁，使用体验尚可。&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.48828125&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/4lfok2icUkibS52D8Y3DFt5xPpHuPr69990IeMT9NDGBhOAibG9ibkTyTqCJbcrJr4xMv2H7rpxssker6QfJMrvWPw/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;512&quot; title=&quot;null&quot;/&gt;&lt;figcaption&gt;substreamer app&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;初次启动需要进行登录，可以使用刚刚新增的用户进行登录。&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;2.1658206429780034&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/4lfok2icUkibS52D8Y3DFt5xPpHuPr6999sRoDq1whUEbHtJW4Nre62QTFKhNZ6YwmsKgl8cic7exjw4FoY5te6hA/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;591&quot; title=&quot;null&quot;/&gt;&lt;/figure&gt;&lt;p&gt;歌曲界面：&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;2.1658206429780034&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/4lfok2icUkibS52D8Y3DFt5xPpHuPr6999OGZKqBQQ6TFibzvtMRw9OyF7bjb5KiaOZjj6nTs8tjesWrPEhrDZAROw/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;591&quot; title=&quot;null&quot;/&gt;&lt;/figure&gt;&lt;h2&gt;外网访问&lt;/h2&gt;&lt;p&gt;如果已经是使用云服务器进行部署，那么因为有相应的公网 IP，其实已经可以直接使用公网 IP 访问了。&lt;/p&gt;&lt;p&gt;但是如果使用的树莓派或者家里的其他机器进行部署的，因为没有公网 IP ，只能局限在家庭局域网内，就会让公网访问十分困难。这时有下面的几个方案。&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;1. 如果你的宽带运营商每次会分配公网 IP，刚好你又有一个域名，那么可以使用 DNS 服务商提供的 API 进行动态 DNS 配置，让域名总能解析到运营商分配给你的公网 IP。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;2. 如果你有公网服务器，可以使用类似于 FRP 这样的内网穿透工具，借助公网服务器暴露局域网服务。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;FRP GitHub：https://github.com/fatedier/frp/releases&lt;/p&gt;&lt;p&gt;FRP 通过自定义域名访问内网的 Web 服务：https://gofrp.org/docs/examples/vhost-http/&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;figcaption&gt;&lt;span&gt;---- END ----&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;Hello world : ) &lt;span&gt;这篇文章就到这里了，&lt;/span&gt;我是阿朗，点赞和在看，动力无限，&lt;/span&gt;&lt;strong&gt;&lt;span&gt;求关注&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;section&gt;&lt;mp-common-profile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-weui-theme=&quot;light&quot; data-id=&quot;MzI1MDIxNjQ1OQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/4lfok2icUkibQlzFGPibM1jmICzZmtYzRGMpP7suTs20SQKjwqgFWKKPcmAwzzeDZHE3fuhodU4oZsKQ3IibqYmibhg/0?wx_fmt=png&quot; data-nickname=&quot;程序猿阿朗&quot; data-alias=&quot;wdbyte&quot; data-signature=&quot;: ) 早睡早起，坚持不懈。&quot; data-from=&quot;0&quot; data-is_biz_ban=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;点个在看，加油充电～&lt;/span&gt;&lt;strong&gt;&lt;span&gt;👇&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;mp-style-type data-value=&quot;3&quot;/&gt;&lt;/p&gt;&lt;/div&gt;

          
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>7f13e15d4246fd2d06e33a0d25cb0c5f</guid>
<title>微服务架构统一安全认证设计与实践</title>
<link>https://toutiao.io/k/0orslcf</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content js_underline_content             autoTypeSetting24psection&amp;#10;            &quot; id=&quot;js_content&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;ignored&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;p&gt;&lt;span&gt;点击上方“&lt;/span&gt;&lt;span&gt;&lt;span&gt;Java基基&lt;/span&gt;&lt;/span&gt;&lt;span&gt;”，选择“设为星标”&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;做积极的人，而不是积极废人！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;每天 &lt;/span&gt;&lt;span&gt;&lt;strong&gt;14:00&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; 更新文章，每天掉亿点点头发...&lt;/span&gt;&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section data-mpa-template-id=&quot;692363&quot; data-mpa-category=&quot;fav&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;&lt;p&gt;源码精品专栏&lt;/p&gt;&lt;/span&gt; &lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;来源：juejin.cn/post/6906149001520037902&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;来源：juejin.cn/post/&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;来源：juejin.cn/post/6906149001520037902&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;6906149001520037902&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当企业应用系统逐渐增多后，每个系统单独管理各自的用户数据容易形成信息孤岛，分散的用户管理模式阻碍了企业应用向平台化演进。当企业的互联网业务发展到一定规模，构建统一的标准化账户管理体系将是必不可少的，因为它是企业互联网云平台的重要基础设施，能够为平台带来统一的帐号管理、身份认证、用户授权等基础能力，为企业带来诸如跨系统单点登录、第三方授权登录等基础能力，为构建开放平台和业务生态提供了必要条件。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;Third-party application：第三方应用程序，本文中又称“客户端”（client）。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;HTTP service：HTTP服务提供商，本文中简称“服务提供商”。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Resource Owner：资源所有者，本文中又称“用户”（user），即登录用户。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;User Agent：用户代理，本文中就是指浏览器。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Authorization server：认证服务器，即服务提供商专门用来处理认证的服务器。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Resource server：资源服务器，即服务提供商存放用户生成的资源的服务器。它与认证服务器，可以是同一台服务器，也可以是不同的服务器。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;基于 Spring Boot + MyBatis Plus + Vue &amp;amp; Element 实现的后台管理系统 + 用户小程序，支持 RBAC 动态权限、多租户、数据权限、工作流、三方登录、支付、短信、商城等功能&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;项目地址：https://github.com/YunaiV/ruoyi-vue-pro&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;视频教程：https://doc.iocoder.cn/video/&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;单体应用体系下，应用是一个整体，一般针对所有的请求都会进行权限校验。请求一般会通过一个权限的拦截器进行权限的校验，在登录时将用户信息缓存到 session 中，后续访问则从缓存中获取用户信息。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;随着 Restful API、微服务的兴起，基于 Token 的认证现在已经越来越普遍。Token 和 Session ID 不同，并非只是一个 key。Token 一般会包含用户的相关信息，通过验证 Token 就可以完成身份校验。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;基于 Token 认证的优势如下：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;服务端无状态：Token 机制在服务端不需要存储 session 信息，因为 Token 自身包含了所有用户的相关信息。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;性能较好，因为在验证 Token 时不用再去访问数据库或者远程服务进行权限校验，自然可以提升不少性能。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;支持移动设备，支持跨程序调用，Cookie 是不允许垮域访问的，而 Token 则不存在这个问题。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;基于 Spring Cloud Alibaba + Gateway + Nacos + RocketMQ + Vue &amp;amp; Element 实现的后台管理系统 + 用户小程序，支持 RBAC 动态权限、多租户、数据权限、工作流、三方登录、支付、短信、商城等功能&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;项目地址：https://github.com/YunaiV/yudao-cloud&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;视频教程：https://doc.iocoder.cn/video/&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过标准安全认证流程，异构系统或跨服务间能够灵活地实现指定功能部件或服务的集成、统一的安全认证。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;基于 Token 认证的一个典型流程如下：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;用户输入登录信息（或者调用 Token 接口，传入用户信息），发送到身份认证服务进行认证（身份认证服务可以和服务端在一起，也可以分离，看微服务拆分情况了）。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;身份验证服务验证登录信息是否正确，返回接口（一般接口中会包含用户基础信息、权限范围、有效时间等信息），客户端存储接口，可以存储在 Session 或者数据库中。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;客户端将 Token 放在 HTTP 请求头中，发起相关 API 调用。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;被调用的微服务，验证 Token 权限。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;服务端返回相关资源和数据。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;安全认证功能点：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6973684210526315&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/6mychickmupWtZg2d1kxKnVzxmT2nbkmMJBlPI5DUT0pfuKLkvHJTib642HGADhYu3eWsNpOHXCq4VdMMeF81EYw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;456&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/figure&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;获取凭证，第三方应用客户端使用客户端编码/安全码、资源所有者用户名/密码等证件信息从授权服务器上获取 Access Token 资源访问凭证。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;登录授权，客户端携带 Access Token 凭证访问服务器资源，资源服务器验证 Token、第三方应用凭证信息、资源所有者 User 合法性，通过 Token 读取资源所有者身份信息（user）加载资源所有者的权限项执行登录。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;访问鉴权，第三方应用客户端访问服务端资源，系统验证访问者 Access Token 合法性、权限信息，验证凭证（Access Token）正确，此时资源服务器就会返回资源信息。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;凭证续约，Access token 访问凭证过期需要进行凭证续约，刷新 Token 凭证有效期。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;系统授权采用 OAuth2 开放式授权标准密码模式。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Token 采用 JWT 标准。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;OAuth 开放授权&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;OAuth（Open Authorization，开放授权）是为用户资源的授权定义了一个安全、开放及简单的标准，第三方无需知道用户的账号及密码，就可获取到用户的授权信息。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;主要的四种授权方式：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;授权码模式（authorization code）用在客户端与服务端应用之间授权码。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;简化模式（implicit）用在移动 app 或者 web app（这些 app 是在用户的设备上的，如在手机上调起微信来进行认证授权）。不通过第三方应用程序的服务器，直接在浏览器中向认证服务器申请令牌，跳过了“授权码”这个步骤，因此得名。所有步骤在浏览器中完成，令牌对访问者是可见的，且客户端不需要认证。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;密码模式（resource owner password credentials）应用直接都是受信任的（都是由一家公司开发的）密码模式中，用户向客户端提供自己的用户名和密码。客户端使用这些信息，向“服务商提供商”索要授权。在这种模式中，用户必须把自己的密码给客户端，但是客户端不得储存密码。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;客户端模式（client credentials）用在应用 API 访问客户端模式（Client Credentials Grant）指客户端以自己的名义，而不是以用户的名义，向“服务提供商”进行认证。严格地说，客户端模式并不属于 OAuth 框架所要解决的问题。在这种模式中，用户直接向客户端注册，客户端以自己的名义要求“服务提供商”提供服务，其实不存在授权问题。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;Json Web Token（JWT）&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Json Web Token（JWT），是为了在网络应用环境间传递声明而执行的一种基于 JSON 的开放标准（RFC 7519）。该 Token 被设计为紧凑且安全的，特别适用于分布式站点的单点登录（SSO）场景。JWT 的声明一般被用来在身份提供者和服务提供者间传递被认证的用户身份信息，以便于从资源服务器获取资源，也可以增加一些额外的其它业务逻辑所必须的声明信息，该 Token 也可直接被用于认证，也可被加密。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;系统授权&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;第三方应用客户端使用客户端编码/安全码、资源所有者用户名/密码等证件信息从授权服务器上获取 Access Token 资源访问凭证。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4584837545126354&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/6mychickmupWtZg2d1kxKnVzxmT2nbkmMQqEjrAWL50glG66RAkYMvfDK0hPicicZh7F1dpML7S3fd4iaoZwE4qia5Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;554&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;系统授权颁发给客户应用 Access Token。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.48014440433212996&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/6mychickmupWtZg2d1kxKnVzxmT2nbkmMj33atMZXvUeolaqzCurxLibwgH6GVCENqYU5X6uENmom3axhic7JduZw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;554&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;系统鉴权&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;客户端携带 Access Token 凭证访问服务器资源，资源服务器验证 Token、第三方应用、资源所有者 User 合法性，通过 Token 读取资源所有者身份信息（user）加载资源所有者的权限执行登录。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.37725631768953066&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/6mychickmupWtZg2d1kxKnVzxmT2nbkmMdKddIDfk60gx9o9BRuzkGDSrZnljBLfLdhmUjaOE1rufotcVE5dFAQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;554&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;系统验证访问者 Access Token 合法性、权限信息，验证凭证（Access Token）正确，此时资源服务器就会返回资源信息。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;凭证续约&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Access Token 访问凭证过期需要进行凭证续约，刷新 Token 凭证有效期。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5124792013311148&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/6mychickmupWtZg2d1kxKnVzxmT2nbkmMWhE1s7rLyU2vSIE8xSFEs8gJQz9P6gxsEibHiaGiavbGJS4kalzqIcv9w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;601&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;授权凭证&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;获取授权凭证，校验客户端身份信息、校验资源所有者身份信息，下发 Token 凭证。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.0575815738963532&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/6mychickmupWtZg2d1kxKnVzxmT2nbkmMpE9GnPicTKlGpnRj5eChvwgThxoj1ib70fJg03dwnhjg6wKO7sJicAWXg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;521&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;客户端编码/安全码需要第三方应用到系统注册审核通过后生成。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.43570057581573896&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/6mychickmupWtZg2d1kxKnVzxmT2nbkmM1d16eCUErqiazPhoWElRb1TX5hY07QRXeEicmw0PwiaX8bAKoP19fhsWQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;521&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/figure&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.33076923076923076&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/6mychickmupWtZg2d1kxKnVzxmT2nbkmMruylVM8dHROf9oNibOuTKLw610IenzYy000ILsiajrw9d4FxgUpXWCiag/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;520&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;授权凭证续约&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;获取续约授权凭证，校验客户端身份信息、校验 RefreshToken 凭证，下发 Token 凭证。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6685823754789272&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/6mychickmupWtZg2d1kxKnVzxmT2nbkmMm1hzW5uVCCT3RcQzVZSlmbxniaP9cpOxd91fM3TOcHicHJLprgkybLkQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;522&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/figure&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.32629558541266795&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/6mychickmupWtZg2d1kxKnVzxmT2nbkmMjicwOcecU5GoOICFEuCRMqqoJp0EyFs6BggPKY9sYvtU4kexDpa5iacA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;521&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/figure&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.33076923076923076&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/6mychickmupWtZg2d1kxKnVzxmT2nbkmMruylVM8dHROf9oNibOuTKLw610IenzYy000ILsiajrw9d4FxgUpXWCiag/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;520&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/figure&gt;&lt;/section&gt;&lt;hr/&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;ignored&quot;&gt;&lt;hr/&gt;&lt;p&gt;&lt;span&gt;欢迎加入我的知识星球，一起探讨架构，交流源码。&lt;/span&gt;&lt;span&gt;加入方式，&lt;/span&gt;&lt;strong&gt;&lt;span&gt;长按下方二维码噢&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;ignored&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5493333333333333&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/6mychickmupWvCPbtnO1ap7Octib250ghicPloeaiakSGrRLuGAdvNpA7oHpJV74U7ZQsiaLiaP9Wrxgc68F7dteNIIQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;750&quot;/&gt;&lt;/p&gt;&lt;p&gt;已在知识星球更新源码解析如下：&lt;/p&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;chksm=fa496f8ecd3ee698f4954c00efb80fe955ec9198fff3ef4011e331aa37f55a6a17bc8c0335a8&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot; hasload=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.0718475073313782&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdLkEI9sZfdCa89KZ4Ls04tTqXvgxWVian1HZ76BOz52l4pkqX0IMicM14rRFyiaO0vQENMOufUhDVVtPiadDdoKjQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1364&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;chksm=fa496f8ecd3ee698f4954c00efb80fe955ec9198fff3ef4011e331aa37f55a6a17bc8c0335a8&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot; hasload=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.0319767441860466&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdLkEI9sZfdCa89KZ4Ls04tTqXvgxWViaExAeJx1CZeSaJ9qxh0X70s4JGjIVVlT5ZqBGu51YTedMNfO49DKb6g/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1376&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;chksm=fa496f8ecd3ee698f4954c00efb80fe955ec9198fff3ef4011e331aa37f55a6a17bc8c0335a8&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot; hasload=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7209985315712188&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdLkEI9sZfdCa89KZ4Ls04tTqXvgxWViaCibrYIXNgebWPd5g7Or9dcToN660aLAEJEhz4wLpBBiaFhejsaGDGd2g/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1362&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;ignored&quot;&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;ignored&quot;&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;amp;mid=2247487551&amp;amp;idx=1&amp;amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;amp;chksm=fa496f8ecd3ee698f4954c00efb80fe955ec9198fff3ef4011e331aa37f55a6a17bc8c0335a8&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot; hasload=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.42543859649122806&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdLkEI9sZfdCa89KZ4Ls04tTqXvgxWVia4qmv743xvlia1HYmqCDPBLpo3HXtw8Hmo76GkGK5wCqvicAKxd9ET3ow/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1368&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;最近更新《芋道 SpringBoot 2.X 入门》系列&lt;/span&gt;&lt;span&gt;，已经 101 余篇，覆盖了 &lt;/span&gt;&lt;span&gt;MyBatis、Redis、MongoDB、ES、分库分表、读写分离、SpringMVC、Webflux、权限、WebSocket、Dubbo、RabbitMQ、RocketMQ、Kafka、性能测试等等内容。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;提供近 3W 行&lt;span&gt;代码&lt;/span&gt;的 SpringBoot 示例，以及超 6W 行代码的电商微服务项目。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;获取方式：点“&lt;/span&gt;&lt;span&gt;&lt;strong&gt;在看&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;”，关注公众号并回复 &lt;/span&gt;&lt;span&gt;&lt;strong&gt;666&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; 领取，更多内容陆续奉上。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;pre data-darkmode-bgcolor-15923650965579=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15923650965579=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15923650965579=&quot;rgb(167, 167, 167)&quot; data-darkmode-original-color-15923650965579=&quot;rgb(63, 63, 63)&quot; data-style=&quot;letter-spacing: 0.544px; font-size: 16px; color: rgb(63, 63, 63); word-spacing: 1px; line-height: inherit;&quot; class=&quot;js_darkmode__91&quot;&gt;&lt;p data-style=&quot;margin-right: 0.5em; margin-left: 0.5em; font-family: 微软雅黑; white-space: normal; color: rgb(0, 0, 0); letter-spacing: 0px; word-spacing: 2px; text-align: right;&quot; class=&quot;js_darkmode__100&quot; data-darkmode-bgcolor-15923650965579=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15923650965579=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15923650965579=&quot;rgb(230, 230, 230)&quot; data-darkmode-original-color-15923650965579=&quot;rgb(0, 0, 0)&quot;&gt;&lt;span data-darkmode-bgcolor-15923650965579=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15923650965579=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15923650965579=&quot;rgb(255, 41, 65)&quot; data-darkmode-original-color-15923650965579=&quot;rgb(255, 41, 65)&quot;&gt;&lt;strong data-darkmode-bgcolor-15923650965579=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15923650965579=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15923650965579=&quot;rgb(255, 41, 65)&quot; data-darkmode-original-color-15923650965579=&quot;rgb(255, 41, 65)&quot;&gt;文章有帮助的话，在看，转发吧。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-style=&quot;margin-right: 0.5em; margin-left: 0.5em; font-family: 微软雅黑; white-space: normal; color: rgb(0, 0, 0); letter-spacing: 0px; word-spacing: 2px; text-align: right;&quot; class=&quot;js_darkmode__101&quot; data-darkmode-bgcolor-15923650965579=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15923650965579=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15923650965579=&quot;rgb(230, 230, 230)&quot; data-darkmode-original-color-15923650965579=&quot;rgb(0, 0, 0)&quot;&gt;&lt;span data-darkmode-bgcolor-15923650965579=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15923650965579=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15923650965579=&quot;rgb(255, 41, 65)&quot; data-darkmode-original-color-15923650965579=&quot;rgb(255, 41, 65)&quot;&gt;&lt;strong data-darkmode-bgcolor-15923650965579=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15923650965579=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15923650965579=&quot;rgb(255, 41, 65)&quot; data-darkmode-original-color-15923650965579=&quot;rgb(255, 41, 65)&quot;&gt;谢谢支持哟 (*^__^*）&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;mp-style-type data-value=&quot;3&quot;/&gt;&lt;/p&gt;&lt;/div&gt;

          
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>