<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>c0abcd3d4835faea7de238430c95f877</guid>
<title>优质网站同好者周刊（第 077 期） | 倾城博客</title>
<link>https://toutiao.io/k/irnoyqo</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;content&quot;&gt;&lt;p&gt;&lt;a href=&quot;https://nicelinks.site/?utm_source=weekly&quot;&gt;倾城之链&lt;/a&gt;作为一个开放平台，旨在云集全球&lt;strong&gt;优秀网站&lt;/strong&gt;，探索互联网中更广阔的世界。此周刊，将汇聚过去一周&lt;a href=&quot;https://nicelinks.site/?utm_source=weekly&quot;&gt;倾城&lt;/a&gt;所收录的内容，以飨同好；欢迎推荐或自荐（仅限有独立域名的网站，可以是二级域名）。您如果要了解收录要求，请参见&lt;a href=&quot;https://nicelinks.site/about?utm_source=weekly&quot;&gt;关于倾城&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;备注&lt;/strong&gt;：本周刊&lt;strong&gt;每周五&lt;/strong&gt;生成，首发于个人微信公众号&lt;a href=&quot;https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzI5MDIwMzM2Mg==&amp;amp;action=getalbum&amp;amp;album_id=1530765143352082433&amp;amp;scene=173&amp;amp;from_msgid=2650641087&amp;amp;from_itemidx=1&amp;amp;count=3#wechat_redirect&quot;&gt;晚晴幽草轩&lt;/a&gt;、博客&lt;a href=&quot;https://www.jeffjade.com&quot;&gt;晚晴幽草轩&lt;/a&gt;，以及&lt;a href=&quot;https://forum.lovejade.cn/&quot;&gt;悠然宜想亭&lt;/a&gt;社区；此一键生成脚本基于 &lt;a href=&quot;https://nicelinks.site/post/602d30aad099ff5688618591&quot;&gt;Deno&lt;/a&gt; 编写，并在 Github 开源：&lt;a href=&quot;https://github.com/nicejade/nicelinks-weekly&quot;&gt;nicejade/nicelinks-weekly&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/%E5%91%BD%E4%BB%A4%E8%A1%8C&quot;&gt;&lt;code&gt;命令行&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/React&quot;&gt;&lt;code&gt;React&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E7%A8%8B%E5%BA%8F&quot;&gt;&lt;code&gt;程序&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;🌈 React for interactive command-line apps. Contribute to vadimdemedes/ink development by creating an account on GitHub.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/term.ink.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 - GitHub - vadimdemedes/ink: 🌈 React for interactive command-line apps&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/redirect?url=https://term.ink/&quot;&gt;term.ink&lt;/a&gt; 是基于 React 框架，用于构建交互式命令行（Command Line）应用程序的渲染器（render）；它提供了与 React 在浏览器中提供的相同的基于组件的 UI 构建体验。它使用 &lt;a href=&quot;https://nicelinks.site/redirect?url=https://github.com/facebook/yoga&quot;&gt;Yoga&lt;/a&gt; 在终端（Terminal）中构建 Flexbox 布局，因此大多数类似 CSS 的道具，也可以在 Ink 中使用。如果您已经熟悉 React，那么您已经了解 Ink。由于 Ink 是一个 React 渲染器（renderer），这意味着支持 React 的所有功能。&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://nicelinks.site/redirect?url=https://term.ink/&quot;&gt;Ink&lt;/a&gt; 这对于前端极客而言，是福音般的存在；您可以基于前端技术，快速构建命令行程序，而不用关注底层；能够极大促进您编写命令行程序的热情；进一步完善您的工具流，从而让您的效果更上一层楼。这中间，Lnk 扮演了优良循环的催化剂和基建砖；事实上，基于 &lt;a href=&quot;https://nicelinks.site/redirect?url=https://term.ink/&quot;&gt;Ink&lt;/a&gt; 已经衍生出大量命令行应用程序；在此强烈推荐了解、学习、使用。&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/62eb42e2d0c36f26c3674324&quot;&gt;倾城之链 - GitHub - vadimdemedes/ink: 🌈 React for interactive command-line apps&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/%E6%89%A9%E5%B1%95&quot;&gt;&lt;code&gt;扩展&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E6%A1%86%E6%9E%B6&quot;&gt;&lt;code&gt;框架&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/React&quot;&gt;&lt;code&gt;React&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;关键字&lt;/strong&gt;：browser extension, chrome extension, developer tools, developer tooling, continuous integration, security, cybersecurity, enterprise&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Plasmo is a platform for making browser extensions at lightning speed. We make it easy to build, test, and deploy browser extensions in a matter of seconds.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/www.plasmo.com.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 - Plasmo | Iterate on every push&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/redirect?url=https://www.plasmo.com/&quot;&gt;Plasmo&lt;/a&gt; 是一个用于开发浏览器扩展的框架、平台，支持开发者&lt;strong&gt;快速&lt;/strong&gt;&lt;code&gt;开发&lt;/code&gt;、&lt;code&gt;测试&lt;/code&gt;、&lt;code&gt;发布&lt;/code&gt;「浏览器扩展」，支持所有主流浏览器（如 Chrome、Firefox、Safari 等等）。&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://nicelinks.site/redirect?url=https://www.plasmo.com/&quot;&gt;Plasmo&lt;/a&gt; 所提供的框架基于 React，类似于浏览器扩展的 &lt;a href=&quot;https://nicelinks.site/post/61c928af5be6454b4e3d5146&quot;&gt;Next.js&lt;/a&gt;；通过TypeScript 支持、自动引导 manifest.json、资产生成、自动捆绑等，享受最先进的浏览器扩展开发者体验，零配置、自动化部署。基于 plasmo 开发浏览器框架，具备哪些优势呢？官方有额外给出以下好处：&lt;/p&gt;&lt;h3 id=&quot;开发&quot;&gt;&lt;a href=&quot;#%E5%BC%80%E5%8F%91&quot; aria-label=&quot;开发 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;开发&lt;/h3&gt;&lt;p&gt;使用 Plasmo 的零配置声明性扩展框架更快地迭代。&lt;/p&gt;&lt;h3 id=&quot;测试&quot;&gt;&lt;a href=&quot;#%E6%B5%8B%E8%AF%95&quot; aria-label=&quot;测试 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;测试&lt;/h3&gt;&lt;p&gt;在数百个站点上测试您的扩展程序，并将安全漏洞留在尘埃中。&lt;/p&gt;&lt;h3 id=&quot;发布&quot;&gt;&lt;a href=&quot;#%E5%8F%91%E5%B8%83&quot; aria-label=&quot;发布 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;发布&lt;/h3&gt;&lt;p&gt;简化向每个 Web 商店的提交、更新和发布。&lt;/p&gt;&lt;p&gt;Plasmo 框架是由黑客为黑客制作的电池组（battery-packed）浏览器扩展 SDK 。构建您的产品，不再担心配置文件和构建浏览器扩展的奇怪特性。该项目在 Github 开源，支持开发者免费使用；如果您想再进一步增强您的浏览器扩展开发，可以考虑付费（Pro） ，从而使用规模测试、秘密扫描等高级功能。&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/62ea8b8abea86d1ae27b7bd4&quot;&gt;倾城之链 - Plasmo | Iterate on every push&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/%E6%9E%84%E5%BB%BA&quot;&gt;&lt;code&gt;构建&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/Svelte&quot;&gt;&lt;code&gt;Svelte&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/JavaScript&quot;&gt;&lt;code&gt;JavaScript&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;SvelteKit is the official Svelte application framework&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/kit.svelte.dev.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 - SvelteKit • The fastest way to build Svelte apps&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/redirect?url=https://kit.svelte.dev/&quot;&gt;SvelteKit&lt;/a&gt; ，是构建 &lt;a href=&quot;https://nicelinks.site/post/62a9c2ad90509e23cea772c0&quot;&gt;Svelte&lt;/a&gt; 应用最快的方法；它是可以用于&lt;a href=&quot;https://nicelinks.site/tags/%E6%9E%84%E5%BB%BA&quot;&gt;构建&lt;/a&gt;各种规模的 Web 应用程序的框架，具有出色的开发体验，以及灵活的基于文件系统的路由（跟 &lt;a href=&quot;https://nicelinks.site/post/6010e1b10c71de1fb957b64e&quot;&gt;Vite&lt;/a&gt;、Webpack、Rollup 类似）。它具有以下功能特征：&lt;/p&gt;&lt;h3 id=&quot;由-svelte-提供支持&quot;&gt;&lt;a href=&quot;#%E7%94%B1-svelte-%E6%8F%90%E4%BE%9B%E6%94%AF%E6%8C%81&quot; aria-label=&quot;由 svelte 提供支持 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;由 Svelte 提供支持&lt;/h3&gt;&lt;p&gt;SvelteKit 是一个由 Svelte 提供支持的应用程序框架——用更小的空间构建更大的应用程序。&lt;/p&gt;&lt;h3 id=&quot;两全其美&quot;&gt;&lt;a href=&quot;#%E4%B8%A4%E5%85%A8%E5%85%B6%E7%BE%8E&quot; aria-label=&quot;两全其美 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;两全其美&lt;/h3&gt;&lt;p&gt;具备服务器渲染（SSR）应用程序的所有 &lt;a href=&quot;https://nicelinks.site/tags/SEO&quot;&gt;SEO&lt;/a&gt; 、渐进增强，以及 SPA 的流畅导航。&lt;/p&gt;&lt;h3 id=&quot;快速构建&quot;&gt;&lt;a href=&quot;#%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BA&quot; aria-label=&quot;快速构建 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;快速构建&lt;/h3&gt;&lt;p&gt;借助高级路由、服务器端渲染、代码拆分、离线支持等功能开始运行。&lt;/p&gt;&lt;p&gt;与单页应用程序不同，SvelteKit 不会在 SEO、渐进增强或初始加载体验方面做出妥协——但与传统的服务器渲染（&lt;code&gt;SSR&lt;/code&gt;）应用程序不同，导航是即时的，具有类似应用程序的感觉。另外，需要说明的是，目前（2022.08）仍处于测试阶段，如果您想了解更多，可以参见 Github 开源项目：&lt;a href=&quot;https://github.com/sveltejs/kit&quot;&gt;SvelteKit&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/62ea86c3bea86d1ae27b7bd2&quot;&gt;倾城之链 - SvelteKit • The fastest way to build Svelte apps&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/%E8%BF%9C%E7%A8%8B&quot;&gt;&lt;code&gt;远程&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E9%85%B7%E5%B7%A5%E4%BD%9C&quot;&gt;&lt;code&gt;酷工作&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E5%BC%80%E5%8F%91%E8%80%85&quot;&gt;&lt;code&gt;开发者&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Proxify helps companies to hire senior and vetted developers in as little as one week. Get matched with the top 2% of developers in days, not months.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/proxify.io.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 - Find and hire quality developers - Proxify&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/redirect?url=https://proxify.io/&quot;&gt;Proxify&lt;/a&gt; ，帮助公司在短短一周内，雇用高级和经过审查的&lt;strong&gt;开发人员&lt;/strong&gt;。在几天内，而不是几个月内，就能与前 2% 的开发人员匹配。据其官方网站描述：22 个不同国家/地区的 350 多家公司信任 Proxify 扩展他们的开发团队。无论您的技术堆栈是什么，他们已经证明，经过审查的开发人员准备在一周内开始。Proxify 列举了应该使用他们进行招聘的原因：&lt;/p&gt;&lt;h3 id=&quot;在几天内而不是几个月内雇用&quot;&gt;&lt;a href=&quot;#%E5%9C%A8%E5%87%A0%E5%A4%A9%E5%86%85%E8%80%8C%E4%B8%8D%E6%98%AF%E5%87%A0%E4%B8%AA%E6%9C%88%E5%86%85%E9%9B%87%E7%94%A8&quot; aria-label=&quot;在几天内而不是几个月内雇用 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;在几天内而不是几个月内雇用&lt;/h3&gt;&lt;p&gt;所有 Proxify 开发人员都经过预先审查，因此您将有一个新的团队成员准备好在几天内开始工作。不是几个月。&lt;/p&gt;&lt;h3 id=&quot;最好的开发商&quot;&gt;&lt;a href=&quot;#%E6%9C%80%E5%A5%BD%E7%9A%84%E5%BC%80%E5%8F%91%E5%95%86&quot; aria-label=&quot;最好的开发商 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;最好的开发商&lt;/h3&gt;&lt;p&gt;所有开发人员都会说英语，并具有成熟的技术技能。Proxify 仅接受每月收到的 5000 多名申请者中的 2%。&lt;/p&gt;&lt;h3 id=&quot;有竞争力的价格&quot;&gt;&lt;a href=&quot;#%E6%9C%89%E7%AB%9E%E4%BA%89%E5%8A%9B%E7%9A%84%E4%BB%B7%E6%A0%BC&quot; aria-label=&quot;有竞争力的价格 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;有竞争力的价格&lt;/h3&gt;&lt;p&gt;Proxify 的目标是长期结对开发人员。这就是我们比竞争对手便宜 50% 的原因。&lt;/p&gt;&lt;h3 id=&quot;完美的搭配&quot;&gt;&lt;a href=&quot;#%E5%AE%8C%E7%BE%8E%E7%9A%84%E6%90%AD%E9%85%8D&quot; aria-label=&quot;完美的搭配 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;完美的搭配&lt;/h3&gt;&lt;p&gt;Proxify 的技术团队将帮助您找到：不仅技术合格，而且有积极性加入您的团队的开发人员。&lt;/p&gt;&lt;p&gt;基于 Proxify 寻求开发者，只需要三个步骤即可：&lt;/p&gt;&lt;h3 id=&quot;第-1-步告诉我们您的需求&quot;&gt;&lt;a href=&quot;#%E7%AC%AC-1-%E6%AD%A5%E5%91%8A%E8%AF%89%E6%88%91%E4%BB%AC%E6%82%A8%E7%9A%84%E9%9C%80%E6%B1%82&quot; aria-label=&quot;第 1 步告诉我们您的需求 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;第 1 步：告诉我们您的需求&lt;/h3&gt;&lt;p&gt;与技术经理讨论您对产品或项目的要求和目标。&lt;/p&gt;&lt;h3 id=&quot;第-2-步匹配完美的开发者&quot;&gt;&lt;a href=&quot;#%E7%AC%AC-2-%E6%AD%A5%E5%8C%B9%E9%85%8D%E5%AE%8C%E7%BE%8E%E7%9A%84%E5%BC%80%E5%8F%91%E8%80%85&quot; aria-label=&quot;第 2 步匹配完美的开发者 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;第 2 步：匹配完美的开发者&lt;/h3&gt;&lt;p&gt;几天之内，将向您展示经过精心挑选和全面审查的开发人员。&lt;/p&gt;&lt;h3 id=&quot;第-3-步开始合作无风险&quot;&gt;&lt;a href=&quot;#%E7%AC%AC-3-%E6%AD%A5%E5%BC%80%E5%A7%8B%E5%90%88%E4%BD%9C%E6%97%A0%E9%A3%8E%E9%99%A9&quot; aria-label=&quot;第 3 步开始合作无风险 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;第 3 步：开始合作（无风险）&lt;/h3&gt;&lt;p&gt;工作开始。一周内完全无风险。只有满意时才付费。&lt;/p&gt;&lt;p&gt;与其他平台和机构不同，Proxify 专注于帮助您以合理的价格，获得长期发展合作伙伴，而不是零时工。这就是为什么大多数团队成员都在位超过 12 个月的原因。避免惊慌失措的项目，并找到可靠的开发人员加入您的团队。&lt;/p&gt;&lt;p&gt;如果您是开发者，您可以通过 Proxify 平台，申请成为「开发者」，或能帮助您找到合适的工作。除了招聘业务外，Proxify 还提供了大量技术相关文章分享；有通过 Google 搜索 SPA SEO 相关答案，从而知晓 Proxify 平台的存在。&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/62e9e167bea86d1ae27b7bd0&quot;&gt;倾城之链 - Find and hire quality developers - Proxify&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/SEO&quot;&gt;&lt;code&gt;SEO&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/JavaScript&quot;&gt;&lt;code&gt;JavaScript&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E6%9C%8D%E5%8A%A1&quot;&gt;&lt;code&gt;服务&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Get higher rankings by serving search engine crawlers a static HTML version of your Javascript website, without compromising your customers’ experience.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/prerender.io.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 - Render Javascript With Search Engines in Mind | Prerender&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;： &lt;a href=&quot;https://nicelinks.site/redirect?url=https://prerender.io/&quot;&gt;Prerender.io&lt;/a&gt; ，它通过为爬虫提供 JavaScript 网站的静态 HTML 版本，在不影响客户体验的情况下获得&lt;strong&gt;更高的排名&lt;/strong&gt;。是针对单页面应用（SPA）解决 SEO 问题的零侵入解决方案。&lt;/p&gt;&lt;h3 id=&quot;预渲染产生背景&quot;&gt;&lt;a href=&quot;#%E9%A2%84%E6%B8%B2%E6%9F%93%E4%BA%A7%E7%94%9F%E8%83%8C%E6%99%AF&quot; aria-label=&quot;预渲染产生背景 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;预渲染产生背景&lt;/h3&gt;&lt;p&gt;如果您有从事现代前端开发相关工作，使用 &lt;a href=&quot;https://nicelinks.site/post/5b2b7f663bd7ef3847a3fadf&quot;&gt;Angular&lt;/a&gt; ， &lt;a href=&quot;https://nicelinks.site/post/5b1a221c0526c920d6dfaada&quot;&gt;Vue&lt;/a&gt; ， &lt;a href=&quot;https://nicelinks.site/post/5b1294b5e93ed2618cfac134&quot;&gt;React&lt;/a&gt; 等框架，进行单页应用开发，用户在浏览时，在浏览器动态请求并解析JavaScript、CSS，然后渲染并呈现出最终的页面；用户体验比较好，网站性能也提高不少。但存在一个问题：网络爬虫并不会动态解析 JavaScript（事实上，Google 引擎会抓取，但效果上不是特别理想），访问所有 URL 得到的只是项目入口文件中的代码，不能得到具体的内容（完整 html 源码）；如此一来，网站 SEO 就无从谈起。&lt;/p&gt;&lt;p&gt;除了上述提及的客户端渲染 (&lt;code&gt;CSR&lt;/code&gt; Croswer Side Render)，完全可以基于 SSR（ Server Side Render 服务端渲染）、SSG（Static Site Generation 静态页面生成）、本地预渲染（诸如 &lt;a href=&quot;https://github.com/chrisvfritz/prerender-spa-plugin&quot;&gt;Prerender SPA Plugin&lt;/a&gt; ）等方案，从而解决 SEO 问题。且不说是否合适、会不会影响渲染速度，单就从实现角度，需要对已经采用 &lt;code&gt;CSR&lt;/code&gt; 方案的项目，进行颇多修改，才能达成目的。&lt;/p&gt;&lt;h3 id=&quot;预渲染方案好处&quot;&gt;&lt;a href=&quot;#%E9%A2%84%E6%B8%B2%E6%9F%93%E6%96%B9%E6%A1%88%E5%A5%BD%E5%A4%84&quot; aria-label=&quot;预渲染方案好处 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;预渲染方案好处&lt;/h3&gt;&lt;p&gt;而在服务端使用「预渲染」方案，则无需对现有项目改造，代码&lt;strong&gt;零侵入&lt;/strong&gt;完成。其思路是：对于用户正常访问，提供构建的源码，走客户端渲染；而对于搜索引擎爬虫，则在后台启动无头浏览器，返回渲染完成后抓取 HTML 内容。Github 开源项目 &lt;a href=&quot;https://github.com/prerender/prerender&quot;&gt;prerender&lt;/a&gt; 即是基于这种理念：通过向 Google 和其他搜索引擎，提供预渲染的 HTML 来解决 SEO；它使用 Headless Chrome 将 javascript 呈现的页面呈现为 HTML 的节点服务器。与预渲染中间件一起使用。您可以克隆该项目，部署在自己的服务器，结合 Nginx 配置，即可开启您 SPA 项目的 SEO 之路。&lt;/p&gt;&lt;h3 id=&quot;prerenderio-提供什么服务&quot;&gt;&lt;a href=&quot;#prerenderio-%E6%8F%90%E4%BE%9B%E4%BB%80%E4%B9%88%E6%9C%8D%E5%8A%A1&quot; aria-label=&quot;prerenderio 提供什么服务 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;Prerender.io 提供什么服务？&lt;/h3&gt;&lt;p&gt;&lt;code&gt;prerender&lt;/code&gt; 项目由 &lt;a href=&quot;https://nicelinks.site/redirect?url=https://prerender.io/&quot;&gt;Prerender.io&lt;/a&gt; 出品（其内部基于 Headless Chrome，与 &lt;a href=&quot;https://nicelinks.site/post/625c3735ac29ce06470af877&quot;&gt;Google Puppeteer&lt;/a&gt; 类似），也可以使用 &lt;a href=&quot;https://nicelinks.site/redirect?url=https://prerender.io/&quot;&gt;Prerender.io&lt;/a&gt; 提供的服务；它旨在加快向搜索爬虫提供内容的速度，从而提高您的 SEO 分数。只需注册、登录、按照说明进行 Nginx 配置即可；相比自己部署的 &lt;code&gt;prerender&lt;/code&gt; 服务，有更快的速度、更多可选项设置、强大的仪表盘、缓存管理器以及其他缓存相关活动操作。&lt;/p&gt;&lt;p&gt;需要说明的是，&lt;code&gt;Prerender.io&lt;/code&gt; 必须与您的 Web 服务器/后端/CDN 集成，以具有确定哪些请求将被转发到 Prererender 的机制。Prerender.io 是如何工作的？可以参见 &lt;a href=&quot;https://docs.prerender.io/docs/how-does-prerender-work&quot;&gt;Prerender.io 文档 ｜ 入门说明&lt;/a&gt; 。&lt;/p&gt;&lt;h3 id=&quot;为什么使用-prerender&quot;&gt;&lt;a href=&quot;#%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BD%BF%E7%94%A8-prerender&quot; aria-label=&quot;为什么使用 prerender permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;&lt;strong&gt;为什么使用 Prerender®&lt;/strong&gt;？&lt;/h3&gt;&lt;p&gt;相比于客户端渲染、服务器端渲染，很多场景下，动态渲染更有用武之地；服务器可以区分「人类」和「机器人」，为人类提供完整的体验，为机器人提供轻量级的 HTML 版本。为何推荐使用 Prerender？官方给出了以下几个可以说服你的答案：&lt;/p&gt;&lt;h4 id=&quot;让-google-和您的用户满意&quot;&gt;&lt;a href=&quot;#%E8%AE%A9-google-%E5%92%8C%E6%82%A8%E7%9A%84%E7%94%A8%E6%88%B7%E6%BB%A1%E6%84%8F&quot; aria-label=&quot;让 google 和您的用户满意 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;让 Google 和您的用户满意&lt;/h4&gt;&lt;p&gt;Prerender 的中间件会检测 Google 何时访问您的网站，从而生成易于抓取的版本。人类用户可以看到动态的 Javascript 版本，让您控制他们的体验。&lt;/p&gt;&lt;h4 id=&quot;谷歌推荐&quot;&gt;&lt;a href=&quot;#%E8%B0%B7%E6%AD%8C%E6%8E%A8%E8%8D%90&quot; aria-label=&quot;谷歌推荐 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;谷歌推荐&lt;/h4&gt;&lt;p&gt;Google 和 Bing 建议使用动态呈现解决方案来解决 JavaScript 呈现问题。事实上，Google 的文档特别推荐 Prerender®，因此您可以专注于开发并将 SEO 留给营销人员。&lt;/p&gt;&lt;h4 id=&quot;简单可靠可扩展的服务&quot;&gt;&lt;a href=&quot;#%E7%AE%80%E5%8D%95%E5%8F%AF%E9%9D%A0%E5%8F%AF%E6%89%A9%E5%B1%95%E7%9A%84%E6%9C%8D%E5%8A%A1&quot; aria-label=&quot;简单可靠可扩展的服务 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;简单、可靠、可扩展的服务&lt;/h4&gt;&lt;p&gt;只需快速安装我们的中间件即可。Prerender 的托管服务以 99.9% 的服务承诺负责其余的工作。&lt;/p&gt;&lt;h4 id=&quot;开源和社区支持&quot;&gt;&lt;a href=&quot;#%E5%BC%80%E6%BA%90%E5%92%8C%E7%A4%BE%E5%8C%BA%E6%94%AF%E6%8C%81&quot; aria-label=&quot;开源和社区支持 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;开源和社区支持&lt;/h4&gt;&lt;p&gt;Prerender® 由关心软件的行业专家组成的热情社区维护。无论您的配置如何，他们都有解决方案。您甚至可以构建自己的服务器。&lt;/p&gt;&lt;p&gt;本站「 &lt;a href=&quot;https://nicelinks.site/&quot;&gt;倾城之链&lt;/a&gt; 」是基于 &lt;a href=&quot;https://nicelinks.site/post/5b1a221c0526c920d6dfaada&quot;&gt;Vue&lt;/a&gt; 等技术栈所开发的单页应用（SPA），且没有基于 SSR、SSG 做首屏、SEO 优化。早期基于 &lt;a href=&quot;https://github.com/prerender/prerender&quot;&gt;prerender&lt;/a&gt; 对搜索爬虫做了预渲染处理，由于没有进一步折腾，效果一般。目前采用 &lt;a href=&quot;https://nicelinks.site/redirect?url=https://prerender.io/&quot;&gt;Prerender.io&lt;/a&gt; 提供的免费服务，可以在仪表盘看到：Googlebot 抓取频率相对很高，越来越多页面「缓存命中」；百度和必应的抓取频率比起 Google 要低太多；整体效果正在持续观察中。如果您也为单页应用 SEO 问题而发愁，Prerender.io 是非常值得关注和使用的服务。&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/62e60030bd6b821eb12244e2&quot;&gt;倾城之链 - Render Javascript With Search Engines in Mind | Prerender&lt;/a&gt;&lt;/p&gt;&lt;p&gt;对倾城之链感兴趣的朋友，可通过 Web，小程序，快应用等渠道进行访问(后续将支持更多，如 VsCode 插件，Chrome 扩展等)。您有任何问题，欢迎随时向我们反馈（您可以通过官网反馈渠道，或添加如下客服微信），🤲 。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://image.nicelinks.site/%E5%80%BE%E5%9F%8E%E4%B9%8B%E9%93%BE-%E5%BE%AE%E4%BF%A1-mini.jpeg&quot; alt=&quot;倾城之链 - 客服微信&quot;/&gt;&lt;/p&gt;&lt;h2 id=&quot;本期文末寄语&quot;&gt;&lt;a href=&quot;#%E6%9C%AC%E6%9C%9F%E6%96%87%E6%9C%AB%E5%AF%84%E8%AF%AD&quot; aria-label=&quot;本期文末寄语 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;本期文末寄语&lt;/h2&gt;&lt;p&gt;心体澄彻，常在明镜止水之中，则天下自无可厌之事；意气和平，常在丽日光风之内，则天下自无可恶之人。当是非邪正之交，不可少迁就，少迁就则失从违之正；值利害得失之会，不可太分明，太分明则起趋避之私。──明 · 洪应明 《菜根谭》&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://nicelinks.site/?utm_source=weekly&quot;&gt;倾城之链&lt;/a&gt;作为一个开放平台，旨在云集全球&lt;strong&gt;优秀网站&lt;/strong&gt;，探索互联网中更广阔的世界；在这里，你可以轻松发现、学习、分享更多有用或有趣的事物。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://image.nicelinks.site/nicelinks-miniprogram-code.jpeg?imageView2/1/w/250/h/250/interlace/1/ignore-error/1&quot; alt=&quot;小程序码 - 倾城之链&quot;/&gt;&lt;/p&gt;&lt;h2 id=&quot;您可能感兴趣的文章&quot;&gt;&lt;a href=&quot;#%E6%82%A8%E5%8F%AF%E8%83%BD%E6%84%9F%E5%85%B4%E8%B6%A3%E7%9A%84%E6%96%87%E7%AB%A0&quot; aria-label=&quot;您可能感兴趣的文章 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;您可能感兴趣的文章&lt;/h2&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>4fb9ba0edc76959c291cbb34e9dafd27</guid>
<title>可视化服务编排在金融APP中的实践</title>
<link>https://toutiao.io/k/z6pdqve</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                           autoTypeSetting24psection&amp;#10;                          &quot; id=&quot;js_content&quot;&gt;
            &lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;h1&gt;&lt;section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;&lt;section&gt;&lt;h1&gt;&lt;section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-fileid=&quot;100005331&quot; data-ratio=&quot;0.6506849315068494&quot; data-type=&quot;png&quot; data-w=&quot;146&quot; data-width=&quot;100%&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/RQv8vncPm1UibHPAanTaZmNVW2yn5bYF7O5pGDH1QmUNa2XCUichFvjlOqV5sfnlHaKRALYlrlRCpZygon1I3PIg/640?wx_fmt=png&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;&lt;span&gt;Tech&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/h1&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;导读&lt;/span&gt;&lt;/h2&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;本文重点介绍了京东金融APP在BFF层实践过程中遇到的问题，并引出可视化服务编排在金融APP中的落地实践，其中重点介绍了可视化服务编排系统的核心功能及实现。可视化服务编排系统已经稳定支持了金融APP从去年618到现在的所有发版迭代，对人效提升帮助明显，希望能够对大家在BFF的实践有参考意义。&lt;/span&gt;&lt;span&gt;读者通过这篇文章可以了解到基于传统编码方式来实现业务需求时遇到的问题和挑战，以及通过“可视化服务编排”如何规避及解决之前遇到的问题。&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/h1&gt;&lt;section data-id=&quot;98782&quot; data-tools=&quot;135编辑器&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;01 &lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-brushtype=&quot;text&quot; hm_fix=&quot;263:265&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;前言&lt;/strong&gt;&lt;/span&gt;&lt;strong/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;在今年的敏捷团队建设中，我通过Suite执行器实现了一键自动化单元测试。Juint除了Suite执行器还有哪些执行器呢？由此我的Runner探索之旅开始了！&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;94065&quot;&gt;&lt;p&gt;&lt;span&gt;随着SOA架构的提出到微服务架构的落地实践，原本在同一个系统内运行的业务被拆分到了不同的系统或服务中。这样做，在增加业务架构灵活性的同时，也给端上的调用带来了更多的复杂性，如：原本一次请求即可处理完成的业务，现在可能需要多次请求才能完成。为了降低端上逻辑的复杂性并提高前后端交互效率，BFF层应运而生。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;BFF作为前后端的代理层，为端上的应用提供了一个业务接口聚合层，它屏蔽了复杂的服务调用关系，让端上应用可以聚焦在所需要的数据上，而不用关心提供数据的具体服务。但BFF实践的过程中，也遇到了很多问题和挑战，如BFF层的需求往往比较简单，但通过硬编码的方式实现，流程非常繁琐且效率低，那如何提高BFF层需求的交付效率，便是目前需要重点关注解决的问题。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section data-id=&quot;98782&quot; data-tools=&quot;135编辑器&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;02&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;span&gt;&lt;strong&gt;  BFF实践中的问题 &lt;/strong&gt;&lt;/span&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;理解，首先 MCube 会依据模板缓存状态判断是否需要网络获取最新模板，当获取到模板后进行模板加载，加载阶段会将产物转换为视图树的结构，转换完成后将通过表达式引擎解析表达式并取得正确的值，通过事件解析引擎解析用户自定义事件并完成事件的绑定，完成解析赋值以及事件绑定后进行视图的渲染，最终将目标页面展示到屏幕&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;BFF（Backend For Frontend）, 即服务于前端的后端，可看做是一个后端服务的代理层，它主要做接口聚合和响应数据裁剪。这里需要指出的是：BFF 只是架构分层中引入的一个概念，而非一种技术。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;BFF层的核心职责是为前端（包括原生、小程序、H5等）适配不同的业务场景，降低客户端与业务端的耦合，前期通过硬编码的方式来实现BFF层的需求，是最简单最直接的方式。但随着BFF层承接业务需求的增多，通过编码的方式也逐渐暴露出一些问题，如编码效率低、编码细节难以规范、调试测试效率低和服务治理能力弱等。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;94065&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;2.1 &lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;编码效率低&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-width=&quot;90%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;在接到一个新的业务需求，除了前期的需求沟通外，开始编码前，通常还需要做一些准备工作，对于Java应用来说，流程大概是这样的：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.3086705202312139&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;865&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/RQv8vncPm1VL0uNianzSL1R3qHJCic0U7JoCn1rgKibcQDtib7jYRdSKGzPa68v85T0c7YVWKr1L1MPslhxd5sXlfw/640?wx_fmt=png&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;整个流程中，有太多需要人工处理及等待的步骤，这将会大大降低整个研发流程的效率，虽然现在有一些CI/CD的工具可以减少部分等待时间，但整体的编码体验及效率上的问题还是得不到根本的解决。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;94065&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;2.2 &lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;strong&gt;编码细节难以规范&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-width=&quot;90%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;由BFF层的特点决定，其承接的需求大多是对业务接口进行整合输出，包括对多个接口的调用、对返回数据进行裁剪、排序、格式化等操作。单看接口的调用方式就有多种实现，如并行调用、串行调用等，为了降低服务的响应时间和提高系统性能及吞吐量，多个无依赖关系的接口我们通常会采用并行调用的方式实现。并行调用，我们可以通过线程池实现，也可以通过事件回调的方式实现，通过事件回调相对于线程池的实现会有更高的性能和稳定性，但实现起来也会更复杂，研发同学通常都会选择更简单线程池实现。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;94065&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;2.3 &lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;调试测试效率低&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-width=&quot;90%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;虽然市面上目前有很多单元测试的工具和框架，但使用起来都少不了配置和编码环节。只要有功能添加或修改，我们就要编写对应的单元测试代码，另外单元测试代码运行大多需要启动整个应用，而应用的启动通常都是分钟级的，这就导致我们研发效率进一步降低。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;此外，开发环境中，我们依赖的业务接口通常是部署测试环境的，但测试环境经常会有部署、重启的操作，甚至有些接口都没有测试环境，这就对我们研发调试带来了更多不便。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;94065&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;94065&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;2.4 服务治理能力弱&lt;/span&gt;&lt;/strong&gt;&lt;strong/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-width=&quot;90%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;代码本质上是非结构化的文本数据，我们很难基于代码进行统计，尤其是大促备战前，我们需要知道某个业务方的接口都被哪些服务引用或被哪些页面调用了，此时接口和服务间的依赖关系就显得尤为重要，但基于编码的方式我们是很难做到精准统计，虽然有一些调用链追踪工具可以提供帮助，但还是不够直接，还是需要人肉的去做进一步的识别。&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-id=&quot;98782&quot; data-tools=&quot;135编辑器&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;03&lt;/span&gt;&lt;/strong&gt;&lt;span&gt; &lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;span&gt;&lt;strong&gt;  可视化服务编排 &lt;/strong&gt;&lt;/span&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;理解，首先 MCube 会依据模板缓存状态判断是否需要网络获取最新模板，当获取到模板后进行模板加载，加载阶段会将产物转换为视图树的结构，转换完成后将通过表达式引擎解析表达式并取得正确的值，通过事件解析引擎解析用户自定义事件并完成事件的绑定，完成解析赋值以及事件绑定后进行视图的渲染，最终将目标页面展示到屏幕。&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;可视化服务编排的提出，就是为了解决上面提到的问题。可视化服务编排的初衷是希望尽可能地抛弃代码，通过线上可视化拖拽的方式完成功能的开发、调试、测试和上线，我们不写代码或写少量代码就能完成业务需求的交付，没有代码就消除了前面提到的大多问题，这样极大提高研发的交付效率及编码幸福感。整个服务的编排效果如下图所示：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.36647398843930634&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;865&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/RQv8vncPm1VL0uNianzSL1R3qHJCic0U7JKz9gTgbTg8nh6XbsEmXVNsjFBgJCQHYRGbt3vp9hmTNpGC679OZS8w/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我们可以通过&lt;/span&gt;&lt;span&gt;线上拖拽的方式完成接口调用关系的编排，如接口的串行、并行和排他调用等，通过简单的脚本完成不同业务需求的定制，如对接口返回数据的裁剪、排序、格式化等操作。编排后可通过在线测试的功能，直接对编排的服务进行测试，实时秒级验证功能的正确性，可以最大程度降低编码及编译打包的等待时间，提高业务整体的交付效率。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;94065&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;94065&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;3.1 核心功能&lt;/span&gt;&lt;/strong&gt;&lt;strong/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-width=&quot;90%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;span&gt;可视化服务编排系统的核心功能都是对BFF日常需求及研发流程的抽象，从接口的调用方式、出入参的处理、接口异常情况的处理、服务的调试测试、服务的上线流程等几个维度完成系统整体功能的设计。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;接口间调用关系可以抽象为：串行调用、并行调用、排他调用。当依赖的接口间没有依赖关系时，我们可以通过并行的方式，对所有所有同时发起请求，这样可以减少服务的响应时间，从而提高系统整体的吞吐量。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;当服务依赖的接口有依赖关系时，如接口A的入参需要通过调用接口B来获取，那接口A和接口B之间就必须通过串行的方式调用，即需要先调用接口B，拿到接口B的响应结果才能才调用接口A。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;排他调用就好比代码中的if...else，非A即B，这种场景主要用于根据条件判断调用接口A还是调用接口B，或是执行其他的业务逻辑。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;根据不同的业务需求和场景，串行、并行和排他的调用方式可能在一个服务中同时存在，所以功能的实现中必须支持不同调用方式的组合及嵌套。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.4323699421965318&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;865&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/RQv8vncPm1VL0uNianzSL1R3qHJCic0U7JOKZunsFicStMDxyv1NY6CQvbY9LLOVHxfMZCYzYWVvmibYMKOaGrjPCA/640?wx_fmt=png&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;接口的入参主要有静态和动态两种形式，针对静态的入参，只需要在界面上提供输入框配置即可。针对动态的参数，值可能来自于其他接口的返回结果，也可能来自动态生成的，如随机数、UUID等，所以编排系统提供了通过表达式或脚本的方式来取值或生成值，以适配灵活的业务场景。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1.396681749622926&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;663&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/RQv8vncPm1VL0uNianzSL1R3qHJCic0U7JtywypLhoiaIfEnmRL5uicWQW3TxtyrOLS1HGGPqDw5rHZMrISYjlGrng/640?wx_fmt=png&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;接口的异常&lt;/span&gt;&lt;span&gt;通&lt;/span&gt;&lt;span&gt;常&lt;/span&gt;&lt;span&gt;由两个维度进&lt;/span&gt;&lt;span&gt;行判定，一是接口是否调用成功，如果接口抛出异常或超时都可以&lt;/span&gt;&lt;span&gt;认为是接口调用失败，另一种情况是接口返回数据是否符全预期，如果接口调用成功，但返回的数据不是预期的，如关键字段没有返回或返回的数据格式不正确，同样需要将接口调用判&lt;/span&gt;&lt;span&gt;定为失败。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;接口调用失败的情况下，不同场景下的处理策略可能也会不一样，因为有的接口并不是业务强依赖的，即便此接口出现问题也不会影响整个服务的响应。但有些接口则是服务强依赖的，如果请求失败则要求返回兜底数据或直接返回错误。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;所以对接口的异常判定和异常的处理方式设计了针对性的功能，即“ 异常断言”、“异常处理策略”和“异常处理器”。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;异常断言需要用户填写表达式，用于判断接口返回结果是否符合预期，当异常断言返回True时，则认为接口的调用是失败的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;异常处理策略则分为“忽略”和“中断”，针对弱依赖接口可以使用“忽略”处理策略，此时如果接口调用被判定为失败，则会执行对应的“异常处理器”，用于根据实际业务需求返回对应的兜底数据。针对强依赖的接口可以使用“中断”处理策略，直接返回错误。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1.0023121387283238&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;865&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/RQv8vncPm1VL0uNianzSL1R3qHJCic0U7J3Pp1mqprKY3LiawdLuf2dIExJpm21IHX22DNc2Jl1BpeiaGuxkZ9U5Bw/640?wx_fmt=png&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;将需求从之前硬编码改为线上可视化编排的方式来实现，原本的编码习惯及调试测试的相关功能就需要在线上得到体现，为了方便服务的调试及测试，编排系统添加了调试控制台和接口数据Mock的功能。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;调试控制台可以在线实时查看服务执行输出的日志，方便研发同学对服务调试过程中的问题进行排查和定位。&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5098265895953757&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;865&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/RQv8vncPm1VL0uNianzSL1R3qHJCic0U7Jib2NwI5FCBk9eS8pXDROMOqmOmPpAq8TmItZGPVsuAjXHeXNvf6dCpg/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;为方便研发同学根据用例自测服务，编排系统添加了接口响应Mock的功能，可根据入参进行匹配并返回特定的数据，这样研发同学就可以不依赖业务方的接口返回，自己通过数据Mock的方式完成服务的自测，从而提高研发效率。接口Mock的功能如下图所示：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.47630057803468207&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;865&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/RQv8vncPm1VL0uNianzSL1R3qHJCic0U7J23icLTSfelU5nnvnJJYx1HBNkUTAnNdshbLIp4ibHx2eIRoXZscLtm9g/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;基于传统编码的方式，当需求开发完成后，除去一些审批和验证流程，上线过程可以概括为以下3个核心步骤：代码提交-&amp;gt;编译打包-&amp;gt;上线部署，其中最关键的步骤为“上线部署”环节，我们需要重启应用或容器，应用重启需要的时间大多是分钟级的，通常完成一台机器的部署需要3-5分钟，且随着机器的增多，整个上线过程所需的时间也会增多。而通过编排实现的服务，整个上线过程都不需要重启应用，其核心部署工作就是刷新内存数据，只需要线上选择要部署的机器，即可在秒级内完成服务的部署。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.6346820809248555&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;865&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/RQv8vncPm1VL0uNianzSL1R3qHJCic0U7JicTFvnIQz0N9PPGyNeL4KnZh2oPib4uSgRZ5Mj2XkmcOduickPqSDdLVg/640?wx_fmt=png&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;94065&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;94065&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;3.2 功能实现&lt;/span&gt;&lt;/strong&gt;&lt;strong/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-width=&quot;90%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;可视化服务编排系统的核心功能有两个，一个是前端编排画布，一个是后端服务执行引擎。编排画布用于实现可视化操作部分，其核心功能是定义可操作的功能并根据用户的意图生成后端可解析执行的DSL。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;关于DSL的选择，方向主要有两个，一种是根据功能需求，定义一套全新的描述规范，另一种是基于已有的标准进行扩展。通过对前后端实现的复杂度及时间成本的考虑，最终决定基于BPMN规范进行裁剪和扩展，以实现编排整体的DSL规范定义。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;BPMN（Business Process Modeling Notation），即业务流程建模符号，是一种流程建模的通用、标准语言，通常用来绘制业务流程图，如OA审批流等。服务编排本质上也是流程编排，在BFF场景下，并不需要BPMN定义的所有功能，所以我们只需要对标准的BPMN进行裁剪即可。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;建模语言确定后，我们需要做的是确定如何实现编排画布。通过调研开源BPMN建模工具，从易用性、开放性、活跃度等几个方面考虑，最后决定基于bpmn.js二次开发来完成前端整个编排画布的实现。bpmn.js是一个基于BPMN2.0渲染引擎和建模工具，基于Web，使用JavaScript编写。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;因为bpmn.js原生画板及属性面板是基于标准的BPMN的规范来实现的，在BFF场景下，其中很多配置和属性是冗余的，为了优化用户的操作体验及降低实现复杂度，我们对bpmn.js中的属性面板基于VUE进行了重构，裁剪了BFF中不太关注的属性，添加了BFF中特有的配置项，整个编排画布效果如下：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5109826589595375&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;865&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/RQv8vncPm1VL0uNianzSL1R3qHJCic0U7JX0933YNn7WNdjhgMWrVn4D1z1oz8hqmLRwwy6hG8AToBISib3jZBP0g/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;执行引擎是编排系统最核心的功能，其负责执行编排出来的服务。在执行引擎的研发过程中，调研了市面上已有的工具，但不管是从性能、灵活性还是可维护性上，都达不到我们的要求，另外基于已有的引擎做二次开发，时间成本及后续的维护成本也很高，所以最后决定通过自研的方式完成执行引擎的实现。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;IO选择&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;因为BFF的核心功能是接口调用及对接口返回的数据进行处理，所以网络IO这块采用的是全链路异步IO，基于事件回调的方式实现，这样做可以带来两个直接好处：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;1. 高性能：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;IO异步化后，使用极少的线程即可完成大量并发请求的处理，可明显减少高并发场景下CPU上下文切换带来的额外性能损耗；&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;2. 高稳定性：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;异步IO消除了因上游接口响应延迟导致自身线程池打满的情况，对服务稳定性有更好的保障；&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;预处理&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;相较于传统执行引擎解释执行的方式，自研引擎在初始化的过程中会将整个流程提前预处理为一个个“执行单元”，即“单元化”，不同执行单元进行嵌套组合完成整个流程的执行，这样做的好处是，系统可以在执行前完成整个流程的预编译，将一些没必要在运行期的判断、检查逻辑提前到预处理环节，从而减少运行期的逻辑，提高引擎的整体执行性能。执行引擎核心功能参见下图：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.7283236994219653&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;865&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/RQv8vncPm1VL0uNianzSL1R3qHJCic0U7JQcbic8NEyoIvA02VJLPe4ibWbxG15qLj0X9os3CsVv5IZEPmicQToebKg/640?wx_fmt=png&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;h1&gt;&lt;section data-id=&quot;98782&quot; data-tools=&quot;135编辑器&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;04&lt;/span&gt;&lt;/strong&gt;&lt;span&gt; &lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-brushtype=&quot;text&quot; hm_fix=&quot;263:265&quot;&gt;&lt;span&gt;&lt;strong&gt;运行成效&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/h1&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;94065&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;94065&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;4.1 交付效率&lt;/span&gt;&lt;/strong&gt;&lt;strong/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-width=&quot;90%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;BFF的业务需求由原本硬编码的方式改为线上可视化编排后，原来需要线下处理的流程全部转为线上操作，规避掉了大多编译构建及测试的等待时间，对人效提升明显，有些需求从原来的小时级提升为分钟级。&lt;/span&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;94065&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;94065&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;4.2 服务治理能力&lt;/span&gt;&lt;/strong&gt;&lt;strong/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-width=&quot;90%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;通过编排实现业务需求后，可以由系统统一管理服务和接口，这样接口和服务的元数据天然就是结构化的，接口和服务的引用依赖关系可以做到一目了然。由系统管理接口和服务后，可以添加更多维度的标签，如接口归属的业务线、服务归属的页面等，可为日常的管理提供更多维度的统计数据。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-croporisrc=&quot;https://mmbiz.qpic.cn/mmbiz_png/RQv8vncPm1VL0uNianzSL1R3qHJCic0U7Jn6MoUibQDSicz4fWmoMAIE0PVBQqyA3nVb8HuxQGXTNoMcaux7MgQZaA/0?wx_fmt=png&quot; data-cropx1=&quot;71.59861591695501&quot; data-cropx2=&quot;666.1228373702422&quot; data-cropy1=&quot;40.91349480968858&quot; data-cropy2=&quot;566.3961937716263&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.8840336134453781&quot; data-s=&quot;300,640&quot; data-type=&quot;jpeg&quot; data-w=&quot;595&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/RQv8vncPm1VL0uNianzSL1R3qHJCic0U7JgxEdtV3Ca9jrS6YAFOqE9wV1sqNgHx6qAhnvo9fl7kYxQm0Q8icic8tg/640?wx_fmt=jpeg&quot;/&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;94065&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;94065&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;4.3 问题排查效率&lt;/span&gt;&lt;/strong&gt;&lt;strong/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-width=&quot;90%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;基于服务编排实现的需求，天然具有流程图属性，如下图所示，和编码的方式相比，我们对服务的功能逻辑、接口前后依赖关系、调用关系都能一目了然，对我们日常的问题排查提供了有力帮助。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.31445086705202313&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;865&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/RQv8vncPm1VL0uNianzSL1R3qHJCic0U7JYYaIv70oubc1s3VAHyzFmEbnhribjBTtq9xTPIzoaN5iaFRkxmElriclA/640?wx_fmt=png&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;h1&gt;&lt;section data-id=&quot;98782&quot; data-tools=&quot;135编辑器&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;05&lt;/span&gt;&lt;/strong&gt;&lt;span&gt; &lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-brushtype=&quot;text&quot; hm_fix=&quot;263:265&quot;&gt;&lt;span&gt;&lt;strong&gt;总结&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/h1&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;本文重点介绍了京东金融APP在BFF层实践过程中遇到的问题，并引出可视化服务编排在金融APP中的落地实践，其中重点介绍了可视化服务编排系统的核心功能及实现。可视化服务编排系统已经稳定支持了金融APP从去年618到现在的所有发版迭代，对人效提升帮助明显，希望能够对大家在BFF的实践有参考意义。&lt;/span&gt;&lt;/p&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;93679&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-fileid=&quot;100005308&quot; data-ratio=&quot;0.47058823529411764&quot; data-type=&quot;png&quot; data-w=&quot;34&quot; data-width=&quot;100%&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/RQv8vncPm1UibHPAanTaZmNVW2yn5bYF7rUiaXg1tNeElo6pVnvsQhGsVMSiaLn7bT6icNKw0caXsV9icVXUbRQ3S7A/640?wx_fmt=png&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;推荐阅读&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU1MzE2NzIzMg==&amp;amp;mid=2247490126&amp;amp;idx=1&amp;amp;sn=8f69f148b307e19acb1fe3b032954736&amp;amp;chksm=fbf7aaa1cc8023b7f3679801fd2495e8dcde7e6156642421ad40b3a74431691d8bed6b05caeb&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;水滴低代码搭建——6倍提效，新品首发素材审核系统实践之路&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;11&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;水滴低代码搭建——6倍提效，新品首发素材审核系统实践之路&lt;/span&gt;&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU1MzE2NzIzMg==&amp;amp;mid=2247490012&amp;amp;idx=1&amp;amp;sn=91a170ed0482dc95d3bdc0c761edb27a&amp;amp;chksm=fbf7a933cc80202538aa85c3ae05d233cf6df048a51df549e551649d04f37a2e93679de464e3&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;京东科技埋点数据治理和平台建设实践&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;京东科技埋点数据治理和平台建设实践&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU1MzE2NzIzMg==&amp;amp;mid=2247489919&amp;amp;idx=1&amp;amp;sn=3020ede8ac0ee055411cee331b8ccd78&amp;amp;chksm=fbf7a990cc802086be275e08409c50a4810706548d9fec3eb07788cf8e4f972625bb9cc8e37a&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;基于SPI的增强式插件框架设计&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;11&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;基于SPI的增强式插件框架设计&lt;span&gt;‍&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU1MzE2NzIzMg==&amp;amp;mid=2247489842&amp;amp;idx=1&amp;amp;sn=2e0676d3da4fa8ea57875db333650c33&amp;amp;chksm=fbf7a9ddcc8020cbbac60b571d91abcf3847b055e74d71cac1e930895b8351e879f7ac5af3d8&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;京东618广告精排百分位AUC提升技术方案&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;11&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;京东618广告精排百分位AUC提升技术方案&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mp-common-profile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-id=&quot;MzU1MzE2NzIzMg==&quot; data-pluginname=&quot;mpprofile&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/RQv8vncPm1VGqxZI7ZQ51iar80MR0dNLrq51xias5Br3C9Hia2LFA0gCks5T6gMnXibHOKaoaUiasT0LTvBrwrSEC7w/0?wx_fmt=png&quot; data-nickname=&quot;京东技术&quot; data-alias=&quot;jingdongjishu&quot; data-signature=&quot;京东官方技术公众号，你想知道的京东技术前沿黑科技，全在这里。&quot; data-from=&quot;2&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.8808777&quot; data-type=&quot;gif&quot; data-w=&quot;638&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/RQv8vncPm1VL0uNianzSL1R3qHJCic0U7JlfFONOvicc7sVBAHKPC51fqfgaYkzibqkJzaD20NricYham9rhBuxvyqA/640?wx_fmt=gif&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;求分享&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8808777&quot; data-type=&quot;gif&quot; data-w=&quot;638&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/RQv8vncPm1VL0uNianzSL1R3qHJCic0U7JlfFONOvicc7sVBAHKPC51fqfgaYkzibqkJzaD20NricYham9rhBuxvyqA/640?wx_fmt=gif&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;求点赞&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.8808777&quot; data-type=&quot;gif&quot; data-w=&quot;638&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/RQv8vncPm1VL0uNianzSL1R3qHJCic0U7JlfFONOvicc7sVBAHKPC51fqfgaYkzibqkJzaD20NricYham9rhBuxvyqA/640?wx_fmt=gif&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;求在看&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;
          &lt;/div&gt;

          

          



           
                                
                    
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>c274f0522e4b78566b6b25e710c6fb0f</guid>
<title>go数据库查询生成器</title>
<link>https://toutiao.io/k/k61qyu6</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;article class=&quot;markdown-body entry-content container-lg&quot; itemprop=&quot;text&quot;&gt;&lt;p dir=&quot;auto&quot;&gt;&lt;a href=&quot;https://pkg.go.dev/github.com/bokwoon95/sq&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/edcf799d97d7751a494f50a4731943c11a2715134370a369d2adffd7dbbc3719/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f706b672e676f2e6465762d73712d626c7565&quot; alt=&quot;GoDoc&quot; data-canonical-src=&quot;https://img.shields.io/badge/pkg.go.dev-sq-blue&quot;/&gt;&lt;/a&gt;
&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/bokwoon95/sq/actions/workflows/tests.yml/badge.svg?branch=main&quot;&gt;&lt;img src=&quot;https://github.com/bokwoon95/sq/actions/workflows/tests.yml/badge.svg?branch=main&quot; alt=&quot;tests&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://goreportcard.com/report/github.com/bokwoon95/sq&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/a140777c25aec7985902f1874ed5d56b65e4af5849d7a8d0ce13d9230b72a074/68747470733a2f2f676f7265706f7274636172642e636f6d2f62616467652f6769746875622e636f6d2f626f6b776f6f6e39352f7371&quot; alt=&quot;Go Report Card&quot; data-canonical-src=&quot;https://goreportcard.com/badge/github.com/bokwoon95/sq&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://coveralls.io/github/bokwoon95/sq?branch=main&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/4d971a074afddf451886f77104eb975b76bc6aaccfeaaadba09538bfa00bc396/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f626f6b776f6f6e39352f73712f62616467652e7376673f6272616e63683d6d61696e&quot; alt=&quot;Coverage Status&quot; data-canonical-src=&quot;https://coveralls.io/repos/github/bokwoon95/sq/badge.svg?branch=main&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://raw.githubusercontent.com/bokwoon95/sq/main/header.png&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/bokwoon95/sq/main/header.png&quot; title=&quot;code example of a select query using sq&quot; alt=&quot;code example of a select query using sq, to give viewers a quick idea of what the library is about&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 dir=&quot;auto&quot;&gt;&lt;a id=&quot;user-content-sq-structured-query&quot; class=&quot;anchor&quot; href=&quot;#sq-structured-query&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;sq (Structured Query)&lt;/h1&gt;
&lt;p dir=&quot;auto&quot;&gt;&lt;a href=&quot;https://bokwoon.neocities.org/sq.html&quot; rel=&quot;nofollow&quot;&gt;one-page documentation&lt;/a&gt;&lt;/p&gt;
&lt;p dir=&quot;auto&quot;&gt;sq is a type-safe data mapper and query builder for Go. Its concept is simple: you provide a callback function that maps a row to a struct, generics ensure that you get back a slice of structs at the end. Additionally, mentioning a column in the callback function automatically adds it to the SELECT clause so you don&#x27;t even have to explicitly mention what columns you want to select: the act of mapping a column is the same as selecting it. This eliminates a source of errors where you have specify the columns twice (once in the query itself, once to the call to rows.Scan) and end up missing a column, getting the column order wrong or mistyping a column name.&lt;/p&gt;
&lt;p dir=&quot;auto&quot;&gt;Notable features:&lt;/p&gt;
&lt;ul dir=&quot;auto&quot;&gt;
&lt;li&gt;Works across SQLite, Postgres, MySQL and SQL Server. [&lt;a href=&quot;https://bokwoon.neocities.org/sq.html#set-query-dialect&quot; rel=&quot;nofollow&quot;&gt;more info&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;Each dialect has its own query builder, allowing you to use dialect-specific features. [&lt;a href=&quot;https://bokwoon.neocities.org/sq.html#dialect-specific-features&quot; rel=&quot;nofollow&quot;&gt;more info&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;Declarative schema migrations. [&lt;a href=&quot;https://bokwoon.neocities.org/sq.html#declarative-schema&quot; rel=&quot;nofollow&quot;&gt;more info&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;Supports arrays, enums, JSON and UUID. [&lt;a href=&quot;https://bokwoon.neocities.org/sq.html#arrays-enums-json-uuid&quot; rel=&quot;nofollow&quot;&gt;more info&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;Query logging. [&lt;a href=&quot;https://bokwoon.neocities.org/sq.html#logging&quot; rel=&quot;nofollow&quot;&gt;more info&lt;/a&gt;]&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 dir=&quot;auto&quot;&gt;&lt;a id=&quot;user-content-installation&quot; class=&quot;anchor&quot; href=&quot;#installation&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h1&gt;
&lt;p dir=&quot;auto&quot;&gt;This package only supports Go 1.18 and above.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell notranslate position-relative overflow-auto&quot; data-snippet-clipboard-copy-content=&quot;$ go get github.com/bokwoon95/sq&amp;#10;$ go install -tags=fts5 github.com/bokwoon95/sqddl@latest&quot;&gt;&lt;pre&gt;$ go get github.com/bokwoon95/sq
$ go install -tags=fts5 github.com/bokwoon95/sqddl@latest&lt;/pre&gt;&lt;/div&gt;
&lt;h1 dir=&quot;auto&quot;&gt;&lt;a id=&quot;user-content-features&quot; class=&quot;anchor&quot; href=&quot;#features&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h1&gt;
&lt;ul dir=&quot;auto&quot;&gt;
&lt;li&gt;IN
&lt;ul dir=&quot;auto&quot;&gt;
&lt;li&gt;&lt;a href=&quot;https://bokwoon.neocities.org/sq.html#in-slice&quot; rel=&quot;nofollow&quot;&gt;In Slice&lt;/a&gt; - &lt;code&gt;a IN (1, 2, 3)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://bokwoon.neocities.org/sq.html#in-rowvalues&quot; rel=&quot;nofollow&quot;&gt;In RowValues&lt;/a&gt; - &lt;code&gt;(a, b, c) IN ((1, 2, 3), (4, 5, 6), (7, 8, 9))&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://bokwoon.neocities.org/sq.html#in-subquery&quot; rel=&quot;nofollow&quot;&gt;In Subquery&lt;/a&gt; - &lt;code&gt;(a, b) IN (SELECT a, b FROM tbl WHERE condition)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CASE

&lt;/li&gt;
&lt;li&gt;EXISTS

&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://bokwoon.neocities.org/sq.html#subqueries&quot; rel=&quot;nofollow&quot;&gt;Subqueries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://bokwoon.neocities.org/sq.html#common-table-expressions&quot; rel=&quot;nofollow&quot;&gt;WITH (Common Table Expressions)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://bokwoon.neocities.org/sq.html#aggregate-functions&quot; rel=&quot;nofollow&quot;&gt;Aggregate functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://bokwoon.neocities.org/sq.html#window-functions&quot; rel=&quot;nofollow&quot;&gt;Window functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://bokwoon.neocities.org/sq.html#union-intersect-except&quot; rel=&quot;nofollow&quot;&gt;UNION, INTERSECT, EXCEPT&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://bokwoon.neocities.org/sq.html#querybuilder-insert-from-select&quot; rel=&quot;nofollow&quot;&gt;INSERT from SELECT&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;RETURNING

&lt;/li&gt;
&lt;li&gt;LastInsertId

&lt;/li&gt;
&lt;li&gt;Insert ignore duplicates

&lt;/li&gt;
&lt;li&gt;Upsert

&lt;/li&gt;
&lt;li&gt;Update with Join

&lt;/li&gt;
&lt;li&gt;Delete with Join

&lt;/li&gt;
&lt;li&gt;Bulk Update

&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 dir=&quot;auto&quot;&gt;&lt;a id=&quot;user-content-select-example-raw-sql&quot; class=&quot;anchor&quot; href=&quot;#select-example-raw-sql&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;SELECT example (Raw SQL)&lt;/h2&gt;
&lt;div class=&quot;highlight highlight-source-go notranslate position-relative overflow-auto&quot; data-snippet-clipboard-copy-content=&quot;actors, err := sq.FetchAll(db, sq.&amp;#10;    Queryf(&amp;quot;SELECT {*} FROM actor AS a WHERE a.actor_id IN ({})&amp;quot;,&amp;#10;        []int{1, 2, 3, 4, 5},&amp;#10;    ).&amp;#10;    SetDialect(sq.DialectPostgres),&amp;#10;    func(row *sq.Row) (Actor, error) {&amp;#10;        actor := Actor{&amp;#10;            ActorID:     row.Int(&amp;quot;a.actor_id&amp;quot;),&amp;#10;            FirstName:   row.String(&amp;quot;a.first_name&amp;quot;),&amp;#10;            LastName:    row.String(&amp;quot;a.last_name&amp;quot;),&amp;#10;            LastUpdate:  row.Time(&amp;quot;a.last_update&amp;quot;),&amp;#10;        }&amp;#10;        return actor, nil&amp;#10;    },&amp;#10;)&quot;&gt;&lt;pre&gt;&lt;span class=&quot;pl-s1&quot;&gt;actors&lt;/span&gt;, &lt;span class=&quot;pl-s1&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;sq&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;FetchAll&lt;/span&gt;(&lt;span class=&quot;pl-s1&quot;&gt;db&lt;/span&gt;, &lt;span class=&quot;pl-s1&quot;&gt;sq&lt;/span&gt;.
    &lt;span class=&quot;pl-en&quot;&gt;Queryf&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&quot;SELECT {*} FROM actor AS a WHERE a.actor_id IN ({})&quot;&lt;/span&gt;,
        []&lt;span class=&quot;pl-smi&quot;&gt;int&lt;/span&gt;{&lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;5&lt;/span&gt;},
    ).
    &lt;span class=&quot;pl-en&quot;&gt;SetDialect&lt;/span&gt;(&lt;span class=&quot;pl-s1&quot;&gt;sq&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;DialectPostgres&lt;/span&gt;),
    &lt;span class=&quot;pl-k&quot;&gt;func&lt;/span&gt;(&lt;span class=&quot;pl-s1&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;*&lt;/span&gt;sq.&lt;span class=&quot;pl-smi&quot;&gt;Row&lt;/span&gt;) (&lt;span class=&quot;pl-smi&quot;&gt;Actor&lt;/span&gt;, &lt;span class=&quot;pl-smi&quot;&gt;error&lt;/span&gt;) {
        &lt;span class=&quot;pl-s1&quot;&gt;actor&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;Actor&lt;/span&gt;{
            &lt;span class=&quot;pl-c1&quot;&gt;ActorID&lt;/span&gt;:     &lt;span class=&quot;pl-s1&quot;&gt;row&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;Int&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&quot;a.actor_id&quot;&lt;/span&gt;),
            &lt;span class=&quot;pl-c1&quot;&gt;FirstName&lt;/span&gt;:   &lt;span class=&quot;pl-s1&quot;&gt;row&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;String&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&quot;a.first_name&quot;&lt;/span&gt;),
            &lt;span class=&quot;pl-c1&quot;&gt;LastName&lt;/span&gt;:    &lt;span class=&quot;pl-s1&quot;&gt;row&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;String&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&quot;a.last_name&quot;&lt;/span&gt;),
            &lt;span class=&quot;pl-c1&quot;&gt;LastUpdate&lt;/span&gt;:  &lt;span class=&quot;pl-s1&quot;&gt;row&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;Time&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&quot;a.last_update&quot;&lt;/span&gt;),
        }
        &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;actor&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;nil&lt;/span&gt;
    },
)&lt;/pre&gt;&lt;/div&gt;
&lt;h2 dir=&quot;auto&quot;&gt;&lt;a id=&quot;user-content-select-example-query-builder&quot; class=&quot;anchor&quot; href=&quot;#select-example-query-builder&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;SELECT example (Query Builder)&lt;/h2&gt;
&lt;p dir=&quot;auto&quot;&gt;To use the query builder, you must first &lt;a href=&quot;https://bokwoon.neocities.org/sq.html#table-structs&quot; rel=&quot;nofollow&quot;&gt;define your table structs&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-go notranslate position-relative overflow-auto&quot; data-snippet-clipboard-copy-content=&quot;a := sq.New[ACTOR](&amp;quot;a&amp;quot;)&amp;#10;actors, err := sq.FetchAll(db, sq.&amp;#10;    From(a).&amp;#10;    Where(a.ACTOR_ID.In([]int{1, 2, 3, 4, 5})).&amp;#10;    SetDialect(sq.DialectPostgres),&amp;#10;    func(row *sq.Row) (Actor, error) {&amp;#10;        actor := Actor{&amp;#10;            ActorID:     row.IntField(a.ACTOR_ID),&amp;#10;            FirstName:   row.StringField(a.FIRST_NAME),&amp;#10;            LastName:    row.StringField(a.LAST_NAME),&amp;#10;            LastUpdate:  row.TimeField(a.LAST_UPDATE),&amp;#10;        }&amp;#10;        return actor, nil&amp;#10;    },&amp;#10;)&quot;&gt;&lt;pre&gt;&lt;span class=&quot;pl-s1&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;sq&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;New&lt;/span&gt;[&lt;span class=&quot;pl-s1&quot;&gt;ACTOR&lt;/span&gt;](&lt;span class=&quot;pl-s&quot;&gt;&quot;a&quot;&lt;/span&gt;)
&lt;span class=&quot;pl-s1&quot;&gt;actors&lt;/span&gt;, &lt;span class=&quot;pl-s1&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;sq&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;FetchAll&lt;/span&gt;(&lt;span class=&quot;pl-s1&quot;&gt;db&lt;/span&gt;, &lt;span class=&quot;pl-s1&quot;&gt;sq&lt;/span&gt;.
    &lt;span class=&quot;pl-en&quot;&gt;From&lt;/span&gt;(&lt;span class=&quot;pl-s1&quot;&gt;a&lt;/span&gt;).
    &lt;span class=&quot;pl-en&quot;&gt;Where&lt;/span&gt;(&lt;span class=&quot;pl-s1&quot;&gt;a&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;ACTOR_ID&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;In&lt;/span&gt;([]&lt;span class=&quot;pl-smi&quot;&gt;int&lt;/span&gt;{&lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;5&lt;/span&gt;})).
    &lt;span class=&quot;pl-en&quot;&gt;SetDialect&lt;/span&gt;(&lt;span class=&quot;pl-s1&quot;&gt;sq&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;DialectPostgres&lt;/span&gt;),
    &lt;span class=&quot;pl-k&quot;&gt;func&lt;/span&gt;(&lt;span class=&quot;pl-s1&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;*&lt;/span&gt;sq.&lt;span class=&quot;pl-smi&quot;&gt;Row&lt;/span&gt;) (&lt;span class=&quot;pl-smi&quot;&gt;Actor&lt;/span&gt;, &lt;span class=&quot;pl-smi&quot;&gt;error&lt;/span&gt;) {
        &lt;span class=&quot;pl-s1&quot;&gt;actor&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;Actor&lt;/span&gt;{
            &lt;span class=&quot;pl-c1&quot;&gt;ActorID&lt;/span&gt;:     &lt;span class=&quot;pl-s1&quot;&gt;row&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;IntField&lt;/span&gt;(&lt;span class=&quot;pl-s1&quot;&gt;a&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;ACTOR_ID&lt;/span&gt;),
            &lt;span class=&quot;pl-c1&quot;&gt;FirstName&lt;/span&gt;:   &lt;span class=&quot;pl-s1&quot;&gt;row&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;StringField&lt;/span&gt;(&lt;span class=&quot;pl-s1&quot;&gt;a&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;FIRST_NAME&lt;/span&gt;),
            &lt;span class=&quot;pl-c1&quot;&gt;LastName&lt;/span&gt;:    &lt;span class=&quot;pl-s1&quot;&gt;row&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;StringField&lt;/span&gt;(&lt;span class=&quot;pl-s1&quot;&gt;a&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;LAST_NAME&lt;/span&gt;),
            &lt;span class=&quot;pl-c1&quot;&gt;LastUpdate&lt;/span&gt;:  &lt;span class=&quot;pl-s1&quot;&gt;row&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;TimeField&lt;/span&gt;(&lt;span class=&quot;pl-s1&quot;&gt;a&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;LAST_UPDATE&lt;/span&gt;),
        }
        &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;actor&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;nil&lt;/span&gt;
    },
)&lt;/pre&gt;&lt;/div&gt;
&lt;h2 dir=&quot;auto&quot;&gt;&lt;a id=&quot;user-content-insert-example-raw-sql&quot; class=&quot;anchor&quot; href=&quot;#insert-example-raw-sql&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;INSERT example (Raw SQL)&lt;/h2&gt;
&lt;div class=&quot;highlight highlight-source-go notranslate position-relative overflow-auto&quot; data-snippet-clipboard-copy-content=&quot;_, err := sq.Exec(db, sq.&amp;#10;    Queryf(&amp;quot;INSERT INTO actor (actor_id, first_name, last_name) VALUES {}&amp;quot;, sq.RowValues{&amp;#10;        {18, &amp;quot;DAN&amp;quot;, &amp;quot;TORN&amp;quot;},&amp;#10;        {56, &amp;quot;DAN&amp;quot;, &amp;quot;HARRIS&amp;quot;},&amp;#10;        {166, &amp;quot;DAN&amp;quot;, &amp;quot;STREEP&amp;quot;},&amp;#10;    }).&amp;#10;    SetDialect(sq.DialectPostgres),&amp;#10;)&quot;&gt;&lt;pre&gt;&lt;span class=&quot;pl-s1&quot;&gt;_&lt;/span&gt;, &lt;span class=&quot;pl-s1&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;sq&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;Exec&lt;/span&gt;(&lt;span class=&quot;pl-s1&quot;&gt;db&lt;/span&gt;, &lt;span class=&quot;pl-s1&quot;&gt;sq&lt;/span&gt;.
    &lt;span class=&quot;pl-en&quot;&gt;Queryf&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&quot;INSERT INTO actor (actor_id, first_name, last_name) VALUES {}&quot;&lt;/span&gt;, sq.&lt;span class=&quot;pl-smi&quot;&gt;RowValues&lt;/span&gt;{
        {&lt;span class=&quot;pl-c1&quot;&gt;18&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&quot;DAN&quot;&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&quot;TORN&quot;&lt;/span&gt;},
        {&lt;span class=&quot;pl-c1&quot;&gt;56&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&quot;DAN&quot;&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&quot;HARRIS&quot;&lt;/span&gt;},
        {&lt;span class=&quot;pl-c1&quot;&gt;166&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&quot;DAN&quot;&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&quot;STREEP&quot;&lt;/span&gt;},
    }).
    &lt;span class=&quot;pl-en&quot;&gt;SetDialect&lt;/span&gt;(&lt;span class=&quot;pl-s1&quot;&gt;sq&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;DialectPostgres&lt;/span&gt;),
)&lt;/pre&gt;&lt;/div&gt;
&lt;h2 dir=&quot;auto&quot;&gt;&lt;a id=&quot;user-content-insert-example-query-builder&quot; class=&quot;anchor&quot; href=&quot;#insert-example-query-builder&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;INSERT example (Query Builder)&lt;/h2&gt;
&lt;p dir=&quot;auto&quot;&gt;To use the query builder, you must first &lt;a href=&quot;https://bokwoon.neocities.org/sq.html#table-structs&quot; rel=&quot;nofollow&quot;&gt;define your table structs&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-go notranslate position-relative overflow-auto&quot; data-snippet-clipboard-copy-content=&quot;a := sq.New[ACTOR](&amp;quot;a&amp;quot;)&amp;#10;_, err := sq.Exec(db, sq.&amp;#10;    InsertInto(a).&amp;#10;    Columns(a.ACTOR_ID, a.FIRST_NAME, a.LAST_NAME).&amp;#10;    Values(18, &amp;quot;DAN&amp;quot;, &amp;quot;TORN&amp;quot;).&amp;#10;    Values(56, &amp;quot;DAN&amp;quot;, &amp;quot;HARRIS&amp;quot;).&amp;#10;    Values(166, &amp;quot;DAN&amp;quot;, &amp;quot;STREEP&amp;quot;).&amp;#10;    SetDialect(sq.DialectPostgres),&amp;#10;)&quot;&gt;&lt;pre&gt;&lt;span class=&quot;pl-s1&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;sq&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;New&lt;/span&gt;[&lt;span class=&quot;pl-s1&quot;&gt;ACTOR&lt;/span&gt;](&lt;span class=&quot;pl-s&quot;&gt;&quot;a&quot;&lt;/span&gt;)
&lt;span class=&quot;pl-s1&quot;&gt;_&lt;/span&gt;, &lt;span class=&quot;pl-s1&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;sq&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;Exec&lt;/span&gt;(&lt;span class=&quot;pl-s1&quot;&gt;db&lt;/span&gt;, &lt;span class=&quot;pl-s1&quot;&gt;sq&lt;/span&gt;.
    &lt;span class=&quot;pl-en&quot;&gt;InsertInto&lt;/span&gt;(&lt;span class=&quot;pl-s1&quot;&gt;a&lt;/span&gt;).
    &lt;span class=&quot;pl-en&quot;&gt;Columns&lt;/span&gt;(&lt;span class=&quot;pl-s1&quot;&gt;a&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;ACTOR_ID&lt;/span&gt;, &lt;span class=&quot;pl-s1&quot;&gt;a&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;FIRST_NAME&lt;/span&gt;, &lt;span class=&quot;pl-s1&quot;&gt;a&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;LAST_NAME&lt;/span&gt;).
    &lt;span class=&quot;pl-en&quot;&gt;Values&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;18&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&quot;DAN&quot;&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&quot;TORN&quot;&lt;/span&gt;).
    &lt;span class=&quot;pl-en&quot;&gt;Values&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;56&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&quot;DAN&quot;&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&quot;HARRIS&quot;&lt;/span&gt;).
    &lt;span class=&quot;pl-en&quot;&gt;Values&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;166&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&quot;DAN&quot;&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&quot;STREEP&quot;&lt;/span&gt;).
    &lt;span class=&quot;pl-en&quot;&gt;SetDialect&lt;/span&gt;(&lt;span class=&quot;pl-s1&quot;&gt;sq&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;DialectPostgres&lt;/span&gt;),
)&lt;/pre&gt;&lt;/div&gt;
&lt;p dir=&quot;auto&quot;&gt;For a more detailed overview, look at the &lt;a href=&quot;https://bokwoon.neocities.org/sq.html#quickstart&quot; rel=&quot;nofollow&quot;&gt;Quickstart&lt;/a&gt;.&lt;/p&gt;
&lt;h2 dir=&quot;auto&quot;&gt;&lt;a id=&quot;user-content-contributing&quot; class=&quot;anchor&quot; href=&quot;#contributing&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p dir=&quot;auto&quot;&gt;See &lt;a href=&quot;https://github.com/bokwoon95/sq/blob/main/START_HERE.md&quot;&gt;START_HERE.md&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;
          &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>34b8bcd362d2a1fed1dd97363f14dbad</guid>
<title>深入浅出富文本编辑器</title>
<link>https://toutiao.io/k/av869rh</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;编辑器介绍&lt;/strong&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;常见的富文本编辑器现实方式可以分成两大类，分别是用 textarea 和 contenteditable 来实现。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt; &lt;/span&gt;&lt;span/&gt;&lt;span&gt;&lt;strong&gt;textarea&lt;/strong&gt;&lt;/span&gt;&lt;span/&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结构简单使用方便，一些文本格式和复杂的样式难以实现，推荐仅在对编辑要求不高的场景使用。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt; &lt;/span&gt;&lt;span/&gt;&lt;span&gt;&lt;strong&gt;contenteditable&lt;/strong&gt;&lt;/span&gt;&lt;span/&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;将元素的 &lt;code&gt;contenteditable&lt;/code&gt; 属性设为 &lt;code&gt;true&lt;/code&gt;时，该元素则成为了编辑器的主体。配合 &lt;code&gt;document.execCommand&lt;/code&gt; 能够实现绝大多数功能，主流编辑器是基于 &lt;code&gt;contenteditable&lt;/code&gt; 来设计的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但是单纯依赖 contenteditable 直接产出 html 会带来一些问题，例如相同的输入在不同浏览器下的输出可能不一致，相同的输出在不同浏览器中展示存在差异，并且这些问题在移动端会被放大，同时 html 使用具有局限性，不方便在跨平台间使用。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;因此更好的方案是制定一套数据结构 + 文档模型，所有的输入都经过编辑器生成约定的产物，这样在不同的平台均可解析并且保证得到预期的效果。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;还有一类是以 Google docs 为主的编辑器，不使用 &lt;code&gt;contenteditable&lt;/code&gt; ，而是&lt;span&gt;基于 canvas 渲染&lt;/span&gt;&lt;sup&gt;[1]&lt;/sup&gt;，通过监听用户输入，模拟编辑器的运行，此类编辑器实现成本极高且复杂。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本文以 &lt;strong&gt;&lt;span&gt;quill&lt;/span&gt;&lt;sup&gt;[2]&lt;/sup&gt;&lt;/strong&gt; 为例，介绍如何实现一个支持跨平台渲染，且可以插入自定义模块的富文本编辑器。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;strong&gt;基本概念&lt;/strong&gt;&lt;/h1&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt; &lt;/span&gt;&lt;span/&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;delta&lt;/span&gt;&lt;sup&gt;[3]&lt;/sup&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span/&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用于描述富文本&lt;strong&gt;内容或内容变换&lt;/strong&gt;的数据结构，纯 json 格式，能够转化成 js 对象后方便操作，基本格式如下，由一组 op 组成。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;op 是个 js 对象，可理解为对当前内容的一次变更，它主要有以下几个属性。&lt;/p&gt;&lt;p&gt;insert: 插入，后面 【3.2 数据结构】有介绍可能的值和对应的含义&lt;/p&gt;&lt;p&gt;retain: 值为 number 类型，保留相应长度的内容&lt;/p&gt;&lt;p&gt;delete: 值为 number 类型，删除相应长度的内容&lt;/p&gt;&lt;p&gt;上面三个属性必有且仅有一个出现在 op 对象中&lt;/p&gt;&lt;p&gt;attributes: 可选，值为对象，可描述格式化信息&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如何理解内容或内容变换，举个🌰，下面这段数据表示了内容 “&lt;strong&gt;Grass&lt;/strong&gt; the &lt;strong&gt;Green&lt;/strong&gt;”，&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;{&lt;br/&gt;  ops: [&lt;br/&gt;    { insert: &lt;span&gt;&#x27;Grass&#x27;&lt;/span&gt;, attributes: { bold: &lt;span&gt;true&lt;/span&gt; } },&lt;br/&gt;    { insert: &lt;span&gt;&#x27; the &#x27;&lt;/span&gt; },&lt;br/&gt;    { insert: &lt;span&gt;&#x27;Green&#x27;&lt;/span&gt;, attributes: { color: &lt;span&gt;&#x27;#00ff00&#x27;&lt;/span&gt; } }&lt;br/&gt;  ]&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;经过下面一次 delta 内容变换后新内容为 “Grass the blue”。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;{&lt;br/&gt;  ops: [&lt;br/&gt;    // 接下来 5 个字符取消加粗并加上斜体格式&lt;br/&gt;    { retain: 5, attributes: { bold: null, italic: &lt;span&gt;true&lt;/span&gt; } },&lt;br/&gt;    // 维持 5 个字符不变&lt;br/&gt;    { retain: 5 },&lt;br/&gt;    // 插入&lt;br/&gt;    { insert: &lt;span&gt;&quot;Blue&quot;&lt;/span&gt;, attributes: { color: &lt;span&gt;&#x27;#0000ff&#x27;&lt;/span&gt; },&lt;br/&gt;    // 删除后面 5 个字符&lt;br/&gt;    { delete: 5 }&lt;br/&gt;  ]&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Delta 本质上是一系列操作记录，在渲染时可以看作记录了从空白到目标文档的一个过程，而 HTML 是一个树形结构，&lt;strong&gt;所以 Delta 的线性结构相比 HTML 在业务使用上有天生优势&lt;/strong&gt;。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt; &lt;/span&gt;&lt;span/&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;parchment&lt;/span&gt;&lt;sup&gt;[4]&lt;/sup&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span/&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一种文档模型，由 blots 组成，用来描述数据，可以拓展自定义的数据。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&amp;lt;p&amp;gt;&lt;br/&gt;    一段文字加视频的富文本内容。&lt;br/&gt;    &amp;lt;img src=&lt;span&gt;&quot;xxx&quot;&lt;/span&gt; alt=&lt;span&gt;&quot;&quot;&lt;/span&gt;&amp;gt;&lt;br/&gt;  &amp;lt;/p&amp;gt;&lt;br/&gt;  &amp;lt;p&amp;gt;&lt;br/&gt;    &amp;lt;strong&amp;gt;加粗文本结尾。&amp;lt;/strong&amp;gt;&lt;br/&gt;&amp;lt;/p&amp;gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;parchment 与 blot 关系类似于 DOM 与 element node，上面一段 html 内容使用 dom tree 和 parchment tree 描述分别如下图所示。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.42090124640460214&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ndgH50E7pIpjh5BwpAdoqXVxePD2GPBG2n6jJRbcma7ftGJjqv1j3SJzEC8L6g32ib6KPJfvkicCeia4JgAicicHlCw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1043&quot;/&gt;&lt;figcaption&gt;&lt;br/&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;parchment 提供了几种基础 blot，同时支持开发中根据需求拓展定义自己的 blot，后面会演示如何开发一个自定义的 blot。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;{&lt;br/&gt;  // 基础节点&lt;br/&gt;  ShadowBlot,&lt;br/&gt;  // 容器节点 =&amp;gt; 基础节点&lt;br/&gt;  ContainerBlot,&lt;br/&gt;  // 格式化节点 =&amp;gt; 容器节点&lt;br/&gt;  FormatBlot,&lt;br/&gt;  // 叶子节点&lt;br/&gt;  LeafBlot,&lt;br/&gt;  // 编辑器根节点 =&amp;gt; 容器节点&lt;br/&gt;  ScrollBlot,&lt;br/&gt;  // 块级节点 =&amp;gt; 格式化节点 &lt;br/&gt;  BlockBlot,&lt;br/&gt;  // 内联节点 =&amp;gt; 格式化节点 &lt;br/&gt;  InlineBlot,&lt;br/&gt;  // 文本节点 =&amp;gt; 叶子节点&lt;br/&gt;  TextBlot,&lt;br/&gt;  // 嵌入式节点 =&amp;gt; 叶子节点&lt;br/&gt;  EmbedBlot,&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最后用一张图了解下 quill 内部的工作流程，其中开发者需要关注的业务层逻辑十分简洁，可以通过手动输入和 api 方式变更编辑器内容，同时 editor-change 事件会输出当次操作和最新内容对应的 delta 数据。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.174342105263158&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ndgH50E7pIpjh5BwpAdoqXVxePD2GPBGa9CaoPzIkWzxajqLWNqhXbIxmgY8BKP9rOog9dZTHr2QtrAmN3nGibQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;608&quot;/&gt;&lt;figcaption&gt;&lt;br/&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;strong&gt;实际应用&lt;/strong&gt;&lt;/h1&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt; &lt;/span&gt;&lt;span/&gt;&lt;span&gt;&lt;strong&gt;数据流&lt;/strong&gt;&lt;/span&gt;&lt;span/&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在业务中，基本数据流应该如下图所示，由编辑器生成 delta 数据，之后由相应平台的解析器渲染成对应的内容。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5142428785607196&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ndgH50E7pIpjh5BwpAdoqXVxePD2GPBGT40YF5ztWpHeicD4zCob2JJT82OwNSDYTicibvD4wLHC3WrzbvAiaxb4Gg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;667&quot;/&gt;&lt;figcaption&gt;&lt;br/&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt; &lt;/span&gt;&lt;span/&gt;&lt;span&gt;&lt;strong&gt;数据结构&lt;/strong&gt;&lt;/span&gt;&lt;span/&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;良好的内容数据结构设计，在后续维护和跨平台渲染时起到关键作用，我们可以将富文本内容中依赖的媒体（图片、视频、自定义的格式）数据放到外层来，通过 id 关联，这样日后拓展和渲染时会比较方便。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;interface ItemContent {&lt;br/&gt;    // 富文本数据，存储着 delta-string&lt;br/&gt;    text?: string;&lt;br/&gt;    // 视频&lt;br/&gt;    videoList?: Video[];&lt;br/&gt;    // 图片&lt;br/&gt;    imageList?: Image[];&lt;br/&gt;     // 自定义的模块，如投票、广告卡片、问卷卡片等等&lt;br/&gt;    customList?: Custom[];&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其中编辑器输出的是标准 delta 数据， 结构如下所示，&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;// 纯文本， \n 代表换行&lt;br/&gt;{&lt;br/&gt;    insert: string;&lt;br/&gt;},&lt;br/&gt; // 特殊类型的文本&lt;br/&gt;{&lt;br/&gt;    insert: &lt;span&gt;&#x27;超链接文本&#x27;&lt;/span&gt;，&lt;br/&gt;    attributes: {&lt;br/&gt;        // 文字颜色&lt;br/&gt;        color: string,&lt;br/&gt;        // 加粗&lt;br/&gt;        bold:  boolean,&lt;br/&gt;        // 超链接地址&lt;br/&gt;        link: string;&lt;br/&gt;        ...,&lt;br/&gt;    }&lt;br/&gt;},&lt;br/&gt;// 有序无序列表&lt;br/&gt;{&lt;br/&gt;    insert:  &lt;span&gt;&#x27;\n&#x27;&lt;/span&gt;,&lt;br/&gt;    attributes: {&lt;br/&gt;      list: &lt;span&gt;&#x27;ordered&#x27;&lt;/span&gt; | &lt;span&gt;&#x27;bullet&#x27;&lt;/span&gt;&lt;br/&gt;    }&lt;br/&gt; },&lt;br/&gt;{&lt;br/&gt;    insert: {&lt;br/&gt;        uploading: {&lt;br/&gt;            // 资源类型&lt;br/&gt;            &lt;span&gt;type&lt;/span&gt;: &lt;span&gt;&#x27;image&#x27;&lt;/span&gt; | &lt;span&gt;&#x27;video&#x27;&lt;/span&gt; | &lt;span&gt;&#x27;vote&#x27;&lt;/span&gt; | &lt;span&gt;&#x27;and more...&#x27;&lt;/span&gt;&lt;br/&gt;            // 资源 id&lt;br/&gt;            uid: string&lt;br/&gt;        },&lt;br/&gt;    },&lt;br/&gt;},&lt;br/&gt;// 图片&lt;br/&gt;{&lt;br/&gt;    insert: { image: &lt;span&gt;&#x27;${image_uri}&#x27;&lt;/span&gt; }&lt;br/&gt;},&lt;br/&gt;// 视频&lt;br/&gt;{&lt;br/&gt;    insert: {&lt;br/&gt;        videoPoster: {&lt;br/&gt;           /** 视频封面地址 */            url: string;&lt;br/&gt;           /** 视频 id */            videoId: string;&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt;},&lt;br/&gt;// 投票&lt;br/&gt;{&lt;br/&gt;    insert: {&lt;br/&gt;        vote: {&lt;br/&gt;            voteId: string&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt;},&lt;br/&gt;// 缩进，作用域内所有文本向右缩进 indent 个单位；&lt;br/&gt;// 作用域：从当前为起始位置向前回溯，遇到以下任意一种情况结束&lt;br/&gt;// 1、纯文本 \n&lt;br/&gt;// 2、attributes的属性含有indent并且indent值小于等于当前值&lt;br/&gt;{&lt;br/&gt;    insert:  &lt;span&gt;&#x27;\n&#x27;&lt;/span&gt;,&lt;br/&gt;    attributes: {&lt;br/&gt;        indent: 1-8,&lt;br/&gt;    }&lt;br/&gt;},&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt; &lt;/span&gt;&lt;span/&gt;&lt;span&gt;&lt;strong&gt;图片 / 视频混排&lt;/strong&gt;&lt;/span&gt;&lt;span/&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;图片上传需要支持展示上传中的状态，并且不应该阻塞用户的编辑，所以需要先使用一个占位元素，待上传完成后将占位替换成真实图片或视频。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt; &lt;/span&gt;&lt;span/&gt;&lt;span&gt;&lt;strong&gt;自定义 blot&lt;/strong&gt;&lt;/span&gt;&lt;span/&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;自定义 blot 的好处是能够将整个的功能（例如图表功能）封装到一个 blot 中，这样业务开发时可直接使用，而不用管每个功能是怎么实现的。下面以图片视频上传态占位 blot 为例，演示如何自定义一个 blot。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;import Quill from &lt;span&gt;&#x27;quill&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;enum MediaType {&lt;br/&gt;  Image = &lt;span&gt;&#x27;image&#x27;&lt;/span&gt;,&lt;br/&gt;  Video = &lt;span&gt;&#x27;video&#x27;&lt;/span&gt;,&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;interface UploadingType {&lt;br/&gt;  &lt;span&gt;type&lt;/span&gt;: MediaType;&lt;br/&gt;  // 唯一的 id，当图片或视频上传完成后，需要找到对应的 uid 进行替换&lt;br/&gt;  uid: string;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; const BlockEmbed = Quill.import(&lt;span&gt;&#x27;blots/block/embed&#x27;&lt;/span&gt;);&lt;br/&gt;&lt;br/&gt;class Uploading extends BlockEmbed {&lt;br/&gt;  static _value: Record&amp;lt;string, UploadingType&amp;gt; = {};&lt;br/&gt;&lt;br/&gt;  static create(value: UploadingType) {&lt;br/&gt;    const ELEMENT_SIZE = 60;&lt;br/&gt;    // blot 对应的 dom 节点&lt;br/&gt;    const node = super.create();&lt;br/&gt;    this._value[value.uid] = value;&lt;br/&gt;    node.contentEditable = &lt;span&gt;false&lt;/span&gt;;&lt;br/&gt;    node.style.width = `&lt;span&gt;${ELEMENT_SIZE}&lt;/span&gt;px`;&lt;br/&gt;    node.style.height = `&lt;span&gt;${ELEMENT_SIZE}&lt;/span&gt;px`;&lt;br/&gt;    node.style.backgroundImage = `url(占位图地址)`;&lt;br/&gt;    node.style.backgroundSize = &lt;span&gt;&#x27;cover&#x27;&lt;/span&gt;;&lt;br/&gt;    node.style.margin = &lt;span&gt;&#x27;0 auto&#x27;&lt;/span&gt;;&lt;br/&gt;    // 用来区分对应资源&lt;br/&gt;    node.setAttribute(&lt;span&gt;&#x27;data-uid&#x27;&lt;/span&gt;, value.uid);&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; node;&lt;br/&gt;  }&lt;br/&gt;&lt;br/&gt;  static value(v) {&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; this._value[v.dataset?.uid];&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;Uploading.blotName = &lt;span&gt;&#x27;uploading&#x27;&lt;/span&gt;;&lt;br/&gt;Uploading.tagName = &lt;span&gt;&#x27;div&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; default Uploading;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;将自定义 blot 注册到编辑器实例中，使用 quill 的 &lt;code&gt;insertEmbed&lt;/code&gt; 来调用这个blot 即可。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;// editor.tsx&lt;br/&gt;Quill.register(VideoPosterBlot);&lt;br/&gt;&lt;br/&gt;quill.insertEmbed(1, &lt;span&gt;&#x27;uploading&#x27;&lt;/span&gt;, {&lt;br/&gt;  &lt;span&gt;type&lt;/span&gt;: &lt;span&gt;&#x27;image&#x27;&lt;/span&gt;,&lt;br/&gt;  uid: &lt;span&gt;&#x27;xxx&#x27;&lt;/span&gt;,&lt;br/&gt;});&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.23182957393483708&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ndgH50E7pIpjh5BwpAdoqXVxePD2GPBGPoouo3990qeWriczBCbBw5JXgVLSSQ1blragQqjZLBE6s5zID9aVT7A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1596&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt; &lt;/span&gt;&lt;span/&gt;&lt;span&gt;&lt;strong&gt;处理粘贴操作&lt;/strong&gt;&lt;/span&gt;&lt;span/&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;复制粘贴可以大幅提升编辑器效率，但是我们需要对剪切板中的视频和图片进行特殊处理，将剪切板中的内容转化成自定义的格式，并自动上传其中图片和视频。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;strong&gt;基本原理&lt;/strong&gt;&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;监听用户的粘贴操作，读取 &lt;span&gt;paste event&lt;/span&gt;&lt;sup&gt;[5]&lt;/sup&gt; 返回的 &lt;span&gt;clipboardData&lt;/span&gt;&lt;sup&gt;[6]&lt;/sup&gt; 数据，二次加工后再插入编辑器中。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;target.addEventListener(&lt;span&gt;&#x27;paste&#x27;&lt;/span&gt;, (event) =&amp;gt;  {&lt;br/&gt;    const clipboardData = (event.clipboardData || window.clipboardData)&lt;br/&gt;    const text = clipboardData.getData(&lt;br/&gt;      &lt;span&gt;&#x27;text&#x27;&lt;/span&gt;,&lt;br/&gt;    );&lt;br/&gt;    const html = clipboardData.getData(&lt;br/&gt;      &lt;span&gt;&#x27;text/html&#x27;&lt;/span&gt;,&lt;br/&gt;    );&lt;br/&gt;    &lt;br/&gt;    /**&lt;br/&gt;    * 业务逻辑&lt;br/&gt;    */&lt;br/&gt;    &lt;br/&gt;    event.preventDefault();&lt;br/&gt;});&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;clipboardData.items&lt;/code&gt; 是 &lt;code&gt;DataTransferItem&lt;/code&gt; 的数组集合，它包含了本次粘贴操作的数据内容。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;DataTransferItem&lt;/code&gt; 有两个属性分别是 &lt;code&gt;kind&lt;/code&gt;和 &lt;code&gt;type&lt;/code&gt;，其中 &lt;code&gt;kind&lt;/code&gt; 值通常是 string 类型，如果是文件类型的数据那么值为 &lt;code&gt;file&lt;/code&gt;；&lt;code&gt;type&lt;/code&gt; 值是 MIME 类型，常见的是 &lt;code&gt;text/plain&lt;/code&gt; 和 &lt;code&gt;text/html&lt;/code&gt;。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;strong&gt;处理图片&lt;/strong&gt;&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;剪切板中的图片来源分为两大类，一是直接从文件系统中复制，这种情况我们&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;从文件系统中复制&lt;/strong&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6083499005964215&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ndgH50E7pIpjh5BwpAdoqXVxePD2GPBGwiad26ibX3ekz7iaP3lKRGS2qKXpI6KSDFFmM4rln7RrBEPYyzVO7icQHQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1006&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从文件系统中复制粘贴后，能获取到 File 对象，那么直接插入编辑器中，即可复用前面的图片上传逻辑。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;从网页复制&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.0113154172560113&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ndgH50E7pIpjh5BwpAdoqXVxePD2GPBGXWU566VFwFOa9SIjVr7ECbCEV1HWNaFPJZPHVKxib5KcLQ7ZBYicS0GA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1414&quot;/&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.3665594855305465&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ndgH50E7pIpjh5BwpAdoqXVxePD2GPBGJq0YZzCDNT2EorDb778l4keqyuzxh66ZSYbGYU9uicBY9RwC8H6AcYQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1244&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从上面右图不难看出，从网页中复制过来的内容中包含 text/html 富文本类型，由于图片可能是临时地址，直接使用三方图片地址不可靠，需要把 html 中图片地址提取出来，下载后再上传至我们自己的服务器中，图片上传模块还能继续复用上文的图片混排。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.73125&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ndgH50E7pIpjh5BwpAdoqXVxePD2GPBGQdKgmsGqxPT752qIHnXQte9jbqFo6B4oyqF1X7JOhM1eukYydDKB5w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;960&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上文内容的 dom 树基础结构如图所示，可以经过后序遍历将所有节点处理成数组结构，当遇到节点为图片时则调用上面的图片混排逻辑。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;convert({ html, text }, formats = {}) {&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (!html) {&lt;br/&gt;      &lt;span&gt;return&lt;/span&gt; new Delta().insert(text || &lt;span&gt;&#x27;&#x27;&lt;/span&gt;);&lt;br/&gt;    }&lt;br/&gt;    // 返回 HTMLDocument 对象&lt;br/&gt;    const doc = new DOMParser().parseFromString(html, &lt;span&gt;&#x27;text/html&#x27;&lt;/span&gt;);&lt;br/&gt;    const container = doc.body;&lt;br/&gt;    // key - node&lt;br/&gt;    // value - matcher: (node, delta, scroll) =&amp;gt; newDelta&lt;br/&gt;    const nodeMatches = new WeakMap();&lt;br/&gt;    // 返回两个匹配器，分别处理 ELEMENT_NODE 和 TEXT_NODE ,将 dom 转化成 Delta&lt;br/&gt;    const [elementMatchers, textMatchers] = this.prepareMatching(&lt;br/&gt;      container,&lt;br/&gt;      nodeMatches,&lt;br/&gt;    );&lt;br/&gt;    &lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; traverse(&lt;br/&gt;      this.quill.scroll,&lt;br/&gt;      container,&lt;br/&gt;      elementMatchers,&lt;br/&gt;      textMatchers,&lt;br/&gt;      nodeMatches,&lt;br/&gt;    );&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;br/&gt; &lt;span&gt;function&lt;/span&gt; traverse(scroll, node, elementMatchers, textMatchers, nodeMatches) {&lt;br/&gt;  // 节点为叶子节点即文本&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt; (node.nodeType === node.TEXT_NODE) {&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; textMatchers.reduce((delta, matcher) =&amp;gt;  {&lt;br/&gt;      &lt;span&gt;return&lt;/span&gt; matcher(node, delta, scroll);&lt;br/&gt;    }, new Delta());&lt;br/&gt;  }&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt; (node.nodeType === node.ELEMENT_NODE) {&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; Array.from(node.childNodes || []).reduce((delta, childNode) =&amp;gt;  {&lt;br/&gt;      &lt;span&gt;let&lt;/span&gt; childrenDelta = traverse(&lt;br/&gt;        scroll,&lt;br/&gt;        childNode,&lt;br/&gt;        elementMatchers,&lt;br/&gt;        textMatchers,&lt;br/&gt;        nodeMatches,&lt;br/&gt;      );&lt;br/&gt;      &lt;span&gt;if&lt;/span&gt; (childNode.nodeType === node.ELEMENT_NODE) {&lt;br/&gt;        childrenDelta = elementMatchers.reduce((reducedDelta, matcher) =&amp;gt;  {&lt;br/&gt;          &lt;span&gt;return&lt;/span&gt; matcher(childNode, reducedDelta, scroll);&lt;br/&gt;        }, childrenDelta);&lt;br/&gt;        childrenDelta = (nodeMatches.get(childNode) || []).reduce(&lt;br/&gt;          (reducedDelta, matcher) =&amp;gt;  {&lt;br/&gt;            &lt;span&gt;return&lt;/span&gt; matcher(childNode, reducedDelta, scroll);&lt;br/&gt;          },&lt;br/&gt;          childrenDelta,&lt;br/&gt;        );&lt;br/&gt;      }&lt;br/&gt;      &lt;span&gt;return&lt;/span&gt; delta.concat(childrenDelta);&lt;br/&gt;    }, new Delta());&lt;br/&gt;  }&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; new Delta();&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上面例子中的数据可以转化成以下 delta 数据，视频的处理方法与图片类似，这里不再赘述。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;br/&gt;{&lt;br/&gt;    ops: [&lt;br/&gt;    {&lt;br/&gt;        insert: &lt;span&gt;&#x27;说起艾冬梅这个名字，现在的年轻人可能不是很熟悉，但是她曾经却是家喻户晓的人物，&#x27;&lt;/span&gt;&lt;br/&gt;    },&lt;br/&gt;    {&lt;br/&gt;        insert: &lt;span&gt;&#x27;艾冬梅是我国著名的马拉松运动员&#x27;&lt;/span&gt;  ,         attribute: {&lt;br/&gt;            bold: &lt;span&gt;true&lt;/span&gt;&lt;br/&gt;        },&lt;br/&gt;    },&lt;br/&gt;    {&lt;br/&gt;        insert: &lt;span&gt;&#x27;。她出生于1981年，是个来自东北的姑娘，和很多普通的八零后一样，她来自一个平凡的家庭，从小生活十分幸福，家境虽然不富裕，但艾冬梅依然是父母的掌上明珠。&#x27;&lt;/span&gt;&lt;br/&gt;    },&lt;br/&gt;    {&lt;br/&gt;       insert: {&lt;br/&gt;           image: {&lt;br/&gt;               url: &lt;span&gt;&#x27;xxx&#x27;&lt;/span&gt;&lt;br/&gt;           }&lt;br/&gt;       }&lt;br/&gt;    },&lt;br/&gt;    {&lt;br/&gt;        insert: &lt;span&gt;&#x27;但是艾冬梅和其他人不同的是她从小就展现出了惊人的长跑天赋&#x27;&lt;/span&gt;  ,         attribute: {&lt;br/&gt;            bold: &lt;span&gt;true&lt;/span&gt;&lt;br/&gt;        },&lt;br/&gt;    },&lt;br/&gt;    {&lt;br/&gt;        insert: &lt;span&gt;&#x27; ， 1993年当时艾冬梅还在念小学，她在一次跑步比赛中获得了一个十分优秀的成绩，在脚趾头受伤的情况下打破了当地的3000米项目记录，远远超过了参赛的所有人。这让很多人都十分震惊，于是艾冬梅顺利地被齐齐哈尔体校选中。&#x27;&lt;/span&gt;&lt;br/&gt;    }&lt;br/&gt;   ]&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt; &lt;/span&gt;&lt;span/&gt;&lt;span&gt;&lt;strong&gt;解析数据&lt;/strong&gt;&lt;/span&gt;&lt;span/&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在 web 场景下可以使用 &lt;span&gt;quill-delta-to-html&lt;/span&gt;&lt;sup&gt;[7]&lt;/sup&gt; 这个库来做解析，如果是小程序，对于媒体元素（如：小程序中图片必须要&lt;span&gt;指定宽高&lt;/span&gt;&lt;sup&gt;[8]&lt;/sup&gt;）支持相对不太友好，需要自己解析，下面简单介绍下如何渲染 delta 数据。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由于 delta 是一个线性结构，转化成 dom 时，需要构建一棵树，将块级元素的子元素关联到它的 children 中。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8666666666666667&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ndgH50E7pIpjh5BwpAdoqXVxePD2GPBGabSuTShVdiaicpBqufIpicm3iaCRMhPIbBgXD1wWscEnLgnSzlAz9h72DA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;900&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上图中的原数据经过第一轮处理&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;纯文本反规范化，将 &lt;em&gt;abc\ndef\ng 格式转化成 [abc, \n, def, \n, g]&lt;/em&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;将块级元素的元信息，写入第一个 op 中&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;块级元素的元信息包括：缩进，有序列表序号，【当前元素所在块级元素】在原数据中的起始与终止索引，【当前元素所在块级元素】在 dom 列表中的索引&lt;/p&gt;&lt;/blockquote&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.9251908396946565&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ndgH50E7pIpjh5BwpAdoqXVxePD2GPBGcUAicqAuqiaU6ia9tbiaGWibcNlPSum9Rq7rFsQzMg3YJL5d337ibfk0pNKQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1310&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;经过上面转化后原数据变成上图中的格式，每个 op 都含有相应的元数据，接下要做的就是解析这些 op，将其转化成 Element。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8925294888597641&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ndgH50E7pIpjh5BwpAdoqXVxePD2GPBGecOhxez4YkCUXr6G5dNlyJN2tBAibIbIUCfn8wd9Ricfv6434OEoj1oA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1526&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于自定义 blot 的渲染，我们可以封装成组件（react 或 vue 组件，取决你使用什么框架），这样业务功能和编辑器开发可解耦，不了解编辑器代码的同学也能够参与开发。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;小结&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;至此，我们已经了解开发编辑器的基本流程和需要重点关注的一些事项。如果业务中需要拓展一些功能卡片，如飞书文档的各种应用，可通过拓展 blot + 编写对应的组件来实现。此外还能够通过编写相应平台的解析器在非 web 场景的展示，轻松实现内容跨平台渲染。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt; &lt;/span&gt;&lt;span/&gt;&lt;span&gt;❤️ 谢谢支持&lt;/span&gt;&lt;span/&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以上便是本次分享的全部内容，希望对你有所帮助^_^&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;喜欢的话别忘了 &lt;strong&gt;分享、点赞、收藏&lt;/strong&gt; 三连哦~。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;欢迎关注公众号 &lt;strong&gt;前端巅峰&lt;/strong&gt; 收货大厂一手好文章~&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mp-common-profile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzkwODIwMDY2OQ==&quot; data-alias=&quot;Java-Script-&quot; data-from=&quot;0&quot; data-headimg=&quot;http://mmbiz.qpic.cn/sz_mmbiz_png/3GPT1CHiaSVssAs3fYdfweBskcYpVTrKpyGRwvSia0MOULHpGU8497uAkHic3CSPvqbr1BGQY45zoj0rvLexzLVVA/0?wx_fmt=png&quot; data-nickname=&quot;前端巅峰&quot; data-signature=&quot;专注大前端、Web3.0、提升认知的方向，&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>57eb33ecc7c6415a50d63c7358e2266e</guid>
<title>危险！请马上替换代码中的BeanUtils！！！</title>
<link>https://toutiao.io/k/xk21s4t</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section&gt;&lt;h1&gt;&lt;strong&gt;&lt;span&gt;1. 背景&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;br/&gt;&lt;/h1&gt;&lt;section&gt;&lt;span&gt;之前在专栏中讲过“不推荐使用属性拷贝工具”，推荐直接定义转换类和方法使用 IDEA 插件自动填充 get / set 函数。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;不推荐的主要理由是：&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;有些属性拷贝工具性能有点差&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;有些属性拷贝工具有“BUG”&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;使用属性拷贝工具容易存在一些隐患（后面例子会讲到）&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h1&gt;&lt;strong&gt;&lt;span&gt;2. 示例&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/h1&gt;&lt;p&gt;首先公司内部就遇到过 commons 包的 BeanUtils 进行属性拷贝性能较差的真实案例，然后该同事换成了 Spring 的 BeanUtils 性能好了很多，感兴趣大家可以使用性能测试框架或者基准测试框架去对比，这里就不对比了。&lt;/p&gt;&lt;p&gt;&lt;span&gt;接下来我们看 Spring 的 BeanUtils 的属性拷贝会存在啥问题：&lt;/span&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;import lombok.Data;&lt;br/&gt;&lt;br/&gt;import java.util.List;&lt;br/&gt;&lt;br/&gt;@Data&lt;br/&gt;public class A {&lt;br/&gt;    private String name;&lt;br/&gt;&lt;br/&gt;    private List&amp;lt;Integer&amp;gt; ids;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;@Data&lt;br/&gt;public class B {&lt;br/&gt;    private String name;&lt;br/&gt;&lt;br/&gt;    private List&amp;lt;String&amp;gt; ids;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;import org.springframework.beans.BeanUtils;&lt;br/&gt;&lt;br/&gt;import java.util.Arrays;&lt;br/&gt;&lt;br/&gt;public class BeanUtilDemo {&lt;br/&gt;    public static void main(String[] args) {&lt;br/&gt;        A first = new A();&lt;br/&gt;        first.setName(&lt;span&gt;&quot;demo&quot;&lt;/span&gt;);&lt;br/&gt;        first.setIds(Arrays.asList(1, 2, 3));&lt;br/&gt;&lt;br/&gt;        B second = new B();&lt;br/&gt;        BeanUtils.copyProperties(first, second);&lt;br/&gt;        &lt;span&gt;for&lt;/span&gt; (String each : second.getIds()) {// 类型转换异常&lt;br/&gt;            System.out.println(each);&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;大家运行上述示例时，会发生类型转换异常。&lt;/section&gt;&lt;p&gt;打断点可以看到，属性拷贝之后 B 类型的 second 对象中 ids 仍然为 Integer 类型：&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.675152749490835&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/QCu849YTaINs0CbuWLMzg1N2K6KFXdorxkQGPX7E6ePqkJPkfZSLz4mEfkaZ4msSXbPQM06DT9YIHUMdbIQvqw/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;982&quot;/&gt;&lt;/p&gt;&lt;p&gt;如果不转换为字符串，直接进行打印，并不会报错。&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;使用CGlib 在不定义Converter 的情况下也会遇到类似问题：&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;import org.easymock.cglib.beans.BeanCopier;&lt;br/&gt;&lt;br/&gt;import java.util.Arrays;&lt;br/&gt;&lt;br/&gt;public class BeanUtilDemo {&lt;br/&gt;    public static void main(String[] args) {&lt;br/&gt;        A first = new A();&lt;br/&gt;        first.setName(&lt;span&gt;&quot;demo&quot;&lt;/span&gt;);&lt;br/&gt;        first.setIds(Arrays.asList(1, 2, 3));&lt;br/&gt;&lt;br/&gt;        B second = new B();&lt;br/&gt;        final BeanCopier beanCopier = BeanCopier.create(A.class, B.class, &lt;span&gt;false&lt;/span&gt;);&lt;br/&gt;        beanCopier.copy(first,second,null);&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;for&lt;/span&gt; (String each : second.getIds()) {// 类型转换异常&lt;br/&gt;            System.out.println(each);&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;同样，问题在运行时才暴露出来。&lt;/section&gt;&lt;hr/&gt;&lt;p&gt;接下来我们看下 mapstruct：&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;import org.mapstruct.Mapper;&lt;br/&gt;import org.mapstruct.factory.Mappers;&lt;br/&gt;&lt;br/&gt;@Mapper&lt;br/&gt;public interface Converter {&lt;br/&gt;    Converter INSTANCE = Mappers.getMapper(Converter.class);&lt;br/&gt;&lt;br/&gt;    B aToB(A car);&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;import java.util.Arrays;&lt;br/&gt;&lt;br/&gt;public class BeanUtilDemo {&lt;br/&gt;    public static void main(String[] args) {&lt;br/&gt;        A first = new A();&lt;br/&gt;        first.setName(&lt;span&gt;&quot;demo&quot;&lt;/span&gt;);&lt;br/&gt;        first.setIds(Arrays.asList(1, 2, 3));&lt;br/&gt;&lt;br/&gt;        B second = Converter.INSTANCE.aToB(first);&lt;br/&gt;        &lt;span&gt;for&lt;/span&gt; (String each : second.getIds()) {// 正常&lt;br/&gt;            System.out.println(each);&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;可以成功的将 A 中 &lt;code&gt;List&amp;lt;Integer&amp;gt;&lt;/code&gt; 转为 B 中的 &lt;code&gt;List&amp;lt;String&amp;gt;&lt;/code&gt; 类型。&lt;br/&gt;&lt;/section&gt;&lt;p&gt;我们看下编译生成的 Converter 实现类：&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;import java.util.ArrayList;&lt;br/&gt;import java.util.List;&lt;br/&gt;import javax.annotation.Generated;&lt;br/&gt;import org.springframework.stereotype.Component;&lt;br/&gt;&lt;br/&gt;@Generated(&lt;br/&gt;    value = &lt;span&gt;&quot;org.mapstruct.ap.MappingProcessor&quot;&lt;/span&gt;,&lt;br/&gt;    comments = &lt;span&gt;&quot;version: 1.3.1.Final, compiler: javac, environment: Java 1.8.0_202 (Oracle Corporation)&quot;&lt;/span&gt;&lt;br/&gt;)&lt;br/&gt;@Component&lt;br/&gt;public class ConverterImpl implements Converter {&lt;br/&gt;&lt;br/&gt;    @Override&lt;br/&gt;    public B aToB(A car) {&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; ( car == null ) {&lt;br/&gt;            &lt;span&gt;return&lt;/span&gt; null;&lt;br/&gt;        }&lt;br/&gt;&lt;br/&gt;        B b = new B();&lt;br/&gt;&lt;br/&gt;        b.setName( car.getName() );&lt;br/&gt;        b.setIds( integerListToStringList( car.getIds() ) );&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; b;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    protected List&amp;lt;String&amp;gt; integerListToStringList(List&amp;lt;Integer&amp;gt; list) {&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; ( list == null ) {&lt;br/&gt;            &lt;span&gt;return&lt;/span&gt; null;&lt;br/&gt;        }&lt;br/&gt;&lt;br/&gt;        List&amp;lt;String&amp;gt; list1 = new ArrayList&amp;lt;String&amp;gt;( list.size() );&lt;br/&gt;        &lt;span&gt;for&lt;/span&gt; ( Integer &lt;span&gt;integer&lt;/span&gt; : list ) {&lt;br/&gt;            list1.add( String.valueOf( &lt;span&gt;integer&lt;/span&gt; ) );&lt;br/&gt;        }&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; list1;&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;自动帮我们进行了转换，我们可能没有意识到类型并不一致。&lt;/p&gt;&lt;p&gt;如果我们在 A 类中添加一个 String number 属性，在 B 类中添加一个 Long number 属性，使用 mapstruect 当 number 设置为非数字类型时就会报 &lt;code&gt;.NumberFormatException&lt;/code&gt; 。&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt; @Override&lt;br/&gt;    public B aToB(A car) {&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; ( car == null ) {&lt;br/&gt;            &lt;span&gt;return&lt;/span&gt; null;&lt;br/&gt;        }&lt;br/&gt;&lt;br/&gt;        B b = new B();&lt;br/&gt;&lt;br/&gt;        b.setName( car.getName() );&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; ( car.getNumber() != null ) { // 问题出在这里&lt;br/&gt;            b.setNumber( Long.parseLong( car.getNumber() ) );&lt;br/&gt;        }&lt;br/&gt;        b.setIds( integerListToStringList( car.getIds() ) );&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; b;&lt;br/&gt;    }&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;使用 cglib 默认则不会映射 number 属性，B 中的 number 为 null。&lt;/section&gt;&lt;hr/&gt;&lt;p&gt;如果手动定义转换器，使用 IDEA 插件(如 generateO2O)自动转换：&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;public final class A2BConverter {&lt;br/&gt;&lt;br/&gt;    public static B from(A first) {&lt;br/&gt;        B b = new B();&lt;br/&gt;        b.setName(first.getName());&lt;br/&gt;        b.setIds(first.getIds());&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; b;&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;在编码阶段就可以非常明确地发现这个问题：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.451505016722408&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/QCu849YTaINs0CbuWLMzg1N2K6KFXdoryObcVHiaU3U4dMV7dh4tZeO2X07MnmrphlaSJ6lRR344K8IiaIV0mQicw/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;897&quot;/&gt;&lt;/p&gt;&lt;h1&gt;&lt;strong&gt;&lt;span&gt;3. 结论&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/h1&gt;&lt;p&gt;由于 Java 的泛型其实是编译期检查，编译后泛型擦除，导致运行时 &lt;code&gt;List&amp;lt;Integer&amp;gt;&lt;/code&gt; 和 &lt;code&gt;List&amp;lt;String&amp;gt;&lt;/code&gt; 都是 List 类型，可以正常赋值。这就导致在使用很多属性映射工具时，编译时不容易明显的错误。&lt;/p&gt;&lt;p&gt;&lt;span&gt;mapstruct 自定义了注解处理器，在编译阶段可以读取映射双方的泛型类型，进而进行映射。但是这种映射也很可怕，有时候我们由于粗心等原因定义错了类型，&lt;/span&gt;自动帮助我们进行了转换，会带了很多副作用。&lt;/p&gt;&lt;p&gt;之前对各种属性映射工具的性能进行了简单的对比，结果如下：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8611111111111112&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/QCu849YTaINs0CbuWLMzg1N2K6KFXdoro1NTLoAVoBsdt5v7TUZttoBOW4OJFgw7asAanicOl01IicpryWDziaLNw/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;1296&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;因此慎用属性转换工具，如果可能建议自定义转换类，使用 IDEA插件自动填充，效率也挺高， A 或 B 中任何属性类型不匹配，甚至删除一个属性，&lt;/span&gt;编译阶段即可报错，而且直接调用 get set 的效率也是非常高的。&lt;/p&gt;&lt;blockquote data-type=&quot;2&quot; data-url=&quot;&quot; data-author-name=&quot;&quot; data-content-utf8-length=&quot;55&quot; data-source-title=&quot;&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;来源：blog.csdn.net/w605283073/article/details/107371462&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;相关阅读：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;1、&lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2MTIzMzY3Mw==&amp;amp;mid=2247523205&amp;amp;idx=1&amp;amp;sn=89b261f829ce6c3487ce8b2ccf3ed06b&amp;amp;chksm=ea5f56e3dd28dff5238989d3e07d775d34c04a4e80a166059e92e84379274819203d72d1dc1d&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;Alibaba开源内网高并发编程手册.pdf&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;Alibaba开源内网高并发编程手册.pdf&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;2、&lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2MTIzMzY3Mw==&amp;amp;mid=2247487508&amp;amp;idx=1&amp;amp;sn=78cf235aa9ba5f988c6922ca98f8bfd6&amp;amp;chksm=ea5cdd72dd2b54647cf55b4a73dcafa69fc7228205ad39ecc98fe57b39cdecb21c238c6d6cb6&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;2T架构师学习资料干货分享&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;2T架构师学习资料干货分享&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;3、&lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2MTIzMzY3Mw==&amp;amp;mid=2247523100&amp;amp;idx=1&amp;amp;sn=82a70350577bde0bca6dd2dde811ca17&amp;amp;chksm=ea5f567add28df6cb6a780ff744c3ffdc79e498d2c2536ffb1853d8082ebfa986e1e5c43d532&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;10000+TB 资源，阿里云盘，牛逼！！&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;10000+TB 资源，阿里云盘，牛逼！！&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;p&gt;4、&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2MTIzMzY3Mw==&amp;amp;mid=2247523863&amp;amp;idx=1&amp;amp;sn=4d2a2b5da60f14f3e8947e174d485c03&amp;amp;chksm=ea5f5371dd28da6791af6cb3a164c8052f1e77d7392cbbc87c5a73ccc6916b76eab29dbc9991&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;基本涵盖了Spring所有核心知识点总结&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;基本涵盖了Spring所有核心知识点总结&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;  · END ·&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;最后，关注公众号互联网架构师，在后台回复：2T，可以获取我整理的 Java 系列面试题和答案，非常齐全&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.3640625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/9mQQWOf4KRL358RWHQSLbUws79uyGm5RJ6WZibYJMAKUQibz8aYNA5LPSmbo1boibnD3IhggQ2F7kS37xgk3WXQ8Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>