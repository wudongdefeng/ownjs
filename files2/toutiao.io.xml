<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>93147bc3d63465e7423c1089c9d7ebd2</guid>
<title>Python 霸榜的一周，又有什么新 AI 力作呢？「GitHub 热点速览」</title>
<link>https://toutiao.io/k/weljtzu</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.75&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/xBgIbW1vdNPglx4SKymSfkYD6azMHKOnuOKmZQxhJHFcC8uOicSDDeMEibaaG98xzfO119LliaKZZBjvtN2XemXcg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;作者：HelloGitHub-小鱼干&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;GPT 带火了一波语言模型，LLaMA 和 Alpaca 也在持续发力。依旧是各类 GPT 后缀霸榜 GitHub trending 的一周，为此特推部分专门收录了两个比较不错的 GPT 应用。而作为 ML/AI 第一首选语言的 Python 也是风头一时，除了 AI 项目之外，本周的密文解析 Ciphey 也采用了 Python。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当然，还有 Java 项目搞大数据的 incubator-paimon，应对各种模型运行的 modelscope 和 dalai。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以下内容摘录自微博@HelloGitHub 的 GitHub Trending 及 Hacker News 热帖（简称 HN 热帖），选项标准：&lt;code&gt;新发布&lt;/code&gt; | &lt;code&gt;实用&lt;/code&gt; | &lt;code&gt;有趣&lt;/code&gt;，根据项目 release 时间分类，发布时间不超过 14 day 的项目会标注 &lt;code&gt;New&lt;/code&gt;，无该标志则说明项目 release 超过半月。由于本文篇幅有限，还有部分项目未能在本文展示，望周知 🌝&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7305555555555555&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNPglx4SKymSfkYD6azMHKOntlHiaYbeCL1qwvPUbMG5TNwLlaabrSS5XmaqmVlM1x6qZzhgTShebWA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;1. 本周特推&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;1.1 GPT 专场&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在 GPT 热度消退之前，热点趋势的特推部分会增加一个模块来专门分享新的 GPT 应用。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;1.1.1 智能搜索引擎：gerev&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;主语言：Python、TypeScript&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;New&lt;/code&gt; 能应用在多个软件的搜索系统，由 ChatGPT 提供支持，目前支持 Slack、Confluence、Google 全家桶（包括文档、PPT）、Bookstack、Mattermost、RocketChat 等软件，对 Notion、Microsoft Teams、GitHub issue 的支持尚在规划开发中。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;GitHub 地址→https://github.com/GerevAI/gerev&lt;/p&gt;&lt;/blockquote&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5705765407554672&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNPglx4SKymSfkYD6azMHKOny9guWvrU87GdLvzCECngQH1rja68qJqwL69MnK5aBicVUlT1JNhKiahg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1006&quot;/&gt;&lt;/figure&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;1.1.2 代码检索：bloop&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;主语言：TypeScript、Rust&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;New&lt;/code&gt; 采用 GPT-4 实现的代码搜索引擎，支持用自然语言、正则、过滤查询等找寻你在本地、远端仓的代码。你也可以用它来帮你讲解他人的代码。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;GitHub 地址→https://github.com/BloopAI/bloop&lt;/p&gt;&lt;/blockquote&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.621875&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/xBgIbW1vdNPglx4SKymSfkYD6azMHKOnUQdosUP9iaqNlDEUs2PptJNLlpENM97NcWq2jWgNtzJ7ItPicCQfqUicA/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;640&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;1.2 LangChain UI：langflow&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;主语言：JavaScript&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;New&lt;/code&gt; LangChain 大型语言模型的集大成者，现在非常火爆的 GPT-4 便是一款语言模型。而 langflow 则是一个 LangChain UI，提供了一种交互界面来使用 LangChain，通过拖拽即可搭建自己的实验、原型流。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;GitHub 地址→https://github.com/logspace-ai/langflow&lt;/p&gt;&lt;/blockquote&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.625&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/xBgIbW1vdNPglx4SKymSfkYD6azMHKOnw2OibRtXNM2g7k2RhXqwUbuUcOBvOkiaHg3KMicSTKAVmpYcibY9icNZMtw/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;800&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;2. GitHub Trending 周榜&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;2.1 密文解析：Ciphey&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;本周 star 增长数：950+&lt;strong&gt;，&lt;/strong&gt;主语言：Python&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这是一个知名老项目，当你输入一段文字，甚至你不知道它是否加密过，Ciphey 都能帮你输出解密之后的文本。如果你对密码学不太了解，或者想在自己进行密文处理之前快速检查密文，不妨试试它。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;GitHub 地址→https://github.com/Ciphey/Ciphey&lt;/p&gt;&lt;/blockquote&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.0522243713733075&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/xBgIbW1vdNPglx4SKymSfkYD6azMHKOn4EIm6pVgn4wtc8ZwWyuCfJ5zQJ4wfOculJFVibYQziaBzySy0YuvX0yg/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;517&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;2.2 模型即服务：modelscope&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;本周 star 增长数：550+&lt;strong&gt;，&lt;/strong&gt;主语言：Python&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;你是不是有很多 AI 模型想跑起来玩玩，但是苦于没有机器？ModelScope 托管了阿里达摩院绝大多数的模型，它们代码托管在 GitHub 上，你可以在 modelscope 上跑这些模型库，它提供了相关的模型运行资源。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;GitHub 地址→https://github.com/modelscope/modelscope&lt;/p&gt;&lt;/blockquote&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.29296875&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/xBgIbW1vdNPglx4SKymSfkYD6azMHKOncUTaudGTr57Y0Tlezuvlld5H8SjfUP2ibKro5vQkFZCMPC51EBSozNg/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;768&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;2.3 Linux 服务器运维：1Panel&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;本周 star 增长数：1,150+&lt;strong&gt;，&lt;/strong&gt;主语言：Lua&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;New&lt;/code&gt; 1Panel 是一个现代化、开源的 Linux 服务器运维管理面板。特性：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;快速建站：深度集成 Wordpress 和 Halo，域名绑定、SSL 证书配置等一键搞定；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;高效管理：通过 Web 端轻松管理 Linux 服务器，包括应用管理、主机监控、文件管理、数据库管理、容器管理等；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;安全可靠：最小漏洞暴露面，提供防火墙和安全审计等功能；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;一键备份：支持一键备份和恢复，备份数据云端存储，永不丢失。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;GitHub 地址→https://github.com/1Panel-dev/1Panel&lt;/p&gt;&lt;/blockquote&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6351851851851852&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNPglx4SKymSfkYD6azMHKOnFibsL9mObs9iacu0A7sx5bHyJJ9LiaCgpWcMcQLdACd9xh7m35icW9LZzA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;2.4 一个本地跑模型的简单方法：dalai&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;本周 star 增长数：3,300+&lt;strong&gt;，&lt;/strong&gt;主语言：CSS、JavaScript&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;New&lt;/code&gt; 让你本地机器跑 LLaMA 和 Alpaca 模型的最简法，支持 macOS、Linux、Windows 等主流操作系统。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;GitHub 地址→https://github.com/cocktailpeanut/dalai&lt;/p&gt;&lt;/blockquote&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.562962962962963&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/xBgIbW1vdNPglx4SKymSfkYD6azMHKOnuozneMGMkCctqCWlIH1Lic3MH8t88byFQMEiaeluicJib21ibg6Nv97fdFA/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;1080&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;2.5 流数据平台：incubator-paimon&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;本周 star 增长数：850+&lt;strong&gt;，&lt;/strong&gt;主语言：Java&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;New&lt;/code&gt; 可以高效地进行数据采集，具有动态追踪和实时分析能力的流数据平台。btw，这是一个在 Apache 孵化的开源项目。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;GitHub 地址→https://github.com/apache/incubator-paimon&lt;/p&gt;&lt;/blockquote&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.2861111111111111&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNPglx4SKymSfkYD6azMHKOnSqriaENcUK5UcFV7v5NrnVpytDDIrXR6rqws5hdgKDA6Z8OWJcK1Gww/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;3. HelloGitHub 热评&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在这个章节，我们将会分享下本周 HelloGitHub 网站上的热评项目，HG 开源项目评价体系刚上线不久，期待你的反馈😊&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;3.1 轻量级备忘录：memos&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;主语言：TypeScript&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;采用 React+Tailwind+TypeScript+Go 开发的备忘录中心，相当于极简的微博。支持私有 / 公开备忘录、标签、互动式日历等功能，以及 Docker 部署。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;HG 评价地址→https://hellogithub.com/repository/98fb40421cff4d5881412b0af9b68164&lt;/p&gt;&lt;/blockquote&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7462962962962963&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/xBgIbW1vdNPglx4SKymSfkYD6azMHKOn4OENicIfY5L9ia8Da43ssrmaZz8v4dhbU4JctKpibDzKCzsGoXNKy373Q/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;3.2 图解 React 源码：react-illustration-series&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;主语言：TypeScript&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;作者从 React 项目结构和运行机制入手，先介绍 React 的整体结构，然后讲解运行核心、数据管理以及用到的高频算法。篇篇到 “肉” 干货满满，推荐给想要深入学习 React 源码的小伙伴。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;HG 评价地址→https://hellogithub.com/repository/a4279670afea4b6987dc3d045876316a&lt;/p&gt;&lt;/blockquote&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7574074074074074&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/xBgIbW1vdNPglx4SKymSfkYD6azMHKOnyERwPNN7QT26cybK1JbDnaCeyM1XTHcnVNNQx6aWb06kJFibiaaC9Eew/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;4. 往期回顾&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;往期回顾：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以上为 2023 年第 12 个工作周的 GitHub Trending 🎉如果你 Pick 其他好玩、实用的 GitHub 项目，来 HelloGitHub 和大家一起分享下哟 🌝&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;HelloGitHub 交流群现已全面开放，添加微信号：HelloGitHub001 为好友入群，可同前端、Java、Go 等各界大佬谈笑风生、切磋技术~&lt;/p&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>b8d9ae9dc6ac185a878e134a6ef7b311</guid>
<title>【ChatGPT】通过 ChatGPT 用文字描述来绘制插画</title>
<link>https://toutiao.io/k/cnutlrw</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;profile_inner&quot;&gt;
                  &lt;strong class=&quot;profile_nickname&quot;&gt;独立开发者杂谈&lt;/strong&gt;
                  &lt;img class=&quot;profile_avatar&quot; id=&quot;js_profile_qrcode_img&quot; src=&quot;&quot; alt=&quot;&quot;/&gt;

                  &lt;p class=&quot;profile_meta&quot;&gt;
                  &lt;label class=&quot;profile_meta_label&quot;&gt;Weixin ID&lt;/label&gt;
                  &lt;span class=&quot;profile_meta_value&quot;&gt;indie_13601655176&lt;/span&gt;
                  &lt;/p&gt;

                  &lt;p class=&quot;profile_meta&quot;&gt;
                  &lt;label class=&quot;profile_meta_label&quot;&gt;About Feature&lt;/label&gt;
                  &lt;span class=&quot;profile_meta_value&quot;&gt;一份专为独立开发者打造的原创杂谈，这里分享的内容包含创业、产品、UED、前端、后端、移动端、Node.js、Flutter以及等等等，简直应有尽有，随心所欲～～&lt;/span&gt;
                  &lt;/p&gt;
                &lt;/div&gt;
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>d0b5595d59d46d8d68c427a7e5704bf3</guid>
<title>生产上的问题你还不会用 sourcemap 定位吗？</title>
<link>https://toutiao.io/k/1jmpge6</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content js_underline_content              autoTypeSetting24psection&amp;#10;            &quot; id=&quot;js_content&quot;&gt;&lt;section data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;mp-common-profile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-weui-theme=&quot;light&quot; data-id=&quot;MzUxNzk1MjQ0Ng==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/YBFV3Da0Nwvv72YkFO0qPibDKicOCsfltiaE9070DOu4iahXnicYwRIHcxe9VBicAy45MkPqy8nZzLTVibugOtV0ORFcg/0?wx_fmt=png&quot; data-nickname=&quot;程序员成长指北&quot; data-alias=&quot;coder_growth&quot; data-signature=&quot;专注 Node.js 技术栈分享，从 前端 到 Node.js 再到 后端数据库，祝您成为优秀的高级 Node.js 全栈工程师。一个有趣的且乐于分享的人。座右铭：今天未完成的，明天更不会完成。&quot; data-from=&quot;0&quot; data-is_biz_ban=&quot;0&quot;/&gt;&lt;/section&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot; data-style=&quot;outline: 0px; color: rgb(0, 0, 0); font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;quot;PingFang SC&amp;quot;, Cambria, Cochin, Georgia, Times, &amp;quot;Times New Roman&amp;quot;, serif; white-space: normal; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); text-align: center; caret-color: rgb(51, 51, 51); visibility: visible;&quot;&gt;&lt;span data-style=&quot;padding: 4px 7px; outline: 0px; border-color: rgb(255, 187, 150); background: rgb(255, 242, 232); letter-spacing: 0.544px; font-size: 12px; text-align: left; border-radius: 2px; line-height: 20px; font-weight: bold; color: rgb(212, 56, 13); visibility: visible;&quot;&gt;大厂技术&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span data-style=&quot;padding: 4px 7px; outline: 0px; border-color: rgb(173, 198, 255); background: rgb(240, 245, 255); letter-spacing: 0.544px; font-size: 12px; text-align: left; border-radius: 2px; line-height: 20px; font-weight: bold; color: rgb(29, 57, 196); visibility: visible;&quot;&gt;高级前端&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span data-style=&quot;padding: 4px 7px; outline: 0px; border-color: rgb(183, 235, 143); background: rgb(246, 255, 237); letter-spacing: 0.544px; font-size: 12px; text-align: left; border-radius: 2px; line-height: 20px; font-weight: bold; color: rgb(56, 158, 13); visibility: visible;&quot;&gt;Node进阶&lt;/span&gt;&lt;/h1&gt;&lt;p data-style=&quot;margin-bottom: 0px; padding-right: 0.5em; padding-left: 0.5em; outline: 0px; font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); color: rgb(62, 62, 62); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 2px; text-align: center; caret-color: rgb(51, 51, 51); word-spacing: 0.8px; visibility: visible;&quot;&gt;&lt;span data-darkmode-bgcolor-16021670869911=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16021670869911=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16021670869911=&quot;rgb(136, 136, 136)&quot; data-darkmode-original-color-16021670869911=&quot;rgb(136, 136, 136)&quot; data-darkmode-bgcolor-16030289161394=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16030289161394=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16030289161394=&quot;rgb(136, 136, 136)&quot; data-darkmode-original-color-16030289161394=&quot;rgb(136, 136, 136)&quot; data-darkmode-bgcolor-16030315732716=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16030315732716=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16030315732716=&quot;rgb(136, 136, 136)&quot; data-darkmode-original-color-16030315732716=&quot;rgb(136, 136, 136)&quot;&gt;点击上方 &lt;/span&gt;&lt;span data-darkmode-bgcolor-16021670869911=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16021670869911=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16021670869911=&quot;rgb(0, 128, 255)&quot; data-darkmode-original-color-16021670869911=&quot;rgb(0, 128, 255)&quot; data-darkmode-bgcolor-16030289161394=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16030289161394=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16030289161394=&quot;rgb(0, 128, 255)&quot; data-darkmode-original-color-16030289161394=&quot;rgb(0, 128, 255)&quot; data-darkmode-bgcolor-16030315732716=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16030315732716=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16030315732716=&quot;rgb(0, 128, 255)&quot; data-darkmode-original-color-16030315732716=&quot;rgb(0, 128, 255)&quot;&gt;程序员成长指北&lt;/span&gt;&lt;span data-darkmode-bgcolor-16021670869911=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16021670869911=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16021670869911=&quot;rgb(136, 136, 136)&quot; data-darkmode-original-color-16021670869911=&quot;rgb(136, 136, 136)&quot; data-darkmode-bgcolor-16030289161394=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16030289161394=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16030289161394=&quot;rgb(136, 136, 136)&quot; data-darkmode-original-color-16030289161394=&quot;rgb(136, 136, 136)&quot; data-darkmode-bgcolor-16030315732716=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16030315732716=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16030315732716=&quot;rgb(136, 136, 136)&quot; data-darkmode-original-color-16030315732716=&quot;rgb(136, 136, 136)&quot;&gt;，关注公众号&lt;/span&gt;&lt;/p&gt;&lt;p data-style=&quot;margin-bottom: 0px; outline: 0px; color: rgb(0, 0, 0); font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;quot;PingFang SC&amp;quot;, Cambria, Cochin, Georgia, Times, &amp;quot;Times New Roman&amp;quot;, serif; font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); letter-spacing: 2px; text-align: center; caret-color: rgb(51, 51, 51); word-spacing: 0.8px; visibility: visible;&quot;&gt;&lt;span&gt;回复&lt;/span&gt;&lt;span&gt;&lt;span&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span&gt;，加入高级Node交流群&lt;/span&gt;&lt;/p&gt;&lt;h1 data-id=&quot;heading-0&quot;&gt;&lt;strong&gt;&lt;span&gt;前言&lt;/span&gt;&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;&lt;span&gt;上周在群里突然被 &lt;/span&gt;&lt;code&gt;@&lt;/code&gt;&lt;span&gt; 要我查看生产上出现的问题，由于这个项目比较老 (&lt;/span&gt;&lt;strong&gt;&lt;code&gt;React15&lt;/code&gt;&lt;/strong&gt;&lt;span&gt;)，既没有埋点也没有接入错误监控，于是会得到如下的这样一个提示信息（&lt;/span&gt;&lt;strong&gt;以下错误是本地模拟的实际生产效果&lt;/strong&gt;&lt;span&gt;）：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.08844765342960288&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/p3q0CDzmjJMfYZpHCBEcniabRHssQZvdh7Ns4OjbgQoS9OiaymeEB47ocvmIOQk9JmIVViarxvsygk1btzLj0Jicfw/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;554&quot;/&gt;&lt;/p&gt;&lt;p&gt;当你想要直接点击链接定位时，就会看到如下的形式：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4828125&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/p3q0CDzmjJMfYZpHCBEcniabRHssQZvdhJffsyHrrS1QDcQla8G1jTRED6PQqeIZ69y7weBLXD7ibsIcIUpZcBlg/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;640&quot;/&gt;&lt;/p&gt;&lt;p&gt;这怎么说呢？&lt;strong&gt;不能说一模一样，只能说毫不相关（&lt;span&gt;&lt;code&gt;表面上&lt;/code&gt;&lt;/span&gt;）&lt;/strong&gt;！&lt;/p&gt;&lt;p&gt;针对老项目再想加入埋点和错误监控可能就比较困难了，特别是当看到其中各种无法让你理解的写法和逻辑，加之不同开发人员的迭代开发，一直在往上堆 &lt;strong&gt;x 山&lt;/strong&gt;（&lt;span&gt;&lt;code&gt;保持优雅，该打码就打码&lt;/code&gt;&lt;/span&gt;），就更加没法做什么进一步的优化了，只能说能跑就行，&lt;strong&gt;不敢动，根本就不敢动！&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;那么还剩下的能够快速帮助我们定位详细错误信息的方式是什么呢？没错就是本文的主角 &lt;strong&gt;sourcemap&lt;/strong&gt;，这也是为什么会有本篇与 &lt;strong&gt;sourcemap&lt;/strong&gt; 相关的文章。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.9625&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/p3q0CDzmjJMfYZpHCBEcniabRHssQZvdhavHfV8RdLhRhKs2Hk9X7BOdHVVHtpFNArvA2xNPxoTeu2Uqiak0w0bQ/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;240&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;文中若存在不正确之处，可在评论区斧正！！！&lt;/span&gt;&lt;/p&gt;&lt;h1 data-id=&quot;heading-1&quot;&gt;&lt;span&gt;&lt;strong&gt;sourcemap 的使用和规则&lt;/strong&gt;&lt;/span&gt;&lt;/h1&gt;&lt;h2 data-id=&quot;heading-2&quot;&gt;&lt;span&gt;&lt;strong&gt;sourcemap 是什么？&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;简单的说，就是一个以 &lt;strong&gt;&lt;code&gt;.map&lt;/code&gt;&lt;/strong&gt; 为后缀的文件，例如：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5211726384364821&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/p3q0CDzmjJMfYZpHCBEcniabRHssQZvdh4ZAzYzY22kAScYibibQAcr1RghK7NBWmLycVyfEzkILb7mHK5SkLxTww/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;307&quot;/&gt;&lt;/p&gt;&lt;p&gt;而 &lt;strong&gt;&lt;code&gt;.map&lt;/code&gt;&lt;/strong&gt; 文件里面的内容以 &lt;strong&gt;&lt;code&gt;json&lt;/code&gt;&lt;/strong&gt; 形式存储了 &lt;strong&gt;源代码&lt;/strong&gt; 打包转换后的位置信息，核心内容如下：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;version&lt;/strong&gt;：版本号，目前 &lt;code&gt;sourcemap&lt;/code&gt; 标准的版本为 &lt;strong&gt;3&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;file&lt;/strong&gt;：指打包构建后的 &lt;strong&gt;&lt;code&gt;文件名&lt;/code&gt;&lt;/strong&gt;，即 &lt;strong&gt;&lt;code&gt;bundle&lt;/code&gt;&lt;/strong&gt; 文件名&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;sources&lt;/strong&gt;：指当前这个 &lt;strong&gt;&lt;code&gt;bundle&lt;/code&gt;&lt;/strong&gt; 文件所包含的所有 &lt;strong&gt;&lt;code&gt;源码文件&lt;/code&gt;&lt;/strong&gt;，因为存在分包等优化策略，一个 &lt;strong&gt;&lt;code&gt;bundle&lt;/code&gt;&lt;/strong&gt; 文件可能会包含 &lt;strong&gt;&lt;code&gt;多个源码文件&lt;/code&gt;&lt;/strong&gt; 的内容&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;sourcesContent&lt;/strong&gt;：指上述 &lt;strong&gt;&lt;code&gt;sources&lt;/code&gt;&lt;/strong&gt; 中每个 &lt;strong&gt;&lt;code&gt;源码文件&lt;/code&gt;&lt;/strong&gt; 所对应的源码内容字符&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;names&lt;/strong&gt;：指在代码在经历 &lt;strong&gt;&lt;code&gt;混淆压缩&lt;/code&gt;&lt;/strong&gt; 之前的 &lt;strong&gt;&lt;code&gt;变量名&lt;/code&gt;&lt;/strong&gt;，这个变量名包含 &lt;strong&gt;&lt;code&gt;导入模块名&lt;/code&gt;&lt;/strong&gt;、&lt;strong&gt;&lt;code&gt;常用方法名&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;mappings&lt;/strong&gt;：直接进行翻译就是 &lt;strong&gt;&lt;code&gt;映射&lt;/code&gt;&lt;/strong&gt; 的意思，即根据以上信息实现的源码代码位置和构建产物之间的一一映射关系&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;sourceRoot&lt;/strong&gt;：指源码目录&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6810344827586207&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/p3q0CDzmjJMfYZpHCBEcniabRHssQZvdhvpzyxDlOzZnY9aLogDAEuWds5E6EDZIFYMZRyCUnoWomaEjwTW5PRw/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;464&quot;/&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-id=&quot;heading-3&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;sourcemap 有啥用？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;上面已经提到了 &lt;strong&gt;&lt;code&gt;.map&lt;/code&gt;&lt;/strong&gt; 文件中以 &lt;code&gt;json&lt;/code&gt; 形式存储的数据内容，就是包含着源代码与构建产物之间的映射关系，那么它的作用自然就是实现：&lt;strong&gt;&lt;code&gt;运行时代码&lt;/code&gt;&lt;/strong&gt; 和 &lt;strong&gt;&lt;code&gt;开发时代码&lt;/code&gt; 都能拥有相同准确的信息提示&lt;/strong&gt;。&lt;/p&gt;&lt;p&gt;常见的 &lt;strong&gt;开发时代码提示&lt;/strong&gt;，如下：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.271875&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/p3q0CDzmjJMfYZpHCBEcniabRHssQZvdhOf3K81KX9GmcDQv4Gv1bOZqibVPzP2oicxJ3rVBZW1GCZTm9mAdC80icw/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;640&quot;/&gt;&lt;/p&gt;&lt;p&gt;常见的 &lt;strong&gt;运行时代码提示&lt;/strong&gt;，如下：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.08844765342960288&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/p3q0CDzmjJMfYZpHCBEcniabRHssQZvdh7Ns4OjbgQoS9OiaymeEB47ocvmIOQk9JmIVViarxvsygk1btzLj0Jicfw/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;554&quot;/&gt;&lt;/p&gt;&lt;p&gt;可见 &lt;strong&gt;运行时代码提示&lt;/strong&gt; 的代码提示信息不够详细准确，而且以上只是简单的模拟了运行时错误，而实际项目中大多数的运行时错误是在不同的场景下才会出现的，而此时由于处于生产环境中，在排查异常代码时就会体现出限制：&lt;/p&gt;&lt;p&gt;主要原因就是 &lt;strong&gt;开发时代码&lt;/strong&gt; 到 &lt;strong&gt;运行时代码&lt;/strong&gt; 的转变都需要经历以下几个处理阶段：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;代码压缩&lt;/strong&gt;，为了减小运行时代码的体积，会将源代码中的 换行符、无意义空格 等进行删除，使得代码紧凑在一起&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;代码混淆&lt;/strong&gt;，实际上是指将源代码转换成一种功能上等价，但是难于阅读和理解的形式，例如开发时代码中定义的 &quot;见名知意&quot; 的 函数名、模块名、变量名 等转换为类似 &quot;a、b、c、...&quot; 等无意义的名字，使得即使运行时代码被人获取，也难以猜测其作用&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;代码分块（chunk split）&lt;/strong&gt;，在现代前端构建工具（webpack、vite 等）中都支持将多个源代码文件合并成一个 bundle 文件，目的就是减少 http 请求数量，以实现优化效果&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;因此，sourmap 就可以在这些处理阶段中构建出 运行时代码 和 开发时代码 代码的映射关系，使得运行时代码也能够像开发时代码一样提供给我们详细而准确的信息，帮助我们在生产环境中也能够快速定位到源代码中的位置。&lt;/p&gt;&lt;h2 data-id=&quot;heading-4&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;如何快速生成 sourcemap?&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;前端构建工具很多，这里只列举最常用的两个：&lt;strong&gt;vite&lt;/strong&gt; 和 &lt;strong&gt;webpack&lt;/strong&gt;&lt;/p&gt;&lt;h3 data-id=&quot;heading-5&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;vite 生成 sourcemap&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;vite&lt;/code&gt;&lt;/strong&gt; 中只要通过设置 &lt;code&gt;build.sourcemap&lt;/code&gt; 的选项配置即可，值类型包括：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;boolean：true | false&lt;/strong&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.2390625&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/p3q0CDzmjJMfYZpHCBEcniabRHssQZvdhg3DCsPY7VcbTbWp2RQJQhpoQqiciawdry7seZkvfFIoTYvSlMNQYclyg/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;640&quot;/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;&#x27;inline&#x27;&lt;/strong&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.1296875&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/p3q0CDzmjJMfYZpHCBEcniabRHssQZvdhvibNVYDRa6bQibDtibDJb2vSJXUf7hrS4qoluJwbBC9YBGAAoibYM5zArw/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;640&quot;/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;&#x27;hidden&#x27;&lt;/strong&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-id=&quot;heading-6&quot;&gt;&lt;span&gt;&lt;strong&gt;webpack 生成 sourcemap&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;webpack&lt;/code&gt;&lt;/strong&gt; 中只要通过设置 &lt;code&gt;devtool&lt;/code&gt; 的选项配置即可，值类型包括以下类型的 &lt;strong&gt;组合&lt;/strong&gt;：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;(none) 默认值&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;eval&lt;/strong&gt;&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;会生成被 &lt;code&gt;eval&lt;/code&gt; 函数包裹的模块内容，并在其中通过注释来注明是源文件位置，其中的 &lt;code&gt;sourceUrl&lt;/code&gt; 是用来来指定文件名&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;优点就是快，因为不用生成 &lt;code&gt;.map&lt;/code&gt; 文件，并且 运行时代码 映射到 开发时代码 只需要提供对应的 源文件地址&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;缺点就是包含映射信息少，并且 &lt;code&gt;eavl&lt;/code&gt; 函数因为安全性问题也是不建议使用的&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.675&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/p3q0CDzmjJMfYZpHCBEcniabRHssQZvdhqG9ydvq3dq7jvmBva8KHBUZVZV5VQYWHmNUgJRSInVoBnScPXOEE4Q/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;640&quot;/&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;strong&gt;source-map&lt;/strong&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.18415841584158416&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/p3q0CDzmjJMfYZpHCBEcniabRHssQZvdhogfUmJMGrmHoCDG7Ese740CxqtbYCnrf2p6EOvpPhwicrZCc10gdQLA/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;505&quot;/&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.22311827956989247&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/p3q0CDzmjJMfYZpHCBEcniabRHssQZvdhEG9OI4Uia8wahcVUPQ9xM33HVWyjh7ruicFicbg5ABA3XFibKxkjZ7LW6Q/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;372&quot;/&gt;&lt;/p&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;会生成单独的 &lt;code&gt;.map&lt;/code&gt; 文件包含 &lt;code&gt;version、file、sources、sourcesContent、names、mappings、sourceRoot&lt;/code&gt; 等信息，需要进行 mapping 和 编码 工作&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;优点就是拥有单独的 &lt;code&gt;.map&lt;/code&gt; 文件，使得 运行时代码 体积不会过大，并且能够提供详细的信息，包含文件名、行、列等信息&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;缺点就是慢，因为需要额外生成 &lt;code&gt;.map&lt;/code&gt; 文件，并且随着模块内容的增多整体速度就越慢&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;cheap&lt;/strong&gt;&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;和 &lt;code&gt;source-map&lt;/code&gt; 的方式不同，&lt;code&gt;cheap&lt;/code&gt; 只会映射到源码的 &lt;strong&gt;行信息&lt;/strong&gt;，即它 &lt;strong&gt;不会生成源码的 &lt;code&gt;列信息&lt;/code&gt;，也不包含 &lt;code&gt;loader&lt;/code&gt; 的 &lt;code&gt;sourcemap&lt;/code&gt;&lt;/strong&gt;，因此相对来说会比 &lt;code&gt;source-map&lt;/code&gt; 的方式更快&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;优点就是速度更快，只映射到源码的 &lt;strong&gt;行信息&lt;/strong&gt; 的原因是：通常在进行错误定位时，大多数情况下只需要关注到 &lt;strong&gt;行&lt;/strong&gt; 就可以知道错误原因，而很少会关注到 &lt;strong&gt;列&lt;/strong&gt;，因此列信息其实不是必要性的&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;缺点就是映射信息会不够精确，因为一个文件可能会经过不同 &lt;code&gt;loader&lt;/code&gt; 的处理，而它又不生成 &lt;code&gt;loader&lt;/code&gt; 相关的 &lt;code&gt;sourcemap&lt;/code&gt;，自然会导致最终产物的信息不够精确&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;module&lt;/strong&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;inline&lt;/strong&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.1140625&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/p3q0CDzmjJMfYZpHCBEcniabRHssQZvdhwL1BiaQzsnIMe32liaD91yqoTBUgw8RGRC7r0Bicc0D7yXr9eibAibVcCMQ/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;640&quot;/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;hidden&lt;/strong&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.24344569288389514&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/p3q0CDzmjJMfYZpHCBEcniabRHssQZvdhcyQPnliaYiahZRa5ccUNODcTNhkaeibGhNjaTCvjLKAsiabjicicI9UPibzgA/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;534&quot;/&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.2316831683168317&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/p3q0CDzmjJMfYZpHCBEcniabRHssQZvdhS7ZxMxKaJiav2UIFOJRvNdNjLvNgjsLibdG86AoaHvjf10b4yhQNgAHw/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;505&quot;/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;nosources&lt;/strong&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3609375&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/p3q0CDzmjJMfYZpHCBEcniabRHssQZvdhP8eTTC54gcjicXRtSQCzVyp6ib3HibrJNjrO3Kx2emml22qlbMDYRcDvg/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;640&quot;/&gt;&lt;/p&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;在 &lt;code&gt;source-map&lt;/code&gt; 生成的 &lt;code&gt;.map&lt;/code&gt; 文件中的 &lt;code&gt;sourceContent&lt;/code&gt; 存储的是源码内容，这样的好处是既可以根据文件路径来映射，也可以根据这部分内容来映射，换句话说 &lt;code&gt;source-map&lt;/code&gt; 提供了双重保险，但也增加了 &lt;code&gt;.map&lt;/code&gt; 文件体积&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;nosources&lt;/code&gt; 则是在能够保证文件路径可以准确建立映射的情况下，就可以把 &lt;code&gt;sourceContent&lt;/code&gt; 的内容给去除掉，使得 &lt;code&gt;.map&lt;/code&gt; 文件体积能够更小一些&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5765625&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/p3q0CDzmjJMfYZpHCBEcniabRHssQZvdhISZOoUhKN2IlDx16LmVY0omnicHnia4vUicW4nIIm3llNQVAFOF0hWkicw/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;640&quot;/&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;以上和 &lt;code&gt;webpack&lt;/code&gt; 相关的 &lt;code&gt;devtool&lt;/code&gt; 的配置内容，&lt;code&gt;eval&lt;/code&gt;、&lt;code&gt;source-map&lt;/code&gt; 都可以单独使用，也可以组合使用，但 &lt;code&gt;module、inline、hidden、nosources、cheap&lt;/code&gt; 的方式一定是包含 &lt;code&gt;source-map&lt;/code&gt; 的内容的，如果你记不住或写错了，&lt;code&gt;webpack&lt;/code&gt; 会给你相应的提示信息：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.075&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/p3q0CDzmjJMfYZpHCBEcniabRHssQZvdhs0TIo6jN0VgGV8FmP1EzB9Fkibtf9iaLY8aGH5X8Z8WxyLtBgIibPzBLQ/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;640&quot;/&gt;&lt;/p&gt;&lt;h2 data-id=&quot;heading-7&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;不同环境的 sourcemap 怎么选？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;这里的环境指的就是 &lt;strong&gt;开发环境&lt;/strong&gt; 和 &lt;strong&gt;生产环境&lt;/strong&gt;，由于不同的组合方式在 &lt;strong&gt;构建&lt;/strong&gt; 和 &lt;strong&gt;重构建&lt;/strong&gt; 时的速度不同，另外还需要考虑 &lt;code&gt;.map&lt;/code&gt; 文件在线上可能带来的风险问题，因此必须要 &lt;strong&gt;权衡&lt;/strong&gt; 使用 &lt;code&gt;sourcemap&lt;/code&gt; 的组合方式，好在 &lt;strong&gt;&lt;code&gt;webpack&lt;/code&gt;&lt;/strong&gt; 文档中给我们提供给了相应的组合方式，如下：&lt;/p&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;devtool&lt;/th&gt;&lt;th&gt;performance&lt;/th&gt;&lt;th&gt;production&lt;/th&gt;&lt;th&gt;quality&lt;/th&gt;&lt;th&gt;comment&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;(none)&lt;/td&gt;&lt;td&gt;&lt;strong&gt;build&lt;/strong&gt;: fastest  &lt;strong&gt;rebuild&lt;/strong&gt;: fastest&lt;/td&gt;&lt;td&gt;yes&lt;/td&gt;&lt;td&gt;bundle&lt;/td&gt;&lt;td&gt;Recommended choice for production builds with maximum performance.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;&lt;code&gt;eval&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;build&lt;/strong&gt;: fast  &lt;strong&gt;rebuild&lt;/strong&gt;: fastest&lt;/td&gt;&lt;td&gt;no&lt;/td&gt;&lt;td&gt;generated&lt;/td&gt;&lt;td&gt;Recommended choice for development builds with maximum performance.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;eval-cheap-source-map&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;build&lt;/strong&gt;: ok  &lt;strong&gt;rebuild&lt;/strong&gt;: fast&lt;/td&gt;&lt;td&gt;no&lt;/td&gt;&lt;td&gt;transformed&lt;/td&gt;&lt;td&gt;Tradeoff choice for development builds.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;eval-cheap-module-source-map&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;build&lt;/strong&gt;: slow  &lt;strong&gt;rebuild&lt;/strong&gt;: fast&lt;/td&gt;&lt;td&gt;no&lt;/td&gt;&lt;td&gt;original lines&lt;/td&gt;&lt;td&gt;Tradeoff choice for development builds.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;&lt;code&gt;eval-source-map&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;build&lt;/strong&gt;: slowest  &lt;strong&gt;rebuild&lt;/strong&gt;: ok&lt;/td&gt;&lt;td&gt;no&lt;/td&gt;&lt;td&gt;original&lt;/td&gt;&lt;td&gt;Recommended choice for development builds with high quality SourceMaps.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;cheap-source-map&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;build&lt;/strong&gt;: ok  &lt;strong&gt;rebuild&lt;/strong&gt;: slow&lt;/td&gt;&lt;td&gt;no&lt;/td&gt;&lt;td&gt;transformed&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;cheap-module-source-map&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;build&lt;/strong&gt;: slow  &lt;strong&gt;rebuild&lt;/strong&gt;: slow&lt;/td&gt;&lt;td&gt;no&lt;/td&gt;&lt;td&gt;original lines&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;&lt;code&gt;source-map&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;build&lt;/strong&gt;: slowest  &lt;strong&gt;rebuild&lt;/strong&gt;: slowest&lt;/td&gt;&lt;td&gt;yes&lt;/td&gt;&lt;td&gt;original&lt;/td&gt;&lt;td&gt;Recommended choice for production builds with high quality SourceMaps.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;inline-cheap-source-map&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;build&lt;/strong&gt;: ok  &lt;strong&gt;rebuild&lt;/strong&gt;: slow&lt;/td&gt;&lt;td&gt;no&lt;/td&gt;&lt;td&gt;transformed&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;inline-cheap-module-source-map&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;build&lt;/strong&gt;: slow  &lt;strong&gt;rebuild&lt;/strong&gt;: slow&lt;/td&gt;&lt;td&gt;no&lt;/td&gt;&lt;td&gt;original lines&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;inline-source-map&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;build&lt;/strong&gt;: slowest  &lt;strong&gt;rebuild&lt;/strong&gt;: slowest&lt;/td&gt;&lt;td&gt;no&lt;/td&gt;&lt;td&gt;original&lt;/td&gt;&lt;td&gt;Possible choice when publishing a single file&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;eval-nosources-cheap-source-map&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;build&lt;/strong&gt;: ok  &lt;strong&gt;rebuild&lt;/strong&gt;: fast&lt;/td&gt;&lt;td&gt;no&lt;/td&gt;&lt;td&gt;transformed&lt;/td&gt;&lt;td&gt;source code not included&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;eval-nosources-cheap-module-source-map&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;build&lt;/strong&gt;: slow  &lt;strong&gt;rebuild&lt;/strong&gt;: fast&lt;/td&gt;&lt;td&gt;no&lt;/td&gt;&lt;td&gt;original lines&lt;/td&gt;&lt;td&gt;source code not included&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;eval-nosources-source-map&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;build&lt;/strong&gt;: slowest  &lt;strong&gt;rebuild&lt;/strong&gt;: ok&lt;/td&gt;&lt;td&gt;no&lt;/td&gt;&lt;td&gt;original&lt;/td&gt;&lt;td&gt;source code not included&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;inline-nosources-cheap-source-map&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;build&lt;/strong&gt;: ok  &lt;strong&gt;rebuild&lt;/strong&gt;: slow&lt;/td&gt;&lt;td&gt;no&lt;/td&gt;&lt;td&gt;transformed&lt;/td&gt;&lt;td&gt;source code not included&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;inline-nosources-cheap-module-source-map&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;build&lt;/strong&gt;: slow  &lt;strong&gt;rebuild&lt;/strong&gt;: slow&lt;/td&gt;&lt;td&gt;no&lt;/td&gt;&lt;td&gt;original lines&lt;/td&gt;&lt;td&gt;source code not included&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;inline-nosources-source-map&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;build&lt;/strong&gt;: slowest  &lt;strong&gt;rebuild&lt;/strong&gt;: slowest&lt;/td&gt;&lt;td&gt;no&lt;/td&gt;&lt;td&gt;original&lt;/td&gt;&lt;td&gt;source code not included&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;nosources-cheap-source-map&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;build&lt;/strong&gt;: ok  &lt;strong&gt;rebuild&lt;/strong&gt;: slow&lt;/td&gt;&lt;td&gt;no&lt;/td&gt;&lt;td&gt;transformed&lt;/td&gt;&lt;td&gt;source code not included&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;nosources-cheap-module-source-map&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;build&lt;/strong&gt;: slow  &lt;strong&gt;rebuild&lt;/strong&gt;: slow&lt;/td&gt;&lt;td&gt;no&lt;/td&gt;&lt;td&gt;original lines&lt;/td&gt;&lt;td&gt;source code not included&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;nosources-source-map&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;build&lt;/strong&gt;: slowest  &lt;strong&gt;rebuild&lt;/strong&gt;: slowest&lt;/td&gt;&lt;td&gt;yes&lt;/td&gt;&lt;td&gt;original&lt;/td&gt;&lt;td&gt;source code not included&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;hidden-nosources-cheap-source-map&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;build&lt;/strong&gt;: ok  &lt;strong&gt;rebuild&lt;/strong&gt;: slow&lt;/td&gt;&lt;td&gt;no&lt;/td&gt;&lt;td&gt;transformed&lt;/td&gt;&lt;td&gt;no reference, source code not included&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;hidden-nosources-cheap-module-source-map&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;build&lt;/strong&gt;: slow  &lt;strong&gt;rebuild&lt;/strong&gt;: slow&lt;/td&gt;&lt;td&gt;no&lt;/td&gt;&lt;td&gt;original lines&lt;/td&gt;&lt;td&gt;no reference, source code not included&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;hidden-nosources-source-map&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;build&lt;/strong&gt;: slowest  &lt;strong&gt;rebuild&lt;/strong&gt;: slowest&lt;/td&gt;&lt;td&gt;yes&lt;/td&gt;&lt;td&gt;original&lt;/td&gt;&lt;td&gt;no reference, source code not included&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;hidden-cheap-source-map&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;build&lt;/strong&gt;: ok  &lt;strong&gt;rebuild&lt;/strong&gt;: slow&lt;/td&gt;&lt;td&gt;no&lt;/td&gt;&lt;td&gt;transformed&lt;/td&gt;&lt;td&gt;no reference&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;hidden-cheap-module-source-map&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;build&lt;/strong&gt;: slow  &lt;strong&gt;rebuild&lt;/strong&gt;: slow&lt;/td&gt;&lt;td&gt;no&lt;/td&gt;&lt;td&gt;original lines&lt;/td&gt;&lt;td&gt;no reference&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;hidden-source-map&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;build&lt;/strong&gt;: slowest  &lt;strong&gt;rebuild&lt;/strong&gt;: slowest&lt;/td&gt;&lt;td&gt;yes&lt;/td&gt;&lt;td&gt;original&lt;/td&gt;&lt;td&gt;no reference. Possible choice when using SourceMap only for error reporting purposes.&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h2 data-id=&quot;heading-8&quot;&gt;&lt;span&gt;&lt;strong&gt;sourcemap 如何生效？&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;要使得 &lt;code&gt;sourcemap&lt;/code&gt; 发挥作用，单单只是生成对应的映射规则还不够，还需要一个 &lt;strong&gt;解析工具&lt;/strong&gt; 负责将 &lt;strong&gt;&lt;code&gt;源代码&lt;/code&gt;&lt;/strong&gt; 和 &lt;strong&gt;&lt;code&gt;sourcemap&lt;/code&gt;&lt;/strong&gt; 规则真正进行映射，通常这个解析工具是 &lt;strong&gt;浏览器&lt;/strong&gt;、&lt;strong&gt;异常监控系统（如：sentry）&lt;/strong&gt; 和 &lt;strong&gt;手动映射&lt;/strong&gt;。&lt;/p&gt;&lt;h3 data-id=&quot;heading-9&quot;&gt;&lt;span&gt;&lt;strong&gt;浏览器&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;通常在现代浏览器中基本上会默认启用 &lt;code&gt;sourcemap&lt;/code&gt; 映射功能，即只要对应的 &lt;code&gt;bundle&lt;/code&gt; 文件中有 &lt;code&gt;sourceMappingURL&lt;/code&gt; 或 &lt;code&gt;sourceURL&lt;/code&gt; 等指向的注释内容即可，手动开启位置如下（大同小异）：&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Google 浏览器&lt;/strong&gt;：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5257009345794392&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/p3q0CDzmjJMfYZpHCBEcniabRHssQZvdhT6bUpwyc6dO7x2CgTMXk2yj1ia8cebFYPTTibA3bovJfjDOMEm5uH1RQ/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;428&quot;/&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8387096774193549&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/p3q0CDzmjJMfYZpHCBEcniabRHssQZvdhNGBEVfWauMmjSvZRCVVp5e4E8sBPINFKqGIHtuvH7hvzxtAgrr1ZibA/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;403&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Firefox 浏览器&lt;/strong&gt;：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.65&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/p3q0CDzmjJMfYZpHCBEcniabRHssQZvdhjGWfibq2eFhNhtVVeWJnsibzliagcLoibyHa975jaH7GS8tfJrYcHOYYDA/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;500&quot;/&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4947589098532495&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/p3q0CDzmjJMfYZpHCBEcniabRHssQZvdhz2ZFK4UaNrDcGaPVOHQkIKiadH9Pq2pDunzSiapY9ia4daxe660AIYVVw/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;477&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Edge 浏览器&lt;/strong&gt;：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6151202749140894&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/p3q0CDzmjJMfYZpHCBEcniabRHssQZvdh3V63Mc7dEwbsCbpiagDGSdq1qQQYfWtVhwD02WhlD7NrMeFiaic6JcUMQ/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;291&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7284768211920529&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/p3q0CDzmjJMfYZpHCBEcniabRHssQZvdh9NpaVM1eNXkoaFsUdDh689SWiaAjblYUsiaYj9Mia8ibiaI7INqty0X055A/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;453&quot;/&gt;&lt;/p&gt;&lt;h3 data-id=&quot;heading-10&quot;&gt;&lt;span&gt;&lt;strong&gt;异常监控系统&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;这里以 &lt;code&gt;sentry&lt;/code&gt; 为例 &lt;strong&gt;简单演示&lt;/strong&gt; 一下，大致包括：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;接入 sentry&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;异常捕获&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;添加 sourcemap&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;首先&lt;/strong&gt;，在 &lt;strong&gt;&lt;code&gt;Sentry&lt;/code&gt;&lt;/strong&gt; 监控平台上注册/登录拥有自己的账号，然后可以构建一个对应的项目（首次注册登录会有指引），项目创建好以后会生成一个 &lt;strong&gt;&lt;code&gt;dsn&lt;/code&gt;&lt;/strong&gt;，在接入 &lt;code&gt;sentry&lt;/code&gt; 时需要传入。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;其次&lt;/strong&gt;，按照引导页的提示在你的项目（以 &lt;code&gt;vue3&lt;/code&gt; 为例）中安装依赖。&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;nginx&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attribute&quot;&gt;npm&lt;/span&gt; install --save &lt;span class=&quot;code-snippet__variable&quot;&gt;@sentry&lt;/span&gt;/vue &lt;span class=&quot;code-snippet__variable&quot;&gt;@sentry&lt;/span&gt;/tracing&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;最后&lt;/strong&gt;，在你项目入口文件（&lt;code&gt;main.js&lt;/code&gt;）中初始化接入 &lt;strong&gt;&lt;code&gt;Sentry&lt;/code&gt;&lt;/strong&gt; 即可：&lt;/p&gt;&lt;pre&gt;&lt;code lang=&quot;js&quot;/&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;import&lt;/span&gt; { createApp } &lt;span class=&quot;code-snippet__keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;vue&quot;&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;import&lt;/span&gt; { createRouter } &lt;span class=&quot;code-snippet__keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;vue-router&quot;&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;import&lt;/span&gt; * &lt;span class=&quot;code-snippet__keyword&quot;&gt;as&lt;/span&gt; Sentry &lt;span class=&quot;code-snippet__keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;@sentry/vue&quot;&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;import&lt;/span&gt; { BrowserTracing } &lt;span class=&quot;code-snippet__keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;@sentry/tracing&quot;&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;const&lt;/span&gt; app = createApp({&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;const&lt;/span&gt; router = createRouter({&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;Sentry.init({&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  app,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__attr&quot;&gt;dsn&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;https://x@x.ingest.sentry.io/x&quot;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__attr&quot;&gt;integrations&lt;/span&gt;: [&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;new&lt;/span&gt; BrowserTracing({&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__attr&quot;&gt;routingInstrumentation&lt;/span&gt;: Sentry.vueRouterInstrumentation(router),&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__attr&quot;&gt;tracePropagationTargets&lt;/span&gt;: [&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;localhost&quot;&lt;/span&gt;, ...],&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }),&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  ],&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  tracesSampleRate: &lt;span class=&quot;code-snippet__number&quot;&gt;1.0&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;app.use(router);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;app.mount(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;#app&quot;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;code lang=&quot;js&quot;&gt;&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;经过以上处理，默认情况下 &lt;code&gt;Sentry&lt;/code&gt; 已经可以自动获取到错误信息了，如：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4061855670103093&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/p3q0CDzmjJMfYZpHCBEcniabRHssQZvdhTnuruxxpfvhCiaGV98H3p8NibvibTVs0NbT1Q9QAZUqcRBfzcaXopWbYQ/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;485&quot;/&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.340625&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/p3q0CDzmjJMfYZpHCBEcniabRHssQZvdhkibEHjKjnygMGvmLnpxRicb0J8Vum3esuO3qdUNFgnhm6ibU3t94KibaNQ/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;640&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.59375&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/p3q0CDzmjJMfYZpHCBEcniabRHssQZvdhBYibOgScN68UrjrYXibdtiaoyOfSh9Pq4ITqsyzraoAIlqqImliaRPANGQ/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;640&quot;/&gt;&lt;/p&gt;&lt;p&gt;显然，没有接入 &lt;code&gt;sourcemap&lt;/code&gt; 的错误信息在 &lt;code&gt;sentry&lt;/code&gt; 中也无法进行快速定位，因此下一步就是需要给 &lt;code&gt;sentry&lt;/code&gt; 上传 &lt;code&gt;sourcemap&lt;/code&gt; 相关的文件。&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;sentry 上传 sourcemap 流程（&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;code&gt;sentry 文档&lt;/code&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt; ）&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;const&lt;/span&gt; { defineConfig } = &lt;span class=&quot;code-snippet__built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;@vue/cli-service&#x27;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;const&lt;/span&gt; SentryWebpackPlugin = &lt;span class=&quot;code-snippet__built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;@sentry/webpack-plugin&#x27;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__built_in&quot;&gt;module&lt;/span&gt;.exports = defineConfig({&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    configureWebpack(config) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; (process.env.NODE_ENV === &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;production&#x27;&lt;/span&gt;) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        config.devtool = &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;hidden-source-map&#x27;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        config.plugins.push(&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          &lt;span class=&quot;code-snippet__keyword&quot;&gt;new&lt;/span&gt; SentryWebpackPlugin({&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__attr&quot;&gt;include&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;./dist&#x27;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__attr&quot;&gt;ignoreFile&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;.gitignore&#x27;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__attr&quot;&gt;ignore&lt;/span&gt;: [&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;node_modules&#x27;&lt;/span&gt;, &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;webpack.config.js&#x27;&lt;/span&gt;],&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__attr&quot;&gt;configFile&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;./.sentryclirc&#x27;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__attr&quot;&gt;release&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;0.0.1&#x27;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__attr&quot;&gt;urlPrefix&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;~/js/&#x27;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          }),&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        )&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    },&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  })&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;code lang=&quot;js&quot;&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code lang=&quot;js&quot;/&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;ini&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;[auth]&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;token&lt;/span&gt; = 在 sentry 平台生成&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;[defaults]&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;url&lt;/span&gt; = https://sentry.io/ // 如果是自己部署的就填部署地址，如果不是就不改&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;org&lt;/span&gt; = sentry 平台的 org&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;project&lt;/span&gt; = sentry 平台的 project&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;如果设置 &lt;code&gt;release&lt;/code&gt; 字段，那么要保证 &lt;code&gt;main.js&lt;/code&gt; 中的 &lt;code&gt;Sentry.init({...})&lt;/code&gt; 和  &lt;code&gt;SentryWebpackPlugin&lt;/code&gt; 中的要保持一致性，或者都不设置&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;构建产物 &lt;code&gt;npm run build&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;进入 &lt;code&gt;dist&lt;/code&gt; 目录通过 &lt;code&gt;http-server&lt;/code&gt;  启动本地服务模拟生产环境产生错误&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;进入 &lt;code&gt;sentry&lt;/code&gt; 中查看异常信息，上传 &lt;code&gt;sourcemap&lt;/code&gt; 文件后&lt;/strong&gt;，错误信息如下：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6703125&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/p3q0CDzmjJMfYZpHCBEcniabRHssQZvdhAu54HDKeIGb3Nt2BqqCKn02MvtNw7Gl1sfAxIE6FNbgveibicBhHib1gw/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;640&quot;/&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-id=&quot;heading-11&quot;&gt;&lt;span&gt;&lt;strong&gt;手动映射&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;通常情况下为了安全性，不推荐使用 &lt;strong&gt;浏览器&lt;/strong&gt; 映射的方式，虽然这种方式对你来说很简便，但也为别有用心的人提供了便捷，因此，通常都会有接入对应的 &lt;strong&gt;监控平台&lt;/strong&gt;，当然除此之外还可以通过 &lt;strong&gt;手动映射&lt;/strong&gt; 的方式进行定位：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;安装 &lt;code&gt;source map&lt;/code&gt; 库：&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;npm &lt;span class=&quot;code-snippet__keyword&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;source&lt;/span&gt;-&lt;span class=&quot;code-snippet__keyword&quot;&gt;map&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;新建 &lt;code&gt;sourcemap.js&lt;/code&gt;&lt;/p&gt;&lt;pre&gt;&lt;code lang=&quot;js&quot;/&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;typescript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   &lt;span class=&quot;code-snippet__keyword&quot;&gt;const&lt;/span&gt; { SourceMapConsumer } = &lt;span class=&quot;code-snippet__built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;source-map&#x27;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   &lt;span class=&quot;code-snippet__keyword&quot;&gt;const&lt;/span&gt; fs = &lt;span class=&quot;code-snippet__built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;fs&#x27;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   &lt;span class=&quot;code-snippet__keyword&quot;&gt;const&lt;/span&gt; rawSourceMap = fs.readFileSync(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;./dist/js/app.dde017e5.js.map&#x27;&lt;/span&gt;, &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;utf-8&#x27;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   originalPositionFor(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;app.dde017e5.js:1:11871&#x27;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;originalPositionFor&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;&gt;errInfo&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     &lt;span class=&quot;code-snippet__keyword&quot;&gt;const&lt;/span&gt; [budleName, line, column] = errInfo.split(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;:&#x27;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     SourceMapConsumer.with(rawSourceMap, &lt;span class=&quot;code-snippet__literal&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;code-snippet__function&quot;&gt;(&lt;span class=&quot;code-snippet__params&quot;&gt;consumer&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;       &lt;span class=&quot;code-snippet__keyword&quot;&gt;const&lt;/span&gt; originalPosition = consumer.originalPositionFor({&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;         line: &lt;span class=&quot;code-snippet__built_in&quot;&gt;parseInt&lt;/span&gt;(line),&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;         column: &lt;span class=&quot;code-snippet__built_in&quot;&gt;parseInt&lt;/span&gt;(column),&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;       })&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;       &lt;span class=&quot;code-snippet__built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;bundle name = &#x27;&lt;/span&gt;, budleName)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;       &lt;span class=&quot;code-snippet__built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;original position = &#x27;&lt;/span&gt;, originalPosition)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     })&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;演示如下：&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6190476190476191&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/p3q0CDzmjJMfYZpHCBEcniabRHssQZvdhpC59ZWic2hcScVugriapRrOeslWJicpowrsju8sOYlyD6HxYYc9PkEScA/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;609&quot;/&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.815625&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/p3q0CDzmjJMfYZpHCBEcniabRHssQZvdhSQ6Kic6lpxMrialRfnVAfxyRwyS38sicHEpHEYOFOgc9hAaFuFCvqOyQw/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;640&quot;/&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.0515625&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/p3q0CDzmjJMfYZpHCBEcniabRHssQZvdhearyHEokbP0b0GHBsxjB6bwECyKekicFDYPX3ia88xGmthiaFBKNj9KnA/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;640&quot;/&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h1 data-id=&quot;heading-12&quot;&gt;&lt;span&gt;&lt;strong&gt;sourcemap 的映射原理&lt;/strong&gt;&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;在 &lt;code&gt;.map&lt;/code&gt; 文件中有 &lt;code&gt;mappings&lt;/code&gt; 字段，其内容很难让人不注意，毕竟和其他内容相比看起来太与众不同了：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.2375&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/p3q0CDzmjJMfYZpHCBEcniabRHssQZvdhm0ZJj0qiccEKVxzibSdtt4yUSqH77uqpkcicrOtq8DAMO0nIOW6Xcm6tg/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;640&quot;/&gt;&lt;/p&gt;&lt;p&gt;实际上，&lt;code&gt;mappings&lt;/code&gt; 以 &lt;strong&gt;Base64 VLQ&lt;/strong&gt; 编码形式存储了映射到源代码 &lt;strong&gt;行、列&lt;/strong&gt; 等相关信息。&lt;/p&gt;&lt;h2 data-id=&quot;heading-13&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;为什么使用 Base64 VLQ 编码？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;源代码通常都是很庞大的，单纯使用 &lt;strong&gt;数字&lt;/strong&gt; 表示 &lt;strong&gt;行信息&lt;/strong&gt; 和 &lt;strong&gt;列信息&lt;/strong&gt; 会使得整个 &lt;code&gt;.map&lt;/code&gt; 文件体积变大，而 &lt;strong&gt;Base64 VLQ&lt;/strong&gt; 是一种 &lt;strong&gt;压缩数字&lt;/strong&gt; 内容的编码方式，因此可以用来减少文件体积。&lt;/p&gt;&lt;p&gt;由于 &lt;strong&gt;Base64&lt;/strong&gt; 所能表示的数字存在 &lt;strong&gt;上限&lt;/strong&gt;，如果需要表示超过上限的数字该怎么办，实际上只有 &lt;strong&gt;每个分号中的第一串英文&lt;/strong&gt; 是用来表示代码的 &lt;strong&gt;第几行、第几列&lt;/strong&gt; 的绝对位置外，后面的都是相对于之前的位置来做 &lt;strong&gt;加减法&lt;/strong&gt; 的。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;可以通过 &lt;strong&gt;BASE64 VLQ CODEC&lt;/strong&gt; 这个网站了解具体的映射关系.&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 data-id=&quot;heading-14&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;mappings 的组成&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;mappings&lt;/code&gt; &lt;/strong&gt;的内容主要由三部分组成：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;英文串&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;逗号 &lt;code&gt;,&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;用于分隔一行代码中的内容或位置，例如&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;var a = 1;console.log(a);&quot;&lt;/span&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;         相当于 &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;var, a, =, 1, console, log&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;分号 &lt;code&gt;;&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-id=&quot;heading-15&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;简单解析 mappings&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;下面以 &lt;code&gt;console.log(1);&lt;/code&gt; 为例子简单介绍下对应关系，毕竟源码内容复杂的不好分析：&lt;/p&gt;&lt;pre&gt;&lt;code lang=&quot;js&quot;/&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;version&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__number&quot;&gt;3&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;file&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;main.js&quot;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;mappings&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;AAAAA,QAAQC,IAAI&quot;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;sources&quot;&lt;/span&gt;: [&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;webpack://vue3-wp5/./src/main.js&quot;&lt;/span&gt;],&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;sourcesContent&quot;&lt;/span&gt;: [&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;console.log(1);\n&quot;&lt;/span&gt;],&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;names&quot;&lt;/span&gt;: [&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;console&quot;&lt;/span&gt;, &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;log&quot;&lt;/span&gt;],&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;sourceRoot&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;code lang=&quot;js&quot;&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;还是先关注 &lt;code&gt;mappings&lt;/code&gt; 字段，其内容由于是编码后的内容，为了更直观的看到其代表的具体数字内容，我们可以通过 &lt;strong&gt;BASE64 VLQ CODEC&lt;/strong&gt; 网站来得到结果：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.715625&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/p3q0CDzmjJMfYZpHCBEcniabRHssQZvdhPEReFEvxCdeUc1h1ll7hWxeawbJhdjpzg7iaCmHwwPpRa11LkSrtdgA/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;640&quot;/&gt;&lt;/p&gt;&lt;p&gt;现在，我们知道了 &lt;code&gt;&quot;AAAAA,QAAQC,IAAI&quot;&lt;/code&gt; 对应 &lt;code&gt;[0,0,0,0,0], [8,0,0,8,1], [4,0,0,4]&lt;/code&gt;，结合上述其内容就表示：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;[0,0,0,0,0]&lt;/code&gt; 对应 &lt;code&gt;console&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;[8,0,0,8,1]&lt;/code&gt; 对应 &lt;code&gt;log&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;8 ：&lt;strong&gt;编译代码 第 &lt;code&gt;8&lt;/code&gt; 列&lt;/strong&gt;，其实是 第 &lt;code&gt;8+0=8&lt;/code&gt; 列&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;0 ：&lt;strong&gt;对应 &lt;code&gt;sources[0]&lt;/code&gt;&lt;/strong&gt;，即 &lt;code&gt;main.js&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;0 ：&lt;strong&gt;源代码 第 &lt;code&gt;0&lt;/code&gt; 行&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;8 ：&lt;strong&gt;源代码 第 &lt;code&gt;8&lt;/code&gt; 列&lt;/strong&gt;，其实是 第 &lt;code&gt;8+0=8&lt;/code&gt; 列&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;1 ：&lt;strong&gt;对应 &lt;code&gt;names[1]&lt;/code&gt;&lt;/strong&gt;，即 &lt;code&gt;log&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;[4,0,0,4]&lt;/code&gt; 对应 &lt;code&gt;1&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;4 ：&lt;strong&gt;编译代码 第 &lt;code&gt;4&lt;/code&gt; 列&lt;/strong&gt;，其实是 第 &lt;code&gt;8+4=12&lt;/code&gt; 列&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;0 ：&lt;strong&gt;对应 &lt;code&gt;sources[0]&lt;/code&gt;&lt;/strong&gt;，即 &lt;code&gt;main.js&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;0 ：&lt;strong&gt;源代码 第 &lt;code&gt;0&lt;/code&gt; 行&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;4 ：&lt;strong&gt;源代码 第 &lt;code&gt;4&lt;/code&gt; 列&lt;/strong&gt;，其实是 &lt;code&gt;8+4=12&lt;/code&gt; 列&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;不是变量，因此没有和 &lt;code&gt;names&lt;/code&gt; 相关信息&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;p&gt;是不是有些奇怪，明明 &lt;code&gt;1&lt;/code&gt; 的位置比 &lt;code&gt;log&lt;/code&gt; 的位置更靠后，为什么编码显示的列数却更小，别忘了下面这个规则:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;实际上只有 &lt;strong&gt;每个分号中的第一串英文&lt;/strong&gt; 是用来表示代码的 &lt;strong&gt;第几行、第几列&lt;/strong&gt; 的绝对位置外，后面的都是相对于之前的位置来做 &lt;strong&gt;加减法&lt;/strong&gt; 的&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;即实际显示的列号数应为：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.38125&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/p3q0CDzmjJMfYZpHCBEcniabRHssQZvdhnicszCSS2UpD9j6DEP7pYIsSFs2xXAgQZUu43UcQaK3icD3iaZ4iclTib9w/640?wx_fmt=jpeg&quot; data-type=&quot;other&quot; data-w=&quot;640&quot;/&gt;&lt;/p&gt;&lt;h1 data-id=&quot;heading-16&quot;&gt;&lt;span&gt;&lt;strong&gt;最后&lt;/strong&gt;&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;以上就是对 &lt;code&gt;sourcemap&lt;/code&gt; 相关内容的介绍，&lt;span&gt;&lt;strong&gt;希望本文对你有所帮助&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;！！！&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;说个题外话，有人好奇我哪有那么内容要写，其实大多文章内容只是将自己需要解决或者同事遇到的问题进行总结和扩展而已，所以大多数文章的想法就来源于此，其次我认为写文章的原则就是：&lt;span&gt;&lt;strong&gt;写出来的文章首先要保证自己有收获&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;!&lt;/strong&gt; 另外，更多的是看看大家对同一个问题都会有什么更好的方案！&lt;/p&gt;&lt;section class=&quot;mp_common_sticker_iframe_wrp&quot;&gt;&lt;mp-common-sticker class=&quot;js_uneditable custom_select_card mp_common_sticker_iframe&quot; data-pluginname=&quot;emotion&quot; data-id=&quot;348ec366393cc9a6c6fdd6bfe578222f&quot; data-type=&quot;0&quot; data-emoji_url=&quot;https://mmbiz.qpic.cn/mmbiz_gif/H9H3Oy4r3n5ibDrUwzgeFK0y67U5RuPIj9MTQD2x1mNIYJ8Sct3mBLVO5LcVr6pztAmicxXRKhj5OUahhQkIAQpw/0&quot; data-md5=&quot;348ec366393cc9a6c6fdd6bfe578222f&quot; data-inserted=&quot;0&quot; data-weui-theme=&quot;light&quot; data-is_ban=&quot;0&quot; data-loading=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;pre data-style=&quot;margin-bottom: 1rem; outline: 0px; color: rgb(0, 0, 0); font-size: 16px; letter-spacing: 0.544px; font-family: SFMono-Regular, Menlo, Monaco, Consolas, &amp;quot;Liberation Mono&amp;quot;, &amp;quot;Courier New&amp;quot;, monospace; overflow: auto; background-color: rgb(255, 255, 255); text-align: center;&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section&gt;&lt;mp-common-profile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-weui-theme=&quot;light&quot; data-id=&quot;MzUxNzk1MjQ0Ng==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/YBFV3Da0Nwvv72YkFO0qPibDKicOCsfltiaE9070DOu4iahXnicYwRIHcxe9VBicAy45MkPqy8nZzLTVibugOtV0ORFcg/0?wx_fmt=png&quot; data-nickname=&quot;程序员成长指北&quot; data-alias=&quot;coder_growth&quot; data-signature=&quot;专注 Node.js 技术栈分享，从 前端 到 Node.js 再到 后端数据库，祝您成为优秀的高级 Node.js 全栈工程师。一个有趣的且乐于分享的人。座右铭：今天未完成的，明天更不会完成。&quot; data-from=&quot;0&quot; data-is_biz_ban=&quot;0&quot;/&gt;&lt;/section&gt;&lt;section label=&quot;Copyright © 2016 playhudong All Rights Reserved.&quot; donone=&quot;shifuMouseDownPayStyle(&#x27;shifu_t_042&#x27;)&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;span&gt;Node 社群&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;89226&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot; data-style=&quot;margin-left: 10px; outline: 0px; display: inline-block; border-top: 4px solid rgb(68, 68, 68); width: 50px;&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p data-style=&quot;outline: 0px; color: rgb(34, 34, 34); letter-spacing: 0.544px; white-space: normal; font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;&quot;&gt;&lt;span data-style=&quot;outline: 0px; color: rgb(63, 63, 63); font-variant-ligatures: common-ligatures; letter-spacing: 0.544px; text-align: left; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; word-spacing: 0.8px; caret-color: rgb(51, 51, 51);&quot;&gt;我组建了一个氛围特别好的 Node.js 社群，里面有很多 Node.js小伙伴，如果你对Node.js学习感兴趣的话（后续有计划也可以），我们可以一起进行Node.js相关的交流、学习、共建。&lt;/span&gt;&lt;span data-style=&quot;outline: 0px; color: rgb(63, 63, 63); font-variant-ligatures: common-ligatures; letter-spacing: 0.544px; text-align: left; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; word-spacing: 0.8px; caret-color: rgb(51, 51, 51);&quot;&gt;下方加 考拉 好友回复「Node」即可。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-croporisrc=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/YBFV3Da0NwsF7OKB4iaaXAzQPbNstk2LybA0Zz5I1hiaiazE9W7WH2Ojt2dibDODWMVUmHqgfXCefVwt7z5ibNMWLvg/0?wx_fmt=jpeg&quot; data-cropx1=&quot;0&quot; data-cropx2=&quot;578.2649006622516&quot; data-cropy1=&quot;0&quot; data-cropy2=&quot;700.2119205298013&quot; data-fileid=&quot;100016913&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1.2093425605536332&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/YBFV3Da0NwvFQgO67XibvUG5S2UMXwCghOuJvE8BFRzUXnCAfWXkU1qHld6Ly9xiarib3siaWicJWJ0U3lI8kSgD38w/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;jpeg&quot; data-w=&quot;578&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;  &lt;/span&gt;&lt;span&gt;&lt;span&gt; “分享、点赞&lt;/span&gt;&lt;span&gt;、&lt;/span&gt;&lt;span&gt;在看” 支持一波👍&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;mp-style-type data-value=&quot;3&quot;/&gt;&lt;/p&gt;&lt;/div&gt;

          
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>1c95388f215c24f6d18a76111139c803</guid>
<title>OpenAI：我们将 Kubernetes 扩展到了 7500 个节点</title>
<link>https://toutiao.io/k/kvu7q2f</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;RichText ztext Post-RichText css-1g0fqss&quot; options=&quot;[object Object]&quot;&gt;&lt;p data-first-child=&quot;&quot; data-pid=&quot;C9YaU84V&quot;&gt;作者 | &lt;span class=&quot;nolink&quot;&gt;OpenAI&lt;/span&gt;&lt;/p&gt;&lt;p data-pid=&quot;gBTEdpLF&quot;&gt;译者 | &lt;span class=&quot;nolink&quot;&gt;Sambodhi&lt;/span&gt;&lt;/p&gt;&lt;p data-pid=&quot;naAQ4COt&quot;&gt;策划 | &lt;span class=&quot;nolink&quot;&gt;褚杏娟&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;blockquote data-pid=&quot;c_-bYK82&quot;&gt;在本文中，OpenAI 的工程师团队分享了他们在 Kubernetes 集群扩展过程中遇到的各种挑战和解决方案，以及他们取得的性能和效果。&lt;/blockquote&gt;&lt;p data-pid=&quot;cZsDBQhq&quot;&gt;&lt;br/&gt;我们已经将 Kubernetes 集群扩展到 7500 个节点，为大型模型（如 &lt;a href=&quot;https://link.zhihu.com/?target=https%3A//arxiv.org/abs/2005.14165&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;GPT-3&lt;/a&gt;、 &lt;a href=&quot;https://link.zhihu.com/?target=https%3A//openai.com/blog/clip/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;CLIP&lt;/a&gt; 和 &lt;a href=&quot;https://link.zhihu.com/?target=https%3A//openai.com/blog/dall-e/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;DALL·E&lt;/a&gt;）创建了可扩展的基础设施，同时也为快速小规模迭代研究（如&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//arxiv.org/abs/2001.08361&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;神经语言模型的缩放定律&lt;/a&gt;）创建了可扩展的基础设施。&lt;br/&gt; &lt;br/&gt;将单个 Kubernetes 集群扩展到这种规模很少见，但好处是能够提供一个简单的基础架构，使我们的机器学习研究团队能够更快地推进并扩展，而无需更改代码。&lt;br/&gt; &lt;br/&gt;自上次发布关于&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//openai.com/blog/scaling-kubernetes-to-2500-nodes/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;扩展到 2500 个节点&lt;/a&gt;的帖子以来，我们继续扩大基础设施以满足研究人员的需求，在此过程中学到了许多的经验教训。本文总结了这些经验教训，以便 Kubernetes 社区里的其他人也能从中受益，并最后会介绍下我们仍然面临的问题，我们也将继续解决这些问题。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-5f165104b21941c6363c2353788c123f_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;722&quot; data-rawheight=&quot;404&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic4.zhimg.com/v2-5f165104b21941c6363c2353788c123f_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;722&quot; data-rawheight=&quot;404&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic4.zhimg.com/v2-5f165104b21941c6363c2353788c123f_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-5f165104b21941c6363c2353788c123f_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p data-pid=&quot;seuXgwHm&quot;&gt;&lt;br/&gt;&lt;br/&gt;我们的工作负载&lt;br/&gt; &lt;br/&gt;在深入探讨之前，我们着重描述一下我们的工作负载。我们在 Kubernetes 上运行的应用程序和硬件与大家在普通公司遇到的可能相当不同。因此，我们的问题及解决方案可能与你自己的设置匹配，也可能不匹配！&lt;br/&gt; &lt;br/&gt;一个大型的机器学习作业跨越许多节点，当它可以访问每个节点上的所有硬件资源时，运行效率最高。这允许 GPU 直接使用 &lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.nvidia.com/en-us/data-center/nvlink/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;NVLink&lt;/a&gt; 进行交叉通信，或者 GPU 使用 &lt;a href=&quot;https://link.zhihu.com/?target=https%3A//developer.nvidia.com/gpudirect&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;GPUDirect&lt;/a&gt; 直接与 NIC 进行通信。因此，对于我们的许多工作负载，单个 Pod 占用整个节点。任何 NUMA、CPU 或 PCIE 资源争用都不是调度的因素。装箱或碎片化不是常见的问题。我们目前的集群具有完全的二分带宽，因此我们也不考虑机架或网络拓扑。所有这些都意味着，虽然我们有许多节点，但调度程序的负载相对较低。&lt;br/&gt; &lt;br/&gt;话虽如此，kube-scheduler 的负载是有波动的。一个新的作业可能由许多数百个 Pod 同时创建组成，然后返回到相对较低的流失率。&lt;br/&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-eeff28affecbc71050b46fc129a1ed60_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;732&quot; data-rawheight=&quot;298&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic1.zhimg.com/v2-eeff28affecbc71050b46fc129a1ed60_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;732&quot; data-rawheight=&quot;298&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic1.zhimg.com/v2-eeff28affecbc71050b46fc129a1ed60_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-eeff28affecbc71050b46fc129a1ed60_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p data-pid=&quot;3xAxeeEz&quot;&gt;&lt;br/&gt;&lt;br/&gt; 我们最大的作业运行 MPI，作业中的所有 Pod 都参与一个单一的 MPI 通信器。如果任何一个参与的 Pod 挂掉，整个作业就会停止，需要重新启动。作业会定期进行检查点，当重新启动时，它会从上一个检查点恢复。因此，我们认为 Pod 是半有状态的——被删掉的 Pod 可以被替换并且工作可以继续，但这样做会造成干扰，应该尽量减少发生。&lt;br/&gt; &lt;br/&gt;我们并不太依赖 Kubernetes 的负载均衡。我们的 HTTPS 流量非常少，不需要进行 A/B 测试、蓝/绿或金丝雀部署。Pod 使用 SSH 直接通过 Pod IP 地址与 MPI 进行通信，而不是通过服务端点。服务“发现”是有限的；我们只在作业启动时进行一次查找，查找哪些 Pod 参与 MPI。&lt;br/&gt; &lt;br/&gt;大多数作业与某种形式的 Blob 存储进行交互。它们通常会直接从 Blob 存储流式传输一些数据集的分片或检查点，或将其缓存到快速的本地临时磁盘中。我们有一些 PersistentVolumes，用于那些需要 POSIX 语义的情况，但 Blob 存储更具可扩展性，而且不需要缓慢的分离/附加操作。&lt;br/&gt; &lt;br/&gt;最后，我们的工作性质本质上是研究，这意味着工作负载本身是不断变化的。虽然超级计算团队努力提供我们认为达到“生产”质量水平的计算基础架构，但在该集群上运行的应用程序寿命很短，它们的开发人员会快速迭代。因此，随时可能出现新的使用模式，这些模式会挑战我们对趋势和适当权衡的设定。我们需要一个可持续的系统，同时也能让我们在事情发生变化时快速做出响应。&lt;/p&gt;&lt;p data-pid=&quot;pZqQSMFh&quot;&gt;网络&lt;br/&gt; &lt;br/&gt;随着集群内节点和 Pod 数量的增加，我们发现 Flannel 难以满足所需的吞吐量。因此，我们转而使用 Azure VMSS 的本地 Pod 网络技术和相关 CNI 插件来配置 IP。这使我们的 Pod 能够获得主机级别的网络吞吐量。&lt;br/&gt; &lt;br/&gt;我们转而使用别名 IP 地址的另一个原因是，在我们最大的集群中，可能会同时使用约 20 万个 IP 地址。在测试了基于路由的 Pod 网络后，我们发现能够使用的路由数明显存在限制。&lt;br/&gt; &lt;br/&gt;避免封装会增加底层 SDN 或路由引擎的需求，虽然这使我们的网络设置变得简单。添加 VPN 或隧道可以在不需要任何其他适配器的情况下完成。我们不需要担心由于某部分网络具有较低的 MTU 而导致的分组分段。网络策略和流量监控很简单；没有关于数据包源和目的地的歧义。&lt;br/&gt; &lt;br/&gt;我们使用主机上的 iptables 标记来跟踪每个 Namespace 和 Pod 的网络资源使用情况，这使研究人员可以可视化他们的网络使用模式。特别是，由于我们的许多实验具有不同的 Internet 和 Pod 内通信模式，因此能够调查任何瓶颈发生的位置通常是非常有意义的。&lt;br/&gt; &lt;br/&gt;可以使用 iptables &lt;code&gt;mangle&lt;/code&gt; 规则任意标记符合特定条件的数据包。以下是我们用来检测流量是内部流量还是 Internet 流量的规则。&lt;code&gt;FORWARD&lt;/code&gt; 规则涵盖了来自 Pod 的流量，而 &lt;code&gt;INPUT&lt;/code&gt; 和 &lt;code&gt;OUTPUT&lt;/code&gt; 规则涵盖了主机上的流量：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;iptables -t mangle -A INPUT ! -s 10.0.0.0/8 -m comment --comment &quot;iptables-exporter openai traffic=internet-in&quot;
iptables -t mangle -A FORWARD ! -s 10.0.0.0/8 -m comment --comment &quot;iptables-exporter openai traffic=internet-in&quot;
iptables -t mangle -A OUTPUT ! -d 10.0.0.0/8 -m comment --comment &quot;iptables-exporter openai traffic=internet-out&quot;
iptables -t mangle -A FORWARD ! -d 10.0.0.0/8 -m comment --comment &quot;iptables-exporter openai traffic=internet-out&quot;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p data-pid=&quot;r32SJRnB&quot;&gt;一旦标记，iptables 将开始计数以跟踪匹配该规则的字节数和数据包数。你可以使用 &lt;code&gt;iptables&lt;/code&gt; 本身来查看这些计数器：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;% iptables -t mangle -L -v
Chain FORWARD (policy ACCEPT 50M packets, 334G bytes)
 pkts bytes target     prot opt in     out     source               destination
....
1253K  555M            all  --  any    any     anywhere            !10.0.0.0/8           /* iptables-exporter openai traffic=internet-out */
1161K 7937M            all  --  any    any    !10.0.0.0/8           anywhere             /* iptables-exporter openai traffic=internet-in */&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;p data-pid=&quot;vGZwIRsy&quot;&gt;我们使用名为 iptables-exporter 的开源 Prometheus 导出器将这些数据追踪到我们的监控系统中。这是一种简单的方法，可以跟踪与各种不同类型的条件匹配的数据包。&lt;br/&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-23ea1645493c90453d7870f642cc41b5_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;706&quot; data-rawheight=&quot;314&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic2.zhimg.com/v2-23ea1645493c90453d7870f642cc41b5_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;706&quot; data-rawheight=&quot;314&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic2.zhimg.com/v2-23ea1645493c90453d7870f642cc41b5_r.jpg&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-23ea1645493c90453d7870f642cc41b5_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-0a3e3d30848498443874f0163dd27413_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;701&quot; data-rawheight=&quot;270&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic4.zhimg.com/v2-0a3e3d30848498443874f0163dd27413_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;701&quot; data-rawheight=&quot;270&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic4.zhimg.com/v2-0a3e3d30848498443874f0163dd27413_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-0a3e3d30848498443874f0163dd27413_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p data-pid=&quot;U-J40SP5&quot;&gt;&lt;br/&gt;&lt;br/&gt;我们网络模型中比较独特的一点是，我们完全向研究人员公开节点、Pod 和 Service 网络 CIDR 范围。我们采用集线器和分支的网络模型，并使用本机节点和 Pod CIDR 范围路由该流量。研究人员连接到中心枢纽，然后可以访问任何一个单独的集群（分支）。但是这些集群本身无法相互通信。这确保了集群保持隔离、没有跨集群依赖，可以防止故障隔离中的故障传播。&lt;br/&gt; &lt;br/&gt;我们使用一个“NAT”主机来翻译从集群外部传入的服务网络 CIDR 范围的流量。这种设置为我们的研究人员提供了很大的灵活性，他们可以选择各种不同类型的网络配置进行实验。&lt;/p&gt;&lt;p data-pid=&quot;5p2UlIBY&quot;&gt;&lt;br/&gt;API 服务器&lt;br/&gt; &lt;br/&gt;Kubernetes 的 API Server 和 etcd 是保持集群健康运行的关键组件，因此我们特别关注这些系统的压力。我们使用 &lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/coreos/kube-prometheus&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;kube-prometheus&lt;/a&gt; 提供的 Grafana 仪表板以及额外的内部仪表板。我们发现，将 HTTP 状态码 429（请求太多）和 5xx（服务器错误）的速率作为高级信号警报是有用的。&lt;br/&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-9a6566fca20a8bde5b56005ed394c4ce_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;708&quot; data-rawheight=&quot;267&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic3.zhimg.com/v2-9a6566fca20a8bde5b56005ed394c4ce_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;708&quot; data-rawheight=&quot;267&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic3.zhimg.com/v2-9a6566fca20a8bde5b56005ed394c4ce_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-9a6566fca20a8bde5b56005ed394c4ce_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p data-pid=&quot;8ROa4h67&quot;&gt;&lt;br/&gt;&lt;br/&gt; 虽然有些人在 kube 内部运行 API 服务器，但我们一直在集群外运行它们。etcd 和 API 服务器都在它们自己的专用节点上运行。我们的最大集群运行 5 个 API 服务器和 5 个 etcd 节点，以分散负载并尽可能减少发生故障后带来的影响。自从我们在&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//openai.com/blog/scaling-kubernetes-to-2500-nodes/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;上一篇博文&lt;/a&gt;中提到的将 Kubernetes 事件拆分到它们自己的 etcd 集群中以来，我们没有遇到 etcd 的任何值得注意的问题。API 服务器是无状态的，通常很容易在自我修复的实例组或扩展集中运行。我们尚未尝试构建任何自我修复 etcd 集群的自动化，因为发生事故非常罕见。&lt;br/&gt; &lt;br/&gt;API 服务器可能会占用相当多的内存，并且往往会与集群中的节点数量成线性比例。对于我们有 7500 个节点的集群，我们观察到每个 API 服务器使用高达 70GB 的堆内存，因此幸运地是，未来这应该仍然在硬件能力范围之内。&lt;br/&gt; &lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-e27234b39771d8eab5065fd180d25662_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;713&quot; data-rawheight=&quot;277&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic3.zhimg.com/v2-e27234b39771d8eab5065fd180d25662_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;713&quot; data-rawheight=&quot;277&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic3.zhimg.com/v2-e27234b39771d8eab5065fd180d25662_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-e27234b39771d8eab5065fd180d25662_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p data-pid=&quot;SIdEg8C6&quot;&gt;&lt;br/&gt;&lt;br/&gt; API Servers 受到压力的主要来源之一就是对 Endpoints 的 WATCH。在整个集群中有一些服务，如“kubelet”和“node-exporter”，其中每个节点都是成员。当一个节点被添加或从集群中删除时，这个 WATCH 将被触发。通常，由于每个节点本身都通过 kube-proxy 监视 &lt;code&gt;kubelet&lt;/code&gt; 服务，因此这些响应中所需的数量和带宽将是 2N2 以及极大的，有时会达到 1GB/s 或更高。Kubernetes 1.17 中推出的 &lt;a href=&quot;https://link.zhihu.com/?target=https%3A//kubernetes.io/docs/concepts/services-networking/endpoint-slices/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;EndpointSlices&lt;/a&gt; 大大降低了这种负载，减少达 1000 倍。&lt;br/&gt; &lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-ab126a7c5d16c506b702477d86144035_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;701&quot; data-rawheight=&quot;270&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic2.zhimg.com/v2-ab126a7c5d16c506b702477d86144035_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;701&quot; data-rawheight=&quot;270&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic2.zhimg.com/v2-ab126a7c5d16c506b702477d86144035_r.jpg&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-ab126a7c5d16c506b702477d86144035_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p data-pid=&quot;dpV4Eq0_&quot;&gt;&lt;br/&gt;&lt;br/&gt;总的来说，我们会非常注意随着集群规模增大而增加的 API Server 请求。我们尽量避免任何 DaemonSets 与 API Server 交互。在需要每个节点监视更改的情况下，引入缓存服务（例如 &lt;a href=&quot;https://link.zhihu.com/?target=https%3A//docs.datadoghq.com/agent/cluster_agent/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Datadog Cluster Agent&lt;/a&gt;）作为中介，似乎是避免集群范围瓶颈的良好模式。&lt;br/&gt; &lt;br/&gt;随着集群的增长，我们对集群的实际自动伸缩越来越少。但当一次性自动扩展太多时，我们偶尔会遇到问题。当新节点加入集群时会生成大量请求，一次性添加数百个节点可能会超过 API 服务器容量的负荷。稍微平滑一下这个过程，即使只有几秒钟也有助于避免宕机。&lt;/p&gt;&lt;p data-pid=&quot;TQyHxsB-&quot;&gt;时间序列度量与 Prometheus 和 Grafana&lt;br/&gt; &lt;br/&gt;我们使用 Prometheus 收集时间序列度量数据，并使用 Grafana 进行图形、仪表板和警报。我们从 &lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/coreos/kube-prometheus&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;kube-prometheus&lt;/a&gt; 部署开始收集了各种各样的度量数据，并使用了一些良好的仪表板进行可视化。随着节点数量的不断增加，我们开始遇到 Prometheus 收集的度量数据数量过多的问题。尽管 kube-prometheus 公开了许多有用的数据，但我们实际上并没有查看所有的度量数据，一些数据也过于细化，无法有效地进行收集、存储和查询。因此，我们使用 &lt;a href=&quot;https://link.zhihu.com/?target=https%3A//prometheus.io/docs/prometheus/latest/configuration/configuration/%23relabel_config&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Prometheus 规则&lt;/a&gt;从被摄入的度量数据中“删掉”一些数据。&lt;br/&gt; &lt;br/&gt;有一段时间，我们遇到了 Prometheus 消耗越来越多的内存问题，最终导致容器崩溃并出现 Out-Of-Memory 错误（OOM）。即使为应用程序分配了大量的内存容量，这种情况似乎仍然会发生。更糟糕的是，它在崩溃时会花费很多时间在启动时回放预写日志文件，直到它再次可用。最终，我们&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//prometheus.io/docs/prometheus/latest/configuration/configuration/%23relabel_config&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;发现了这些 OOM 的来源&lt;/a&gt;是 Grafana 和 Prometheus 之间的交互，其中 Grafana 使用 &lt;code&gt;/api/v1/series&lt;/code&gt; API 查询 &lt;code&gt;{le!=&quot;&quot;}&lt;/code&gt;（基本上是“给我所有的直方图度量”）。&lt;code&gt;/api/v1/series&lt;/code&gt; 的实现在时间和空间上没有限制，对于具有大量结果的查询，这将不断消耗更多的内存和时间。即使请求者已经放弃并关闭了连接，它也会继续增长。对于我们来说，内存永远不够，而 Prometheus 最终会崩溃。因此，我们&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/openai/prometheus/pull/1&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;修补&lt;/a&gt;了 Prometheus，将此 API 包含在上下文中以强制执行超时，从而完全解决了问题。&lt;br/&gt; &lt;br/&gt;虽然 Prometheus 崩溃的次数大大减少，但在我们需要重新启动它的时候，WAL 回放仍然是一个问题。通常需要多个小时来回放所有 WAL 日志，直到 Prometheus 开始收集新的度量数据并提供服务。在 &lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.robustperception.io/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Robust Perception&lt;/a&gt; 的帮助下，我们发现将 &lt;code&gt;GOMAXPROCS=24&lt;/code&gt; 应用于服务器可以显著提高性能。在 WAL 回放期间，Prometheus 尝试使用所有核心，并且对于具有大量核心的服务器，争用会降低所有性能。&lt;br/&gt; &lt;br/&gt;我们正在探索新的选项来增加我们的监控能力，下面“&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//openai.com/blog/scaling-kubernetes-to-7500-nodes/%23unsolvedproblems&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;未解决的问题&lt;/a&gt;”部分将对此进行描述。&lt;br/&gt; &lt;/p&gt;&lt;p data-pid=&quot;msf2QWYX&quot;&gt;健康检查&lt;/p&gt;&lt;p data-pid=&quot;XSDh-E4c&quot;&gt;对于如此庞大的集群，我们当然依赖自动化来检测并从集群中移除行为不当的节点。随着时间的推移，我们建立了许多健康检查系统。&lt;br/&gt; &lt;br/&gt;被动健康检查&lt;br/&gt; &lt;br/&gt;某些健康检查是被动的，总是在所有节点上运行。这些检查监视基本的系统资源，例如网络可达性、坏盘或满盘，或者 GPU 错误。GPU 以许多不同的方式出现问题，但一个容易出现的常见问题是“不可纠正的 ECC 错误”。Nvidia 的数据中心 GPU 管理器（DCGM）工具使查询这个问题和许多其他“Xid”错误变得容易。我们跟踪这些错误的一种方式是通过 &lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/NVIDIA/gpu-monitoring-tools%23dcgm-exporter&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;dcgm-exporter&lt;/a&gt; 将指标收集到我们的监控系统 Prometheus 中。这将出现为 &lt;code&gt;DCGM_FI_DEV_XID_ERRORS&lt;/code&gt; 指标，并设置为最近发生的错误代码。此外，&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//docs.nvidia.com/deploy/nvml-api/group__nvmlDeviceQueries.html%23group__nvmlDeviceQueries&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;NVML 设备查询 API&lt;/a&gt; 公开了有关 GPU 的健康和操作的更详细信息。&lt;br/&gt; &lt;br/&gt;一旦检测到错误，它们通常可以通过重置 GPU 或系统来修复，但在某些情况下确实需要更换基础 GPU。&lt;br/&gt; &lt;br/&gt;另一种健康检查是跟踪来自上游云提供商的维护事件。每个主要的云提供商都公开了一种方式来了解当前 VM 是否需要进行会最终导致中断的、即将发生的维护事件。VM 可能需要重新启动以应用底层的超级管理程序补丁，或者将物理节点替换为其他硬件。&lt;br/&gt; &lt;br/&gt;这些被动健康检查在所有节点上不断运行。如果健康检查开始失败，节点将自动划分，因此不会在节点上安排新的 Pod。对于更严重的健康检查失败，我们还将尝试 Pod 驱逐，以要求当前运行的所有 Pod 立即退出。这仍然取决于 Pod 本身，可通过 Pod 故障预算进行配置来决定是否允许此驱逐发生。最终，无论是在所有 Pod 终止之后，还是在 7 天过去之后（我们的服务级别协议的一部分），我们都将强制终止 VM。&lt;/p&gt;&lt;p data-pid=&quot;FRog-VpY&quot;&gt;活动 GPU 测试&lt;br/&gt; &lt;br/&gt;不幸的是，并非所有 GPU 问题都会通过 DCGM 可见的错误代码表现出来。我们建立了自己的测试库，通过对 GPU 进行测试来捕捉其他问题，并确保硬件和驱动程序的行为符合预期。这些测试无法在后台运行 - 它们需要独占 GPU 运行数秒钟或数分钟。&lt;br/&gt; &lt;br/&gt;我们首先在节点启动时运行这些测试，使用我们称之为“预检（preflight）”的系统。所有节点都会附带一个“预检”污点和标签加入集群。这个污点会阻止普通 Pod 被调度到节点上。我们配置了一个 DaemonSet，在所有带有此标签的节点上运行预检测试 Pod。测试成功完成后，测试本身将删除污点和标签，然后该节点就可供一般使用。&lt;br/&gt; &lt;br/&gt;我们还定期在节点的生命周期中运行这些测试。我们将其作为 CronJob 运行，允许它着陆在集群中的任何可用节点上。哪些节点会被测试到可能有些随机和不受控制，但我们发现随着时间的推移，它提供了足够的覆盖率，并且最小化了协调或干扰。&lt;/p&gt;&lt;p data-pid=&quot;lFkbx1wQ&quot;&gt;配额和资源使用&lt;br/&gt; &lt;br/&gt;随着集群规模的扩大，研究人员开始发现他们难以获取分配给他们的全部容量。传统的作业调度系统有许多不同的功能，可以公平地在竞争团队之间运行工作，而 Kubernetes 没有这些功能。随着时间的推移，我们从这些作业调度系统中汲取灵感，并以 Kubernetes 原生的方式构建了几个功能。&lt;/p&gt;&lt;p data-pid=&quot;MxJl24NX&quot;&gt;团队污点&lt;br/&gt; &lt;br/&gt;我们在每个集群中都有一个服务，称为“team-resource-manager”，具有多个功能。它的数据源是一个 ConfigMap，为在给定集群中具有容量的所有研究团队指定了 （节点选择器、应用的团队标签、分配数量） 元组。它会将当前节点与这些元组进行对比，并使用 &lt;code&gt;openai.com/team=teamname:NoSchedule&lt;/code&gt; 的污点对适当数量的节点进行标记。&lt;br/&gt; &lt;br/&gt;“team-resource-manager”还有一个入站的 webhook 服务，因此在提交每个作业时会根据提交者的团队成员身份应用相应的容忍度。使用污点使我们能够灵活地限制 Kubernetes Pod 调度程序，例如允许较低优先级的 Pod 具有 &quot;any&quot; 容忍度，这样团队可以借用彼此的容量，而无需进行大量协调。&lt;/p&gt;&lt;p data-pid=&quot;kt-9w29a&quot;&gt;CPU 和 GPU  balloons&lt;br/&gt; &lt;br/&gt;除了使用集群自动缩放器动态扩展我们基于虚拟机的集群之外，我们还使用它来纠正（删除和重新添加）集群中的不健康成员。我们通过将集群的 &quot;最小值&quot; 设置为零、&quot;最大值&quot; 设置为可用容量来实现这一点。然而，如果 cluster-autoscaler 发现有空闲节点，它将尝试缩小到只需要的容量。由于多种原因（VM 启动延迟、预分配成本、上面提到的 API 服务器影响），这种空闲缩放并不理想。&lt;br/&gt; &lt;br/&gt;因此，我们为 CPU 和 GPU 主机都引入了“球形”部署。这个部署包含一个具有 &quot;最大值&quot; 数量的低优先级 Pod 副本集。这些 Pod 占用节点内的资源，因此自动缩放器不会将它们视为空闲。但由于它们是低优先级的，调度程序可以立即将它们驱逐出去，以腾出空间进行实际工作。（我们选择使用 Deployment 而不是 DaemonSet，以避免将 DaemonSet 视为节点上的空闲工作负载。）&lt;br/&gt; &lt;br/&gt;需要注意的是，我们使用 pod 反亲和性（anti-affinity）来确保 pod 在节点之间均匀分布。Kubernetes 调度器的早期版本存在一个 O(N^2) 的性能问题，与 pod 反亲和性有关。自 Kubernetes 1.18 版本以后，这个问题已经得到了纠正。&lt;/p&gt;&lt;p data-pid=&quot;0BsiCRs2&quot;&gt;Gang 调度&lt;br/&gt; &lt;br/&gt;我们的实验通常涉及一个或多个 StatefulSets，每个 StatefulSet 操作不同部分的训练任务。对于优化器，研究人员需要在进行任何训练之前调度 StatefulSet 的所有成员（因为我们通常使用 MPI 在优化器成员之间协调，而 MPI 对组成员变化很敏感）。&lt;br/&gt; &lt;br/&gt;然而再默认情况下，Kubernetes 不一定会优先满足某个 StatefulSet 的所有请求。例如，如果两个实验都请求 100％的集群容量，那么 Kubernetes 可能只会调度给每个实验需要的一半 Pod，这会导致死锁，使两个实验都无法进行。&lt;br/&gt; &lt;br/&gt;我们尝试了一些需要自定义调度程序的方法，但遇到了一些与正常 Pod 调度方式冲突的边缘情况。 Kubernetes 1.18 引入了核心 Kubernetes 调度程序的插件体系结构，使本地添加此类功能变得更加容易。我们最近选择了 &lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/kubernetes/enhancements/pull/1463&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Coscheduling 插件&lt;/a&gt;作为解决此问题的方法。&lt;/p&gt;&lt;p data-pid=&quot;xT187pAH&quot;&gt;未解决的问题&lt;br/&gt; &lt;br/&gt;随着 Kubernetes 集群规模的扩大，我们仍有许多问题需要解决。其中一些问题包括：&lt;br/&gt;指标&lt;br/&gt; &lt;br/&gt;在如今的规模下，Prometheus 内置的 TSDB 存储引擎很难压缩，并且每次重新启动时需要长时间回放 WAL（预写式日志）。查询还往往会导致“查询处理会加载过多样本”的错误。我们正在迁移到不同的、与 Prometheus 兼容的存储和查询引擎。大家可以期待下我们未来的博客文章，看看它的表现如何！&lt;br/&gt; &lt;br/&gt;Pod 网络流量整形&lt;br/&gt; &lt;br/&gt;随着集群规模的扩大，每个 Pod 的互联网带宽量被计算了出来。每个人的聚合互联网带宽需求变得非常大，我们的研究人员现在有能力会意外地对互联网上的其他位置施加重大资源压力，例如要下载的数据集和要安装的软件包。&lt;br/&gt; &lt;br/&gt;结论&lt;br/&gt; &lt;br/&gt;Kubernetes 是一个非常灵活的平台，可以满足我们的研究需求。它具有满足我们所面临的最苛刻工作负载的能力。尽管它仍有许多需要改进的地方，但 OpenAI 的超级计算团队将继续探索 Kubernetes 的可扩展性。&lt;br/&gt; &lt;br/&gt;&lt;b&gt;作者简介：&lt;/b&gt;&lt;br/&gt; &lt;br/&gt;本文作者为 OpenAI 员工 Eric Sigler 和 Benjamin Chess。&lt;br/&gt; &lt;br/&gt;&lt;b&gt;原文链接：&lt;/b&gt;&lt;br/&gt; &lt;br/&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//openai.com/research/scaling-kubernetes-to-7500-nodes&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;openai.com/research/sca&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;ling-kubernetes-to-7500-nodes&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;/&gt;&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;本文转载来源&lt;/b&gt;：&lt;/p&gt;&lt;p data-pid=&quot;9Ki5TY26&quot;&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.infoq.cn/article/g9tuoTODP20N1lTzjsjw&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;OpenAI：我们将 Kubernetes 扩展到了 7500 个节点_语言 &amp;amp; 开发_OpenAI_InfoQ精选文章&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>5fc28344b12eb7fbbb497c6afa7dbc8c</guid>
<title>履约核心引擎低代码化原理与实践</title>
<link>https://toutiao.io/k/mrt75as</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;preview&quot;&gt;&lt;p&gt;撰写部门：Y-供应链研发部-履约研发部&lt;/p&gt;

&lt;h1&gt;1、导读&lt;/h1&gt;

&lt;p&gt;业界，规则引擎是一个非常普遍的&lt;strong&gt;技术类&lt;/strong&gt;工具，也有很多非常优秀的开源工具，例如Drools等，它是一种嵌入在应用程序中的组件，主要解决&lt;strong&gt;易变逻辑和业务耦合&lt;/strong&gt;的问题，把易变的规则从应用程序代码中分离出来，进而提升交付效率，降低应用程序维护和可扩展性成本。&lt;/p&gt;

&lt;p&gt;然而，行业上开源的规则引擎，在互联网场景使用却存在诸多障碍。从技术上来看，面对&lt;strong&gt;特大流量的高并发&lt;/strong&gt;略显不足；从交付上看，操作语言是以研发视角，无法让更多的&lt;strong&gt;非技术人员参与&lt;/strong&gt;来实现交付链条的最大化降低；从实施上，也没有配套的标准化架构开放规范，无法&lt;strong&gt;规模化&lt;/strong&gt;的让规则从应用程序代码中实现分离。&lt;/p&gt;

&lt;p&gt;基于此，&lt;strong&gt;京东供应链研发部&lt;/strong&gt;自研了一套，面向&lt;strong&gt;业务角色&lt;/strong&gt;的海纳低代码规则引擎平台，产品定位是面向业务、研发多角色一体化的零低代码开发平台，这其中规则引擎是其最核心的部分之一。&lt;/p&gt;

&lt;p&gt;这个平台，不仅可以高效的支持互联网高并发业务，它还具有一套标准化扩展开放的能力。基于此业务系统可以快速实现业务规则的规模化开放，短短4个月内，低成本开放了近100+个扩展点，抽取沉淀了近400+个业务规则，支持了&lt;strong&gt;14+个&lt;/strong&gt;京东核心链路重大项目，产品经理/ISV也&lt;strong&gt;首次&lt;/strong&gt;以无代码的方式，在安全清晰的工作边界内，自助式的完成京东核心链路的业务需求，平均的交付周期&lt;strong&gt;0.5天内。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;另外，&lt;strong&gt;从长远&lt;/strong&gt;来看，它把研发职能进行转移及拓宽，以&lt;strong&gt;安全的模式&lt;/strong&gt;让更多的角色参与研发，进而优化了需求的交付模式，为后续&lt;strong&gt;生态规模化的交付奠定了基础&lt;/strong&gt;。&lt;/p&gt;

&lt;h1&gt;&lt;strong&gt;2、JD履约的应用&lt;/strong&gt;&lt;/h1&gt;

&lt;h2&gt;现状&lt;/h2&gt;

&lt;p&gt;海纳低代码规则引擎平台在履约已大规模运用，初步达成了约20%的需求可由业务角色来直接交付，预估后续此比例可提升至40%。和其他平台的发展情况一样，海纳的发展过程也相当惊心动魄。下面就以一个独特的视角、简短的语言为大家展开。&lt;/p&gt;

&lt;p&gt;一个阳光明媚的早上，初级工程师小徐背着军绿色的双肩包，前脚刚从满满当当的电梯里面出来，还没来得及走到工位边脱下厚重的羽绒服。“铃铃铃”的电话声音就响起了，是对应业务条线的产品小李打过来的。该死，不会昨天晚上上线有什么问题吧。小徐揉了下微微发胀的太阳穴，不安的接起电话。很快就放下心来，昨天上线的业务已验收没问题了。是一个新的业务诉求要去满足。&lt;/p&gt;

&lt;p&gt;快速沟通了下，小徐就搞明白了大致想要做的事情了。商城上新引入了一批高端的时尚化妆品品牌，业务侧将货物入仓并在APP上开始售卖后，在客户同时或者分开购买这批化妆品后，在这些货物在出库履约生产的时候，物流会建立单独的生产业务线，为不同品牌的化妆品单独包装，并放置到品牌独立的包装礼盒中。期望在配送给客户的时候，使用精美的礼盒也可以加强客户的感知，提升用户体验。&lt;/p&gt;

&lt;p&gt;小徐工作已三年了，听完这个需求后，大脑中已构思出了大致的实现方案了。这个需求简单，不就是配置一批特殊的品牌增加特殊的业务处理规则么，几行if代码就可以搞定了，前2天刚实现了个类似的需求。刚想完，小徐就打开代码编辑器，眼睛盯着那几百行多个if else分支的代码，想着加到哪个地方最合适。&lt;/p&gt;

&lt;p&gt;想着正有点出神，电话再次响起，还是产品小李，这个需求的优先级提高了，业务那边希望今天就可以给出一个排期计划，小徐预估了大致的工作，觉得应该可以满足预期。和小李确定了下午的需求评审会时间，并顺手将这个任务加到了待办列表中了，不经意的扫了下工作安排，这周上线的需求就有4个了，突破了以前每周处理2个的平均值了。看来今天晚上要加加班了，不然干不完了。小徐戴上帽子，遮住了有点稀疏的脑门，抿了一口黑咖啡，全心开始工作了。&lt;/p&gt;

&lt;p&gt;几天后，另外一个角落里，核心架构师小彭和其他几个产品、业务聚在一起，对最近排期不满足的情况进行沟通。大家一番讨论后，总算共识了一起评估是否有合适的方式可以提升交付的速度，降低排期不满足的概率。甚至个别业务还提出来，有没有什么工作是可以分出来交给他们来做的。嗯，这是一个有意思的方向。小彭记下了这个关键的内容，开始认真琢磨有无好的办法。小彭从来就不是一个空想派，说干就干。从项目文档中拿出了近3年的项目及需求列表，从头梳理其实现方式，评估需求的共性及特点。&lt;/p&gt;

&lt;h2&gt;挑战&lt;/h2&gt;

&lt;p&gt;小彭带领团队，重新审视了最近收到的项目及需求，发现约有40%的需求相似性比较高，需求抽象后基本可以描述为“基于一定组合的业务条件下”，“执行特定领域的业务动作”。看起来和规则引擎的匹配度相当高。但是综合分析后，发现实施难度存在2类挑战，均需要有对应的解决方案。&lt;/p&gt;

&lt;p&gt;性能挑战：小彭负责的业务领域有点特殊，所有商城的每一个订单都会流向他负责的系统，峰值时一天处理超亿级订单。传统意义上的规则引擎，应用的都是低流量的业务场景。在这种大数据量，高并发的场景下，怎么保障性能是个问题，需要有对应的解决方案。&lt;/p&gt;

&lt;p&gt;价值挑战：引入成熟的规则引擎，假定可以解决目前的应用场景。但是一般规则引擎都会有其独立的领域描述语言（DSL Domain Specific Language），这类语言的使用门槛一般都比较高，交给研发人员维护还处于勉强可以接收的程度，交给产品或者业务人员去维护，初步看可能性较低。那么引入规则引擎后，如何实现一种方案，可以让产品、业务、研发均可以快速参与进来，均可以使用此产品功能进行快速交付，就是此产品要解决的核心问题了。&lt;/p&gt;

&lt;h2&gt;方案&lt;/h2&gt;

&lt;p&gt;经过几天连夜的奋战，小彭总算把相关的解决方案敲定了具体的可行性方向，与上级主管沛公约好了汇报讨论的时间。与前几天心惊肉跳的讨论不同，在大的讨论开始之前，小彭的心反而没有那么紧张了。小彭就是这样，越是难的事情，越觉得有挑战。即使再难的事情，在心里过一过，总可以想得明白。他是使万物回归其本源，而种子总能突破土地的束缚，慢慢长成谁也无法阻挡的参天大树。&lt;/p&gt;

&lt;p&gt;落地层面，小彭从来不担心。虽然可以预判到实施的过程中会有这样或者那样的难题。但是小彭和其合作的团队的战斗力，是小彭信心高昂的一切来源。这是一支不同的寻常的团队，支撑的也是不同寻常的业务。业务上，小彭负责了商城所有订单的履约生产过程，为每一个订单实时高效的制定好最优的生产计划，在过程中发出多个如拆单、转仓、补货等多个快速指令，为在商城中消费的每一个客户提供最优服务，并最大可能性的降低履约生产过程中的生产成本。过去几年多次一起并肩作战的战斗与冲锋，早就锻造了这只团队独特的战斗力。&lt;/p&gt;

&lt;p&gt;和沛公的交谈如预期中顺利，但是沛公说他还是要再认真考虑一下。是的，是要认真考虑一下，成熟的人总是要三思而后行，而一但确定好后就毫不犹豫的坚决执行。这个事情，风险和收益同样巨大。干好了后面研发交付的工作可以发生变革式的变化，产品、业务来完成需求交付不再是个可望不可即的事情了；但是如果干不好，比如过程中遇到了无法突破的难题，或者交付后出现业务使用不佳的情况，辛辛苦苦投入的精力可能就会存在白费的情况，特别是面对如此高的交付压力，一旦失败，对上对下，都不好交代。&lt;/p&gt;

&lt;p&gt;变革的过程总是很痛苦，而有先见之明的人在经历痛苦后才能有机会涅槃重生。做，还是不做，这是一个摆在沛公面前的难题。在经过一个晚上的深思熟虑后，沛公心中就有了预判和决断。这个事情是一个长期的事、有价值的事情，现在不做，将来我们也会要做。等将来项目及需求的压力变得不可阻挡，不得不做的时候，重重压力下执行的动作反而会变形。最好的时机就是当下，沛公已暗暗下定了决心。至于困难，总会有的，但是只要信心在，办法总比困难多。敢于冲锋，直面失败，这也是这个团队难以磨灭的特质。&lt;/p&gt;

&lt;p&gt;沛公找到了供应链负责整体效能同时身为首架的林老师沟通。林老师最近也一直在思考，如何将供应链高频共性的研发动作进一步抽象、打造出合适的Y工具产品，并将工具提供开放给业务角色，来降低研发的需求数，提升交付效率，部门也一直在做这样的探索，正好最近零（低）代码解决方案也初步有了成果，与沛公提到的想法不谋而合。两个部门立刻决定，共同推进落地。&lt;/p&gt;

&lt;p&gt;一个小的分队很快就成立了，两个团队都挑选了一些精兵强将，共同负责功能的设计、开发及运维，具体带队的分别是小丽，小徐，小彭，总体架构师是林老师，部门中一些架构师和研发也自愿的踊跃参加，例如 小孙，小马，小丁，小梦，小张，小喜等等。大家除了日常需要支持的本质工作外，其余的时间都一头扑在了这个新产品能力的打造上了。和一般伟大的事业开启必然附加有华美的篇章不同，研发的工作总是这样，朴实而无华。没有激情澎湃的赞歌，也没有千里不留行的豪迈，只是一个接一个的不眠之夜。看似枯燥的工作，和冷冰冰的代码，但总难浇灭大家心中火热的激情。每每深夜里有一些灵光乍现的新思路，每个人总会赶紧拿手机记下来，再倒头躺下。想到新的一天可以和团队一起，讨论新的思路和落地方式，大家按捺不住激动的内心，久久不能入睡。&lt;/p&gt;

&lt;p&gt;一个月后，产品雏形已初步完成，小彭拉上业务线对口的产品和业务来试用，算是毁誉参半，小彭没有泄气，收集了大家的问题和反馈，并开始快速迭代。又半个月过去，产品总算达到了可用、可交付的状态。经过一段时间的试点使用后，一些业务、产品开始主动来寻求合作和反馈。总算形成了正向反馈。&lt;/p&gt;

&lt;h1&gt;&lt;strong&gt;3、核心原理介绍&lt;/strong&gt;&lt;/h1&gt;

&lt;p&gt;看了这么多，那这个产品到底是如何完成的呢，其中的原理和亮点分别是什么，让小分队的成员带领我们来一窥究竟。&lt;/p&gt;

&lt;p&gt;提高交付效率、保证交付质量，扩大交付角色，是业界追求的最高目标，也是是小彭及其小分队追求的最终目标。为保障产品功能可安全、可靠的交付给业务角色，小分队探索出了一个带可视化界面、研发和产品可共同参与开发的通用性规则平台，并在平台内设定了一系列的规范化约定，计划提供沙箱模式、录制与回放验证等机制来保证交付的质量，并提升联调与验证的效率。&lt;/p&gt;

&lt;p&gt;而其核心原理，简而言之可以表述为：平台提供可视化设计器，业务角色在可视化界面沉浸式式编排业务规则，即可完成所有业务功能的新增、变更、修改与发布。与之相对应的，平台在功能后台自动生成规则引擎描述文件，待业务角色审核完成后自动化的同步给应用系统。应用系统通过SDK对扩展点进行拦截，并在扩展点执行生效的规则编排。&lt;/p&gt;

&lt;p&gt;海纳低代码规则引擎工作示意图如下所示：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-02-13-11-38BXsQjFKHmJoexvV.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;对于适用于业务规则类的业务场景，小分队的成员很快就发现存在共性特点：“当满足部分特定业务条件时，执行特定业务动作的一组规则集合”。&lt;/p&gt;

&lt;p&gt;小分队成员对此特点深入研究，发现市面上常见的规则引擎提供的技术规则内容太深奥、太专业，对于普通的业务人员理解难度太高，导致市面的规则引擎产品主要在研发内部使用。为解决这一难题，小分队在平台中除了提供纯技术规则注册外，还提供了业务规则注册与组合编排。使得平台的用户不光可以覆盖至研发角色，还可以覆盖至业务角色。业务交付需求时，只需关注其业务规则与业务编排，而其背后支撑的复杂技术规则则可完全对业务角色透明。最终业务像画流程图一样在平台进行操作即可自助式完成需求交付。&lt;/p&gt;

&lt;p&gt;伴随着需求的交付个数的增长，系统中的业务规则和业务行为不断地扩充，后续的需求交付可复用之前沉淀确定的业务规则，包括如“自营”、“厂直”、“医药”等统一的业务含义，均可统一在后续需求进行复用。可进一步提升交付速度。&lt;/p&gt;

&lt;p&gt;下边我们以一个实际的例子展示下海纳规则引擎的主要特色功能。为了让大家有直观的感受可视化规则编排和执行过程，先展示下规则编排结果：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-02-13-11-38XK0HrYgzR13mcSGk.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;从规则流程图可以看到主要的元素就是菱形和矩形。菱形表示条件，类似于我们代码中的if；而矩形则是动作，就是我们具体做的一个动作，比如更新数据库、远程接口调用等任何想做的事。&lt;/p&gt;

&lt;p&gt;那么规则流程是如何被编排出来，编排出来后又是如何运行的呢？下图描述了主要过程。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-02-13-11-39MnMMsDQrEI9ZFC39.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;注册扩展点：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;扩展点是规则要执行的切入点，在平台注册扩展点后，可围绕该扩展点进行业务规则流程编排。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;业务模型注册：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;业务模型是业务数据的载体，确保引擎正确识别并访问模型以进行逻辑运算；&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;技术规则注册：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-02-13-11-39A13VCz0WSIeqAWP8.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;主要面向研发人员，主要包括方法的签名信息，和系统中的代码方法对应，提供最基础的规则。&lt;/p&gt;

&lt;p&gt;平台还内置了丰富的技术规则，如下图所示，对于一般业务而言，预制的规则可以满足80%及以上的场景。对于其余个性化场景，平台也提供了可扩展的能力。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-02-13-11-41VwnHzbsTn9O2oBO.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;业务规则注册：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-02-13-11-41ToogunFUTBxvIrR.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;业务规则是对技术规则或业务规则的组合，形成具有业务语义的规则，最终用于业务规则流程编排。为了实现复杂业务条件，我们提供and/or/not/group等多种组合形式，方便业务灵活配置。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-02-13-11-41s116kz0PN42VWbNWP.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;业务规则编排：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-02-13-11-41vDuajQH8HIIishD.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;对业务规则进行组合，以流程图的方式展现业务流程，最终形成规则流程描述文件。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;规则引擎执行：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;SDK将规则流程描述文件解析成规则引擎能执行的脚本，规则引擎通过执行脚本完成业务规则的运行。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;小结：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;对业务角色而言，海纳平台提供可视化规则编排能力，业务规则主要是由具有业务语义化的条件规则和动作规则组成，因此产品业务人员可以轻松地自助完成业务规则编排。随着规则丰富度持续提升，业务人员也可以对已有规则进行组合或通过自定义规则方式实现新业务规则创建，实现全面自助。&lt;/p&gt;

&lt;p&gt;对于研发角色而言，应用系统只需引入SDK并定义要执行规则扩展点即可完成集成工作。后续需求业务实现自助化交付后，整个交付的过程从原来的10天，可缩短至最快0.5天，达成了提效的目的。&lt;/p&gt;

&lt;h1&gt;&lt;strong&gt;亮点&lt;/strong&gt;&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;1、轻量化&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;海纳规则引擎以对业务系统无侵入，只需引入规则引擎SDK，添加注解即可完成接入，对于存量系统具有友好的支持。一般而言，1天即可快速完成集成工作。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2、高性能&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;海纳平台是去中心化的设计，平台只负责流程编排，编排后的结果以流程描述文件的方式同步给业务系统，应用系统通过SDK解析并执行，采取本地化执行方式，没有性能瓶颈，并通过了京东订单履约核心系统11.11大促验证。平台提供的能力支持峰值一天处理超亿级订单平稳运行，单个规则运行的耗时在纳秒级别内完成。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3、研发和业务实现分离&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;海纳规则引擎将研发角色和业务角色分离，在技术领域和业务领域间建立规则适配，屏蔽技术细节，让业务角色更关注业务规则，提高业务角色的使用体验。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4、可视化&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;面向业务语义的流程编排，流程的编排可以向画流程图一样方便，实现所见即所得的业务体验。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5、技术资产沉淀&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;通过在平台上注册业务规则和业务行为，可实现技术资产沉淀，随着业务规则的扩充，可支持更为丰富的业务流程。&lt;/p&gt;

&lt;h1&gt;&lt;strong&gt;4、总结&lt;/strong&gt;&lt;/h1&gt;

&lt;p&gt;时间又回到了当下，产品小李找到了小彭，同步了近期业务提过来的几个需求，均已经在海纳规则引擎低代码平台自助化实现了，单个需求差不多5到10分钟即可完成配置，全程在平台上沉浸式操作即可。但最终上线需要小彭帮忙审批一下。仔细检查了业务规则条件，确认业务逻辑符合预期后，小彭快速移动鼠标，轻轻点击了“发布生效”，新配置的规则就如同打一个响指一样，秒级的速度就更新至线上生产环境，并全面运行了。送走小李后，小彭看着线上平稳的监控曲线出神，这个手段确实挺有效，省去了需求评审、业务功能开发、业务功能内部测试的时间，业务角色可以快速自助化交付。那么其余60%的需求如何提效呢？是否有其他的解决方案呢？小彭又陷入了沉思。&lt;/p&gt;

&lt;p&gt;看到了这里，您是不是对海纳规则引擎低代码平台有了更多的了解了呢？您在日常的工作中，是否遇到了类似的场景，可以复用此解决的方案么？如果有，欢迎多多交流。&lt;/p&gt;

&lt;p&gt;在项目需求日趋增加，而人力资源逐步成为瓶颈的时候，采用多种方式来达成提效的效果，是摆在所有人面前的一个难题。希望本文章可以以一个视角和解决方案，以抛砖引玉的方式，引起大家更多的共鸣和思考。&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>