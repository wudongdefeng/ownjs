<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>b0e8047c4beccfe24b2be4f31681b7d1</guid>
<title>【Java对象拷贝机制】「实战开发专题」高性能使用CGlib实现Bean拷贝（BeanCopier）指南_洛神灬殇的博客-CSDN博客</title>
<link>https://toutiao.io/k/xs808ih</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div id=&quot;content_views&quot; class=&quot;markdown_views prism-tomorrow-night&quot;&gt;
                    &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;
                        &lt;path stroke-linecap=&quot;round&quot; d=&quot;M5,0 0,2.5 5,5z&quot; id=&quot;raphael-marker-block&quot;/&gt;
                    &lt;/svg&gt;
                    &lt;h3&gt;&lt;a id=&quot;_1&quot;/&gt;对象拷贝现状&lt;/h3&gt; 
&lt;p&gt;业务系统中经常需要两个对象进行属性的拷贝，不能否认逐个的对象拷贝是最快速最安全的做法，但是当数据对象的属性字段数量超过程序员的容忍的程度，代码因此变得臃肿不堪，使用一些方便的对象拷贝工具类将是很好的选择。&lt;/p&gt; 
&lt;h3&gt;&lt;a id=&quot;_5&quot;/&gt;模型数据转换&lt;/h3&gt; 
&lt;p&gt;项目中或多或少会对某些实体进行转换（DTO、VO、DO或者PO等），往往具有相同的属性名称，数量少的情况下我们可以直接采取set、get方法进行赋值，可是如果这样的转换在很多地方都会用到，还是靠set来进行操作势必会大大的影响开发效率。&lt;/p&gt; 
&lt;ul&gt;&lt;li&gt; &lt;p&gt;关于实体转换，我们把一个实体对应一张表（这可以当成DO）。&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;业务中与第三方进行数据交互，我们需要把实体的数据传给他们，但不一定是一个DO中的所有属性可能减少或者多个DO中的属性组成，这里我们引入DTO（这个实体中我们可以去除一些隐私信息，比如：银行卡号，身份证，密码）。&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;一个性别我们用1、2表示男女，页面中不能直接显示1或者2，需要显示男、女或者靓仔（男）、靓妹（女），这时候代表这样的一个实体我们可以看作VO。&lt;/p&gt; &lt;/li&gt;&lt;/ul&gt; 
&lt;h3&gt;&lt;a id=&quot;_15&quot;/&gt;目前流行的较为公用认可的工具类：&lt;/h3&gt; 
&lt;h4&gt;&lt;a id=&quot;Apache_17&quot;/&gt;Apache的两个版本：（反射机制）&lt;/h4&gt; 
&lt;ul&gt;&lt;li&gt;org.apache.commons.beanutils.PropertyUtils.copyProperties(Object dest, Object orig)&lt;/li&gt;&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;原因：dateTimeConveter的conveter没有对null值的处理&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;prism language-java&quot;&gt;


&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;BeanObject&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; 
    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; name&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token namespace&quot;&gt;java&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;util&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;Date&lt;/span&gt; date&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
 &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;BeanObjectTest&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; args&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Throwable&lt;/span&gt;  &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
    &lt;span class=&quot;token class-name&quot;&gt;BeanObject&lt;/span&gt; from &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;BeanObject&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; 
    &lt;span class=&quot;token class-name&quot;&gt;BeanObject&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;BeanObject&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
    
    from&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;TTTT&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token namespace&quot;&gt;org&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;apache&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;commons&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;beanutils&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;BeanUtils&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;copyProperties&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; from&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token class-name&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;out&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;ToStringBuilder&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;reflectionToString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;from&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token class-name&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;out&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;ToStringBuilder&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;reflectionToString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt;&lt;li&gt; &lt;p&gt;org.apache.commons.beanutils.BeanUtils.copyProperties(Object dest, Object orig)&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;相同属性名，且类型不匹配时候的处理&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;原因：这两个工具类不支持同名异类型的匹配 !!!【包装类Long和原始数据类型long是可以的】&lt;/p&gt; &lt;/li&gt;&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;prism language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;SourceClass&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Long&lt;/span&gt; num&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; name&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TargetClass&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Long&lt;/span&gt; num&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; name&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;PropertyUtilsTest&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; args&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;IllegalAccessException&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;InvocationTargetException&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;NoSuchMethodException&lt;/span&gt;  &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token class-name&quot;&gt;SourceClass&lt;/span&gt; from &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;SourceClass&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        from&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setNum&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        from&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token class-name&quot;&gt;TargetClass&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TargetClass&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        
        &lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token namespace&quot;&gt;org&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;apache&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;commons&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;beanutils&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;PropertyUtils&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;copyProperties&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; from&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token namespace&quot;&gt;org&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;springframework&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;beans&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;BeanUtils&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;copyProperties&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;from&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        
        &lt;span class=&quot;token class-name&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;out&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;ToStringBuilder&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;reflectionToString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;from&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token class-name&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;out&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;ToStringBuilder&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;reflectionToString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;a id=&quot;Spring_78&quot;/&gt;Spring版本：（反射机制）&lt;/h4&gt; 
&lt;ul&gt;&lt;li&gt;org.springframework.beans.BeanUtils.copyProperties(Object source, Object target, Class editable, String[] ignoreProperties)&lt;/li&gt;&lt;/ul&gt; 
&lt;h4&gt;&lt;a id=&quot;cglib_82&quot;/&gt;cglib版本：（使用动态代理，效率高）&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;cglib是一款比较底层的操作java字节码的框架&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt;&lt;li&gt;net.sf.cglib.beans.BeanCopier.copy(Object paramObject1, Object paramObject2, Converter paramConverter)&lt;/li&gt;&lt;/ul&gt; 
&lt;h4&gt;&lt;a id=&quot;_88&quot;/&gt;工具操作&lt;/h4&gt; 
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/img_convert/d8106bb5f315011ad4c080b265f8bf24.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;a id=&quot;_92&quot;/&gt;原理简介&lt;/h3&gt; 
&lt;h4&gt;&lt;a id=&quot;apache_94&quot;/&gt;反射类型：（apache）&lt;/h4&gt; 
&lt;p&gt;都使用静态类调用，最终转化虚拟机中两个单例的工具对象。&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;prism language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;BeanUtilsBean&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ConvertUtilsBean&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;PropertyUtilsBean&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
 
&lt;ol&gt;&lt;li&gt; &lt;p&gt;动态bean：&lt;strong&gt;orig instanceof DynaBean：Object value = ((DynaBean)orig).get(name);&lt;/strong&gt; 然后把value复制到动态bean类。&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;Map类型：&lt;strong&gt;orig instanceof Map&lt;/strong&gt;：key值逐个拷贝&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;其他普通类：从beanInfo【&lt;strong&gt;每一个对象都有一个缓存的bean信息，包含属性字段等&lt;/strong&gt;】取出name，然后把sourceClass和targetClass逐个拷贝。&lt;/p&gt; &lt;/li&gt;&lt;/ol&gt; 
&lt;h4&gt;&lt;a id=&quot;CglibBeanCopier_116&quot;/&gt;Cglib类型：BeanCopier&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;prism language-java&quot;&gt;copier &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;BeanCopier&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;source&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getClass&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; target&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getClass&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
copier&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;source&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; target&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Get和set方法不匹配的处理&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;prism language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;BeanCopierTest&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    
    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; args&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
        &lt;span class=&quot;token class-name&quot;&gt;BeanCopier&lt;/span&gt; copier &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;BeanCopier&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;UnSatifisedBeanCopierObject&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;SourceClass&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        copier &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;BeanCopier&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;SourceClass&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;UnSatifisedBeanCopierObject&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; 
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;UnSatifisedBeanCopierObject&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;   
    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; name&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Long&lt;/span&gt; num&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;undefined
       &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; name&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;setName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; name&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;undefined
       &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; name&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Long&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getNum&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;undefined
       &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; num&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;



&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Create对象过程：产生&lt;strong&gt;sourceClass-&amp;gt; TargetClass&lt;/strong&gt; 的拷贝代理类，放入jvm中，所以创建的代理类的时候比较耗时。最好保证这个对象的单例模式，可以参照最后一部分的优化方案。&lt;/p&gt; 
&lt;h4&gt;&lt;a id=&quot;__jdk_156&quot;/&gt;创建过程 -&amp;gt; 源代码见jdk：&lt;/h4&gt; 
&lt;p&gt;net.sf.cglib.beans.BeanCopier.Generator.generateClass(ClassVisitor)&lt;/p&gt; 
&lt;ol&gt;&lt;li&gt; &lt;p&gt;获取sourceClass的所有public get 方法-》PropertyDescriptor[] getters&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;获取TargetClass 的所有 public set 方法-》PropertyDescriptor[] setters&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;遍历setters的每一个属性，执行4和5&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;按setters的name生成sourceClass的所有setter方法-》PropertyDescriptor getter【不符合javabean规范的类将会可能出现空指针异常】&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;PropertyDescriptor[] setters-》PropertyDescriptor setter&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;将setter和getter名字和类型 配对，生成代理类的拷贝方法。&lt;/p&gt; &lt;/li&gt;&lt;/ol&gt; 
&lt;h3&gt;&lt;a id=&quot;_172&quot;/&gt;原理总结&lt;/h3&gt; 
&lt;p&gt;Copy属性过程：调用生成的代理类，代理类的代码和手工操作的代码很类似，效率非常高。&lt;/p&gt; 
&lt;p&gt;上述这几种方式速度最快的是BeanCopier，默认只复制名称和类型相同的字段，还会对date为空的情况不进行复制。&lt;/p&gt; 
&lt;p&gt;我认为这样做最好，比如对象A的值复制到B中，我们把相同的进行复制，把不同的，也就是需要我们个性化的一些字段，单独出来用get来赋值，这样程序就会很明确，重点也就聚焦在了不同的地方。&lt;/p&gt;
                &lt;/div&gt;
                
                
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>c7bb96a68696dad3452c896470ca38e8</guid>
<title>招募不到维护者，Go语言Web工具包Gorilla归档</title>
<link>https://toutiao.io/k/3cw3v5d</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;profile_inner&quot;&gt;
                  &lt;strong class=&quot;profile_nickname&quot;&gt;OSC开源社区&lt;/strong&gt;
                  &lt;img class=&quot;profile_avatar&quot; id=&quot;js_profile_qrcode_img&quot; src=&quot;&quot; alt=&quot;&quot;/&gt;

                  &lt;p class=&quot;profile_meta&quot;&gt;
                  &lt;label class=&quot;profile_meta_label&quot;&gt;Weixin ID&lt;/label&gt;
                  &lt;span class=&quot;profile_meta_value&quot;&gt;oschina2013&lt;/span&gt;
                  &lt;/p&gt;

                  &lt;p class=&quot;profile_meta&quot;&gt;
                  &lt;label class=&quot;profile_meta_label&quot;&gt;About Feature&lt;/label&gt;
                  &lt;span class=&quot;profile_meta_value&quot;&gt;开源中国，为开发者服务&lt;/span&gt;
                  &lt;/p&gt;
                &lt;/div&gt;
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>4eeb2ccf91b11ffe4dece67b56dfcfcd</guid>
<title>快速开发 ChatGPT 桌面智能助理</title>
<link>https://toutiao.io/k/b8i40bi</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content js_underline_content             autoTypeSetting24psection&amp;#10;            &quot; id=&quot;js_content&quot;&gt;&lt;p data-track=&quot;1&quot;&gt;我们使用轻量开发环境 aardio ，体积只有几 MB，下载就可以编程，不需要任何复杂的配置。&lt;/p&gt;&lt;h1 spellcheck=&quot;false&quot; data-track=&quot;37&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;▶ &lt;/span&gt;调用 ChatGPT 接口&lt;/strong&gt;&lt;/span&gt;&lt;/h1&gt;&lt;p data-track=&quot;2&quot;&gt;打开 aardio ，点左上角&lt;span&gt;『新建控制台』&lt;/span&gt;按钮：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.40700808625336926&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/8Bia8Vd22gBODqNlmJEgSOicM4lOYSDe9DP4bvtuGZsibPEtlxWZ9Jb9ldHB0DGHIC13TMMsQnaZMNdsgWZbQzqdg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;371&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p data-track=&quot;5&quot;&gt;创建一个控制台程序：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8953125&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_gif/8Bia8Vd22gBODqNlmJEgSOicM4lOYSDe9D4oApyjiavlcb2E0eibMPQzuMwicujdeia9v7BHfL97sLY21J6pMUiaEenxQ/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;640&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p data-track=&quot;3&quot;&gt;输入下面的代码调用 OpenAI 接口：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;import&lt;/span&gt; console.int;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; web.rest.jsonClient;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;//创建 API 客户端&lt;br/&gt;&lt;/span&gt;&lt;span&gt;var&lt;/span&gt; http = web.rest.jsonClient(); &lt;br/&gt;&lt;br/&gt;&lt;span&gt;//设置 Key 或者获取 Key 的网址。&lt;br/&gt;&lt;/span&gt;http.setAuthToken(&lt;span&gt;&quot;http://api.aardio.com/demo/openai/token&quot;&lt;/span&gt;);&lt;br/&gt;&lt;br/&gt;&lt;span&gt;//引入 OpenAI 接口&lt;br/&gt;&lt;/span&gt;&lt;span&gt;var&lt;/span&gt; ai = http.api(&lt;span&gt;&quot;https://api.openai.com/v1/&quot;&lt;/span&gt;);&lt;br/&gt;&lt;br/&gt;&lt;span&gt;//调用 API &lt;br/&gt;&lt;/span&gt;&lt;span&gt;var&lt;/span&gt; ret = ai.completions({&lt;br/&gt;    &lt;span&gt;&quot;prompt&quot;&lt;/span&gt;: &lt;span&gt;&quot;现在几点了&quot;&lt;/span&gt;,&lt;span&gt;//发送问题&lt;br/&gt;&lt;/span&gt;    &lt;span&gt;&quot;model&quot;&lt;/span&gt;: &lt;span&gt;&quot;text-davinci-003&quot;&lt;/span&gt;,&lt;span&gt;//模型&lt;br/&gt;&lt;/span&gt;    &lt;span&gt;&quot;temperature&quot;&lt;/span&gt;: 0.8,&lt;span&gt;//热度，0~1 之间。&lt;br/&gt;&lt;/span&gt;    &lt;span&gt;&quot;max_tokens&quot;&lt;/span&gt;: 2048,&lt;span&gt;//最大允许的字符数量   &lt;br/&gt;&lt;/span&gt;})&lt;br/&gt; &lt;br/&gt;&lt;span&gt;//显示回复&lt;br/&gt;&lt;/span&gt;console.log( ret.choices[1].text )&lt;/code&gt;&lt;/pre&gt;&lt;p data-track=&quot;10&quot;&gt;aardio 调用 Web API 接口的代码非常简单，甚至不需要封装 OpenAI 扩展库。&lt;/p&gt;&lt;h1 spellcheck=&quot;false&quot; data-track=&quot;37&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;▶ &lt;/span&gt;实现 ChatGPT 桌面智能助理&lt;/strong&gt;&lt;/span&gt;&lt;/h1&gt;&lt;p data-track=&quot;13&quot;&gt;为了生成体积更小的独立 EXE 程序，我们调用系统自带的 WebView2，并且用 React + ChatUI 实现界面，几句代码就可以搞定。&lt;/p&gt;&lt;p data-track=&quot;15&quot;&gt;首先在 aardio 中创建 WebView2 工程：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.74375&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_gif/8Bia8Vd22gBODqNlmJEgSOicM4lOYSDe9D7Bofael7qsV37WrJyuaFvM3ghfibibHcmt0iaoQTglfmiah6FpDpab2nDw/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;640&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;然&lt;/span&gt;&lt;span&gt;后在 main.aardio 中输入下面源代码：&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;import&lt;/span&gt; win.ui;&lt;br/&gt;&lt;span&gt;/*DSG{{*/&lt;/span&gt;&lt;br/&gt;&lt;span&gt;var&lt;/span&gt; winform = win.form(text=&lt;span&gt;&quot;ChatGPT 桌面助理&quot;&lt;/span&gt;) &lt;br/&gt;&lt;span&gt;/*}}*/&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; web.view;&lt;br/&gt;&lt;span&gt;var&lt;/span&gt; wb = web.view(winform);&lt;br/&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; web.rest.jsonClient;&lt;br/&gt;&lt;span&gt;var&lt;/span&gt; http = web.rest.jsonClient(); &lt;br/&gt;http.setAuthToken(&lt;span&gt;&quot;http://api.aardio.com/demo/openai/token&quot;&lt;/span&gt;);&lt;br/&gt;&lt;span&gt;var&lt;/span&gt; ai = http.api(&lt;span&gt;&quot;https://api.openai.com/v1/&quot;&lt;/span&gt;);&lt;br/&gt; &lt;br/&gt;wb.external = {&lt;br/&gt;    ask = &lt;span&gt;function&lt;/span&gt;(prompt){&lt;br/&gt;        &lt;span&gt;var&lt;/span&gt; ret = ai.completions({&lt;br/&gt;            &lt;span&gt;&quot;prompt&quot;&lt;/span&gt;: prompt,&lt;span&gt;//发送问题&lt;br/&gt;&lt;/span&gt;            &lt;span&gt;&quot;model&quot;&lt;/span&gt;: &lt;span&gt;&quot;text-davinci-003&quot;&lt;/span&gt;,&lt;span&gt;//模型 &lt;br/&gt;&lt;/span&gt;            &lt;span&gt;&quot;temperature&quot;&lt;/span&gt;: 0.8,&lt;span&gt;//热度，0~1 之间。&lt;br/&gt;&lt;/span&gt;            &lt;span&gt;&quot;max_tokens&quot;&lt;/span&gt;: 2048,&lt;span&gt;//最大允许的字符数量   &lt;br/&gt;&lt;/span&gt;        })&lt;br/&gt;        &lt;br/&gt;        &lt;span&gt;if&lt;/span&gt;(ret)&lt;span&gt;return&lt;/span&gt; ret.choices[1].text;&lt;br/&gt;    };  &lt;br/&gt;} &lt;br/&gt;&lt;br/&gt;wb.html = &lt;span&gt;/**&lt;br/&gt;&amp;lt;!DOCTYPE html&amp;gt;&amp;lt;html&amp;gt;&lt;br/&gt;&amp;lt;head&amp;gt;&lt;br/&gt;    &amp;lt;meta charset=&quot;utf-8&quot; /&amp;gt;&lt;br/&gt;    &amp;lt;title&amp;gt;WebView2&amp;lt;/title&amp;gt; &lt;br/&gt;    &amp;lt;script src=&quot;https://lib.baomitu.com/react/17.0.2/umd/react.development.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;br/&gt;    &amp;lt;script src=&quot;https://lib.baomitu.com/react-dom/17.0.2/umd/react-dom.development.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;br/&gt;    &amp;lt;script src=&quot;https://lib.baomitu.com/chatui-core/2.4.2/index.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt; &lt;br/&gt;    &amp;lt;link rel=&quot;stylesheet&quot; href=&quot;https://lib.baomitu.com/chatui-core/2.4.2/index.min.css&quot;&amp;gt; &lt;br/&gt;    &amp;lt;script src=&quot;https://lib.baomitu.com/babel-standalone/7.18.13/babel.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;br/&gt;    &amp;lt;style type=&quot;text/css&quot;&amp;gt;html,body,#app{height:100%}&amp;lt;/style&amp;gt;&lt;br/&gt;&amp;lt;/head&amp;gt;&lt;br/&gt;&amp;lt;body&amp;gt;  &lt;br/&gt;&lt;br/&gt;&amp;lt;script type=&quot;text/babel&quot;&amp;gt; &lt;br/&gt;    const { useState,useEffect,useCallback,useRef } =  React;  &lt;br/&gt;    const { default: Chat, Bubble, useMessages } = ChatUI;  &lt;br/&gt;    &lt;br/&gt;    const App = () =&amp;gt; {&lt;br/&gt;        const { messages, appendMsg, setTyping } = useMessages([{&lt;br/&gt;            type: &#x27;text&#x27;,&lt;br/&gt;            content: { text: &#x27;主人好，我是 ChatGPT 智能助理，你的贴心小助手~&#x27; },&lt;br/&gt;            user: { avatar: &#x27;https://gw.alicdn.com/tfs/TB1DYHLwMHqK1RjSZFEXXcGMXXa-56-62.svg&#x27; },&lt;br/&gt;        }]);&lt;br/&gt;        &lt;br/&gt;        function handleSend(type, val) {&lt;br/&gt;            if (type === &#x27;text&#x27; &amp;amp;&amp;amp; val.trim()) {&lt;br/&gt;                appendMsg({&lt;br/&gt;                    type: &#x27;text&#x27;,&lt;br/&gt;                    content: { text: val },&lt;br/&gt;                    position: &#x27;right&#x27;,&lt;br/&gt;                });&lt;br/&gt;            &lt;br/&gt;                setTyping(true);&lt;br/&gt;                &lt;br/&gt;                aardio.ask(val).then( text=&amp;gt;{&lt;br/&gt;                    appendMsg({&lt;br/&gt;                        type: &#x27;text&#x27;,&lt;br/&gt;                        content: { text: text },&lt;br/&gt;                        }); &lt;br/&gt;                }) &lt;br/&gt;            }&lt;br/&gt;        }&lt;br/&gt;        &lt;br/&gt;        function renderMessageContent(msg) {&lt;br/&gt;            const { content } = msg;&lt;br/&gt;            return &amp;lt;Bubble content={content.text} /&amp;gt;;&lt;br/&gt;        }&lt;br/&gt;        &lt;br/&gt;        return (&lt;br/&gt;            &amp;lt;Chat&lt;br/&gt;            navbar={{ title: &#x27;&#x27; }}&lt;br/&gt;            messages={messages}&lt;br/&gt;            renderMessageContent={renderMessageContent}&lt;br/&gt;            onSend={handleSend}&lt;br/&gt;            /&amp;gt;&lt;br/&gt;        );&lt;br/&gt;        };&lt;br/&gt;        &lt;br/&gt;    ReactDOM.render(&amp;lt;App /&amp;gt;, document.querySelector(&#x27;#app&#x27;)); &lt;br/&gt;&amp;lt;/script&amp;gt;&lt;br/&gt;&amp;lt;div id=&quot;app&quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;br/&gt;**/&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;winform.show();&lt;br/&gt;win.loopMessage();&lt;/code&gt;&lt;/pre&gt;&lt;p data-track=&quot;19&quot;&gt;点击发布就可以生成独立 EXE 程序了。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5842696629213483&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/8Bia8Vd22gBODqNlmJEgSOicM4lOYSDe9DN8tV9Y77SGRI7grg0lk4cJWYU399w9gDibyIXUEHt1ribBX2ialMUJx6w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;445&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;程序运行界面如下：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.35030549898167&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/8Bia8Vd22gBODqNlmJEgSOicM4lOYSDe9Dic04oZJsZfpIo0icFBfVZMKLlvxj31SacsATc4Iyn1hmuPAdjRLY8IVw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;491&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p data-track=&quot;25&quot;&gt;请注意上面源码中的 key 仅供测试（网址返回的 key 是临时性的），请替换为自己申请的 key 。网上有很多 ChatGPI 注册教程，注册非常简单，参考教程注册以后可以申请免费 key 。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;mp-style-type data-value=&quot;3&quot;/&gt;&lt;/p&gt;&lt;/div&gt;

          
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>ab76d8875f70bf450d63343fd3d2ab06</guid>
<title>数据质量管理方法总结（全）</title>
<link>https://toutiao.io/k/3lo1yfp</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content js_underline_content             autoTypeSetting24psection&amp;#10;            &quot; id=&quot;js_content&quot;&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;一、数据质量保障原则&lt;/strong&gt;&lt;/span&gt;&lt;/h5&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如何评估数据质量的好坏，业界有不同的标准，阿里主要从4个方面进行评估：完整性、准确性、一致性、及时性；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;1. 完整性&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;数据完整性是数据最基础的保障；&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;完整性：指数据的记录和信息是否完整，是否存在缺失的情况；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;数据缺失：主要包括记录的缺失和记录中某个字段信息的缺失；&lt;/p&gt;&lt;p&gt;记录的丢失：如，交易中每天只发订单数都在 100 万笔左右，如果某天支付订单突然下降到 1 万笔，很可能是记录丢失了；&lt;br/&gt;记录中字段的丢失：如，订单的商品 ID、卖家 ID 都是必然存在的，这些字段的空值个数肯定是 0，一旦大于 0 就违背了完整性约束；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;2. 准确性&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;准确性：指数据汇总记录的信息和数据是否准确，是否存在异常或者错误的信息；&lt;/p&gt;&lt;p&gt;准确：数据表中记录的信息与业务过程中真实发生的事实要一致；如何判断是否准确：卡点监控 —— 制定相应规则，根据根校验数据，符合规则的数据则认为是准确的；&lt;br/&gt;如，一笔订单如果出现确认收货金额为负值，或者下单时间在公司成立之前，或者订单没有买家信息等，这些必然是有问题的；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;3. 一致性&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;一致性：一般体现在跨度很大的数据仓库体系中，如阿里的数据仓库，内部有很多业务数据仓库分支，对于同一份数据，必须保证一致性；&lt;/p&gt;&lt;p&gt;一致：也就是指多个业务数据仓库间的公共数据，必须在各个数据仓库中保持一致；&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;如，用户 ID，从在线业务库加工到数据仓库，再到各个消费节点，必须都是同一种类型，长度也需要保持一致；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;所以，在阿里建设数据仓库时，才有了公共层的加工，以确保数据的一致性；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;4. 及时性&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;及时性：指数据要能及时产出；&lt;/p&gt;&lt;p&gt;主要体现在数据应用上，要及时产出给到需求方；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;一般决策支持分析师希望当天就能看到前一天的数据，而不是等三五天才能看到某一个数据分析结果；否则就已失去了数据及时性的价值；&lt;/p&gt;&lt;p&gt;如，阿里 “双 11” 的交易大屏数据，就要做到秒级；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br/&gt;&lt;/h5&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;二、数据质量方法概述&lt;/strong&gt;&lt;/span&gt;&lt;/h5&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;阿里的数据质量建设体系：&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1.068241469816273&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;762&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/TEMFmlppic0apglgg5C3M31V0FP0xygfwbyicDZEGY8630L6aibWRUyuUt30Wo4mjkoBR9BgmQp0YOvwdluOLudRA/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;消费场景知晓&lt;/strong&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;功能：分析解决消费场景知晓的问题；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;方法：通过数据资产等级和基于元数据的应用链路，来分析解决消费场景知晓的问题；&lt;/p&gt;&lt;p&gt;确定数据资产等级：根据应用的影响程度，确定数据资产的等级；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;过程：&lt;/p&gt;&lt;p&gt;根据数据链路血缘，将资产等级上推至各数据生产加工的各个环节，确定链路上所有涉及数据的资产等级，以及在各个加工环节上根据资产等级的不同所采取不同的处理方式；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ol start=&quot;2&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;数据生产加工各个环节卡点校验&lt;/strong&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;主要对两部分的数据卡点校验：在线系统和离线系统数据生产加工各个环节的卡点校验；&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;在线系统：OLTP（On - Line Transaction Processing，联机事务处理）系统；&lt;/p&gt;&lt;p&gt;在线系统生产加工各环节卡点校验：&lt;/p&gt;&lt;p&gt;1.根据资产等级的不同，当对应的业务系统变更时，决定是否将变更通知下游；&lt;br/&gt;2.对于高资产等级的业务，当出现新业务数据时，是否纳入统计中，需要卡掉审批；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;离线系统：OLAP（On - Line Analytical Processing，联机分析处理）系统；&lt;/p&gt;&lt;p&gt;离线系统生产加工各环节卡点校验：&lt;/p&gt;&lt;p&gt;主要包括：代码开发、测试、发布、历史或错误数据回刷等环节的卡点校验；&lt;br/&gt;代码开发阶段、发布前的测试阶段&lt;br/&gt;针对数据资产等级的不同，对校验的要求有所不同；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ol start=&quot;3&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;风险点监控&lt;/strong&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;风险点监控：主要针对在数据运行过程中可能出现的数据质量和时效等问题进行监控；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;主要对两个方面进行风险点监控：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;在线数据的风险点监控：&lt;/p&gt;&lt;p&gt;主要针对在线系统日常运行产出的数据进行业务规则的校验；&lt;br/&gt;主要使用 “实时业务检测平台 BCP（Biz Check Platform）”；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;离线数据的风险点监控：&lt;/p&gt;&lt;p&gt;主要是针对离线系统日常运行产出的数据，进行数据质量监控和时效性监控；&lt;br/&gt;DQC：监控数据质量；&lt;br/&gt;摩萨德：监控数据时效性；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ol start=&quot;4&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;质量衡量&lt;/strong&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;对质量的衡量：&lt;/p&gt;&lt;p&gt;事前的衡量：如 DQC 覆盖率；&lt;br/&gt;事后的衡量：&lt;br/&gt;跟进质量问题，确定质量问题原因、责任人、解决情况等，并用于数据质量的复盘，避免类似事件再次发生；&lt;br/&gt;根据质量问题对不同等级资产的影响程度，确定其是属于低影响的事件还是具有较大影响的故障；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;质量分：综合事前和事后的衡量数据进行打分；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ol start=&quot;5&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;质量配套工具&lt;/strong&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;针对数据质量的各个方面，都有相关的工具进行保证，以提高效能；&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br/&gt;&lt;/h5&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;01  消费场景知晓&lt;/strong&gt;&lt;/span&gt;&lt;/h5&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;消费场景知晓的问题：&lt;/p&gt;&lt;p&gt;数据研发工程师难以确认几百 PB 的数据是否都是重要的？是否都要进行保障？是否有一些数据已经过期了？是否所有需要都要精确的进行质量保障？&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;解决方案：数据资产等级方案；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;产出：&lt;/p&gt;&lt;p&gt;根据数据产品和应用的影响程度，给数据产品和应用划分资产等级，并打标处理；&lt;br/&gt;根据数据链路血缘，将资产等级上推至各数据生产加工的各个环节，确定链路上所有涉及数据的资产等级，情打标处理；（等级标签与对应的数据产品 / 应用一致）&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;数据资产等级定义&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;背景：针对阿里庞大的数据仓库，数据的规模已经达到 EB 级，对于这么大的数据量，如果一概而论势必会造成精力无法集中、保障无法精确；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;五个数据等级，不同性质的重要性一次降低：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;即，数据一旦出错，将会引起重大资产损失，面临重大受益损失，造成重大公共风险；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;即，数据直接或间接用于集团业务和效果的评估、重要平台的运维、对外数据产品的透露、影响用户在阿里系网站的行为等；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;即，数据直接或间接用于内部一般数据产品或者运营 / 产品报告，如果出现问题会给事业部或业务线造成影响，或者造成工作效率损失；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;即，数据主要用于小二的日常数据分析，出现问题几乎不会带来影响或者影响很小；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不能明确说出数据的应用场景，则标注为未知；&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;对于不同的数据资产等级，使用英文 Asset 进行标记：&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;毁灭性质：A1 等级；&lt;br/&gt;全局性质：A2 等级；&lt;br/&gt;局部性质：A3 等级；&lt;br/&gt;一般性质：A4 等级；&lt;br/&gt;未知性质：A5 等级；&lt;br/&gt;重要程度：A1 &amp;gt; A2 &amp;gt; A3 &amp;gt; A4 &amp;gt; A5；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果一份数据出现在多个应用场景中，遵循就高原则；&lt;/p&gt;&lt;ol start=&quot;2&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;数据资产等级落地方法&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;需要解决的问题：对于如此庞大的数据量，如何给每一份数据都打上一个等级标签？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;数据资产等级落地的方法 / 步骤：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;数据流转过程&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;数据从业务系统中产生，经过同步工具进入数据仓库系统中，在数据仓库中进行一般意义上的清洗、加工、整合、算法、模型等一系列运算；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;通过同步工具输出到数据产品中进行消费；&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;数据从业务系统到数据仓库再到数据产品，都是以表的形式体现的，流转过程如下图：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.19069767441860466&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;860&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/TEMFmlppic0apglgg5C3M31V0FP0xygfwx0jxAiaZt6oKrkxhRXD00W55iaVibO8Uo6FSrqhQXfFXyqXvibnuKKiazHA/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;同步到数据仓库（对应到阿里就是 MaxCompute 平台）中的都是业务数据库的原始表，主要用于承载业务需求，往往不能直接用于数据产品；（一般是 ODS 层的全量数据）&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在数据产品中使用的都是经过数据仓库加工后的产出表；（根据需求 / 报表进行加工）&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1.划分数据资产等级&lt;br/&gt;2.根据数据流转过程，建立元数据，记录数据表与数据产品或者应用的对应关系；&lt;br/&gt;3.根据影响程度，给数据产品和应用划分数据资产等级；&lt;br/&gt;4.打标：依托元数据的上下游血缘，将整个消费链路打上某一类数据资产标签（也就是对消费链路数据打标）；&lt;br/&gt;链路：指数据从业务系统到数据产品的流转过程；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;总结：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过上述步骤，就完成了数据资产等级的确认，给不同的数据定义了不同的重要程度，需要用到元数据的支撑；&lt;/p&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br/&gt;&lt;/h5&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;02   数据加工过程卡点校验&lt;/strong&gt;&lt;/span&gt;&lt;/h5&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;目的：保障数据准确性、保障与离线数据的一致性；&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;在线业务系统卡点校验（数据产出环节）&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;在线系统数据加工过程卡点校验，主要指在在线系统的数据生产过程中进行的卡点校验；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;目的：保障与离线数据的一致性；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;背景 / 问题：在线业务复杂多变，总是在不断变更，每一次变更都会带来数据的变化，因此需要做到两点：&lt;br/&gt;1、数据仓库需要适应着多变的业务发展，及时做到数据的准确性；&lt;br/&gt;2、需要高效的将在线业务的变更通知到离线数据仓库；阿里解决上述两个问题的方法：工具和人工双管齐下：既要在工具上自动捕捉每一次业务的变化，同时也要求开发人员在意识上自动进行业务变更通知；&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ol start=&quot;2&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;工具&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;发布平台：发送重大变更的通知；&lt;br/&gt;通知内容：变更原因、变更逻辑、变更测试报告、变更时间等；&lt;br/&gt;数据库平台：发送库表变更通知；&lt;br/&gt;通知内容：变更原因、变更逻辑、变更测试报告、变更时间等；&lt;/p&gt;&lt;ol start=&quot;3&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;发布平台&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;功能：在业务进行重大变更时，订阅发布过程，然后给到离线开发人员，使其知晓此次变更的内容；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br/&gt;注：业务系统繁忙，日常发布变更数不胜数，并不是每一次业务变更都要只会离线业务，那样会造成不必要的浪费，而且影响在线业务迭代的效率；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;订阅内容：针对全集团重要的高等级数据资产，整理出哪些变化会影响数据的加工，则订阅这些内容；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br/&gt;如，财报，这个自然是 A1 等级的资产，如果业务系统的改造会影响财报的计算，如约定好的计算口径被业务系统发布变更修改了，那么务必要告知离线业务，作为离线开发人员也必须主动关注这类发布变更信息；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;卡点：发布平台集成了通知功能，针对重要的场景发布会进行卡点，确认通知后才能完成发布；&lt;/p&gt;&lt;ol start=&quot;4&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;数据库表的变化感知&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;无论是随着业务发展而做的数据库扩容还是表的 DDL 变化，都需要通知到离线开发人员；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;DDL（(Data Definition Language）：数据库模式定义语言；用于描述数据库中要存储的现实世界实体的语言。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;DDL 数据库模式定义语言是 SQL 语言（结构化查询语言）的组成部分；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;例：CREATE DATABASE（创建数据库）、CREATE TABLE（创建表）；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;DML（Data Manipulation Language）：数据操纵语言命令；使用户能够查询数据库以及操作已有数据库中的数据。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;例：insert、delete、update、select 等都是 DML ；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;背景 / 问题：数据仓库在进行数据抽取时，采用的是 DataX 工具，可能限制了某个数据库表，如果发生数据库扩容或者迁移，DataX 工具是感知不到的，结果可能会导致数据抽取错漏，影响一系列的下游应用；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;解决方法：通过数据库平台发送库表变更通知；&lt;/p&gt;&lt;ol start=&quot;5&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;开发人员&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;数据资产等级的上下游打通，同样也要将这个过程给到在线开发人员，使其知晓哪些是重要的核心数据资产，哪些暂时还只是作为内部分析数据使用；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;要提高在线开发人员的意识，通过培训，将离线数据的诉求、离线数据的加工过程、数据产品的应用方式，告诉在线业务开发人员，使其意识到数据的重要性，了解数据的价值，同时也告知出错后果，使在线开发人员在完成业务目标时，也要注重数据的目标，做到业务端和数据端一致；&lt;/p&gt;&lt;ol start=&quot;6&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;离线系统卡点校验（数据离线加工环节）&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;背景 / 问题：数据从在线业务系统到数据仓库再到数据产品的过程中，需要在数据仓库这一层完成数据的清洗、加工；正是有了数据的加工，才有了数据仓库模型和数据仓库代码的建设；如何保障数据加工过程中的质量，是离线数据仓库保障数据质量的一个重要环节；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;目的：保障数据加工过程中的质量（主要指数据的准确性）；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在两个环节进行卡点校验：&lt;/p&gt;&lt;ol start=&quot;7&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;代码提交时的卡点校验&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;背景 / 原因：数据研发人员素质不同，代码能力也有差异，代码质量难以得到高效保障；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;解决方法：开发代码扫描工具 SQLSCAN，针对每一次提交上线的代码进行扫描，将风险点提取出来；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;卡点方式：使用代码扫描工具 SQLSCAN，扫描代码提取风险点；&lt;/p&gt;&lt;ol start=&quot;8&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;任务发布上线时的卡点校验&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为了保障线上数据的准确性，每一次变更都需要线下完成测试后在发布到线上环境中，线上测试通过后才算发布成功；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;卡点方式：分别对任务（指变更的业务）发布上线前和上线后进行测试；&lt;/p&gt;&lt;ol start=&quot;9&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;发布上线前的测试：主要包括 Code Review 和回归测试；&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;Code Review：是一种通过复查代码提高代码质量的过程；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;回归测试：指修改了旧代码后，重新进行测试以确认修改没有引入新的错误或导致其他代码产生错误；&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;回归测试的目的：&lt;br/&gt;保障新逻辑的正确；&lt;br/&gt;保证不影响非此次变更的逻辑；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;注：对于资产等级较高的任务变更发布，采用强阻塞的形式，必须通过在彼岸完成回归测试之后才允许发布；&lt;/p&gt;&lt;ol start=&quot;10&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;发布上线后的测试：在线上做 Dry Run 测试或者真是环境运行测试；&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不执行代码，仅运行执行计划，避免线上和线下环境不一致导致语法错误；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用真实数据进行测试；&lt;/p&gt;&lt;section&gt;通知内容：变更原因、变更逻辑、变更测试报告、变更时间等；&lt;br/&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;过程：&lt;br/&gt;使用通知中心，将变更原因、变更逻辑、变更测试报告、变更时间等自动通知下游，下游对此次变更没有异议后，再按照约定时间执行发布变更，将变更对下游的影响降低至最低；&lt;/p&gt;&lt;section&gt;&lt;mp-common-profile class=&quot;js_uneditable js_wx_tap_highlight&quot; data-pluginname=&quot;mpprofile&quot; data-weui-theme=&quot;light&quot; data-id=&quot;MzkyMDE5ODYwMw==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/TEMFmlppic0YdZWNt7VhCeqCQmB5QIs9UGv3pnVWE6TgjTbDqkoJY4sYSQ1bXh9Uhq9ibwOlBDQrFUeYLomGNUpA/0?wx_fmt=png&quot; data-nickname=&quot;数据学堂&quot; data-alias=&quot;data_school&quot; data-signature=&quot;识数据、存数据、管数据、治数据、用数据，就在数据学堂！&quot; data-from=&quot;2&quot; data-is_biz_ban=&quot;0&quot; data-index=&quot;1&quot; data-origin_num=&quot;9&quot; data-isban=&quot;0&quot;/&gt;&lt;/section&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br/&gt;&lt;/h5&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;03  风险点监控&lt;/strong&gt;&lt;/span&gt;&lt;/h5&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;风险点监控：主要指针对数据在日常运行过程中容易出现的风险进行监控，并设置报警机制；&lt;br/&gt;主要包括在线数据和离线数据运行风险点监控；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;目的：保障数据的准确性；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1、 在线数据风险点监控&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;目的：减少了在线业务系统产生的脏数据，为数据准确性把第一道关；&lt;br/&gt;另外，减少用户错误信息的投诉，也减少了离线数据错误的回滚；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;BCP：阿里的实时业务检测平台；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;思路 / 监控过程：在每一个业务系统中，当完成业务过程进行数据落库时，BCP 订阅一份相同的数据，根据提前设定好的业务规则，在 BCP 系统中进行逻辑校验，当校验不通过时，以报警的形式披露出来，给到规则订阅人，以完成数据的校对；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;BCP 的校验过程：&lt;br/&gt;获取数据源：用户在 BCP 平台订阅数据源，获取需要校验的数据源；&lt;br/&gt;编写规则：针对所订阅的数据源进行规则的编写，即校验的逻辑；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;规则 / 逻辑：是至关重要的，是校验的核心，只有通过了这些规则，才认定该条记录是对的；&lt;br/&gt;如，针对 “订单拍下时间” 进行校验；逻辑：订单的拍下时间肯定不会大于当天的时间，也不会小于淘宝创立的时间；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;配置告警：针对不同的规则配置不同的告警形式；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;注：由于 BCP 的配置和运行成本较高，主要根据数据资产等级进行监控；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;离线数据风险点监控主要包括对数据准确性和数据产出的及时性进行监控；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;数据准确性是数据质量的关键，因此数据准确成为数据质量的重中之重，是所有离线系统加工时的第一保障要素；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;方法：通过 DQC 进行数据准确性监控；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;DQC（Data Quality Center，数据质量中心）：主要关注数据质量，通过配置数据质量校验规则，自动在数据处理任务过程中进行数据质量方面的监控；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;注：监控数据质量并报警，其本身不对数据产出进行处理，需要报警接收人判断并决定如何处理；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;监控方式：通过配置数据质量检验规则，自动在数据处理任务过程中进行监控；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;监控规则：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;强规则：会阻断任务的执行；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;将任务置为失败状态，其下游任务将不会被执行；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;弱规则：只告警而不会阻断任务的执行；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;常见的 DQC 监控规则：主键监控、表数据量及波动监控、重要字段的非空监控、重要枚举字段的离散值监控、指标值波动监控、业务规则监控等；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;规则配置：依赖数据资产等级确定监控规则；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;DQC 检查其实也是运行 SQL 任务，只是这个任务是嵌套在主任务中的，一旦检查点太多自然就会影响整体的性能；因此还是依赖数据资产等级来确定规则的配置情况；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;注：不同的业务会有业务规则的约束，这些规则来源于数据产品或者说消费的业务需求，有消费节点进行配置，然后上推到离线系统的起点进行监控，做到规则影响最小化；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在确保数据准确性的基础上，需要进一步让数据能够及时的提供服务；否则数据的价值将大幅度降低，甚至没有价值；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;阿里的大部分离线任务：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一般以天为时间间隔，称为 “天任务”，对于天任务，数据产品或者数据决策报表一般都要求在每天 9:00 甚至更早的时间产出；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为了确保前一天的数据完整，天任务是从零点开始运行的，由于计算加工的任务都是在夜里运行的，而要确保每天的数据能够按时产出，需要进行一系列的报警和优先级设置，使得重要的任务优先且正确的产出；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;重要的任务：资产等级较高的业务；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于 Map 任务和 Reduce 任务，调度是一个树形结构（RelNode 树），当配置了叶子节点（RelNode 节点）的优先级后，这个优先级会传递到所有上游节点，所以优先级的设置都是给到叶子节点，而叶子节点往往就是服务业务的消费节点；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;设置优先级：首先确定业务的资产等级，等级高的业务所对应的消费节点自然配置高优先级，一般业务则对应低优先级，确保高等级业务准时产出；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;任务报警和优先级类似，也是通过叶子节点传递；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;任务在运行过程中难免会出错，因此要确保任务能够高效、平稳的执行，需要有一个监控报警系统，对于高优先级的任务，一旦发现任务出错或者可能出现产出延迟，就要报警给到任务和业务 Owner；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;摩萨德：阿里自主开发的监控报警系统；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;摩萨德：离线任务的监控报警系统；是数据运维不可或缺的保障工具；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;根据离线任务的运行情况实时决策是否告警、何时告警、告警方式、告警给谁等；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;两个主要功能：强保障监控、自定义告警；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;强保障监控&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;强保障监控是摩萨德的核心功能，是仅仅围绕运维目标即业务保障而设计的，只要在业务的预警时间受到威胁，摩萨德就一定会告警出来给到相关人员；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;强保障监控主要包括：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;监控范围：设置强保障业务的任务及其上游所有的任务都会被监控；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;监控的异常：任务出错、任务变慢、预警业务延迟；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;告警对象：默认是任务 Owner，也可以设置值班表到某一个人；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;何时告警：根据业务设置的预警时间判断何时告警；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;业务延迟预警和出错报警，都是根据 “产出预警时间“ 来判断的；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;产出预警时间：摩萨德根据当前业务上所有任务最近 7 天运行的平均时间来推算当前业务所用的大概时间，来作为产出预警时间；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;告警方式：根据业务的重要紧急程度，支持电话、短信、旺旺、邮件告警；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;例：生意参谋业务（预警业务延迟）&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;资产等级及需求：定义的资产等级是 A2，要求早上 9:00 产出数据给到上架；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;设置：给生意参谋业务定义一个强保障监控，业务产出时间是 9:00，业务预警时间是 7:00；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里的预警时间是指，一旦摩萨德监控到当前业务的产出时间超出预警时间时，就会打电话给值班人员进行预警；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如，摩萨德推测生意参谋的产出时间要到 7:30，那么电话告警就出来了，由值班人员来判断如何加速产出；产出时间推算（预警判断，也就是产出延迟判断）：摩萨德是根据当前业务上所有任务最近 7 天运行的平均时间来推算的；虽然有误判的可能性，但是总体还是非常准确的，可以接受；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;自定义监控是摩萨德比较轻量级的监控功能，用户可以根据自己的需求进行配置，主要包括：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;出错告警：可根据应用、业务、任务三个监控对象进行出错告警配置，监控对象出错即告警给到人 / Owner / 值班表；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;完成告警：可根据应用、业务、任务三个监控对象进行完成情况告警配置，监控对象完成即告警给到人 / Owner / 值班表；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;未完成告警：可根据应用、业务、任务三个监控对象进行未完成情况告警配置，监控对象未完成即告警给到人 / Owner / 值班表；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;周期性告警：针对某个周期的小时任务，如果在某个时间未完成，即告警给到人 / Owner / 值班表；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;超时告警：根据任务运行时长进行超时告警配置，任务运行超过指定时间即告警给到人 / Owner / 值班表；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;针对业务的运行情况，摩萨德会提供一天关键路径，即完成业务的最慢任务链路图；因为每个业务上游可能有成千上万个任务，所以这条关键路径对于业务链路优化来说非常重要；&lt;/p&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h5&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;04  质量衡量&lt;/strong&gt;&lt;/span&gt;&lt;/h5&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;保障数据仓库的数据质量，有很多方案，评价这些方案的优劣，需要一套度量指标：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一般数据仓库的作业任务都是在夜晚进行，一旦出现问题就需要值班人员起夜进行处理；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;起夜率：用每个月的起夜次数，作为衡量数据质量建设完善度的一个指标；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;数据质量事件：记录每一次数据质量的问题；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;针对每一个数据质量问题，都记录一个数据质量事件：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;功能：既用来衡量数据本身的质量，也用来衡量数据链路上下游的质量，是数据质量的一个重要度量指标；&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;用来跟进数据质量问题的处理过程；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;用来归纳分析数据质量原因；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;根据数据质量原因来查缺补漏，既要找到数据出现问题的原因，也要针对类似问题给出后续预防方案；&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于严重的数据质量事件，将升级为故障；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;故障：指问题造成的影响比较严重，已经给公司带来资产损失或者公关风险；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;背景：数据从采集到最后的消费，整个链路要经过几十个系统，任何一个环节出现问题，都会影响数据的产出，因此需要一种机制，能够将各团队绑在一起，目标一致，形成合力，故障体系在这个背景下应运而生；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;故障体系中，一旦出现故障，就会通过故障体系，要求相关团队在第一时间跟进解决问题，消除影响；&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;故障定义&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;首先识别出重要的业务数据，并注册到系统中，填写相关的业务情况，如技术负责人、业务负责人、数据应用场景、延迟或错误带来的影响、是否会发生资产损失等，完成后，会将这部分数据的任务挂到平台基线上，一旦延迟或错误，即自动生成故障单，形成故障；&lt;/p&gt;&lt;ol start=&quot;2&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;故障等级&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;故障发生后，会根据一定的标准判断故障等级，如故障时长、客户投诉量、资金损失等，将故障按 P1~ P4 定级，各团队会有故障分的概念，到年底会根据故障分情况来判断本年度的运维效果；&lt;/p&gt;&lt;ol start=&quot;3&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;故障处理&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;故障发生后，需要快速的识别故障原因，并迅速解决，消除影响；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在处理故障的过程中，会尽量将故障的处理进度通知到相关方，尽可能减少对业务的影响；&lt;/p&gt;&lt;ol start=&quot;4&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;故障 Review&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;故障 Review：即分析故障的原因、处理过程的复盘、形成后续解决的 Action，并且都会以文字的形式详细记录，对故障的责任进行归属，一般会责任到人；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;注：对故障责任的判定，不是为了惩罚个人，而是通过对故障的复盘形成解决方案，避免问题再次发生；&lt;/p&gt;&lt;p&gt;&lt;span&gt;来源：公众号数据学堂&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;mpcps class=&quot;js_editor_new_cps&quot; data-templateid=&quot;list&quot; data-traceid=&quot;undefined&quot; data-goodssouce=&quot;1&quot; data-pid=&quot;101_13496985&quot; data-appuin=&quot;3289292454&quot; data-buffer=&quot;{&amp;quot;category_id&amp;quot;:0,&amp;quot;pid&amp;quot;:&amp;quot;101_13496985&amp;quot;,&amp;quot;biz_uin&amp;quot;:&amp;quot;3289292454&amp;quot;,&amp;quot;sku_id&amp;quot;:&amp;quot;101_13496985&amp;quot;,&amp;quot;source_id&amp;quot;:2,&amp;quot;source_name&amp;quot;:&amp;quot;京东&amp;quot;,&amp;quot;audit_state&amp;quot;:1,&amp;quot;main_img&amp;quot;:&amp;quot;https://pcm-img.zhls.qq.com/productcenter-3401ef3f--1018824-4758156902393242177/75828021431102022/a8b8504146cd33d9cfae593d98acaf16.jpg&amp;quot;,&amp;quot;product_name&amp;quot;:&amp;quot;数据标准化：企业数据治理的基石(博文视点出品)&amp;quot;,&amp;quot;current_price&amp;quot;:7900,&amp;quot;first_category_id&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;product_label_name_list&amp;quot;:[&amp;quot;京东配送&amp;quot;],&amp;quot;select_tag_name_list&amp;quot;:[],&amp;quot;appuin&amp;quot;:&amp;quot;3289292454&amp;quot;,&amp;quot;isNewCpsKOL&amp;quot;:1,&amp;quot;templateId&amp;quot;:&amp;quot;list&amp;quot;}&quot;/&gt;&lt;/p&gt;&lt;ol start=&quot;4&quot; class=&quot;list-paddingleft-1&quot; data-darkmode-bgcolor-16501764402385=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16501764402385=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16501764402385=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16501764402385=&quot;#fff|rgb(0, 0, 0)&quot; data-style=&quot;margin: 0mm 16px; padding-left: 0pt; outline: 0px; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; white-space: normal; color: rgb(0, 0, 0); text-align: left; font-size: 15px; word-spacing: 0.8px; list-style-type: none; background-color: rgb(255, 255, 255);&quot;&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.350140056022409&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;357&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5olT2uiaWT4SDWJuDpaTLficEG74RVKs0U3ic5rMm1dL8xOaqaoic0licFSnYoibLQnDWq1WS7wJxBnc96gjk19KKMxQ/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;span/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;(欢迎大家加入知识星球获取更多资讯。)&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;87560&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;span class=&quot;js_img_placeholder&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/5olT2uiaWT4SDWJuDpaTLficEG74RVKs0Ug2qyykvwib8iarmMS7KCpPxIgSIVqwqBxIria8ljCBmK4sTU8yPzFicsNA/640?wx_fmt=gif&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&quot; data-index=&quot;3&quot;&gt;&lt;span/&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;94155&quot;&gt;&lt;section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;91597&quot;&gt;&lt;section data-role=&quot;paragraph&quot; data-custom=&quot;#757576&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;&lt;p&gt;&lt;strong&gt;联系我们&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;span class=&quot;js_img_placeholder&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/NgicaibzjDx4Tn5e2hicJtzZYBQicpwYu5ibJo3F2sPraC8VWhwERZbn0PAwgZ50jafewsv40NXC2YicIibhUuIG7A9gw/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-index=&quot;4&quot;&gt;&lt;span/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;&lt;section&gt;&lt;p&gt;扫描二维码关注我们&lt;strong/&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section&gt;&lt;strong&gt;微信：SZH9543&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;邮箱：ccjiu@163.com&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;QQ：&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;2286075659&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;85891&quot; data-custom=&quot;rgb(172, 29, 16)&quot;&gt;&lt;section&gt;&lt;section data-bgless=&quot;lighten&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;87704&quot; data-custom=&quot;rgb(172, 29, 16)&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span data-brushtype=&quot;text&quot;&gt;热门文章&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI4OTI5MjQ1NA==&amp;amp;mid=2247494417&amp;amp;idx=2&amp;amp;sn=e539e74a264d10f378854bc29b5d0160&amp;amp;chksm=ec33c2d8db444bceb716451e6f1db21cb0ccb786cb5ad194203cb391382bcdd32859cb7bddb2&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;11&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;5分钟谈数据安全：概念、管什么、怎么管&lt;/a&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI4OTI5MjQ1NA==&amp;amp;mid=2247498013&amp;amp;idx=1&amp;amp;sn=c83fc4ebf4ca2c2375d8f14490498423&amp;amp;chksm=ec33d0d4db4459c25747748c261b9ef8e0e011769734788349c5d923df478467971108c81bf4&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;《数据安全复合治理与实践白皮书》正式发布【附下载】&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;《数据安全复合治理与实践白皮书》正式发布【附下载】&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI4OTI5MjQ1NA==&amp;amp;mid=2247497171&amp;amp;idx=2&amp;amp;sn=7ff335e802d1f09f5d3d67bffcd9a6ed&amp;amp;chksm=ec33dc1adb44550cb4ea11fcf6b01e166cfaf2cc232a58de7c7122673cddf8badfc1a6545778&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;数据安全工具建设分享&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;11&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;数据安全工具建设分享&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI4OTI5MjQ1NA==&amp;amp;mid=2247495062&amp;amp;idx=1&amp;amp;sn=e26d04126b9d6260ff046a801b12033a&amp;amp;chksm=ec33c45fdb444d49f0fa37c22f09791ce077524d68f7b4750d481bb55fe7a1fa5150612add78&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;从数据安全，看数据合规！&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;11&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;从数据安全，看数据合规！&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI4OTI5MjQ1NA==&amp;amp;mid=2247494417&amp;amp;idx=2&amp;amp;sn=e539e74a264d10f378854bc29b5d0160&amp;amp;chksm=ec33c2d8db444bceb716451e6f1db21cb0ccb786cb5ad194203cb391382bcdd32859cb7bddb2&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;5分钟谈数据安全：概念、管什么、怎么管&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;11&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;5分钟谈数据安全：概念、管什么、怎么管&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI4OTI5MjQ1NA==&amp;amp;mid=2247492892&amp;amp;idx=1&amp;amp;sn=5da854c1f6531f06ab9d2f960e9c2354&amp;amp;chksm=ec33ccd5db4445c310a549298dc571198fafa39a3c41aa388b87b3f85d5096e621026bb50e89&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;《数据安全法》实施在即，企业如何应对数据分类分级保护制度？&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;《数据安全法》实施在即，企业如何应对数据分类分级保护制度？&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI4OTI5MjQ1NA==&amp;amp;mid=2247492645&amp;amp;idx=1&amp;amp;sn=c8534950a7333101b44784bd5b60f61f&amp;amp;chksm=ec33cdecdb4444fa7cb84477906891b691035f7d2ebb87126a669e440ba3e053fec01460680d&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;数据治理系列6：数据安全治理之道&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;11&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;数据治理系列6：数据安全治理之道&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI4OTI5MjQ1NA==&amp;amp;mid=2247491154&amp;amp;idx=2&amp;amp;sn=0c58da7176982f17be28822711c7ea19&amp;amp;chksm=ec30379bdb47be8d9e421a787457f0b3b30bcea19151b5159e6a5ee55fc49a7612127fd1a771&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;数据治理连载漫画：什么是数据安全？&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;数据治理连载漫画：什么是数据安全？&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI4OTI5MjQ1NA==&amp;amp;mid=2247490630&amp;amp;idx=1&amp;amp;sn=1ace0fe4a943b4fa70843ec16a0d388b&amp;amp;chksm=ec30358fdb47bc991a34f0958a8e026d03525c7eaa63a6bfe103aae6991b154b528f16d92d7c&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;【附下载链接】国家工业信息安全发展中心与华为联合发布《数据安全白皮书》！&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;【附下载链接】国家工业信息安全发展中心与华为联合发布《数据安全白皮书》！&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI4OTI5MjQ1NA==&amp;amp;mid=2247489725&amp;amp;idx=1&amp;amp;sn=06270149cee826bda1c8a19d30373b72&amp;amp;chksm=ec303174db47b862d145d76a885cfcf24d34a8cba0644eee59c9e4c5d2119aed02fb1651752c&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;一图说：数据安全分类分级&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;11&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;一图说：数据安全分类分级&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI4OTI5MjQ1NA==&amp;amp;mid=2247485644&amp;amp;idx=1&amp;amp;sn=82bda7b919e6a5691974bccef71403af&amp;amp;chksm=ec302105db47a813af3110ea33700c72ecc75981b60124c770457e8250b7ea5a5460db3c6b0f&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;数据安全治理的九大要素&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;数据安全治理的九大要素&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI4OTI5MjQ1NA==&amp;amp;mid=2247484293&amp;amp;idx=1&amp;amp;sn=b903a01a0a16a1bc71604a038854ff13&amp;amp;chksm=ec302a4cdb47a35a78b72d894dc7fb07e21902db47e1ed3041b7b5b3e5ece4982e05e8374c6c&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;【数据治理实践】第十期：数据安全管理&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;11&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;【数据治理实践】第十期：数据安全管理&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span class=&quot;js_img_placeholder&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/5olT2uiaWT4QJAwXiaouVKE9kTZdRhvVw4ytiaFMmYnSnv0s7hactgB2DkPsZ8p7sAA0qU9e6EZM4gXnXA08GvVbQ/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-index=&quot;11&quot;&gt;&lt;span/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;94095&quot; data-width=&quot;77%&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section data-autoskip=&quot;1&quot;&gt;&lt;p&gt;&lt;strong&gt;我们的使命：&lt;/strong&gt;普及数据管理知识、发展数据管理工程师行业、改变中国企业数据管理现状、提高企业数据资产管理能力、推动企业走进大数据时代。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;我们的愿景：&lt;/strong&gt;凝聚行业力量、打造数据工程师全链条平台，培养不同层级数据工程师人才、构建数据工程师生态圈。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;我们的价值观：&lt;/strong&gt;分享数据管理知识，持续提升数据管理和运营能力。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span class=&quot;js_img_placeholder&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/5olT2uiaWT4QJAwXiaouVKE9kTZdRhvVw4ytiaFMmYnSnv0s7hactgB2DkPsZ8p7sAA0qU9e6EZM4gXnXA08GvVbQ/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-index=&quot;14&quot;&gt;&lt;span/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;了解更多精彩内容&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;157&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;157&quot; data-fileid=&quot;100013009&quot; data-ratio=&quot;0.9960474308300395&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;253&quot; title=&quot;35955bc4231278c0547010d784696b8.jpg&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/NgicaibzjDx4TSibobWT4iaVKroC3j9QJlwl6NZN9Q6jibc4Yzuv4In0PxmhRCPwD6ekzAKYic8bofvFlW1fTrLYFssA/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;长按，识别二维码，关注我们吧！&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;数据工程师&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;微信号：sjgcs&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;构建数据工程师生态圈&lt;/span&gt;&lt;/p&gt;&lt;/ol&gt;&lt;p&gt;&lt;mp-style-type data-value=&quot;3&quot;/&gt;&lt;/p&gt;&lt;/div&gt;

          
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>89906041340a911ea97a35cd6a85e17d</guid>
<title>2022 年数据库 8 大发展预期复盘</title>
<link>https://toutiao.io/k/en3hy1a</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;section&gt;&lt;mp-common-profile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzkwOTIxNDQ3OA==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/ufWcjcomw8YRIaicYx5pzj5Cxwick8DamnOgbTJu96QTibKyHEDZt1815yOV1r27oZ6HgoYTEYWYLRz4jIV4iasHgg/0?wx_fmt=png&quot; data-nickname=&quot;dbaplus社群&quot; data-alias=&quot;dbaplus&quot; data-signature=&quot;围绕Database、BigData、AIOps的企业级专业社群。资深大咖、技术干货，每天精品原创文章推送，每周线上技术分享，每月线下技术沙龙，每季度Gdevops&amp;amp;DAMS行业大会.&quot; data-from=&quot;0&quot; data-is_biz_ban=&quot;0&quot; data-weui-theme=&quot;light&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;开门见山，2022 这一年站在今天看，对每一个人都是很 “难” 的，2022年起始的一些观点，放到现在是否正确，通过一些已经发布的文字我们回顾一下。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这一篇是 dataversity 的 database management trends in 2022 ，发布的日期是2022 年2月1日。地址如下：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;https://www.dataversity.net/database-management-trends-in-2022/#&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这篇文字的侧重点是基于云上的数据库管理方面的讨论和观点， 这里提出几个关于当前经济情况下，对数据库产品的推动和应用的转变，基于新冠的影响，全世界范围的网上销售的份额，相对于之前有了很大的增长，同时基于当前世界经济的不明朗，更多的企业更愿意将数据迁移到云上。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;269&quot; data-backw=&quot;445&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.604494382022472&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ufWcjcomw8YHtVt1mSpSFKibesUgnTWI0rX3bA9AJXAAv345OzDEDQCdBYMo3d3IIMiaSQowT1j1CbKkwj5qQ8jg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;445&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;其中对数据库在2022年的倾向性进行了一个总结，主要还是以下几个点：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-role=&quot;list&quot;/&gt;&lt;section data-role=&quot;list&quot;/&gt;&lt;section data-role=&quot;list&quot;/&gt;&lt;section data-role=&quot;list&quot;/&gt;&lt;section data-role=&quot;list&quot;/&gt;&lt;section data-role=&quot;list&quot;/&gt;&lt;section data-role=&quot;list&quot;/&gt;&lt;section data-role=&quot;list&quot;/&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;下面针对文字中的内容，进行解读。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86152&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;span data-bgopacity=&quot;40%&quot;/&gt; &lt;span data-bgopacity=&quot;25%&quot;/&gt; &lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;1、云数据库&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;在一篇关于未来的数据库市场在云上的文章，预期未来云数据库是数据库市场的主流，数据库的管理系统在云上作为一个服务被提供，不在是一个以系统出现的方式显现，诚然现有的数据库系统还将被使用，但混合着云和传统数据库的方式可能将更加的主流。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;云数据库在商业角度最大的优势是，云数据库作为一个服务出现，可以快速的满足多变的商业环境和需求以及数据安全等多方面的需求。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;88516&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section hm_fix=&quot;461:527&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;实际上这样说是有一定的道理的，我们可以想想如果你使用实体机来部署数据库，或者使用云来部署数据库，这两者在便利性和成本方面的差距将是巨大的，从扩展性，以及灵活性方面考虑，更多的商业机构都会选择云上的数据库作为基础，这样在商业环境出现问题的时候，更容易节省成本，降低损耗。使用一个数据库本身，和打开开关和关闭开关一样的简单。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86152&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;span data-bgopacity=&quot;40%&quot;/&gt; &lt;span data-bgopacity=&quot;25%&quot;/&gt; &lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;2、数据库管理趋向于自助性服务&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;这部分文字主要在说明自动化或数据库自治会改变数据库的使用的方式，一个自主型的数据库系统会根据数据存储的不同类型，来对数据进行更有效的管理，在数据的处理上通过上载，处理，和过程化数据工具的方式来，降低由于人为的问题，导致的数据库异常或数据处理出错的问题等等。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这里的好处是，数据库不在需要管理，整体的工作向商业化数据的分析迁移。 &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;88516&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section hm_fix=&quot;461:527&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;这部分写的有一些空洞，数据库自动化服务和自治，并不是完全脱离人工的管理，目前应用系统在数据库上的设计在目前的整体的情况下，是无法脱离人工管理的，各种不规范的问题，以及各种个性化的需求，让数据库自治很难实现，同时自治化的工作，是否与商业环境的数据库运营有冲突等等都还需要磨合，数据库自治的设想很好，但现实环节目前对数据库自治这样的实现并不友好。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86152&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;span data-bgopacity=&quot;40%&quot;/&gt; &lt;span data-bgopacity=&quot;25%&quot;/&gt; &lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;3、ADM（Augmented data management）&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;ADM 强调了数据库机器学习的能力和人工智能部分的，同时系统还应该具有智能发现数据质量问题的能力，这部分希望数据库能进行自主的任务学习，通过人工操作后，能自主学习操作的步骤，并且能优化相关的操作过程，其中包含元数据管理、主数据管理和数据库管理系统中的操作。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;88516&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section hm_fix=&quot;461:527&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;这一部分是一个工作的方向，但实现起来问题点比较多，各个企业数据库的使用方式不同，同时学习这样的工作方式本身的正确性也需要进行确认和规划，所以这是一个研究的方向，但目前仅仅处于早期的探讨和初期的工作层面，成为主流的功能，还需要时日。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86152&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;span data-bgopacity=&quot;40%&quot;/&gt; &lt;span data-bgopacity=&quot;25%&quot;/&gt; &lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;4、数据库安全&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;文字开头提出在去年发生了几起备受瞩目的数据泄露事件。例如，LinkedIn在2021年6月遭到入侵，导致7亿用户的信息在网上被出售。今年9月，零售商内曼·马库斯(Neiman Marcus)遭到黑客攻击，480万名顾客受到影响。2021年10月，有消息称15亿脸书用户的信息在黑客论坛上出售。而这些只是2021年发生的数百起数据泄露事件中的几起。在华盛顿州，已知的入侵数量从去年的220起上升到2021年的280起。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;安全性一直是数据库管理员需要考虑的问题，但最近的入侵事件使其成为主要问题。因此，增加数据库安全性已成为一个趋势问题。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;88516&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section hm_fix=&quot;461:527&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;数据库的安全方面本身问题，并不是简单的数据库的问题，安全本身是一个复杂的问题大多数的数据库安全问题，是基于基础系统或应用系统本身，属于数据库单独的安全问题比较少。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86152&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;span data-bgopacity=&quot;40%&quot;/&gt; &lt;span data-bgopacity=&quot;25%&quot;/&gt; &lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;5、内存数据库&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;内存的数据库本身在应用中是比较受欢迎的，主要的优势是对比传统的数据库本身响应速度快，内存数据库越来越受欢迎，因为它们的响应速度比传统系统快。内存数据库(IMDB)消除了磁盘驱动器，取而代之的是将数据存储在计算机的主存储器(即随机存取存储器或RAM)中。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;降低响应时间是可能的，因为不需要翻译和缓存。正在使用的数据保持与到达时相同的形式，并且保持与使用它的应用程序相同的形式。这些数据库通常用于依赖快速响应时间和提供实时数据管理的应用程序。运行和受益于内存数据库的行业包括银行、旅游、游戏和电信。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;88516&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section hm_fix=&quot;461:527&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;内存式数据库产品，大家可能会想到REDIS ，实际上除了REDIS 作为传统型内存数据库产品以外，内存类的数据库产品很多，并且部分产品已经克服了REDIS 本身的一些缺陷问题。如最近的风头正劲的 Aerospike, Aerospike使用混合内存架构:数据库索引完全存储在主随机访问内存中，而数据使用数据层存储在持久设备上。数据层将数据存储在固态硬盘、NVMe或Persistent memory中通过从主索引使用直接指针直接访问磁盘上的记录位置来读取数据，并且通过大块写来优化数据写，以减少延迟这种体系结构从持久设备中获取所有记录，并取消数据缓存的使用。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;216&quot; data-backw=&quot;568&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.3797909407665505&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ufWcjcomw8YHtVt1mSpSFKibesUgnTWI0No3vwVD3OebsRn85wMib9o29NSSLicP4m98CS2aCtkmVeyxWWGLglrew/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;861&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;另外内存式的数据库产品本身，也会跟随这硬件架构的变化而变得更加强悍，如未来整体的内存系统替换大容量磁盘系统，此时整体的硬件支持整体的数据全部在内存中运行。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86152&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;span data-bgopacity=&quot;40%&quot;/&gt; &lt;span data-bgopacity=&quot;25%&quot;/&gt; &lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;6、图数据库产品&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;图数据库产品提供了非常优秀的关系图的建立和关系的查找的简便的方法，通过视图中的点和边来描述一段数据的关系，图数据库的设计目的是为数据实体之间的关系分配同等重要的数据接收。这种设计的结果是，只有需要访问的数据，而不必要的数据保持不变，使数据检索更有效。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;其中图数据库主要应用于，商业关系分析，以及反欺诈等项目中，通过图数据库本身来发现与商业关系中有关的人员，或者有欺诈嫌疑人有关系的其他人员等。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;同时除了这些，相关的文章中还提到在图数据库中还有如下的一些应用场景，如 网络管理， 电信运营，商业风险评估，数据中心和资产管理，云平台管理等。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;88516&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section hm_fix=&quot;461:527&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;目前整体的图数据库，暂无国产数据库产品，并且图数据库产品中，基本上是在 NEO4J 的把控下，另外云产品 cosmos db 也比较流行。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;128&quot; data-backw=&quot;568&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.22560975609756098&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ufWcjcomw8YHtVt1mSpSFKibesUgnTWI0NeKKsBgeRhJ8dw0Xqicobymh2ZOZ9R7UibPujGZuzHK1Nqe4xHvWs8wQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;820&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.45799457994579945&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ufWcjcomw8YHtVt1mSpSFKibesUgnTWI0wIQZz2hFOrLaT8QsC4HP0E45Mz9Ay5XNgcouModS2CT6IK5p7ibka5g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;369&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86152&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;span data-bgopacity=&quot;40%&quot;/&gt; &lt;span data-bgopacity=&quot;25%&quot;/&gt; &lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;7、开源数据库&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;开源数据库在10年前并不像现在这样流行，而现在将近有7%的市场，（注意市场一词，没有付费的开源产品并不在市场一词范围内），开源技术发展迅速，这里包含数据库产品，开源技术的数据库作为一种没有应用障碍的产品，被广泛应用于云端的应用开发中。根据Gartner 预测在2022年，将近有超过70%的新的应用会建立在开源数据库产品上或者基于开源数据库基础平台上的服务等，开源数据库本身是一种成功的解决问题的方法，并且用于商业软件的分发和推广，并且开源数据库软件将继续增长。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;88516&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section hm_fix=&quot;461:527&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;开源数据库本身在使用中，尤其在一些非核心或已经具备管理开源数据库软件的商业体中，使用的是比较广泛的，同时在每个数据库解决问题的方向，都有对应的开源数据库产品，并且开源数据库与商业数据库本身在核心能力上的差距并不大，所以开源数据库产品在一些非核心的业务场景，完全可以替换商业数据库产品。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86152&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;span data-bgopacity=&quot;40%&quot;/&gt; &lt;span data-bgopacity=&quot;25%&quot;/&gt; &lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;8、数据库即服务的理念&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;这是一种新的数据库设计的理念，过去的数据库设计中数据库并没有以引入微服务的设计理念，而是通过一个整体的设计方式来完成数据库的设计的。整体的数据库开发是一个整体的操作方式，这样的开发方式造成软件是单元化开发，整体的程序通常缺乏模块化的思维，应用程序等同于一个代码库加一个数据库的模式。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;而后微服务的兴起，导向了数据库即服务的理念，在软件开发的过程中，微服务本身内部就有相关的数据库，每个微服务都有自己的数据需要存储，而幸运的是，更多无架构的数据库产品如MONGODB ,AWS  DyNamoDB等产品让以微服务为理念的软件开发方式有了更合适的数据库产品使用。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;88516&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section hm_fix=&quot;461:527&quot;&gt;&lt;p&gt;&lt;span&gt;基于微服务的开发理念和架构的软件产品针对数据库本身的要求也在变化，原来大而全的数据库产品，在一些软件开发以微服务为中心的开发模式中，显得笨重，微服务本身进行了应用和业务结构的解耦，而如果将数据库还放到类似与ORACLE 这样的数据库产品中，显然是不合理的，微服务为核心的应用建构产品，更多希望的是小而美的数据库产品，通过这样的产品本身提高微服务的灵活性，以及当微服务所在的数据库出现问题后，不会影响其他微服务的额运行，这就导致如果将原有的软件结构拆分为微服务架构，会导致数据库数量的暴增，所以原有的设计的结构的数据库，不适应与这样开发方式后的一些需求。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;最后文中，提到虽然当前的数据库市场看起来增量很大，但实际上有一部分增量是从实体数据库到云数据库的迁移导致的增长，而这样的增长方式对于数据库的未来的发展和使用的方式都提出了新的要求，如远程管理工具，以及更贴合云方面的管理数据库的工具。 &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;实际上传统数据库本身已经市场饱和的问题是确实存在的，现有的市场增量是一个此消彼长的状态，也属于新陈代新，大量的数据库需求来自，如替换ORACLE ，这并不是新的业务需求，而只是替换原有系统使用数据库的需求，在这样的需求下，目前众多的数据库产品对于用户本身在挑选中也产生了困扰，而选择更合适，或更有生命力的产品，则是一个用户需要有的能力，选错数据库产品对于任何一个项目都是一场灾难。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;section&gt;&lt;span&gt;作者丨carol11&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;来源丨公众号：AustinDatabases（ID：AustinDatabases）&lt;/span&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;dbaplus社群欢迎广大技术人员投稿，投稿邮箱：&lt;/span&gt;&lt;span&gt;editor@dbaplus.cn&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>