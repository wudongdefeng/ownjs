<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>bcc1df8172995b2d04d8e3e5f62b74ad</guid>
<title>高并发下如何保证接口的幂等性？</title>
<link>https://toutiao.io/k/mjihi83</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzUxODkzNTQ3Nw==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/uL371281oDFEpxenPicr7Kh8c9P0I97yVWw9JfljjPy5gVBLDiaIrWkzAGHGib09Kib4TQtyw8jpLicW3yoyibMY8yMA/0?wx_fmt=png&quot; data-nickname=&quot;苏三说技术&quot; data-alias=&quot;&quot; data-signature=&quot;「苏三说技术」 维护者目前就职于某知名互联网公司，从事开发、架构和部分管理工作。实战经验丰富，对jdk、spring、springboot、springcloud、mybatis等开源框架源码有一定研究，欢迎关注，和我一起交流。&quot;/&gt;&lt;/section&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;前言&lt;br/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;接口幂等性&lt;/code&gt;问题，对于开发人员来说，是一个跟语言无关的公共问题。本文分享了一些解决这类问题非常实用的办法，绝大部分内容我在项目中实践过的，给有需要的小伙伴一个参考。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不知道你有没有遇到过这些场景：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;有时我们在填写某些&lt;code&gt;form表单&lt;/code&gt;时，保存按钮不小心快速点了两次，表中竟然产生了两条重复的数据，只是id不一样。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;我们在项目中为了解决&lt;code&gt;接口超时&lt;/code&gt;问题，通常会引入了&lt;code&gt;重试机制&lt;/code&gt;。第一次请求接口超时了，请求方没能及时获取返回结果（此时有可能已经成功了），为了避免返回错误的结果（这种情况不可能直接返回失败吧？），于是会对该请求重试几次，这样也会产生重复的数据。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;mq消费者在读取消息时，有时候会读取到&lt;code&gt;重复消息&lt;/code&gt;（至于什么原因这里先不说，有兴趣的小伙伴，可以找我私聊），如果处理不好，也会产生重复的数据。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;没错，这些都是幂等性问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;接口幂等性&lt;/code&gt;是指用户对于同一操作发起的一次请求或者多次请求的结果是一致的，不会因为多次点击而产生了副作用。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这类问题多发于接口的：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;insert&lt;/code&gt;操作，这种情况下多次请求，可能会产生重复数据。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;update&lt;/code&gt;操作，如果只是单纯的更新数据，比如：&lt;code&gt;update user set status=1 where id=1&lt;/code&gt;，是没有问题的。如果还有计算，比如：&lt;code&gt;update user set status=status+1 where id=1&lt;/code&gt;，这种情况下多次请求，可能会导致数据错误。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那么我们要如何保证接口幂等性？本文将会告诉你答案。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;1. insert前先select&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通常情况下，在保存数据的接口中，我们为了防止产生重复数据，一般会在&lt;code&gt;insert&lt;/code&gt;前，先根据&lt;code&gt;name&lt;/code&gt;或&lt;code&gt;code&lt;/code&gt;字段&lt;code&gt;select&lt;/code&gt;一下数据。如果该数据已存在，则执行&lt;code&gt;update&lt;/code&gt;操作，如果不存在，才执行  &lt;code&gt;insert&lt;/code&gt;操作。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;1.0972762645914398&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDEulLjl08cXVC1y0sFSlxNrFw4QIBGFicltUPsasY7lgUVEK7cVLS1GK3mibMW5Jcy4t1TvNmaBnGew/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;514&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;该方案可能是我们平时在防止产生重复数据时，使用最多的方案。但是该方案不适用于并发场景，在并发场景中，要配合其他方案一起使用，否则同样会产生重复数据。我在这里提一下，是为了避免大家踩坑。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2. 加悲观锁&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在支付场景中，用户A的账号余额有150元，想转出100元，正常情况下用户A的余额只剩50元。一般情况下，sql是这样的：&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;nginx&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attribute&quot;&gt;update&lt;/span&gt; user amount = amount-&lt;span class=&quot;code-snippet__number&quot;&gt;100&lt;/span&gt; where id=&lt;span class=&quot;code-snippet__number&quot;&gt;123&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果出现多次相同的请求，可能会导致用户A的余额变成负数。这种情况，用户A来可能要哭了。于此同时，系统开发人员可能也要哭了，因为这是很严重的系统bug。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为了解决这个问题，可以加悲观锁，将用户A的那行数据锁住，在同一时刻只允许一个请求获得锁，更新数据，其他的请求则等待。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通常情况下通过如下sql锁住单行数据：&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;select&lt;/span&gt; * &lt;span class=&quot;code-snippet__keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;code-snippet__number&quot;&gt;123&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;update&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;具体流程如下：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.9544554455445544&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDEulLjl08cXVC1y0sFSlxNrlFMScuviaupFRboxZnOVWkojRVNxya7e2a0BUvnU7cwcAw9jYMLvJXw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1010&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;具体步骤：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;多个请求同时根据id查询用户信息。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;判断余额是否不足100，如果余额不足，则直接返回余额不足。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果余额充足，则通过for update再次查询用户信息，并且尝试获取锁。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;只有第一个请求能获取到行锁，其余没有获取锁的请求，则等待下一次获取锁的机会。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;第一个请求获取到锁之后，判断余额是否不足100，如果余额足够，则进行update操作。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果余额不足，说明是重复请求，则直接返回成功。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;需要特别注意的是：如果使用的是mysql数据库，存储引擎必须用innodb，因为它才支持事务。此外，这里id字段一定要是主键或者唯一索引，不然会锁住整张表。&lt;/p&gt;&lt;/blockquote&gt;&lt;section&gt;&lt;span&gt;悲观锁需要在同一个事务操作过程中锁住一行数据，如果事务耗时比较长，会造成大量的请求等待，影响接口性能&lt;/span&gt;。&lt;/section&gt;&lt;section&gt;此外，每次请求接口很难保证都有相同的返回值，所以不适合幂等性设计场景，但是在防重场景中是可以的使用的。&lt;/section&gt;&lt;section&gt;&lt;span&gt;在这里顺便说一下，&lt;/span&gt;&lt;code&gt;防重设计&lt;/code&gt;&lt;span&gt; 和 &lt;/span&gt;&lt;code&gt;幂等设计&lt;/code&gt;&lt;span&gt;，其实是有区别的。&lt;/span&gt;&lt;span&gt;防重设计主要为了避免产生重复数据，对接口返回没有太多要求。&lt;/span&gt;&lt;span&gt;而幂等设计除了避免产生重复数据之外，还要求每次请求都返回一样的结果。&lt;/span&gt;&lt;/section&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;3. 加乐观锁&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;既然悲观锁有性能问题，为了提升接口性能，我们可以使用乐观锁。需要在表中增加一个&lt;code&gt;timestamp&lt;/code&gt;或者&lt;code&gt;version&lt;/code&gt;字段，这里以&lt;code&gt;version&lt;/code&gt;字段为例。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在更新数据之前先查询一下数据：&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;id&lt;/span&gt;,amount,&lt;span class=&quot;code-snippet__keyword&quot;&gt;version&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;code-snippet__number&quot;&gt;123&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果数据存在，假设查到的&lt;code&gt;version&lt;/code&gt;等于&lt;code&gt;1&lt;/code&gt;，再使用&lt;code&gt;id&lt;/code&gt;和&lt;code&gt;version&lt;/code&gt;字段作为查询条件更新数据：&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;nginx&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attribute&quot;&gt;update&lt;/span&gt; user set amount=amount+&lt;span class=&quot;code-snippet__number&quot;&gt;100&lt;/span&gt;,version=version+&lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;where id=&lt;span class=&quot;code-snippet__number&quot;&gt;123&lt;/span&gt; and version=&lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;更新数据的同时&lt;code&gt;version+1&lt;/code&gt;，然后判断本次&lt;code&gt;update&lt;/code&gt;操作的影响行数，如果大于0，则说明本次更新成功，如果等于0，则说明本次更新没有让数据变更。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由于第一次请求&lt;code&gt;version&lt;/code&gt;等于&lt;code&gt;1&lt;/code&gt;是可以成功的，操作成功后&lt;code&gt;version&lt;/code&gt;变成&lt;code&gt;2&lt;/code&gt;了。这时如果并发的请求过来，再执行相同的sql：&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;nginx&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;span class=&quot;code-snippet__attribute&quot;&gt;update&lt;/span&gt; user set amount=amount+&lt;span class=&quot;code-snippet__number&quot;&gt;100&lt;/span&gt;,version=version+&lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;where id=&lt;span class=&quot;code-snippet__number&quot;&gt;123&lt;/span&gt; and version=&lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;该&lt;code&gt;update&lt;/code&gt;操作不会真正更新数据，最终sql的执行结果影响行数是&lt;code&gt;0&lt;/code&gt;，因为&lt;code&gt;version&lt;/code&gt;已经变成&lt;code&gt;2&lt;/code&gt;了，&lt;code&gt;where&lt;/code&gt;中的&lt;code&gt;version=1&lt;/code&gt;肯定无法满足条件。但为了保证接口幂等性，接口可以直接返回成功，因为&lt;code&gt;version&lt;/code&gt;值已经修改了，那么前面必定已经成功过一次，后面都是重复的请求。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;具体流程如下：&lt;img data-ratio=&quot;1.5942028985507246&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDEulLjl08cXVC1y0sFSlxNrVUKwejvF2k3OTVPD2JPAiaV5diaMl16ictoclcWwgcvJsMV8mibVOartVg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;552&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;具体步骤：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;先根据id查询用户信息，包含version字段&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;根据id和version字段值作为where条件的参数，更新用户信息，同时version+1&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;判断操作影响行数，如果影响1行，则说明是一次请求，可以做其他数据操作。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果影响0行，说明是重复请求，则直接返回成功。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;4. 加唯一索引&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;绝大数情况下，为了防止重复数据的产生，我们都会在表中加唯一索引，这是一个非常简单，并且有效的方案。&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;alter table &lt;span class=&quot;code-snippet__string&quot;&gt;`order`&lt;/span&gt; add UNIQUE KEY &lt;span class=&quot;code-snippet__string&quot;&gt;`un_code`&lt;/span&gt; (&lt;span class=&quot;code-snippet__string&quot;&gt;`code`&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;加了唯一索引之后，第一次请求数据可以插入成功。但后面的相同请求，插入数据时会报&lt;code&gt;Duplicate entry &#x27;002&#x27; for key &#x27;order.un_code&lt;/code&gt;异常，表示唯一索引有冲突。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;虽说抛异常对数据来说没有影响，不会造成错误数据。但是为了保证接口幂等性，我们需要对该异常进行捕获，然后返回成功。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果是&lt;code&gt;java&lt;/code&gt;程序需要捕获：&lt;code&gt;DuplicateKeyException&lt;/code&gt;异常，如果使用了&lt;code&gt;spring&lt;/code&gt;框架还需要捕获：&lt;code&gt;MySQLIntegrityConstraintViolationException&lt;/code&gt;异常。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;具体流程图如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;1.47766323024055&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDEulLjl08cXVC1y0sFSlxNrs24WBMr0ktqAewryz7neZsASO9B8Qseqb8ict8CyLyia8lzv2YlY5LQQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;582&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;具体步骤：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;用户通过浏览器发起请求，服务端收集数据。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;将该数据插入mysql&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;判断是否执行成功，如果成功，则操作其他数据（可能还有其他的业务逻辑）。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果执行失败，捕获唯一索引冲突异常，直接返回成功。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;5. 建防重表&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有时候表中并非所有的场景都不允许产生重复的数据，只有某些特定场景才不允许。这时候，直接在表中加唯一索引，显然是不太合适的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;针对这种情况，我们可以通过&lt;code&gt;建防重表&lt;/code&gt;来解决问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;该表可以只包含两个字段：&lt;code&gt;id&lt;/code&gt; 和 &lt;code&gt;唯一索引&lt;/code&gt;，唯一索引可以是多个字段比如：name、code等组合起来的唯一标识，例如：susan_0001。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;具体流程图如下：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;1.198952879581152&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDEulLjl08cXVC1y0sFSlxNrbAGE1PLlnV6ibnZcTeNeyic7bv6jewYbu1Tfo7KO99iciaZcbf5icgSPovA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;764&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;具体步骤：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;用户通过浏览器发起请求，服务端收集数据。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;将该数据插入mysql防重表&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;判断是否执行成功，如果成功，则做mysql其他的数据操作（可能还有其他的业务逻辑）。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果执行失败，捕获唯一索引冲突异常，直接返回成功。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;需要特别注意的是：防重表和业务表必须在同一个数据库中，并且操作要在同一个事务中。&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;6. 根据状态机&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;很多时候业务表是有状态的，比如订单表中有：1-下单、2-已支付、3-完成、4-撤销等状态。如果这些状态的值是有规律的，按照业务节点正好是从小到大，我们就能通过它来保证接口的幂等性。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;假如id=123的订单状态是&lt;code&gt;已支付&lt;/code&gt;，现在要变成&lt;code&gt;完成&lt;/code&gt;状态。&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;update&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;`order`&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;status&lt;/span&gt;=&lt;span class=&quot;code-snippet__number&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;code-snippet__number&quot;&gt;123&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;status&lt;/span&gt;=&lt;span class=&quot;code-snippet__number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;第一次请求时，该订单的状态是&lt;code&gt;已支付&lt;/code&gt;，值是&lt;code&gt;2&lt;/code&gt;，所以该&lt;code&gt;update&lt;/code&gt;语句可以正常更新数据，sql执行结果的影响行数是&lt;code&gt;1&lt;/code&gt;，订单状态变成了&lt;code&gt;3&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;后面有相同的请求过来，再执行相同的sql时，由于订单状态变成了&lt;code&gt;3&lt;/code&gt;，再用&lt;code&gt;status=2&lt;/code&gt;作为条件，无法查询出需要更新的数据，所以最终sql执行结果的影响行数是&lt;code&gt;0&lt;/code&gt;，即不会真正的更新数据。但为了保证接口幂等性，影响行数是&lt;code&gt;0&lt;/code&gt;时，接口也可以直接返回成功。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;具体流程图如下：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;1.5646551724137931&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDEulLjl08cXVC1y0sFSlxNrWHME47uFVibJDCibIPILsuFib5nq3batoka8m58tN42JdX4HgKSrKiaF9A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;464&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;具体步骤：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;用户通过浏览器发起请求，服务端收集数据。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;根据id和当前状态作为条件，更新成下一个状态&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;判断操作影响行数，如果影响了1行，说明当前操作成功，可以进行其他数据操作。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果影响了0行，说明是重复请求，直接返回成功。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;主要特别注意的是，该方案仅限于要更新的&lt;code&gt;表有状态字段&lt;/code&gt;，并且刚好要更新&lt;code&gt;状态字段&lt;/code&gt;的这种特殊情况，并非所有场景都适用。&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;7. 加分布式锁&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其实前面介绍过的&lt;code&gt;加唯一索引&lt;/code&gt;或者&lt;code&gt;加防重表&lt;/code&gt;，本质是使用了&lt;code&gt;数据库&lt;/code&gt;的&lt;code&gt;分布式锁&lt;/code&gt;，也属于分布式锁的一种。但由于&lt;code&gt;数据库分布式锁&lt;/code&gt;的性能不太好，我们可以改用：&lt;code&gt;redis&lt;/code&gt;或&lt;code&gt;zookeeper&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;鉴于现在很多公司分布式配置中心改用&lt;code&gt;apollo&lt;/code&gt;或&lt;code&gt;nacos&lt;/code&gt;，已经很少用&lt;code&gt;zookeeper&lt;/code&gt;了，我们以&lt;code&gt;redis&lt;/code&gt;为例介绍分布式锁。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;目前主要有三种方式实现redis的分布式锁：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;setNx命令&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;set命令&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Redission框架&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;每种方案各有利弊，具体实现细节我就不说了，有兴趣的朋友可以加我微信找我私聊。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;具体流程图如下：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;1.2676470588235293&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDEulLjl08cXVC1y0sFSlxNrkm3ibIJnLzKpwSdxcSPGh8lfuCCGLO2QVnYp2msIvLgoLuHsyOjHdWQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;680&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;具体步骤：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;用户通过浏览器发起请求，服务端会收集数据，并且生成订单号code作为唯一业务字段。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;使用redis的set命令，将该订单code设置到redis中，同时设置超时时间。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;判断是否设置成功，如果设置成功，说明是第一次请求，则进行数据操作。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果设置失败，说明是重复请求，则直接返回成功。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;需要特别注意的是：分布式锁一定要设置一个合理的过期时间，如果设置过短，无法有效的防止重复请求。如果设置过长，可能会浪费&lt;code&gt;redis&lt;/code&gt;的存储空间，需要根据实际业务情况而定。&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;8. 获取token&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;除了上述方案之外，还有最后一种使用&lt;code&gt;token&lt;/code&gt;的方案。该方案跟之前的所有方案都有点不一样，需要两次请求才能完成一次业务操作。&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;第一次请求获取&lt;code&gt;token&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;第二次请求带着这个&lt;code&gt;token&lt;/code&gt;，完成业务操作。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;具体流程图如下：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;第一步，先获取token。&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>03419fdfa92fe506caa5e87581e0d039</guid>
<title>Elasticsearch Head 插件使用小结</title>
<link>https://toutiao.io/k/itpgo7c</link>
<content:encoded>&lt;div&gt;&lt;div&gt;
  &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>b07b32d5593fc3efdc59846cd08db769</guid>
<title>阿里二面：用过 GC 日志可视化工具进行 JVM 调优吗？</title>
<link>https://toutiao.io/k/7qyo540</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;大家好，我是不才陈某~&lt;/span&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上周&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzU3MDAzNDg1MA==&amp;amp;mid=2247518914&amp;amp;idx=1&amp;amp;sn=b3fdfd78c32b15077ac67535ccc10a00&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;知识星球&lt;/a&gt;的小伙伴面了阿里，在二面中被问到GC日志分析，感觉回答的不是很好，过来找我复盘，大致听了他的回答，虽然回答出了部分，但是没抓到重点。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;GC日志分析算是JVM调优中比较难的部分，今天这篇文章就来聊聊如何利用JDK现有的命令并且借助可视化工具如何去分析GC日志。&lt;/p&gt;&lt;/section&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;JVM实践调优主要步骤&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;默认的策略是最普用，但不是最佳的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;第一步&lt;/span&gt;：监控分析GC日志&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;第二步&lt;/span&gt;：判断JVM问题：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;如果各项参数设置合理，系统没有超时日志出现，GC频率不高，GC耗时不高，那么没有必要进行GC优化;如果GC时间超过1-3秒，或者频繁GC，则必须优化。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;第三步&lt;/span&gt;：确定调优目标&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;第四步&lt;/span&gt;：调整参数&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;调优一般是从满足程序的内存使用需求开始，之后是时间延迟要求，最后才是吞吐量要求，要基于这个步骤来不断优化，每一个步骤都是进行下一步的基础，不可逆行之。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;第五步&lt;/span&gt;：对比调优前后差距&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;第六步&lt;/span&gt;：重复：1 、 2 、 3 、 4 、 5 步骤&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;第七步&lt;/span&gt;：应用JVM到应用服务器：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;找到最合适的参数，将这些参数应用到所有服务器，并进行后续跟踪。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以上，就是我们进行jvm调优得一些步骤了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那我们就从第一步开始喽！！！^_^&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;分析GC日志&lt;/span&gt;&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;初始参数设置&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;机器环境：&lt;/span&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;指标&lt;/th&gt;&lt;th&gt;参数&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;机器&lt;/td&gt;&lt;td&gt;CPU 12核，内存16GB&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;集群规模&lt;/td&gt;&lt;td&gt;单机&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;seqb_web版本&lt;/td&gt;&lt;td&gt;1.0&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;数据库&lt;/td&gt;&lt;td&gt;4核 16G&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Jvm调优典型参数设置;&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;-Xms堆内存的最小值：&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;默认情况下，当堆中可用内存小于40%时，堆内存会开始增加，一直增加到-Xmx的大小。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;-Xmx堆内存的最大值：&lt;/span&gt; 默认值是总内存/64（且小于1G）&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;默认情况下，当堆中可用内存大于70%时，堆内存会开始减少，一直减小到-Xms的大小；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;-Xmn新生代内存的最大值：&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;包括Eden区和两个Survivor区的总和&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;配置写法如：-Xmn1024k，-Xmn1024m，-Xmn1g&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ol start=&quot;7&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;-Xss每个线程的栈内存：&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;默认1M，一般来说是不需要改。线程栈越小意味着可以创建的线程数越多&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;整个堆的大小 = 年轻代大小 + 年老代大小，堆的大小不包含元空间大小，如果增大了年轻代，年老代相应就会减小，官方默认的配置为年老代大小/年轻代大小=2/1左右；关注公众号：码猿技术专栏，回复关键词 1111 获取阿里内部java性能调优手册&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;建议在开发测试环境可以用Xms和Xmx分别设置最小值最大值，但是在线上生产环境，&lt;span&gt;Xms和Xmx设置的值必须一样，防止抖动；&lt;/span&gt;&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;这里比较重要喔，一般我们都是将Xms和Xmx的值设置为一样的！！！&lt;/p&gt;&lt;/blockquote&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.9863945578231292&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/19cc2hfD2rD74nX01ONhAWdK2Hh8GrCYEeibg8RxVOF7GkJdibZmJdoxhfkvozkOCpBR7761PFXu6iaENmVibwglHQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;147&quot;/&gt;&lt;figcaption&gt;比较重要喔&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;JVM调优设置合大小堆内存空间，既不能太大，也不能太小。那么应该设置为多少呢？&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;默认的配置是否存在性能瓶颈。&lt;span&gt;关注公众号：&lt;/span&gt;&lt;span&gt;码猿技术专栏，回复关键词 1111 获取阿里内部java性能调优手册；&lt;/span&gt;如果想要确定JVM性能问题瓶颈，需要进一步分析&lt;span&gt;GC日志&lt;/span&gt;&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;-XX:+PrintGCDetails&lt;/span&gt; 开启GC日志创建更详细的GC日志 ，默认情况下，GC日志是关闭的&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;-XX:+PrintGCTimeStamps，-XX:+PrintGCDateStamps&lt;/span&gt; 开启GC时间提示&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;开启时间便于我们更精确地判断几次GC操作之间的时两个参数的区别&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;时间戳是相对于 0 （依据JVM启动的时间）的值，而日期戳（date stamp）是实际的日期字符串&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;由于日期戳需要进行格式化，所以它的效率可能会受轻微的影响，不过这种操作并不频繁，它造成的影响也很难被我们感知。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;-XX:+PrintHeapAtGC&lt;/span&gt; 打印堆的GC日志&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;-Xloggc:./logs/gc.log&lt;/span&gt; 指定GC日志路径&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里，我们是在window下面进行测试，idea配置如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5047862156987875&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/19cc2hfD2rD74nX01ONhAWdK2Hh8GrCYU32edOMYwAYuvaaCe6vkw8SZCWIM8mVGPdprj2rRQgk0C4V1IXLu9g/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1567&quot;/&gt;&lt;figcaption&gt;idea配置&lt;/figcaption&gt;&lt;/figure&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;-XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -XX:+PrintHeapAtGC -Xloggc:E:/logs/gc-default.log&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这样就会在e盘下logs文件夹下面，生成&lt;code&gt;gc-default.log&lt;/code&gt;日志&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7110481586402266&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/19cc2hfD2rD74nX01ONhAWdK2Hh8GrCY8Yic3Zsa6iavYPZj5LYJSQrKfegBI3bHkJWcu5fc8b1QGCKKUYc1zUDQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1059&quot;/&gt;&lt;figcaption&gt;gc-default.log&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;GC日志解读&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;Young GC 日志含义&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;2022&lt;/span&gt;-&lt;span&gt;08&lt;/span&gt;-&lt;span&gt;05&lt;/span&gt;T13:&lt;span&gt;45&lt;/span&gt;:&lt;span&gt;23.336&lt;/span&gt;+&lt;span&gt;0800&lt;/span&gt;: &lt;span&gt;4.866&lt;/span&gt;: [GC (Metadata GC Threshold) [PSYoungGen: &lt;span&gt;136353&lt;/span&gt;K-&amp;gt;&lt;span&gt;20975&lt;/span&gt;K(&lt;span&gt;405504&lt;/span&gt;K)] &lt;span&gt;160049&lt;/span&gt;K-&amp;gt;&lt;span&gt;48437&lt;/span&gt;K(&lt;span&gt;720384&lt;/span&gt;K), &lt;span&gt;0.0092260&lt;/span&gt; secs] [Times: user=&lt;span&gt;0.00&lt;/span&gt; sys=&lt;span&gt;0.02&lt;/span&gt;, real=&lt;span&gt;0.02&lt;/span&gt; secs] &lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里的内容，我们一个一个解析：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;2022&lt;/span&gt;-&lt;span&gt;08&lt;/span&gt;-&lt;span&gt;05&lt;/span&gt;T13:&lt;span&gt;45&lt;/span&gt;:&lt;span&gt;23.336&lt;/span&gt;+&lt;span&gt;0800&lt;/span&gt;: 本次GC发生时间&lt;br/&gt;&lt;span&gt;4.866&lt;/span&gt;: 举例启动应用的时间&lt;br/&gt;[GC【表示GC的类型，youngGC】 (Metadata GC Threshold) 元空间超阈值&lt;br/&gt;[PSYoungGen: &lt;span&gt;136353&lt;/span&gt;K-&amp;gt;&lt;span&gt;20975&lt;/span&gt;K(&lt;span&gt;405504&lt;/span&gt;K年轻代总空间)] &lt;span&gt;160049&lt;/span&gt;K-&amp;gt;&lt;span&gt;48437&lt;/span&gt;K(&lt;span&gt;720384&lt;/span&gt;K)整堆), &lt;span&gt;0.0092260&lt;/span&gt; secs本次垃圾回收耗时]&lt;br/&gt;[Times: user=&lt;span&gt;0.00&lt;/span&gt;本次GC消耗CPU的时间 sys=&lt;span&gt;0.02&lt;/span&gt;系统暂停时间, real=&lt;span&gt;0.02&lt;/span&gt; secs实际应用暂停时间]&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;这里的解析，应该很详细了吧，还有谁看不懂的呢？&lt;/p&gt;&lt;/blockquote&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.1411764705882352&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/19cc2hfD2rD74nX01ONhAWdK2Hh8GrCYwjVIhDXjibNyiceEibPxGHA0mGLWicrdYXtVNP1X8xN5Ev7aSxdMOTXPQg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;170&quot;/&gt;&lt;figcaption&gt;有谁看不懂&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;FullGC 日志含义&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;2022&lt;/span&gt;-&lt;span&gt;08&lt;/span&gt;-&lt;span&gt;05&lt;/span&gt;T20:&lt;span&gt;24&lt;/span&gt;:&lt;span&gt;47.815&lt;/span&gt;+&lt;span&gt;0800&lt;/span&gt;: &lt;span&gt;6.955&lt;/span&gt;: [&lt;span&gt;Full &lt;span&gt;GC&lt;/span&gt; &lt;span&gt;(Metadata GC Threshold)&lt;/span&gt; [PSYoungGen: 701K-&amp;gt;0&lt;span&gt;K&lt;/span&gt;&lt;span&gt;(&lt;span&gt;72704&lt;/span&gt;K)&lt;/span&gt;] [ParOldGen: 38678K-&amp;gt;35960&lt;span&gt;K&lt;/span&gt;&lt;span&gt;(&lt;span&gt;175104&lt;/span&gt;K)&lt;/span&gt;] 39380K-&amp;gt;35960&lt;span&gt;K&lt;/span&gt;&lt;span&gt;(&lt;span&gt;247808&lt;/span&gt;K)&lt;/span&gt;, [Metaspace: 56706K-&amp;gt;56706&lt;span&gt;K&lt;/span&gt;&lt;span&gt;(&lt;span&gt;1099776&lt;/span&gt;K)&lt;/span&gt;], 0.1921975 secs] [Times: user&lt;/span&gt;=&lt;span&gt;1.03&lt;/span&gt; sys=&lt;span&gt;0.00&lt;/span&gt;, real=&lt;span&gt;0.19&lt;/span&gt; secs] &lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里的内容，我们也是一个一个解析：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;2022&lt;/span&gt;-&lt;span&gt;08&lt;/span&gt;-&lt;span&gt;05&lt;/span&gt;T20:&lt;span&gt;24&lt;/span&gt;:&lt;span&gt;47.815&lt;/span&gt;+&lt;span&gt;0800&lt;/span&gt;:&lt;br/&gt;&lt;span&gt;6.955&lt;/span&gt;: 刚启动服务就Full GC【整堆回收！！】&lt;br/&gt;&lt;br/&gt;[&lt;span&gt;Full &lt;span&gt;GC&lt;/span&gt; &lt;span&gt;(Metadata GC Threshold)&lt;/span&gt; Metaspace空间超限！&lt;br/&gt;[PSYoungGen: 701K-&amp;gt;0&lt;span&gt;K&lt;/span&gt;&lt;span&gt;(&lt;span&gt;72704&lt;/span&gt;K)&lt;/span&gt;] 年轻代没有回收空间&lt;br/&gt;[ParOldGen: 38678K-&amp;gt;35960&lt;span&gt;K&lt;/span&gt;&lt;span&gt;(&lt;span&gt;175104&lt;/span&gt;K)&lt;/span&gt;] 39380K-&amp;gt;35960&lt;span&gt;K&lt;/span&gt;&lt;span&gt;(&lt;span&gt;247808&lt;/span&gt;K)&lt;/span&gt;, 老年代也没有到阈值，整堆更没有到阈值&lt;br/&gt;[Metaspace: 56706K-&amp;gt;56706&lt;span&gt;K&lt;/span&gt;&lt;span&gt;(&lt;span&gt;1099776&lt;/span&gt;K)&lt;/span&gt;], 0.1921975 secs]&lt;br/&gt;[Times: user&lt;/span&gt;=&lt;span&gt;1.03&lt;/span&gt;本次GC消耗CPU的时间 sys=&lt;span&gt;0.00&lt;/span&gt;系统暂停时间, real=&lt;span&gt;0.19&lt;/span&gt; secs实际应用暂停时间] &lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;看到这里，有些哥们就会说，这么看，也太恶心了吧，密密麻麻的日志，看着头疼！！！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那么接下来我们来学一个GC日志可视化工具&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;GC日志可视化分析&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;分析GC日志，就必须让GC日志输出到一个文件中，然后使用GC日志分析工具（&lt;span&gt;gceasy.io&lt;/span&gt;：&lt;code&gt;https://gceasy.io/&lt;/code&gt;) 进行分析&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.46510416666666665&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/19cc2hfD2rD74nX01ONhAWdK2Hh8GrCYv9jjupRxbiafjibCzulMmIjcwKfCzFXc3bxKeV8DZ2KHWM6X8MggdL9w/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1920&quot;/&gt;&lt;figcaption&gt;GC日志可视化分析&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里分析完之后，可以下载分析报告&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.26670910248249524&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/19cc2hfD2rD74nX01ONhAWdK2Hh8GrCYTGjvMqT59Z0NMzQiaEdSrpXmjvDtDL6eVHFT9yBLDt9ELN3P7Gxbu3g/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1571&quot;/&gt;&lt;figcaption&gt;下载分析报告&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;JVM内存占用情况&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.38052530429212045&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/19cc2hfD2rD74nX01ONhAWdK2Hh8GrCYnRp7RJRZ4VxVJjfEJiaaibWiciatt3OsghIm3SIsqt1wnHToluuHto7ITg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1561&quot;/&gt;&lt;figcaption&gt;JVM内存占用情况&lt;/figcaption&gt;&lt;/figure&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Generation【区域】&lt;/th&gt;&lt;th&gt;Allocated【最大值】&lt;/th&gt;&lt;th&gt;Peak【占用峰值】&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;Young Generation【年轻代】&lt;/td&gt;&lt;td&gt;74.5 mb&lt;/td&gt;&lt;td&gt;74.47 mb&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Old Generation【老年轻代】&lt;/td&gt;&lt;td&gt;171 mb&lt;/td&gt;&lt;td&gt;95.62 mb&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Meta Space【元空间】&lt;/td&gt;&lt;td&gt;1.05 gb&lt;/td&gt;&lt;td&gt;55.38 mb&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Young + Old + Meta space【整体】&lt;/td&gt;&lt;td&gt;1.3 gb&lt;/td&gt;&lt;td&gt;212.64 mb&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;关键性能指标&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4788273615635179&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/19cc2hfD2rD74nX01ONhAWdK2Hh8GrCYWDJQEyiaKMrlLe8RbpT82pMQQLCOwwyyIq7Oss3WicUPdICaj3NLibmSg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1535&quot;/&gt;&lt;figcaption&gt;关键性能指标&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1 、&lt;span&gt;吞吐量&lt;/span&gt;：百分比越高表明GC开销越低。这个指标反映了JVM的吞吐量。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2 、&lt;span&gt;GC 延迟&lt;/span&gt;：&lt;span&gt;Latency&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Avg Pause GC Time&lt;/code&gt;：&lt;span&gt;7.80 ms&lt;/span&gt; 平均GC暂停时间&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Max Pause GC Time&lt;/code&gt;：&lt;span&gt;190 ms&lt;/span&gt; 最大GC暂停时间&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;GC 可视化交互聚合结果&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.48152948801036943&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/19cc2hfD2rD74nX01ONhAWdK2Hh8GrCYoXuAcg8KM3Y3TIl4U2X0zJx2jK8EqlmiaCscIxQZRh5eicOickhAhLoqw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1543&quot;/&gt;&lt;figcaption&gt;可视化交互聚合结果&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由上图可以看到，发生了3次full gc&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;存在问题：一开始就发生了 3 次full gc , 很明显不太正常；&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;GC 统计&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6587755102040816&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/19cc2hfD2rD74nX01ONhAWdK2Hh8GrCYBDgk3sciazsSia7olyERiaGDUnbOmKKxIZWibXE0ibq5Yq9NX4ROZPRbdfw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1225&quot;/&gt;&lt;figcaption&gt;GC 统计&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;GC Statistics&lt;/span&gt;：GC统计&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由上图可以得到，发生gc的总次数，young gc，full gc的统计，gc 暂停时间统计。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;GC原因&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3652230122818358&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/19cc2hfD2rD74nX01ONhAWdK2Hh8GrCYdsCZD7IM039iahHlAibxQBibcDfmUmwScrnmEvhjITfsSLpP9MgxLKCbA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1547&quot;/&gt;&lt;figcaption&gt;GC原因&lt;/figcaption&gt;&lt;/figure&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;原因&lt;/th&gt;&lt;th&gt;次数&lt;/th&gt;&lt;th&gt;平均时间&lt;/th&gt;&lt;th&gt;最大时间&lt;/th&gt;&lt;th&gt;总耗时&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;Metadata GC Threshold&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;43.3 ms&lt;/td&gt;&lt;td&gt;190 ms&lt;/td&gt;&lt;td&gt;260 ms&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Allocation Failure&lt;/td&gt;&lt;td&gt;53&lt;/td&gt;&lt;td&gt;3.77 ms&lt;/td&gt;&lt;td&gt;10.0 ms&lt;/td&gt;&lt;td&gt;200 ms&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里对这些原因解析一下：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Metadata GC Threshold&lt;/span&gt;：元空间超阈值&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Allocation Failure&lt;/span&gt; ：年轻代空间不足&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里补充一个原因，本案例还没出现的：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Ergonomics&lt;/span&gt;：译文是“人体工程学”，GC中的Ergonomics含义是负责自动调解gc暂停时间和吞吐量之间平衡从而产生的GC。&lt;span&gt;关注公众号：&lt;/span&gt;&lt;span&gt;码猿技术专栏，回复关键词 1111 获取阿里内部java性能调优手册；&lt;/span&gt;目的是使得虚拟机性能更好的一种做法。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由此可见，通过可视化的工具，可以快速的帮我们分析GC的日志。我们得善于利用工具。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;因为gc的日志文件，内容太多，都是密密麻麻的数字，文本。看得实在是头疼。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有了&lt;span&gt;gc easy&lt;/span&gt;可视化工具，而且还是在线的，十分的方便。&lt;span&gt;GC日志分析是免费的&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由于jvm调优实践的分析，篇幅比较长，所以今天就先到这里，剩下的留着下次分享了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;来源：https://juejin.cn/post/7128377003224334373&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>eb1259915ce5721847a9035e648ad226</guid>
<title>一万字带你入门 Activiti 工作流，通俗易懂</title>
<link>https://toutiao.io/k/fdxklic</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content js_underline_content             autoTypeSetting24psection&amp;#10;            &quot; id=&quot;js_content&quot;&gt;&lt;section data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;strong&gt;&lt;span&gt;&lt;span/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;👇推荐大家关注一个公众号👇&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;mp-common-profile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-weui-theme=&quot;light&quot; data-id=&quot;MzIzNjM3MDEyMg==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/sz_mmbiz_png/gHvX5TiczgWlCsOPBib3qa34WKGOy72FcvqTvt9icWjB0223JqDtJtD25EmBcaFxlJJ8P2r6KEADI3KYw7H1zuMRg/0?wx_fmt=png&quot; data-nickname=&quot;顶级架构师&quot; data-alias=&quot;TopFramework&quot; data-signature=&quot;顶级架构师，专注分享架构技术干货，企业架构、系统架构、网站架构、大规模分布式架构、高可用架构等架构讨论，以及结合互联网技术的架构调整。欢迎有想法、乐于分享的架构师朋友们交流学习。&quot; data-from=&quot;0&quot; data-is_biz_ban=&quot;0&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;点击上方 &quot;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI5ODI5NDkxMw==&amp;amp;mid=2247490920&amp;amp;idx=2&amp;amp;sn=84fa3d94375cac784eeb24472f885020&amp;amp;chksm=eca95686dbdedf90db774b5e1b09caaffbb95e72513a579a5c37c16325ccde7e1d75f0a4e736&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;编程技术圈&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;编程技术圈&lt;/a&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&quot;关注, &lt;span&gt;星标或置顶一起成长&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;后台回复“&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;大礼包&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;”有惊喜礼包！&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;figure&gt;&lt;figure&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;每&lt;/strong&gt;&lt;strong&gt;日英文&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Sometime you just have to hold your head up high, blink away the tears and say good-bye. &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;有时候，我们只需高高地扬起头，甩掉泪水，跟过去说再见。&lt;/span&gt; &lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;每日掏心话&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;你一定得认识到自己想往哪个方向发展，然后一定要对准那个方向出发，要马上。你再也浪费不起多一秒的时间了，你浪费不起。&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/figure&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span&gt;责编：乐乐 | 来&lt;/span&gt;&lt;span&gt;自：&lt;span&gt;blog.csdn.net/Mr_97xu/article/details/112899079&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI5ODI5NDkxMw==&amp;amp;mid=2247489132&amp;amp;idx=1&amp;amp;sn=c15c4bf118abad5bea9afc287585f760&amp;amp;chksm=eca95d82dbded494d33755649ad9879e32a3fe8b287cb2ecadb173238aa4ac65df3b6cf16aa7&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;程序员小乐(ID:study_tech)第 918 次推文  图源：百度&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;编程技术圈(ID:study_tech)&lt;/a&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI5ODI5NDkxMw==&amp;amp;mid=2247489132&amp;amp;idx=1&amp;amp;sn=c15c4bf118abad5bea9afc287585f760&amp;amp;chksm=eca95d82dbded494d33755649ad9879e32a3fe8b287cb2ecadb173238aa4ac65df3b6cf16aa7&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;程序员小乐(ID:study_tech)第 918 次推文  图源：百度&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;第 1790&lt;/a&gt; &lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI5ODI5NDkxMw==&amp;amp;mid=2247489132&amp;amp;idx=1&amp;amp;sn=c15c4bf118abad5bea9afc287585f760&amp;amp;chksm=eca95d82dbded494d33755649ad9879e32a3fe8b287cb2ecadb173238aa4ac65df3b6cf16aa7&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;程序员小乐(ID:study_tech)第 918 次推文  图源：百度&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;期推文&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;figure&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;figure&gt;&lt;p&gt;&lt;span&gt;往日回顾：&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI5ODI5NDkxMw==&amp;amp;mid=2247627522&amp;amp;idx=1&amp;amp;sn=9f65677c9717af6159c265b000acfbb3&amp;amp;chksm=eca4b8ecdbd331fadbd789904572b3a0192239109aa1506504c2351939d957e54a3984f8eeb5&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;刘强东分享感染新冠经历！王石也发声&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;刘强东分享感染新冠经历！王石也发声&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;figure&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;figure&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;figure&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;figure&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;figure&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;figure&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;figure&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;figure&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;figure&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;figure&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;figure&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;figure&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;figure&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;figure&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;figure&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;figure&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;figure&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;figure&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>d1438a6129ad246fb3f647567c83d5bc</guid>
<title>精华！Docker 常用命令大全</title>
<link>https://toutiao.io/k/9d6keqh</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p cid=&quot;n9&quot; mdtype=&quot;paragraph&quot;&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;容器生命周期管理命令&lt;/span&gt;&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;run&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;创建一个新的容器。&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;# 使用docker镜像nginx:latest以后台模式启动一个容器,&lt;/span&gt;&lt;span&gt;# 并将容器命名为mynginx。  &lt;/span&gt;docker run --name mynginx -d nginx:latest  &lt;span&gt;# 使用镜像 nginx:latest，以后台模式启动一个容器,&lt;/span&gt;&lt;span&gt;# 将容器的 80 端口映射到主机的 80 端口,&lt;/span&gt;&lt;span&gt;# 主机的目录 /data 映射到容器的 /data。  &lt;/span&gt;docker run -p &lt;span&gt;80&lt;/span&gt;:&lt;span&gt;80&lt;/span&gt; -v /data:/data -d nginx:latest  &lt;span&gt;# 使用镜像nginx:latest以交互模式启动一个容器,&lt;/span&gt;&lt;span&gt;# 在容器内执行/bin/bash命令。  &lt;/span&gt;docker run -it nginx:latest /bin/bash  &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;start/stop/restart&lt;/span&gt;&lt;/h3&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;docker start&lt;/strong&gt; : 启动一个或多个已经被停止的容器。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;docker stop&lt;/strong&gt; : 停止一个运行中的容器。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;docker restart&lt;/strong&gt; : 重启容器。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;# 启动已被停止的容器mynginx  &lt;/span&gt;docker start mynginx  &lt;span&gt;# 停止运行中的容器mynginx  &lt;/span&gt;docker stop mynginx  &lt;span&gt;# 重启容器mynginx  &lt;/span&gt;docker restart mynginx  &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;kill&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;杀掉一个运行中的容器。可选参数：&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;# 根据容器名字杀掉容器  &lt;/span&gt;docker kill tomcat7  &lt;span&gt;# 根据容器ID杀掉容器  &lt;/span&gt;docker kill &lt;span&gt;65&lt;/span&gt;d4a94f7a39  &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;rm&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;删除一个或多个容器。&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;# 强制删除容器 db01、db02：  &lt;/span&gt;docker rm -f db01 db02  &lt;span&gt;# 删除容器 nginx01, 并删除容器挂载的数据卷：  &lt;/span&gt;docker rm -v nginx01  &lt;span&gt;# 删除所有已经停止的容器：  &lt;/span&gt;docker rm $(docker ps -a -q)  &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;create&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;创建一个新的容器但不启动它。&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;# 使用docker镜像nginx:latest创建一个容器,并将容器命名为mynginx  &lt;/span&gt;docker create --name mynginx nginx:latest     &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;exec&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;在运行的容器中执行命令。可选参数：&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;-d :&lt;/strong&gt; 分离模式: 在后台运行&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;-i :&lt;/strong&gt; 即使没有附加也保持STDIN 打开&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;-t :&lt;/strong&gt; 分配一个伪终端&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;# 在容器 mynginx 中以交互模式执行容器内 /root/nginx.sh 脚本  &lt;/span&gt;docker &lt;span&gt;exec&lt;/span&gt; -it mynginx /bin/sh /root/nginx.sh  &lt;span&gt;# 在容器 mynginx 中开启一个交互模式的终端  &lt;/span&gt;docker &lt;span&gt;exec&lt;/span&gt; -i -t  mynginx /bin/bash  &lt;span&gt;# 也可以通过 docker ps -a 命令查看已经在运行的容器，然后使用容器 ID 进入容器。  &lt;/span&gt;docker ps -a   docker &lt;span&gt;exec&lt;/span&gt; -it &lt;span&gt;9&lt;/span&gt;df70f9a0714 /bin/bash  &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;pause/unpause&lt;/span&gt;&lt;/h3&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;docker pause&lt;/strong&gt; :暂停容器中所有的进程。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;docker unpause&lt;/strong&gt; :恢复容器中所有的进程。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;# 暂停数据库容器db01提供服务。  &lt;/span&gt;docker pause db01  &lt;span&gt;# 恢复数据库容器 db01 提供服务  &lt;/span&gt;docker unpause db0  &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;容器操作命令&lt;/span&gt;&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;ps&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;列出容器。可选参数：&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;-a :&lt;/strong&gt; 显示所有的容器，包括未运行的。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;-f :&lt;/strong&gt; 根据条件过滤显示的内容。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;–format :&lt;/strong&gt; 指定返回值的模板文件。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;-l :&lt;/strong&gt; 显示最近创建的容器。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;-n :&lt;/strong&gt; 列出最近创建的n个容器。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;–no-trunc :&lt;/strong&gt; 不截断输出。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;-q :&lt;/strong&gt; 静默模式，只显示容器编号。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;-s :&lt;/strong&gt; 显示总的文件大小。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;# 列出所有在运行的容器信息。  &lt;/span&gt;docker ps  &lt;span&gt;# 列出最近创建的5个容器信息。  &lt;/span&gt;docker ps -n &lt;span&gt;5&lt;/span&gt;  &lt;span&gt;# 列出所有创建的容器ID。  &lt;/span&gt;docker ps -a -q  &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;span&gt;补充说明：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;容器的7种状态：created（已创建）、restarting（重启中）、running（运行中）、removing（迁移中）、paused（暂停）、exited（停止）、dead（死亡）。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;inspect&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;获取容器/镜像的元数据。可选参数：&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;-f :&lt;/strong&gt; 指定返回值的模板文件。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;-s :&lt;/strong&gt; 显示总的文件大小。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;–type :&lt;/strong&gt; 为指定类型返回JSON。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;# 获取镜像mysql:5.7的元信息。  &lt;/span&gt;docker inspect mysql:&lt;span&gt;5.7&lt;/span&gt;  &lt;span&gt;# 获取正在运行的容器mymysql的 IP。  &lt;/span&gt;docker inspect --format=&lt;span&gt;&#x27;{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}&#x27;&lt;/span&gt; mymysql  &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;top&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;查看容器中运行的进程信息，支持 ps 命令参数。&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;# 查看容器mymysql的进程信息。  &lt;/span&gt;docker top mymysql  &lt;span&gt;# 查看所有运行容器的进程信息。  &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; i &lt;span&gt;in&lt;/span&gt;  `docker ps |grep Up|awk &lt;span&gt;&#x27;{print $1}&#x27;&lt;/span&gt;`;do echo \ &amp;amp;&amp;amp;docker top $i; done  &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;events&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;获取实时事件。参数说明：&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;-f ：&lt;/strong&gt; 根据条件过滤事件；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;–since ：&lt;/strong&gt; 从指定的时间戳后显示所有事件；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;–until ：&lt;/strong&gt; 流水时间显示到指定的时间为止；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;# 显示docker 2016年7月1日后的所有事件。  &lt;/span&gt;docker events  --since=&lt;span&gt;&quot;1467302400&quot;&lt;/span&gt;  &lt;span&gt;# 显示docker 镜像为mysql:5.6 2016年7月1日后的相关事件。  &lt;/span&gt;docker events -f &lt;span&gt;&quot;image&quot;&lt;/span&gt;=&lt;span&gt;&quot;mysql:5.6&quot;&lt;/span&gt; --since=&lt;span&gt;&quot;1467302400&quot;&lt;/span&gt;   &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;span&gt;说明：如果指定的时间是到秒级的，需要将时间转成时间戳。如果时间为日期的话，可以直接使用，如–since=“2016-07-01”。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;logs&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;获取容器的日志。参数说明：&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;-f :&lt;/strong&gt; 跟踪日志输出&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;–since :&lt;/strong&gt; 显示某个开始时间的所有日志&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;-t :&lt;/strong&gt; 显示时间戳&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;–tail :&lt;/strong&gt; 仅列出最新N条容器日志&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;# 跟踪查看容器mynginx的日志输出。  &lt;/span&gt;docker logs -f mynginx  &lt;span&gt;# 查看容器mynginx从2016年7月1日后的最新10条日志。  &lt;/span&gt;docker logs --since=&lt;span&gt;&quot;2016-07-01&quot;&lt;/span&gt; --tail=&lt;span&gt;10&lt;/span&gt; mynginx  &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;export&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;将文件系统作为一个tar归档文件导出到STDOUT。参数说明：&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;# 将id为a404c6c174a2的容器按日期保存为tar文件。  &lt;/span&gt;docker export -o mysql-`date +%Y%m%d`.tar a404c6c174a2  ls mysql-`date +%Y%m%d`.tar  &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;port&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;列出指定的容器的端口映射。&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;# 查看容器mynginx的端口映射情况。  &lt;/span&gt;docker port mymysql  &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;容器rootfs命令&lt;/span&gt;&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;commit&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;从容器创建一个新的镜像。参数说明：&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;-a :&lt;/strong&gt; 提交的镜像作者；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;-c :&lt;/strong&gt; 使用Dockerfile指令来创建镜像；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;-m :&lt;/strong&gt; 提交时的说明文字；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;-p :&lt;/strong&gt; 在commit时，将容器暂停。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;# 将容器a404c6c174a2 保存为新的镜像,&lt;/span&gt;&lt;span&gt;# 并添加提交人信息和说明信息。  &lt;/span&gt;docker commit -a &lt;span&gt;&quot;guodong&quot;&lt;/span&gt; -m &lt;span&gt;&quot;my db&quot;&lt;/span&gt; a404c6c174a2  mymysql:v1   &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;cp&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;用于容器与主机之间的数据拷贝。参数说明：&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;# 将主机/www/runoob目录拷贝到容器96f7f14e99ab的/www目录下。  &lt;/span&gt;docker cp /www/runoob &lt;span&gt;96&lt;/span&gt;f7f14e99ab:/www/  &lt;span&gt;# 将主机/www/runoob目录拷贝到容器96f7f14e99ab中，目录重命名为www。  &lt;/span&gt;docker cp /www/runoob &lt;span&gt;96&lt;/span&gt;f7f14e99ab:/www  &lt;span&gt;# 将容器96f7f14e99ab的/www目录拷贝到主机的/tmp目录中。  &lt;/span&gt;docker cp  &lt;span&gt;96&lt;/span&gt;f7f14e99ab:/www /tmp/  &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;diff&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;检查容器里文件结构的更改。&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;# 查看容器mymysql的文件结构更改。  &lt;/span&gt;docker diff mymysql  &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;镜像仓库命令&lt;/span&gt;&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;login/logout&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;docker login :&lt;/strong&gt; 登陆到一个Docker镜像仓库，如果未指定镜像仓库地址，默认为官方仓库 Docker Hub&lt;strong&gt;docker logout :&lt;/strong&gt;登出一个Docker镜像仓库，如果未指定镜像仓库地址，默认为官方仓库 Docker Hub参数说明：&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;# 登陆到Docker Hub  &lt;/span&gt;docker login -u 用户名 -p 密码  &lt;span&gt;# 登出Docker Hub  &lt;/span&gt;docker logout  &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;pull&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;从镜像仓库中拉取或者更新指定镜像。参数说明：&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;-a :&lt;/strong&gt; 拉取所有 tagged 镜像&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;–disable-content-trust :&lt;/strong&gt; 忽略镜像的校验,默认开启&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;# 从Docker Hub下载java最新版镜像。  &lt;/span&gt;docker pull java  &lt;span&gt;# 从Docker Hub下载REPOSITORY为java的所有镜像。  &lt;/span&gt;docker pull -a java  &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;push&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;将本地的镜像上传到镜像仓库,要先登陆到镜像仓库。参数说明：&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;–disable-content-trust :&lt;/strong&gt; 忽略镜像的校验,默认开启&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;# 上传本地镜像myapache:v1到镜像仓库中。  &lt;/span&gt;docker push myapache:v1  &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;search&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;从Docker Hub查找镜像。参数说明：&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;–automated :&lt;/strong&gt; 只列出 automated build类型的镜像；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;–no-trunc :&lt;/strong&gt; 显示完整的镜像描述；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;-f \&amp;lt;过滤条件&amp;gt;:&lt;/strong&gt; 列出指定条件的镜像。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;# 从 Docker Hub 查找所有镜像名包含 java，并且收藏数大于 10 的镜像  &lt;/span&gt;docker search -f stars=&lt;span&gt;10&lt;/span&gt; java  NAME                  DESCRIPTION                           STARS   OFFICIAL   AUTOMATED  java                  Java &lt;span&gt;is&lt;/span&gt; a concurrent, &lt;span&gt;&lt;span&gt;class&lt;/span&gt;-&lt;span&gt;based&lt;/span&gt;...   1037    [&lt;span&gt;OK&lt;/span&gt;]         &lt;span&gt;anapsix&lt;/span&gt;/&lt;span&gt;alpine&lt;/span&gt;-&lt;span&gt;java&lt;/span&gt;   &lt;span&gt;Oracle&lt;/span&gt; &lt;span&gt;Java&lt;/span&gt; 8 &lt;span&gt;(and &lt;span&gt;7&lt;/span&gt;)&lt;/span&gt; &lt;span&gt;with&lt;/span&gt; &lt;span&gt;GLIBC&lt;/span&gt; ...   115                [&lt;span&gt;OK&lt;/span&gt;]  &lt;span&gt;develar&lt;/span&gt;/&lt;span&gt;java&lt;/span&gt;                                                 46                 [&lt;span&gt;OK&lt;/span&gt;]  &lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;每列参数说明：&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;NAME:&lt;/strong&gt; 镜像仓库源的名称&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;DESCRIPTION:&lt;/strong&gt; 镜像的描述&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;OFFICIAL:&lt;/strong&gt; 是否 docker 官方发布&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;stars:&lt;/strong&gt; 类似 Github 里面的 star，表示点赞、喜欢的意思&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;另外搜索公众号GitHub猿后台回复“赚钱”，获取一份惊喜礼包。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;AUTOMATED:&lt;/strong&gt; 自动构建&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;本地镜像管理命令&lt;/span&gt;&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;images&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;列出本地镜像。参数说明：&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;-a :&lt;/strong&gt; 列出本地所有的镜像（含中间映像层，默认情况下，过滤掉中间映像层）；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;–digests :&lt;/strong&gt; 显示镜像的摘要信息；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;-f :&lt;/strong&gt; 显示满足条件的镜像；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;–format :&lt;/strong&gt; 指定返回值的模板文件；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;–no-trunc :&lt;/strong&gt; 显示完整的镜像信息；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;-q :&lt;/strong&gt; 只显示镜像ID。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;# 查看本地镜像列表。  &lt;/span&gt;docker images  &lt;span&gt;# 列出本地镜像中REPOSITORY为ubuntu的镜像列表。  &lt;/span&gt;docker images  ubuntu  &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;rmi&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;删除本地一个或多个镜像。参数说明：&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;-f :&lt;/strong&gt; 强制删除；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;–no-prune :&lt;/strong&gt; 不移除该镜像的过程镜像，默认移除；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;另外，搜索公众号Linux就该这样学后台回复“Linux”，获取一份惊喜礼包。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;# 强制删除本地镜像 guodong/ubuntu:v4。  &lt;/span&gt;docker rmi -f guodong/ubuntu:v4  &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;tag&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;标记本地镜像，将其归入某一仓库。&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;# 将镜像ubuntu:15.10标记为 runoob/ubuntu:v3 镜像。  &lt;/span&gt;docker tag ubuntu:&lt;span&gt;15.10&lt;/span&gt; runoob/ubuntu:v3  &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;build&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;用于使用 Dockerfile 创建镜像。参数说明：&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;–build-arg=[] :&lt;/strong&gt; 设置镜像创建时的变量；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;–cpu-shares :&lt;/strong&gt; 设置 cpu 使用权重；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;–cpu-period :&lt;/strong&gt; 限制 CPU CFS周期；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;–cpu-quota :&lt;/strong&gt; 限制 CPU CFS配额；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;–cpuset-cpus :&lt;/strong&gt; 指定使用的CPU id；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;–cpuset-mems :&lt;/strong&gt; 指定使用的内存 id；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;–disable-content-trust :&lt;/strong&gt; 忽略校验，默认开启；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;-f :&lt;/strong&gt; 指定要使用的Dockerfile路径；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;–force-rm :&lt;/strong&gt; 设置镜像过程中删除中间容器；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;–isolation :&lt;/strong&gt; 使用容器隔离技术；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;–label=[] :&lt;/strong&gt; 设置镜像使用的元数据；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;-m :&lt;/strong&gt; 设置内存最大值；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;–memory-swap :&lt;/strong&gt; 设置Swap的最大值为内存+swap，&quot;-1&quot;表示不限swap；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;–no-cache :&lt;/strong&gt; 创建镜像的过程不使用缓存；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;–pull :&lt;/strong&gt; 尝试去更新镜像的新版本；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;–quiet, -q :&lt;/strong&gt; 安静模式，成功后只输出镜像 ID；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;–rm :&lt;/strong&gt; 设置镜像成功后删除中间容器；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;–shm-size :&lt;/strong&gt; 设置/dev/shm的大小，默认值是64M；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;–ulimit :&lt;/strong&gt; Ulimit配置。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;–squash :&lt;/strong&gt; 将 Dockerfile 中所有的操作压缩为一层。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;–tag, -t:&lt;/strong&gt; 镜像的名字及标签，通常 name:tag 或者 name 格式；可以在一次构建中为一个镜像设置多个标签。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;–network:&lt;/strong&gt; 默认 default。在构建期间设置RUN指令的网络模式&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;# 使用当前目录的 Dockerfile 创建镜像，标签为 runoob/ubuntu:v1  &lt;/span&gt;docker build -t runoob/ubuntu:v1 .   &lt;span&gt;# 使用URL github.com/creack/docker-firefox 的 Dockerfile 创建镜像  &lt;/span&gt;docker build github.com/creack/docker-firefox  &lt;span&gt;# 通过 -f Dockerfile文件的位置 创建镜像  &lt;/span&gt;docker build -f /path/to/a/Dockerfile .  &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;history&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;查看指定镜像的创建历史。参数说明：&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;-H :&lt;/strong&gt; 以可读的格式打印镜像大小和日期，默认为true；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;–no-trunc :&lt;/strong&gt; 显示完整的提交记录；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;-q :&lt;/strong&gt; 仅列出提交记录ID。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;# 查看本地镜像 guodong/ubuntu:v3 的创建历史。  &lt;/span&gt;docker history guodong/ubuntu:v3  &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;save&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;将指定镜像保存成 tar 归档文件。参数说明：&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;# 将镜像 runoob/ubuntu:v3 生成 my_ubuntu_v3.tar 文档  &lt;/span&gt;docker save -o my_ubuntu_v3.tar runoob/ubuntu:v3  &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;load&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;导入使用 &lt;/span&gt;&lt;code&gt;&lt;span&gt;docker save&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 命令导出的镜像。参数说明：&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;–input , -i :&lt;/strong&gt; 指定导入的文件，代替 STDIN。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;–quiet , -q :&lt;/strong&gt; 精简输出信息。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;# 导入镜像  &lt;/span&gt;docker load --input fedora.tar  &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;import&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;从归档文件中创建镜像。参数说明：&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;-c :&lt;/strong&gt; 应用docker 指令创建镜像；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;-m :&lt;/strong&gt; 提交时的说明文字；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;# 从镜像归档文件my_ubuntu_v3.tar创建镜像，命名为runoob/ubuntu:v4  &lt;/span&gt;docker &lt;span&gt;import&lt;/span&gt;  my_ubuntu_v3.tar runoob/ubuntu:v4    &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;基础版本信息命令&lt;/span&gt;&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;info&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;显示 Docker 系统信息，包括镜像和容器数。&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;# 查看docker系统信息。  &lt;/span&gt;docker info  &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;version&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;显示 Docker 版本信息。&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;docker version  &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>