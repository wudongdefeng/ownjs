<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>fb32caecace2cbcefcb9af82187c7d28</guid>
<title>为啥我的代码库那么大？聊聊 Git 使用坏习惯</title>
<link>https://toutiao.io/k/9c0wmix</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content js_underline_content              autoTypeSetting24psection&amp;#10;            &quot; id=&quot;js_content&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.625&quot; data-s=&quot;300,640&quot; data-type=&quot;jpeg&quot; data-w=&quot;1024&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Z6bicxIx5naIff4DEKMpQB8W0zJFKKmTEVciaeSfgHqNfRlEc8V60PvIsBGzPMcyZDo3cycLLmngeGRnicSWcp90g/640?wx_fmt=jpeg&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;阿里妹导读&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;本文作者用幽默又真实的文字总结了开发者日常工作中遇到的那些事儿。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;说点真实的&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;众所周知啊🤔，&lt;/span&gt;&lt;span&gt;很多公司的度量系统&lt;/span&gt;&lt;span&gt;可以展示你提交了多少次commit，以及每一次提交包含多少行代码。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;搞得部分兄弟一天可劲 add commit push。他那一个变更发上线，你打开Git Log，好家伙那一大串都是他。加加减减缝缝补补，最后一共改了&lt;strong&gt;20行代码，硬是刷出了200行的功德。&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;一串Git commit message如下：&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;AoneBuild Merge feautre/777_平台赋能牛逼新特性 to master&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Fix老板CR中建议&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;fix again&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;fix2&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;fix&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;save&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;update&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;new feature&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;典！典中典！&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;仿佛能看到他信心满满，直接发预发！一刷新， 哦豁，白屏！ &lt;br/&gt;哦忘了传这个了，fix，push，部署，玩手机，抬头一刷新，哦豁，白屏！&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.35&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;560&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Z6bicxIx5naIff4DEKMpQB8W0zJFKKmTEWwRic35wX86j3dUfichicibw7MwekHmebibCGOa0HiaOLoWTnRNygTb6IHuw/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;好活！&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;下次 OC 再搞脱口秀我提个节目！随机找几个这种上去对着这种 git log 现场即兴模仿表演。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;他们欢快而自信的时候，以及受痛苦和绝望所折磨的时候，生活中的痛苦和压迫会像血汗一样，一行行地全写在了他们的Git Log里。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;你们好不好奇， 一个代码库几百个文件，为啥能用一两个G？小小一个系统，下个代码都十几分钟？&lt;/span&gt;&lt;/section&gt;&lt;blockquote&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;部署和CI场景可以 depth=1 &lt;/span&gt;浅&lt;span&gt;克隆加速&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;完全没有意义的Git 提交历史，极速膨胀的代码库大小，混乱的分支关系。正在压死你的代码库和项目！&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;每一个程序员，在遇到一个可爱而热心的代码仓看门大爷前，都会随意的对待自己的commit，因为大家都这么做。没见过怎么best practice，所以就doesn&#x27;t matter。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;求求你们了！好好写你的Git commit message！squash你的 fixfixfix！删删你已经没用的分支！重构拆掉哪些超大文件和几万行的类！&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;让Git Log能做到写清楚你到底改了啥！而不是你的草纸！&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;阿里很多资深Coder都是野生哆啦A梦，技能树包括但不限于：&lt;/span&gt;&lt;/section&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;ol ne-level=&quot;1&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;手里维护的代码库，托前人的福，一堆方法 JsonObject 出入参，他能如特工，手持密码本相互通信。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;系统日志print全是不带id的sout，也能靠口袋里的见都没见过的神奇道具和监控线条里波纹感应定位故障源头。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;一个代码文件3万行，硬是一眼扫找出在哪儿再加个if else能5分钟hotfix一下线上Bug。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&quot;线上bug！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;很急，来不及加单测了，帮忙过一下！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;对代码系统机魂, 了如指掌，深谙取悦机魂之道。知道一些外人看来十分玄妙的独特逻辑。掌握很多，“&lt;strong&gt;又不是不能用，只是你不会用，要这么这么就能用”&lt;/strong&gt;的高级黑盒功能。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;&lt;p&gt;&lt;span&gt;虽然兄弟们这么用Git “&lt;strong&gt;又不是不能用&lt;/strong&gt;”，但是要我说 “&lt;strong&gt;那是你不会用&lt;/strong&gt;”，“&lt;strong&gt;要这么这么用&lt;/strong&gt;”&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;到这里，聪明的小朋友就要问了。为啥几百个文件，为啥能用一两个G呢？&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;Git的结构，图文实例解说&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;众所周知，Git 主要数据结构是一颗树，在你的.git文件夹里，结构是这样的。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.06851851851851852&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Z6bicxIx5naIff4DEKMpQB8W0zJFKKmTEd8vKjcgwf7sKFaMv1KZYNiaTOrapczdRibaCCYQF0OQpnc6PHmflzHWA/640?wx_fmt=png&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;.git文件内部结构&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;其中的 refs中保存有分支的信息。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5662650602409639&quot; data-type=&quot;png&quot; data-w=&quot;332&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Z6bicxIx5naIff4DEKMpQB8W0zJFKKmTERhibNHnSEhULPPHicx9o3ibBs3rqYlnbiaox5aaFkB2kZTQBcKPXolEtmA/640?wx_fmt=png&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;refs文件内部结构&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;其中的  &lt;/span&gt;&lt;span&gt;heads，本地分支，remotes，远程分支（用git fetch更新）&lt;/span&gt;&lt;span&gt;，&lt;/span&gt;&lt;span&gt; tags 不可变的版本指针，&lt;/span&gt;&lt;span&gt;他们都是指向一个commit的指针。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5116279069767442&quot; data-type=&quot;png&quot; data-w=&quot;602&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Z6bicxIx5naIff4DEKMpQB8W0zJFKKmTEnvZlsib8tjEZdqAmJ1S3Z16DoyibdUTmFjP1SGfVD7akHMbl6BA3Xhrw/640?wx_fmt=png&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;master的内容物&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;比如 这里， master，就是一个commit id。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;你可能注意到了，分支似乎不是一个分支一个文件的。而是按/分割，当成文件夹存储的。 &lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;比如feature是不是个分支？其实不是，假设 我新建一个名为 feature/newaCTO的分支，会在feature文件夹里建一个newaCTO, 而不是直接新建一个feature/newaCTO。&lt;/span&gt;&lt;/section&gt;&lt;blockquote&gt;&lt;section&gt;&lt;span&gt;小zips， linux文件系统中，文件与文件夹是不能重名的。 &lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;所以， 一旦谁建了一个叫做feature的分支。那么，在第一个小聪明删掉他之前。就没人能拉出任何feature/*的分支了。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;section&gt;&lt;span&gt;分支是指向commit的指针，那让我们更近一步， commit是啥呢？&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.20967741935483872&quot; data-type=&quot;png&quot; data-w=&quot;992&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Z6bicxIx5naIff4DEKMpQB8W0zJFKKmTERpZmgTRvk06HnnEBNF9rjSxv7f1QK0BUCEGiaO1072AjzqibuL3VviaiaQ/640?wx_fmt=png&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;master节点的详情&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;这是一个merge 节点。和普通的commit节点不同，merge节点有两个parent。&lt;/span&gt;&lt;/section&gt;&lt;blockquote&gt;&lt;section&gt;&lt;span&gt;除此之外，有author和committer， author是作者，committer是提交人。在本地开发中，这两者基本上是一样的。注意，这里使用的，是gitConfig中的name 和 email。&lt;/span&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;section&gt;&lt;span&gt;这里parent指向的是另一个commit， 典型的树状数据结构。&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;那么Tree中有什么呢。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6748582230623819&quot; data-type=&quot;png&quot; data-w=&quot;1058&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Z6bicxIx5naIff4DEKMpQB8W0zJFKKmTEd5d4QrHAcumKdvIOpWzicJa7ibeXbZR8AgzKjA3icziaeJfL6RwtqMSTGw/640?wx_fmt=png&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;tree的结构&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7597765363128491&quot; data-type=&quot;png&quot; data-w=&quot;1074&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Z6bicxIx5naIff4DEKMpQB8W0zJFKKmTEZZMeO5GxSZeSZLRCTezic4gFjGuNkXz5icfUfpWmcejs9qicCKkojO8Ug/640?wx_fmt=png&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;tree的详情&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;可以看到展示了一个列表，&lt;strong&gt;与GIt Log中展示不同， Tree里其实包含了完整的文件树&lt;/strong&gt;。树的末端，指向一个文件的oid。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;列表中四个字段分别是：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;1、mode：&lt;strong&gt; 权限&lt;/strong&gt;（chmod加的东西）&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;2、type：  &lt;strong&gt;类型&lt;/strong&gt;，&lt;/span&gt;&lt;span&gt;tree说明是文件夹，blob则是文件&lt;/span&gt;&lt;span&gt;，大部分情况下就是代码，也可能是图片或其他文件。&lt;/span&gt;&lt;/section&gt;&lt;blockquote&gt;&lt;section&gt;&lt;span&gt;游戏团队的代码库中就会包含很多美术素材图片。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;但是，Git不是文件存储系统，大文件建议使用Git LFS技术，上传OSS，Git仅管理文件链接。&lt;/span&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;section&gt;&lt;span&gt;3、revision（oid）：每当你提交commit时，你在这个commit中改动的文件，git会把文件的二进制数据加个信息头，然后算个hash，从而产生一个新的oid。然后这个commit会指向他。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;blockquote&gt;&lt;section&gt;&lt;span&gt;所以，每当你commit，就算提交一行的改动。就会存整个文件！（把代码文件，把类拆小点吧！不小心摸一下触摸板，代码就不知道去哪儿找了！）&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;span&gt;然后你在每一改个两行，就来个commit，存储膨胀能不快么！&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;就不谈没维护好 gitIgonre，胡乱git add .把编译文件，摸鱼刷的leetcode代码或者其他奇奇怪怪的东西提交到Git中的情况了。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;你可能会问，我这的文件已经都删掉了，为啥.git还有这么大？你们是不是有Bug？&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;因为Git会保存你历史的所有版本！&lt;strong&gt;除非没有一个任何一个commit指向这个blob&lt;/strong&gt;，才会成为游离节点，在Git Gc的时候被处理掉。&lt;/span&gt;&lt;/section&gt;&lt;blockquote&gt;&lt;section&gt;&lt;span&gt;当然Git也没那么呆，是可以存增量的。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;你在Git pc的时候会执行repack，repack会压缩一部分到增量，不过一般没人这么做，所以一般都是存了完整的离散文件。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;git gc是个好课题，存储未来可能可以智能化的全自动gc，但是现在还不行。&lt;/span&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;因此！&lt;/span&gt;&lt;span&gt;没事删删分支！&lt;/span&gt;&lt;span&gt;不小心提上来的大东西，得把对应的commit squash掉！&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;blockquote&gt;&lt;section&gt;&lt;span&gt;本地也可以允许git gc清理掉游离节点释放空间。&lt;/span&gt;&lt;span/&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;section&gt;&lt;span&gt;我们并不是说要squash到一个变更一个commit，或者一个feature分支就一个commit。&lt;/span&gt;&lt;span&gt;就像游戏存档一样。&lt;/span&gt;&lt;span&gt;你可以在关中频繁存档，但是一大关打完了，你可以存一个然后把关中的存档都删了。&lt;/span&gt;&lt;strong&gt; 只留关键节点&lt;/strong&gt;&lt;span&gt;，这样万一你后悔选了这条命运线，可以&lt;/span&gt;&lt;span&gt;读&lt;/span&gt;&lt;span&gt;档重来。&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;这也是为什么那些大库需要严格执行主干开发的原因。要是我们公司几万研发都用一个大库，还都是用Git记日记的憨批， 我觉得我们会被迫在存储技术上卷死OSS。坏了，顺手把多版本云盘做成主营业务了。以后新人来了先发一块移动硬盘好了， 微服务那么多系统，下代码不得先下个半个月？&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;总结&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;span&gt;一是&lt;strong&gt;git log和commit message是很重要的信息来源，要保持整洁，用的正确，这个比发布文档还清晰。&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;二是代码存储膨胀问题是很现实的， 随着系统发展，代码库一个G你还能下下，再大点咋办呢。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;blockquote&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;虽然我们存代码不收费，说到这儿dataworks的兄弟们可能有同感， 不要钱就使劲造，狠角色拿git当oss用的都有几个。&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;section&gt;&lt;span&gt;主要影响的，还是可见的未来，不治理的话，clone代码越来越慢。&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;Best practice：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;1、Code Owner要建立 &lt;strong&gt;代码库统一的commit messgae 格式规范&lt;/strong&gt;，例如 Feature(commit): write an article to introduce git&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;2、打完Boss，单测通过，squash掉你之前上厕所或者测试时候的commit！化零为整但也不要矫枉过正！团队应该根据自己业务情况探索&lt;strong&gt;合适commit的大小和规范。&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;3、&lt;strong&gt;重构掉“巨石类”！&lt;/strong&gt;他们早就不够内聚了！把能拆掉功能拆出来吧！我先替管存代码的那个亘古和其他用这个类的开发先感谢你！&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;4、&lt;strong&gt;大文件用Git LFS！&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;5、及时&lt;strong&gt;维护GitIgonre！&lt;/strong&gt;误提交的文件一定要清理掉！&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;6、用心维护主干分支的Git Log！让改动清晰可见！&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;7、删掉没用的分支！Later Equals Never！当机立断舍离！&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;8、&lt;strong&gt;Readme要持续更新！&lt;/strong&gt;怎么启动，格式规范都可以写在readme里！&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;Bad Practice: &lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;1、&lt;strong&gt;不要建 feature，release这两个分支&lt;/strong&gt;，虽然git没有保留关键字，但是后人发现为啥建不出来分支的时候肯定会问候你的。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;2、&lt;strong&gt;不要多分支并行开发的时候merge 来 merge去， git会脏合并&lt;/strong&gt;&lt;strong&gt;！&lt;/strong&gt; 保持提交历史干净简单！业务太复杂不行咱就上主干开发！&lt;/span&gt;&lt;span&gt;&lt;strong&gt;不要每次代码合并不符合预期就跑去找管代码的同学说Git丢代码，这种侦探服务的难度挺大的，在我建议按次收费！&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;mp-style-type data-value=&quot;3&quot;/&gt;&lt;/p&gt;&lt;/div&gt;

          
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>83dc4c2a07ab469610d132910dfdfb10</guid>
<title>分布式系统的负载均衡 | 架构干货</title>
<link>https://toutiao.io/k/io6730i</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;article-entry post-inner-html hairline&quot; itemprop=&quot;articleBody&quot;&gt;
            &lt;h2 id=&quot;一、-什么是负载均衡？&quot;&gt;&lt;a href=&quot;#一、-什么是负载均衡？&quot; class=&quot;headerlink&quot; title=&quot;一、 什么是负载均衡？&quot;/&gt;一、 什么是负载均衡？&lt;/h2&gt;&lt;p&gt;什么是负载均衡？&lt;/p&gt;
&lt;p&gt;记得第一次接触 Nginx 是在实验室，那时候在服务器部署网站需要用 Nginx 。Nginx 是一个服务组件，用来反向代理、负载平衡和 HTTP 缓存等。那么这里的 负载均衡 是什么？&lt;/p&gt;
&lt;p&gt;负载均衡（LB，Load Balance），是一种技术解决方案。用来在多个资源（一般是服务器）中分配负载，达到最优化资源使用，避免过载。&lt;/p&gt;
&lt;p&gt;资源，相当于每个服务实例的执行操作单元，负载均衡就是将大量的数据处理操作分摊到多个操作单元进行执行，用来解决互联网分布式系统的大流量、高并发和高可用的问题。那什么是高可用呢？&lt;/p&gt;
&lt;span id=&quot;more&quot;/&gt;


&lt;h2 id=&quot;二、什么是高可用？&quot;&gt;&lt;a href=&quot;#二、什么是高可用？&quot; class=&quot;headerlink&quot; title=&quot;二、什么是高可用？&quot;/&gt;二、什么是高可用？&lt;/h2&gt;&lt;p&gt;首先了解什么是高可用？&lt;/p&gt;
&lt;p&gt;这是 CAP 定理是分布式系统的基础，也是分布式系统的 3 个指标：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Consistency（一致性）&lt;/li&gt;
&lt;li&gt;Availability（可用性）&lt;/li&gt;
&lt;li&gt;Partition tolerance（分区容错性）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;那高可用（High Availability）是什么？高可用，简称 HA，是系统一种特征或者指标，通常是指，提供一定性能上的服务运行时间，高于平均正常时间段。反之，消除系统服务不可用的时间。&lt;/p&gt;
&lt;p&gt;衡量系统是否满足高可用，就是当一台或者多台服务器宕机的时候，系统整体和服务依然正常可用。&lt;/p&gt;
&lt;p&gt;举个例子，一些知名的网站保证 4 个 9 以上的可用性，也就是可用性超过 99.99%。那 0.01% 就是所谓故障时间的百分比。比如电商网站有赞，服务不可用会造成商家损失金钱和用户。那么在提高可用性基础上同时，对系统宕机和服务不可用会有补偿。&lt;/p&gt;
&lt;p&gt;比如下单服务，可以使用带有负载均衡的多个下单服务实例，代替单一的下单服务实例，即使用冗余的方式来提高可靠性。&lt;/p&gt;
&lt;p&gt;总而言之，负载均衡（Load Balance）是分布式系统架构设计中必须考虑的因素之一。一般通过负载均衡，冗余同一个服务实例的方式，解决分布式系统的大流量、高并发和高可用的问题。负载均衡核心关键：在于是否分配均匀。&lt;/p&gt;
&lt;h2 id=&quot;三、常见的负载均衡案例&quot;&gt;&lt;a href=&quot;#三、常见的负载均衡案例&quot; class=&quot;headerlink&quot; title=&quot;三、常见的负载均衡案例&quot;/&gt;三、常见的负载均衡案例&lt;/h2&gt;&lt;p&gt;场景1：微服务架构中，网关路由到具体的服务实例 hello：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;两个相同的服务实例 hello service ，一个端口 8000 ，另一个端口 8082&lt;/li&gt;
&lt;li&gt;通过 Kong 的负载均衡 LB 功能，让请求均匀的分发到两个 hello 服务实例&lt;/li&gt;
&lt;li&gt;Kong 的负载均衡策略算法很多：默认 weighted-round-robin 算法，还有 consumer: consumer id 作为 hash 算法输入值等&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;场景2：微服务架构中，A 服务调用 B 服务的集群。通过了 Ribbon 客户端负载均衡组件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;负载均衡策略算法并不高级，最简单的是随机选择和轮循&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;四、互联网分布式系统解决方案&quot;&gt;&lt;a href=&quot;#四、互联网分布式系统解决方案&quot; class=&quot;headerlink&quot; title=&quot;四、互联网分布式系统解决方案&quot;/&gt;四、互联网分布式系统解决方案&lt;/h2&gt;&lt;p&gt;常见的互联网分布式系统架构分为几层，一般如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;客户端层：比如用户浏览器、APP 端&lt;/li&gt;
&lt;li&gt;反向代理层：技术选型 Nignx 或者 F5 等&lt;/li&gt;
&lt;li&gt;Web 层：前后端分离场景下， Web 端可以用 NodeJS 、 RN 、Vue&lt;/li&gt;
&lt;li&gt;业务服务层：用 Java 、Go，一般互联网公司，技术方案选型就是 SC 或者 Spring Boot + Dubbo 服务化&lt;/li&gt;
&lt;li&gt;数据存储层：DB 选型 MySQL ，Cache 选型 Redis ，搜索选型 ES 等&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一个请求从第 1 层到第 4 层，层层访问都需要负载均衡。即每个上游调用下游多个业务方的时候，需要均匀调用。这样整体系统来看，就比较负载均衡&lt;/p&gt;
&lt;h3 id=&quot;第-1-层：客户端层-gt-反向代理层-的负载均衡&quot;&gt;&lt;a href=&quot;#第-1-层：客户端层-gt-反向代理层-的负载均衡&quot; class=&quot;headerlink&quot; title=&quot;第 1 层：客户端层 -&amp;gt; 反向代理层 的负载均衡&quot;/&gt;第 1 层：客户端层 -&amp;gt; 反向代理层 的负载均衡&lt;/h3&gt;&lt;p&gt;客户端层 -&amp;gt; 反向代理层的负载均衡如何实现呢？&lt;/p&gt;
&lt;p&gt;答案是：DNS 的轮询。 DNS 可以通过 A （Address，返回域名指向的 IP 地址）设置多个 IP 地址。比如这里访问 bysocket.com 的 DNS 配置了 ip1 和 ip2 。为了反向代理层的高可用，至少会有两条 A 记录。这样冗余的两个 ip 对应的 nginx 服务实例，防止单点故障。&lt;/p&gt;
&lt;p&gt;每次请求 bysocket.com 域名的时候，通过 DNS 轮询，返回对应的 ip 地址，每个 ip 对应的反向代理层的服务实例，也就是 nginx 的外网ip。这样可以做到每一个反向代理层实例得到的请求分配是均衡的。&lt;/p&gt;
&lt;h3 id=&quot;第-2-层：反向代理层-gt-Web-层-的负载均衡&quot;&gt;&lt;a href=&quot;#第-2-层：反向代理层-gt-Web-层-的负载均衡&quot; class=&quot;headerlink&quot; title=&quot;第 2 层：反向代理层 -&amp;gt; Web 层 的负载均衡&quot;/&gt;第 2 层：反向代理层 -&amp;gt; Web 层 的负载均衡&lt;/h3&gt;&lt;p&gt;反向代理层 -&amp;gt; Web 层 的负载均衡如何实现呢？&lt;/p&gt;
&lt;p&gt;是通过反向代理层的负载均衡模块处理。比如 nginx 有多种均衡方法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;请求轮询。请求按时间顺序，逐一分配到 web 层服务，然后周而复始。如果 web 层服务 down 掉，自动剔除&lt;/p&gt;
&lt;p&gt;upstream web-server {&lt;br/&gt;server ip3;&lt;br/&gt;server ip4;&lt;br/&gt;}&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ip 哈希。按照 ip 的哈希值，确定路由到对应的 web 层。只要是用户的 ip 是均匀的，那么请求到 Web 层也是均匀的。 还有个好处就是同一个 ip 的请求会分发到相同的 web 层服务。这样每个用户固定访问一个 web 层服务，可以解决 session 的问题。&lt;/p&gt;
&lt;p&gt;upstream web-server {&lt;br/&gt;ip_hash;&lt;br/&gt;server ip3;&lt;br/&gt;server ip4;&lt;br/&gt;}&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;weight 权重 、 fair、url_hash 等&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;第-3-层：Web-层-gt-业务服务层-的负载均衡&quot;&gt;&lt;a href=&quot;#第-3-层：Web-层-gt-业务服务层-的负载均衡&quot; class=&quot;headerlink&quot; title=&quot;第 3 层：Web 层 -&amp;gt; 业务服务层 的负载均衡&quot;/&gt;第 3 层：Web 层 -&amp;gt; 业务服务层 的负载均衡&lt;/h3&gt;&lt;p&gt;Web 层 -&amp;gt; 业务服务层 的负载均衡如何实现呢？&lt;/p&gt;
&lt;p&gt;比如 Dubbo 是一个服务治理方案，包括服务注册、服务降级、访问控制、动态配置路由规则、权重调节、负载均衡。其中一个特性就是智能负载均衡：内置多种负载均衡策略，智能感知下游节点健康状况，显著减少调用延迟，提高系统吞吐量。&lt;/p&gt;
&lt;p&gt;为了避免避免单点故障和支持服务的横向扩容，一个服务通常会部署多个实例，即 Dubbo 集群部署。会将多个服务实例成为一个服务提供方，然后根据配置的随机负载均衡策略，在20个 Provider 中随机选择了一个来调用，假设随机到了第7个 Provider。LoadBalance 组件从提供者地址列表中，使用均衡策略，选择选一个提供者进行调用，如果调用失败，再选另一台调用。&lt;/p&gt;
&lt;p&gt;Dubbo内置了4种负载均衡策略:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;RandomLoadBalance:随机负载均衡。随机的选择一个。是Dubbo的默认负载均衡策略。&lt;/li&gt;
&lt;li&gt;RoundRobinLoadBalance:轮询负载均衡。轮询选择一个。&lt;/li&gt;
&lt;li&gt;LeastActiveLoadBalance:最少活跃调用数，相同活跃数的随机。活跃数指调用前后计数差。使慢的 Provider 收到更少请求，因为越慢的 Provider 的调用前后计数差会越大。&lt;/li&gt;
&lt;li&gt;ConsistentHashLoadBalance:一致性哈希负载均衡。相同参数的请求总是落在同一台机器上。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;同样，因为业务的需要，也可以实现自己的负载均衡策略&lt;/p&gt;
&lt;h3 id=&quot;第-4-层：业务服务层-gt-数据存储层-的负载均衡&quot;&gt;&lt;a href=&quot;#第-4-层：业务服务层-gt-数据存储层-的负载均衡&quot; class=&quot;headerlink&quot; title=&quot;第 4 层：业务服务层 -&amp;gt; 数据存储层 的负载均衡&quot;/&gt;第 4 层：业务服务层 -&amp;gt; 数据存储层 的负载均衡&lt;/h3&gt;&lt;p&gt;数据存储层的负载均衡，一般通过 DBProxy 实现。比如 MySQL 分库分表。&lt;/p&gt;
&lt;p&gt;当单库或者单表访问太大，数据量太大的情况下，需要进行垂直拆分和水平拆分两个维度。比如水平切分规则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Range 、 时间&lt;/li&gt;
&lt;li&gt;hash 取模，订单根据店铺ID 等&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;但伴随着这块的负载会出现下面的问题，需要解决：&lt;/p&gt;

&lt;p&gt;现状分库分表的产品方案很多：当当 sharding-jdbc、阿里的 Cobar 等&lt;/p&gt;
&lt;h2 id=&quot;五、小结&quot;&gt;&lt;a href=&quot;#五、小结&quot; class=&quot;headerlink&quot; title=&quot;五、小结&quot;/&gt;五、小结&lt;/h2&gt;&lt;p&gt;对外看来，负载均衡是一个系统或软件的整体。对内看来，层层上下游调用。只要存在调用，就需要考虑负载均衡这个因素。所以负载均衡（Load Balance）是分布式系统架构设计中必须考虑的因素之一。考虑主要是如何让下游接收到的请求是均匀分布的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第 1 层：客户端层 -&amp;gt; 反向代理层 的负载均衡。通过 DNS 轮询&lt;/li&gt;
&lt;li&gt;第 2 层：反向代理层 -&amp;gt; Web 层 的负载均衡。通过 Nginx 的负载均衡模块&lt;/li&gt;
&lt;li&gt;第 3 层：Web 层 -&amp;gt; 业务服务层 的负载均衡。通过服务治理框架的负载均衡模块&lt;/li&gt;
&lt;li&gt;第 4 层：业务服务层 -&amp;gt; 数据存储层 的负载均衡。通过数据的水平分布，数据均匀了，理论上请求也会均匀。比如通过买家ID分片类似&lt;/li&gt;
&lt;/ul&gt;

        &lt;/div&gt;

    &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>86b5bab594fed1a879e49e1c00bcf7d8</guid>
<title>不可估「量」！量化模型数据集 OnnxQuant 开源，支持 55+ 经典模型，覆盖超多任务</title>
<link>https://toutiao.io/k/gvyn3tr</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content js_underline_content              autoTypeSetting24psection&amp;#10;            &quot; id=&quot;js_content&quot;&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;量化模型数据集 OnnxQuant 已开放下载！点击文末「阅读原文」直达链接🔗&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;神经网络量化是一项应用广泛，效果稳定的模型加速方法。为此我们设计了先进模型量化工具 &lt;/span&gt;&lt;span&gt;PPQ。&lt;/span&gt;&lt;span&gt;自 &lt;/span&gt;&lt;span&gt;2022 &lt;/span&gt;&lt;span&gt;年以来，我们与开源社区合作伙伴展开了深入的合作与交流，不断探索着神经网络量化部署的工业最佳实践。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;现在，我们将与开源伙伴一起，推出&lt;/span&gt;&lt;strong&gt;&lt;span&gt;当前规模最大的模型量化参考数据集 —— OnnxQuant&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.7777777777777777&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/xNm29D5VjShlMDImTxL8AARicn5WjAYJwsvmpGLiaLqL42Zibg50G8fVCOLvvaKYEjHy56ZY2DpIYS9SxpqrOe8LQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot;/&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;一、丰富的支持&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.02666666666666667&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JJtKEey0hPY533fpibxanI0U85VuicLBnicd9oVaZKApEJqUs2UFnKCgRiaNnvOKeq9HkibP18sxDSwNj7f7ffichBMA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;750&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;在 OnnxQuant 数据集中，我们囊括了视觉分类、图像超分辨率、图像-文字识别、目标检测、姿态关键点检测、图像分割等常见视觉任务，目前&lt;/span&gt;&lt;strong&gt;&lt;span&gt;共计提供 55 个经典模型&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;（还在快速建设当中）。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;凭借着量化工具 PPQ 的先进设计，在 OnnxQuant 中我们将可以一次性地探讨 &lt;/span&gt;&lt;strong&gt;&lt;span&gt;INT8 PERCHANNEL、INT8 PERTENSOR 与 FP8 量化三种模式&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;，并且可以深入地探讨网络深度、宽度、Backbone 设计对网络性能与量化精度所带来的影响。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.7777777777777777&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/xNm29D5VjShlMDImTxL8AARicn5WjAYJwtxszibDhicvh8hqH72LdHsIPxWMOicPovL6fBKOkvL4ut06dIiaxr24JIA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot;/&gt;&lt;span/&gt;&lt;/p&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;p&gt;&lt;strong/&gt;&lt;span/&gt;&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;二、便捷的使用&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.02666666666666667&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JJtKEey0hPY533fpibxanI0U85VuicLBnicd9oVaZKApEJqUs2UFnKCgRiaNnvOKeq9HkibP18sxDSwNj7f7ffichBMA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;750&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;在 OnnxQuant 数据集中，您将不需要那些琐碎的网络定义和前后处理代码，我们将提供模型的 Onnx 格式文件与量化所需的数据、数据预处理脚本、模型后处理逻辑等，从而使得用户可以轻易地复现结果。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;硬件厂商亦可以使用该模型库快速地完成推理框架的建设与验证工作&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.7777777777777777&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/xNm29D5VjShlMDImTxL8AARicn5WjAYJwYHfVwOntHFicKoNgNtHTgL5UHSceEnlnibKiaIVDEbJKdjRKhH4MJPF5g/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot;/&gt;&lt;span/&gt;&lt;span/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;我们针对性地引入了 mobilnetv3, efficientnet, once_for_all 等参数量/计算量更小的网络，以及 repvgg 这样短且粗壮的网络与常见的 resnet18 进行对比，这些具体的例子将生动地展示网络参数量/计算量与计算速度之间的非线性关系 —— 事实上网络的计算延迟是由多方面因素决定的，绝非看上去的那样简单。&lt;/span&gt;&lt;p/&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;三、全新的 FP8 量化&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.02666666666666667&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JJtKEey0hPY533fpibxanI0U85VuicLBnicd9oVaZKApEJqUs2UFnKCgRiaNnvOKeq9HkibP18sxDSwNj7f7ffichBMA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;750&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;PPQ+OnnxQuant 将为量化领域带来全新的体验。&lt;/span&gt;&lt;span&gt;目前的 PPQ 是全球范围内唯一具有 FP8 量化能力的框架。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.7777777777777777&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/xNm29D5VjShlMDImTxL8AARicn5WjAYJwpB1vyiaqicePsfLjB7ARpT0cAI9yK548PKgOfWicmaIJSia8lIZiadiaXicbg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;在 OnnxQuant 数据集中，您可以一探浮点量化技术的奥秘，并在这一未知领域留下自己探索的足迹。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;除此之外 OnnxQuant 中的模型覆盖了许多不同的任务类型，我们准备众多的轻量级工业模&lt;/span&gt;&lt;span&gt;型，以及基于 Transformer 结构搭建的网络，并以满足工业部署要求的方式完成网络量化方案的编写。这些网络的量化难度远远大于resnet18,mobilenetv2 等传统量化基线，在 OnnxQuant 中的许多模型在 8bit 量化中几乎无法得到合理精度，基于 OnnxQuant 设计的新的方案将有望解决这些工业上的实际问题。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;四、开源生态&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.02666666666666667&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JJtKEey0hPY533fpibxanI0U85VuicLBnicd9oVaZKApEJqUs2UFnKCgRiaNnvOKeq9HkibP18sxDSwNj7f7ffichBMA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;750&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;神经网络压缩框架 PPQ 是一个开源的深度学习模型压缩工具，它能够将大型深度神经网络模型进行压缩，从而减小模型的大小，提高模型的运行效率，并且能够在保持模型精度的同时，减少模型的计算量和内存占用。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.7777777777777777&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/xNm29D5VjShlMDImTxL8AARicn5WjAYJweHYOP9OMLnZzJSJpVsFOQ0DughgUM2AFX5ZY8v8vK7JPUgcGuS3NRQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;PPQ 的开源合作生态已经与国内外多家公司建立合作，&lt;/span&gt;&lt;span&gt;共同开展深度学习模型压缩和优化的研究。这些合作将为 &lt;/span&gt;&lt;span&gt;PPQ &lt;/span&gt;&lt;span&gt;提供更多的数据、场景、技术和理论支持，修补软件漏洞。同时也将为合作企业、机构和高校提供更高效、更精简的深度学习模型部署工具，推动深度学习技术的发展和应用。&lt;/span&gt;&lt;/section&gt;&lt;p data-pid=&quot;lP8iSaAL&quot;&gt;&lt;span&gt;&lt;span/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;结语&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.02666666666666667&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JJtKEey0hPY533fpibxanI0U85VuicLBnicd9oVaZKApEJqUs2UFnKCgRiaNnvOKeq9HkibP18sxDSwNj7f7ffichBMA/640?wx_fmt=other&quot; data-type=&quot;png&quot; data-w=&quot;750&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;我们诚邀您参与到 OnnxQuant 与 PPQ 的开源建设中来，您可以自由使用其中的资源搭建属于自己的模型量化与部署系统，亦可参考其中的模型量化性能指标作为基线，并在此基础上实现新的算法解决神经网络量化领域的未决问题。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;您还可以随时联系我们，在 &lt;/span&gt;&lt;span&gt;OnnxQuant &lt;/span&gt;&lt;span&gt;的建设期间随&lt;/span&gt;&lt;span&gt;时为我们的工作提出意见，或是将自己的模型与数据添加到 &lt;/span&gt;&lt;span&gt;OnnxQuant &lt;/span&gt;&lt;span&gt;测试集合当中。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;▎数据集链接&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;https://github.com/openppl-public/ppq/tree/master/ppq/samples/QuantZoo&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;▎附表：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;模型精度测试一览表&lt;/span&gt;&lt;strong&gt;&lt;span/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.5953703703703703&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xNm29D5VjShlMDImTxL8AARicn5WjAYJwWeqibYAuvGr23CuKVS9est0UzTJZY5Zk7AseXzY9I8ApsuY1pWbfaHw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;⭐️ 欢迎 star &lt;/strong&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.02666666666666667&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JJtKEey0hPY533fpibxanI0U85VuicLBnicd9oVaZKApEJqUs2UFnKCgRiaNnvOKeq9HkibP18sxDSwNj7f7ffichBMA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;750&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;GitHub: &lt;/span&gt;&lt;span&gt;https://github.com/openppl-public&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;官网：&lt;/span&gt;&lt;/span&gt;&lt;span&gt;https://openppl.ai&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;QQ 群：&lt;/span&gt;&lt;span&gt;627853444&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;202&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;203&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/xNm29D5VjSia6rH8JSrQJCDPCxjKQUibftVk2iaHZXbPy3UmloC8sllmkZ7WJzibFclhF92yRRA61REmJDqb8FeLbw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;962&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;添加小助手微信，进群和大佬交流&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;mp-common-profile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-id=&quot;MzkzNDI2NjUwMw==&quot; data-pluginname=&quot;mpprofile&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/xNm29D5VjSia2C0sakZtE9vK0icBhTC8tfN7WWicQJKKKmJ0gTAZ9nD6NNuftngo1Panc3aSOEoMxTSmzpl0I2J3A/0?wx_fmt=png&quot; data-nickname=&quot;OpenPPL&quot; data-alias=&quot;OpenPPL_AI&quot; data-signature=&quot;开源高性能深度学习推理引擎&quot; data-from=&quot;2&quot; data-weui-theme=&quot;light&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.07806691449814127&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/xNm29D5VjSgVkDGs8knfAkmebKG0wtt5GsBPewwzPbgbib8s1ZLTypkJDfmBLqBP24mg17xWrv06tKicyLGYiaFbg/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;1076&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;span/&gt;&lt;/span&gt;&lt;/section&gt;&lt;h2/&gt;&lt;figure data-size=&quot;normal&quot;/&gt;&lt;p&gt;&lt;mp-style-type data-value=&quot;3&quot;/&gt;&lt;/p&gt;&lt;/div&gt;

          
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>1ae27bdd50b818791e6465a5b7a44fe5</guid>
<title>GPT-4 加持，GitHub Copilot X：AI 赋能的开发</title>
<link>https://toutiao.io/k/pt1unof</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;RichText ztext Post-RichText css-1g0fqss&quot; options=&quot;[object Object]&quot;&gt;&lt;p data-first-child=&quot;&quot;/&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://link.zhihu.com/?target=https%3A//github.blog/2023-03-22-github-copilot-x-the-ai-powered-developer-experience/&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-text=&quot;GitHub Copilot X: The AI-powered developer experience | The GitHub Blog&quot; class=&quot;LinkCard new&quot;&gt;&lt;span class=&quot;LinkCard-contents&quot;&gt;&lt;span class=&quot;LinkCard-title loading&quot; data-text=&quot;true&quot;/&gt;&lt;span class=&quot;LinkCard-desc loading&quot;/&gt;&lt;/span&gt;&lt;span class=&quot;LinkCard-image LinkCard-image--default&quot;/&gt;&lt;/a&gt;&lt;h2&gt;GitHub Copilot X&lt;/h2&gt;&lt;p data-pid=&quot;7je33TQF&quot;&gt;虽然 2021 年发布的 Codex API 已不再更新，作为产品的 GtiHub Copilot 还将继续进化，并利用 GPT-4 支持新特性。&lt;/p&gt;&lt;p data-pid=&quot;cKYlcYBy&quot;&gt;GitHub Copilot 正在尝试带来聊天和语音交互，支持拉动请求（Pull Request），回答关于文档的问题，并采用 OpenAI 的 GPT-4 以获得更个性化的开发者体验，即四项正在进行预览的特性：&lt;/p&gt;&lt;ul&gt;&lt;li data-pid=&quot;U79NCiKb&quot;&gt;&lt;b&gt;GitHub Copilot Chat&lt;/b&gt;：为编辑器带来了一个聊天界面，专注于开发人员的场景，并与 VS Code 和 Visual Studio 进行了原生整合。这远比建议代码的作用要大得多。GitHub Copilot Chat 不仅仅是一个聊天窗口。它能识别开发者输入的代码，显示的错误信息，并深入嵌入到 IDE 中。开发者可以得到深入的分析和解释，了解代码块要做什么，生成单元测试，甚至得到对错误的建议修复。&lt;/li&gt;&lt;li data-pid=&quot;71vpKQml&quot;&gt;&lt;b&gt;Copilot for Pull Requests&lt;/b&gt;：人工智能生成的拉动请求描述（descriptions for Pull Request）的技术预览。这项新功能由 OpenAI 的新 GPT-4 模型驱动，并通过组织管理员和个人仓库所有者可以安装的 GitHub 应用程序，在拉动请求描述中增加了对 AI 驱动的标签的支持。这些标签是由 GitHub Copilot 根据更改的代码自动填写的。然后，开发人员可以审查或修改建议的描述。&lt;/li&gt;&lt;li data-pid=&quot;0rQs-xfe&quot;&gt;&lt;b&gt;Copilot for Docs&lt;/b&gt;：使用聊天界面为用户提供人工智能生成的关于文档的问答，包括开发者关于他们正在使用的语言、框架和技术的问题。GitHub 从 React、Azure Docs 和 MDN的文档开始，因此可以与这些项目的开发者和用户一起快速学习和迭代。&lt;/li&gt;&lt;li data-pid=&quot;s9RT3Nr8&quot;&gt;&lt;b&gt;Copilot for the command line interface (CLI)&lt;/b&gt;：除了编辑器和 pull request 之外，终端是开发者花费时间最多的地方。但即使是最熟练的开发者也需要翻阅许多页面来记住许多命令的精确语法。GitHub Copilot CLI 可以组成命令和循环，并抛出晦涩的查找标志来满足你的查询。&lt;/li&gt;&lt;/ul&gt;&lt;hr/&gt;&lt;h2&gt;GitHub Next&lt;/h2&gt;&lt;p data-pid=&quot;BalxUswz&quot;&gt;现在，这几项功能提供 waitlist 可加入。更多的 GitHub 技术预览还可以在以下网页找到。&lt;/p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://link.zhihu.com/?target=https%3A//githubnext.com/&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-image=&quot;https://pic3.zhimg.com/v2-46501e97975fe3d9a191fb745511b112_180x120.jpg&quot; data-image-width=&quot;1200&quot; data-image-height=&quot;630&quot; data-text=&quot;GitHub Next&quot; class=&quot;LinkCard new&quot;&gt;&lt;span class=&quot;LinkCard-contents&quot;&gt;&lt;span class=&quot;LinkCard-title loading&quot; data-text=&quot;true&quot;/&gt;&lt;span class=&quot;LinkCard-desc loading&quot;/&gt;&lt;/span&gt;&lt;span class=&quot;LinkCard-image LinkCard-image--default&quot;/&gt;&lt;/a&gt;&lt;p/&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>e9e5cf1b3cef89e3768c589dbe75ff8d</guid>
<title>项目经理必备的 25 张管理分析卡</title>
<link>https://toutiao.io/k/9grr194</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content js_underline_content              autoTypeSetting24psection&amp;#10;            &quot; id=&quot;js_content&quot;&gt;&lt;p data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;span&gt;在做项目管理时，层出不穷的问题需要项目经理作出各种决策和分析，以便推动问题解决。&lt;/span&gt;&lt;span&gt;如果项目经理能够掌握并灵活使用以下这25个管理分析卡片，那么分析和解决问题的效率都会大大提高——&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.787037037037037&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EKK4IJyFJIsnf5hwK5sKqgM3FfiaNHicia2I5YGDZcaQ9mthAMGYYAXib9Lgd0h2KM7OcywricqRZ17FFORwf69hoqg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;决策&lt;/span&gt;&lt;span&gt;树是在已知各种情况发生概率的基础上，通过构成决策树来求取净现值的期望值大于零的概率，评价项目风险，判断其可行性的决策分析方法，是直观运用概率分析的一种图解法。&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.787037037037037&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EKK4IJyFJIsnf5hwK5sKqgM3FfiaNHicia2u9iaMcibsvR2bDVjWGb12mw2l43UUassh8uic2nNpyLz9XicDPoUtkd3IA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;鱼骨图，帮助发现问题根本原因的分析方法，问题或缺陷（即后果）标在“鱼头”处，在鱼骨上长出鱼刺，上面按出现机会多寡列出产生问题额可能原因，有助于说明各个原因是如何影响后果的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.787037037037037&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EKK4IJyFJIsnf5hwK5sKqgM3FfiaNHicia26HdRRDroqaQKlQwt4zxmDGrkJHFAnzkg10DOp0JTBHGkGpNKFlkFEQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;P&lt;/span&gt;&lt;span&gt;DCA&lt;/span&gt;&lt;span&gt;循环是美国质量管理专家休哈特博士首先提出的，由戴明采纳、宣传并获得普及，所以又叫作“戴明环”。全面质量管理的思想基础和方法依据就是PDCA循环。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.787037037037037&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EKK4IJyFJIsnf5hwK5sKqgM3FfiaNHicia2rZBCNEGDuIGkwhmYiaYYgAfqoL4umRRulqay51GsHHmGBJIgZ3NiaickQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;GREP模型是进行组织内环境分析的有效工具，是分析企业竞争优势的内生战略分析法，即将企业的战略分为四个部分构成：治理结构、资源、企业家、产品或服务。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.787037037037037&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EKK4IJyFJIsnf5hwK5sKqgM3FfiaNHicia2yA08hZE9GN6WswictRiczZXEvas5viaCzUl6saMXeD6vCedNYrpXjlXwg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;麦肯锡7S模型指出，企业在发展过程中必须全面的考虑各方面的情况，包括结构（structure）、制度（system）、风格（style）、员工（staff）、技能（skill）、战略（strategy）、共同的价值观（shared value）。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.787037037037037&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EKK4IJyFJIsnf5hwK5sKqgM3FfiaNHicia2qiblA8icP4wiaYSb07RKdicU72ibF4j3ibl3e9RNWLN3OKFxRbp3WnFA4DAA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;行业的生命周期指行业从出现到完全退出社会经济活动所经历的时间。行业的生命周期曲线忽略了具体的产品型号、质量、规格等差异，仅从整个行业的角度考虑问题。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.787037037037037&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EKK4IJyFJIsnf5hwK5sKqgM3FfiaNHicia2AXyC7prIb3z4AgMs5PrrOdGIgIDeQwXsfJCLvLKyyUCPgd7Ts868MQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;SWOT分析就是基于内外部竞争环境和竞争条件下的态势分析，通过这种方法，可以对研究对象所处的情境进行全面、系统、准确的研究，从而根据研究结果制定相应的发展战略、计划以及对策等。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.787037037037037&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EKK4IJyFJIsnf5hwK5sKqgM3FfiaNHicia2prUc5YwrmFuyoicnOgMPdddGRjDptfPcaFwptRiaUd3uL7dU7ls9iafjg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;即&lt;/span&gt;&lt;span&gt;目标与关键成果法，是一套明确和跟踪目标极其完成情况的工作方法，旨在确保员工共同工作，并集中精力做出可衡量的贡献。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.787037037037037&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EKK4IJyFJIsnf5hwK5sKqgM3FfiaNHicia2YHfwc4GoJHbnnKyN6FZ9sbFGaXwfclzuclqVb5SCT2WDDicaNMIdS7Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;SCQA即情景（Situation）、冲突（Complication）、问题（Question）、答案（Answer），它能够引导你站在消费者的角度考虑问题，提升消费者的兴趣和接受意愿。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.787037037037037&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EKK4IJyFJIsnf5hwK5sKqgM3FfiaNHicia2hWcyPicLP1UHIrDm0lT5TMSh2MyfXnXG9dIJqFkuiaibo388oEfUv7FvQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;“&lt;/span&gt;&lt;span&gt;MECE”是对于一个重大的议题，能够做到不重叠、不遗漏的分类，而且能够借此有效把握问题的核心，最终有效解决问题。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.787037037037037&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EKK4IJyFJIsnf5hwK5sKqgM3FfiaNHicia2sQTNYUlGoJJUTK4AOKSouLTicshribOlPYAubWPCS9iaiaP7XYUTcPu0jw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;通用矩阵法可以根据事业单位在市场上的实力和所在时长的吸引力对这些事业单位进行评估，也可以表述一个公司的事业单位组合判断其强项和弱点。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.787037037037037&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EKK4IJyFJIsnf5hwK5sKqgM3FfiaNHicia2M4kkYnMHdUVOUbj1oTghicklxCp0WRYTYNn0tLENxzxC0LTcgBclic9A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;波士顿矩阵认为，一般决定产品结构的基本因素有两个：即市场引力与企业实力，其中最主要的&lt;/span&gt;&lt;span&gt;是&lt;/span&gt;&lt;span&gt;反映市场引力的综合指标——销售增长率，这是决定企业产品结构是否合理的外在因素。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.787037037037037&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EKK4IJyFJIsnf5hwK5sKqgM3FfiaNHicia2iaLeVZ13ZXvElg6R7uAEkpGiboM5YGpFsI7waiaflgGGEvU80aHgND7OA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;波特的五力模型由迈克尔·波特提出，他认为行业中存在决定竞争规模和程度的五种力量，这五种力量综合起来影响着产业吸引力和现有企业的竞争战略决策。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.787037037037037&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EKK4IJyFJIsnf5hwK5sKqgM3FfiaNHicia2hiaWx0Lg7dKlbaybW1r8aDgoyjR334ozCf2sEZtoGRlQZ1CtEO3rVSA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这是一种在企业竞争力“资源观”的观照下对企业内部的静态属性和外部的动态属性做系统分析的工具，从而对企业目前的竞争力有全面的认识。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.787037037037037&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EKK4IJyFJIsnf5hwK5sKqgM3FfiaNHicia2GHCL6sQ9VWVRqGoGAfXs34IcShldtLptLr2t7CugvgLzSThkM8FUPQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这种方法把企业内外价值增加的活动分为基本活动和支持性活动，实际上只有某些特定的活动才真正创造价值，这就是价值链上的“战略环节”。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.787037037037037&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EKK4IJyFJIsnf5hwK5sKqgM3FfiaNHicia2Zf2A3fN3yYxA65iakCsBfy7k9voiakDAxUaIohkUMTAnyFOibpFIs7Xyg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这是对企业经营状况进行系统分析的一种有效方法，从经营收益性、安全性、流动性、生产性、成长性等五个方面分析企业的经营成果。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.787037037037037&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EKK4IJyFJIsnf5hwK5sKqgM3FfiaNHicia29iaqraTQ0gV6KYct6h0AD070V0Bf4QV630L9ZlFebwl6kwHFhDID4wQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.787037037037037&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EKK4IJyFJIsnf5hwK5sKqgM3FfiaNHicia2zVfq6lljb5A6w6vAMIzQHHickU64O3JuTCRhX6e8DAd0VIzWGWHfAFQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;战略地位与行动评价矩阵主要分析企业外部环境及企业应该采用的战略组合。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.787037037037037&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EKK4IJyFJIsnf5hwK5sKqgM3FfiaNHicia2Yeg19Eb7nJSl39ib4bw6MdyjvO4iat8G9J3ibH7sRfbFBFl2ZIElvichdg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;关键路径是指设计中从输入到输出经过的延时最长的逻辑路径，优化关键路径是一种提高工作速度的有效方法。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.787037037037037&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EKK4IJyFJIsnf5hwK5sKqgM3FfiaNHicia2I5byA6JE7k28eu2eSJmXczG8BJHbiaNdVuZIHklUXWBjYYp9ORPu4icQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;5W2H分析法又叫七问分析法，简单方便、易于使用，被广泛用于企业管理和技术活动，对于决策和执行性的活动措施也非常有帮助，更有助于弥补考虑问题的疏漏。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.787037037037037&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EKK4IJyFJIsnf5hwK5sKqgM3FfiaNHicia2Le61N3UH6viboREMhefSGDCd5ucbhiabNEE0KMEV6vdOjKH6wv9Y791Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;直方图又称”质量分布图“，是一种统计报告图，一般用横轴表示数据类型，纵轴表示分布情况。通过直方图对所收集的貌似无序的数据进行处理，可以反映出产品质量的分布情况，判断和预测产品质量及不合格率。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.787037037037037&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EKK4IJyFJIsnf5hwK5sKqgM3FfiaNHicia2aEqicI3qrK3eIYkHaibLWtVnLLDUBkQ4rWGtPIDpI4udyByibJbu3KBbw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;RACI是一个相对直观的模型，用以明确组织变革过程中的各个角色及其相关责任，分配个每项工作的资源可以是个人或小组，项目经理也可根据项目需要，选择“领导”或“资源”等适用词汇。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.787037037037037&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EKK4IJyFJIsnf5hwK5sKqgM3FfiaNHicia2hLU2MWAgUdAIuwYAyY0DicN0hwD4U030TmvsBOqia9l11PF5F9UI833w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;即目标管理原则，这是使管理者的工作由被动变主动的一个很好的手段，不但能让员工更明确高效的工作，还能保证绩效考核的公平、公正与公开。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.787037037037037&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EKK4IJyFJIsnf5hwK5sKqgM3FfiaNHicia2QzjkDXZMicSCD7kib2IlTU8icg78btiaCP5QRXojXApIVuXyRIxy8knVbQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;该理论&lt;/span&gt;&lt;span&gt;由&lt;/span&gt;&lt;span&gt;日本战略研究的领军人物大前研一提出，他强调成功的战略有三个关键因素，分别是公司自身、顾客和竞争者，在制定任何经营战略时，都必须考虑这三个因素。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.787037037037037&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EKK4IJyFJIsnf5hwK5sKqgM3FfiaNHicia2rLviaQR0y49jNqsjT6SiaLLlnoGt6V5pfUeh42c7KJXPI8Cz260pInhA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;span&gt;PEST分析是指对宏观环境的分析，P是政治（Politics）、E是经济（Economy）、S是社会（Society）、T是技术（Technology）。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;◆◆◆&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;以上就是比较常用的25张种管理分析卡片，要想让这些方法发挥出最大的效果，关键在于项目经理能否灵活使用，我们建议大家可以收藏文章或把图片保存下来，方便随时查阅学习哦&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;-THE END-&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;38806&quot;&gt;&lt;section&gt;&lt;section data-bcless=&quot;darken&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong data-brushtype=&quot;text&quot;&gt;近期热文&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong data-brushtype=&quot;text&quot;&gt; &lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2NTE3NTgyNA==&amp;amp;mid=2650943423&amp;amp;idx=1&amp;amp;sn=6f51525df240db7b83df8f4393f92d40&amp;amp;chksm=f157d9c0c62050d6768c202217aae2f50dfdf7d466b5b7641ff69d962ceab59523dd586385ac&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;能做项目经理的个个都是人才&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;能做项目经理的个个都是人才&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2NTE3NTgyNA==&amp;amp;mid=2650943099&amp;amp;idx=1&amp;amp;sn=a96b8ce5065ea9037d105eb973862efa&amp;amp;chksm=f157d804c6205112227406612f1f79dfe2a6207db6796364e72fe6e56b8f69ee874aa0b576d4&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;小心，别让敏捷，搞垮你的团队！&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;小心，别让敏捷，搞垮你的团队！&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2NTE3NTgyNA==&amp;amp;mid=2650943046&amp;amp;idx=1&amp;amp;sn=505e7946f10263e39a8bd4770cec55df&amp;amp;chksm=f157d839c620512faaeb329dd657d9c05802be5aa6416064b02cc396da93ced170f6fcdeacf2&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;PM可收藏，华为内部【流程管理体系】详解&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;PM可收藏，华为内部【流程管理体系】详解&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2NTE3NTgyNA==&amp;amp;mid=2650942725&amp;amp;idx=1&amp;amp;sn=f0c22c850b119832796c2a46282e280c&amp;amp;chksm=f157db7ac620526cf4663288863dc72f1197f6fed734147852d2708a94fc8c5e92e2a66d22a7&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;项目经理长点心吧，小心办公室里的任何人！&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;项目经理长点心吧，小心办公室里的任何人！&lt;/a&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;mp-common-profile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-weui-theme=&quot;light&quot; data-id=&quot;MzI2NTE3NTgyNA==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/EKK4IJyFJIsNhx9CkDnx7PsAXGw6oHDUq1cpFKtAuEFWyWgON8W5BU7CHKibM5Y8VgDSOHaYSw8ibEC4UXJ7WCmA/0?wx_fmt=png&quot; data-nickname=&quot;PM圈子&quot; data-alias=&quot;pm1178&quot; data-signature=&quot;洞察150W项目经理的苦与乐&quot; data-from=&quot;0&quot; data-is_biz_ban=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;mp-style-type data-value=&quot;3&quot;/&gt;&lt;/p&gt;&lt;/div&gt;

          
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>