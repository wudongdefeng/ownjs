<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>14c5db574805673526e1040096fbcaeb</guid>
<title>优质网站同好者周刊（第 100 期） | 倾城博客</title>
<link>https://toutiao.io/k/981ugnu</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;content&quot;&gt;&lt;p&gt;&lt;a href=&quot;https://nicelinks.site/?utm_source=weekly&quot;&gt;倾城之链&lt;/a&gt;作为一个开放平台，旨在云集全球&lt;strong&gt;优秀网站&lt;/strong&gt;，探索互联网中更广阔的世界。此周刊，将汇聚过去一周&lt;a href=&quot;https://nicelinks.site/?utm_source=weekly&quot;&gt;倾城&lt;/a&gt;所收录的内容，以飨同好；欢迎推荐或自荐（仅限有独立域名的网站，可以是二级域名）。您如果要了解收录要求，请参见&lt;a href=&quot;https://nicelinks.site/about?utm_source=weekly&quot;&gt;关于倾城&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;备注&lt;/strong&gt;：本周刊&lt;strong&gt;每周五&lt;/strong&gt;生成，首发于个人微信公众号&lt;a href=&quot;https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzI5MDIwMzM2Mg==&amp;amp;action=getalbum&amp;amp;album_id=1530765143352082433&amp;amp;scene=173&amp;amp;from_msgid=2650641087&amp;amp;from_itemidx=1&amp;amp;count=3#wechat_redirect&quot;&gt;晚晴幽草轩&lt;/a&gt;、博客&lt;a href=&quot;https://www.jeffjade.com&quot;&gt;晚晴幽草轩&lt;/a&gt;，以及&lt;a href=&quot;https://forum.lovejade.cn/&quot;&gt;悠然宜想亭&lt;/a&gt;社区；此一键生成脚本基于 &lt;a href=&quot;https://nicelinks.site/post/602d30aad099ff5688618591&quot;&gt;Deno&lt;/a&gt; 编写，并在 Github 开源：&lt;a href=&quot;https://github.com/nicejade/nicelinks-weekly&quot;&gt;nicejade/nicelinks-weekly&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/%E6%97%A0%E4%BB%A3%E7%A0%81&quot;&gt;&lt;code&gt;无代码&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E8%B7%A8%E5%B9%B3%E5%8F%B0&quot;&gt;&lt;code&gt;跨平台&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E5%BA%94%E7%94%A8&quot;&gt;&lt;code&gt;应用&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;It&#x27;s not low-code, it&#x27;s full code made easy. Build business-ready software, apps, integrations, and more with the Crowdbotics App Builder. Hire certified PMs and developers to help build your project at any time.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/www.crowdbotics.com.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 - Crowdbotics | Build Apps Fast, No Coding Required&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/redirect?url=https://www.crowdbotics.com/&quot;&gt;Crowdbotics&lt;/a&gt; ，一款快速构建&lt;strong&gt;应用程序&lt;/strong&gt;的在线平台；包括 Web、iOS 和 Android，使用内置的 DevOps 和云托管导出完整的 React Native + Django 代码。Crowdbotics 不是低代码，而是完整的代码变得简单。通过 Crowdbotics 应用程序生成器，构建可用于业务的软件、应用程序、集成以及更多。雇佣经过认证的 PM 和开发人员，随时帮助建立你的项目。它具备一下功能特征：&lt;/p&gt;&lt;h3 id=&quot;托管应用程序开发&quot;&gt;&lt;a href=&quot;#%E6%89%98%E7%AE%A1%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91&quot; aria-label=&quot;托管应用程序开发 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;托管应用程序开发&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;专业的建造计划&lt;/strong&gt;：聘请我们的专家 PM 和开发人员来评估、确定范围、构建、测试和启动您的定制化 App。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;及时开发&lt;/strong&gt;：根据需要直接从您的仪表板雇用额外的开发资源。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;更快、更智能、更好&lt;/strong&gt;：Crowdbotics 爬取已知的开源组件世界，并智能地选择最适合您的项目的代码包。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;固定的、可预测的成本&lt;/strong&gt;：每月订阅包括世界级的托管、基础设施、实施、维护、运营、监控和安全。&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;使用-crowdbotics-app-builder-组装全栈应用程序&quot;&gt;&lt;a href=&quot;#%E4%BD%BF%E7%94%A8-crowdbotics-app-builder-%E7%BB%84%E8%A3%85%E5%85%A8%E6%A0%88%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F&quot; aria-label=&quot;使用 crowdbotics app builder 组装全栈应用程序 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;使用 Crowdbotics App Builder 组装全栈应用程序&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;单击一下即可上线&lt;/strong&gt;：使用我们的可视化编辑器创建应用程序屏幕和数据模型，并在几分钟内部署到 Heroku。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;全包托管&lt;/strong&gt;：开箱即用的托管、登录、数据库、安全性和可扩展性。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;完整的代码变得容易&lt;/strong&gt;：通过双向 GitHub 集成访问您的源代码——您拥有所有 IP。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;没有锁定&lt;/strong&gt;：免费开始使用&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;将你的-figma-设计转化为代码&quot;&gt;&lt;a href=&quot;#%E5%B0%86%E4%BD%A0%E7%9A%84-figma-%E8%AE%BE%E8%AE%A1%E8%BD%AC%E5%8C%96%E4%B8%BA%E4%BB%A3%E7%A0%81&quot; aria-label=&quot;将你的 figma 设计转化为代码 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;将你的 Figma 设计转化为代码&lt;/h3&gt;&lt;p&gt;在 Crowdbotics App Builder 中将您的 Figma 设计文件转换为真正的 React Native 代码。&lt;/p&gt;&lt;p&gt;Crowdbotics 可以比以往更快地为企业构建完整的、可扩展的应用程序。借助 Crowdbotics，专业人士可以使用匹配的组件库和随叫随到的专家网络将想法转化为实际代码。&lt;/p&gt;&lt;p&gt;Crowdbotics 引用了数百万个生产级软件包的库，以确定给定项目的最有效组件和工作流程。然后，Crowdbotics 在项目生命周期内处理基础设施、实施、维护、操作、监控和安全。如果您对其感兴趣，可移步 &lt;a href=&quot;https://www.crowdbotics.com/about&quot;&gt;关于 Crowdbotics&lt;/a&gt;，以了解更多。&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/63bff2d01d0f6a2f376e849d&quot;&gt;倾城之链 - Crowdbotics | Build Apps Fast, No Coding Required&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/%E5%AD%A6%E4%B9%A0&quot;&gt;&lt;code&gt;学习&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E7%BC%96%E7%A0%81&quot;&gt;&lt;code&gt;编码&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E7%A8%8B%E5%BA%8F%E5%91%98&quot;&gt;&lt;code&gt;程序员&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Real-world proficiency projects designed for experienced engineers. Develop software craftsmanship by recreating popular devtools from scratch.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/codecrafters.io.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 - CodeCrafters | Advanced programming challenges&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/redirect?url=https://codecrafters.io/&quot;&gt;CodeCrafters&lt;/a&gt;，面向经验丰富的工程师的编程课程，帮助工程师真正精通他们的手艺，重新创建 Redis、Git、Docker——用你自己的双手。通过采取行动和深入研究，向世界上最好的人学习，获得专家级的信心。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;What I cannot create, I do not understand — Richard Feynman&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;CodeCrafters，在 Github 所创建仓库：&lt;a href=&quot;https://github.com/codecrafters-io/build-your-own-x&quot;&gt;build-your-own-x&lt;/a&gt;（编写良好的分步指南的汇编，用于从头开始重新创建我们最喜欢的技术），截止目前获得 183K 的 Star；在这里可以学到非常多技术，诸如：&lt;a href=&quot;https://nicelinks.site/tags/3D&quot;&gt;3D&lt;/a&gt; 渲染器、增强现实、BT 客户端、区块链/加密货币、机器人、命令行工具、数据库、码头工人、模拟器/虚拟机、前端框架/库、游戏、&lt;a href=&quot;https://nicelinks.site/tags/Git&quot;&gt;Git&lt;/a&gt;、网络堆栈（Network Stack）、神经网络、Shell、操作系统、物理引擎、编程语言、正则表达式引擎、搜索引擎、模板引擎、文本编辑器、视觉识别系统、&lt;a href=&quot;https://github.com/codecrafters-io/build-your-own-x#build-your-own-voxel-engine&quot;&gt;Voxel Engine&lt;/a&gt;、网络服务器等等。如果您从事编程行业，并欲积极上进心，该网站及教程仓库，值得关注、收藏及学习。&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/63beab741d0f6a2f376e7bf3&quot;&gt;倾城之链 - CodeCrafters | Advanced programming challenges&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/%E6%97%A0%E4%BB%A3%E7%A0%81&quot;&gt;&lt;code&gt;无代码&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E7%BD%91%E7%AB%99%E7%94%9F%E6%88%90%E5%99%A8&quot;&gt;&lt;code&gt;网站生成器&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E5%9C%A8%E7%BA%BF&quot;&gt;&lt;code&gt;在线&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;EarlyBird is the brand-new landing page builder for startups. Start pitching and validating business ideas in minutes.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/earlybird.im.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 - EarlyBird: Landing Page Builder for Startups&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/redirect?url=https://earlybird.im/&quot;&gt;EarlyBird&lt;/a&gt; 是为初创企业提供的全新登陆页面构建工具，在几分钟内，就可以开始投递和验证商业想法。Early Bird 提供 &lt;a href=&quot;https://nicelinks.site/tags/%E6%97%A0%E4%BB%A3%E7%A0%81&quot;&gt;无代码&lt;/a&gt; 登录页面构建器，轻松创建、宣传和验证您的早期业务。Early Bird 具有以下功能特征：&lt;/p&gt;&lt;h3 id=&quot;新手友好的-ui-块&quot;&gt;&lt;a href=&quot;#%E6%96%B0%E6%89%8B%E5%8F%8B%E5%A5%BD%E7%9A%84-ui-%E5%9D%97&quot; aria-label=&quot;新手友好的 ui 块 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;新手友好的 UI 块&lt;/h3&gt;&lt;p&gt;每个 UI 块都旨在易于使用和理解，即使对于那些不熟悉技术的人也是如此。&lt;/p&gt;&lt;h3 id=&quot;完全响应&quot;&gt;&lt;a href=&quot;#%E5%AE%8C%E5%85%A8%E5%93%8D%E5%BA%94&quot; aria-label=&quot;完全响应 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;完全响应&lt;/h3&gt;&lt;p&gt;每个登陆页面都设置为响应式，在所有设备上看起来都很棒，确保每个人都可以访问。&lt;/p&gt;&lt;h3 id=&quot;文本格式&quot;&gt;&lt;a href=&quot;#%E6%96%87%E6%9C%AC%E6%A0%BC%E5%BC%8F&quot; aria-label=&quot;文本格式 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;文本格式&lt;/h3&gt;&lt;p&gt;轻松添加标题、链接、段落，并应用各种文本样式，包括粗体、斜体、下划线等。&lt;/p&gt;&lt;h3 id=&quot;搜索引擎优化准备就绪&quot;&gt;&lt;a href=&quot;#%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E4%BC%98%E5%8C%96%E5%87%86%E5%A4%87%E5%B0%B1%E7%BB%AA&quot; aria-label=&quot;搜索引擎优化准备就绪 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;搜索引擎优化准备就绪&lt;/h3&gt;&lt;p&gt;默认情况下，所有登录页面都针对搜索引擎进行了优化，您可以自定义 SEO 字段以满足您的特定需求；&lt;/p&gt;&lt;h3 id=&quot;私人模式&quot;&gt;&lt;a href=&quot;#%E7%A7%81%E4%BA%BA%E6%A8%A1%E5%BC%8F&quot; aria-label=&quot;私人模式 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;私人模式&lt;/h3&gt;&lt;p&gt;通过为选定的用户组设置密码保护来限制对登录页面的访问。&lt;/p&gt;&lt;hr/&gt;&lt;h3 id=&quot;early-bird-适用于&quot;&gt;&lt;a href=&quot;#early-bird-%E9%80%82%E7%94%A8%E4%BA%8E&quot; aria-label=&quot;early bird 适用于 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;Early Bird 适用于&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;没有开发设计技能的用户；&lt;/li&gt;&lt;li&gt;经营简单的&lt;strong&gt;在线&lt;/strong&gt;业务；&lt;/li&gt;&lt;li&gt;找到最佳的产品市场契合度；&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;early-bird-不适用于&quot;&gt;&lt;a href=&quot;#early-bird-%E4%B8%8D%E9%80%82%E7%94%A8%E4%BA%8E&quot; aria-label=&quot;early bird 不适用于 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;Early Bird 不适用于&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;构建复杂的 Web 应用程序；&lt;/li&gt;&lt;li&gt;启动具有定制设计的网站；&lt;/li&gt;&lt;li&gt;经营冒犯性或非法业务；&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Early Bird 其作用是避免在早期阶段浪费时间和金钱，确保您的产品或商业创意具有潜力，并且关于该创意的最关键假设是有效的。它支持在 10 分钟内，轻松构建您的最小可行产品（mvp）登录页面，且不要寻求设计师或开发人员的帮助。虽然 Early Bird 更多功能是收费模式，但也支持免费使用；对此感兴趣的朋友，可以前往官方网站以了解更多。&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/63be940e1d0f6a2f376e7975&quot;&gt;倾城之链 - EarlyBird: Landing Page Builder for Startups&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/%E5%AF%BC%E8%88%AA&quot;&gt;&lt;code&gt;导航&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/AI&quot;&gt;&lt;code&gt;AI&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E5%88%86%E4%BA%AB&quot;&gt;&lt;code&gt;分享&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;World&#x27;s Largest Resource Of Artificial Intelligence Tools &amp;amp; Services&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/allthingsai.com.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 - All Things AI - The Complete Resource Of Artificial Intelligence Tools &amp;amp; Services&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/redirect?url=https://allthingsai.com/&quot;&gt;All Things AI&lt;/a&gt;，人工智能（AI）工具和服务的完整资源（&lt;a href=&quot;https://nicelinks.site/tags/AI&quot;&gt;AI&lt;/a&gt; 资源导航网站），在这里可以发现最新的人工智能工具、服务和资源。近几年，随着 AI 的快速发展迭代，衍生出各种服务；尤其是 2022 年 11 月，OpenAI 旗下的 ChatGPT 大火之后，进一步加剧 AI 的繁荣。在该网站，可以发现：聊天机器人、编码、设计、图像生成、照片编辑、个人资料图片、写作、生物、日历、数据、电子邮件、游戏开发、合法的、楷模、电话应用程序、播客、简报、搜索、演讲、电子表格、视频等相关服务。您如果遇到过创新的人工智能产品，或者您正在开发自己的产品？也可以在 &lt;a href=&quot;https://nicelinks.site/redirect?url=https://allthingsai.com/&quot;&gt;All Things AI&lt;/a&gt; 分享提交，他们可能会将其列入产品的列表。&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/63be903b1d0f6a2f376e78c5&quot;&gt;倾城之链 - All Things AI - The Complete Resource Of Artificial Intelligence Tools &amp;amp; Services&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/%E5%BC%80%E5%8F%91%E8%80%85&quot;&gt;&lt;code&gt;开发者&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E5%B7%A5%E4%BD%9C%E6%B5%81&quot;&gt;&lt;code&gt;工作流&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E8%87%AA%E5%8A%A8%E5%8C%96&quot;&gt;&lt;code&gt;自动化&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Airplane is a developer-centric approach to building internal UIs and workflows.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/www.airplane.dev.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 - Airplane | Developer infrastructure for internal tools&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/redirect?url=https://www.airplane.dev/&quot;&gt;Airplane&lt;/a&gt; 是一种以开发人员为中心的方法来构建内部 UI 和工作流程。它成立于 2021 年七月，愿景是通过一系列自动化工具，把公司内部系统和繁琐工作流程自动化。成立不到半年就宣布了由 Benchmark 领投的 850 万美元 A 轮融资；2022 年九月宣布了 3200 万美元的 B 轮。现今已经有 100+ 个付费客户和几千名开发人员。Airplane 具有如下功能特征：&lt;/p&gt;&lt;h3 id=&quot;使用-react-构建视图减去样板文件&quot;&gt;&lt;a href=&quot;#%E4%BD%BF%E7%94%A8-react-%E6%9E%84%E5%BB%BA%E8%A7%86%E5%9B%BE%E5%87%8F%E5%8E%BB%E6%A0%B7%E6%9D%BF%E6%96%87%E4%BB%B6&quot; aria-label=&quot;使用 react 构建视图减去样板文件 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;使用 React 构建视图，减去样板文件&lt;/h3&gt;&lt;p&gt;Airplane 是用 React 构建的——好的部分。他们采用了流行的框架并包含库来快速构建内部工具。&lt;/p&gt;&lt;h3 id=&quot;包含组件工具包&quot;&gt;&lt;a href=&quot;#%E5%8C%85%E5%90%AB%E7%BB%84%E4%BB%B6%E5%B7%A5%E5%85%B7%E5%8C%85&quot; aria-label=&quot;包含组件工具包 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;包含组件工具包。&lt;/h3&gt;&lt;p&gt;从 Airplane 的图书馆中选择表格、  形式、  图表和更多。开箱即用的设计系统和用户体验最佳实践。&lt;/p&gt;&lt;h3 id=&quot;完全可扩展为代码&quot;&gt;&lt;a href=&quot;#%E5%AE%8C%E5%85%A8%E5%8F%AF%E6%89%A9%E5%B1%95%E4%B8%BA%E4%BB%A3%E7%A0%81&quot; aria-label=&quot;完全可扩展为代码 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;完全可扩展为代码&lt;/h3&gt;&lt;p&gt;实际上是为开发者打造的。与 API 集成、添加自定义组件并导入现有库。编写单元测试，使用 GitHub 进行版本控制，并使用 CI/CD 进行发布。&lt;/p&gt;&lt;h3 id=&quot;连接到任何东西&quot;&gt;&lt;a href=&quot;#%E8%BF%9E%E6%8E%A5%E5%88%B0%E4%BB%BB%E4%BD%95%E4%B8%9C%E8%A5%BF&quot; aria-label=&quot;连接到任何东西 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;连接到任何东西&lt;/h3&gt;&lt;p&gt;Airplane 开箱即用地支持流行的数据库、仓库、API 和消息传递平台。&lt;/p&gt;&lt;p&gt;Airplane 不是一个低代码、拖拽式平台，用户需要会写基本的代码。这也是它和 Retool（低代码，可拖拽式搭建内部工具的开发平台） 的主要区别之一：Airplane 是一个为开发者而建的工具。虽然在 Airplane 中构建的工具的最终用户大多是非开发者，但构建工具的人是开发者。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;逐步引入复杂性&lt;/strong&gt;：作为一个开发者工具，重要的还是说服开发者自己来试用体会一下产品。Airplane 的过人之处在于，它上手门槛很低，能快速让体验者得到（正）反馈。最基本的功能是建立一个&lt;strong&gt;任务&lt;/strong&gt;（Task），比如「发起一笔退款」或「删除某用户的数据」。用户创建一个任务后，Airplane 会将 UI，权限，通知这些搞定，只需要用户协助做一些基本配置，完成的界面非常简洁。&lt;/p&gt;&lt;p&gt;Airplane 现在的客户主要还是中小企业，其规划目标是：旨在为小型初创企业和大型企业服务的产品。为此，团队从安全、工作流、易用性、高效性等角度，对标性设计了大量功能（基础设施）；如果您对其感兴趣，不妨前往官网，从而了解更多。&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/63bd3e6f1d0f6a2f376e705e&quot;&gt;倾城之链 - Airplane | Developer infrastructure for internal tools&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/%E6%95%B0%E6%8D%AE%E5%BA%93&quot;&gt;&lt;code&gt;数据库&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80&quot;&gt;&lt;code&gt;编程语言&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E5%BC%80%E6%BA%90&quot;&gt;&lt;code&gt;开源&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;SQLite is a C-language library that implements a small, fast, self-contained, high-reliability, full-featured, SQL database engine. SQLite is the most used database engine in the world. SQLite is built into all mobile phones and most computers and comes bundled inside countless other applications that people use every day.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/www.sqlite.org.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 - SQLite Home Page&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/redirect?url=https://www.sqlite.org/&quot;&gt;SQLite&lt;/a&gt; 是一个 C 语言库，实现了一个小型、快速、独立、高可靠性、全功能的 SQL 数据库引擎。SQLite 是世界上使用最多的数据库引擎。所有手机和大多数电脑都内置了 SQLite，并捆绑在人们每天使用的无数其他应用程序中。&lt;/p&gt;&lt;h3 id=&quot;sqlite-的优势&quot;&gt;&lt;a href=&quot;#sqlite-%E7%9A%84%E4%BC%98%E5%8A%BF&quot; aria-label=&quot;sqlite 的优势 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;SQLite 的优势&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;占用空间小&lt;/strong&gt;：顾名思义，SQLite 库非常轻量级。尽管它使用的空间因安装它的系统而异，但它占用的空间不到 600KiB。此外，它是完全独立的，这意味着您无需在系统上安装任何外部依赖项即可让 SQLite 正常工作。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;用户友好&lt;/strong&gt;：SQLite 有时被描述为开箱即用的“零配置”数据库。SQLite 不作为服务器进程运行，这意味着它永远不需要停止、启动或重新启动，并且不附带任何需要管理的配置文件。这些功能有助于简化从安装 SQLite 到将其与应用程序集成的过程。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;可移植&lt;/strong&gt;：与通常将数据存储为大量单独文件的其他数据库管理系统不同，整个 SQLite 数据库存储在单个文件中。该文件可以位于目录层次结构中的任何位置，并且可以通过可移动媒体或文件传输协议共享。&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;sqlite-的缺点&quot;&gt;&lt;a href=&quot;#sqlite-%E7%9A%84%E7%BC%BA%E7%82%B9&quot; aria-label=&quot;sqlite 的缺点 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;SQLite 的缺点&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;有限的并发性&lt;/strong&gt;：虽然多个进程可以同时访问和查询一个 SQLite 数据库，但在任何给定时间只有一个进程可以对数据库进行更改。这意味着虽然 SQLite 比大多数其他嵌入式数据库管理系统支持更高的并发性，但它无法支持像 MySQL 或 PostgreSQL 这样的客户端/服务器 RDBMS。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;没有用户管理&lt;/strong&gt;：数据库系统通常带有对&lt;em&gt;用户&lt;/em&gt;的支持，或者具有对数据库和表的预定义访问权限的托管连接。因为 SQLite 直接读取和写入普通磁盘文件，所以唯一适用的访问权限是底层操作系统的典型访问权限。这使得 SQLite 对于需要具有特殊访问权限的多个用户的应用程序来说是一个糟糕的选择。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;安全&lt;/strong&gt;性：在某些情况下，使用服务器的数据库引擎可以比 SQLite 等无服务器数据库更好地防止客户端应用程序中的错误。例如，客户端中的杂散指针不会破坏服务器上的内存。此外，由于服务器是单个持久进程，因此客户端-服务器数据库可以比无服务器数据库更精确地控制数据访问。这允许更细粒度的锁定和更好的并发性。&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;何时使用-sqlite&quot;&gt;&lt;a href=&quot;#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8-sqlite&quot; aria-label=&quot;何时使用 sqlite permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;何时使用 SQLite&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;嵌入式应用程序&lt;/strong&gt;：SQLite 是需要可移植性且不需要未来扩展的应用程序的绝佳数据库选择。示例包括单用户本地应用程序、移动应用程序或游戏。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;磁盘访问替换&lt;/strong&gt;：在应用程序需要直接读取文件和将文件写入磁盘的情况下，使用 SQLite 可以获得额外的功能和使用 SQL 带来的简单性。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;测试&lt;/strong&gt;：对于许多应用程序来说，使用使用额外服务器进程的 DBMS 来测试它们的功能可能有点矫枉过正。SQLite 具有内存模式，可用于快速运行测试，而无需实际数据库操作的开销，使其成为测试的理想选择。&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;何时不使用-sqlite&quot;&gt;&lt;a href=&quot;#%E4%BD%95%E6%97%B6%E4%B8%8D%E4%BD%BF%E7%94%A8-sqlite&quot; aria-label=&quot;何时不使用 sqlite permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;何时不使用 SQLite&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;处理大量数据&lt;/strong&gt;：SQLite 在技术上可以支持大小高达 140TB 的数据库，只要磁盘驱动器和文件系统也支持数据库的大小要求。但是，SQLite 网站 &lt;a href=&quot;https://www.sqlite.org/whentouse.html&quot;&gt;建议&lt;/a&gt; 将任何接近 1TB 的数据库置于集中式客户端-服务器数据库中，因为该大小或更大的 SQLite 数据库将难以管理。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;高写入量&lt;/strong&gt;：SQLite 只允许在任何给定时间进行一次写入操作，这极大地限制了它的吞吐量。如果您的应用程序需要大量写入操作或多个并发写入器，则 SQLite 可能无法满足您的需求。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;需要网络访问&lt;/strong&gt;：因为 SQLite 是一个无服务器数据库，它不提供对其数据的直接网络访问。此访问内置于应用程序中。如果 SQLite 中的数据与应用程序位于不同的机器上，则需要高带宽的引擎到磁盘的网络链接。这是一种昂贵、低效的解决方案，在这种情况下，客户端-服务器 DBMS 可能是更好的选择。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;a href=&quot;https://www.sqlite.org/serverless.html&quot;&gt;SQLite 项目的网站&lt;/a&gt; 将其描述为“无服务器”数据库。大多数关系数据库引擎都实现为服务器进程，其中程序通过中继请求的进程间通信与主机服务器通信。相比之下，SQLite 允许任何访问数据库的进程直接读写数据库磁盘文件。这简化了 SQLite 的设置过程，因为它消除了配置服务器进程的任何需要。同样，使用 SQLite 数据库的程序也无需配置：它们只需要访问磁盘即可。SQLite 是免费的开源软件，使用它不需要特殊许可。&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/63bad8ac1d0f6a2f376e6022&quot;&gt;倾城之链 - SQLite Home Page&lt;/a&gt;&lt;/p&gt;&lt;p&gt;对倾城之链感兴趣的朋友，可通过 Web，小程序，快应用等渠道进行访问(后续将支持更多，如 VsCode 插件，Chrome 扩展等)。您有任何问题，欢迎随时向我们反馈（您可以通过官网反馈渠道，或添加如下客服微信），🤲 。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://image.nicelinks.site/%E5%80%BE%E5%9F%8E%E4%B9%8B%E9%93%BE-%E5%BE%AE%E4%BF%A1-mini.jpeg&quot; alt=&quot;倾城之链 - 客服微信&quot;/&gt;&lt;/p&gt;&lt;h2 id=&quot;本期文末寄语&quot;&gt;&lt;a href=&quot;#%E6%9C%AC%E6%9C%9F%E6%96%87%E6%9C%AB%E5%AF%84%E8%AF%AD&quot; aria-label=&quot;本期文末寄语 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;本期文末寄语&lt;/h2&gt;&lt;p&gt;无人问津也好，技不如人也罢，你都要试着安静下来，去做自己该做的事，而不是让烦躁和焦虑，毁掉你本就不多的热情和定力。心可以碎，手不能停，该干什么干什么在崩溃中继续前行，这才是一个成年人的素养。── 当代 · 余华&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://nicelinks.site/?utm_source=weekly&quot;&gt;倾城之链&lt;/a&gt;作为一个开放平台，旨在云集全球&lt;strong&gt;优秀网站&lt;/strong&gt;，探索互联网中更广阔的世界；在这里，你可以轻松发现、学习、分享更多有用或有趣的事物。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://image.nicelinks.site/nicelinks-miniprogram-code.jpeg?imageView2/1/w/250/h/250/interlace/1/ignore-error/1&quot; alt=&quot;小程序码 - 倾城之链&quot;/&gt;&lt;/p&gt;&lt;h2 id=&quot;您可能感兴趣的文章&quot;&gt;&lt;a href=&quot;#%E6%82%A8%E5%8F%AF%E8%83%BD%E6%84%9F%E5%85%B4%E8%B6%A3%E7%9A%84%E6%96%87%E7%AB%A0&quot; aria-label=&quot;您可能感兴趣的文章 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;您可能感兴趣的文章&lt;/h2&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>cdb8350b777a6d63061e8a90f1f0d784</guid>
<title>一个技术总监的 2022 复盘</title>
<link>https://toutiao.io/k/gf8hpwz</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;profile_inner&quot;&gt;
                  &lt;strong class=&quot;profile_nickname&quot;&gt;程序员泥瓦匠&lt;/strong&gt;
                  &lt;img class=&quot;profile_avatar&quot; id=&quot;js_profile_qrcode_img&quot; src=&quot;&quot; alt=&quot;&quot;/&gt;

                  &lt;p class=&quot;profile_meta&quot;&gt;
                  &lt;label class=&quot;profile_meta_label&quot;&gt;Weixin ID&lt;/label&gt;
                  &lt;span class=&quot;profile_meta_value&quot;&gt;bysocket&lt;/span&gt;
                  &lt;/p&gt;

                  &lt;p class=&quot;profile_meta&quot;&gt;
                  &lt;label class=&quot;profile_meta_label&quot;&gt;About Feature&lt;/label&gt;
                  &lt;span class=&quot;profile_meta_value&quot;&gt;我是泥瓦匠，一枚懂点商业的程序员。在这里分享适合程序员非代码相关的信息，为程序员弯道超车之路做准备！&lt;/span&gt;
                  &lt;/p&gt;
                &lt;/div&gt;
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>8ec15e9a4a1b448aef17e4d57add465c</guid>
<title>OpenWrt+R66s 软路由入门尝鲜</title>
<link>https://toutiao.io/k/5mhxuan</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section class=&quot;toc-content post tag-openwrt tag-router tag-r66s tag-vpn tag-network tag-ssr no-image&quot;&gt;
      &lt;h2 id=&quot;%E8%83%8C%E6%99%AF&quot;&gt;背景&lt;/h2&gt;&lt;figure class=&quot;kg-card kg-image-card&quot;&gt;&lt;img src=&quot;https://blog.mythsman.com/content/images/2023/01/image.png&quot; class=&quot;kg-image&quot; alt=&quot;&quot; loading=&quot;lazy&quot; srcset=&quot;https://blog.mythsman.com/content/images/size/w600/2023/01/image.png 600w, https://blog.mythsman.com/content/images/2023/01/image.png 720w&quot; sizes=&quot;(min-width: 720px) 720px&quot;/&gt;&lt;/figure&gt;&lt;p&gt;随着家里电子设备越来越多，客户端维度的科学上网配置已经逐渐支持不了日常需求了：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;设备数量越来越多；配置不过来，且容易触发机场的客户端连接上限。&lt;/li&gt;&lt;li&gt;设备类型越来越多；安卓端、IPhone端、IPAD端、Mac端、树莓派端、PC端、Kindle端，需要的客户端各不相同，配置的思维负担太大，甚至有些类型的设备没有靠谱的客户端。&lt;/li&gt;&lt;li&gt;PAC规则越来越多；自己通常会有一个主要用的PAC规则，但是当换设备后，就需要重新配置，非常麻烦。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;于是趁着工作之闲，研究了一下软路由，一站式解决了家庭上网问题。&lt;/p&gt;&lt;h2 id=&quot;%E7%A1%AC%E4%BB%B6%E9%80%89%E8%B4%AD&quot;&gt;硬件选购&lt;/h2&gt;&lt;p&gt;市场上的可自由刷机的路由器还是很多的，不过对于入门级屌丝租客党来说，明白自己到底需要什么是很重要的：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;不需要 WIFI 功能。移动光猫自带 WIFI 功能，软路由只需专注做网关服务器即可。后续如果对 WIFI 有更高要求再另买专用的 WIFI。所谓专业的东西做专业的事。&lt;/li&gt;&lt;li&gt;不需要 HDMI 功能。带 HDMI 功能的基本都是定位于&lt;strong&gt;迷你主机&lt;/strong&gt;或者&lt;strong&gt;电视盒子&lt;/strong&gt;的，其实做路由器根本用不到。&lt;/li&gt;&lt;li&gt;网口并不需要太多。考虑到家庭设备都是用光猫自带的WIFI连接，因此不需要很多网口。最低一个 LAN 口其实就足矣。&lt;/li&gt;&lt;li&gt;性能并不需要太高。毕竟租房的时候办的也就是200M带宽，网线再快也没用。同时家里也没搞什么视频工作站，内网也基本没啥带宽。况且性能高了的话、耗电、散热、占地都是问题。&lt;/li&gt;&lt;li&gt;芯片尽可能新一点。芯片类产品买新不买旧，就算不太在乎性能，也得考虑性价比，少买老古董不做垃圾佬。&lt;/li&gt;&lt;li&gt;尽量支持卡刷。线刷基本都需要去官方文档上查流程，比较麻烦。而卡刷的流程几乎都是一样的，拔卡写镜像开机即可。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;基于上述原则，类似小米AX6000之类的 WIFI 路由器基本不会考虑了；类似J4125之类的性能较强、耗电较高的基于 X86 的路由器基本也不会考虑了；类似 R2s ,N1盒子之类的老东西也不考虑了。&lt;/p&gt;&lt;p&gt;搜寻了一番，发现电犀牛（FastRhino）的 &lt;a href=&quot;http://r68s.cn/&quot;&gt;R66s&lt;/a&gt; 刚好符合我的基本要求。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;接口和大小刚合适。两个2.5G网口、两个USB3.0口、使用SD卡、无HDMI口，因此十分小巧。&lt;/li&gt;&lt;li&gt;产品和芯片比较新。产品是2022年5月发布，瑞芯微（Rockchip）RK3568芯片。&lt;/li&gt;&lt;li&gt;性价比较高。2G内存+32G卡配置到手320¥不到。&lt;/li&gt;&lt;/ul&gt;&lt;figure class=&quot;kg-card kg-image-card&quot;&gt;&lt;img src=&quot;https://blog.mythsman.com/content/images/2023/01/image-3.png&quot; class=&quot;kg-image&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/figure&gt;&lt;p&gt;相比一些从电视盒子改来的玩意、或者羞羞答答才放开刷机功能的WIFI路由器、或者是仗着原装OpenWrt割韭菜的路由器来说，这个产品还是比较大胆和良心的。&lt;/p&gt;&lt;h2 id=&quot;%E5%9B%BA%E4%BB%B6%E9%80%89%E6%8B%A9&quot;&gt;固件选择&lt;/h2&gt;&lt;p&gt;OpenWrt官方固件自然也是可以的，不过考虑到国人的常用需求，一般都是用国内维护的固件。常见的固件有：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Lean 的 LEDE 固件（&lt;a href=&quot;https://github.com/coolsnowwolf/lede&quot;&gt;官网&lt;/a&gt;）。&lt;/li&gt;&lt;li&gt;易有云的 iStoreOS 固件（&lt;a href=&quot;https://fw.koolcenter.com/iStoreOS/&quot;&gt;官网&lt;/a&gt;）。&lt;/li&gt;&lt;li&gt;Flippy 的固件（&lt;a href=&quot;https://github.com/unifreq/openwrt_packit&quot;&gt;官网&lt;/a&gt;）。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;个人感觉这些固件其实都大同小异，主要区别还是上游的 OpenWrt 版本不同、Linux 内核版本不同、默认自带的软件包不同（尤其是 iStoreOS 自带了很多私货应用）。其实 R66s 出厂自带的镜像也是够用的（其实就是 Lean 的固件），只是出于政策原因，没有自带科学上网工具。这些东西动动小手自己装下也行，不过为了方便大家开箱即用，直接写到固件里用起来更方便而已。&lt;/p&gt;&lt;p&gt;如果需要自己刷机，其实也不复杂。用读卡器插入PC，用 &lt;a href=&quot;https://rufus.ie/en/&quot;&gt;rufus&lt;/a&gt; 工具直接写入指定镜像即可。&lt;/p&gt;&lt;figure class=&quot;kg-card kg-image-card&quot;&gt;&lt;img src=&quot;https://blog.mythsman.com/content/images/2023/01/image-4.png&quot; class=&quot;kg-image&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/figure&gt;&lt;p&gt;这里还遇到了有一个有意思的点，原装的 32G SD 卡插进来之后，Windows系统的文件管理器只识别出了 64MB。原本以为是遇到了奸商，但是用磁盘管理工具一看的确是 32G 的盘。后来研究后才发现是因为这个是系统引导盘，因此有时只会识别系统主分区的大小，有时甚至不会被识别为外部存储，不影响使用。&lt;/p&gt;&lt;p&gt;正常刷完后，SD 卡分区大致如下。只使用了主分区，还有大量未分配的区域，如有需要等启动后再新增分区即可。&lt;/p&gt;&lt;figure class=&quot;kg-card kg-image-card&quot;&gt;&lt;img src=&quot;https://blog.mythsman.com/content/images/2023/01/image-5.png&quot; class=&quot;kg-image&quot; alt=&quot;&quot; loading=&quot;lazy&quot; srcset=&quot;https://blog.mythsman.com/content/images/size/w600/2023/01/image-5.png 600w, https://blog.mythsman.com/content/images/2023/01/image-5.png 941w&quot; sizes=&quot;(min-width: 720px) 720px&quot;/&gt;&lt;/figure&gt;&lt;h2 id=&quot;%E7%BD%91%E7%BB%9C%E8%AE%BE%E8%AE%A1&quot;&gt;网络设计&lt;/h2&gt;&lt;p&gt;相关背景知识可以先看一下油管 &lt;a href=&quot;https://www.youtube.com/watch?v=OPG47_wT3XI&amp;amp;t=941s&quot;&gt;jack stone的家庭网络设计&lt;/a&gt;，讲的挺好，颇有老司机风范。&lt;/p&gt;&lt;p&gt;考虑到我这里光猫自带的WIFI也够用，但是光猫后台没有admin权限，很多东西不好改。并且出于社恐也不想打电话找宽带师傅把光猫的路由模式改桥接模式。因此我还是采用了 &lt;strong&gt;光猫做主路由+R66s做旁路由&lt;/strong&gt; 的方案：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;软路由和光猫以 LAN口-LAN口相连。&lt;/li&gt;&lt;li&gt;整个网络中只使用光猫的网段和光猫的DHCP服务。&lt;/li&gt;&lt;li&gt;光猫不做任何配置，由接入的客户端手动配置网关和 DNS 到软路由。&lt;/li&gt;&lt;/ol&gt;&lt;h2 id=&quot;%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE&quot;&gt;网络配置&lt;/h2&gt;&lt;p&gt;对于新手小白来说，这一步最容易踩坑。尤其是当接线和配置不对时，连后台都打不开，这是最让人沮丧的。我个人也是尝试了很多姿势才了解其中的弯弯绕。&lt;/p&gt;&lt;h3 id=&quot;%E9%94%99%E8%AF%AF%E5%A7%BF%E5%8A%BF%EF%BC%9A%E8%BD%AF%E8%B7%AF%E7%94%B1lan%E5%8F%A3%E7%9B%B4%E6%8E%A5%E6%8E%A5%E5%85%89%E7%8C%ABlan%E5%8F%A3&quot;&gt;错误姿势：软路由LAN口直接接光猫LAN口&lt;/h3&gt;&lt;p&gt;唉？前面不是说软路由和光猫就是要LAN口相连么？没错，但那是指的配置完成后的连接方式。&lt;/p&gt;&lt;p&gt;在设备出厂、或者刷了新固件后，说明书或文档上都会写清楚当前固件默认配置的IP。例如 R66s 刷的 Lean 固件默认 IP 就是 192.168.100.1。这个配置的意思是，当前设备的 LAN 口配置的是 192.168.100.1 的静态 IP。&lt;/p&gt;&lt;p&gt;而我这边光猫的网段是 192.168.1.0/24 ，软路由的静态 IP 不在这个网段内。这就导致连接光猫的PC设备和软路由是无法连接的，自然也就访问不到后台了。&lt;/p&gt;&lt;h3 id=&quot;%E9%94%99%E8%AF%AF%E5%A7%BF%E5%8A%BF%EF%BC%9A%E8%BD%AF%E8%B7%AF%E7%94%B1wan%E5%8F%A3%E7%9B%B4%E6%8E%A5%E6%8E%A5%E5%85%89%E7%8C%ABlan%E5%8F%A3&quot;&gt;错误姿势：软路由WAN口直接接光猫LAN口&lt;/h3&gt;&lt;p&gt;既然软路由配置静态IP不行，那是不是直接用 WAN 口和光猫的 LAN 口相连就行了？毕竟 WAN 口的默认配置是 DHCP 协议，肯定可以直接加到光猫的网段中。&lt;/p&gt;&lt;p&gt;理论上说当然可以，但是实际上还是要看固件的配置。因为出于安全考虑，很多固件的默认防火墙配置是只允许从 LAN 口访问后台，不允许从 WAN 口访问。&lt;/p&gt;&lt;figure class=&quot;kg-card kg-image-card&quot;&gt;&lt;img src=&quot;https://blog.mythsman.com/content/images/2023/01/image-6.png&quot; class=&quot;kg-image&quot; alt=&quot;&quot; loading=&quot;lazy&quot; srcset=&quot;https://blog.mythsman.com/content/images/size/w600/2023/01/image-6.png 600w, https://blog.mythsman.com/content/images/size/w1000/2023/01/image-6.png 1000w, https://blog.mythsman.com/content/images/2023/01/image-6.png 1386w&quot; sizes=&quot;(min-width: 720px) 720px&quot;/&gt;&lt;/figure&gt;&lt;p&gt;如果我记得不错的话，iStore OS 默认是允许从 WAN 口访问的，而 Lean 固件默认是不允许从 WAN 口访问的。&lt;/p&gt;&lt;h3 id=&quot;%E6%AD%A3%E7%A1%AE%E5%A7%BF%E5%8A%BF%EF%BC%9A%E8%BD%AF%E8%B7%AF%E7%94%B1lan%E5%8F%A3%E5%85%88%E5%92%8C%E7%94%B5%E8%84%91%E7%9B%B4%E8%BF%9E%E9%85%8D%E7%BD%AE%E5%A5%BD%E5%90%8E%E5%86%8D%E6%8E%A5%E5%85%89%E7%8C%ABlan%E5%8F%A3&quot;&gt;正确姿势：软路由LAN口先和电脑直连配置好后再接光猫LAN口&lt;/h3&gt;&lt;p&gt;为了避免上面的各种问题，最稳妥的方法还是电脑端直接和光猫LAN口相连（或者通过交换机相连），这样就避免了各种上面的幺蛾子。如果一不小心光猫的静态IP还和光猫的IP冲突了，直接断开光猫即可。&lt;/p&gt;&lt;p&gt;首次连接到软路由后台后，按照旁路由的配置思路，需要在 网络-&amp;gt; 接口 -&amp;gt; LAN 中进行如下配置：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;配置协议为静态地址。&lt;/li&gt;&lt;li&gt;配置 IPV4 地址为&lt;strong&gt;当前光猫网段&lt;/strong&gt;下的一个未被占用的IP地址。&lt;/li&gt;&lt;li&gt;配置子网掩码为光猫的掩码。&lt;/li&gt;&lt;li&gt;配置 IPV4 网关为光猫的 IP 地址。&lt;/li&gt;&lt;li&gt;配置 DNS 服务器为光猫的 IP 地址。&lt;/li&gt;&lt;li&gt;关闭 DHCP 开关。&lt;/li&gt;&lt;/ol&gt;&lt;figure class=&quot;kg-card kg-image-card&quot;&gt;&lt;img src=&quot;https://blog.mythsman.com/content/images/2023/01/image-9.png&quot; class=&quot;kg-image&quot; alt=&quot;&quot; loading=&quot;lazy&quot; srcset=&quot;https://blog.mythsman.com/content/images/size/w600/2023/01/image-9.png 600w, https://blog.mythsman.com/content/images/size/w1000/2023/01/image-9.png 1000w, https://blog.mythsman.com/content/images/2023/01/image-9.png 1188w&quot; sizes=&quot;(min-width: 720px) 720px&quot;/&gt;&lt;/figure&gt;&lt;p&gt;配置完成后，当前页面应当就加载不出来了，这时候将软路由和光猫 LAN-LAN 相连，然后通过这里配置的静态IP就又可访问了。&lt;/p&gt;&lt;h2 id=&quot;openwrt%E9%87%8D%E8%A6%81%E8%B7%AF%E5%BE%84&quot;&gt;OpenWrt重要路径&lt;/h2&gt;&lt;p&gt;OpenWrt 基于 Linux，但是一些重要的配置和Linux 还是有些区别的。重点要关注下面路径下的文件：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;code&gt;/etc/config&lt;/code&gt; 这里记录了各个应用的通用配置。操作这里的文件和在 luci 页面中操作是等价的。&lt;/li&gt;&lt;li&gt;&lt;code&gt;/etc/init.d&lt;/code&gt; 这里记录了各个应用的启动命令，类似 service 或是 systemctl 的功能。&lt;/li&gt;&lt;li&gt;&lt;code&gt;/usr/lib/lua/luci/&lt;/code&gt; 这里记录了 luci 的页面信息，用于操作 &lt;code&gt;/etc/config&lt;/code&gt; 的配置。&lt;/li&gt;&lt;/ol&gt;&lt;h2 id=&quot;%E9%85%8D%E7%BD%AE-ssr-plus&quot;&gt;配置 SSR-PLUS&lt;/h2&gt;&lt;p&gt;Lean 国际版固件自带，或者直接在软件包下搜索安装下面两个包，配置上自己准备好的机场，就能开心使用了。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;luci-app-ssr-plus
luci-i18n-ssr-plus-zh-cn&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;由于 SSR 会深入影响 DNS 解析，路由转发等基础功能。因此一般来说，SSR可以算是家庭网络的最大不稳定因素。所以这里有必要简单了解下 SSR-PLUS 的工作原理，方便定位网络问题。&lt;/p&gt;&lt;p&gt;单纯的 SSR 其实就是一个基于 libshadowsocks 的加密 socks 代理。不过仅此而已肯定不够，毕竟更重要的问题是“选择哪些流量走代理，哪些流量不走代理“。因此我理解 SSR-PLUS 就是 OpenWrt 下 SSR 结合了 iptables + ipset + dnsmasq 的组合工具。&lt;/p&gt;&lt;p&gt;SSR-PLUS 在启动时会加载两个外部订阅的数据。这些配置可以在 &lt;code&gt;/etc/ssrplus&lt;/code&gt; 下看到：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;国内IP列表。里面记录了部署在国内不会被墙的IP网段。&lt;/li&gt;&lt;li&gt;GFW 列表。里面记录了被墙的域名。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;国内IP列表比较简单，就是在 ipset 里添加一个 china 的路由规则集，方便后续进行 iptables 设置。而GFW 列表除了设置 ipset 之外，还要进行 DNS 选路。&lt;/p&gt;&lt;h3 id=&quot;%E8%BF%9B%E8%A1%8C-dns-%E9%80%89%E8%B7%AF&quot;&gt;进行 DNS 选路&lt;/h3&gt;&lt;p&gt;众所周知，DNS 是明文报文，无良运营商可以很方便的进行 DNS 污染，导致直接解析到错误 IP，更别提后续的连接了。&lt;/p&gt;&lt;p&gt;一种简单的解决方案是将所有 DNS 请求都走 SSR 的 socks 代理，但这样毕竟效率较低。因此实践中常用的办法就是：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;本地启动一个走 SSR 代理的 DNS 服务。可以用 dns2tcp 或者 dns2socks 之类的工具。通常暴露的是 5335 端口。&lt;/li&gt;&lt;li&gt;根据预先配置的 GFW 列表，告知本地的 dnsmasq 服务，对 GFW 列表内的域名走加密通道，对GFW列表外的域名走普通通道。SSR-PLUS 对 dnsmasq 的配置可以参见 &lt;code&gt;/tmp/dnsmasq.d/dnsmasq-ssrplus.d&lt;/code&gt; 。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;这样就能做到安全的 DNS 了。&lt;/p&gt;&lt;h3 id=&quot;%E9%85%8D%E7%BD%AE-ipset-%E8%A7%84%E5%88%99&quot;&gt;配置 ipset 规则&lt;/h3&gt;&lt;p&gt;我们知道 GFW 列表只记录域名，而在用 iptables 对流量路由转发时只能拿到 IP。因此 dnsmasq 在解析 GFW 后，还会将解析出来的 IP 加入到一个名为 gfwlist 的 ipset 规则。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;root@OpenWrt:~# ipset list gfwlist
Name: gfwlist
Type: hash:net
Revision: 6
Header: family inet hashsize 1024 maxelem 65536
Size in memory: 56232
References: 2
Number of entries: 1686
Members:
20.198.162.78
65.21.236.8
142.250.186.54
203.77.190.0
54.148.90.231
....&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这样一来，再配合 iptables 的 NAT 的 PREROUTING 设置，就能做到针对 GFW 内的域名进行代理转发：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;root@OpenWrt:~# iptables -L -t nat
Chain PREROUTING (policy ACCEPT)
target     prot opt source               destination
SS_SPEC_WAN_AC  tcp  --  anywhere             anywhere             /* _SS_SPEC_RULE_ */
...

Chain SS_SPEC_WAN_AC (2 references)
SS_SPEC_WAN_FW  all  --  anywhere             anywhere             match-set gfwlist dst
...

Chain SS_SPEC_WAN_FW (4 references)
target     prot opt source               destination         
RETURN     all  --  anywhere             0.0.0.0/8           
RETURN     all  --  anywhere             10.0.0.0/8          
RETURN     all  --  anywhere             127.0.0.0/8         
RETURN     all  --  anywhere             169.254.0.0/16      
RETURN     all  --  anywhere             172.16.0.0/12       
RETURN     all  --  anywhere             192.168.0.0/16      
RETURN     all  --  anywhere             0.0.0.224.in-addr.arpa/4 
RETURN     all  --  anywhere             240.0.0.0/4         
REDIRECT   tcp  --  anywhere             anywhere             redir ports 1234
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;gfw%E6%A8%A1%E5%BC%8F%E5%92%8C%E7%BB%95%E8%BF%87%E4%B8%AD%E5%9B%BD%E5%A4%A7%E9%99%86ip%E6%A8%A1%E5%BC%8F%E7%9A%84%E5%8C%BA%E5%88%AB&quot;&gt;GFW模式和绕过中国大陆IP模式的区别&lt;/h3&gt;&lt;p&gt;有了上面的基础，我们就明白了其实这两种模式的区别也很简单。看下两种模式下的 iptables 表就清楚了。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;GFW模式&lt;/strong&gt;：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;Chain SS_SPEC_WAN_AC (2 references)                 
target     prot opt source               destination                  
RETURN     all  --  anywhere             anywhere             match-set whitelist dst
SS_SPEC_WAN_FW  all  --  anywhere             anywhere             match-set blacklist dst
RETURN     all  --  anywhere             anywhere             match-set bplan src         
SS_SPEC_WAN_FW  all  --  anywhere             anywhere             match-set fplan src    
RETURN     tcp  --  anywhere             36.156.102.177       tcp dpt:!domain              
RETURN     all  --  anywhere             anywhere             match-set china dst         
SS_SPEC_WAN_FW  all  --  anywhere             anywhere             match-set gfwlist dst  
                                                               &lt;/code&gt;&lt;/pre&gt;&lt;p&gt;简要的工作流程是：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;判断目的地址是否在白名单，如果是则不转发。&lt;/li&gt;&lt;li&gt;判断目的地址是否在黑名单，如果是则直接转发。&lt;/li&gt;&lt;li&gt;判断目的地址是否是大陆IP，如果是则不转发。&lt;/li&gt;&lt;li&gt;判断目的地址是否在GFW列表中，如果是则直接转发。&lt;/li&gt;&lt;li&gt;最后默认&lt;strong&gt;不转发&lt;/strong&gt;。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;绕过中国大陆IP模式&lt;/strong&gt;：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;Chain SS_SPEC_WAN_AC (2 references)                 
target     prot opt source               destination                     
RETURN     all  --  anywhere             anywhere             match-set whitelist dst
SS_SPEC_WAN_FW  all  --  anywhere             anywhere             match-set blacklist dst
RETURN     all  --  anywhere             anywhere             match-set bplan src         
SS_SPEC_WAN_FW  all  --  anywhere             anywhere             match-set fplan src    
RETURN     tcp  --  anywhere             36.156.102.177       tcp dpt:!domain              
RETURN     all  --  anywhere             anywhere             match-set ss_spec_wan_ac dst
RETURN     all  --  anywhere             anywhere             match-set china dst         
SS_SPEC_WAN_FW  all  --  anywhere             anywhere &lt;/code&gt;&lt;/pre&gt;&lt;p&gt;简要的工作流程是：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;判断目的地址是否在白名单，如果是则不转发。&lt;/li&gt;&lt;li&gt;判断目的地址是否在黑名单，如果是则直接转发。&lt;/li&gt;&lt;li&gt;判断目的地址是否是大陆IP，如果是则不转发。&lt;/li&gt;&lt;li&gt;最后默认&lt;strong&gt;转发&lt;/strong&gt;。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;大白话总结就是：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;GFW 列表模式是：默认不翻墙，除非你在GFW列表中配置。&lt;/li&gt;&lt;li&gt;绕过大陆IP模式是：默认翻墙，除非你在国内。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;那么具体家里选哪个更合适呢？我个人建议选 GFW 列表模式。虽然绕过大陆IP模式看起来方便，但是：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;考虑到正常大部分流量还是不希望转发的，任何网站只有在GFW列表中、或者你配置的黑名单中才会翻墙。这样你会明确的知道哪些是翻的，哪些是不翻的。&lt;/li&gt;&lt;li&gt;中国大陆IP列表其实并不完善，很多运营商会偷摸摸使用一些&lt;strong&gt;保留IP&lt;/strong&gt;作为局域网IP（例如类似 224.0.0.68 这类地址）。这就导致这些局域网IP会被中国大陆IP列表当成是海外IP进行转发。这显然就会导致难以排查的网络问题。（尤其是使用 N2N 之类的 P2P VPN 工具时）&lt;/li&gt;&lt;/ol&gt;&lt;h2 id=&quot;%E9%85%8D%E7%BD%AE-n2n&quot;&gt;配置 n2n&lt;/h2&gt;&lt;p&gt;使用 v3 版的 n2n 需要先更新下 opkg 的源，否则拉不到适配 v3 版本的 luci-app 。虽然可以直接改 &lt;code&gt;/etc/config/n2n&lt;/code&gt; 配置文件，不过毕竟不太优雅。&lt;/p&gt;&lt;p&gt;不知道为啥固件自带的源长这样，luci 的版本都跟其他的不一样。。。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;src/gz openwrt_base https://downloads.immortalwrt.org/releases/21.02.1/packages/aarch64_generic/base
src/gz openwrt_luci src/gz openwrt_luci https://downloads.immortalwrt.org/releases/packages-18.06-k5.4/aarch64_generic/luci
src/gz openwrt_packages https://downloads.immortalwrt.org/releases/21.02.1/packages/aarch64_generic/packages
src/gz openwrt_routing https://downloads.immortalwrt.org/releases/21.02.1/packages/aarch64_generic/routing
src/gz openwrt_telephony https://downloads.immortalwrt.org/releases/21.02.1/packages/aarch64_generic/telephony&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;改成一样即可：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;src/gz openwrt_base https://downloads.immortalwrt.org/releases/21.02.1/packages/aarch64_generic/base
src/gz openwrt_luci https://downloads.immortalwrt.org/releases/21.02.1/packages/aarch64_generic/luci
src/gz openwrt_packages https://downloads.immortalwrt.org/releases/21.02.1/packages/aarch64_generic/packages
src/gz openwrt_routing https://downloads.immortalwrt.org/releases/21.02.1/packages/aarch64_generic/routing
src/gz openwrt_telephony https://downloads.immortalwrt.org/releases/21.02.1/packages/aarch64_generic/telephony&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;配置好 n2n 客户端后，再在服务端配置好 nginx，挂上 ssl 域名 ，就能从远端访问家里的 OpenWrt 配置后台了。&lt;/p&gt;&lt;p&gt;当然，由于有些 luci 组件是需要额外暴露端口的，因此直挂 80 端口的 nginx 的话，实时监控、tty终端之类的功能还是没法用的。&lt;/p&gt;&lt;h2 id=&quot;%E9%85%8D%E7%BD%AE-dropbear&quot;&gt;配置 Dropbear&lt;/h2&gt;&lt;p&gt;Dropbear 可以理解是 OpenWrt 下的 sshd 。为了安全起见，dropbear 默认只对 lan 口过来的请求开放 ssh 连接。因此在配置好 n2n 之后，也是无法直接访问这个服务的。这里需要先关闭下 dropbear 对 lan 口的绑定：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;root@OpenWrt:/etc/config# cat /etc/config/dropbear 
config dropbear
        option PasswordAuth &#x27;on&#x27;
        option RootPasswordAuth &#x27;on&#x27;
        option Port         &#x27;22&#x27;
#        option Interface    &#x27;lan&#x27;
#       option BannerFile   &#x27;/etc/banner&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;配置好后 restart 即可生效。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;root@OpenWrt:/etc/config# /etc/init.d/dropbear restart&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;%E9%85%8D%E7%BD%AE%E5%90%84%E4%B8%AA%E5%AE%A2%E6%88%B7%E7%AB%AF&quot;&gt;配置各个客户端&lt;/h2&gt;&lt;p&gt;软路由配置好了后先不要急着连接设备。建议先重启几次路由器，确保配置正常生效，且重启不丢失。确认完成后，各个需要连接的客户端再手动配置下：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;关闭 DHCP，IP 地址设置为原先自动分配的IP即可。&lt;/li&gt;&lt;li&gt;将网关/路由器设置为软路由IP。&lt;/li&gt;&lt;li&gt;将子网掩码设置为和主路由一致。&lt;/li&gt;&lt;li&gt;将 DNS 设置为软路由IP。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;正常情况下，配置好后即可感受科学的魅力，不过偶尔也可能出现一些奇怪的坑。此时可以先尝试：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;关闭 IPV6。SSR 不支持 IPV6 ，如果一不小心走了 IPV6，则基本上是翻不出去的。&lt;/li&gt;&lt;li&gt;重启设备。像 IPhone 这类的设备似乎配置完后要重启一下，否则容易报诸如 SSL Error 之类的错。&lt;/li&gt;&lt;/ol&gt;
    &lt;/section&gt;
  &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>665486035cac24f579d734cc813580f2</guid>
<title>4种MySQL数据同步ES的方法，学废了！！</title>
<link>https://toutiao.io/k/v2yq07i</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content js_underline_content             autoTypeSetting24psection&amp;#10;            &quot; id=&quot;js_content&quot;&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;span&gt;👉 欢迎准备 Java 面试以及学习 Java 的同学加入我的 &lt;/span&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=Mzg2OTA0Njk0OA==&amp;amp;mid=2247530558&amp;amp;idx=1&amp;amp;sn=cb2ed58af806ee3d3d174ce5ae09c7e3&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;&lt;strong&gt;知识星球&lt;/strong&gt;&lt;/span&gt;&lt;/a&gt;&lt;span&gt; ，干货很多！收费虽然是白菜价，但星球里的内容或许比你参加上万的培训班质量还要高。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;👉 &lt;/span&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=Mzg2OTA0Njk0OA==&amp;amp;mid=2247530643&amp;amp;idx=2&amp;amp;sn=cf4855e15ea7c8a669c7896b8337292b&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;&lt;strong&gt;《Java 面试指北》&lt;/strong&gt;&lt;/span&gt;&lt;/a&gt;&lt;span&gt; 来啦！这是一份教你如何更高效地准备面试的小册，涵盖常见八股文（系统设计、常见框架、分布式、高并发 ......）、优质面经等内容。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;Java面试指南网站：javaguide.cn&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大家应该都在各种电商网站检索过商品，检索商品一般都是通过什么实现呢？搜索引擎 Elasticsearch。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那么问题来了，商品上架，数据一般写入到 MySQL 的数据库中，那么用于检索的数据又是怎么同步到 Elasticsearch 的呢？&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3123425692695214&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWdEy0ZPFSJ5Z68A23ZKOicMurB2h02lQ3XTppFOYuHcWiaduTDCof8XicY8p3Ay4icoNpAR0XicuCaibCvQ/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-w=&quot;794&quot;/&gt;&lt;figcaption&gt;MySQL同步ES&lt;/figcaption&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;1.同步双写&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这是能想到的最直接的方式，在写入 MySQL，直接也同步往 ES 里写一份数据。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8571428571428571&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWdEy0ZPFSJ5Z68A23ZKOicMu0PAXgtggnoqTXTpbADClWJXmS3aZu6XoMlTZjfzWUgpOxef9ibH5y7A/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-w=&quot;756&quot;/&gt;&lt;figcaption&gt;同步双写&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于这种方式：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;优点：实现简单&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;缺点：&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;业务耦合，商品的管理中耦合大量数据同步代码&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;影响性能，写入两个存储，响应时间变长&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;不便扩展：搜索可能有一些个性化需求，需要对数据进行聚合，这种方式不便实现&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.异步双写&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们也很容易想到异步双写的办法，上架商品的时候，先把商品数据丢进 MQ，为了解耦合，我们一般会拆分一个搜索服务，由搜索服务去订阅商品变动的消息，来完成同步。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6485943775100401&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWdEy0ZPFSJ5Z68A23ZKOicMuV7Bs9GibVHunaSDib3m74A3EcaRe1VgSgvPPDib0zl57EsfPR9ibHGt4Hw/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-w=&quot;996&quot;/&gt;&lt;figcaption&gt;异步双写&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;前面说的，一些数据需要聚合处理成类似宽表的结构怎么办呢？例如商品库的商品品类、spu、sku 表是分开的，但是查询是跨维度的，在 ES 里再聚合一次效率就低一些，最好就是把商品的数据给聚合起来，在 ES 里以类似大宽表的形式存储，这样一来查询效率就高一些。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.0574074074074074&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWdEy0ZPFSJ5Z68A23ZKOicMuPxUPmIaXRFFlSd5xXyEqSB6byyFY2lOMcFuXiaH3cXDpZjlWN6oKMnA/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-w=&quot;1080&quot;/&gt;&lt;figcaption&gt;多维度多条件查询&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这种其实没什么好办法，基本上还是得搜索服务直接查库，或者远程调用，再查询一遍商品的数据库，就是所谓的回查。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6101851851851852&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWdEy0ZPFSJ5Z68A23ZKOicMuvL5zMiaK0YRjrfaIiby3YqcRdpLicgwzP9kvY3ANtmM4gNc1RUoeEibHXA/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-w=&quot;1080&quot;/&gt;回查完成聚合&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这种方式：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;优点：&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;解耦合，商品服务无需关注数据同步&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;实时性较好，使用 MQ，正常情况下，同步完成在秒级&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;section&gt;缺点：引入了新的组件和服务，增加了复杂度&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3.定时任务&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;假如我们要快速搞搞，数据量有没那么大，怎么办呢？定时任务也可以。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.9144542772861357&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWdEy0ZPFSJ5Z68A23ZKOicMun2C7VPibeb4ZjicmuDZJKurnGh4w7oeD40r4PucFMC9yAqNXemgcLmrA/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-w=&quot;678&quot;/&gt;&lt;figcaption&gt;定时任务&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;定时任务，最麻烦的一点是频率不好选，频率高的话，会非自然地形成业务的波峰，导致存储的 CPU、内存占用波峰式上升，频率低的话实时性比较差，而且也有波峰的情况。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这种方式：&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;4.数据订阅&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;还有一种方式，就是最时兴的数据订阅。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;MySQL 通过 binlog 订阅实现主从同步，各路数据订阅框架比如 canal 就依据这个原理，将 client 组件伪装成从库，来实现数据订阅。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3824074074074074&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWdEy0ZPFSJ5Z68A23ZKOicMuka38jgLZiaJgOf65bDwibXRLZicficeZYibumviaZrM8UuM8hSY4gibaVT6HQ/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-w=&quot;1080&quot;/&gt;&lt;figcaption&gt;MySQL主从同步&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们以应用最广泛的 canal 为例，canal 通过&lt;code&gt;canal-adapter&lt;/code&gt;，支持多种适配器，其中就有 ES 适配器，通过一些配置，启动之后，就可以直接把 MySQL 数据同步到 ES，这个过程是零代码的。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7479508196721312&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWdEy0ZPFSJ5Z68A23ZKOicMuiaPhicRibcnvicZL8acAibZmofCxicrlbYwkBvQFdTV6614UAN5Uo3p8WSQA/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-w=&quot;976&quot;/&gt;&lt;figcaption&gt;canal同步数据&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但是，和老板了解过，使用 canal 看起来很美好，帮我们把同步的事情都干了，但其实，还是要写代码。为什么呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;前面提到的多张表数据聚合，canal 的支持没那么好，所以还是得回查。这时候用 canal-adapter 就不合适了，需要自己实现 canal-client，监听和聚合数据，写入 ES：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8018648018648019&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWdEy0ZPFSJ5Z68A23ZKOicMusM7kqxtlIWtc9gPTRGD1b67mEjhPu7P2vQpMlQgqicq58r2hTSmc1Ug/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-w=&quot;858&quot;/&gt;&lt;figcaption&gt;数据订阅+回查&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这种看起来和异步双写比较像，但是第一降低了商品服务的耦合，第二数据的实时性更好。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以使用数据订阅：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;至于数据订阅框架的选型，主流的大体上是这些：&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;&lt;br/&gt;&lt;/th&gt;&lt;th&gt;Cancal&lt;/th&gt;&lt;th&gt;Maxwell&lt;/th&gt;&lt;th&gt;Python-Mysql-Rplication&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;开源方&lt;/td&gt;&lt;td&gt;阿里巴巴&lt;/td&gt;&lt;td&gt;Zendesk&lt;/td&gt;&lt;td&gt;社区&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;开发语言&lt;/td&gt;&lt;td&gt;Java&lt;/td&gt;&lt;td&gt;Java&lt;/td&gt;&lt;td&gt;Python&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;活跃度&lt;/td&gt;&lt;td&gt;活跃&lt;/td&gt;&lt;td&gt;活跃&lt;/td&gt;&lt;td&gt;活跃&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;高可用&lt;/td&gt;&lt;td&gt;支持&lt;/td&gt;&lt;td&gt;支持&lt;/td&gt;&lt;td&gt;不支持&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;客户端&lt;/td&gt;&lt;td&gt;Java/Go/PHP/Python/Rust&lt;/td&gt;&lt;td&gt;无&lt;/td&gt;&lt;td&gt;Python&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;消息落地&lt;/td&gt;&lt;td&gt;Kafka/RocketMQ 等&lt;/td&gt;&lt;td&gt;Kafka/RabbitNQ/Redis 等&lt;/td&gt;&lt;td&gt;自定义&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;消息格式&lt;/td&gt;&lt;td&gt;自定义&lt;/td&gt;&lt;td&gt;JSON&lt;/td&gt;&lt;td&gt;自定义&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;文档详略&lt;/td&gt;&lt;td&gt;详细&lt;/td&gt;&lt;td&gt;详细&lt;/td&gt;&lt;td&gt;详细&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Boostrap&lt;/td&gt;&lt;td&gt;不支持&lt;/td&gt;&lt;td&gt;支持&lt;/td&gt;&lt;td&gt;不支持&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;除了 MySQL 同步 ES，MySQL 同步到其它的数据存储，例如 HBase，其实大体上都是类似的几种方法。&lt;/p&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;参考&lt;/h2&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;[1]. https://www.infoq.cn/article/1afyz3b6hnhprrg12833&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;[2].https://www.iamle.com/archives/2900.html&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;[3].https://blog.51cto.com/lianghecai/4755693&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;[4].https://qinyuanpei.github.io/posts/1333693167/&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;[5].https://github.com/alibaba/canal/wiki/ClientAdapter&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;&lt;strong&gt;&lt;span&gt;·········  END  ··············&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;👉 欢迎准备 Java 面试以及学习 Java 的同学加入我的&lt;/span&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=Mzg2OTA0Njk0OA==&amp;amp;mid=2247530558&amp;amp;idx=1&amp;amp;sn=cb2ed58af806ee3d3d174ce5ae09c7e3&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;&lt;strong&gt;知识星球&lt;/strong&gt;&lt;/span&gt;&lt;/a&gt;&lt;span&gt;，干货很多！收费虽然是白菜价，但星球里的内容或许比你参加上万的培训班质量还要高。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6962025316455697&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/iaIdQfEric9TwdUicgazB5YNexpL9uFSPeSlGEWPjyqI9f86TnNa0oo4qv3jBjrEm7nQF1icpeqKd0xfmfy49vIIiag/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-w=&quot;632&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;👉 &lt;/span&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=Mzg2OTA0Njk0OA==&amp;amp;mid=2247530643&amp;amp;idx=2&amp;amp;sn=cf4855e15ea7c8a669c7896b8337292b&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;&lt;strong&gt;《Java 面试指北》&lt;/strong&gt;&lt;/span&gt;&lt;/a&gt;&lt;span&gt;来啦！这是一份教你如何更高效地准备面试的小册，涵盖常见八股文（系统设计、常见框架、分布式、高并发 ......）、优质面经等内容。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;近期文章精选&lt;/strong&gt; ：&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;👉如果本文对你有帮助的话，欢迎 &lt;strong&gt;点赞&amp;amp;在看&amp;amp;分享&lt;/strong&gt; ，这对我继续分享&amp;amp;创作优质文章非常重要。非常感谢！&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;

          
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>5590309611ebb96ae2c59560f9a2ce61</guid>
<title>【Linux技术专题】「系统性能调优实战」终极关注应用系统性能调优及原理剖析（上册）_洛神灬殇的博客-CSDN博客</title>
<link>https://toutiao.io/k/e10ao0o</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div id=&quot;content_views&quot; class=&quot;markdown_views prism-tomorrow-night&quot;&gt;
                    &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;
                        &lt;path stroke-linecap=&quot;round&quot; d=&quot;M5,0 0,2.5 5,5z&quot; id=&quot;raphael-marker-block&quot;/&gt;
                    &lt;/svg&gt;
                    &lt;h2&gt;&lt;a id=&quot;_0&quot;/&gt;背景介绍&lt;/h2&gt; 
&lt;ol&gt;&lt;li&gt;本人是做呼叫中心服务的，但是最近需要将系统性能和吞吐提升更高的能力和层次，所以便进行先关系统性质的学习和优化相关的技术做了一定的研究。&lt;/li&gt;&lt;/ol&gt; 
&lt;h2&gt;&lt;a id=&quot;_4&quot;/&gt;调优背景&lt;/h2&gt; 
&lt;p&gt;因为当出现吞吐远远不能够满足我们客户或者我们需要的呼叫了指标的时候因为出现了这么一次情况，虽然没有给用户没有给公司带来什么损失，但是该现象从侧面已经反应出了系统某些方面的问题，或许系统参数需要优化一番，或许系统设计交互需要优化一番，或许等等等的可能，才有了后续系统调优的历程。&lt;/p&gt; 
&lt;h2&gt;&lt;a id=&quot;_8&quot;/&gt;计划优化的要点方向&lt;/h2&gt; 
&lt;ol&gt;&lt;li&gt; &lt;p&gt;流程相关分析优化：看看哪些流程可以同步转异步处理，可以梳理一下哪些请求可以合并起来，Server服务端的哪些业务场景需要补偿机制等。&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;数据库相关分析优化：哪些Sql耗时较长，哪些方法可以去除事务且去除事务后的带来的问题场景分析，数据库连接池参数是否合理，数据库本身相关参数的阈值情况的一些综合考虑；&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;内存使用情况分析优化：新老年代内存使用率及回收情况，CPU使用率，磁盘使用率，swap区使用情况, 线程dump，堆dump。&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;JVM参数分析调优：YGC的平均耗时，YGC的平均间隔，FGC的平均耗时，FGC的平均间隔等等，根据具体情况反映具体问题；&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;TCP/Tomcat参数分析调优：这个得根据实际压测情况来相应评估是否需要调整；&lt;/p&gt; &lt;/li&gt;&lt;/ol&gt; 
&lt;h2&gt;&lt;a id=&quot;Linux_20&quot;/&gt;Linux命令相关查看指标&lt;/h2&gt; 
&lt;h3&gt;&lt;a id=&quot;CPU__22&quot;/&gt;CPU 指标&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;每n秒采集一次，一共采集m次
vmstat n m
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt;&lt;li&gt;r表示运行队列，r值一般负载超过了3就比较高，超过了5就高，超过了10就不正常了;&lt;/li&gt;&lt;li&gt;bi和bo一般都要接近0，不然就是IO过于频繁&lt;/li&gt;&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;[root@svr01]$ vmstat 1 3
procs -----------memory---------- ---swap-- -----io---- --system-- -----cpu-----
r  b   swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa st
0  0 206944 633564  29876 1252176    0    0    10    27    0    0  1  1 98  0  0
0  0 206944 634232  29876 1252192    0    0     0     0  811 1504  1  1 98  0  0
0  0 206944 634480  29876 1252264    0    0     0     0  951 1458  6  1 93  0  0
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;a id=&quot;uptime_40&quot;/&gt;uptime&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;最近1分钟，5分钟，15分钟的系统平均负载。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt;&lt;li&gt;&amp;lt;=3 则系统性能较好。&lt;/li&gt;&lt;li&gt;&amp;lt;=4 则系统性能可以，可以接收。&lt;/li&gt;&lt;li&gt;大于5 则系统性能负载过重，可能会发生严重的问题，那么就需要扩容了，要么增加核心数量&lt;/li&gt;&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;[root@svr01]$ uptime
21:27:44 up 207 days, 11:15, 1 user, load average: 26.45, 16.76, 7.50
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;a id=&quot;top_53&quot;/&gt;top&lt;/h4&gt; 
&lt;p&gt;主要看us和sy，其中us&amp;lt;=70，sy&amp;lt;=35，us+sy&amp;lt;=70说明状态良好，同时可以结合idle值来看，如果id&amp;lt;=70 则表示IO的压力较大。&lt;/p&gt; 
&lt;h3&gt;&lt;a id=&quot;42_Memory__57&quot;/&gt;4.2 Memory 指标&lt;/h3&gt; 
&lt;h4&gt;&lt;a id=&quot;vmstat_59&quot;/&gt;vmstat&lt;/h4&gt; 
&lt;ul&gt;&lt;li&gt;swpd：虚拟内存已使用的大小，如果大于0，表示你的机器物理内存不足了&lt;/li&gt;&lt;li&gt;si：每秒从磁盘读入虚拟内存的大小，如果这个值大于0，表示物理内存不够用或者内存泄露了，要查找耗内存进程解决掉。&lt;/li&gt;&lt;li&gt;so：每秒虚拟内存写入磁盘的大小，如果这个值大于0，同上，单位为KB。&lt;/li&gt;&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;[root@svr01]$ vmstat 1 3
procs -----------memory---------- ---swap-- -----io---- --system-- -----cpu-----
r  b   swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa st
0  0 206944 633564  29876 1252176    0    0    10    27    0    0  1  1 98  0  0
0  0 206944 634232  29876 1252192    0    0     0     0  811 1504  1  1 98  0  0
0  0 206944 634480  29876 1252264    0    0     0     0  951 1458  6  1 93  0  0
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;a id=&quot;Disk__74&quot;/&gt;Disk 指标&lt;/h3&gt; 
&lt;h4&gt;&lt;a id=&quot;df_76&quot;/&gt;df&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Use%：已使用占比，Use% &amp;lt;= 90% 表示还勉强接受正常&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code&gt;[root@svr01]$ df
Filesystem           1K-blocks     Used Available Use% Mounted on
/dev/mapper/VolGroup00-LVroot
 17737040  4286920  12542448  26% /
tmpfs                  1893300        0   1893300   0% /dev/shm
/dev/sda1               194241   127341     56660  70% /boot
/dev/mapper/VolGroup00-LVhome
487652     2348    459704   1% /home
/dev/mapper/VolGroup00-LVcloud
3030800   260440   2613076  10% /opt/cloud
/dev/mapper/VolGroup00-LVtmp
  8125880    18724   7687728   1% /tmp
/dev/mapper/VolGroup00-LVvar
 25671996   848996  23512280   4% /var
/dev/mapper/VolGroup1-LVdata1
  41149760 33707952   5344864  87% /wls/applogs
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;a id=&quot;Disk_IO__99&quot;/&gt;Disk IO 指标&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;sar -d 1 1&lt;/code&gt;：查看磁盘报告 1 1 表示间隔1s，运行1次&lt;/p&gt; 
&lt;ul&gt;&lt;li&gt; &lt;p&gt;如果svctm的值与await很接近，表示几乎没有I/O等待，磁盘性能很好，如果await的值远高于svctm的值，则表示I/O队列等待太长，系统上运行的应用程序将变慢。&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;如果%util接近100%，表示磁盘产生的I/O请求太多，I/O系统已经满负荷的在工作，该磁盘请求饱和，可能存在瓶颈。&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;idle小于70% I/O压力就较大了，也就是有较多的I/O。&lt;/p&gt; &lt;/li&gt;&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;[root@svr01]$ sar -d 1 1
Linux 2.6.32-642.6.2.el6.x86_64 (SHB-L0044551) 07/20/2018 _x86_64_ (1 CPU)

03:00:23 PM DEV tps rd_sec/s wr_sec/s avgrq-sz avgqu-sz await svctm %util
03:00:24 PM dev252-0 23.00 808.00 80.00 38.61 9.88 375.35 43.48 100.00
03:00:24 PM dev252-16 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
03:00:24 PM dev253-0 4.00 448.00 0.00 112.00 1.11 222.00 249.50 99.80
03:00:24 PM dev253-1 50.00 400.00 0.00 8.00 24.40 523.20 20.00 100.00
03:00:24 PM dev253-2 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
03:00:24 PM dev253-3 3.00 32.00 0.00 10.67 0.99 242.33 331.67 99.50
03:00:24 PM dev253-4 0.00 0.00 0.00 0.00 1.61 0.00 0.00 100.00
03:00:24 PM dev253-5 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
03:00:24 PM dev253-6 3.00 0.00 24.00 8.00 1.30 393.67 261.33 78.40

Average: DEV tps rd_sec/s wr_sec/s avgrq-sz avgqu-sz await svctm %util
Average: dev252-0 23.00 808.00 80.00 38.61 9.88 375.35 43.48 100.00
Average: dev252-16 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
Average: dev253-0 4.00 448.00 0.00 112.00 1.11 222.00 249.50 99.80
Average: dev253-1 50.00 400.00 0.00 8.00 24.40 523.20 20.00 100.00
Average: dev253-2 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
Average: dev253-3 3.00 32.00 0.00 10.67 0.99 242.33 331.67 99.50
Average: dev253-4 0.00 0.00 0.00 0.00 1.61 0.00 0.00 100.00
Average: dev253-5 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
Average: dev253-6 3.00 0.00 24.00 8.00 1.30 393.67 261.33 78.40
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;a id=&quot;4Network_IO__135&quot;/&gt;4Network IO 指标&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;netstat -nat |awk &#x27;{print $6}&#x27;|sort|uniq -c|sort -rn&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;在不考虑系统负载、CPU、内存等情况下，netstat监控大量ESTABLISHED连接与Time_Wait连接&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;[root@svr01]$ netstat -nat |awk &#x27;{print $6}&#x27;|sort|uniq -c|sort -rn
265 TIME_WAIT
 45 ESTABLISHED
 38 CLOSE_WAIT
 18 LISTEN
  8 FIN_WAIT2
  2 SYN_SENT
  1 Foreign
  1 established)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;&lt;a id=&quot;_153&quot;/&gt;关于统计的量化指标&lt;/h2&gt; 
&lt;p&gt;注意：有些命令通用，有些是我根据系统的日志文件格式利用awk/sed两个命令结合写出来的。&lt;/p&gt; 
&lt;ol&gt;&lt;li&gt; &lt;p&gt;netstat -nat |awk ‘{print $6}’|sort|uniq -c|sort -rn （ 查看TCP连接状态 ）&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;netstat -n|grep TIME_WAIT|awk ‘{print $5}’|sort|uniq -c|sort -rn|head -n20（ 查找较多time_wait连接 ）&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;netstat -anlp|grep tcp |awk ‘{print $5}’ |awk -F’:’ ‘{print $1}’ |uniq -c |sort -nr | head -n3（ 查出访问靠前的IP地址 ）&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;cat hmilyylimh_sql.log | awk ‘{print $6}’ | awk -F’ms’ ‘{print $1}’ | awk -F’=’ ‘{print $2 | “sort -r -n” }’ | head -n5（ 查询sql文件中耗时最高的前5个耗时数据值 ）&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;cat hmilyylimh_supp.log | awk ‘{print $10}’ | awk -F’timeConsuming=’ ‘{print $2 }’ | awk -F’ms’ ‘{print $1 | “sort -r -n” }’ | head -n5（ 查看supp文件中耗时最高的前5个耗时数据值 ）&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;cat hmilyylimh_sql.log | grep ‘sql:=’ | awk ‘{print $5}’ | uniq -c | sort -rn | head -n2（ 查询sql文件总共打印了多少条SQL日志 ）&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;cat hmilyylimh_sql.log | grep ‘NormalTimeConsuming’ | awk ‘{print $5}’ | uniq -c | sort -rn | head -n2（ 查看sql文件成功执行了多少条SQL日志 ）&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;cat hmilyylimh_sql.log | grep ‘BadTimeConsuming’ | awk ‘{print $5}’ | uniq -c | sort -rn | head -n2（ 查看sql文件失败或者异常执行了多少条SQL日志 ）&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;cat hmilyylimh_supp.log | grep ‘sendReqSupp start’| awk ‘{print $6$7$8}’ | uniq -c | sort -nr | head -n2（ 查询supp文件sendReqSupp start字符串出现的次数 ）&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;lsof -n | awk ‘{print $1,$2}’ | sort | uniq -c | sort -nr | head -n10（ 统计持有各个进程持有句柄数最高的10个 ）&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;lsof -n | awk ‘{print $1,$2}’ | sort | uniq -c | sort -nr | awk &#x27;{ sum+=$1 };END { print sum } &#x27;（ 计算所有进程持有句柄数的总和，ulimit -n命令查看最大句柄数 ）&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;lsof | awk ‘NF == 9 { print $0}’ | sort +6 -7nr | head -n10（ 查看系统打开的大文件列表 ）&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;top -b -n 1 | grep -E ‘Cpu(s)|Mem|Swap’（ 一次性查出系统当前的CPU、内存、交换区的情况 ）&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;iostat -p sda | awk -F’Device’ ‘{ print $1 }’（ 查看cpu的统计信息(平均值) ）&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;cat access_log.&lt;code&gt;date +%Y%m%d&lt;/code&gt;.txt | awk ‘{print $6}’ | uniq -c | sort -k2 -r | head -n10（ 统计每秒请求并发，按照时间降序排列 ）&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;cat access_log.&lt;code&gt;date +%Y%m%d&lt;/code&gt;.txt | awk ‘{print $6}’ | uniq -c | sort -rn | head -n10（ 统计每秒并发，按照并发量降序排列 ）&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;cat access_log.&lt;code&gt;date +%Y%m%d&lt;/code&gt;.txt | awk ‘{ sum+=$NF }; END { print sum*2/8/1024/1024, “M” }’（ 查看访问hmilyylimh服务器每天的总流量 ）&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;cat gc.log | tail -n20|awk ‘{print $4}’| awk -F’-&amp;gt;’ ‘{print $1, $2, $3 }’| awk -F’(’ ‘{print $1, $2, $3}’ | awk -F’)’ ‘{print $1}’ | awk -F’K’ ‘{print $1/$3&lt;em&gt;100, &quot;% used -&amp;gt; &quot; ,$2/$3&lt;/em&gt;100, &quot;% used &quot; , 100-$2/$3*100, &quot;% free &quot;, $3/1024, “M total — 新生代” }’（ 查看gc指标，新生代最后n条记录的新生代内存变化率 ）&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;cat gc.log | tail -n20 | awk ‘{print $7}’ | awk -F’-&amp;gt;’ ‘{print $1, $2, $3 }’ | awk -F’(’ ‘{print $1, $2, $3}’ | awk -F’)’ ‘{print $1}’ | awk -F’K’ ‘{print $1/$3&lt;em&gt;100, &quot;% used -&amp;gt; &quot; ,$2/$3&lt;/em&gt;100, &quot;% used &quot; , 100-$2/$3*100, &quot;% free &quot;, $3/1024, “M total — 堆内存” }’（ 查看最后10条GC日志的堆内存已使用转化率 ）&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;cat /etc/sysctl.conf | grep ‘tcp_’（ 查看TCP参数设置信息 ）&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;cat hmilyylimh.log | awk ‘{if($2&amp;gt;“15:17:00.236”) print $0}’ | grep “max_user_connections” | wc -l（ 查看具体时间点后某个字符串出现的次数 ）&lt;/p&gt; &lt;/li&gt;&lt;/ol&gt; 
&lt;h2&gt;&lt;a id=&quot;_200&quot;/&gt;六、系统常用计数器命令&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;1、echo &quot;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; 线程阻塞等待计数: &quot;`less hmilyylimh_error.log | grep &quot;with callerRunsPolicy&quot; | wc -l`&quot;,   &quot;&quot;db事务嵌套锁AcquireLock计数: &quot;`less hmilyylimh_error.log | grep &quot;CannotAcquireLockException&quot; | wc -l`&quot;,   &quot;&quot;创建事务异常计数: &quot;`less hmilyylimh_error.log | grep &quot;CannotCreateTransactionException&quot; | wc -l`&quot;,    &quot;&quot;db连接池溢出计数: &quot;`less hmilyylimh_error.log | grep &quot;more than &#x27;max_user_connections&#x27;&quot; | wc -l`&quot;,    &quot;&quot;Pool Empty计数: &quot;`less hmilyylimh_error.log | grep &quot;Unable to fetch a connection&quot; | wc -l`&quot; &amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&quot;

2、echo &quot;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; UnknownHostException计数: &quot;`less hmilyylimh_error.log | grep &quot;UnknownHostException&quot; | wc -l`&quot;,   &quot;&quot;ConnectionPoolTimeout计数: &quot;`less hmilyylimh_error.log | grep &quot;ConnectionPoolTimeout&quot; | wc -l`&quot;,   &quot;&quot;ConnectException计数: &quot;`less hmilyylimh_error.log | grep &quot;ConnectException&quot; | wc -l`&quot;,   &quot;&quot;ConnectTimeoutException计数: &quot;`less hmilyylimh_error.log | grep &quot;ConnectTimeoutException&quot; | wc -l`&quot;,   &quot;&quot;SocketTimeoutException计数: &quot;`less hmilyylimh_error.log | grep &quot;SocketTimeoutException&quot; | wc -l`&quot;,   &quot;&quot;OtherException计数: &quot;`less hmilyylimh_error.log | grep &quot;OtherException&quot; | wc -l`&quot; &amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&quot;

3、echo &quot;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; Sql耗时最高的前5个数值: &quot;`cat hmilyylimh_sql.log | awk &#x27;{print $6}&#x27; | awk -F&#x27;ms&#x27; &#x27;{print $1}&#x27; | awk -F&#x27;=&#x27; &#x27;{print $2 | &quot;sort -r -n&quot;  }&#x27; | head -n5`&quot;,   &quot;&quot;Supp耗时最高等待前5个数值: &quot;`cat hmilyylimh_supp.log | awk &#x27;{print $10}&#x27; | awk -F&#x27;timeConsuming=&#x27; &#x27;{print $2 }&#x27; | awk -F&#x27;ms&#x27; &#x27;{print $1 | &quot;sort -r -n&quot; }&#x27; | head -n5`&quot; &amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&quot;

4、echo &quot;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; Http请求耗时最高前10个数值: &quot;`less hmilyylimh.log | grep &quot;timeConsuming=&quot; | awk &#x27;{print $9}&#x27; | awk -F&#x27;=&#x27; &#x27;{print $2}&#x27; | awk -F&#x27;ms&#x27; &#x27;{print $1 | &quot;sort -r -n&quot;  }&#x27; | head -n10`&quot; &amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&quot;
&lt;/code&gt;&lt;/pre&gt;
                &lt;/div&gt;
                
                
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>