<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>3fc0bbd96b724e0608e90ad7b6217b3e</guid>
<title>Redis实现朋友圈，微博等Feed流功能,实现Feed流微服务（代码实现）_共饮一杯无的博客-CSDN博客</title>
<link>https://toutiao.io/k/bzq3zew</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div id=&quot;content_views&quot; class=&quot;markdown_views prism-atom-one-dark&quot;&gt;
                    &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;
                        &lt;path stroke-linecap=&quot;round&quot; d=&quot;M5,0 0,2.5 5,5z&quot; id=&quot;raphael-marker-block&quot;/&gt;
                    &lt;/svg&gt;
                    &lt;p&gt;上篇博客讲述了&lt;a href=&quot;https://zhanjq.blog.csdn.net/article/details/128325747&quot;&gt;Redis实现朋友圈，微博等Feed流功能,实现Feed流微服务的业务场景、实现思路和环境搭建&lt;/a&gt;，本文继续讲解具体的代码实现内容。&lt;/p&gt; 
&lt;p/&gt;

&lt;p/&gt; 
&lt;h2&gt;&lt;a id=&quot;_Feed__3&quot;/&gt;添加 Feed 信息&lt;/h2&gt; 
&lt;h3&gt;&lt;a id=&quot;FeedsController_4&quot;/&gt;FeedsController&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;prism language-java&quot;&gt;    
    &lt;span class=&quot;token annotation punctuation&quot;&gt;@PostMapping&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ResultInfo&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token annotation punctuation&quot;&gt;@RequestBody&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Feeds&lt;/span&gt; feeds&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; access_token&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        feedsService&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;feeds&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; access_token&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ResultInfoUtil&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;buildSuccess&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getServletPath&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;添加成功&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;a id=&quot;FeedsService_19&quot;/&gt;FeedsService&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;prism language-java&quot;&gt;    
    &lt;span class=&quot;token annotation punctuation&quot;&gt;@Transactional&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;rollbackFor &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Exception&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Feeds&lt;/span&gt; feeds&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; accessToken&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        
        &lt;span class=&quot;token class-name&quot;&gt;AssertUtil&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isNotEmpty&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;feeds&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getContent&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;请输入内容&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token class-name&quot;&gt;AssertUtil&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isTrue&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;feeds&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getContent&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;输入内容太多，请重新输入&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        
        &lt;span class=&quot;token class-name&quot;&gt;SignInUserInfo&lt;/span&gt; userInfo &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;loadSignInUserInfo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;accessToken&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        
        feeds&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setFkUserId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;userInfo&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        
        &lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; count &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; feedsMapper&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;feeds&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token class-name&quot;&gt;AssertUtil&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isTrue&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;count &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;添加失败&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        
        
        &lt;span class=&quot;token class-name&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; followers &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;findFollowers&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;userInfo&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        
        &lt;span class=&quot;token keyword&quot;&gt;long&lt;/span&gt; now &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;currentTimeMillis&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        followers&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;follower &lt;span class=&quot;token operator&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; key &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;RedisKeyConstant&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;following_feeds&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getKey&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; follower&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            redisTemplate&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;opsForZSet&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;key&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; feeds&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; now&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    
    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;findFollowers&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Integer&lt;/span&gt; userId&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; url &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; followServerName &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;followers/&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; userId&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token class-name&quot;&gt;ResultInfo&lt;/span&gt; resultInfo &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; restTemplate&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getForObject&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;url&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ResultInfo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;resultInfo&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getCode&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ApiConstant&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;SUCCESS_CODE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ParameterException&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;resultInfo&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getCode&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; resultInfo&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getMessage&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;token class-name&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; followers &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; resultInfo&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getData&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; followers&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;a id=&quot;FeedsMapper_66&quot;/&gt;FeedsMapper&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;prism language-java&quot;&gt;    
    &lt;span class=&quot;token annotation punctuation&quot;&gt;@Insert&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;insert into t_feeds (content, fk_user_id, praise_amount, &quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;
            &lt;span class=&quot;token string&quot;&gt;&quot; comment_amount, fk_restaurant_id, create_date, update_date, is_valid) &quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;
            &lt;span class=&quot;token string&quot;&gt;&quot; values (#{content}, #{fkUserId}, #{praiseAmount}, #{commentAmount}, #{fkRestaurantId}, &quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;
            &lt;span class=&quot;token string&quot;&gt;&quot; now(), now(), 1)&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token annotation punctuation&quot;&gt;@Options&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;useGeneratedKeys &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; keyProperty &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Feeds&lt;/span&gt; feeds&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;a id=&quot;msfollow__80&quot;/&gt;ms-follow 服务新增获取粉丝列表&lt;/h3&gt; 
&lt;p&gt;FollowController&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;prism language-java&quot;&gt;    
    &lt;span class=&quot;token annotation punctuation&quot;&gt;@GetMapping&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;followers/{userId}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ResultInfo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;findFollowers&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token annotation punctuation&quot;&gt;@PathVariable&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Integer&lt;/span&gt; userId&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ResultInfoUtil&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;buildSuccess&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getServletPath&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
                followService&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;findFollowers&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;userId&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;FollowService&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;prism language-java&quot;&gt;    
    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;findFollowers&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Integer&lt;/span&gt; userId&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token class-name&quot;&gt;AssertUtil&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isNotNull&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;userId&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;请选择要查看的用户&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token class-name&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; followers &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; redisTemplate&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;opsForSet&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;members&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;RedisKeyConstant&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;followers&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getKey&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; userId&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; followers&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;a id=&quot;msgateway__110&quot;/&gt;ms-gateway 服务配置网关路由&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;prism language-yaml&quot;&gt;&lt;span class=&quot;token key atrule&quot;&gt;spring&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; ms&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;gateway
  &lt;span class=&quot;token key atrule&quot;&gt;cloud&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;gateway&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token key atrule&quot;&gt;discovery&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token key atrule&quot;&gt;locator&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;token key atrule&quot;&gt;enabled&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean important&quot;&gt;true&lt;/span&gt; 
          &lt;span class=&quot;token key atrule&quot;&gt;lower-case-service-id&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean important&quot;&gt;true&lt;/span&gt; 
      &lt;span class=&quot;token key atrule&quot;&gt;routes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
          
        &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; ms&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;feeds
          &lt;span class=&quot;token key atrule&quot;&gt;uri&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; lb&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;//ms&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;feeds
          &lt;span class=&quot;token key atrule&quot;&gt;predicates&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; Path=/feeds/&lt;span class=&quot;token important&quot;&gt;**&lt;/span&gt;
          &lt;span class=&quot;token key atrule&quot;&gt;filters&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; StripPrefix=1
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;a id=&quot;_130&quot;/&gt;启动项目测试&lt;/h3&gt; 
&lt;ol&gt;&lt;li&gt;先让id等于10、9、8的用户关注id等于7的用户。&lt;/li&gt;&lt;li&gt;id等于7的用户登录后发布一条动态。&lt;/li&gt;&lt;li/&gt;&lt;/ol&gt; 
&lt;p&gt;让 id=10 的用户关注 id=7 的用户：&lt;br/&gt; &lt;img src=&quot;https://img-blog.csdnimg.cn/7bc0e23b07e446a6936b5903f3455b76.png&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;br/&gt; &lt;img src=&quot;https://img-blog.csdnimg.cn/48e847e9afa8423489adce549cfdb451.png&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;br/&gt; 让 id=9 的用户关注 id=7 的用户：&lt;br/&gt; &lt;img src=&quot;https://img-blog.csdnimg.cn/1b07e31e8abd4410927ca8b1e2b7f389.png&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;br/&gt; 让 id=8 的用户关注 id=7 的用户：&lt;br/&gt; &lt;img src=&quot;https://img-blog.csdnimg.cn/img_convert/395882cda9d7f3959d2261e7ac60bff3.png#averageHue=#fefdfa&amp;amp;clientId=u8ede92f9-1e85-4&amp;amp;crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;from=paste&amp;amp;height=537&amp;amp;id=uac279234&amp;amp;margin=%5BobjectObject%5D&amp;amp;name=image.png&amp;amp;originHeight=671&amp;amp;originWidth=823&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=37453&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u36fc85bc-c6df-4392-ae91-e9f8747901c&amp;amp;title=&amp;amp;width=658.4&quot; alt=&quot;image.png&quot;/&gt;&lt;br/&gt; id=7 的用户登录系统并发送一条动态：&lt;br/&gt; &lt;a href=&quot;http://localhost/feeds?access_token=48781f97-1c3a-4737-ae55-984c0944649e&quot;&gt;http://localhost/feeds?access_token=48781f97-1c3a-4737-ae55-984c0944649e&lt;/a&gt;&lt;br/&gt; &lt;img src=&quot;https://img-blog.csdnimg.cn/img_convert/ea77cfb3a6ea320394cb1d5ee4e40467.png#averageHue=#fefefd&amp;amp;clientId=u8ede92f9-1e85-4&amp;amp;crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;from=paste&amp;amp;height=495&amp;amp;id=uded4fcc4&amp;amp;margin=%5BobjectObject%5D&amp;amp;name=image.png&amp;amp;originHeight=619&amp;amp;originWidth=919&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=33475&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u9a85137a-03a3-4279-9c68-4441adec8e0&amp;amp;title=&amp;amp;width=735.2&quot; alt=&quot;image.png&quot;/&gt;&lt;br/&gt; 查看数据库 feeds 信息：&lt;br/&gt; &lt;img src=&quot;https://img-blog.csdnimg.cn/e017368a04484cadb5d2ec72c7a4e339.png&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;br/&gt; 查看 redis 中粉丝的 feeds 信息：&lt;br/&gt; &lt;img src=&quot;https://img-blog.csdnimg.cn/398ee5a3423b44c2b24fb3d6e8c48a1c.png&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;br/&gt; 可以看到用户id为8、9、10的用户都收到了这条Feed。&lt;/p&gt; 
&lt;h2&gt;&lt;a id=&quot;_Feed__152&quot;/&gt;删除 Feed 信息&lt;/h2&gt; 
&lt;h3&gt;&lt;a id=&quot;FeedsController_153&quot;/&gt;FeedsController&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;prism language-java&quot;&gt;    
    &lt;span class=&quot;token annotation punctuation&quot;&gt;@DeleteMapping&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;{id}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ResultInfo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;delete&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token annotation punctuation&quot;&gt;@PathVariable&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Integer&lt;/span&gt; id&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; access_token&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        feedsService&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;delete&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;id&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; access_token&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ResultInfoUtil&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;buildSuccess&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getServletPath&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;删除成功&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;a id=&quot;FeedsService_168&quot;/&gt;FeedsService&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;prism language-java&quot;&gt;    
    &lt;span class=&quot;token annotation punctuation&quot;&gt;@Transactional&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;rollbackFor &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Exception&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;delete&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Integer&lt;/span&gt; id&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; accessToken&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        
        &lt;span class=&quot;token class-name&quot;&gt;AssertUtil&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isTrue&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;id &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; id &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;请选择要删除的Feed&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        
        &lt;span class=&quot;token class-name&quot;&gt;SignInUserInfo&lt;/span&gt; userInfo &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;loadSignInUserInfo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;accessToken&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        
        &lt;span class=&quot;token class-name&quot;&gt;Feeds&lt;/span&gt; feeds &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; feedsMapper&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;findById&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;id&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        
        &lt;span class=&quot;token class-name&quot;&gt;AssertUtil&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isTrue&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;feeds &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;该Feed已被删除&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token class-name&quot;&gt;AssertUtil&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isTrue&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;feeds&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getFkUserId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;userInfo&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;token string&quot;&gt;&quot;只能删除自己的Feed&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        
        &lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; count &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; feedsMapper&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;delete&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;id&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;count &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
        
        
        &lt;span class=&quot;token class-name&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; followers &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;findFollowers&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;userInfo&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        
        followers&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;follower &lt;span class=&quot;token operator&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; key &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;RedisKeyConstant&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;following_feeds&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getKey&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; follower&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            redisTemplate&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;opsForZSet&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;key&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; feeds&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;a id=&quot;FeedsMapper_203&quot;/&gt;FeedsMapper&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/009e282354c140d2b65e90392196586c.png&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;a id=&quot;_205&quot;/&gt;启动项目测试&lt;/h3&gt; 
&lt;p&gt;数据库中的feeds：&lt;br/&gt; &lt;img src=&quot;https://img-blog.csdnimg.cn/img_convert/9ee22fffc8f7d0c7850123c073e0ac91.png#averageHue=#f2f1f0&amp;amp;crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;from=url&amp;amp;id=kCxqX&amp;amp;margin=%5BobjectObject%5D&amp;amp;originHeight=103&amp;amp;originWidth=1291&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;status=done&amp;amp;style=none&amp;amp;title=&quot; alt=&quot;&quot;/&gt;&lt;br/&gt; 用户只能删除自己创建的Feed，测试用id为6的用户删除id为14的Feed（该Feed是id为7的用户创建的）：&lt;br/&gt; &lt;img src=&quot;https://img-blog.csdnimg.cn/d68f257d799e4f1a83b9c1789171e598.png&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;br/&gt; &lt;img src=&quot;https://img-blog.csdnimg.cn/befcbbc2f1074d4dbd22c38a7bcb775c.png&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt; 
&lt;p&gt;用id为7的用户登陆后，逻辑删除id=14的feeds：&lt;br/&gt; &lt;img src=&quot;https://img-blog.csdnimg.cn/img_convert/4b0843957a501ad4f73ff2498030cf9b.png#averageHue=#fefdfa&amp;amp;clientId=u7b8e7ec9-f021-4&amp;amp;crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;from=paste&amp;amp;height=525&amp;amp;id=ua41392c1&amp;amp;margin=%5BobjectObject%5D&amp;amp;name=image.png&amp;amp;originHeight=656&amp;amp;originWidth=805&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=36546&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u50d5a852-4a82-4302-94bb-6a654cae885&amp;amp;title=&amp;amp;width=644&quot; alt=&quot;image.png&quot;/&gt;&lt;br/&gt; 删除后再次删除：&lt;br/&gt; &lt;img src=&quot;https://img-blog.csdnimg.cn/0f3e067943f646ff9b6141a6bfd0f6e3.png&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;br/&gt; 查看数据库中的feeds已经逻辑删除：&lt;br/&gt; &lt;img src=&quot;https://img-blog.csdnimg.cn/ff032c13a4554d64aa8fb6eab5e36faa.png&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;br/&gt; 查看redis相关Feed也不存在了：&lt;br/&gt; &lt;img src=&quot;https://img-blog.csdnimg.cn/img_convert/914f523bf3644a37fb5a571024230141.png#averageHue=#faf7f7&amp;amp;clientId=u7b8e7ec9-f021-4&amp;amp;crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;from=paste&amp;amp;height=106&amp;amp;id=u49bb1ee1&amp;amp;margin=%5BobjectObject%5D&amp;amp;name=image.png&amp;amp;originHeight=133&amp;amp;originWidth=835&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=7101&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=uf1b9907e-6df2-4942-86d7-802708d2e4b&amp;amp;title=&amp;amp;width=668&quot; alt=&quot;image.png&quot;/&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;a id=&quot;_Feed_220&quot;/&gt;关注/取关时处理用户 Feed&lt;/h2&gt; 
&lt;p&gt;当A用户关注B用户时，那么要实时的将B的所有Feed推送到A用户的Feed集合中，同样如果A用户取关B用户，那么要将B用户所有的Feed从A用户的Feed集合中移除。&lt;/p&gt; 
&lt;h3&gt;&lt;a id=&quot;FeedsController_222&quot;/&gt;FeedsController&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;prism language-java&quot;&gt;    
    &lt;span class=&quot;token annotation punctuation&quot;&gt;@PostMapping&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;updateFollowingFeeds/{followingDinerId}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ResultInfo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;addFollowingFeeds&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token annotation punctuation&quot;&gt;@PathVariable&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Integer&lt;/span&gt; followingDinerId&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
                                        &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; access_token&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token annotation punctuation&quot;&gt;@RequestParam&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; type&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        feedsService&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addFollowingFeed&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;followingDinerId&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; access_token&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; type&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ResultInfoUtil&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;buildSuccess&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getServletPath&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;操作成功&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;a id=&quot;FeedsService_236&quot;/&gt;FeedsService&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;prism language-java&quot;&gt;    
    &lt;span class=&quot;token annotation punctuation&quot;&gt;@Transactional&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;rollbackFor &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Exception&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;addFollowingFeed&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Integer&lt;/span&gt; followinguserId&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; accessToken&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; type&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        
        &lt;span class=&quot;token class-name&quot;&gt;AssertUtil&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isTrue&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;followinguserId &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; followinguserId &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;token string&quot;&gt;&quot;请选择关注的好友&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        
        &lt;span class=&quot;token class-name&quot;&gt;SignInUserInfo&lt;/span&gt; userInfo &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;loadSignInUserInfo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;accessToken&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        
        &lt;span class=&quot;token class-name&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Feeds&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; feedsList &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; feedsMapper&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;findByUserId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;followinguserId&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; key &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;RedisKeyConstant&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;following_feeds&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getKey&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; userInfo&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;type &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            
            &lt;span class=&quot;token class-name&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; feedIds &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; feedsList&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
                    &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;feed &lt;span class=&quot;token operator&quot;&gt;-&amp;gt;&lt;/span&gt; feed&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
                    &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;collect&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Collectors&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;toList&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            redisTemplate&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;opsForZSet&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;key&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; feedIds&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;toArray&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            
            &lt;span class=&quot;token class-name&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;ZSetOperations&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;TypedTuple&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; typedTuples &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;
                    feedsList&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
                            &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;feed &lt;span class=&quot;token operator&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;DefaultTypedTuple&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;feed&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;double&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; feed&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getUpdateDate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getTime&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
                            &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;collect&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Collectors&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;toSet&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            redisTemplate&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;opsForZSet&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;key&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; typedTuples&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;a id=&quot;FeedsMapper_271&quot;/&gt;FeedsMapper&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;prism language-java&quot;&gt;
&lt;span class=&quot;token annotation punctuation&quot;&gt;@Select&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;select id, content, update_date from t_feeds &quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;
        &lt;span class=&quot;token string&quot;&gt;&quot; where fk_user_id = #{userId} and is_valid = 1&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token class-name&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Feeds&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;findByUserId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token annotation punctuation&quot;&gt;@Param&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;userId&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Integer&lt;/span&gt; userId&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;a id=&quot;msfollow__Feed_282&quot;/&gt;ms-follow 服务关注取关时变更 Feed&lt;/h3&gt; 
&lt;p&gt;添加调用ms-feeds服务的请求地址项目路径&lt;br/&gt; &lt;img src=&quot;https://img-blog.csdnimg.cn/abad7828cee3437880f503853fb53791.png&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;a id=&quot;FollowServiceFeed_285&quot;/&gt;FollowService新增关注/取关时Feed逻辑&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;prism language-java&quot;&gt;    
    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;sendSaveOrRemoveFeed&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Integer&lt;/span&gt; followUserId&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; accessToken&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; type&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; feedsUpdateUrl &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; feedsServerName &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;updateFollowingFeeds/&quot;&lt;/span&gt;
                &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; followUserId &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;?access_token=&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; accessToken&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        
        &lt;span class=&quot;token class-name&quot;&gt;HttpHeaders&lt;/span&gt; headers &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HttpHeaders&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        headers&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setContentType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;MediaType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;APPLICATION_FORM_URLENCODED&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        
        &lt;span class=&quot;token class-name&quot;&gt;MultiValueMap&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; body &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;LinkedMultiValueMap&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        body&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; type&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token class-name&quot;&gt;HttpEntity&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;MultiValueMap&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; entity &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HttpEntity&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;body&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; headers&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        restTemplate&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;postForEntity&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;feedsUpdateUrl&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; entity&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ResultInfo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;a id=&quot;_307&quot;/&gt;启动项目测试&lt;/h3&gt; 
&lt;h4&gt;&lt;a id=&quot;89107_308&quot;/&gt;用户8，9，10都关注了用户7&lt;/h4&gt; 
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/d8692182131647699c16762d4c2f1592.png&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;br/&gt; 那么用户7推送一条feeds(朋友圈) 的时候，他的粉丝用户8，9,10应该都可以看到，测试用户7发送feed：&lt;br/&gt; &lt;img src=&quot;https://img-blog.csdnimg.cn/249d6a45403b423589750d38aad04741.png&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;br/&gt; 查看数据库和redis：&lt;br/&gt; &lt;img src=&quot;https://img-blog.csdnimg.cn/img_convert/587ef075bd136ce94fd2823838103f06.png#averageHue=#f3f1f0&amp;amp;clientId=u2d301496-5338-4&amp;amp;crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;from=paste&amp;amp;height=90&amp;amp;id=u94482854&amp;amp;margin=%5BobjectObject%5D&amp;amp;name=image.png&amp;amp;originHeight=113&amp;amp;originWidth=1328&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=16819&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=uaa0bd1cf-422b-4a84-832a-0ee68fe8560&amp;amp;title=&amp;amp;width=1062.4&quot; alt=&quot;image.png&quot;/&gt;&lt;br/&gt; &lt;img src=&quot;https://img-blog.csdnimg.cn/d3c49c5482e64fe78d688a85532717f1.png&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;a id=&quot;107_316&quot;/&gt;用户10取消关注用户7&lt;/h4&gt; 
&lt;p&gt;用户10的feeds集合中存储了关注用户的feeds :&lt;br/&gt; &lt;img src=&quot;https://img-blog.csdnimg.cn/img_convert/0b98a571116393a71c29d60b39bdcdf8.png#averageHue=#f4f4f3&amp;amp;clientId=u2d301496-5338-4&amp;amp;crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;from=paste&amp;amp;height=188&amp;amp;id=u640a33c9&amp;amp;margin=%5BobjectObject%5D&amp;amp;name=image.png&amp;amp;originHeight=235&amp;amp;originWidth=760&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=15597&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=uf21004a3-a346-4f51-a498-efb9db856a8&amp;amp;title=&amp;amp;width=608&quot; alt=&quot;image.png&quot;/&gt;&lt;br/&gt; 让用户10取消关注用户7：&lt;br/&gt; &lt;img src=&quot;https://img-blog.csdnimg.cn/a7cedc84391c4941aacb374c156981ab.png&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;br/&gt; 用户7的所有feeds(朋友圈) 应该从用户10的feeds集合中移除：&lt;br/&gt; &lt;img src=&quot;https://img-blog.csdnimg.cn/4b99c405241748c1b3bd34ddb7e09cf4.png&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt; 
&lt;p&gt;只剩下用户8、9相关的。&lt;/p&gt; 
&lt;h4&gt;&lt;a id=&quot;117_325&quot;/&gt;用户11关注用户7&lt;/h4&gt; 
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/img_convert/a4c434c67a816417687eee4692e2fdea.png#averageHue=#fefcf9&amp;amp;clientId=u2d301496-5338-4&amp;amp;crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;from=paste&amp;amp;height=543&amp;amp;id=u35fd54c4&amp;amp;margin=%5BobjectObject%5D&amp;amp;name=image.png&amp;amp;originHeight=679&amp;amp;originWidth=814&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=38668&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=ua9f9f6db-62e5-460d-b1b0-f802d4fd595&amp;amp;title=&amp;amp;width=651.2&quot; alt=&quot;image.png&quot;/&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/68525bd002e0411381bb0ddd40e13839.png&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;br/&gt; 用户7的所有feeds(朋友圈) 应该都添加到用户11的feeds集合中：&lt;br/&gt; &lt;img src=&quot;https://img-blog.csdnimg.cn/cbcf82b21a534043a5e60dd11f321275.png&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;a id=&quot;_Feed__331&quot;/&gt;分页获取关注的 Feed 数据&lt;/h2&gt; 
&lt;p&gt;当前数据库用户7发布了&lt;/p&gt; 
&lt;h3&gt;&lt;a id=&quot;FeedsVO_333&quot;/&gt;构建返回的FeedsVO&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;prism language-java&quot;&gt;
&lt;span class=&quot;token annotation punctuation&quot;&gt;@Getter&lt;/span&gt;
&lt;span class=&quot;token annotation punctuation&quot;&gt;@Setter&lt;/span&gt;
&lt;span class=&quot;token annotation punctuation&quot;&gt;@ApiModel&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;description &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Feed显示信息&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;FeedsVO&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Serializable&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;token annotation punctuation&quot;&gt;@ApiModelProperty&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;主键&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Integer&lt;/span&gt; id&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token annotation punctuation&quot;&gt;@ApiModelProperty&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;内容&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; content&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token annotation punctuation&quot;&gt;@ApiModelProperty&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;点赞数&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; praiseAmount&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token annotation punctuation&quot;&gt;@ApiModelProperty&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;评论数&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; commentAmount&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token annotation punctuation&quot;&gt;@ApiModelProperty&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;餐厅id&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Integer&lt;/span&gt; fkRestaurantId&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token annotation punctuation&quot;&gt;@ApiModelProperty&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;用户ID&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Integer&lt;/span&gt; fkUserId&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token annotation punctuation&quot;&gt;@ApiModelProperty&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;用户信息&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ShortUserInfo&lt;/span&gt; userInfo&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token annotation punctuation&quot;&gt;@ApiModelProperty&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;显示时间&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token annotation punctuation&quot;&gt;@JsonFormat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;pattern &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;yyyy-MM-dd HH:mm&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Date&lt;/span&gt; createDate&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;a id=&quot;FeedsController_365&quot;/&gt;FeedsController&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;prism language-java&quot;&gt;
&lt;span class=&quot;token annotation punctuation&quot;&gt;@GetMapping&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;{page}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ResultInfo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;selectForPage&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token annotation punctuation&quot;&gt;@PathVariable&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Integer&lt;/span&gt; page&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; access_token&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token class-name&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;FeedsVO&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; feedsVOS &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; feedsService&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;selectForPage&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;page&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; access_token&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ResultInfoUtil&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;buildSuccess&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getServletPath&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; feedsVOS&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;a id=&quot;FeedsService_380&quot;/&gt;FeedsService&lt;/h3&gt; 
&lt;p&gt;登录用户每次发送朋友圈都会向粉丝的feeds集合中推送这条朋友圈，那么当粉丝就可以获取关注的人的所有feeds。&lt;br/&gt; 比如用户8,9,11关注了用户7，那么用户7发的5条朋友圈，用户8,9,11都能看到,用户8同时还跟用户6是好友，那么用户8可以同时看到用户7和用户6发送的3条朋友圈。&lt;br/&gt; &lt;img src=&quot;https://img-blog.csdnimg.cn/191870005de845398ac3f148702ac6eb.png&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/0a1402aa7d8e430690956117c4e486d3.png&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;br/&gt; 实现逻辑如下：&lt;/p&gt; 
&lt;ul&gt;&lt;li&gt;获取登录用户信息&lt;/li&gt;&lt;li&gt;构建分页查询的参数start，end&lt;/li&gt;&lt;li&gt;从Redis的sorted sets中按照score的降序进行读取Feed的id&lt;/li&gt;&lt;li&gt;从数据库中获取Feed的信息&lt;/li&gt;&lt;li&gt;构建Feed关联的用户信息（不是循环逐条读取，而是批量获取）&lt;/li&gt;&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;prism language-java&quot;&gt;    
    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;FeedsVO&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;selectForPage&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Integer&lt;/span&gt; page&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; accessToken&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;page &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            page &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
        
        &lt;span class=&quot;token class-name&quot;&gt;SignInUserInfo&lt;/span&gt; userInfo &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;loadSignInUserInfo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;accessToken&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        
        &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; key &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;RedisKeyConstant&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;following_feeds&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getKey&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; userInfo&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        
        &lt;span class=&quot;token keyword&quot;&gt;long&lt;/span&gt; start &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;page &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ApiConstant&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;PAGE_SIZE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;long&lt;/span&gt; end &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; page &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ApiConstant&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;PAGE_SIZE&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token class-name&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; feedIds &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; redisTemplate&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;opsForZSet&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;reverseRange&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;key&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; start&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; end&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;feedIds &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; feedIds&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isEmpty&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Lists&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;newArrayList&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
        
        &lt;span class=&quot;token class-name&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Feeds&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; feeds &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; feedsMapper&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;findFeedsByIds&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;feedIds&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        
        &lt;span class=&quot;token class-name&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; followinguserIds &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        
        &lt;span class=&quot;token class-name&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;FeedsVO&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; feedsVOS &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; feeds&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;feed &lt;span class=&quot;token operator&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token class-name&quot;&gt;FeedsVO&lt;/span&gt; feedsVO &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;FeedsVO&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token class-name&quot;&gt;BeanUtil&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;copyProperties&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;feed&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; feedsVO&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            
            followinguserIds&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;feed&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getFkUserId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; feedsVO&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;collect&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Collectors&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;toList&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        
        &lt;span class=&quot;token class-name&quot;&gt;ResultInfo&lt;/span&gt; resultInfo &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; restTemplate&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getForObject&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;usersServerName &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;findByIds?access_token=${accessToken}&amp;amp;ids={ids}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;token class-name&quot;&gt;ResultInfo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; accessToken&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; followinguserIds&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;resultInfo&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getCode&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ApiConstant&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;SUCCESS_CODE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ParameterException&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;resultInfo&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getCode&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; resultInfo&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getMessage&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;token class-name&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;LinkedHashMap&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; userInfoMaps &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; resultInfo&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getData&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        
        &lt;span class=&quot;token class-name&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ShortUserInfo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; userInfos &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; userInfoMaps&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;collect&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Collectors&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;toMap&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
                        
                        diner &lt;span class=&quot;token operator&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; diner&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
                        
                        diner &lt;span class=&quot;token operator&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;BeanUtil&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;fillBeanWithMap&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;diner&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ShortUserInfo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        
        feedsVOS&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;feedsVO &lt;span class=&quot;token operator&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            feedsVO&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setUserInfo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;userInfos&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;feedsVO&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getFkUserId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; feedsVOS&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;a id=&quot;FeedsMapper_450&quot;/&gt;FeedsMapper&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;prism language-java&quot;&gt;    
    &lt;span class=&quot;token annotation punctuation&quot;&gt;@Select&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;&amp;lt;script&amp;gt; &quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;
            &lt;span class=&quot;token string&quot;&gt;&quot; select id, content, fk_user_id, praise_amount, &quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;
            &lt;span class=&quot;token string&quot;&gt;&quot; comment_amount, fk_restaurant_id, create_date, update_date, is_valid &quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;
            &lt;span class=&quot;token string&quot;&gt;&quot; from t_feeds where is_valid = 1 and id in &quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;
            &lt;span class=&quot;token string&quot;&gt;&quot; &amp;lt;foreach item=\&quot;id\&quot; collection=\&quot;feedIds\&quot; open=\&quot;(\&quot; separator=\&quot;,\&quot; close=\&quot;)\&quot;&amp;gt;&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;
            &lt;span class=&quot;token string&quot;&gt;&quot;   #{id}&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;
            &lt;span class=&quot;token string&quot;&gt;&quot; &amp;lt;/foreach&amp;gt; order by id desc&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;
            &lt;span class=&quot;token string&quot;&gt;&quot; &amp;lt;/script&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token class-name&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Feeds&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;findFeedsByIds&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token annotation punctuation&quot;&gt;@Param&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;feedIds&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; feedIds&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;a id=&quot;_467&quot;/&gt;启动项目测试&lt;/h3&gt; 
&lt;p&gt;查询用户8关注好友的feeds列表：&lt;br/&gt; 用户8同时和用户7、用户6是好友，那么用户8可以同时看到用户7的5条朋友圈和用户6发送的3条朋友圈。&lt;br/&gt; &lt;img src=&quot;https://img-blog.csdnimg.cn/19c31496e3894fe49235cea97b4e90d9.png&quot; alt=&quot;在这里插入图片描述&quot;/&gt;&lt;br/&gt; 调用分页查询接口查询如下：&lt;br/&gt; &lt;a href=&quot;http://localhost/feeds/1?access_token=1d7eb176-2454-4fd4-96d2-9c2d27c0ace6&quot;&gt;http://localhost/feeds/1?access_token=1d7eb176-2454-4fd4-96d2-9c2d27c0ace6&lt;/a&gt;&lt;br/&gt; &lt;img src=&quot;https://img-blog.csdnimg.cn/img_convert/0c59225abd4ea9d74821184f412176ca.png#averageHue=#fefdfb&amp;amp;clientId=u2d301496-5338-4&amp;amp;crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;from=paste&amp;amp;height=720&amp;amp;id=uda4ec0d1&amp;amp;margin=%5BobjectObject%5D&amp;amp;name=image.png&amp;amp;originHeight=900&amp;amp;originWidth=820&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=55949&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u23ed436e-9e89-4a87-820d-b52ac4b03c8&amp;amp;title=&amp;amp;width=656&quot; alt=&quot;image.png&quot;/&gt;&lt;br/&gt; 可以看到顺序是按照最新的在最上面。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;本文内容到此结束了，&lt;br/&gt; 如有收获欢迎点赞👍收藏💖关注✔️，您的鼓励是我最大的动力。&lt;br/&gt; 如有错误❌疑问💬欢迎各位指出。&lt;br/&gt; &lt;strong&gt;主页&lt;/strong&gt;：&lt;a href=&quot;https://zhanjq.blog.csdn.net/?type=blog&quot;&gt;共饮一杯无的博客汇总👨‍💻&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;保持热爱，奔赴下一场山海&lt;/strong&gt;。🏃🏃🏃&lt;/p&gt; 
&lt;/blockquote&gt;
                &lt;/div&gt;
                
                
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>a32b2e1f9adde1cdb8646db5319fc016</guid>
<title>2022 年度大戏，跳槽、转正！</title>
<link>https://toutiao.io/k/wqnlier</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;section&gt;&lt;mp-common-profile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-weui-theme=&quot;light&quot; data-id=&quot;MzU2NTEyNjIzMw==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/a1gicTYmvicd8cjqsZ9HP3aatIrg6qmFeibZXoF4kIvQaib8Sb6Wg4IicH2uZNurWvYxjIHQo3ATRcfTroRrKknd2dQ/0?wx_fmt=png&quot; data-nickname=&quot;君哥聊技术&quot; data-alias=&quot;&quot; data-signature=&quot;后端架构师，定期分享技术干货，包括后端开发、分布式、中间件、云原生等。同时也会分享职场心得、程序人生。关注我，一起进阶。&quot; data-from=&quot;0&quot; data-is_biz_ban=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大家好，我是君哥，新年快乐。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;忙碌的时候总是感觉时间过的很快，入职新公司已经半年了。最近在公司内部做了转正述职答辩，算是对入职半年来的总结。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;熟悉我的朋友都知道，最近一年我换了两次工作。第一次是从银行系的消费金融公司出来去了一家能源公司，在能源公司呆了 8 个月第二次换工作，重新回到了银行系。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;回到银行系的感觉，熟悉的行业，熟悉的氛围。今天来分享一下最近的职场经历。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;转正述职&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;虽然毕业后经历了好几家公司，但是正式的转正述职答辩不多，所以多花了点时间做准备。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;关于怎么写述职报告，网上相关的文章太多了，我自己主要从几个方面做 PPT：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;自我介绍，我主要介绍了学历，工作经历；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;试用期工作内容、成果和产出，我主要介绍了自己负责的项目，有哪些是已经上线的，哪些是还未上线的，自己在项目中的工作内容；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;遇到的问题解决和解决方案，我主要分类总结了遇到的生产问题（也讲了一些细节）和解决方案；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;未来的规划，我主要讲述了怎么来适应环境（包括项目、团队、平台）和未来的工作规划（主要是交付、优化和技术输出）。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;写完之后，领导又给了一些建议，改了两版。担心述职时表达不好，反反复复演练了很多遍。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;后面就是正式的述职，这段时间多数人因为阳性居家办公楼，述职也是远程会议。我找了一个会议室，述职前又演练了一遍。述职的时候用手机给自己录音，想着之后可以听一下真实的述职情况。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;正式述职的时候，还是有点不一样，毕竟都是中高层领导，多多少少有点紧张。想起之前一个资深技术总监跟我们说，他在中高层年度大会给 CEO 汇报工作差点紧张的说不出话来。不过反复演练还是有效果的，至少表达的时候逻辑可以很清晰，不用现场组织语言。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;述职结束后，领导的点评还是挺不错的，可能是报告的内容丰富，也体现出了自己工作的压力，还穿插了一些业务细节讲给领导。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其中，领导提到一个问题，算是给我的建议，分享一下。我负责的系统，有一个非常核心的接口好多项目在用，包括我自己负责的项目，但是最近我负责的项目出了一个生产问题，最后定位是这个接口有问题。如下图：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7755610972568578&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/a1gicTYmvicd9Hr7qdu3icrGbSV2W63eNxEqQqzBlYncdFEEiaW0lTQ9CW80DAGQmMfP8s4T1FAd74QBJ1SX6iclfeg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;401&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我负责的是项目 3 ，这个项目跟项目 1、项目 2 公用接口 A，但是发现接口 A 缺少过滤字段，导致项目 1 和项目 2 的页面查询订单时把我负责的项目 3 的订单查询了出来了，并且做了操作，最终导致了生产问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我在述职时提到了这个问题，如果直接修改接口 A，这三个项目都需要跟着改。&lt;span&gt;&lt;strong&gt;因为公司的系统太多了，能找出哪些系统使用接口 A 都很难，而且即使找全了，要求所有系统都配合改，也是一个很大的工程，每个系统交付压力都不小，协作修改难度会很大。&lt;/strong&gt;&lt;/span&gt;所以我建议新写一个接口，增加过滤字段，但是这样确实两个接口重复的东西太多了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;领导给出的建议是首先通过公司内部工具（有现成的工具）找出哪些系统使用了接口 A，然后协调给出排期计划，为了紧急修复线上问题，可以暂时增加接口 B 的方式来绕过问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;领导提到的第二个问题就是代码交付，公司还是非常在意员工的代码提交的，包括总监级别都要有代码提交。领导统计到我试用期提交了 4000 行代码，当然，我自己心里有数，应该没有这么多。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最后就是领导的一些关心和建议，答辩结束。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;关于转正答辩，再分享几点：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;不能转正的情况很少，决定自己能不能转正的其实并不是述职答辩，而是直属领导。但是转正答辩是对自己工作内容很好的总结，也是少有的能在高层领导面试展示自己的机会。述职结束后，我的总监让我打开摄像头让高层领导认识我；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;内容非常重要，让内容接地气，不要只喊口号，只有方法论；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;充分的准备和反复演练是有必要的。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;入职半年&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上面分享了我的转正述职，接下来分享我这半年的工作。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;入职后，我加入了一个刚成立半年的团队，这个团队对接公司一个新的业务部门，机会与挑战并存。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;工作内容&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;部门对每个职级都是有要求的，我的职级对标的要求是负责一个项目群的技术。入职后，学习了半个月，领导就把整个项目群交给我了。这个项目群之前由另一个同事负责，但是他有别的工作安排，去了另一个团队。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;接手了这个项目群和团队后，自己开始学习、摸索，熟悉系统和业务。跟之前新入职能源公司感觉有几点不同：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;虽然是新平台，但是我之前有 5 年多的同行业经验，而且这 5 年我是非常幸运了，接触了各种不同的业务模块包括很多核心业务。对业务理解很好，上手就很快；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;领导和身边的同事很好相处，我的老大是公司的老人，业务和技术都非常好，给我培训了几次，讲得非常清楚。&lt;span&gt;&lt;strong&gt;说实话，我最担心遇到技术和业务都不熟悉的同事做领导，外行指导内行真的非常难受&lt;/strong&gt;&lt;/span&gt;；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;公司对代码交付很看重，总监级别的都要求有代码提交。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;压力&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;虽然之前有 5 年多的行业经验，但压力还是不小。进入一个新的平台，需要熟悉项目、熟悉公司的各个模块、熟悉身边的同事。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;团队对接的项目是新的项目，由我们团队发起和主导，就是说我需要同时担任项目经理和技术经理的角色。跟我之前的金融工作经历相比，项目的节奏比较快，因为新项目，业务想要快速上线进行推广来占领市场，这个可以理解。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;团队比较年轻，工作经验不够丰富，责任心不够强。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;之前在消金公司，平台很小，一个项目，两三个团队参与，大家都在一起办公，沟通协调很容易。而新公司是大平台，每个项目都需要 10 几个团队参与，并且大家在不同的职场区域办公。作为项目主导方，沟通协调的工作非常多，各团队交付压力都很大，沟通起来并不容易。这期间，我努力突破自己的社交恐惧，聊天工具对方 10 分钟不回复的情况下，我就打电话去找。我还在公司内网的博客发表了技术文章，目的是建立影响力，让更多同事认识我。通过自己不断努力，认识了各部门很多同事，微信多了 100 多个好友，我也告诉自己团队成员，如果工作过程中找不到需要配合的同事就告我，我去找。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.39827373612823674&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/a1gicTYmvicd9Hr7qdu3icrGbSV2W63eNxEqSxiaHqIaTURdkLTnTyfaCM9GgQ2mhPjQfXLTzOsUlMAicIwVtLJCrlA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;811&quot;/&gt;&lt;span&gt;&lt;strong&gt;以前我一直不喜欢项目经理这个角色，因为我觉得这个职位就是光指挥不干活，但在大平台上，项目经理的角色也是有一定挑战的。对于 35 岁的技术人，应该是各种角色都能玩的转，比如架构师、程序员、项目经理、团队负责人。&lt;/strong&gt;&lt;/span&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;进度的压力也很大，刚来公司几个月，我遇到了业务压缩排期的情况，因为来的时间短不熟悉情况就答应了，后来发现这让我自己非常被动。我要去跟各个参与项目的团队开发人员说新的排期，有的团队有困难，就需要我去找他们团队负责人帮忙解决困难，比如资源问题。&lt;strong&gt;&lt;span&gt;管理好业务预期也是非常重要的。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;随着项目上线后不断推广，生产问题也多起来，虽然测试环境都是完整测试的，但是生产环境的情况复杂太多了，各种考虑不到的情况，技术问题业务问题可能都有。这也增加了我的工作量和压力。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;之前在能源公司，我入职 5 个月的时候，已经有了离职的想法。而在新公司，虽然压力大，但我干的还是比较满意，我觉得主要有几个原因：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;领导对我非常信任，刚入职就把整个项目群交给了我并且没有过多干预，只是偶尔要一个结果；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;公司的同事很好相处，即使加班也不是很难协调；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;公司承诺的薪资和福利并没有打折扣。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;在职场上，比工作压力更让人不舒服的是得不到信任、领导是外行、同事不好相处、薪酬福利承诺不一致。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;技术&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;前面提到过，我自己在试用期交付的代码很少，确实是，设计、沟通、解决问题占用了我大部分时间。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有个同事跟我抱怨，公司学不到技术，代码写的不好，系统也做的不怎么样。要是用我 5 年前的眼光来审视，这个同事说的确实对。但用工作 10 年的眼光来审视，就不一样了。我问这个同事，在一个系统上同时并行几十个项目，上百人在里面开发，好多同事是外包不仅缺少经验而且缺少责任心，项目交付压力又很大，你要是架构师，你会怎么设计。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;讲真，我要是架构师，我也只能在技术选型上选择一些开放的技术，设计模式用的多一些，代码质量上高一些，架构上真不一定能比现在设计的好。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;工作多年就会发现，技术能力在我们成长路上的助力并不大，除非能做到行业内知名的技术专家或者技术极客。因为技术最终是要赋能业务的，能有高效稳定持续地交付才是关键，公司内一旦业务收缩，紧接着必定是裁员。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;当然，这并不是说技术不重要，技术专业性永远是公司对技术人最基本的要求，是通过跳槽提高收入和职级的必备能力，也是技术人建立个人影响力的最有效路径。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;大平台小平台&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;到底去大平台还是小平台，这个是讨论了很久的话题，网上也有各种见解。就我自己职场这 10 年，大平台和小平台都干过，这里分享几点看法。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;技术提升&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;小平台上系统更加灵活，可能技术选型上会更加 open，对于年轻人学习新技术是很适合的。而在大平台上，技术偏保守，因为系统太多，升级带来的成本会非常高，甚至一次技术升级都很难能推动起来，高层考虑的首要因素是系统稳定性，不影响业务是底线。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从零到一的系统建设和大规模的重构，都是简历上的亮点。在小平台上，也是很容易获取到的经验，但是小平台的规模不会太大，比如一个百人团队参与的项目，在小平台上是很难有机会的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大平台上的架构会更有参考价值。毕竟大平台承载的业务体量大，并行项目多，参与协作的系统多，参与开发的程序员多，没有一个好的架构，是很难承载的。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;机会&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大公司变化多，机会也多，这也是很多职场大佬建议技术人选择大厂的一个原因。我经历的公司也是这个情况，小公司基本一个萝卜一个坑，除非开辟新的业务，不然很难有机会突围的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大公司业务变化快，技术部门很容易随着业务发展产生裂变，技术人的机会比较多。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;氛围&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大公司有招聘上的优势，所以招聘时会更看重候选人的综合能力，而在小公司只要能干活就能过关。这里的观点比较主观，仅供参考。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我觉得大公司的氛围更舒服，同事更好相处。分享几件我在小公司遇到的不太理解的事情：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;某公司的技术经理，脾气非常大。跟我们说他有两个情况会发脾气，一个是他问我们自己负责的模块我们不熟悉的时候，一个是他专心工作别人问他问题的时候。第一个我可以理解，第二个我着实不理解啊，作为团队负责人，这样谁还好意思问你问题呢；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;在能源公司我入职第三天，某个团队遇到了 Elasticsearch 集群问题，我的领导也找我看看能不能支援。这个团队的架构师跑来跟我聊，说他才刚入职四天，不熟悉业务，不了解集群情况，申请机器资源运维考虑成本不给批。第二天，这个架构师跑路了；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;在消金公司，低级别的同事带高级别的同事，这让我感觉有点不正规。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;感悟&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于中年技术人，无论在大公司还是小公司，如果能得到领导的信任，能有不错的工作氛围，都是可以选择的，如果还能有一些决策的空间或者试错的机会，那就更好了。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;核心竞争力&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最近一年求职环境非常恶劣，相信大家都有感触。先分享几件事情：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;同事 A，我最近招的一个新同事，工作 15 年，干过技术经理、技术总监、架构师，因为年龄问题以及没有一个稳定的行业经验，选择了干外包。面试的时候表现还是不错的，我给了他一个外包岗位里面不错的职级，我以为他就是来积累面试经验的，但最终还是入职了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;候选人 B，也是来我们公司面试外包，工作 8 年，面试表现不错，我给通过了。已经定了入职日期，但是因为公司年底复盘，暂时关闭 HC，最终入职失败。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;朋友 C，之前年薪近百万的工作，被迫毕业后，面试了很多公司，因为年龄问题，找了半年，最后降薪一半去了一家小公司。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;朋友 D，一直在金融行业工作，被迫毕业后，面试了一个月，成功上岸了一家不错的银行系公司。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;多数技术人最终都会跟我一样成为中年技术人，因为管理岗位太少了，不可能每一个程序员都能走得上去。那中年技术人的核心竞争力到底在哪里呢？我觉得主要有四点:&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;丰富的行业经验：35 岁比 30 岁多工作了 5 年，那行业经验是否也多了 5 年？所以频繁换赛道，对技术人的发展很不利，互联网的红利大不如前，早已不是只懂技术就很容易拿高薪的时代了。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;技术优势：35 岁还在做技术，最好有一两门自己精通的技术，这是靠时间积累不断研究获得的能力。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;人脉资源：丰富的人脉资源对自己的学习、成长、求职帮助都很大。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;软实力：包括沟通协调能力、管理能力、文档能力等。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;最后&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;30 岁的时候，觉得 35 岁还在技术一线，还在投简历找工作，就是混的太惨了。到了 35 岁，发现这其实并不稀奇，多数人还在技术一线，投简历找工作也不丢人，反而可能找到更适合自己的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;35 岁，不要轻易丢弃技术，技术能力是永远公司对技术人最基本的要求。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;35 岁，依然要不断积累自己的核心竞争力，依然要不断地成长和突破。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;希望今天的分享能对你有所帮助，欢迎交流学习。&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>7208baf7e0bfdbee02dd38de1b821ec3</guid>
<title>.NET性能优化-推荐使用Collections.Pooled_51CTO博客_.net core性能优化</title>
<link>https://toutiao.io/k/k9hox5s</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;editor-container container am-engine&quot; id=&quot;container&quot; data-element=&quot;root&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;简介&lt;/p&gt;&lt;p&gt;性能优化就是如何在保证处理相同数量的请求情况下占用更少的资源，而这个资源一般就是CPU或者内存，当然还有操作系统IO句柄、网络流量、磁盘占用等等。但是绝大多数时候，我们就是在降低CPU和内存的占用率。&lt;/p&gt;&lt;p&gt;之前分享的内容都有一些局限性，很难直接改造，今天要和大家分享一个简单的方法，只需要替换几个集合类型，就可以达到提升性能和降低内存占用的效果。&lt;/p&gt;&lt;p&gt;要给大家分享一个类库，这个类库叫​&lt;code&gt;​Collections.Pooled​&lt;/code&gt;​，从名字就可以看出来，它是通过&lt;strong&gt;池化内存&lt;/strong&gt;来达到降低内存占用和GC的目的，后面我们会直接来看看它的性能到底怎么样，另外也会带大家看看源码，为什么它会带来这些性能提升。&lt;/p&gt;&lt;p&gt;Collections.Pooled&lt;/p&gt;&lt;p&gt;项目链接：https://github.com/jtmueller/Collections.Pooled&lt;/p&gt;&lt;p&gt;该库基于​&lt;code&gt;​System.Collections.Generic​&lt;/code&gt;​​中的类，这些类已经被修改，以利用新的​&lt;code&gt;​System.Span&amp;lt;T&amp;gt;​&lt;/code&gt;​​和​&lt;code&gt;​System.Buffers.ArrayPool&amp;lt;T&amp;gt;​&lt;/code&gt;​类库，达到减少内存分配，提高性能，并允许与现代API的更大的互操作性的目的。&lt;/p&gt;&lt;p&gt;​&lt;code&gt;​Collections.Pooled​&lt;/code&gt;​​支持​&lt;code&gt;​.NETStandard2.0​&lt;/code&gt;​（.NET Framework 4.6.1+），以及针对.NET Core 2.1+的优化构建。&lt;/p&gt;&lt;p&gt;一套广泛的单元测试和基准已经从corefx移植过来。&lt;/p&gt;&lt;div data-card-editable=&quot;false&quot; data-syntax=&quot;plain&quot;&gt;&lt;div class=&quot;&quot;&gt;&lt;div&gt;&lt;pre&gt;测试总数：27501。通过：27501。失败：0。跳过：0。&lt;br/&gt;测试运行成功。&lt;br/&gt;测试执行时间：9.9019秒&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;h3 id=&quot;h0&quot;&gt;如何使用&lt;/h3&gt;&lt;p&gt;通过Nuget就可以很简单的安装这个类库，NuGet Version 。&lt;/p&gt;&lt;div data-card-loading=&quot;true&quot; data-card-editable=&quot;false&quot; data-syntax=&quot;plain&quot;&gt;&lt;div class=&quot;&quot;&gt;&lt;div&gt;&lt;pre&gt;Install-Package Collections.Pooled&lt;br/&gt;dotnet add package Collections.Pooled&lt;br/&gt;paket add Collections.Pooled&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;在​&lt;code&gt;​Collections.Pooled​&lt;/code&gt;​类库中，它针对我们常使用的集合类型都实现了池化的版本，和.NET原生类型的对比如下所示。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://s2.51cto.com/images/blog/202207/09063259_62c8b09b0459065806.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_30,g_se,x_10,y_10,shadow_20,type_ZmFuZ3poZW5naGVpdGk=/resize,m_fixed,w_1184&quot; alt=&quot;.NET性能优化-推荐使用Collections.Pooled_性能优化&quot;/&gt;&lt;/p&gt;&lt;p&gt;在使用时，我们只需要将对应的.NET原生版本换成​&lt;code&gt;​Collections.Pooled​&lt;/code&gt;​版本就可以了，如下方的代码所示：&lt;/p&gt;&lt;div data-card-loading=&quot;true&quot; data-card-editable=&quot;false&quot; data-syntax=&quot;plain&quot;&gt;&lt;div class=&quot;&quot;&gt;&lt;div&gt;&lt;pre&gt;using Collections.Pooled;&lt;br/&gt;&lt;br/&gt;// 使用方式是一样的&lt;br/&gt;var list = new List&amp;lt;int&amp;gt;();&lt;br/&gt;var pooledList = new PooledList&amp;lt;int&amp;gt;();&lt;br/&gt;&lt;br/&gt;var dictionary = new Dictionary&amp;lt;int,int&amp;gt;();&lt;br/&gt;var pooledDictionary = new PooledDictionary&amp;lt;int,int&amp;gt;();&lt;br/&gt;&lt;br/&gt;// 包括PooledSet、PooledQueue、PooledStack的使用方法都是一样的&lt;br/&gt;&lt;br/&gt;var pooledList1 = Enumerable.Range(0,100).ToPooledList();&lt;br/&gt;var pooledDictionary1 = Enumerable.Range(0,100).ToPooledDictionary(i =&amp;gt; i, i =&amp;gt; i);&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;但是我们需要注意，​&lt;code&gt;​Pooled​&lt;/code&gt;​​类型实现了​&lt;code&gt;​IDispose​&lt;/code&gt;​​接口，它通过​&lt;code&gt;​Dispose()​&lt;/code&gt;​​方法将使用的内存归还到池中，所以我们需要在使用完​&lt;code&gt;​Pooled​&lt;/code&gt;​​集合对象以后调用它的​&lt;code&gt;​Dispose()​&lt;/code&gt;​​方法。或者可以直接使用​&lt;code&gt;​using var​&lt;/code&gt;​关键字。&lt;/p&gt;&lt;div data-card-loading=&quot;true&quot; data-card-editable=&quot;false&quot; data-syntax=&quot;plain&quot;&gt;&lt;div class=&quot;&quot;&gt;&lt;div&gt;&lt;pre&gt;using Collections.Pooled;&lt;br/&gt;&lt;br/&gt;// 使用using var 会在pooled对象使用完毕后自动释放&lt;br/&gt;using var pooledList = new PooledList&amp;lt;int&amp;gt;();&lt;br/&gt;Console.WriteLine(pooledList.Count);&lt;br/&gt;&lt;br/&gt;// 使用using作用域 作用域结束以后就会释放&lt;br/&gt;using (var pooledDictionary = new PooledDictionary&amp;lt;int, int&amp;gt;())&lt;br/&gt;{&lt;br/&gt; Console.WriteLine(pooledDictionary.Count);&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;// 手动调用Dispose方法&lt;br/&gt;var pooledStack = new PooledStack&amp;lt;int&amp;gt;();&lt;br/&gt;Console.WriteLine(pooledStack.Count);&lt;br/&gt;pooledList.Dispose();&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;注意：使用Collections.Pooled内的集合对象最好需要释放掉它，不过不释放也没有关系，GC最终会回收它，只是它不能归还到池中，达不到节省内存的效果了。&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;由于它会复用内存空间，在将内存空间返回到池中的时候，需要对集合内的元素做处理，它提供了一个叫​&lt;code&gt;​ClearMode​&lt;/code&gt;​的枚举供使用，定义如下：&lt;/p&gt;&lt;div data-card-loading=&quot;true&quot; data-card-editable=&quot;false&quot; data-syntax=&quot;plain&quot;&gt;&lt;div class=&quot;&quot;&gt;&lt;div&gt;&lt;pre&gt;namespace Collections.Pooled&lt;br/&gt;{&lt;br/&gt;    /// &amp;lt;summary&amp;gt;&lt;br/&gt;    /// 这个枚举允许控制在内部数组返回到ArrayPool时如何处理数据。&lt;br/&gt;    /// 数组返回到ArrayPool时如何处理数据。在使用默认选项之外的其他选项之前，请注意了解 &lt;br/&gt;    /// 在使用默认值Auto之外的任何其他选项之前，请仔细了解每个选项的作用。&lt;br/&gt;    /// &amp;lt;/summary&amp;gt;&lt;br/&gt;    public enum ClearMode&lt;br/&gt;    {&lt;br/&gt;        /// &amp;lt;summary&amp;gt;&lt;br/&gt;        /// &amp;lt;para&amp;gt;&amp;lt;code&amp;gt;Auto&amp;lt;/code&amp;gt;根据目标框架有不同的行为&amp;lt;/para&amp;gt;&lt;br/&gt;        /// &amp;lt;para&amp;gt;.NET Core 2.1: 引用类型和包含引用类型的值类型在内部数组返回池时被清除。 不包含引用类型的值类型在返回池时不会被清除。&amp;lt;/para&amp;gt;&lt;br/&gt;        /// &amp;lt;para&amp;gt;.NET Standard 2.0: 在返回池之前清除所有用户类型，以防它们包含引用类型。 对于 .NET Standard，Auto 和 Always 具有相同的行为。&amp;lt;/para&amp;gt;&lt;br/&gt;        /// &amp;lt;/summary&amp;gt;&lt;br/&gt;        Auto = 0,&lt;br/&gt;        &lt;br/&gt;        /// &amp;lt;summary&amp;gt;&lt;br/&gt;        /// The &amp;lt;para&amp;gt;&amp;lt;code&amp;gt;Always&amp;lt;/code&amp;gt; 设置的效果是在返回池之前总是清除用户类型。&lt;br/&gt;        /// &amp;lt;/summary&amp;gt;&lt;br/&gt;        Always = 1,&lt;br/&gt;        &lt;br/&gt;        /// &amp;lt;summary&amp;gt;&lt;br/&gt;        /// &amp;lt;para&amp;gt;&amp;lt;code&amp;gt;Never&amp;lt;/code&amp;gt; 将导致池化集合在将它们返回池之前永远不会清除用户类型。&amp;lt;/para&amp;gt;&lt;br/&gt;        /// &amp;lt;/summary&amp;gt;&lt;br/&gt;        Never = 2&lt;br/&gt;    }&lt;br/&gt;}&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;默认情况下，使用默认值Auto即可，如果有特殊的性能要求，知晓风险后可以使用Never。&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;对于引用类型和包含引用类型的值类型，我们必须在将内存空间归还到池的时候清空数组引用，如果不清除会导致GC无法释放这部分内存空间（因为元素的引用一直被池持有），如果是纯值类型，那么就可以不清空，在使用结构体替代类这篇文章中，我描述了引用类型和结构体(值类型)数组的存储区别，纯值类型没有对象头回收也无需GC介入。&lt;/p&gt;&lt;p&gt;性能对比&lt;/p&gt;&lt;p&gt;我没有单独做Benchmark，直接使用的开源项目的跑分结果，&lt;strong&gt;很多项目的内存占用都是0，那是因为使用的池化的内存，没有多余的分配&lt;/strong&gt;。&lt;/p&gt;&lt;p&gt;PooledList&amp;lt;T&amp;gt;&lt;/p&gt;&lt;p&gt;在Benchmark中循环向集合添加2048个元素，.NET原生的​&lt;code&gt;​List&amp;lt;T&amp;gt;​&lt;/code&gt;​需要&lt;strong&gt;110us&lt;/strong&gt;(根据实际跑分结果，图中的毫秒应该是笔误)和&lt;strong&gt;263KB&lt;/strong&gt;内存，而​&lt;code&gt;​PooledList&amp;lt;T&amp;gt;​&lt;/code&gt;​只需要&lt;strong&gt;36us&lt;/strong&gt;和&lt;strong&gt;0KB&lt;/strong&gt;内存。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://s2.51cto.com/images/blog/202207/09063259_62c8b09b2e1bd4232.jpg?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_30,g_se,x_10,y_10,shadow_20,type_ZmFuZ3poZW5naGVpdGk=/resize,m_fixed,w_1184&quot; alt=&quot;.NET性能优化-推荐使用Collections.Pooled_性能优化_02&quot;/&gt;&lt;/p&gt;&lt;p&gt;​&lt;code&gt;​PooledDictionary&amp;lt;TKey, TValue&amp;gt;​&lt;/code&gt;​&lt;/p&gt;&lt;p&gt;在Benchmark中循环向字典添加10_0000个元素，.NET原生的​&lt;code&gt;​Dictionary&amp;lt;TKey, TValue&amp;gt;​&lt;/code&gt;​需要&lt;strong&gt;11ms&lt;/strong&gt;和&lt;strong&gt;13MB&lt;/strong&gt;内存，而​&lt;code&gt;​PooledDictionary&amp;lt;TKey, TValue&amp;gt;​&lt;/code&gt;​只需要&lt;strong&gt;7ms&lt;/strong&gt;和&lt;strong&gt;0MB&lt;/strong&gt;内存。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://s2.51cto.com/images/blog/202207/09063259_62c8b09b59cf918684.jpg?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_30,g_se,x_10,y_10,shadow_20,type_ZmFuZ3poZW5naGVpdGk=/resize,m_fixed,w_1184&quot; alt=&quot;.NET性能优化-推荐使用Collections.Pooled_集合类型_03&quot;/&gt;&lt;/p&gt;&lt;p&gt;PooledSet&amp;lt;T&amp;gt;&lt;/p&gt;&lt;p&gt;在Benchmark中循环向哈希集合添加10_0000个元素，.NET原生的​&lt;code&gt;​HashSet&amp;lt;T&amp;gt;​&lt;/code&gt;​需要&lt;strong&gt;5348ms&lt;/strong&gt;和&lt;strong&gt;2MB&lt;/strong&gt;，而​&lt;code&gt;​PooledSet&amp;lt;T&amp;gt;​&lt;/code&gt;​只需要&lt;strong&gt;4723ms&lt;/strong&gt;和&lt;strong&gt;0MB&lt;/strong&gt;内存。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://s2.51cto.com/images/blog/202207/09063259_62c8b09b825ad44717.jpg?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_30,g_se,x_10,y_10,shadow_20,type_ZmFuZ3poZW5naGVpdGk=/resize,m_fixed,w_1184&quot; alt=&quot;.NET性能优化-推荐使用Collections.Pooled_.net_04&quot;/&gt;&lt;/p&gt;&lt;p&gt;PooledStack&amp;lt;T&amp;gt;&lt;/p&gt;&lt;p&gt;在Benchmark中循环向栈添加10_0000个元素，.NET原生的​&lt;code&gt;​PooledStack&amp;lt;T&amp;gt;​&lt;/code&gt;​需要&lt;strong&gt;1079ms&lt;/strong&gt;和&lt;strong&gt;2MB&lt;/strong&gt;，而​&lt;code&gt;​PooledStack&amp;lt;T&amp;gt;​&lt;/code&gt;​只需要&lt;strong&gt;633ms&lt;/strong&gt;和&lt;strong&gt;0MB&lt;/strong&gt;内存。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://s2.51cto.com/images/blog/202207/09063259_62c8b09bc147b95604.jpg?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_30,g_se,x_10,y_10,shadow_20,type_ZmFuZ3poZW5naGVpdGk=/resize,m_fixed,w_1184&quot; alt=&quot;.NET性能优化-推荐使用Collections.Pooled_数组_05&quot;/&gt;&lt;/p&gt;&lt;p&gt;PooledQueue&amp;lt;T&amp;gt;&lt;/p&gt;&lt;p&gt;在Benchmark中循环向队列添加10_0000个元素，.NET原生的​&lt;code&gt;​PooledQueue&amp;lt;T&amp;gt;​&lt;/code&gt;​需要&lt;strong&gt;681ms&lt;/strong&gt;和&lt;strong&gt;1MB&lt;/strong&gt;，而​&lt;code&gt;​PooledQueue&amp;lt;T&amp;gt;​&lt;/code&gt;​只需要&lt;strong&gt;408ms&lt;/strong&gt;和&lt;strong&gt;0MB&lt;/strong&gt;内存。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://s2.51cto.com/images/blog/202207/09063300_62c8b09c0501548944.jpg?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_30,g_se,x_10,y_10,shadow_20,type_ZmFuZ3poZW5naGVpdGk=/resize,m_fixed,w_1184&quot; alt=&quot;.NET性能优化-推荐使用Collections.Pooled_集合类型_06&quot;/&gt;&lt;/p&gt;&lt;p&gt;未手动释放场景&lt;/p&gt;&lt;p&gt;另外在上文中我们提到了​&lt;code&gt;​Pooled​&lt;/code&gt;​的集合类型需要释放，但是不释放也没有太大的关系，因为GC会去回收。&lt;/p&gt;&lt;div data-card-loading=&quot;true&quot; data-card-editable=&quot;false&quot; data-syntax=&quot;plain&quot;&gt;&lt;div class=&quot;&quot;&gt;&lt;div&gt;&lt;pre&gt;private static readonly string[] List = Enumerable  &lt;br/&gt;    .Range(0, 10000).Select(c =&amp;gt; c.ToString()).ToArray();  &lt;br/&gt;// 使用默认的集合类型  &lt;br/&gt;[Benchmark(Baseline = true)]  &lt;br/&gt;public int UseList()  &lt;br/&gt;{  &lt;br/&gt;    var list = new List&amp;lt;string&amp;gt;(1024);  &lt;br/&gt;    for (var index = 0; index &amp;lt; List.Length; index++)  &lt;br/&gt;    {  &lt;br/&gt;        var item = List[index];  &lt;br/&gt;        list.Add(item);  &lt;br/&gt;    }  &lt;br/&gt;    return list.Count;  &lt;br/&gt;}  &lt;br/&gt;// 使用PooledList 并且及时释放  &lt;br/&gt;[Benchmark]  &lt;br/&gt;public int UsePooled()  &lt;br/&gt;{  &lt;br/&gt;    using var list = new PooledList&amp;lt;string&amp;gt;(1024);  &lt;br/&gt;    for (var index = 0; index &amp;lt; List.Length; index++)  &lt;br/&gt;    {  &lt;br/&gt;        var item = List[index];  &lt;br/&gt;        list.Add(item);  &lt;br/&gt;    }  &lt;br/&gt;    return list.Count;  &lt;br/&gt;}  &lt;br/&gt;// 使用PooledList 不释放  &lt;br/&gt;[Benchmark]  &lt;br/&gt;public int UsePooledWithOutUsing()  &lt;br/&gt;{  &lt;br/&gt;    var list = new PooledList&amp;lt;string&amp;gt;(1024);  &lt;br/&gt;    for (var index = 0; index &amp;lt; List.Length; index++)  &lt;br/&gt;    {  &lt;br/&gt;        var item = List[index];  &lt;br/&gt;        list.Add(item);  &lt;br/&gt;    }  &lt;br/&gt;    return list.Count;  &lt;br/&gt;}&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;Benchmark结果如下：&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://s2.51cto.com/images/blog/202207/09063300_62c8b09cb33a718959.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_30,g_se,x_10,y_10,shadow_20,type_ZmFuZ3poZW5naGVpdGk=/resize,m_fixed,w_1184&quot; alt=&quot;.NET性能优化-推荐使用Collections.Pooled_性能优化_07&quot;/&gt;&lt;/p&gt;&lt;p&gt;可以从上面的Benchmark结果可以得出结论。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;及时释放​&lt;code&gt;​Pooled​&lt;/code&gt;​类型集合几乎不会触发GC和分配内存，从上图中它只分配了56Byte内存。&lt;/li&gt;&lt;li&gt;就算不释放​&lt;code&gt;​Pooled​&lt;/code&gt;​类型集合，因为它从池中分配内存，在进行​&lt;code&gt;​ReSize​&lt;/code&gt;​扩容操作时还是会复用内存，另外跳过了GC分配内存初始化步骤，速度也比较快。&lt;/li&gt;&lt;li&gt;最慢的就是使用普通集合类型，每次​&lt;code&gt;​ReSize​&lt;/code&gt;​扩容操作都需要申请新的内存空间，GC也要回收之前的内存空间。&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;h1&quot;&gt;原理解析&lt;/h3&gt;&lt;p&gt;如果大家看过我之前的博文你应该为集合类型设置初始大小和浅析C# Dictionary实现原理就可以知道，.NET BCL开发人员为了高性能的随机访问，这些基本集合类型的底层数据结构都是&lt;strong&gt;数组&lt;/strong&gt;，我们以​&lt;code&gt;​List&amp;lt;T&amp;gt;​&lt;/code&gt;​为例。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;创建新的数组来存储添加进来的元素。&lt;/li&gt;&lt;li&gt;如果数组空间不够，那么就触发扩容操作，申请2倍的空间大小。构造函数代码如下，可以看到是直接创建的泛型数组：&lt;/li&gt;&lt;/ul&gt;&lt;div data-card-loading=&quot;true&quot; data-card-editable=&quot;false&quot; data-syntax=&quot;plain&quot;&gt;&lt;div class=&quot;&quot;&gt;&lt;div&gt;&lt;pre&gt;public List(int capacity)&lt;br/&gt;{&lt;br/&gt;      if (capacity &amp;lt; 0)&lt;br/&gt;          ThrowHelper.ThrowArgumentOutOfRangeException(ExceptionArgument.capacity, ExceptionResource.ArgumentOutOfRange_NeedNonNegNum);&lt;br/&gt;&lt;br/&gt;      if (capacity == 0)&lt;br/&gt;          _items = s_emptyArray;&lt;br/&gt;      else&lt;br/&gt;          _items = new T[capacity];&lt;br/&gt;}&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;那么如果想要池化内存，只需要把类库中使用​&lt;code&gt;​new​&lt;/code&gt;​​关键字申请的地方，改为使用池化的申请。这里和大家分享.NET BCL中的一个类型，叫​&lt;code&gt;​ArrayPool​&lt;/code&gt;​，它提供了可重复使用的泛型实例的数组资源池，使用它可以降低对GC的压力，在频繁创建和销毁数组的情况下提升性能。&lt;/p&gt;&lt;p&gt;而我们​&lt;code&gt;​Pooled​&lt;/code&gt;​​类型的底层就是使用​&lt;code&gt;​ArrayPool​&lt;/code&gt;​​来共享资源池，从它的构造函数中，我们可以看到它默认使用的是​&lt;code&gt;​ArrayPool&amp;lt;T&amp;gt;.Shared​&lt;/code&gt;​​来分配数组对象，当然你也可以创建自己的​&lt;code&gt;​ArrayPool​&lt;/code&gt;​来让它使用。&lt;/p&gt;&lt;div data-card-loading=&quot;true&quot; data-card-editable=&quot;false&quot; data-syntax=&quot;plain&quot;&gt;&lt;div class=&quot;&quot;&gt;&lt;div&gt;&lt;pre&gt;// 默认使用ArrayPool&amp;lt;T&amp;gt;.Shared池&lt;br/&gt;public PooledList(int capacity, ClearMode clearMode, bool sizeToCapacity) : this(capacity, clearMode, ArrayPool&amp;lt;T&amp;gt;.Shared, sizeToCapacity) { }  &lt;br/&gt;&lt;br/&gt;// 分配数组使用 ArrayPool&lt;br/&gt;public PooledList(int capacity, ClearMode clearMode, ArrayPool&amp;lt;T&amp;gt; customPool, bool sizeToCapacity)&lt;br/&gt;{&lt;br/&gt;    if (capacity &amp;lt; 0)&lt;br/&gt;        ThrowHelper.ThrowArgumentOutOfRangeException(ExceptionArgument.capacity, ExceptionResource.ArgumentOutOfRange_NeedNonNegNum);&lt;br/&gt;    _pool = customPool ?? ArrayPool&amp;lt;T&amp;gt;.Shared;&lt;br/&gt;    _clearOnFree = ShouldClear(clearMode);&lt;br/&gt;    if (capacity == 0)&lt;br/&gt;    {&lt;br/&gt;        _items = s_emptyArray;&lt;br/&gt;    }&lt;br/&gt;    else&lt;br/&gt;    {&lt;br/&gt;        _items = _pool.Rent(capacity);&lt;br/&gt;    }&lt;br/&gt;    &lt;br/&gt;    if (sizeToCapacity)&lt;br/&gt;    {&lt;br/&gt;        _size = capacity;&lt;br/&gt;        if (clearMode != ClearMode.Never)&lt;br/&gt;        {&lt;br/&gt;            Array.Clear(_items, 0, _size);&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt; }&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;另外在进行容量调整操作（扩容）时，会将旧的数组归还回线程池，新的数组也在池中获取。&lt;/p&gt;&lt;div data-card-loading=&quot;true&quot; data-card-editable=&quot;false&quot; data-syntax=&quot;plain&quot;&gt;&lt;div class=&quot;&quot;&gt;&lt;div&gt;&lt;pre&gt; public int Capacity&lt;br/&gt;{&lt;br/&gt;    get =&amp;gt; _items.Length;&lt;br/&gt;    set&lt;br/&gt;    {&lt;br/&gt;        if (value &amp;lt; _size)&lt;br/&gt;        {&lt;br/&gt;            ThrowHelper.ThrowArgumentOutOfRangeException(ExceptionArgument.value, ExceptionResource.ArgumentOutOfRange_SmallCapacity);&lt;br/&gt;        }&lt;br/&gt;&lt;br/&gt;        if (value != _items.Length)&lt;br/&gt;        {&lt;br/&gt;            if (value &amp;gt; 0)&lt;br/&gt;            {&lt;br/&gt;                // 从池中分配数组&lt;br/&gt;                var newItems = _pool.Rent(value);&lt;br/&gt;                if (_size &amp;gt; 0)&lt;br/&gt;                {&lt;br/&gt;                    Array.Copy(_items, newItems, _size);&lt;br/&gt;                }&lt;br/&gt;                // 旧数组归还到池中&lt;br/&gt;                ReturnArray();&lt;br/&gt;                _items = newItems;&lt;br/&gt;            }&lt;br/&gt;            else&lt;br/&gt;            {&lt;br/&gt;                ReturnArray();&lt;br/&gt;                _size = 0;&lt;br/&gt;            }&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;private void ReturnArray()  &lt;br/&gt;{  &lt;br/&gt;    if (_items.Length == 0)  &lt;br/&gt;        return;  &lt;br/&gt;    try  &lt;br/&gt;    {  &lt;br/&gt;        // 归还到池中&lt;br/&gt;        _pool.Return(_items, clearArray: _clearOnFree);  &lt;br/&gt;    }  &lt;br/&gt;    catch (ArgumentException)  &lt;br/&gt;    {  &lt;br/&gt;        // ArrayPool可能会抛出异常，我们直接吞掉 &lt;br/&gt;    }  &lt;br/&gt;    _items = s_emptyArray;  &lt;br/&gt;}&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;另外作者使用了Span优化了Add、Insert等等API，让它们有更好的随机访问性能；另外还加入了TryXXX系列API，可以更方便的方式的使用它。比如List&amp;lt;T&amp;gt;类相比PooledList&amp;lt;T&amp;gt;就有多达170个修改。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://s2.51cto.com/images/blog/202207/09063301_62c8b09d14d2457852.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_30,g_se,x_10,y_10,shadow_20,type_ZmFuZ3poZW5naGVpdGk=/resize,m_fixed,w_1184&quot; alt=&quot;.NET性能优化-推荐使用Collections.Pooled_集合类型_08&quot;/&gt;&lt;/p&gt;&lt;h2 id=&quot;h2&quot;&gt;总结&lt;/h2&gt;&lt;p&gt;在我们线上实际的使用过程中，完全可以用​&lt;code&gt;​Pooled​&lt;/code&gt;​提供的集合类型替代原生的集合类型，对降低内存占用率和P95延时有非常大的帮助。&lt;/p&gt;&lt;p&gt;另外就算忘记释放了，那性能也不会比使用原生的集合类型差多少。当然最好的习惯就是及时的释放它。&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>d1496949f9e65a17b7b6417f3fd8b7e2</guid>
<title>SDR 硬件方案一网打尽</title>
<link>https://toutiao.io/k/9yv6lg5</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content js_underline_content             autoTypeSetting24psection&amp;#10;            &quot; id=&quot;js_content&quot;&gt;&lt;p&gt;乔布斯2007年发布iPhone时，引用图灵奖得主Alan Kay的一句话“真正在乎软件的人，应该打造自己的硬件”。同样道理，想玩好软件无线电，也必须深入SDR（软件无线电）硬件。&lt;/p&gt;&lt;p&gt;本文以射频硬件为线索，梳理常见SDR（软件无线电）方案。SDR硬件位于天线和数字信号处理之间，负责把无线电信号数字化，交由主机或者嵌入式系统（FPGA、DSP，MCU）处理。SDR硬件一般包含射频和数字两部分。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.285&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/nicL0OUIkE81xSNVcZOia9jPiaZx8GSevpTOdD2yl79bruIg178UvDsG4PNrAibuTdibSq2gByCiauxaZsRqeicSHl0nw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;800&quot;/&gt;&lt;/p&gt;&lt;p&gt;这里的射频指广义的从天线到ADC、DAC这部分，包含了高频/射频，中频IF（如果有），零中频，模拟基带，相关的滤波以及混合信号ADC/DAC。之所以不以数字部分为线索，是因为数字部分的实现方案无外乎以下四种：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;基于FPGA（亦可接主机）。典型代表：USRP系列&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;基于Xilinx Zynq SoC FPGA。典型代表：Xilinx开发板配合Analog Devices的射频板&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;基于USB单片机/MCU。典型代表：HackRF+portapack（NXP LPC4320），孔雀石Malahit（STM32H7）&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;基于主机或者SBC/单板计算机。典型代表：rtl-sdr电视棒、SDRPlay/RSP1、AIRSPY、RX888；KiwiSDR （采用BBB BeagleBone做主机），&lt;span&gt;CaribouLite RPi HAT （采用&lt;/span&gt;树莓派做主机）&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;不难看出，数字部分相对成熟且标准化程度高，这离不开芯片制程和计算机产业的高度发达。&lt;/p&gt;&lt;p&gt;反观射频部分，由于包含高频以及模拟信号处理，数模混合电路ADC、DAC，结构复杂，较少受惠于高级数字电路制程的进步，往往成为各种SDR硬件性能的决定性因素。因此本文以射频方案为主线，介绍以下SDR射频方案：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;PWM射频：无射频的射频&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;AD9361、AD9371、ADRV系列&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;LMS6002D、LMS7002M、LimeSDR系列&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;AT86RF215（Microchip公司支持I/Q采样的zigbee IoT芯片）&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;RFFC5072+MAX2837+MAX5864（HackRF的变频加Maxim WiFi套片）&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;E4000/R820T+RTL2832、rtl-sdr电视棒系列&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;E4000+TLV320ADC3140音频codec（Funcube Dongle）&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;R820T+LPC4370（AIRSPY）&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;MSI001+MSI2500（SDRplay/RSP1）&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;MSI001+STM32H7 （俄罗斯 Malahit 孔雀石收音机）&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;ADL5350+ADF4350 rtl-sdr 2.4GHz变频方案&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;射频直采（RFSoC、KiwiSDR、RX888、RED PITAYA）&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;传统业余无线电射频（uSDX）&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;正文开始：&lt;/p&gt;&lt;p&gt;是的，你没看错，“剑法的最高境界，则是手中无剑”。随着数字芯片（FPGA、树莓派、单片机）的I/O速度越来越高，仅靠控制I/O基于PWM（脉宽调制）即可发送射频信号。类似原理，把高速I/O当做高速1bit ADC来用，亦可直接恢复射频信号。&lt;/p&gt;&lt;p&gt;比较早期的可以搜索2007年的这篇“An FPGA Based All-Digital Transmitter with Radio Frequency Output for SoftwareDefined Radio”，利用Xilinx Virtex2pro FPGA上的 MGT（multi-gigabit transceiver）高速引脚实现了800MHz载波，20MHz带宽的64QAM信号发射。临信道泄露比（ACLR）45dB，EVM优于1%。&lt;/p&gt;&lt;p&gt;现在FPGA速度比起2007年快了很多，可以搜索2017年的这篇“Real-time all-digital radio-over-fiber LTE transmission”，利用FPGA上的27.5Gbps的数字I/O配合PWM调制产生了3.44GHz载波上的5MHz LTE信号。&lt;/p&gt;&lt;p&gt;基于类似原理，FPGA的高速I/O口也可以看做是一个高速的1bit ADC，配合FPGA高速PWM输出和比较器，可以实现高速射频ADC。大家可以搜索2021年的这篇“All-digital FPGA receiver: on Intel Stratix 10 TX”。&lt;/p&gt;&lt;p&gt;以上都太高端了？不要怕，只需要很便宜的Lattice MachXO2 FPGA再配合三个电阻一个电容，你也可以在家直接用FPGA直连天线听收音机！大家搜索“&lt;span&gt;FPGA + 3 R + 1 C = MW and SW SDR Receiver&lt;/span&gt;”。这个收音机长这个样子：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.4859375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/nicL0OUIkE81xSNVcZOia9jPiaZx8GSevpTFFJZZKn5x1JWpffAbsMv3wyicvW8VO3MjInfPfS4bnCEib4flqSQVQRw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;基于类似原理，人们也开发了利用树莓派的I/O口来发射射频信号的程序。比如发射FM广播，自行搜索“&lt;span&gt;Turn Raspberry Pi into FM transmi&lt;/span&gt;&lt;span&gt;tter&lt;/span&gt;”。比如发射传真图像，自行搜索“Emitting Hellschreiber from a Raspberry Pi GPIO: combining gr-hellschreiber with gr-rpitx”。&lt;/p&gt;&lt;p&gt;Analog Devices，我们的老朋友了。AD9361、AD9371、ADRV高集成度射频收发器系列广泛用于各种高端仪器、软件无线电、商用无线通信产品中。支持6GHz以下连续覆盖，带宽可达几十M甚至上百M，各项射频性能优异，灵活可配置。&lt;/p&gt;&lt;p&gt;除了高端商用，在广大软件无线电DIY爱好者中也大受欢迎。毕竟，它一颗芯片把那么大一堆从天线到ADC/DAC所必须的所有处理环节全包括了，而且性能没的说。你只需要给他连接天线和基带，自己在家就能DIY一个性能如此强悍的SDR设备，这在以前是很难想象的。&lt;/p&gt;&lt;p&gt;我们的openwifi（开源WiFi芯片设计）目前也只能跑在FPGA + AD9361的平台上，不得不说这颗射频芯片大包大揽、性能优异且全面。&lt;/p&gt;&lt;p&gt;基于Analog Devices高集成度射频收发器的SDR产品不完全列表：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;USRP B系列&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;USRP E系列&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;USRP N3xx系列&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Analog Devices FMCOMMS系列射频板&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Analog Devices SoM模块 &lt;span&gt;ADRV9361-Z7035，&lt;/span&gt;&lt;span&gt;ADRV9364-Z7020&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;h3&gt;PlutoSDR&lt;/h3&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;BladeRF二代&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;EPIQ Sidekiq系列&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;国产 gridrf NH7020&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;国产 MicroPhase 微相 系列&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;国产 SDRPI&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;国产 Pluto plus&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;国产 Pluto Zynq7020增强版（LibreSDR）&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;国产 PYNQSDR PYNQ-Z1 + AD936X SDR &lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;国产 Neptune SDR （B站 薛定谔的猫power）&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;国产 类AD9361芯片&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;等等&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.66796875&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/nicL0OUIkE81xSNVcZOia9jPiaZx8GSevpTZgt1UoJumBmHp4iaViaJ5dPy5iaFQ8nOsZQoicHicd9iaJOszr4CgSYl8DTA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1024&quot;/&gt;&lt;/p&gt;&lt;p&gt;Lime microsystems是一家英国公司，LMS系列是对标Analog Devices的AD93xx系列芯片。许多人熟知的LimeSDR系列设备即是基于LMS7002M。BladeRF第一代是基于LMS6002D（第二代转投AD9361了）。&lt;/p&gt;&lt;p&gt;LMS系列射频芯片几乎是市场上可公开购买到的AD9361唯一竞品，所以它存在的意义巨大。AD9361系列只是庞大的Analog Devices产品线和营收中的一小部分，而LMS射频芯片就是Lime microsystems公司的全部身家。&lt;/p&gt;&lt;p&gt;根据Lime microsystems公司官网，未来的LMS8001+将会支持到12GHz和120MHz带宽，LMS9000将会支持到100GHz和&amp;gt;2GHz带宽。&lt;/p&gt;&lt;p&gt;期待Lime microsystems公司越来越好！&lt;/p&gt;&lt;p&gt;这是Microchip公司（就是出ATMEL单片机那家）的一款IoT芯片，支持sub 1GHz和2.4GHz的Zigbee标准，FSK、OFDM、O-QPSK。&lt;/p&gt;&lt;p&gt;它之所以出现在SDR射频方案里，是因为它在标准协议处理之外，也提供了ADC/DAC的IQ采样接口，因此也可以作为通用SDR射频芯片。支持射频带宽2.5MHz和采样率4MHz。&lt;/p&gt;&lt;p&gt;iotSDR采用了AT86RF215 + Zynq 7010的方案，可以看做是把PlutoSDR里的AD9363替换为了更低端的面向IoT的射频前端。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.5376984126984127&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/nicL0OUIkE81xSNVcZOia9jPiaZx8GSevpTdHCBZAF7qibsLDWPO6qicDdYLjnzWRVucHSibiaPxAsOmeteGmUuicJkejA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1008&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;span&gt;CaribouLite RPi HAT则是把AT86RF215做成了树莓派扩展板的思路，可以直接插在树莓派的IO插座上，构成完整系统。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/nicL0OUIkE81xSNVcZOia9jPiaZx8GSevpTib7S7LVEuGT83yICoNXgWa8EpyS1k3s1u8SywC0K685f3mwHWibBXaiaw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;h1/&gt;&lt;p&gt;这是HackRF的射频方案。它实际上是Maxim公司（已被Analog Devices收购）的WiFi射频方案前面加上一个Qorvo的混频器RFFC5072。它将6GHz范围内的目标频率变频到2.4GHz之后，由成熟的2.4GHz WiFi射频套片（MAX2837+MAX5864）接手。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.6300997280145059&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/nicL0OUIkE81xSNVcZOia9jPiaZx8GSevpTfnkBv4iabAfjPx9DPLAVxLmnDicGRSWpezickLaQTOgv8HWmOIkvoCtBw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1103&quot;/&gt;&lt;/p&gt;&lt;p&gt;大家也可以上Maxim Integrated公司网站搜索类似的WiFi射频套片方案。使我惊奇的是，这样的射频和ADC/DAC分开的WiFi套片方案，比起当今的许多WiFi芯片指标并不高（或者可以说弱），而且板子面积还大，但仍旧是持续生产的状态，可谓是十分良心了。但，主要客户群是谁呢？&lt;/p&gt;&lt;p&gt;rtl-sdr即大名鼎鼎的电视棒。频率覆盖到1.7GHz左右，采样率和带宽最大约3.2MHz。&lt;span&gt;电视棒由调谐器芯片（E4000或R820T，频率范围略有不同）和带有ADC、DVB-T解码器、USB的数字芯片RTL2832U构成（含8051单片机）。&lt;/span&gt;&lt;span&gt;调谐器芯片又叫&lt;/span&gt;tuner。用过古老电视机的都知道，就是你拧动一个旋钮，就把电视调谐到不同的频率上，调谐器tuner的名字由此而来。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.40941739824421386&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/nicL0OUIkE81xSNVcZOia9jPiaZx8GSevpTBgIUxqLFlaPrpSYsXfOqc0SPuTpPDjxzcVq13IJaFWhhTJGudY7OOg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1253&quot;/&gt;&lt;/p&gt;&lt;p&gt;对于软件无线电应用来说，数字芯片里的DVB-T解码器是多余的。这里3.2MHz的带宽/采样率主要受制于RTL2832U数字芯片，毕竟它不是为串流I/Q采样到主机这种SDR应用而设计，怀疑是因为固件上的USB性能有一定瓶颈或内部数字中频架构限制。调谐器tuner芯片R820T并不是带宽限制因素，因为通常一个电视频道为8MHz，为了看电视必须有接收8MHz带宽信号的能力。&lt;/p&gt;&lt;p&gt;由于电视棒极其低廉的价格，群众基础十分庞大，资料也非常多，这里不再用过多篇幅介绍。主要介绍下面几种基于电视棒方案/芯片的各种SDR衍生设备。&lt;/p&gt;&lt;p&gt;既然常规电视棒里的DVB-T解码器在软件无线电里并不需要，那么可不可以只用那颗调谐芯片配合更简单的数字芯片来打造一款专门的SDR dongle呢？&lt;/p&gt;&lt;p&gt;Funcube Dongle就是采用这种设计。它使用TI的一颗双声道音频codec充当零中频基带I/Q信号的ADC，然后用Microchip公司的PIC24F USB单片机连接到主机。受限于音频codec ADC采样率，它的最大射频带宽约80KHz。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.059415911379657606&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/nicL0OUIkE81xSNVcZOia9jPiaZx8GSevpT8DtqHYSJ00tatsgWO0diadhbvf6G1QFQ9PDaALMOHJyefVMMMXiaXoug/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;993&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.23203125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/nicL0OUIkE81xSNVcZOia9jPiaZx8GSevpT5jGV4MPVde3QyaOmkMHMMBakHBgcZWxLyQibTWmKYKcNdbGco8aVsyQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;可能由于E4000这个tuner芯片太老了，据说新版的FUNcube Dongle Pro+已经换用MSI001 tuner芯片。参见后面的“&lt;span&gt;MSI001+MSI2500&lt;/span&gt;”章节。&lt;/p&gt;&lt;p&gt;既然rtl-sdr电视棒的采样率/带宽主要受限于数字部分的&lt;span&gt;RTL2832U，而不是调谐器tuner E4000/R820T，那么将数字部分替换为专门的ADC和USB芯片不就完全解锁了tuner的能力？的确，AIRSPY这个SDR设备就是这么做的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.36384976525821594&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/nicL0OUIkE81xSNVcZOia9jPiaZx8GSevpThkDfecAe23F4Bzicrueicicv8bMmBPuRAaGs19kUHAUibfJQB58A1MdIJQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1278&quot;/&gt;&lt;/p&gt;&lt;p&gt;可以看到，它在tuner之后直接接了一个带有80Msps高速ADC的NXP的单片机LPC4370，因此它直接可以支持到大约10MHz带宽（这时就受限于tuner芯片了，单片机80Msps采样率已完全超出tuner芯片带宽范围）。&lt;span/&gt;&lt;/p&gt;&lt;p&gt;这是另一种电视棒套片。MSI001是tuner芯片，MSI2500是含ADC、USB等的数字芯片。神奇的是，这个MSI2500数字芯片并不包含电视解调解码器！（还记得rtl-sdr里的数字芯片&lt;span&gt;RTL2832U&lt;/span&gt;里是包含了我们并不需要的电视解码器么？）&lt;/p&gt;&lt;p&gt;在MSI的电视棒方案里，电视信号解调解码完全是在主机端用软件做的，也就是这个电视棒本身就是个纯SDR方案。这也意味着这套SDR方案可提供的带宽必然超过8MHz，因为要在主机端软解码电视信号，必然意味着需要将一个电视频道的8MHz带宽I/Q全部实时采集到主机供软解码程序使用。实际上它最大可提供大约10MHz的带宽能力，频率覆盖到约2GHz。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.56328125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/nicL0OUIkE81xSNVcZOia9jPiaZx8GSevpTWfjDxMxxw7VTHXS1Q5EicKWniavu6o3TnGy1OnLSPuZVTdsUlTW5I9hQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;上图中，USB2.0接口左侧就是MSI001+MSI2500构成的电视棒，右侧就是主机侧的电视信号解调解码软件部分。MSI001 tuner内部结构如下。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.50234375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/nicL0OUIkE81xSNVcZOia9jPiaZx8GSevpTYnTjN6AvU2uL47RxMpb65vHTcb37TPt3Fonrv7F8wIOtRy1piaYrAzg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;由于这个方案本身就是SDR的，不难想象用它来DIY SDR设备是多么方便，SDRplay/RSP1及其众多的变种（包括众多国产版）就是基于这个方案。&lt;/p&gt;&lt;p&gt;这家Mirics Semiconductor公司貌似有点神秘，如果你访问他们的网站Mirics，只会得到以下信息：We are sorry but we do not offer direct support to end users. Please address any queries you may have to the supplier of your hardware。&lt;/p&gt;&lt;p&gt;从有限的互联网信息来看，这又是一家英国公司，创始人曾经在LSI Corporation 和 Analog Devices 工作。&lt;/p&gt;&lt;p&gt;著名的来自俄罗斯的Malahit孔雀石收音机也是基于上述MSI方案，只不过把MSI2500 数字芯片替换为自带ADC的强劲的主频480MHz的STM32H7单片机，这样完全摆脱对主机的依赖，大屏幕加解调以及声音播放全在掌中完成。以下是国产版孔雀石收音机：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.643312101910828&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/nicL0OUIkE81xSNVcZOia9jPiaZx8GSevpTB2FibjicpGP5Qdt9qeXrZftnORN3Lxqibd4hY6nBB4kAcFes2JJ6trh1w/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;942&quot;/&gt;&lt;/p&gt;&lt;p&gt;各种电视棒方案价格真香，美中不足的是频率覆盖一般都在2GHz以下，那么如何才能玩起更高频段，例如2.4GHz ISM频段，且仍可利用电视棒呢？那就是各种变频方案了。也就是通过混频器将2.4GHz（或者更高频信号）变频到电视棒覆盖的频率范围内，之后交由电视棒。&lt;/p&gt;&lt;p&gt;自行搜索“A LOW COST 2.4 GHZ DOWNCONVERTER FROM OFF THE SHELF DEV BOARDS”，你可以找到这个基于现成Analog Devices评估板的ADL5350+ADF4350 变频方案。&lt;span&gt;ADL5350为混频器，&lt;span&gt;ADF4350为本振，此外还需要一个STM32单片机来对这两颗芯片进行控制，最终完成完整的2.4GHz到1GHz的下变频功能。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;1.1175965665236052&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/nicL0OUIkE81xSNVcZOia9jPiaZx8GSevpTuNkWcqfibQUqavCIZKCp9VMKUibhRrNHKh6WhTPo1NQ8PsYahBHpNX9w/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1165&quot;/&gt;&lt;/p&gt;&lt;p&gt;射频直采可以说是SDR的“圣杯”了。概念上，只要ADC/DAC采样率够高，可以直接接上天线收发空中的信号。对于地面和卫星通信中常用的几GHz甚至几十GHz的信号，射频直采需要非常高速的ADC/DAC，这属于是“禁运”级别的高科技了。请自行搜索Xilinx RFSoC开发板以及USRP X410设备。这些设备采用基于Xilinx RFSoC直采架构FPGA，可以覆盖到6~8GHz载波频率，并提供400MHz的带宽，壕无人性！据说Intel/Altera正在憋大招，会推出一下子能够直采毫米波的射频FPGA！&lt;/p&gt;&lt;p&gt;但对于中波、短波、调频广播以及业余无线电玩家常用的几十MHz频率的信号来说，用ADC直采已经是“飞入寻常百姓家”了。这其中知名设备有KiwiSDR，RX888，RED PITAYA。&lt;/p&gt;&lt;p&gt;KiwiSDR直接用了一个65Msps的LTC2248 14-bit ADC来采集30MHz以下的HF信号，并通过FPGA连接到BBB（BeagleBone）单板计算机上。主要用途还是窄带业余无线电。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.8183783783783783&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/nicL0OUIkE81xSNVcZOia9jPiaZx8GSevpTlFRmnuLG9eiaruxWaZ5CrmETGYxUc2fQAHW6iagNf41EIDZLrg2QMvGw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;925&quot;/&gt;&lt;/p&gt;&lt;p&gt;RX888 16BIT ADC SDR Receiver。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;1.0864&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/nicL0OUIkE81xSNVcZOia9jPiaZx8GSevpTRkkXIuX5hImtZnOcvDAv1IntDINdtNqXLDhJngF6DGAE8tQuvr6Wfw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;625&quot;/&gt;&lt;/p&gt;&lt;p&gt;看照片应该是出自国人之手。但据说原始设计是基于BBRF103。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.6443396226415095&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/nicL0OUIkE81xSNVcZOia9jPiaZx8GSevpTP2LoTzia5EH8nAesAJiasF3yfUgJYuQRdWPS98MlJnlbyHjicpCCyc3fQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1060&quot;/&gt;&lt;/p&gt;&lt;p&gt;在BBRF103的设计中，使用LTC2217 105Msps 16-bit A/D来直采30MHz以下信号，30MHz以上信号仍旧采用电视棒的R820T来下变频至30MHz以下，以供ADC采集。&lt;/p&gt;&lt;p&gt;RED PITAYA主要用途是测量仪器，但由于它提供了高速ADC串流采样到主机的功能，也被很多人用来直采较低频率的射频信号构成SDR接收机。&lt;/p&gt;&lt;p&gt;此外，某些不知出于何种目的的单片机竟然自带了80M采样率的ADC，理论上可直接收听FM广播以及频段更低的所有广播和业余无线电信号（前提是信号或者天线够强。。。）。对，NXP LPC4370说的就是你！相关单片机直接听广播的方法请大家自行搜索“LPC4370 SDR receiver”。当然它也很适合直接作为软件无线电的中频或者基带数字部分，比如前面提到的AIRSPY。&lt;/p&gt;&lt;p&gt;射频和纯模拟解调是业余无线电传统艺能。当有了计算机，爱好者就开始在超外差接收机中采用低中频12KHz，然后连接到电脑声卡玩SDR。现在有了性能强劲的带有ADC的单片机，电脑也就不需要了，因为调制解调、音频全都可以在单片机内搞定。&lt;/p&gt;&lt;p&gt;为了产生低中频，可以采用传统模拟混频器，也可以采用所谓开关式混频器（类似D类功放？），也叫Quadrature Samplimg detector。它直接将射频信号通过一个高速开关（类似于窄带欠采样的概念）变至低中频。下图中的FST3253高速开关就是用作下变频，然后低通滤波加放大后进入ADC。此即最近比较火的“&lt;span&gt;uSDX: micro Software Defined Transceiver&lt;/span&gt;”&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.613215149073328&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/nicL0OUIkE81xSNVcZOia9jPiaZx8GSevpTN7QyGtnpkhIMr44MW9F7hXviaaWOxYicicpuVvOxbnoWLjuszzian2jKFg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1241&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.75&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/nicL0OUIkE81xSNVcZOia9jPiaZx8GSevpTDc70OiajL7ibyjLEaEz4TMibzMDdSSpZODeNYsrrVp2UGRD7J2wDDdQOw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1008&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;以上基本总结了现在能看到所有SDR方案。有没有被我漏掉的？欢迎留言补充！&lt;/p&gt;&lt;p&gt;&lt;mp-style-type data-value=&quot;3&quot;/&gt;&lt;/p&gt;&lt;/div&gt;

          
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>0ee1cab2efdc6437bc8b36ccbeeac55e</guid>
<title>【Maven实战技巧】「Docker实战系列」本地进行生成镜像以及标签Tag推送到DockerHub_洛神灬殇的博客-CSDN博客</title>
<link>https://toutiao.io/k/66y059v</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div id=&quot;article_content&quot; class=&quot;article_content clearfix&quot;&gt;
        
        
                &lt;div id=&quot;content_views&quot; class=&quot;markdown_views prism-tomorrow-night&quot;&gt;
                    &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;
                        &lt;path stroke-linecap=&quot;round&quot; d=&quot;M5,0 0,2.5 5,5z&quot; id=&quot;raphael-marker-block&quot;/&gt;
                    &lt;/svg&gt;
                    &lt;h3&gt;&lt;a id=&quot;_0&quot;/&gt;背景介绍&lt;/h3&gt; 
&lt;p&gt;Docker镜像构建成功后，只要有docker环境就可以使用，但必须将镜像推送到Docker Hub上去。创建的镜像最好要符合Docker Hub的tag要求，因为在Docker Hub注册的用户名是liboware，最后利用docker push命令推送镜像到公共仓库。&lt;/p&gt; 
&lt;h3&gt;&lt;a id=&quot;_4&quot;/&gt;前提概要&lt;/h3&gt; 
&lt;p&gt;你需要在Docker hub注册用户：到官网注册账号：https://hub.docker.com/&lt;/p&gt; 
&lt;p&gt;例如：注册账号名称：liboware&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/img_convert/1d3bde2e1fe0ce47c9373640ac679353.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;a id=&quot;docker_12&quot;/&gt;在本地服务器登录docker：&lt;/h3&gt; 
&lt;p&gt;例如在CentOS7服务器&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;prism language-java&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;root&lt;span class=&quot;token annotation punctuation&quot;&gt;@localhost&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;#  docker login
&lt;span class=&quot;token class-name&quot;&gt;Login&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;your&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Docker&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;ID&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;push&lt;/span&gt; and pull images from &lt;span class=&quot;token class-name&quot;&gt;Docker&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Hub&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt; If&lt;/span&gt; you don&#x27;t have a &lt;span class=&quot;token class-name&quot;&gt;Docker&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;ID&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; head over &lt;span class=&quot;token keyword&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;hub&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;docker&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;com &lt;span class=&quot;token keyword&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token namespace&quot;&gt;one&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;
Username&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; liboware   ##输入账号
&lt;span class=&quot;token class-name&quot;&gt;Password&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;          ##输入密码
&lt;span class=&quot;token constant&quot;&gt;WARNING&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Your&lt;/span&gt; password will be stored unencrypted in &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;root&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;docker&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token namespace&quot;&gt;config&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;json&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;
Configure&lt;/span&gt; a credential helper &lt;span class=&quot;token keyword&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;remove&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token namespace&quot;&gt;warning&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt; See&lt;/span&gt;
https&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;docs&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;docker&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;com&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;engine&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;reference&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;commandline&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;login&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;#credentials&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;store
&lt;span class=&quot;token class-name&quot;&gt;Login&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Succeeded&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;a id=&quot;_27&quot;/&gt;查看镜像&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;[root@localhost ~]# docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
nacos               v1         9e5f6711d527        3 days ago          178MB
mysql               v1                  9e5f6711d527        3 days ago          178MB
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;a id=&quot;docker_tag_36&quot;/&gt;docker tag建立镜像&lt;/h4&gt; 
&lt;pre&gt;&lt;code&gt;[root@localhost ~]# docker tag nacos:v1 liboware/nacos:v1
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;a id=&quot;docker_images__42&quot;/&gt;docker images 查看镜像&lt;/h4&gt; 
&lt;pre&gt;&lt;code&gt;[root@localhost ~]# docker images 
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
nacos               v1         9e5f6711d527        3 days ago          178MB
nginx               v1                  9e5f6711d527        3 days ago          178MB
liboware/mysql     v1                  9e5f6711d527        3 days ago          178MB
[root@localhost ~]# 
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;a id=&quot;docker_hub_53&quot;/&gt;docker hub推送镜像&lt;/h4&gt; 
&lt;p&gt;docker push 注册docker用户名/REPOSITORY:TAG&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;[root@localhost ~]# docker push liboware/nacos:v1
The push refers to repository [docker.io/llxxyy/nginx-io]
833a0f6a6ff9: Pushed 
10bfe402500e: Pushed 
d43641d7d594: Mounted from library/nginx 
c2adabaecedb: Mounted from library/nginx 
v1: digest: sha256:67dcdae5578c0374019cc899731543cfd7c48fe5780e84233a258f2bf7d2ceda size: 1155
[root@localhost ~]# 
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;注：推送Docker Hub速度很慢，耐心等待，很有可能失败，失败会尝试多次重传，之后断开推送（但已推送上去的会保留，保留时间不知道是多久）。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;&lt;a id=&quot;hub_docker_70&quot;/&gt;hub docker效果&lt;/h4&gt; 
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/img_convert/04705da051ea771f9fb1570be99925df.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;a id=&quot;Docker__74&quot;/&gt;Docker 使用发布的镜像&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;docker@default:~$ docker search liboware/nacos
NAME                               DESCRIPTION                                     STARS     OFFICIAL   AUTOMATED  
liboware/nacos   In this  image server you can use ma...   0 
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;在pull下来&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;[root@localhost ~]# docker pull liboware/nacos:v1
v1: Pulling from liboware/nacos
Digest: sha256:67dcdae5578c0374019cc899731543cfd7c48fe5780e84233a258f2bf7d2ceda
Status: Downloaded newer image for liboware/nacos:v1
docker.io/liboware/nacos:v2
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;a id=&quot;pull_92&quot;/&gt;确认pull成功&lt;/h4&gt; 
&lt;pre&gt;&lt;code&gt;[root@localhost ~]# docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
nginx               stable-perl         9e5f6711d527        3 days ago          178MB
nginx               v1                  9e5f6711d527        3 days ago          178MB
libo/nacos     v1                  9e5f6711d527        3 days ago          178MB
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;a id=&quot;_101&quot;/&gt;遇到的问题&lt;/h4&gt; 
&lt;ol&gt;&lt;li&gt; &lt;p&gt;执行：docker push nacos:v1【提示denied: requested access to the resource is denied】&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;我们可以列出所有镜像：docker images&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;建立tag将要发布的镜像改到自己账户名下，我的账户名：liboware&lt;/p&gt; &lt;/li&gt;&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;docker tag nacos:v2  liboware/nacos:v2
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;4&quot;&gt;&lt;li&gt;再次推送：docker push liboware/nacos:v2【成功】&lt;/li&gt;&lt;/ol&gt;
                &lt;/div&gt;
                
                
        &lt;/div&gt;
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>