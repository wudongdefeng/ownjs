<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>9044637ed4e70d8cd7c54d40f42e8878</guid>
<title>万字长文，SpringSecurity实现权限系统设计</title>
<link>https://toutiao.io/k/rb5lzmf</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                           autoTypeSetting24psection&amp;#10;                          &quot; id=&quot;js_content&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;（给&lt;/span&gt;&lt;span&gt;ImportNew&lt;/span&gt;&lt;span&gt;加星标，提高Java技能）&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3989071038251366&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/ibQcycQwt0ecaRaakVIOBWIpnAzxHoFNcuPvyiaPesTIib1wSToEm2ZicYYKalqethnicgibT4akjyCMBaGJsPHdibW1g/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;732&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;RBAC权限分析&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;RBAC 全称为基于角色的权限控制，本段将会从什么是RBAC，模型分类，什么是权限，用户组的使用，实例分析等几个方面阐述RBAC&lt;/span&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;思维导图&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;绘制思维导图如下&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5448613376835236&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/ibQcycQwt0ecaRaakVIOBWIpnAzxHoFNcL20VCkYTW3ZYAqygicESPaicmv0uMNcLglJicCKWI0Tia76X30oQD89ibRg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;613&quot;/&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;什么是RBAC&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;RBAC 全称为用户角色权限控制，通过角色关联用户，角色关联权限，这种方式，间阶的赋予用户的权限，如下图所示&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.1448087431693989&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/ibQcycQwt0ecaRaakVIOBWIpnAzxHoFNc0BZkibvvD3kgNIDlNA8cwAvWniaLU3byD6pv4fpldVMclLj2gc6nCXHg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;732&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;对于通常的系统而言，存在多个用户具有相同的权限，在分配的时候，要为指定的用户分配相关的权限，修改的时候也要依次的对这几个用户的权限进行修改，有了角色这个权限，在修改权限的时候，只需要对角色进行修改，就可以实现相关的权限的修改。这样做增加了效率，减少了权限漏洞的发生。&lt;/span&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;模型分类&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;对于RBAC模型来说，分为以下几个模型 分别是RBAC0，RBAC1，RBAC2，RBAC3，这四个&lt;/span&gt;模型，这段将会依次介绍这四个模型，其中最常用的模型有RBAC0.&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;RBAC0&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;RBAC0是最简单的RBAC模型，这里面包含了两种。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;用户和角色是多对一的关系，即一个用户只充当一种角色，一个角色可以有多个角色的担当。用户和角色是多对多的关系，即，一个用户可以同时充当多个角色，一个角色可以有多个用户。 &lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;此系统功能单一，人员较少，这里举个栗子，张三既是行政，也负责财务，此时张三就有俩个权限，分别是行政权限，和财务权限两个部分。&lt;/span&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;RBAC1&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;相对于RBAC0模型来说，增加了子角色，引入了继承的概念。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.21584699453551912&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/ibQcycQwt0ecaRaakVIOBWIpnAzxHoFNcXiccUd8e99a9dpBj2MBCAYAn5icia1CATwXYufXvaJ6RHlstTpCzjQ2Tg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;732&quot;/&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;RBAC2 模型&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;这里RBAC2模型，在RBAC0模型的基础上，增加了一些功能，以及限制&lt;/span&gt;&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;角色互斥&lt;/span&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;即，同一个用户不能拥有两个互斥的角色，举个例子，在财务系统中，一个用户不能拥有会计员和审计这两种角色。&lt;/span&gt;&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;基数约束&lt;/span&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;即，用一个角色，所拥有的成员是固定的，例如对于CEO这种角色，同一个角色，也只能有一个用户。&lt;/span&gt;&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;先决条件&lt;/span&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;即，对于该角色来说，如果想要获得更高的角色，需要先获取低一级别的角色。举个栗子，对于副总经理和经理这两个权限来说，需要先有副总经理权限，才能拥有经理权限，其中副总经理权限是经理权限的先决条件。&lt;/span&gt;&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;运行时互斥&lt;/span&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;即，一个用户可以拥有两个角色，但是这俩个角色不能同时使用，需要切换角色才能进入另外一个角色。举个栗子，对于总经理和专员这两个角色，系统只能在一段时间，拥有其一个角色，不能同时对这两种角色进行操作。&lt;/span&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;RBAC3模型&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;即，RBAC1，RBAC2，两者模型全部累计，称为统一模型。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5748502994011976&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/ibQcycQwt0ecaRaakVIOBWIpnAzxHoFNcZKkUicMNRHUlVhyVIFAJ1NSfiavu16AiaSPxksLL1IrkYRWNMqsGBZHOQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;501&quot;/&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;什么是权限&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;权限是资源的集合，这里的资源指的是软件中的所有的内容，即，对页面的操作权限，对页面的访问权限，对数据的增删查改的权限。举个栗子。对于下图中的系统而言，&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3551912568306011&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/ibQcycQwt0ecaRaakVIOBWIpnAzxHoFNcj7eScIqF6GMdN5jeIdAL4oicIwvNhiaRnVsNxQ2FjCrGudYbiaskfgdzQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;732&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;拥有，计划管理，客户管理，合同管理，出入库通知单管理，粮食安全追溯，粮食统计查询，设备管理这几个页面，对这几个页面的访问，以及是否能够访问到菜单，都属于权限。&lt;/span&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;用户组的使用&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;对于用户组来说，是把众多的用户划分为一组，进行批量授予角色，即，批量授予权限。举个栗子，对于部门来说，一个部门拥有一万多个员工，这些员工都拥有相同的角色，如果没有用户组，可能需要一个个的授予相关的角色，在拥有了用户组以后，只需要，把这些用户全部划分为一组，然后对该组设置授予角色，就等同于对这些用户授予角色。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;优点：减少工作量，便于理解，增加多级管理，等。&lt;span&gt;最新面试题整理好了，点击Java面试库小程序在线刷题。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;SpringSecurity 简单使用&lt;/span&gt;&lt;br/&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;首先添加依赖&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;Spring Boot 基础就不介绍了，推荐下这个实战教程：https://github.com/javastacks/spring-boot-best-practice&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span&gt;&amp;lt;/&lt;span&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;spring-boot-starter-security&lt;span&gt;&amp;lt;/&lt;span&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;然后添加相关的访问接口&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;package&lt;/span&gt; com.example.demo.web;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; org.springframework.web.bind.&lt;span&gt;annotation&lt;/span&gt;.RequestMapping;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; org.springframework.web.bind.&lt;span&gt;annotation&lt;/span&gt;.RestController;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;@RestController&lt;/span&gt;&lt;br/&gt;&lt;span&gt;@RequestMapping(&lt;span&gt;&quot;/test&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;Test&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;@RequestMapping(&lt;span&gt;&quot;/test&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;public&lt;/span&gt; String test(){&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;&quot;test&quot;&lt;/span&gt;;&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;最后启动项目，在日志中查看相关的密码&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.1871584699453552&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/ibQcycQwt0ecaRaakVIOBWIpnAzxHoFNcJfkAB2zSofXhjO2R0ENfpV8R1FU5ca4oXgK7hPcjoCic6QQZOZ4JJibw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;732&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;访问接口，可以看到相关的登录界面&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.36885245901639346&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/ibQcycQwt0ecaRaakVIOBWIpnAzxHoFNco4N8dNn6ndZjYCVvTrm8MeH32X18B98JFs34I81bzURSrJfOxbiaZDA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;732&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;输入用户名和相关的密码&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;用户名：user&lt;br/&gt;密码 984cccf2-ba82-468e-a404-7d32123d0f9c&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.34972677595628415&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/ibQcycQwt0ecaRaakVIOBWIpnAzxHoFNc5egEMb03cSFKrFicARnx3ib5Bkaib6gMwkpTmYiawqfevVBDXdEPlZ0IPA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;732&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;登录成功&lt;/span&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;增加用户名和密码&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;在配置文件中，书写相关的登录和密码&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;spring:&lt;br/&gt;  security:&lt;br/&gt;    user:&lt;br/&gt;      name: ming&lt;br/&gt;      password: 123456&lt;br/&gt;      roles: admin&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;在登录页面，输入用户名和密码，即可正常登录。另外，Spring 系列面试题和答案全部整理好了，微信搜索Java技术栈，在后台发送：面试，可以在线阅读。&lt;/span&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;基于内存的认证&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;需要自定义类继承 WebSecurityConfigurerAdapter 代码如下&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;package&lt;/span&gt; com.example.demo.config;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; org.springframework.context.annotation.&lt;span&gt;Bean&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; org.springframework.context.annotation.&lt;span&gt;Configuration&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; org.springframework.security.config.annotation.authentication.builders.&lt;span&gt;AuthenticationManagerBuilder&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; org.springframework.security.config.annotation.web.configuration.&lt;span&gt;WebSecurityConfigurerAdapter&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; org.springframework.security.crypto.password.&lt;span&gt;NoOpPasswordEncoder&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; org.springframework.security.crypto.password.&lt;span&gt;PasswordEncoder&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;@Configuration&lt;/span&gt;&lt;br/&gt;public &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;MyWebSecurityConfig&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;WebSecurityConfigurerAdapter&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;@Bean&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;PasswordEncoder&lt;/span&gt; passwordEncoder(){&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;NoOpPasswordEncoder&lt;/span&gt;.getInstance();&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;protected&lt;/span&gt; void configure(&lt;span&gt;AuthenticationManagerBuilder&lt;/span&gt; auth) &lt;span&gt;throws&lt;/span&gt; &lt;span&gt;Exception&lt;/span&gt; {&lt;br/&gt;        auth.inMemoryAuthentication()&lt;br/&gt;                .withUser(&lt;span&gt;&quot;admin&quot;&lt;/span&gt;).password(&lt;span&gt;&quot;123&quot;&lt;/span&gt;).roles(&lt;span&gt;&quot;admin&quot;&lt;/span&gt;);&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;即，配置的用户名为admin，密码为123，角色为admin&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;HttpSecurity&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;这里对一些方法进行拦截&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;package com.ming.demo.interceptor;&lt;br/&gt;&lt;br/&gt;import org.springframework.beans.factory.annotation.Autowired;&lt;br/&gt;import org.springframework.context.annotation.Bean;&lt;br/&gt;import org.springframework.context.annotation.Configuration;&lt;br/&gt;import org.springframework.http.HttpMethod;&lt;br/&gt;import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;&lt;br/&gt;import org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity;&lt;br/&gt;import org.springframework.security.config.annotation.web.builders.HttpSecurity;&lt;br/&gt;import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;&lt;br/&gt;import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;&lt;br/&gt;import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;&lt;br/&gt;import org.springframework.security.crypto.password.PasswordEncoder;&lt;br/&gt;import org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices;&lt;br/&gt;&lt;br/&gt;@Configuration&lt;br/&gt;@EnableWebSecurity&lt;br/&gt;public class SecurityConfig  extends WebSecurityConfigurerAdapter {&lt;br/&gt;    //基于内存的用户存储&lt;br/&gt;    @Override&lt;br/&gt;    public void configure(AuthenticationManagerBuilder auth) throws Exception {&lt;br/&gt;        auth.inMemoryAuthentication()&lt;br/&gt;                .withUser(&quot;itguang&quot;).password(&quot;123456&quot;).roles(&quot;USER&quot;).and()&lt;br/&gt;                .withUser(&quot;admin&quot;).password(&quot;{noop}&quot; + &quot;123456&quot;).roles(&quot;ADMIN&quot;);&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    //请求拦截&lt;br/&gt;    @Override&lt;br/&gt;    protected void configure(HttpSecurity http) throws Exception {&lt;br/&gt;        http.authorizeRequests()&lt;br/&gt;                .anyRequest().permitAll()&lt;br/&gt;                .and()&lt;br/&gt;                .formLogin()&lt;br/&gt;                .permitAll()&lt;br/&gt;                .and()&lt;br/&gt;                .logout()&lt;br/&gt;                .permitAll();&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;即，这里完成了对所有的方法访问的拦截。&lt;/span&gt;&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;SpringSecurity 集成JWT&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;这是一个小demo，目的，登录以后返回jwt生成的token&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;推荐一个 Spring Boot 基础教程及实战示例：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://github.com/javastacks/spring-boot-best-practice&lt;/span&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;导入依赖&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;添加web依赖&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6612021857923497&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/ibQcycQwt0ecaRaakVIOBWIpnAzxHoFNcOBDuAoTzunRgqeRZdbpu4iaeSYc12rWcO8Rd53AlLM2IvvltsTTZjsw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;732&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;导入JWT和Security依赖&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt; &lt;span&gt;&amp;lt;!-- https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt --&amp;gt;&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;&amp;lt;&lt;span&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;&amp;lt;&lt;span&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;io.jsonwebtoken&lt;span&gt;&amp;lt;/&lt;span&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;&amp;lt;&lt;span&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;jjwt&lt;span&gt;&amp;lt;/&lt;span&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;&amp;lt;&lt;span&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;0.9.1&lt;span&gt;&amp;lt;/&lt;span&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;&amp;lt;/&lt;span&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;&amp;lt;!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-security --&amp;gt;&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;&amp;lt;&lt;span&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;&amp;lt;&lt;span&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span&gt;&amp;lt;/&lt;span&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;&amp;lt;&lt;span&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;spring-boot-starter-security&lt;span&gt;&amp;lt;/&lt;span&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;&amp;lt;&lt;span&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;2.3.1.RELEASE&lt;span&gt;&amp;lt;/&lt;span&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;&amp;lt;/&lt;span&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;创建一个JwtUser实现UserDetails&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;创建 一个相关的JavaBean&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;package com.example.demo;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; org.springframework.security.core.GrantedAuthority;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; org.springframework.security.core.userdetails.UserDetails;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; java.util.Collection;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; JwtUser &lt;span&gt;implements&lt;/span&gt; UserDetails {&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;String&lt;/span&gt; username;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;String&lt;/span&gt; password;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; Integer state;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; Collection&amp;lt;? &lt;span&gt;extends&lt;/span&gt; GrantedAuthority&amp;gt; authorities;&lt;br/&gt;    &lt;span&gt;public&lt;/span&gt; JwtUser(){&lt;br/&gt;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;public&lt;/span&gt; JwtUser(&lt;span&gt;String&lt;/span&gt; username, &lt;span&gt;String&lt;/span&gt; password, Integer state,  Collection&amp;lt;? &lt;span&gt;extends&lt;/span&gt; GrantedAuthority&amp;gt; authorities){&lt;br/&gt;        &lt;span&gt;this&lt;/span&gt;.username = username;&lt;br/&gt;        &lt;span&gt;this&lt;/span&gt;.password = password;&lt;br/&gt;        &lt;span&gt;this&lt;/span&gt;.state = state;&lt;br/&gt;        &lt;span&gt;this&lt;/span&gt;.authorities = authorities;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;public&lt;/span&gt; Collection&amp;lt;? &lt;span&gt;extends&lt;/span&gt; GrantedAuthority&amp;gt; getAuthorities() {&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; authorities;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;String&lt;/span&gt; getPassword() {&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;.password;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;String&lt;/span&gt; getUsername() {&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;.username;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt; isAccountNonExpired() {&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt; isAccountNonLocked() {&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt; isCredentialsNonExpired() {&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt; isEnabled() {&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;;&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;编写工具类生成令牌&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;编写工具类，用来生成token，以及刷新token，以及验证token&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;package com.example.demo;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; io.jsonwebtoken.Claims;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; io.jsonwebtoken.Jwts;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; io.jsonwebtoken.SignatureAlgorithm;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; org.springframework.security.core.userdetails.UserDetails;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; java.io.Serializable;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; java.util.Date;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; java.util.HashMap;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; java.util.Map;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; JwtTokenUtil &lt;span&gt;implements&lt;/span&gt; Serializable {&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;String&lt;/span&gt; secret;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; Long expiration;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;String&lt;/span&gt; header;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;String&lt;/span&gt; generateToken(Map&amp;lt;&lt;span&gt;String&lt;/span&gt;, &lt;span&gt;Object&lt;/span&gt;&amp;gt; claims) {&lt;br/&gt;        &lt;span&gt;Date&lt;/span&gt; expirationDate = &lt;span&gt;new&lt;/span&gt; &lt;span&gt;Date&lt;/span&gt;(System.currentTimeMillis() + expiration);&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; Jwts.builder().setClaims(claims).setExpiration(expirationDate).signWith(SignatureAlgorithm.HS512, secret).compact();&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; Claims getClaimsFromToken(&lt;span&gt;String&lt;/span&gt; token) {&lt;br/&gt;        Claims claims;&lt;br/&gt;        &lt;span&gt;try&lt;/span&gt; {&lt;br/&gt;            claims = Jwts.parser().setSigningKey(secret).parseClaimsJws(token).getBody();&lt;br/&gt;&lt;br/&gt;        } &lt;span&gt;catch&lt;/span&gt; (Exception e) {&lt;br/&gt;            claims = &lt;span&gt;null&lt;/span&gt;;&lt;br/&gt;        }&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; claims;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;String&lt;/span&gt; generateToken(UserDetails userDetails) {&lt;br/&gt;        Map&amp;lt;&lt;span&gt;String&lt;/span&gt;, &lt;span&gt;Object&lt;/span&gt;&amp;gt; claims = &lt;span&gt;new&lt;/span&gt; HashMap&amp;lt;&amp;gt;(&lt;span&gt;2&lt;/span&gt;);&lt;br/&gt;        claims.put(&lt;span&gt;&quot;sub&quot;&lt;/span&gt;, userDetails.getUsername());&lt;br/&gt;        claims.put(&lt;span&gt;&quot;created&quot;&lt;/span&gt;, &lt;span&gt;new&lt;/span&gt; &lt;span&gt;Date&lt;/span&gt;());&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; generateToken(claims);&lt;br/&gt;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;String&lt;/span&gt; getUsernameFromToken(&lt;span&gt;String&lt;/span&gt; token) {&lt;br/&gt;        &lt;span&gt;String&lt;/span&gt; username;&lt;br/&gt;        &lt;span&gt;try&lt;/span&gt; {&lt;br/&gt;            Claims claims = getClaimsFromToken(token);&lt;br/&gt;            username = claims.getSubject();&lt;br/&gt;&lt;br/&gt;        } &lt;span&gt;catch&lt;/span&gt; (Exception e) {&lt;br/&gt;            username = &lt;span&gt;null&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;        }&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; username;&lt;br/&gt;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;Boolean&lt;/span&gt; isTokenExpired(&lt;span&gt;String&lt;/span&gt; token) {&lt;br/&gt;        &lt;span&gt;try&lt;/span&gt; {&lt;br/&gt;            Claims claims = getClaimsFromToken(token);&lt;br/&gt;            &lt;span&gt;Date&lt;/span&gt; expiration = claims.getExpiration();&lt;br/&gt;            &lt;span&gt;return&lt;/span&gt; expiration.before(&lt;span&gt;new&lt;/span&gt; &lt;span&gt;Date&lt;/span&gt;());&lt;br/&gt;        } &lt;span&gt;catch&lt;/span&gt; (Exception e) {&lt;br/&gt;            &lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;;&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;String&lt;/span&gt; refreshToken(&lt;span&gt;String&lt;/span&gt; token) {&lt;br/&gt;        &lt;span&gt;String&lt;/span&gt; refreshedToken;&lt;br/&gt;        &lt;span&gt;try&lt;/span&gt; {&lt;br/&gt;            Claims claims = getClaimsFromToken(token);&lt;br/&gt;            claims.put(&lt;span&gt;&quot;created&quot;&lt;/span&gt;, &lt;span&gt;new&lt;/span&gt; &lt;span&gt;Date&lt;/span&gt;());&lt;br/&gt;            refreshedToken = generateToken(claims);&lt;br/&gt;&lt;br/&gt;        } &lt;span&gt;catch&lt;/span&gt; (Exception e) {&lt;br/&gt;            refreshedToken = &lt;span&gt;null&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;        }&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; refreshedToken;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;Boolean&lt;/span&gt; validateToken(&lt;span&gt;String&lt;/span&gt; token, UserDetails userDetails) {&lt;br/&gt;        JwtUser user = (JwtUser) userDetails;&lt;br/&gt;        &lt;span&gt;String&lt;/span&gt; username = getUsernameFromToken(token);&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; (username.equals(user.getUsername()) &amp;amp;&amp;amp; !isTokenExpired(token));&lt;br/&gt;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;编写拦截器&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;编写Filter 用来检测JWT&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;最新面试题整理好了，点击Java面试库小程序在线刷题。&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;package com.example.demo;&lt;br/&gt;&lt;br/&gt;import org.apache.commons.lang.StringUtils;&lt;br/&gt;import org.springframework.beans.factory.annotation.Autowired;&lt;br/&gt;import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;&lt;br/&gt;import org.springframework.security.core.context.SecurityContextHolder;&lt;br/&gt;import org.springframework.security.core.userdetails.UserDetails;&lt;br/&gt;import org.springframework.security.core.userdetails.UserDetailsService;&lt;br/&gt;import org.springframework.security.web.authentication.WebAuthenticationDetailsSource;&lt;br/&gt;import org.springframework.stereotype.Component;&lt;br/&gt;import org.springframework.web.filter.OncePerRequestFilter;&lt;br/&gt;&lt;br/&gt;import javax.servlet.FilterChain;&lt;br/&gt;import javax.servlet.ServletException;&lt;br/&gt;import javax.servlet.http.HttpServletRequest;&lt;br/&gt;import javax.servlet.http.HttpServletResponse;&lt;br/&gt;import java.io.IOException;&lt;br/&gt;&lt;br/&gt;@Component&lt;br/&gt;public class JwtAuthenticationTokenFilter  extends OncePerRequestFilter {&lt;br/&gt;    @Autowired&lt;br/&gt;    private UserDetailsService userDetailsService;&lt;br/&gt;    @Autowired&lt;br/&gt;    private JwtTokenUtil jwtTokenUtil;&lt;br/&gt;&lt;br/&gt;    @Override&lt;br/&gt;    protected void doFilterInternal(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, FilterChain filterChain) throws ServletException, IOException {&lt;br/&gt;        String authHeader = httpServletRequest.getHeader(jwtTokenUtil.getHeader());&lt;br/&gt;        if (authHeader != null &amp;amp;&amp;amp; StringUtils.isNotEmpty(authHeader)) {&lt;br/&gt;            String username = jwtTokenUtil.getUsernameFromToken(authHeader);&lt;br/&gt;            if (username != null &amp;amp;&amp;amp; SecurityContextHolder.getContext().getAuthentication() == null) {&lt;br/&gt;                UserDetails userDetails = this.userDetailsService.loadUserByUsername(username);&lt;br/&gt;                if (jwtTokenUtil.validateToken(authHeader, userDetails)) {&lt;br/&gt;                    UsernamePasswordAuthenticationToken authentication  =&lt;br/&gt;                    new UsernamePasswordAuthenticationToken(userDetails,null,userDetails.getAuthorities());&lt;br/&gt;                    authentication.setDetails(new WebAuthenticationDetailsSource().buildDetails(httpServletRequest));&lt;br/&gt;                    SecurityContextHolder.getContext().setAuthentication(authentication);&lt;br/&gt;&lt;br/&gt;                }&lt;br/&gt;            }&lt;br/&gt;        }&lt;br/&gt;        filterChain.doFilter(httpServletRequest, httpServletResponse);&lt;br/&gt;&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;编写userDetailsService的实现类&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;在上方代码中，编写userDetailsService，类，实现其验证过程&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;package com.example.demo;&lt;br/&gt;&lt;br/&gt;import org.springframework.beans.factory.annotation.Autowired;&lt;br/&gt;import org.springframework.security.core.authority.SimpleGrantedAuthority;&lt;br/&gt;import org.springframework.security.core.userdetails.User;&lt;br/&gt;import org.springframework.security.core.userdetails.UserDetails;&lt;br/&gt;import org.springframework.security.core.userdetails.UserDetailsService;&lt;br/&gt;import org.springframework.security.core.userdetails.UsernameNotFoundException;&lt;br/&gt;import org.springframework.stereotype.Service;&lt;br/&gt;&lt;br/&gt;import javax.management.relation.Role;&lt;br/&gt;import java.util.List;&lt;br/&gt;&lt;br/&gt;@Service&lt;br/&gt;public class JwtUserDetailsServiceImpl  implements UserDetailsService {&lt;br/&gt;    @Autowired&lt;br/&gt;    private UserMapper userMapper;&lt;br/&gt;&lt;br/&gt;    @Override&lt;br/&gt;    public UserDetails loadUserByUsername(String s) throws UsernameNotFoundException {&lt;br/&gt;        User user = userMapper.selectByUserName(s);&lt;br/&gt;        if (user == null) {&lt;br/&gt;            throw new UsernameNotFoundException(String.format(&quot;&#x27;%s&#x27;.这个用户不存在&quot;, s));&lt;br/&gt;&lt;br/&gt;        }&lt;br/&gt;        List&amp;lt;SimpleGrantedAuthority&amp;gt; collect = user.getRoles().stream().map(Role::getRolename).map(SimpleGrantedAuthority::new).collect(Collectors.toList());&lt;br/&gt;        return new JwtUser(user.getUsername(), user.getPassword(), user.getState(), collect);&lt;br/&gt;&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;编写登录&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;编写登录业务的实现类 其login方法会返回一个JWTUtils 的token&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Spring Boot 基础就不介绍了，推荐下这个实战教程：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://github.com/javastacks/spring-boot-best-practice&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;@Service&lt;/span&gt;&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;UserServiceImpl&lt;/span&gt;  &lt;span&gt;implements&lt;/span&gt; &lt;span&gt;UserService&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;@Autowired&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; UserMapper userMapper;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Autowired&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; AuthenticationManager authenticationManager;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Autowired&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; UserDetailsService userDetailsService;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Autowired&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; JwtTokenUtil jwtTokenUtil;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; User &lt;span&gt;findByUsername&lt;/span&gt;&lt;span&gt;(String username)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        User user = userMapper.selectByUserName(username);&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; user;&lt;br/&gt;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; RetResult &lt;span&gt;login&lt;/span&gt;&lt;span&gt;(String username, String password)&lt;/span&gt; &lt;span&gt;throws&lt;/span&gt; AuthenticationException &lt;/span&gt;{&lt;br/&gt;        UsernamePasswordAuthenticationToken upToken = &lt;span&gt;new&lt;/span&gt; UsernamePasswordAuthenticationToken(username, password);&lt;br/&gt;        &lt;span&gt;final&lt;/span&gt; Authentication authentication = authenticationManager.authenticate(upToken);&lt;br/&gt;        SecurityContextHolder.getContext().setAuthentication(authentication);&lt;br/&gt;        UserDetails userDetails = userDetailsService.loadUserByUsername(username);&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; RetResult(RetCode.SUCCESS.getCode(),jwtTokenUtil.generateToken(userDetails));&lt;br/&gt;&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;最后配置Config&lt;/span&gt;&lt;/h2&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;@EnableGlobalMethodSecurity(prePostEnabled = true)&lt;br/&gt;@EnableWebSecurity&lt;br/&gt;public class WebSecurity extends WebSecurityConfigurerAdapter {&lt;br/&gt;    @Autowired&lt;br/&gt;    private UserDetailsService userDetailsService;&lt;br/&gt;    @Autowired&lt;br/&gt;    private JwtAuthenticationTokenFilter jwtAuthenticationTokenFilter;&lt;br/&gt;&lt;br/&gt;    @Autowired&lt;br/&gt;    public void configureAuthentication(AuthenticationManagerBuilder authenticationManagerBuilder) throws Exception {&lt;br/&gt;        authenticationManagerBuilder.userDetailsService(this.userDetailsService).passwordEncoder(passwordEncoder());&lt;br/&gt;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    @Bean(name = BeanIds.AUTHENTICATION_MANAGER)&lt;br/&gt;&lt;br/&gt;    @Override&lt;br/&gt;    public AuthenticationManager authenticationManagerBean() throws Exception {&lt;br/&gt;        return super.authenticationManagerBean();&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    @Bean&lt;br/&gt;    public PasswordEncoder passwordEncoder() {&lt;br/&gt;        return new BCryptPasswordEncoder();&lt;br/&gt;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    @Override&lt;br/&gt;    protected void configure(HttpSecurity http) throws Exception {&lt;br/&gt;        http.csrf().disable().sessionManagement().sessionCreationPolicy(SessionCreationPolicy.STATELESS)&lt;br/&gt;                .and().authorizeRequests()&lt;br/&gt;                .antMatchers(HttpMethod.OPTIONS, &quot;/**&quot;).permitAll()&lt;br/&gt;                .antMatchers(&quot;/auth/**&quot;).permitAll()&lt;br/&gt;                .anyRequest().authenticated()&lt;br/&gt;                .and().headers().cacheControl();&lt;br/&gt;&lt;br/&gt;        http.addFilterBefore(jwtAuthenticationTokenFilter, UsernamePasswordAuthenticationFilter.class);&lt;br/&gt;&lt;br/&gt;        ExpressionUrlAuthorizationConfigurer&amp;lt;HttpSecurity&amp;gt;.ExpressionInterceptUrlRegistry registry = http.authorizeRequests();&lt;br/&gt;&lt;br/&gt;        registry.requestMatchers(CorsUtils::isPreFlightRequest).permitAll();&lt;br/&gt;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    @Bean&lt;br/&gt;    public CorsFilter corsFilter() {&lt;br/&gt;        final UrlBasedCorsConfigurationSource urlBasedCorsConfigurationSource = new UrlBasedCorsConfigurationSource();&lt;br/&gt;        final CorsConfiguration cors = new CorsConfiguration();&lt;br/&gt;        cors.setAllowCredentials(true);&lt;br/&gt;        cors.addAllowedOrigin(&quot;*&quot;);&lt;br/&gt;        cors.addAllowedHeader(&quot;*&quot;);&lt;br/&gt;        cors.addAllowedMethod(&quot;*&quot;);&lt;br/&gt;        urlBasedCorsConfigurationSource.registerCorsConfiguration(&quot;/**&quot;, cors);&lt;br/&gt;        return new CorsFilter(urlBasedCorsConfigurationSource);&lt;br/&gt;&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;运行，返回token&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;运行，返回结果为token&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5245901639344263&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/ibQcycQwt0ecaRaakVIOBWIpnAzxHoFNcYt6W7IAuZbRqEZicsmasm41AofYcVg8XQylC6kPdKA2bQysDRtQd7Mg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;732&quot;/&gt;&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;SpringSecurity JSON登录&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;这里配置SpringSecurity之JSON登录&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;这里需要重写UsernamePasswordAnthenticationFilter类，以及配置SpringSecurity&lt;/span&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;重写UsernamePasswordAnthenticationFilter&lt;/span&gt;&lt;/h2&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;public &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;CustomAuthenticationFilter&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;UsernamePasswordAuthenticationFilter&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    public &lt;span&gt;Authentication&lt;/span&gt; attemptAuthentication(&lt;span&gt;HttpServletRequest&lt;/span&gt; request, &lt;span&gt;HttpServletResponse&lt;/span&gt; response) &lt;span&gt;throws&lt;/span&gt; &lt;span&gt;AuthenticationException&lt;/span&gt; {&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;//attempt Authentication when Content-Type is json&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt;(request.getContentType().equals(&lt;span&gt;MediaType&lt;/span&gt;.&lt;span&gt;APPLICATION_JSON_UTF8_VALUE&lt;/span&gt;)&lt;br/&gt;                ||request.getContentType().equals(&lt;span&gt;MediaType&lt;/span&gt;.&lt;span&gt;APPLICATION_JSON_VALUE&lt;/span&gt;)){&lt;br/&gt;&lt;br/&gt;            &lt;span&gt;//use jackson to deserialize json&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;ObjectMapper&lt;/span&gt; mapper = &lt;span&gt;new&lt;/span&gt; &lt;span&gt;ObjectMapper&lt;/span&gt;();&lt;br/&gt;            &lt;span&gt;UsernamePasswordAuthenticationToken&lt;/span&gt; authRequest = &lt;span&gt;null&lt;/span&gt;;&lt;br/&gt;            &lt;span&gt;try&lt;/span&gt; (&lt;span&gt;InputStream&lt;/span&gt; is = request.getInputStream()){&lt;br/&gt;                &lt;span&gt;AuthenticationBean&lt;/span&gt; authenticationBean = mapper.readValue(is,&lt;span&gt;AuthenticationBean&lt;/span&gt;&lt;span&gt;.&lt;span&gt;class&lt;/span&gt;)&lt;/span&gt;;&lt;br/&gt;                authRequest = &lt;span&gt;new&lt;/span&gt; &lt;span&gt;UsernamePasswordAuthenticationToken&lt;/span&gt;(&lt;br/&gt;                        authenticationBean.getUsername(), authenticationBean.getPassword());&lt;br/&gt;            }&lt;span&gt;catch&lt;/span&gt; (&lt;span&gt;IOException&lt;/span&gt; e) {&lt;br/&gt;                e.printStackTrace();&lt;br/&gt;                authRequest = &lt;span&gt;new&lt;/span&gt; &lt;span&gt;UsernamePasswordAuthenticationToken&lt;/span&gt;(&lt;br/&gt;                        &lt;span&gt;&quot;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&quot;&lt;/span&gt;);&lt;br/&gt;            }&lt;span&gt;finally&lt;/span&gt; {&lt;br/&gt;                setDetails(request, authRequest);&lt;br/&gt;                &lt;span&gt;return&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;.getAuthenticationManager().authenticate(authRequest);&lt;br/&gt;            }&lt;br/&gt;        }&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;//transmit it to UsernamePasswordAuthenticationFilter&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;else&lt;/span&gt; {&lt;br/&gt;            &lt;span&gt;return&lt;/span&gt; &lt;span&gt;super&lt;/span&gt;.attemptAuthentication(request, response);&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;配置SecurityConfig&lt;/span&gt;&lt;/h2&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;@Override&lt;br/&gt;protected void configure(HttpSecurity http) throws Exception {&lt;br/&gt;    http&lt;br/&gt;            .cors().and()&lt;br/&gt;            .antMatcher(&quot;/**&quot;).authorizeRequests()&lt;br/&gt;            .antMatchers(&quot;/&quot;, &quot;/login**&quot;).permitAll()&lt;br/&gt;            .anyRequest().authenticated()&lt;br/&gt;            //这里必须要写formLogin()，不然原有的UsernamePasswordAuthenticationFilter不会出现，也就无法配置我们重新的UsernamePasswordAuthenticationFilter&lt;br/&gt;            .and().formLogin().loginPage(&quot;/&quot;)&lt;br/&gt;            .and().csrf().disable();&lt;br/&gt;&lt;br/&gt;    //用重写的Filter替换掉原有的UsernamePasswordAuthenticationFilter&lt;br/&gt;    http.addFilterAt(customAuthenticationFilter(),&lt;br/&gt;    UsernamePasswordAuthenticationFilter.class);&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;//注册自定义的UsernamePasswordAuthenticationFilter&lt;br/&gt;@Bean&lt;br/&gt;CustomAuthenticationFilter customAuthenticationFilter() throws Exception {&lt;br/&gt;    CustomAuthenticationFilter filter = new CustomAuthenticationFilter();&lt;br/&gt;    filter.setAuthenticationSuccessHandler(new SuccessHandler());&lt;br/&gt;    filter.setAuthenticationFailureHandler(new FailureHandler());&lt;br/&gt;    filter.setFilterProcessesUrl(&quot;/login/self&quot;);&lt;br/&gt;&lt;br/&gt;    //这句很关键，重用WebSecurityConfigurerAdapter配置的AuthenticationManager，不然要自己组装AuthenticationManager&lt;br/&gt;    filter.setAuthenticationManager(authenticationManagerBean());&lt;br/&gt;    return filter;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;这样就完成使用json登录SpringSecurity。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;最新面试题整理好了，点击Java面试库小程序在线刷题。&lt;/span&gt;&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;Spring Security 密码加密方式&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;需要在Config 类中配置如下内容&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt; &lt;span&gt;/**&lt;br/&gt;     * 密码加密&lt;br/&gt;     */&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;@Bean&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;public&lt;/span&gt; BCryptPasswordEncoder passwordEncoder(){&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; BCryptPasswordEncoder();&lt;br/&gt;    }&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;即，使用此方法，对密码进行加密， 在业务层的时候，使用此加密的方法&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;@Service&lt;/span&gt;&lt;br/&gt;&lt;span&gt;@Transactional&lt;/span&gt;&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;UserServiceImpl&lt;/span&gt; &lt;span&gt;implements&lt;/span&gt; &lt;span&gt;UserService&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Resource&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; UserRepository userRepository;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Resource&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; BCryptPasswordEncoder bCryptPasswordEncoder;  &lt;span&gt;//注入bcryct加密&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; User &lt;span&gt;add&lt;/span&gt;&lt;span&gt;(User user)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        user.setPassword(bCryptPasswordEncoder.encode(user.getPassword())); &lt;span&gt;//对密码进行加密&lt;/span&gt;&lt;br/&gt;        User user2 = userRepository.save(user);&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; user2;&lt;br/&gt;    }&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; ResultInfo &lt;span&gt;login&lt;/span&gt;&lt;span&gt;(User user)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        ResultInfo resultInfo=&lt;span&gt;new&lt;/span&gt; ResultInfo();&lt;br/&gt;        User user2 = userRepository.findByName(user.getName());&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (user2==&lt;span&gt;null&lt;/span&gt;) {&lt;br/&gt;            resultInfo.setCode(&lt;span&gt;&quot;-1&quot;&lt;/span&gt;);&lt;br/&gt;            resultInfo.setMessage(&lt;span&gt;&quot;用户名不存在&quot;&lt;/span&gt;);&lt;br/&gt;            &lt;span&gt;return&lt;/span&gt; resultInfo;&lt;br/&gt;        }&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;//判断密码是否正确&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (!bCryptPasswordEncoder.matches(user.getPassword(),user2.getPassword())) {&lt;br/&gt;            resultInfo.setCode(&lt;span&gt;&quot;-1&quot;&lt;/span&gt;);&lt;br/&gt;            resultInfo.setMessage(&lt;span&gt;&quot;密码不正确&quot;&lt;/span&gt;);&lt;br/&gt;            &lt;span&gt;return&lt;/span&gt; resultInfo;&lt;br/&gt;        }&lt;br/&gt;        resultInfo.setMessage(&lt;span&gt;&quot;登录成功&quot;&lt;/span&gt;);&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; resultInfo;&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;即，使用BCryptPasswordEncoder 对密码进行加密，保存数据库&lt;/span&gt;&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;使用数据库认证&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;这里使用数据库认证SpringSecurity&lt;/span&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;设计数据表&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;这里设计数据表&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6056737588652482&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/ibQcycQwt0ecaRaakVIOBWIpnAzxHoFNcATVm8VQMV0HPicmJMbvR0XKnltaVBVzreFXctZbo7mOv5QKFjsnIljw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;705&quot;/&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;着重配置SpringConfig&lt;/span&gt;&lt;/h2&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;@Configurable&lt;/span&gt;&lt;br/&gt;public &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;WebSecurityConfig&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;WebSecurityConfigurerAdapter&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;@Autowired&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;UserService&lt;/span&gt; userService;    &lt;span&gt;// service 层注入&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Bean&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;PasswordEncoder&lt;/span&gt; passwordEncoder(){&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; &lt;span&gt;BCryptPasswordEncoder&lt;/span&gt;();&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;protected&lt;/span&gt; void configure(&lt;span&gt;AuthenticationManagerBuilder&lt;/span&gt; auth) &lt;span&gt;throws&lt;/span&gt; &lt;span&gt;Exception&lt;/span&gt; {&lt;br/&gt;        &lt;span&gt;// 参数传入Service，进行验证&lt;/span&gt;&lt;br/&gt;        auth.userDetailsService(userService);&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;protected&lt;/span&gt; void configure(&lt;span&gt;HttpSecurity&lt;/span&gt; http) &lt;span&gt;throws&lt;/span&gt; &lt;span&gt;Exception&lt;/span&gt; {&lt;br/&gt;        http.authorizeRequests()&lt;br/&gt;                .antMatchers(&lt;span&gt;&quot;/admin/**&quot;&lt;/span&gt;).hasRole(&lt;span&gt;&quot;admin&quot;&lt;/span&gt;)&lt;br/&gt;                .anyRequest().authenticated()&lt;br/&gt;                .and()&lt;br/&gt;                .formLogin()&lt;br/&gt;                .loginProcessingUrl(&lt;span&gt;&quot;/login&quot;&lt;/span&gt;).permitAll()&lt;br/&gt;                .and()&lt;br/&gt;                .csrf().disable();&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;这里着重配置SpringConfig&lt;/span&gt;&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;小结&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;着重讲解了RBAC的权限配置，以及简单的使用SpringSecurity，以及使用SpringSecurity + JWT 完成前后端的分离，以及配置json登录，和密码加密方式。&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;blockquote data-type=&quot;2&quot; data-url=&quot;&quot; data-author-name=&quot;&quot; data-content-utf8-length=&quot;26&quot; data-source-title=&quot;&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;来自：&lt;/span&gt;&lt;span&gt;小小____&lt;/span&gt;&lt;/p&gt;&lt;p&gt;链接：https://segmentfault.com/a/1190000023052493&lt;/p&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;- EOF -&lt;/span&gt;&lt;/p&gt;&lt;section donone=&quot;shifuMouseDownCard(&#x27;shifu_c_030&#x27;)&quot; label=&quot;Copyright Reserved by PLAYHUDONG.&quot;&gt;&lt;section&gt;&lt;span&gt;推荐阅读&lt;/span&gt;  &lt;span&gt;点击标题可跳转&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5NzMyMjAwMA==&amp;amp;mid=2651518974&amp;amp;idx=1&amp;amp;sn=38f3a7f53f81cdc02055b69023c17f55&amp;amp;chksm=bd259b818a5212973597341eca6bc2c70504551a6568ff07c0008db973801a81ad1bc6e5ff7b&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;分布式系统中的时间&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;11&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;&lt;span&gt;分布式系统中的时间&lt;/span&gt;&lt;/a&gt;&lt;br/&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5NzMyMjAwMA==&amp;amp;mid=2651519102&amp;amp;idx=1&amp;amp;sn=b1fc420d394e32f1df2917ca41672c15&amp;amp;chksm=bd2594018a521d17782356c8c98a46bedb54cc1795aa87e3f4f2567f9bc4e215d3f6818ee00d&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;用小白都能看懂的大白话告诉你：什么是分布式计算系统？&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;11&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;&lt;span&gt;用小白都能看懂的大白话告诉你：什么是分布式计算系统？&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5NzMyMjAwMA==&amp;amp;mid=2651517516&amp;amp;idx=1&amp;amp;sn=c9ff2e2c6c6e12917aa1aaa50d957c2e&amp;amp;chksm=bd259e338a52172567bca96bf9e4959e0aa4b314d07356b867eca9f33d37aabc336e82cfbd0e&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;记一次自定义 Redis 分布式锁导致的故障&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;&lt;span&gt;记一次自定义 Redis 分布式锁导致的故障&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;看完本文有收获？请转发分享给更多人&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;关注「ImportNew」，提升Java技能&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.9166666666666666&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/2A8tXicCG8ylbWIGfdoDED35IRRySQZTXUkJ1eop9MHApzFibKnOo0diboXpl0rmS5mH78YJhsWQv0dhv718A6kUA/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;jpeg&quot; data-w=&quot;600&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;span&gt;点赞和在看就是最大的支持&lt;/span&gt;&lt;span&gt;❤️&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;/div&gt;

          

          
          &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>6ce9a31113171106acdd804a4abb71dc</guid>
<title>今天不写代码，聊聊热门的知识图谱技术</title>
<link>https://toutiao.io/k/xcu8n0i</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;哈喽大家好啊，我是Hydra。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;前一段时间，boss交给我个任务，让我调研一下知识图谱技术。虽说有点NLP的底子，不过研究起这个来还是满头的包，终于还是在搜集了不少资料后划拉出来50多页的PPT，那么今天就浅浅的给大家分享一下知识图谱的相关知识。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;概述&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;诞生&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;知识图谱的概念诞生于2012年，由谷歌公司首先提出。大家都知道，谷歌是做搜索引擎的，所以他们最早提出了&lt;code&gt;Google Knowledge Graph&lt;/code&gt;后，首先利用知识图谱技术改善了搜索引擎核心。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;注意上面的说法，虽然知识图谱诞生于2012年，但其实在更早的时间它还有另外一个名字，那就是&lt;strong&gt;语义&lt;/strong&gt;。那么语义又是什么呢？引用《统计自然语言处理基础》中的两句话来解答这个问题：&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;语义可以分成两部分，研究单个词的语义（即词义）以及单个词的含义是怎么联合起来组成句子（或者更大的单位）的含义。&lt;/p&gt;&lt;p&gt;语义研究的是词语的含义、结构和说话的方式。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那么，知识图谱究竟是个什么东西呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;你可以将它理解为是&lt;strong&gt;在自然界建立实体关系&lt;/strong&gt;的知识数据库，它的提出是为了准确地阐述人、事、物之间的关系。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;目前在学术界还没有给知识图谱一个统一的定义，但是在谷歌发布的文档中有明确的描述：&lt;strong&gt;“知识图谱是一种用图模型来描述知识和建模世界万物之间关联关系的技术方法”&lt;/strong&gt;。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;演进&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;谷歌的Singhal博士用三个词点出了知识图谱加入之后搜索发生的变化：&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;“Things，not string.”&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这寥寥的几个单词，点出了知识图谱的核心。以前的搜索，都是将要搜索的内容看作字符串，结果是和字符串进行匹配，将匹配程度高的排在前面，后面按照匹配度依次显示。而利用知识图谱之后，将搜索的内容不再看作字符串，而是看作客观世界的事物，也就是一个个的个体。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;举个例子，当我们在搜索比尔盖茨的时候，搜索引擎不是搜索“比尔盖茨”这个字符串，而是搜索比尔盖茨这个人，围绕比尔盖茨这个人，展示与他相关的人和事。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5070052539404554&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zpom4BeZSicbxpibp8PTxbqUUOwiahxJp5PDpssaCXRFmYNRBlgKdT0FxZuEEPg6v9CkHWhRTibI5ECThSChEf2LOQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1142&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在上面的图中，左侧百科会把比尔盖茨的主要情况列举出来，右侧显示比尔盖茨的微软产品和与他类似的人，主要是一些IT行业的创始人。这样，一个搜索结果页面就把和比尔盖茨的基本情况和他的主要关系都列出来了，搜索的人很容易找到自己感兴趣的结果。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;三要素&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在知识图谱中，通过三元组 &lt;strong&gt;&amp;lt;实体 × 关系 × 属性&amp;gt;&lt;/strong&gt; 集合的形式来描述事物之间的关系：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;实体：又叫作本体，指客观存在并可相互区别的事物，可以是具体的人、事、物，也可以是抽象的概念或联系，实体是知识图谱中最基本的元素&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;关系：在知识图谱中，边表示知识图谱中的关系，用来表示不同实体间的某种联系&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;属性：知识图谱中的实体和关系都可以有各自的属性&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里所说的实体和普通意义上的实体略有不同，借用NLP中本体的概念来理解它会比较好：&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;本体定义了组成&lt;strong&gt;主题领域&lt;/strong&gt;的词汇表的&lt;strong&gt;基本术语&lt;/strong&gt;及其&lt;strong&gt;关系&lt;/strong&gt;，以及结合这些术语和关系来定义词汇表外延的&lt;strong&gt;规则&lt;/strong&gt;。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;例如我们要描述&lt;strong&gt;大学&lt;/strong&gt;这一领域时，对它来说&lt;strong&gt;教工&lt;/strong&gt;、&lt;strong&gt;学生&lt;/strong&gt;、&lt;strong&gt;课程&lt;/strong&gt;就是相对比较重要的概念，并且教工和学生之间也存在一定的关联关系，此外对象之间还存在一定的约束关系，例如一个系的教职员工数量不能少于10人。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在了解了上面的三元组后，我们可以基于它构建下面这样的一个关系：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6045918367346939&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zpom4BeZSicbxpibp8PTxbqUUOwiahxJp5PObvT1Q7GGgQRqAgyQVKWz7NAHkU3ibgWKoveWJibKnHTexyZVzvK8p6Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;784&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以看到，女王和王储通过母子关系关联在一起，并且每个人拥有自己的属性。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当知识图谱中的节点逐渐增多后，它的表现形式就会类似于化学分子式的结构，一个知识图谱往往存在多种类型的实体与关系。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3772609819121447&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zpom4BeZSicbxpibp8PTxbqUUOwiahxJp5Pdvq8icVOgsCnMfVv78oHG4yASggwWePPWgBS6lSIldU8mq6qcibWc4cQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;774&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;知识图谱将非线性世界中的知识信息进行加工，做到这样的结构化、可视化，从而辅助人类进行推理、预判、归类。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;到这里，可以简单概括一下知识图谱的基本特征：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;知识结构网络化&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;网络结构复杂&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;网络由三元组构成&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;数据主要由知识库承载&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;场景&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;搜索&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;前面提到过，以前的搜索引擎是从海量的关键词中找出与查询匹配度最高的内容，按照查询结果把排序分值最高的一些结果返回给用户。在整个过程中，搜索引擎可能并不需要知道用户输入的是什么，因为系统不具备推理能力，在精准搜索方面也略显不足。而基于知识图谱的搜索引擎，除了能够直接回答用户的问题外，还具有一定的语义推理能力，大大提高了搜索的精确度。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;推荐&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在传统的推荐系统中，存在两个典型问题：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;数据稀疏问题：在实际应用场景中，用户和物品的交互信息往往是非常稀疏的，预测会产生过拟合风险&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;冷启动问题：对于新加入的用户或者物品，由于系统没有其历史交互信息，因此无法进行准确地建模和推荐&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;例如，在一个电影类网站中可能包含了上万部电影，然而一个用户打过分的电影可能平均只有几十部。使用如此少量的已观测数据来预测大量的未知信息，会极大地增加算法的过拟合风险。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;因此在推荐算法中会额外引入一些辅助信息作为输入，这些辅助信息可以丰富对用户和物品的描述，从而有效地弥补交互信息的稀疏或缺失。在各种辅助信息中，知识图谱作为一种新兴类型的辅助信息，这几年的相关研究比较多。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下面就是一个基于知识图谱的推荐例子：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4383561643835616&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zpom4BeZSicbxpibp8PTxbqUUOwiahxJp5P2FEUycicwbplA6ACIVicsbnZDZ9j3hzDEc46bh4ic80OR3m5FDVmeBrEA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;949&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在将知识图谱引入推荐系统后，具有以下优势：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;精确性：知识图谱为物品引入了更多的语义关系，可以深层次地发现用户兴趣&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;多样性：知识图谱提供了实体之间不同的关系连接种类，有利于推荐结果的发散，避免推荐结果局限于单一类型&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;可解释性：知识图谱可以连接用户的历史记录和推荐结果，从而提高用户对推荐结果的满意度和接受度，增强用户对推荐系统的信&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;此外，知识图谱技术还在问答与对话系统、语言理解、决策分析等多个领域被广泛应用，它被挂载在这些系统之后，充当背景知识库的角色。总的来说，在这些场景下的应用，可以概括整个AI的发展趋势，就是从&lt;strong&gt;感知&lt;/strong&gt;到&lt;strong&gt;认知&lt;/strong&gt;的一个过程。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;架构&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;知识图谱的构建目前已有一套比较完善的架构体系，可以先来看一下下面这张图，然后我们再慢慢解释：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5061295971978984&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/zpom4BeZSicbxpibp8PTxbqUUOwiahxJp5Pjliar3cvs99KsfmoHHbESvyLrcfYxtPVzdxLLN0WkDPQWicLxRRia3ghQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1142&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;总的来说，整体过程可以分为下面5步：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;1.数据获取：主要获取半结构化数据，为后续的实体与实体属性构建做准备。结构化数据则为数值属性做准备&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;2.知识获取：从文本数据集中自动识别出命名实体，包括抽取人名、地名、机构名等；从语料中抽取实体之间的关系，形成关系网络；从不同的信息源中采集特定的属性信息&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;3.知识融合：完成指示代词与先行词的合并；完成同一实体的歧义消除；将已识别的实体对象，无歧义地指向知识库中的目标实体&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;4.知识加工：构建知识概念模块，抽取本体；进行知识图谱推理，并对知识图谱的可信度进行量化评估，评估过关的知识图谱流入知识图谱库中存储，评估不过关的知识图谱返回一开始的数据环节进行调整，而后重复相同环节直到评估过关&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;5.知识存储与计算：存储是为了快速查询与运用知识，需支持底层数据描述与上层计算，有的主体计算包含在存储中&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下面，我们拆解其中部分重要核心细节，来具体描述。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;知识获取&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;数据是知识图谱的根基，直接关系到知识图谱构建的效率和质量。所以我们先从数据源进行分析它们的优势与劣势：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;站内数据：优势在于类别明确，结构化好，易于获取；而劣势在于类型有限，已有数据并不是广义上的知识类型&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;垂直网站数据：优势在于类别明确；而劣势在于获取解析成本高，数据质量参差不齐&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;百科类网站数据：优势在于数据量大，内容丰富；而劣势在于没有分类信息，结构不完全固定&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;人工创建的数据：优势在于类别明确；而劣势在于类别明确&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;实体抽取&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;实体抽取，是指从数据中识别和抽取实体的属性与关系信息，这一过程还是针对不同结构的数据来看：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;结构化数据：包括站内/垂直网站信息、部分百科网站信息，可以利用策略模式，将抽取的具体规则用groovy脚本来实现&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;半结构化数据：包括百科网站中的表格以及列表，可以利用基于监督学习的包装器归纳方法进行抽取&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;非结构化数据：包括百科网站中的文本以及站内文本，可以利用自然语言处理的手段处理&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;关系抽取&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;回顾一下我们前面提到过的知识图谱三要素，分别是实体、关系和属性。关系抽取我们同样可以用一个三元组表示的&lt;code&gt;RDF graph&lt;/code&gt;：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5430579964850615&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zpom4BeZSicbxpibp8PTxbqUUOwiahxJp5PeKGnz4oeKicY7Z4qf6xZZOB7CeNhuyC0qPsMeBtjD7jbRlX6BstdExw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;569&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这样的一个（S,P,O）三元组，就可以将一份知识分解为主语、谓语、宾语。这样的SPO结构，在配合知识图谱进行存储时可以被用来当做存储单元。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在RDF中可以声明一些规则，从一些关系推导出另一些关系，这些规则被称为&lt;code&gt;RDF Schema&lt;/code&gt;。规则可以用一些词汇表示，如&lt;code&gt;class&lt;/code&gt;、&lt;code&gt;subClassOf&lt;/code&gt;、&lt;code&gt;type&lt;/code&gt;、&lt;code&gt;property&lt;/code&gt;、&lt;code&gt;subPropertyOf&lt;/code&gt;、&lt;code&gt;domain&lt;/code&gt;、&lt;code&gt;range&lt;/code&gt;等。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下面这个例子中，节点到节点之间的关系就可以理解为前面提到的本体中的联系，而这一关联过程就可以被称为知识图谱中的推导或关联推理：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.3639661426844015&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/zpom4BeZSicbxpibp8PTxbqUUOwiahxJp5P8lVxxbyAHTCEepRIkFC4dBkRpF1WGQibM3ibbkGYH4CQMVSDPa5iaqVlQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;827&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;知识融合&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;知识融合这一过程中，主要包括指代消解、实体对齐、实体链接等过程，我们主要来看一下这个过程中比较重要的实体对齐（Object Alignment）。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;完成实体抽取后，存在实体ID不同但代表真实世界中同一对象的情况。知识融合即是将这些实体合并成一个具有全局唯一标识的实体对象，添加到知识图谱中。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;首先在索引中根据名字、别名等字段查询出若干个可能是相同实体的候选列表，这个步骤的目的是减少接下来流程的计算量&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;然后经过实体判别模型，根据模型得分识别出待合并对齐的原始实体&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;最后经过属性融合模型，将各原始实体的属性字段进行融合，生成最终的实体。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这一过程可以用下面的图来表示：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.3132411067193676&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zpom4BeZSicbxpibp8PTxbqUUOwiahxJp5PC4Pic6O6wGfqlQIesWdFNy2WEtwbhBWH0nqJhIcDuwSMhsuPAiaNHbew/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1012&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;实际上，这个流程中的合并判断模型大家都比较熟悉，它就是通过机器学习训练生成的二分类器。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;知识图谱构建与补全&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;知识图谱普遍存在不完备的问题，在这一步需要做的，就是基于图谱里已有的关系，去推理出缺失的关系。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在下面的这张知识图谱的实体网络中，黄色的箭头表示已经存在的关系，红色的虚线则是缺失的关系。我们可以根据实体之间的关系，来补全缺失的e3到e4之间的关系。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5115740740740741&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zpom4BeZSicbxpibp8PTxbqUUOwiahxJp5PanS2ajaSbAJJKWK2wSWGIe1XcaynT5PBRTzZOEPP9jkWarFLbDF1Iw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;864&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;至于这一补全的过程，有很多现成的算法可以使用，例如基于路径查找的方法，基于强化学习的方法，基于推理规则的方法，基于元学习的方法等等。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;知识存储&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;知识图谱的存储依赖于图数据库及其引擎，不同厂商的实现可能大有不同，例如可以选用的图数据库有RDF4j、Virtuoso、Neo4j等。例如爱奇艺的图数据库引擎选择了JanusGraph，借助云平台的Hbase和ES集群，搭建了自己的JanusGraph分布式图数据库引擎。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4588500563697858&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zpom4BeZSicbxpibp8PTxbqUUOwiahxJp5POLNy8EoxweGklrGMFhq0m2cqnJa8dT3Oa0oxfPybWhianm20PN0OMQQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1774&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;JanusGraph通过借助外部的存储系统与外部索引系统的支持，支撑了上游的在线查询服务。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;补充&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;底层存储数据三元组的逻辑层次可以被称为数据层，通常通过本体库来管理数据层，本体库的概念相当于对象中“类”的概念。而建立在数据层之上的模式层，是知识图谱的核心，它借助本体库来管理公理、规则和约束条件，规范实体、关系、属性这些具体对象间的关系。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从不同的视角去审视知识图谱，可以更方便我们对其进行了解：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;在Web视角下，知识图谱如同简单文本之间的超链接一样，通过建立数据之间的语义链接，支持语义搜索&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;在自然语言处理视角下，知识图谱就是从文本中抽取语义和结构化的数据&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;在知识表示视角下，知识图谱是采用计算机符号表示和处理知识的方法&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;在人工智能视角下，知识图谱是利用知识库来辅助理解人类语言的工具&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;在数据库视角下，知识图谱是利用图的方式去存储知识的方法&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下面，就是一张构建完备后，比较易于我们理解的知识图谱举例：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6437054631828979&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zpom4BeZSicbxpibp8PTxbqUUOwiahxJp5PcMa2ic9Q6ibj40nSXlA1PscSd5QBLtVr4blxUbicjBbUyVaqaGZnCOXZA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;842&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;看到这里，是不是感觉知识图谱的构建过程比较复杂，让我们难于上手？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其实近些年来，深度学习和相关自然语言处理技术的迅猛发展使得非结构化数据的自动知识抽取少人化、乃至无人化成为了可能，现在已经提出了一些前沿的知识图谱自动构建技术。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在深度学习的基础上，艾伦人工智能实验室和微软的研究人员结合自然语言处理领域较为成功的预训练语言模型，提出了自动知识图谱构建模型 COMET（COMmonsEnse Transformers）。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.9082802547770701&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zpom4BeZSicbxpibp8PTxbqUUOwiahxJp5PPzWVeHNWfASZEcvI6Lu9nxWSZibCwMOlf0xCns6C6KnKnVcGqez7VtQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;785&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;该模型可以根据已有常识库中的自然语言内容自动生成丰富多样的常识描述，在 Atomic 和 ConcepNet 两个经典常识图谱上都取得了接近人类表现的高精度，证明了此类方法在常识知识图谱自动构建和补全方面替代传统方法的可行性。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;难点&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;数据治理困难&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;数据治理为知识图谱输送数据源，是知识图谱构建的前置环节与基础性工程。完备良好的数据治理不仅能确保知识图谱在搭建过程中获取真实可靠的数据原料，而且能从源头上改善信息质量，提升知识的准确度，建立符合人类认知体系的数据资源池。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但是，数据治理在知识图谱建设卡点中是一个老生常谈的问题。知识图谱应用始终要围绕数据标签、数据清洗、数据归一、数据销毁等数据治理环节展开，应用开发人员往往需要在前期的数据治理工作中投入大量时间和人力，以确保数据源的真实性、可靠性、可用性、正确性。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当前，数据标准不统一、数据噪声大、领域数据集缺失、数据可信度异常等数据治理难题依然困扰着知识图谱研发者，持续进行数据治理工程是业内参与者艰巨的使命与职责。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;专家缺乏&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;目前知识图谱行业整体处于开发资源待完善的局面，行业与技术专家资源稀缺属于其中的一部分情况。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一方面，缺少具备深厚行业经验的专家。由于行业知识图谱与行业的关联度高，开发人员需要迅速了解业务与客户需求，在行业专家的指导下完成Schema构建，若涉及到文本抽取工作还需要行业专家进行数据标注，而各行各业中的行业专家往往仅有极少数。对此，供给方企业需要锁定行业业务的强项领域、提前招募培养行业专家、进行内外协作，以完成行业专家储备。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;另一方面，缺少技术复合型专家。整个知识图谱应用生产流程不仅涉及知识图谱算法，生产流程的靠前环节还涉及到底层的图数据存储与数据治理、NLP文本抽取和语义转换，同时各环节都渗透着机器学习这一底层人工智能技术。这意味着整个生产流程需要多个技术领域的工程师协同合作，而对整套技术均有了解的技术专家数量稀缺。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;底层存储&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由于知识图谱是二维链接的图结构而非行或列的表结构，其需以图数据的形式描述并存储，该方式能直接反应知识图谱的内部结构，有利于知识查询，结合图计算算法进行知识的深度挖掘与推理。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;满足这一存储要求的数据库为近几年兴起的图数据库。相比于传统的关系型数据库，图数据库的数据模型以节点和边来体现，可大大缩短关联关系的查询执行时间，支持半结构化数据存储，展示多维度的关联关系。高效便捷的新技术往往意味着更高的研发门槛。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;流程与算法&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在知识图谱的搭建过程中，仍然面临着各类算法难点，主要难点可归结为生产流程中的算法难点和算法性能上的难点。前者体现为知识获取受数据集限制、知识融合干扰因素较多、知识计算的数据集与算力不足等问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;而后者体现为算法泛化能力不足、鲁棒性不足、缺乏统一测评指标等问题。算法上的难点有赖于供需双方、学术界、政府持续攻坚，而非一方努力即可收获成功。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;最后的碎碎念&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;拖了好久没有更文，不知道大家有没有很期待~&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其实我这里也已经存了不少文章的选题了，奈何最近工作上实在比较繁忙，下班时间基本上也都在配小肥羊玩，所以没有什么时间更文。就像这篇文章，也是我正在出差的高铁上，根据前几天汇报的PPT整理而成。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.562390158172232&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/zpom4BeZSicbxpibp8PTxbqUUOwiahxJp5PVfFmJoWRvKluTg8K706SSDBrQb9lpGd1C6kVFNrqYcQZMtHMVUtmlg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;2276&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;怎么样，沿途的风景，是不是还可以？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那么，这次的分享就到这里，我是Hydra，我们下篇再见。&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>23b92e949854ae366124473882571ed1</guid>
<title>整整修了6个小时，一次难料的分页慢查询事故……</title>
<link>https://toutiao.io/k/dqo2zr0</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;68&quot; data-backw=&quot;578&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.11849710982658959&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ufWcjcomw8b6Lib0A0eic09h7UM0oewibib4JBPLkw1Mvb2p6sOzeHRtSHexOpy15TTJxdbibwBu97iamYXeGnEAfibOw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1038&quot;/&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mp-common-profile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzkwOTIxNDQ3OA==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/ufWcjcomw8YRIaicYx5pzj5Cxwick8DamnOgbTJu96QTibKyHEDZt1815yOV1r27oZ6HgoYTEYWYLRz4jIV4iasHgg/0?wx_fmt=png&quot; data-nickname=&quot;dbaplus社群&quot; data-alias=&quot;dbaplus&quot; data-signature=&quot;围绕Database、BigData、AIOps的企业级专业社群。资深大咖、技术干货，每天精品原创文章推送，每周线上技术分享，每月线下技术沙龙，每季度Gdevops&amp;amp;DAMS行业大会.&quot; data-from=&quot;0&quot; data-is_biz_ban=&quot;0&quot;/&gt;&lt;/section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86122&quot; data-custom=&quot;#138bde&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p data-brushtype=&quot;text&quot;&gt;&lt;span&gt;&lt;strong&gt;一、事故背景&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这次事故也是我们组里遇到的一次关于分页慢查询的典型例子，通过这篇文章，你可以很清晰地跟随我们还原事故现场，以及每一步遇到问题做出的调整和改动。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86122&quot; data-custom=&quot;#138bde&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p data-brushtype=&quot;text&quot;&gt;&lt;span&gt;&lt;strong&gt;二、事故问题现场&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-role=&quot;list&quot;/&gt;&lt;section data-role=&quot;list&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-role=&quot;list&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;157&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.27175208581644816&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/ufWcjcomw8aED1RvkicFS1cFibzsvmWjOyz8gCrHzvAbs4f7qzfuT1Dbmm7fZCpTZhtxT5nC9tr8cjObZZ6LPNyQ/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1678&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;159&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.2754491017964072&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/ufWcjcomw8aED1RvkicFS1cFibzsvmWjOyKeGiaoKp0OdyNkiaicDHyeZxg8iaDZvzpceia4IKR65BzM3M940icV7RAWAQ/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1670&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-role=&quot;list&quot;/&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;257&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.44471153846153844&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/ufWcjcomw8aED1RvkicFS1cFibzsvmWjOygH6DzQjlsItibdxnOEaGISSqrOeqg82hDFEBBMb7G2j5fUL1EOYFia8w/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1664&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-role=&quot;list&quot;/&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;276&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.47688243064729197&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/ufWcjcomw8aED1RvkicFS1cFibzsvmWjOypVE5NFB7z3BBOv9fU2Yibsm0pZ2LKxHQ2nz5VCUJqYqvG93Wo6L4CgA/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1514&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;定位到这里，我们基本确定这个不是几分钟能解决的问题，于是我们分成两步去处理。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-role=&quot;list&quot;&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;第一步：打开限流，防止更多的慢sql请求进行&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;第二步：分析慢sql，进行改造上线&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;查看慢SQL，⼤部分都是融合系统分⻚查询接⼝涉及到的SQL，同时由于上游系统在15:35左右对于该接⼝调⽤流量激增，和数据库CPU暴涨，接⼝TP999暴涨的时间吻合，推测是由于库存对于该接⼝的调⽤对于数据库造成了压⼒，导致接⼝耗时增加。但是该接⼝的调⽤量并不⾼，再次查看慢SQL，发现有⼤量已经遍历到⼏百⻚的慢SQL。推测是深分⻚的问题。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-role=&quot;list&quot;/&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-role=&quot;list&quot;/&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-role=&quot;list&quot;/&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-role=&quot;list&quot;/&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-role=&quot;list&quot;/&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;327&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.5660847880299252&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/ufWcjcomw8aED1RvkicFS1cFibzsvmWjOyGwmHl87WQmFibCumicZV46DLpibjsiawZxicbuIOibwtBAFaYUPaoXlIuDZg/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1604&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86122&quot; data-custom=&quot;#138bde&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p data-brushtype=&quot;text&quot;&gt;&lt;span&gt;&lt;strong&gt;三、问题原因和解决⽅法&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86152&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;span data-bgopacity=&quot;40%&quot;/&gt;&lt;span data-bgopacity=&quot;25%&quot;/&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;&lt;span&gt;&lt;strong&gt;1、深分页出现原因&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;问题SQL：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;select&lt;/span&gt; * &lt;span class=&quot;code-snippet__keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;where&lt;/span&gt; org_code = xxxx &lt;span class=&quot;code-snippet__keyword&quot;&gt;limit&lt;/span&gt; &lt;span class=&quot;code-snippet__number&quot;&gt;1000&lt;/span&gt;,&lt;span class=&quot;code-snippet__number&quot;&gt;100&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;以上⾯的SQL为例，MySQL的limit⼯作原理就是先读取前⾯1000条记录，然后抛弃前1000条，读后⾯100条想要的，所以⻚码越⼤，偏移量越⼤，性能就越差。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86152&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;span data-bgopacity=&quot;40%&quot;/&gt;&lt;span data-bgopacity=&quot;25%&quot;/&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;&lt;span&gt;&lt;strong&gt;2、深分页的几种解决方法&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;1）查询ID+基于ID查询&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;即先使⽤查询条件查询出来id,再通过id进⾏范围查询，也就是说我第⼀次优化的时候使⽤的⽅法&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;⾸先查询出来ID，以上⾯的SQL为例&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;where&lt;/span&gt; org_code = xxxx &lt;span class=&quot;code-snippet__keyword&quot;&gt;limit&lt;/span&gt; &lt;span class=&quot;code-snippet__number&quot;&gt;1000&lt;/span&gt;,&lt;span class=&quot;code-snippet__number&quot;&gt;5&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;然后查询出来id后，使⽤id进⾏in查询，由于是直接基于主键的in查询，所以效率较⾼&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;select&lt;/span&gt; * &lt;span class=&quot;code-snippet__keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;in&lt;/span&gt; (&lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;code-snippet__number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;code-snippet__number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;code-snippet__number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;code-snippet__number&quot;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;2）基于ID查询优化&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;由于在第⼀次查询已经查询出来了所有符合条件的ID了，可以使⽤范围查询来替代in查询，效率更⾼(in&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;查询需要和集合里面的元素进⾏⽐对，但是范围查询只需要⽐较最大和最小即可)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;select&lt;/span&gt; * &lt;span class=&quot;code-snippet__keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;where&lt;/span&gt; org_code = xxxx &lt;span class=&quot;code-snippet__keyword&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;id&lt;/span&gt; &amp;gt;= &lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;id&lt;/span&gt; &amp;lt;= &lt;span class=&quot;code-snippet__number&quot;&gt;5&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;使用子查询&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;select&lt;/span&gt; a.id,a.dj_sku_id,a.jd_sku_id &lt;span class=&quot;code-snippet__keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;table&lt;/span&gt; a &lt;span class=&quot;code-snippet__keyword&quot;&gt;join&lt;/span&gt; (&lt;span class=&quot;code-snippet__keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;from&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;jd_spu_sku &lt;span class=&quot;code-snippet__keyword&quot;&gt;where&lt;/span&gt; org_code = xxxx &lt;span class=&quot;code-snippet__keyword&quot;&gt;limit&lt;/span&gt; &lt;span class=&quot;code-snippet__number&quot;&gt;1000&lt;/span&gt;,&lt;span class=&quot;code-snippet__number&quot;&gt;5&lt;/span&gt;) b&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;on&lt;/span&gt; a.id = b.id;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;使用子查询可以减少和数据库的IO交互，也是⼀种常⽤的解决深分页的⽅法。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;3）使用滚动查询&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;每次接⼝都会返回查询出来的数据的最⼤的id（游标），下⼀次查询传⼊这个游标，服务端只需要根据&lt;span&gt;这个游标，取出id⼤于这个游标的n个数据即可。n为每⻚展示条数。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;select&lt;/span&gt; * &lt;span class=&quot;code-snippet__keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;where&lt;/span&gt; org_code = xxxx &lt;span class=&quot;code-snippet__keyword&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;id&lt;/span&gt; &amp;gt; &lt;span class=&quot;code-snippet__number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;limit&lt;/span&gt; &lt;span class=&quot;code-snippet__number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这种⽅式服务端实现起来⽐较简单且性能很好。缺点是需要客户端修改，且需要保证ID是自增有序且结&lt;span&gt;果需要是按照ID排序的。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;最终定下的是使用滚动查询的方法。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;最终优化SQL上线后，表现平稳。第⼆周和库存⼀起重新优化了⾮多规格SKU的SQL。如下：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;id&lt;/span&gt;,dj_org_code,dj_sku_id,jd_sku_id,yn &lt;span class=&quot;code-snippet__keyword&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;org_code = xxxx &lt;span class=&quot;code-snippet__keyword&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;id&lt;/span&gt; &amp;gt; &lt;span class=&quot;code-snippet__number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;order&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;asc&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;limit&lt;/span&gt; &lt;span class=&quot;code-snippet__number&quot;&gt;500&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;测试了没问题后上线。观察线上监控稳定。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;本以为高枕无忧的时候，⼀周之后，数据库再次出现了⼤量的慢查询，数据库CPU报警，观察接⼝监控:&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;可以看到在调用量并不⼤的前提下，接⼝的耗时达到了60S。联系运维同学帮忙排查，发现了大量的慢&lt;span&gt;SQL：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;id&lt;/span&gt;,dj_org_code,dj_sku_id,jd_sku_id,yn &lt;span class=&quot;code-snippet__keyword&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;org_code = xxxx &lt;span class=&quot;code-snippet__keyword&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;id&lt;/span&gt; &amp;gt; &lt;span class=&quot;code-snippet__number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;order&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;asc&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;limit&lt;/span&gt; &lt;span class=&quot;code-snippet__number&quot;&gt;500&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;可以看出来，这就是我们优化后的SQL。运维同学explain这条sql后发现，这条SQL⾛了主键索引，没&lt;span&gt;有⾛我们以为应该要⾛的org_code的索引。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;和运维初步沟通后得出结论，在某些情况下，主键索引的优先级是会⾼于普通索引的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86122&quot; data-custom=&quot;#138bde&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p data-brushtype=&quot;text&quot;&gt;&lt;span&gt;&lt;strong&gt;四、最终解决方案&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86152&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;span data-bgopacity=&quot;40%&quot;/&gt;&lt;span data-bgopacity=&quot;25%&quot;/&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;&lt;span&gt;&lt;strong&gt;1、引用join&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;因为我们使用了&lt;span&gt;主键索引进⾏排序，且查询了不在索引树只在叶子节点中的字段。因此mysql认为主键索引更优，因为既可以排序，⼜不⽤回表，所以就使⽤主键索引最终导致了全表扫描。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;最终使用了先查询ID（不查询叶子节点字段保证使⽤索引），在通过join，使用查询出来的ID来查询对&lt;span&gt;应的数据的SQL：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;select&lt;/span&gt; a.id &lt;span class=&quot;code-snippet__keyword&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;id&lt;/span&gt;,a.dj_org_code &lt;span class=&quot;code-snippet__keyword&quot;&gt;AS&lt;/span&gt; djOrgCode,a.dj_sku_id &lt;span class=&quot;code-snippet__keyword&quot;&gt;AS&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;djSkuId,a.jd_sku_id &lt;span class=&quot;code-snippet__keyword&quot;&gt;AS&lt;/span&gt; jdSkuId,a.yn &lt;span class=&quot;code-snippet__keyword&quot;&gt;AS&lt;/span&gt; yn &lt;span class=&quot;code-snippet__keyword&quot;&gt;from&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;table&lt;/span&gt; a &lt;span class=&quot;code-snippet__keyword&quot;&gt;join&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;(&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;where&lt;/span&gt; org_code = xxxx &lt;span class=&quot;code-snippet__keyword&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;id&lt;/span&gt; &amp;gt; &lt;span class=&quot;code-snippet__number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;order&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;asc&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;limit&lt;/span&gt; &lt;span class=&quot;code-snippet__number&quot;&gt;500&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;) t &lt;span class=&quot;code-snippet__keyword&quot;&gt;on&lt;/span&gt; a.id=t.id;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;再次explain了下，可以发现⾛了我们既定的索引：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;161&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.27804295942720764&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/ufWcjcomw8aED1RvkicFS1cFibzsvmWjOyuJILWRtnhZMxwBydktnPkQDRD7ey0uuK7saNqX99GCw6SwGHJ07ib8w/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1676&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;于是上线，解决问题。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;上线稳定后，分析之前的问题SQL，执⾏下⾯两条语句，同样的SQL，不同的商家，MYSQL的执⾏结果也是不⼀样的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;138&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.2395709177592372&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/ufWcjcomw8aED1RvkicFS1cFibzsvmWjOyXcKjSQuewD7xGJdibqgSgDic9IQr1qnpickERRBLXDm4EB7z2G0GiaeEJQ/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1678&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86152&quot; draggable=&quot;true&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;span data-bgopacity=&quot;40%&quot;/&gt;&lt;span data-bgopacity=&quot;25%&quot;/&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;&lt;span&gt;&lt;strong&gt;2、查询资料找原因&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;查阅资料得知：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-role=&quot;list&quot;/&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-role=&quot;list&quot;/&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-role=&quot;list&quot;/&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;id&lt;/span&gt;,dj_org_code,dj_sku_id,jd_sku_id,yn &lt;span class=&quot;code-snippet__keyword&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;force&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;index&lt;/span&gt;(idx_upc) &lt;span class=&quot;code-snippet__keyword&quot;&gt;where&lt;/span&gt; org_code = xxxx &lt;span class=&quot;code-snippet__keyword&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;id&lt;/span&gt; &amp;gt; &lt;span class=&quot;code-snippet__number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;order&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;asc&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;limit&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;500&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;但是这种写死了索引名称的⽅式，如果以后修改了索引名，容易导致安全隐患。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86122&quot; data-custom=&quot;#138bde&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p data-brushtype=&quot;text&quot;&gt;&lt;span&gt;&lt;strong&gt;五、问题总结&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-role=&quot;list&quot;&gt;&lt;p&gt;&lt;span&gt;1）B端系统也需要考虑对自己系统的保护，接⼊限流等，防止异常流量或者异常调用把自己的系统调&lt;span&gt;死。这次幸亏上游系统是通过MQ调⽤融合API的，可以暂停消费，如果是⽤API调⽤，且流量较⼤，持续让数据库处于⾼压状态，会影响到融合系统的整体稳定性。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-role=&quot;list&quot;&gt;&lt;p&gt;&lt;span&gt;2）针对可能出现的风险点绝不姑息。这次这个分页查询sku的接⼝，之前就看到过，但是当&lt;span&gt;时觉得这个接⼝在数据量较少的情况下性能也还好，而且也有了商家维度的索引，就放过了，考虑后续优化。结果现在就爆出了问题。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-role=&quot;list&quot;&gt;&lt;p&gt;&lt;span&gt;3）针对SQL的优化，上线前要谨慎，而且需要同⼀条SQL，需要针对不同的边界情况（例如这次的多SKU的商家）进⾏反复测试，调整。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-role=&quot;list&quot;&gt;&lt;section&gt;&lt;span&gt;作者丨树洞君&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;来源丨网址：https://juejin.cn/post/7126356005192990750&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;dbaplus社群欢迎广大技术人员投稿，投稿邮箱：editor@dbaplus.cn&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.36086956521739133&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/ufWcjcomw8YY6J547ZhgwY87vBia8l2ic7vAeqPaIJicV0RiacMHFOs2HBwzojCN94ROMWN3hCF1Z5DAwEaibibQSLxQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1150&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.07734375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ufWcjcomw8Zf2jiaBBH3vdgfP4A2rem5YEAHYH074dc4GibhojA5B3lLZrXLDRciaVnficveaHcAUCiaIPoDsTkAduA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>065c0c2cdd74556545fa1c888de428b3</guid>
<title>linux下使用tc控制和模拟网络流量</title>
<link>https://toutiao.io/k/gqlyhft</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;column&quot;&gt;
&lt;p&gt;在 linux 中,TC 有二种控制方法 CBQ 和 HTB.HTB 是设计用来替换 CBQ 的。它是一个层次式的过滤框架.&lt;/p&gt;
&lt;p&gt;TC 包括三个基本的构成块:&lt;/p&gt;
&lt;p&gt;队列规定 qdisc(queueing discipline )、类(class)和分类器(Classifiers)&lt;/p&gt;
&lt;p&gt;TC 中的队列(queueing discipline):&lt;br/&gt;用来实现控制网络的收发速度.通过队列,linux 可以将网络数据包缓存起来,然后根据用户的&lt;/p&gt;
&lt;p&gt;设置,在尽量不中断连接(如 TCP)的前提下来平滑网络流量.需要注意的是,linux 对接收队列的控制不够好,所以我们一般只用发送队列,即“控发不控收”.它封装了其他两个主要 TC 组件(类和分类器)。内核如果需要通过某个网络接口发送数据包,它都需要按照为这个接口配置的 qdisc(排队规则)把数据包加入队列。然后,内核会 尽可能多地从 qdisc 里面取出数据包,把它们交给网络适配器驱动模块。&lt;/p&gt;
&lt;p&gt;最简单的 QDisc 是 pfifo 它不对进入的数据包做任何的处理,数据包采用先入先出的方式通过队列。不过,它会保存网络接口一时无法处理的数据包。&lt;br/&gt;队列规则包括 FIFO(先进先出),RED(随机早期探测),SFQ(随机公平队列)和令牌桶(Token Bucket),类基队列(CBQ),CBQ 是一种超级队列,即它能够包含其它队列(甚至其它 CBQ)。&lt;/p&gt;
&lt;p&gt;TC 中的 Class 类&lt;br/&gt;class 用来表示控制策略.很显然,很多时候,我们很可能要对不同的 IP 实行不同的流量控制策略,这时候我们就得用不同的 class 来表示不同的控制策略了.&lt;/p&gt;
&lt;p&gt;TC 中的 Filter 规则&lt;br/&gt;filter 用来将用户划入到具体的控制策略中(即不同的 class 中).比如,现在,我们想对 xxa,xxb两个 IP 实行不同的控制策略(A,B),这时,我们可用 filter 将 xxa 划入到控制策略 A,将 xxb 划入到控制策略 B,filter 划分的标志位可用 u32 打标功能或 IPtables 的 set-mark (大多使用iptables 来做标记)功能来实现。&lt;br/&gt;目前,TC 可以使用的过滤器有:fwmark 分类器,u32 分类器,基于路由的分类器和 RSVP分类器(分别用于 IPV6、IPV4)等;其中,fwmark 分类器允许我们使用 Linux netfilter 代码选择流量,而 u32 分类器允许我们选择基于 ANY 头的流量 .需要注意的是,filter (过滤器)是在 QDisc 内部,它们不能作为主体。&lt;/p&gt;
&lt;p&gt;TC 的应用流程&lt;br/&gt;数据包-&amp;gt;iptables(在通过 iptables 时,iptables 根据不同的 ip 来设置不同的 mark)-&amp;gt;TC(class)-&lt;/p&gt;
&lt;p&gt;&amp;gt;TC(queue)&lt;/p&gt;
&lt;h2&gt;4. 应用举例&lt;/h2&gt;
&lt;p&gt;假设 eth0 位是服务器的外网网络接口。开始之前,先要清除 eth0 所有队列规则&lt;/p&gt;
&lt;p&gt;tc qdisc del dev eth0 root 2&amp;gt; /dev/null &amp;gt; /dev/null1) 定义最顶层(根)队列规则,并指定 default 类别编号&lt;/p&gt;
&lt;p&gt;tc qdisc add dev eth0 root handle 1: htb default 2&lt;/p&gt;










&lt;/div&gt;










&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>28953bade124b422b76b20b44adae9e0</guid>
<title>一个普通人的前端职业成长之路</title>
<link>https://toutiao.io/k/3c72zuz</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大家好，我是 &lt;strong&gt;「范文杰」&lt;/strong&gt;，一个前端从业者，最近刚写完我的第一本小册《Webpack 核心原理与实践应用》，这对我是一个不小的职业突破，所以不能免俗地想做个总结，分享我这九年工作的成长经历，以及我对前端这个职业的思考与成长建议，希望能帮到哪些还在路上的朋友。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;🦖 起源&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我的职业起点算不上高，6 线海边小镇出身，不知名二本院校毕业，没背景没人脉，所幸在我毕业那会(13 年)就业市场相对还比较宽松，加上大二开始就有意识参加学校各种计算机实验室，提前积累了一些项目实战经验，所以最开始找工作时还算顺利。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.71640625&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/3xDuJ3eiciblk0MuGlJJ9EmQ7R1SaNSj6XWJPeyBibiclbjDkxz2ia8NqHm8BDz09986GkztTY8ibzeWTg5Q3oeuicbyA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/figure&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;图注：我的家乡，广东汕尾红海湾&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;🙇 一家创业公司&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;strong&gt;「2013 年：攻克若干技术点，从一个懵懵懂懂的学生蜕变成能胜任一般工作的打工人」&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我的第一份工作是在一家人数不超过 10 个的超迷你企业，前端就倆人，规范、技术沉淀啥的自然都是空缺的，也一直没人带，但这是我第一次正儿八经能每月拿到固定收入，有稳定的生活与工作节奏，对小镇青年来说并不觉得有啥不妥，整体心态比较平稳，加上我自己本身就爱折腾，总愿意在实现基本功能之余看看有没有更好的工具、方案。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当时国内的才刚开始讨论 &lt;strong&gt;「前后端分离」&lt;/strong&gt; 的概念，主流技术栈还是 jQuery，工程化水平还很低，我是看了不少资料之后，将公司技术栈从 jQuery + JSP 逐渐迁移到 jQuery + Grunt + Require.js + Less + ECharts + Bootstrap + 各种当时眼花缭乱的技术，到现在我还清晰地记得，当时在项目中逐步引入这些工具，并顺利调通落地那一刻的喜悦与兴奋。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这一阶段对我来说，算不上有多深的技术积累，但至少给了我一个相对自由宽松的环境，能让我大胆实践各种技术方面的想法，也让我养成了遇事无解靠自己(Ծ‸Ծ)，主动思考、主动引入新的方式方法解决老旧问题的习惯，可以说是在不断攻克一个个单独的技术点，逐渐 &lt;strong&gt;「从一个懵懵懂懂的学生蜕变成能胜任一般工作的打工人」&lt;/strong&gt;，虽然当时做的很多技术判断并不一定准确，但对我个人而言算是在不断尝试，不断突破，收获很多。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;🤯 另一家创业公司&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;strong&gt;「2015 年：从初阶工程师到中高阶」&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;后来几经辗转，在毕业两年那会(15年)去了另外一家初具规模(50人)的创业公司，当时是另一个合作了比较久也比较资深的服务端同学对我青睐有加，推荐我当了前端主管，虽然刚进去时这个所谓的前端团队还比较小 —— 加上我就一个人🙂。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;进去之后，很多时间花在招聘、组建团队、新人培训、梳理开发规范、梳理合作流程等事务性工作上，留给自己写代码(其实至今我都没有放弃写代码)的时间比较少，当时完全是赶鸭子上架😖，管理方式以及对事物、行业、技术的认知都非常不成熟，做过一些荒唐事，印象很深的是当时因为招聘进度不理想，写了篇文章《前端，我为什么不要你》发牢骚😭，文章内容真实但很不着调，当时被喷得直接关了账号不敢再去看评论了。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;考古文：《前端，为什么不要你(https://www.cnblogs.com/vans/p/4550356.html)》，轻喷，原谅我当时的不成熟。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;刚进去那会，公司几个主要应用都是找了一群学生基于 jQuery + PHP 写的，代码量很大又非常混乱，性能差 Bug 多，文档奇缺，几乎命中了一个软件项目能想到的所有糟糕特点，基本上是没法继续往下写了🤬。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8544600938967136&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/3xDuJ3eiciblk0MuGlJJ9EmQ7R1SaNSj6X43bArPs0ND2Dibh3sDLJUA3aBNDNcaX8DghaVMoL20MXmUUW9oMSVLg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;639&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以虽然人力有限，我需要做的第一件事情就是重新设计一套更健壮、可维护迭代、协作效率更高的前端架构与开发工作流，这意外地沉淀了一些在当时看起来挺酷的技术栈，包括：RequireJS、Sass、Glup、Browserify，以及 Angular@1.x。这些技术点在当时都算比较新颖，中文资料很少，所以我在自己学完之后，还得花许多时间做团队培训、梳理实战案例、剖析技术原理等。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其次，在组建团队过程中我逐渐意识到，约定不如规范，规范不如工具，所以在常规培训之余，还围绕 Angular 做了一些脚手架工具、插件，制定了 ESLint 开发规则，引入自动化测试工具等，企图尽可能把繁琐的事情都交给“工具”实现。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最后结果还算比较幸运，磕磕绊绊地总算是建了一支十个人左右的团队，在预期时间内把事情做完，这些花费大量心血的技术设计、规则规范、工具也都能顺利落地，即便在后面我离开后还一直被沿用，直到这家公司也宣布破产。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个阶段让我开始有一丢丢 &lt;strong&gt;「开窍」&lt;/strong&gt; 的感觉，让我走出熟悉的领域主动接触更大更宽广的技术面；初步学会从管理者视角去 Review 技术应用于技术本身的价值；重视团队协作、规范、工具、效率，也初步习得一些 MVVM、OOP/FP、工程化之类的思维，算是 &lt;strong&gt;「从一个初阶工程师逐步在往中高阶迈进」&lt;/strong&gt;。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;👾 腾讯&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;strong&gt;「2016 年：虚无」&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;再往后， 16 年很幸运进了我职业生涯第一个真正意义上的大厂：腾讯，这个过程并不顺利，前前后后面了差不多有 10 个不同岗位，才终于勉强被相中了(🥴)。腾讯是我那时候最大的职业目标，当时认为这是对自身能力的一种比较高的市场认可，能达成这个目标的话，后面职业生涯应该会顺利许多。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;腾讯是我待过最舒服的公司了，工作压力不大，幸福感非常强，但慢慢地真就变成了拧螺丝钉的角色，变得堕怠，这里面有很多因素，但主因还是我自己的性格并不适合这种四平八稳的工作节奏，不知不觉就习惯了套用团队里面各种现成、成熟的方式方法解决业务问题，效率是高，但对个人没有太大的技术成长空间与思考余地。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以，这个阶段在工作上陷入了相同技能反复使用的境地，技术增长基本为 0，除了业余时间自己捡起来学习的各种计算机基础知识之外，基本没有输入，这种情况让我感觉非常焦虑，自然是呆不长久了，短短 2 年就选择撤离了。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;防喷：不是腾讯不好，只是它不适合当时的我。&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;🕵️ 再次进入创业公司&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;strong&gt;「2018 年：从单个面的技术应用者到立体的系统设计者」&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从腾讯出来之后，选择面还挺广，经过一番对比最终去了一家小而美的人工智能创业公司。这家公司加总不到 100 号人，全职前端也才 4 个，但却是软银在中国投资的人工智能公司，国内国外获奖无数，创始人、算法负责人、技术负责人背景都很强，在我看来前景无限又有足够大的发挥空间，完美契合我对“小而美”的所有想象。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这家公司也确实符合我大部分预期，Leader 给予了足够的信任与授权，让我放手大干一番：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;刚进去 3 个月就吭哧吭哧把所有业务系统全部重构了一遍；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;在原有技术栈(Vue)基础上引入了许多新工具，重新定义规范、最佳实践、工程化方法论；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;优化核心系统架构，并总结一系列较简易的开发模式(屠龙勇士终成恶龙？)让新同学能够低成本、高效率参与到开发；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;识别业务同学的痛点难点，业余时间捣鼓了不少提效工具，包括：JSON 数据可视化、JSON 数据流式处理框架、基于 MXGraph 的流程图编辑器等；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;等等。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果说前面都在 &lt;strong&gt;「厚积」&lt;/strong&gt; 的话，这个阶段是真让我狠狠 &lt;strong&gt;「薄发」&lt;/strong&gt; 了一番，并且很幸运的一直没出过啥差错，慢慢的公司甚至让我带着服务端、数据、算法、产品等不同职能的同学一起做更多事情，走出前端职能角色站在更高更全面视角审视业务需求、设计应用系统、组织开发节奏等，&lt;strong&gt;「从单个面的技术应用者进化为更立体更成熟的系统设计者」&lt;/strong&gt;，能串起不同职能的同学一起，完完整整地做好一个稍具复杂度的业务方向。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;🥷 字节&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;strong&gt;「2020 年，未来可期」&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;接着，就来到我现在所在的公司 —— 字节跳动，面试过程其实不太顺利，四轮技术一轮 HR，一路有惊无险侥幸过关，进来之后整体感受还是很符合预期的：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;文化自由，不讲究 Title，我接触到的绝大多数研发岗位也都没有所谓政治考量，基本都不看背景看能力；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;只要你愿意，有一堆值得你做的技术 or 流程优化、重构，甚至创造，没人会阻拦你！&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果你能把事情的价值说清楚，那即使你只是一个一线同学，都能撬动不少资源帮你做这件事情；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;公司内也有许多接触社区的机会，我也是在了解到这些渠道之后才慢慢开始写博客，写小册，去青训营当讲师，等等；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;公司内有太多技术能力非常强的人了，数不胜数，我甚至遇到过一个让我很是自愧不如的实习生，实习生(bn)！！！！&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;等等。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在这里我做过不少有意思的事情，承蒙身边同学关照，技术、管理、软素质、行业认知各个方面都有所长进。并且字节的诸多文化观也逐渐影响到我的业余生活，让我在工作之余开始做一些一直想做但没做好的事情，例如最近刚写完的 &lt;strong&gt;「Webpack5 核心原理与应用实践」&lt;/strong&gt; 小册：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.2253968253968254&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/3xDuJ3eiciblk0MuGlJJ9EmQ7R1SaNSj6XFlgGq1t7rgKsib4FddlNQbvFq1TibdCxJVQYnibLSaUvyJc8LLoym1Evg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1890&quot;/&gt;&lt;/figure&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;小册地址：https://juejin.cn/book/7115598540721618944&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;虽然这对很多 &lt;strong&gt;「大佬」&lt;/strong&gt; 来说并不算什么难事，但于我已经是一个非常大的职业里程碑，我几乎把 Webpack 的所有功能都调试了一遍，所有代码都看了一遍，花了大半年时间，跟小编重复打磨了许多次，才攒出来这么一本书，我个人对这本书的内容质量还是比较有信心的，希望能帮到需要的同学。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;未来我会在业余时间继续做更多的事情，包括写文章、做开源、吃海鲜，偶尔帮一些有缘分的同学做做职业辅导、职业规划，等等，希望能见到一个更大的世界。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;☄️ 小结&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;回顾这么些年，从最开始的不知名创业小公司，到现在进了还算前列的字节跳动并且能输出一些社区作品，虽然放在行业大背景看啥都不是，但对我这种小镇青年来说已经非常不错，虽然运气成分居多，但也有一些人为的、刻意的努力在里面：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;最开始懵懵懂懂一知半解，死死抓住一个机会努力学习特定技能，满足 —— 甚至超越工作需求；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;由点到面，深挖某个有前景的技术体系，将之转化为技术设计应用到业务中，并且将之沉淀为可复用的经验，帮助别人成长；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;厚积薄发，用自己的技能与经验，创造出适合业务场景、团队背景的技术方案与工具，跳出角色职能帮助业务拿结果；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;向外拓展，在行业大背景下寻求更多成功机会。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;虽然有点马后炮，但其实这也是适合大多数普通人的职业发展路径：&lt;strong&gt;「胜任 =&amp;gt; 精进 =&amp;gt; 创造 =&amp;gt; 影响力」&lt;/strong&gt;。在今年这种寒冬背景下，我觉得我们在焦虑之余更需要静下心来思考怎么走好下一步，让自己尽快走入职业安全区，希望这条路径能帮到你，共勉！&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;🦅 一些浅薄的观点&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这么捋下来，我已经工作了差不多十个年头，前前后后大中小型公司都待过，算是比许多小同学虚长几岁，阅历丰富一丢丢了，所以有一些关于前端职业与个人成长的观点挺想分享一下的，抛砖引玉吧。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「Q: 前端天花板很低？🤔」&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有不少人觉得前端天花板很多，这个观点我是不敢苟同的，以我为例，虽然已经工作了 10 年，但还有非常多不懂的东西，离所谓“天花板”还十万八千里呢。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其次，前端领域虽然比较少出现服务端那种高并发计算场景，但也有不少复杂的事情可以做，比如：工程化、编辑器、可视化、 IDE 等等，这些方向每一个拆解下去又会有许多复杂的技术点，都值得长时间的投入、学习，也都能为你带来长远的职业发展空间。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以，可能哪些一直鼓吹“前端天花板很低”的人，要么是天才，要么只是还处在 &lt;strong&gt;「愚昧之巅」&lt;/strong&gt; 罢了。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5909471919530596&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/3xDuJ3eiciblk0MuGlJJ9EmQ7R1SaNSj6X1TEYQDUqhu7yiaScicfJiaygVWPyuvhjt2m0ia1evqNWedsNbZicw9rTkLg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1193&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「Q: 遭遇职业迷茫，觉得自己潜力低，成长性差，怎么办？🤔」&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最近一年各种机缘巧合，跟许多不同年龄层的同学有过接触，我发现大多数人其实并没有明确、具体的职业成长规划，没有想清楚自己当下该做些什么，未来该往那走，整体过的比较迷茫也比较焦虑。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;归根结底，我认为这些同学不是不想，而是实在不能或者不会，这里面有些是工作 &lt;strong&gt;「太忙」&lt;/strong&gt; 了，消耗了大部分精力，无暇思考；有些是对行业缺乏必要 &lt;strong&gt;「认知」&lt;/strong&gt;，不懂得结合自身情况做出合适的判断与选择；还有很多是严重 &lt;strong&gt;「缺乏自信」&lt;/strong&gt;，过度妄自菲薄踌躇不前，等等。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;咋说呢，这个问题没有标准答案，而且展开来值得另外写一篇长长的文章，所以这里我只想分享一个简单的思维模式：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;设定一个具体、时间粒度合适的目标(参考 Star 原则)，例如在 3 年内到达 xx 职级；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;倒推回来，为了达成这个目标你需要具备哪些方面的能力(不是技能)，做出哪些成果？包括技术上的、软素质上的、管理上的，画成一个思维导图；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;再倒推回来，就着这些能力与成果设定若干时间粒度更小(双月)的里程碑，定期 Review、纠偏。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;每一个步骤都并不容易，特别是，怎么锻炼能力？有两个思路，一是找一份完全匹配你能力水平与成长目标的工作，这需要天时地利人和，并不容易；二是在日常业务工作之外&lt;strong&gt;「主动」&lt;/strong&gt;学习、&lt;strong&gt;「主动」&lt;/strong&gt;争取机会、&lt;strong&gt;「主动」&lt;/strong&gt;创造场景，&lt;strong&gt;「主动」&lt;/strong&gt;去做一些别人并没有要求你必须做，但你又觉得正确的事。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「Q: 我当下做什么，收益最大？🤔」&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;讲真，我哪知道。。。不过有一个比较通用的思路：&lt;strong&gt;「构建自己的核心竞争力」&lt;/strong&gt;！这句话是几年我面试微信被拒时，面试官送给我的话，当时有种很强烈的醍醐灌顶的感觉，在此之后我才算是有耐心去做一些长久的事情。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其实有很多同学 —— 特别是哪些刚毕业没多久的，都会觉得技术栈全一点，能力模型立体一点，会更有市场，所以啥都会去学一下，雨露均沾。但事实恰恰相反，优秀团队对人才的画像基本上都首先是深度，在具备足够深度的基础上才会考虑广度，这也是为什么现在面试动辄追问实现原理的原因。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以，如果你实在不知道自己该往那个方向努力，实在憋不出所谓的职业规划，可以考虑先找到自己最最擅长的技术点，然后花足够多的时间扎扎实实学深学透，&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;关于这方面，之前有位同学的文章已经总结的比较详细了：https://juejin.cn/post/7139158428785737758 。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Blabla~~，太多了，就不往下写了🤐🤐🤐，有兴趣跟我继续探讨，或者处于职业迷茫期的同学也可以 &lt;strong&gt;「加我微信」&lt;/strong&gt;聊聊。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;1.3547486033519553&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/3xDuJ3eiciblk0MuGlJJ9EmQ7R1SaNSj6XaGkJFY4FA8posgQHyDAa1zAV8bN9aGR77mMDibnkZzkYNU2mMhcUMWw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1074&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;🦀 成长建议&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最后分享一些，我个人觉得还比较有用的建议：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;🦑 保持职业敏感度，不要轻易放过你遇到的大大小小问题，持续折腾持续迭代，做一个有技术追求的人；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;🐠 做正确的事 —— 不是难的事，也不是简单的事，是正确的事！！！&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;🦈 当断则断，假若工作真的无法给你带来成长，或者给你造成过大的内耗，就趁早做决定吧；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;🦞 深度远比广度重要的多，你应该优先发展自己的&lt;strong&gt;「核心竞争力」&lt;/strong&gt;，而不是看到啥新奇的东西都往上凑；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;🦐 走出去，主动了解这个行业，多找老江湖聊聊，了解什么阶段的人需要达到什么程度的技术水平，个人达到什么状态之后职业安全性会更强，等等；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;🐙 人在事前，保持开放，多交点朋友；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;🐡 坚持不一定都会达成预期目标，但如果你没有其它更好的选择，那就沉下心来先做好一件事吧；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;🐟 最好的学习方法是自学，不过最好旁边偶尔能有人点拨一两句；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;🫕 注意身体，保持锻炼💪，保持乐观🥳，时不时可以来一句：新年快乐🧨🧨🧨~&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;没了，主要是找不到合适的 emoji 了。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>