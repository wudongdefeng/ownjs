<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>7de6974fd8534a8ef820ff5ae0e14b8d</guid>
<title>Redis 突然变慢了如何排查并解决？</title>
<link>https://toutiao.io/k/4ihru9o</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Redis 通常是我们业务系统中一个重要的组件，比如：缓存、账号登录信息、排行榜等。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一旦 Redis 请求延迟增加，可能就会导致业务系统“雪崩”。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我在单身红娘婚恋类型互联网公司工作，在双十一推出下单就送女朋友的活动。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;谁曾想，凌晨 12 点之后，用户量暴增，出现了一个技术故障，用户无法下单，当时老大火冒三丈！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;经过查找发现 &lt;a href=&quot;https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzkzMDI1NjcyOQ==&amp;amp;action=getalbum&amp;amp;album_id=1918295695426404359&amp;amp;scene=173&amp;amp;from_msgid=2247487752&amp;amp;from_itemidx=1&amp;amp;count=3&amp;amp;nolastread=1#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;Redis&lt;/a&gt; 报 &lt;code&gt;Could not get a resource from the pool&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;获取不到连接资源，并且集群中的单台 Redis 连接量很高。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大量的流量没了 Redis 的缓存响应，直接打到了 MySQL，最后数据库也宕机了……&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;于是各种更改最大连接数、连接等待数，虽然报错信息频率有所缓解，但还是&lt;strong&gt;持续报错&lt;/strong&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;后来经过线下测试，发现存放 &lt;a href=&quot;https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzkzMDI1NjcyOQ==&amp;amp;action=getalbum&amp;amp;album_id=1918295695426404359&amp;amp;scene=173&amp;amp;from_msgid=2247487752&amp;amp;from_itemidx=1&amp;amp;count=3&amp;amp;nolastread=1#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;Redis&lt;/a&gt; 中的&lt;strong&gt;字符数据很大，平均 1s 返回数据&lt;/strong&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以发现，一旦 Redis 延迟过高，会引发各种问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;今天「码哥」跟大家一起来分析下如何确定 Redis 有性能问题和解决方案。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;目录&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mp-common-profile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-id=&quot;MzkzMDI1NjcyOQ==&quot; data-pluginname=&quot;mpprofile&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/EoJib2tNvVtf7icAmS0BQH6oDVG37Q8NzcfdguS5qAqOhfxvZyIKqmuX5BbnDjynrBbZzktp1EiaeFLzapp1nHysw/0?wx_fmt=png&quot; data-nickname=&quot;码哥字节&quot; data-alias=&quot;MageByte&quot; data-signature=&quot;拥抱硬核技术和对象，面向人民币编程。&quot; data-from=&quot;0&quot; data-is_biz_ban=&quot;0&quot;/&gt;&lt;/section&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;Redis 性能出问题了么？&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最大延迟是客户端发出命令到客户端收到命令的响应的时间，正常情况下 Redis 处理的时间极短，在微秒级别。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当 Redis 出现性能波动的时候，比如达到几秒到十几秒，这个很明显我们可以认定 Redis 性能变慢了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有的硬件配置比较高，当延迟 0.6ms，我们可能就认定变慢了。硬件比较差的可能 3 ms 我们才认为出现问题。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;p&gt;那我们该如何定义 Redis 真的变慢了呢？&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以，我们需要对当前环境的 &lt;strong&gt;Redis 基线性能&lt;/strong&gt;做测量，也就是在一个系统在低压力、无干扰情况下的基本性能。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;当你发现 Redis 运行时时的延迟是基线性能的 2 倍以上，就可以判定 Redis 性能变慢了。&lt;/strong&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;延迟基线测量&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;redis-cli 命令提供了&lt;code&gt;–intrinsic-latency&lt;/code&gt; 选项，用来监测和统计测试期间内的最大延迟（以毫秒为单位），这个延迟可以作为 Redis 的基线性能。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;redis-cli --latency -h `host` -p `port`&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如执行如下指令：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;redis-cli --intrinsic-latency 100&lt;br/&gt;Max latency so far: 4 microseconds.&lt;br/&gt;Max latency so far: 18 microseconds.&lt;br/&gt;Max latency so far: 41 microseconds.&lt;br/&gt;Max latency so far: 57 microseconds.&lt;br/&gt;Max latency so far: 78 microseconds.&lt;br/&gt;Max latency so far: 170 microseconds.&lt;br/&gt;Max latency so far: 342 microseconds.&lt;br/&gt;Max latency so far: 3079 microseconds.&lt;br/&gt;&lt;br/&gt;45026981 total runs (avg latency: 2.2209 microseconds / 2220.89 nanoseconds per run).&lt;br/&gt;Worst run took 1386x longer than the average latency.&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;p&gt;注意：参数&lt;code&gt;100&lt;/code&gt;是测试将执行的秒数。我们运行测试的时间越长，我们就越有可能发现延迟峰值。&lt;/p&gt;&lt;p&gt;通常运行 100 秒通常是合适的，足以发现延迟问题了，当然我们可以选择不同时间运行几次，避免误差。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;「码哥」运行的最大延迟是 3079 微秒，所以基线性能是 3079 （3 毫秒）微秒。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;需要注意的是，我们要在 Redis 的服务端运行，而不是客户端。这样，可以&lt;strong&gt;避免网络对基线性能的影响&lt;/strong&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以通过 &lt;code&gt;-h host -p port&lt;/code&gt; 来连接服务端，如果想监测网络对 Redis 的性能影响，可以使用 Iperf 测量客户端到服务端的网络延迟。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果网络延迟几百毫秒，说明网络可能有其他大流量的程序在运行导致网络拥塞，需要找运维协调网络的流量分配。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;慢指令监控&lt;/span&gt;&lt;/h2&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;p&gt;如何判断是否是慢指令呢？&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;看操作复杂度是否是&lt;code&gt;O(N)&lt;/code&gt;。官方文档对每个命令的复杂度都有介绍，尽可能使用&lt;code&gt;O(1) 和 O(log N)&lt;/code&gt;命令。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;涉及到集合操作的复杂度一般为&lt;code&gt;O(N)&lt;/code&gt;，比如集合&lt;strong&gt;全量查询&lt;/strong&gt;&lt;code&gt;HGETALL、SMEMBERS&lt;/code&gt;，以及集合的&lt;strong&gt;聚合操作：&lt;/strong&gt;SORT、LREM、 SUNION等。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;p&gt;有监控数据可以观测呢？代码不是我写的，不知道有没有人用了慢指令。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有两种方式可以排查到：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;使用 Redis 慢日志功能查出慢命令；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;latency-monitor（延迟监控）工具。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;此外，可以使用自己（top、htop、prstat 等）快速检查 Redis 主进程的 CPU 消耗。如果 CPU 使用率很高而流量不高，通常表明使用了慢速命令。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;慢日志功能&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Redis 中的 slowlog 命令可以让我们快速定位到那些超出指定执行时间的慢命令，默认情况下命令若是执行时间超过 10ms 就会被记录到日志。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;slowlog 只会记录其命令执行的时间，不包含 io 往返操作，也不记录单由网络延迟引起的响应慢。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们可以&lt;strong&gt;根据基线性能来自定义慢命令的标准（配置成基线性能最大延迟的 2 倍）&lt;/strong&gt;，调整触发记录慢命令的阈值。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以在 redis-cli 中输入以下命令配置记录 6 毫秒以上的指令：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;redis-cli CONFIG SET slowlog-log-slower-than 6000&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;也可以在 Redis.config 配置文件中设置，以微秒为单位。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;想要查看所有执行时间比较慢的命令，可以通过使用 Redis-cli 工具，输入 slowlog get 命令查看，返回结果的第三个字段以微秒位单位显示命令的执行时间。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;假如只需要查看最后 2 个慢命令，输入 slowlog get 2 即可。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;示例：获取最近2个慢查询命令&lt;br/&gt;127.0.0.1:6381&amp;gt; SLOWLOG get 2&lt;br/&gt;1) 1) (&lt;span&gt;integer&lt;/span&gt;) 6&lt;br/&gt;   2) (&lt;span&gt;integer&lt;/span&gt;) 1458734263&lt;br/&gt;   3) (&lt;span&gt;integer&lt;/span&gt;) 74372&lt;br/&gt;   4) 1) &lt;span&gt;&quot;hgetall&quot;&lt;/span&gt;&lt;br/&gt;      2) &lt;span&gt;&quot;max.dsp.blacklist&quot;&lt;/span&gt;&lt;br/&gt;2) 1) (&lt;span&gt;integer&lt;/span&gt;) 5&lt;br/&gt;   2) (&lt;span&gt;integer&lt;/span&gt;) 1458734258&lt;br/&gt;   3) (&lt;span&gt;integer&lt;/span&gt;) 5411075&lt;br/&gt;   4) 1) &lt;span&gt;&quot;keys&quot;&lt;/span&gt;&lt;br/&gt;      2) &lt;span&gt;&quot;max.dsp.blacklist&quot;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以第一个 HGET 命令为例分析，每个 slowlog 实体共 4 个字段：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;字段 1：1 个整数，表示这个 slowlog 出现的序号，server 启动后递增，当前为 6。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;字段 2：表示查询执行时的 Unix 时间戳。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;字段 3：表示查询执行微秒数,当前是 74372 微秒,约 74ms。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;字段 4: 表示查询的命令和参数,如果参数很多或很大,只会显示部分参数个数。当前命令是&lt;code&gt;hgetall max.dsp.blacklist&lt;/code&gt;。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;Latency Monitoring&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Redis 在 2.8.13 版本引入了 Latency Monitoring 功能，用于以秒为粒度监控各种事件的发生频率。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;启用延迟监视器的第一步是&lt;strong&gt;设置延迟阈值(单位毫秒)&lt;/strong&gt;。只有超过该阈值的时间才会被记录，比如我们根据基线性能（3ms）的 3 倍设置阈值为 9 ms。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以用 redis-cli 设置也可以在 Redis.config 中设置；&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;CONFIG SET latency-monitor-threshold 9&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;工具记录的相关事件的详情可查看官方文档：https://redis.io/topics/latency-monitor&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如获取最近的 latency&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;127.0.0.1:6379&amp;gt; debug sleep 2&lt;br/&gt;OK&lt;br/&gt;(2.00s)&lt;br/&gt;127.0.0.1:6379&amp;gt; latency latest&lt;br/&gt;1) 1) &quot;command&quot;&lt;br/&gt;   2) (integer) 1645330616&lt;br/&gt;   3) (integer) 2003&lt;br/&gt;   4) (integer) 2003&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;事件的名称；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;事件发生的最新延迟的 Unix 时间戳；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;毫秒为单位的时间延迟；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;该事件的最大延迟。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;如何解决 Redis 变慢？&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Redis 的数据读写由单线程执行，如果主线程执行的操作时间太长，就会导致主线程阻塞。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一起分析下都有哪些操作会阻塞主线程，我们又该如何解决？&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;网络通信导致的延迟&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;客户端使用 TCP/IP 连接或 Unix 域连接连接到 Redis。1 Gbit/s 网络的典型延迟约为 200 us。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;redis 客户端执行一条命令分 4 个过程：&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;p&gt;发送命令－〉 命令排队 －〉 命令执行－〉 返回结果&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个过程称为 Round trip time(简称 RTT, 往返时间)，mget mset 有效节约了 RTT，但大部分命令（如 hgetall，并没有 mhgetall）不支持批量操作，需要消耗 N 次 RTT ，这个时候需要 pipeline 来解决这个问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Redis pipeline 将多个命令连接在一起来减少网络响应往返次数。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.2943327239488116&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EoJib2tNvVtchfpRuhJYeeDiaYOGTwe8LCkrm37hmdheA6YCjDK4CYLbn1AM1GLdb0WJiaIJjib3mbsJfDY91eg5ag/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;547&quot;/&gt;&lt;figcaption&gt;redis-pipeline&lt;/figcaption&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;慢指令导致的延迟&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;根据上文的慢指令监控查询文档，查询到慢查询指令。可以通过以下两种方式解决：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;比如在 Cluster 集群中，将聚合运算等 O(N) 操作运行在 slave 上，或者在客户端完成。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;使用高效的命令代替。使用增量迭代的方式，避免一次查询大量数据，具体请查看SCAN、SSCAN、HSCAN和ZSCAN命令。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;除此之外，生产中禁用KEYS 命令，它只适用于调试。因为它会遍历所有的键值对，所以操作延时高。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;Fork 生成 RDB 导致的延迟&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzkzMDI1NjcyOQ==&amp;amp;mid=2247487758&amp;amp;idx=1&amp;amp;sn=beb5918bb61948b2920907f54510311f&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;生成 RDB 快照&lt;/a&gt;，Redis 必须 fork 后台进程。&lt;strong&gt;fork 操作（在主线程中运行）本身会导致延迟。&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Redis 使用操作系统的多进程&lt;strong&gt;写时复制技术 COW(Copy On Write)&lt;/strong&gt; 来实现快照持久化，减少内存占用。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5952782462057336&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EoJib2tNvVtchfpRuhJYeeDiaYOGTwe8LCxibsWZ4zs0YQdHAN4JESUCreoQaPYpjvs0poib8KehJsIvlsgicicoia2Lg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;593&quot;/&gt;&lt;figcaption&gt;写时复制技术保证快照期间数据可修改&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但 fork 会涉及到复制大量链接对象，一个 24 GB 的大型 Redis 实例需要 24 GB / 4 kB * 8 = 48 MB 的页表。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;执行 bgsave 时，这将涉及分配和复制 48 MB 内存。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;此外，&lt;strong&gt;从库加载 RDB 期间无法提供读写服务，所以主库的数据量大小控制在 2~4G 左右，让从库快速的加载完成&lt;/strong&gt;。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;内存大页（transparent huge pages）&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;常规的内存页是按照 4 KB 来分配，Linux 内核从 2.6.38 开始支持内存大页机制，该机制支持 2MB 大小的内存页分配。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Redis 使用了 fork 生成 &lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzkzMDI1NjcyOQ==&amp;amp;mid=2247487758&amp;amp;idx=1&amp;amp;sn=beb5918bb61948b2920907f54510311f&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;RDB 做持久化提供了数据可靠性保证&lt;/a&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当生成 RDB 快照的过程中，Redis 采用**&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzkzMDI1NjcyOQ==&amp;amp;mid=2247487758&amp;amp;idx=1&amp;amp;sn=beb5918bb61948b2920907f54510311f&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;写时复制&lt;/a&gt;**技术使得主线程依然可以接收客户端的写请求。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;也就是当数据被修改的时候，Redis 会复制一份这个数据，再进行修改。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;采用了内存大页，生成 RDB 期间，即使客户端修改的数据只有 50B 的数据，Redis 需要复制 2MB 的大页。当写的指令比较多的时候就会导致大量的拷贝，导致性能变慢。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用以下指令禁用 Linux 内存大页即可：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;echo never &amp;gt; /sys/kernel/mm/transparent_hugepage/enabled&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;swap：操作系统分页&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当物理内存（内存条）不够用的时候，将部分内存上的数据交换到 swap 空间上，以便让系统不会因内存不够用而导致 oom 或者更致命的情况出现。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当某进程向 OS 请求内存发现不足时，OS 会把内存中暂时不用的数据交换出去，放在 SWAP 分区中，这个过程称为 SWAP OUT。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当某进程又需要这些数据且 OS 发现还有空闲物理内存时，又会把 SWAP 分区中的数据交换回物理内存中，这个过程称为 SWAP IN。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;内存 swap 是操作系统里将内存数据在内存和磁盘间来回换入和换出的机制，涉及到磁盘的读写。&lt;/strong&gt;&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;p&gt;触发 swap 的情况有哪些呢？&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于 Redis 而言，有两种常见的情况：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;Redis 使用了比可用内存更多的内存；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;与 Redis 在同一机器运行的其他进程在执行大量的文件读写 I/O 操作（包括生成大文件的 RDB 文件和 AOF 后台线程），文件读写占用内存，导致 Redis 获得的内存减少，触发了 swap。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;p&gt;码哥，我要如何排查是否因为 swap 导致的性能变慢呢？&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Linux 提供了很好的工具来排查这个问题，所以当怀疑由于交换导致的延迟时，只需按照以下步骤排查。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;获取 Redis 实例 pid&lt;/span&gt;&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;$&lt;/span&gt;&lt;span&gt; redis-cli info | grep process_id&lt;/span&gt;&lt;br/&gt;process_id:13160&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;进入此进程的 /proc 文件系统目录：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;cd /proc/13160&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在这里有一个 smaps 的文件，该文件描述了 Redis 进程的内存布局，运行以下指令，用 grep 查找所有文件中的 Swap 字段。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;$ cat smaps | egrep &lt;span&gt;&#x27;^(Swap|Size)&#x27;&lt;/span&gt;&lt;br/&gt;Size:                316 kB&lt;br/&gt;Swap:                  0 kB&lt;br/&gt;Size:                  4 kB&lt;br/&gt;Swap:                  0 kB&lt;br/&gt;Size:                  8 kB&lt;br/&gt;Swap:                  0 kB&lt;br/&gt;Size:                 40 kB&lt;br/&gt;Swap:                  0 kB&lt;br/&gt;Size:                132 kB&lt;br/&gt;Swap:                  0 kB&lt;br/&gt;Size:             720896 kB&lt;br/&gt;Swap:                 12 kB&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;每行 Size 表示 Redis 实例所用的一块内存大小，和 Size 下方的 Swap 对应这块 Size 大小的内存区域有多少数据已经被换出到磁盘上了。&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;如果 Size == Swap 则说明数据被完全换出了。&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以看到有一个 720896 kB 的内存大小有 12 kb 被换出到了磁盘上（仅交换了 12 kB），这就没什么问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Redis 本身会使用很多大小不一的内存块，所以，你可以看到有很多 Size 行，有的很小，就是 4KB，而有的很大，例如 720896KB。不同内存块被换出到磁盘上的大小也不一样。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;敲重点了&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;如果 Swap 一切都是 0 kb，或者零星的 4k ，那么一切正常。&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;当出现百 MB，甚至 GB 级别的 swap 大小时，就表明，此时，Redis 实例的内存压力很大，很有可能会变慢。&lt;/strong&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;解决方案&lt;/span&gt;&lt;/h3&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;增加机器内存；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;将 Redis 放在单独的机器上运行，避免在同一机器上运行需要大量内存的进程，从而满足 Redis 的内存需求；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;增加 Cluster 集群的数量分担数据量，减少每个实例所需的内存。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;AOF 和磁盘 I/O 导致的延迟&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为了保证数据可靠性，&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzkzMDI1NjcyOQ==&amp;amp;mid=2247487758&amp;amp;idx=1&amp;amp;sn=beb5918bb61948b2920907f54510311f&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;Redis 使用 AOF 和 RDB 快照实现快速恢复和持久化&lt;/a&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以使用 appendfsync 配置将 AOF 配置为以三种不同的方式在磁盘上执行 write 或者 fsync （可以在运行时使用 &lt;strong&gt;CONFIG SET&lt;/strong&gt;命令修改此设置，比如：&lt;code&gt;redis-cli CONFIG SET appendfsync no&lt;/code&gt;）。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;no&lt;/strong&gt;：Redis 不执行 fsync，唯一的延迟来自于 write 调用，write 只需要把日志记录写到内核缓冲区就可以返回。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;everysec&lt;/strong&gt;：Redis 每秒执行一次 fsync。使用后台子线程异步完成 fsync 操作。最多丢失 1s 的数据。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;always&lt;/strong&gt;：每次写入操作都会执行 fsync，然后用 OK 代码回复客户端（实际上 Redis 会尝试将同时执行的许多命令聚集到单个 fsync 中），没有数据丢失。在这种模式下，性能通常非常低，强烈建议使用快速磁盘和可以在短时间内执行 fsync 的文件系统实现。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;我们通常将 Redis 用于缓存，数据丢失完全恶意从数据获取，并不需要很高的数据可靠性，建议设置成 no 或者 everysec。&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;除此之外，避免 AOF 文件过大， Redis 会进行 AOF 重写，生成缩小的 AOF 文件。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以把配置项 &lt;code&gt;no-appendfsync-on-rewrite&lt;/code&gt;设置为 yes，表示在 AOF 重写时，不进行 fsync 操作。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;也就是说，Redis 实例把写命令写到内存后，不调用后台线程进行 fsync 操作，就直接返回了。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;expires 淘汰过期数据&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Redis 有两种方式淘汰过期数据：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;惰性删除：当接收请求的时候发现 key 已经过期，才执行删除；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;定时删除：每 100 毫秒删除一些过期的 key。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;定时删除的算法如下：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;随机采样 A&lt;code&gt;CTIVE_EXPIRE_CYCLE_LOOKUPS_PER_LOOP&lt;/code&gt;个数的 key，删除所有过期的 key；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;如果发现还有超过 25% 的 key 已过期，则执行步骤一。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;ACTIVE_EXPIRE_CYCLE_LOOKUPS_PER_LOOP&lt;/code&gt;默认设置为 20，每秒执行 10 次，删除 200 个 key 问题不大。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果触发了第二条，就会导致 Redis 一致在删除过期数据去释放内存。&lt;strong&gt;而删除是阻塞的。&lt;/strong&gt;&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;p&gt;码哥，触发条件是什么呀？&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;也就是大量的 key 设置了相同的时间参数。同一秒内，大量 key 过期，需要重复删除多次才能降低到 25% 以下。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;简而言之：大量同时到期的 key 可能会导致性能波动。&lt;/strong&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;解决方案&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果一批 key 的确是同时过期，可以在 &lt;code&gt;EXPIREAT&lt;/code&gt; 和 &lt;code&gt;EXPIRE&lt;/code&gt; 的过期时间参数上，&lt;strong&gt;加上一个一定大小范围内的随机数&lt;/strong&gt;，这样，既保证了 key 在一个邻近时间范围内被删除，又避免了同时过期造成的压力。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;bigkey&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通常我们会将含有较大数据或含有大量成员、列表数的 Key 称之为大 Key，下面我们将用几个实际的例子对大 Key 的特征进行描述：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;一个 STRING 类型的 Key，它的值为 5MB（数据过大）&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;一个 LIST 类型的 Key，它的列表数量为 10000 个（列表数量过多）&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;一个 ZSET 类型的 Key，它的成员数量为 10000 个（成员数量过多）&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;一个 HASH 格式的 Key，它的成员数量虽然只有 1000 个但这些成员的 value 总大小为 10MB（成员体积过大）&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;bigkey 带来问题如下：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;Redis 内存不断变大引发 OOM，或者达到 maxmemory 设 置值引发写阻塞或重要 Key 被逐出；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Redis Cluster 中的某个 node 内存远超其余 node，但因 Redis Cluster 的数据迁移最小粒度为 Key 而无法将 node 上的内存均衡化；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;bigkey 的读请求占用过大带宽，自身变慢的同时影响到该服务器上的其它服务；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;删除一个 bigkey 造成主库较长时间的阻塞并引发同步中断或主从切换；&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;查找 bigkey&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用 redis-rdb-tools 工具以定制化方式找出大 Key。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;解决方案&lt;/span&gt;&lt;/h3&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;对大 key 拆分&lt;/span&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如将一个含有数万成员的 HASH Key 拆分为多个 HASH Key，并确保每个 Key 的成员数量在合理范围，在 Redis Cluster 结构中，大 Key 的拆分对 node 间的内存平衡能够起到显著作用。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;异步清理大 key&lt;/span&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Redis 自 4.0 起提供了 UNLINK 命令，该命令能够以非阻塞的方式缓慢逐步的清理传入的 Key，通过 UNLINK，你可以安全的删除大 Key 甚至特大 Key。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;总结&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如下检查清单，帮助你在遇到 Redis 性能变慢的时候能高效解决问题。&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;获取当前 Redis 的基线性能；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;开启慢指令监控，定位慢指令导致的问题；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;找到慢指令，使用 scan 的方式；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;将实例的数据大小控制在 2-4GB，避免主从复制加载过大 RDB 文件而阻塞；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;禁用内存大页，采用了内存大页，生成 RDB 期间，即使客户端修改的数据只有 50B 的数据，Redis 需要复制 2MB 的大页。当写的指令比较多的时候就会导致大量的拷贝，导致性能变慢。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Redis 使用的内存是否过大导致 swap；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;AOF 配置是否合理，可以将配置项 no-appendfsync-on-rewrite 设置为 yes，避免 AOF 重写和 fsync 竞争磁盘 IO 资源，导致 Redis 延迟增加。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;bigkey 会带来一系列问题，我们需要进行拆分防止出现 bigkey，并通过 UNLINK 异步删除。&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mp-common-profile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-id=&quot;MzkzMDI1NjcyOQ==&quot; data-pluginname=&quot;mpprofile&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/EoJib2tNvVtf7icAmS0BQH6oDVG37Q8NzcfdguS5qAqOhfxvZyIKqmuX5BbnDjynrBbZzktp1EiaeFLzapp1nHysw/0?wx_fmt=png&quot; data-nickname=&quot;码哥字节&quot; data-alias=&quot;MageByte&quot; data-signature=&quot;拥抱硬核技术和对象，面向人民币编程。&quot; data-from=&quot;0&quot; data-is_biz_ban=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p cid=&quot;n204&quot; mdtype=&quot;paragraph&quot;&gt;&lt;strong&gt;关注「码哥字节」。阅读后如有收获请「点赞、分享、收藏」，谢谢支持.&lt;/strong&gt;&lt;/p&gt;&lt;p cid=&quot;n205&quot; mdtype=&quot;paragraph&quot;&gt;读者群已经开通，群里与各个大厂的大佬，不仅可以内推也可以学习。添加「码哥」个人微信，回复「加群」一起成长！&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/EoJib2tNvVtcibFUdzI25zp60m4Aic1uALntibEIFxldsrRoe2d2PcrqCwan5cUeRjOEmnWIWNaYxqaBP7jiaicxia30Q/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;430&quot;/&gt;&lt;/p&gt;&lt;section data-recommend-type=&quot;list-normal&quot; data-recommend-tid=&quot;2&quot; data-mpa-template=&quot;t&quot; data-mid=&quot;&quot; data-from=&quot;yb-recommend&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-normal&quot; data-recomment-template-id=&quot;2&quot; data-recommend-article-id=&quot;2247497323_1&quot; data-recommend-article-time=&quot;1642176060&quot; data-recommend-article-cover=&quot;https://mmbiz.qlogo.cn/mmbiz_jpg/EoJib2tNvVtfXMJdlMtHFyH52buuRr7aWYX6rrlxxWwr9JqficbcfxOVwqzMFscT4I9DKViayian9qcWHHKbpCJS6Q/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;Redis 使用 List 实现消息队列的利与弊&quot; data-recommend-article-content-url=&quot;https://mp.weixin.qq.com/s?__biz=MzkzMDI1NjcyOQ==&amp;amp;mid=2247497323&amp;amp;idx=1&amp;amp;sn=387d84d644ce6351a05ebca8f8c46df5&amp;amp;chksm=c27fb45df5083d4ba108d4583e019c33941d7d1bd1d6d3f41edd03c0bf81185e43af8861f43c#rd&quot;&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzkzMDI1NjcyOQ==&amp;amp;mid=2247497323&amp;amp;idx=1&amp;amp;sn=387d84d644ce6351a05ebca8f8c46df5&amp;amp;chksm=c27fb45df5083d4ba108d4583e019c33941d7d1bd1d6d3f41edd03c0bf81185e43af8861f43c&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot;&gt;&lt;section data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;Redis 使用 List 实现消息队列的利与弊&lt;/p&gt;&lt;p data-recommend-date=&quot;t&quot; data-mid=&quot;&quot;&gt;2022-01-15&lt;/p&gt;&lt;/section&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.0031347962382444&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/EoJib2tNvVtfXMJdlMtHFyH52buuRr7aWYX6rrlxxWwr9JqficbcfxOVwqzMFscT4I9DKViayian9qcWHHKbpCJS6Q/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;319&quot;/&gt;&lt;/span&gt; &lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-normal&quot; data-recomment-template-id=&quot;2&quot; data-recommend-article-id=&quot;2247495902_1&quot; data-recommend-article-time=&quot;1638115260&quot; data-recommend-article-cover=&quot;https://mmbiz.qlogo.cn/mmbiz_jpg/EoJib2tNvVtf1bKNWEJVvTT3JHw9cV6WwM2EPjt4J3GnLSj86sqzsTgw145hia1NCZrmUnicsiab6FKcJc6hn8LWxg/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;Redis 分布式锁的正确实现原理演化历程与 Redisson 实战总结&quot; data-recommend-article-content-url=&quot;https://mp.weixin.qq.com/s?__biz=MzkzMDI1NjcyOQ==&amp;amp;mid=2247495902&amp;amp;idx=1&amp;amp;sn=51413a133f87b1fafa49dbd0ff4908b5&amp;amp;chksm=c27fb2e8f5083bfedda596c0c4a4af99c3ca08bfd8d244b650f9cb35d7f6fed43741975b3a58#rd&quot;&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzkzMDI1NjcyOQ==&amp;amp;mid=2247495902&amp;amp;idx=1&amp;amp;sn=51413a133f87b1fafa49dbd0ff4908b5&amp;amp;chksm=c27fb2e8f5083bfedda596c0c4a4af99c3ca08bfd8d244b650f9cb35d7f6fed43741975b3a58&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot;&gt;&lt;section data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;Redis 分布式锁的正确实现原理演化历程与 Redisson 实战总结&lt;/p&gt;&lt;p data-recommend-date=&quot;t&quot; data-mid=&quot;&quot;&gt;2021-11-29&lt;/p&gt;&lt;/section&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.998769987699877&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/EoJib2tNvVtf1bKNWEJVvTT3JHw9cV6WwM2EPjt4J3GnLSj86sqzsTgw145hia1NCZrmUnicsiab6FKcJc6hn8LWxg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;813&quot;/&gt;&lt;/span&gt; &lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-normal&quot; data-recomment-template-id=&quot;2&quot; data-recommend-article-id=&quot;2247494423_1&quot; data-recommend-article-time=&quot;1634517600&quot; data-recommend-article-cover=&quot;https://mmbiz.qlogo.cn/mmbiz_jpg/EoJib2tNvVtfoPs4n7qZWxz0d3ykWRgQQBNmUicMYGQibB8r74CdpIOCib6Dc3zk5oxic9T6vrDVuH5NUJJadZroF6w/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;腾讯二面：Redis 事务支持 ACID 么？&quot; data-recommend-article-content-url=&quot;https://mp.weixin.qq.com/s?__biz=MzkzMDI1NjcyOQ==&amp;amp;mid=2247494423&amp;amp;idx=1&amp;amp;sn=52d6f4061b1bb8456f5216a38bb32bf4&amp;amp;chksm=c27fa921f50820370a352a93531cb90a9fa0d2f479fd6083045d266b71196a95af4306f4b73c#rd&quot;&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzkzMDI1NjcyOQ==&amp;amp;mid=2247494423&amp;amp;idx=1&amp;amp;sn=52d6f4061b1bb8456f5216a38bb32bf4&amp;amp;chksm=c27fa921f50820370a352a93531cb90a9fa0d2f479fd6083045d266b71196a95af4306f4b73c&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot;&gt;&lt;section data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;腾讯二面：Redis 事务支持 ACID 么？&lt;/p&gt;&lt;p data-recommend-date=&quot;t&quot; data-mid=&quot;&quot;&gt;2021-10-18&lt;/p&gt;&lt;/section&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img data-ratio=&quot;0.9977426636568849&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/EoJib2tNvVtfoPs4n7qZWxz0d3ykWRgQQBNmUicMYGQibB8r74CdpIOCib6Dc3zk5oxic9T6vrDVuH5NUJJadZroF6w/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;443&quot;/&gt;&lt;/span&gt; &lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-normal&quot; data-recomment-template-id=&quot;2&quot; data-recommend-article-id=&quot;2247493190_1&quot; data-recommend-article-time=&quot;1632616740&quot; data-recommend-article-cover=&quot;https://mmbiz.qlogo.cn/mmbiz_jpg/EoJib2tNvVtcKQep7qcnlhKvKz307NQVbssjGZV1zQaZFs0nuKfaoicia7G4NUGEYXvE11VicfibbbUbDkicsbs2I8Nw/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;Redis 很屌，不懂使用规范就糟蹋了&quot; data-recommend-article-content-url=&quot;https://mp.weixin.qq.com/s?__biz=MzkzMDI1NjcyOQ==&amp;amp;mid=2247493190&amp;amp;idx=1&amp;amp;sn=a3b6e1b36eb676c0055babbf9864fece&amp;amp;chksm=c27fa470f5082d6643f24d699d78df55195d8f4b6be3e949bac64966cc383f84c7c69bdfd77d#rd&quot;&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzkzMDI1NjcyOQ==&amp;amp;mid=2247493190&amp;amp;idx=1&amp;amp;sn=a3b6e1b36eb676c0055babbf9864fece&amp;amp;chksm=c27fa470f5082d6643f24d699d78df55195d8f4b6be3e949bac64966cc383f84c7c69bdfd77d&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot;&gt;&lt;section data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;Redis 很屌，不懂使用规范就糟蹋了&lt;/p&gt;&lt;p data-recommend-date=&quot;t&quot; data-mid=&quot;&quot;&gt;2021-09-26&lt;/p&gt;&lt;/section&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/EoJib2tNvVtcKQep7qcnlhKvKz307NQVbssjGZV1zQaZFs0nuKfaoicia7G4NUGEYXvE11VicfibbbUbDkicsbs2I8Nw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;720&quot;/&gt;&lt;/span&gt; &lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;参考资料&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>485c67f0c047155f9d655d7b383caff9</guid>
<title>接口请求合并的3种技巧，性能直接爆表！</title>
<link>https://toutiao.io/k/p8wu6fu</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;将相似或重复请求在上游系统中合并后发往下游系统，可以大大降低下游系统的负载，提升系统整体吞吐率。文章介绍了 &lt;code&gt;hystrix collapser&lt;/code&gt;、&lt;code&gt;ConcurrentHashMultiset&lt;/code&gt;、自实现&lt;code&gt;BatchCollapser&lt;/code&gt; 三种请求合并技术，并通过其具体实现对比各自适用的场景。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;前言&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;工作中，我们常见的请求模型都是”请求-应答”式，即一次请求中，服务给请求分配一个独立的线程，一块独立的内存空间，所有的操作都是独立的，包括资源和系统运算。我们也知道，在请求中处理一次系统 I/O 的消耗是非常大的，如果有非常多的请求都进行同一类 I/O 操作，那么是否可以将这些 I/O 操作都合并到一起，进行一次 I/O 操作，是否可以大大降低下游资源服务器的负担呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最近我工作之余的大部分时间都花在这个问题的探究上了，对比了几个现有类库，为了解决一个小问题把 &lt;code&gt;hystrix javanica&lt;/code&gt; 的代码翻了一遍，也根据自己工作中遇到的业务需求实现了一个简单的合并类，收获还是挺大的。可能这个需求有点”偏门”，在网上搜索结果并不多，也没有综合一点的资料，索性自己总结分享一下，希望能帮到后来遇到这种问题的小伙伴。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;Hystrix Collapser&lt;/span&gt;&lt;/h3&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;hystrix&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;开源的请求合并类库（知名的）好像也只有 Netflix 公司开源的 &lt;code&gt;Hystrix&lt;/code&gt; 了， &lt;code&gt;hystrix&lt;/code&gt; 专注于保持 WEB 服务器在高并发环境下的系统稳定，我们常用它的熔断器(&lt;code&gt;Circuit Breaker&lt;/code&gt;) 来实现服务的服务隔离和灾时降级，有了它，可以使整个系统不至于被某一个接口的高并发洪流冲塌，即使接口挂了也可以将服务降级，返回一个人性化的响应。请求合并作为一个保障下游服务稳定的利器，在 &lt;code&gt;hystrix&lt;/code&gt; 内实现也并不意外。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们在使用 &lt;code&gt;hystrix&lt;/code&gt; 时，常用它的 &lt;code&gt;javanica&lt;/code&gt; 模块，以注解的方式编写 hystrix 代码，使代码更简洁而且对业务代码侵入更低。所以在项目中我们一般至少需要引用 &lt;code&gt;hystrix-core&lt;/code&gt; 和 &lt;code&gt;hystrix-javanica&lt;/code&gt; 两个包。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;另外，&lt;code&gt;hystrix&lt;/code&gt; 的实现都是通过 AOP，我们要还要在项目 xml 里显式配置 &lt;code&gt;HystrixAspect&lt;/code&gt; 的 bean 来启用它。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&amp;lt;aop:aspectj-autoproxy/&amp;gt;  &lt;br/&gt;&amp;lt;bean id=&lt;span&gt;&quot;hystrixAspect&quot;&lt;/span&gt; class=&lt;span&gt;&quot;com.netflix.hystrix.contrib.javanica.aop.aspectj.HystrixCommandAspect&quot;&lt;/span&gt; /&amp;gt;  &lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;collapser&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;hystrix collapser 是 hystrix 内的请求合并器，它有自定义 BatchMethod 和 注解两种实现方式，自定义 BatchMethod 网上有各种教程，实现起来很复杂，需要手写大量代码，而注解方式只需要添加两行注解即可，但配置方式我在官方文档上也没找见，中文方面本文应该是独一份儿了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其实现需要注意的是：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;我们在需要合并的方法上添加 &lt;code&gt;@HystrixCollapser&lt;/code&gt; 注解，在定义好的合并方法上添加 &lt;code&gt;@HystrixCommand&lt;/code&gt; 注解；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;single 方法只能传入一个参数，多参数情况下需要自己包装一个参数类，而 batch 方法需要 &lt;code&gt;java.util.List&amp;lt;SingleParam&amp;gt;&lt;/code&gt;；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;single 方法返回 &lt;code&gt;java.util.concurrent.Future&amp;lt;SingleReturn&amp;gt;&lt;/code&gt;， batch 方法返回 &lt;code&gt;java.util.List&amp;lt;SingleReturn&amp;gt;&lt;/code&gt;，且要保证返回的结果数量和传入的参数数量一致。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下面是一个简单的示例:&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;HystrixCollapserSample&lt;/span&gt; &lt;/span&gt;{  &lt;br/&gt;  &lt;br/&gt;    &lt;span&gt;@HystrixCollapser&lt;/span&gt;(batchMethod = &lt;span&gt;&quot;batch&quot;&lt;/span&gt;)  &lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; Future&amp;lt;Boolean&amp;gt; &lt;span&gt;single&lt;/span&gt;&lt;span&gt;(String input)&lt;/span&gt; &lt;/span&gt;{  &lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;null&lt;/span&gt;; &lt;span&gt;// single方法不会被执行到  &lt;/span&gt;&lt;br/&gt;    }  &lt;br/&gt;  &lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; List&amp;lt;Boolean&amp;gt; &lt;span&gt;batch&lt;/span&gt;&lt;span&gt;(List&amp;lt;String&amp;gt; inputs)&lt;/span&gt; &lt;/span&gt;{  &lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; inputs.stream().map(it -&amp;gt; Boolean.TRUE).collect(Collectors.toList());  &lt;br/&gt;    }  &lt;br/&gt;}  &lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;源码实现&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为了解决 &lt;code&gt;hystrix collapser&lt;/code&gt; 的配置问题看了下 &lt;code&gt;hystrix javanica&lt;/code&gt; 的源码，这里简单总结一下 hystrix 请求合并器的具体实现，源码的详细解析在我的笔记：&lt;code&gt;Hystrix collasper&lt;/code&gt; 源码解析。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;在 spring-boot 内注册切面类的 bean，里面包含 @HystrixCollapser 注解切面；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;在方法执行时检测到方法被 HystrixCollapser 注解后，spring 调用 &lt;code&gt;methodsAnnotatedWithHystrixCommand&lt;/code&gt;方法来执行 hystrix 代理;&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;hystrix 获取一个 collapser 实例（在当前 scope 内检测不到即创建）;&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;hystrix 将当前请求的参数提交给 collapser， 由 collapser 存储在一个 &lt;code&gt;concurrentHashMap （RequestArgumentType -&amp;gt; CollapsedRequest）&lt;/code&gt;内，此方法会创建一个 Observable 对象，并返回一个 观察此对象的 Future 给业务线程；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;collpser 在创建时会创建一个 timer 线程，定时消费存储的请求，timer 会将多个请求构造成一个合并后的请求，调用 batch 执行后将结果顺序映射到输出参数，并通知 Future 任务已完成。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;需要注意，由于需要等待 timer 执行真正的请求操作，collapser 会导致所有的请求的 cost 都会增加约 timerInterval/2 ms;&lt;/p&gt;&lt;/blockquote&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;配置&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;hystrix collapser&lt;/code&gt; 的配置需要在 &lt;code&gt;@HystrixCollapser&lt;/code&gt; 注解上使用，主要包括两个部分，专有配置和 hystrixCommand 通用配置；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;专有配置包括：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;code&gt;collapserKey&lt;/code&gt;，这个可以不用配置，hystrix 会默认使用当前方法名；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;code&gt;batchMethod&lt;/code&gt;，配置 batch 方法名，我们一般会将 single 方法和 batch 方法定义在同一个类内，直接填方法名即可；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;code&gt;scope&lt;/code&gt;，最坑的配置项，也是逼我读源码的元凶，&lt;code&gt;com.netflix.hystrix.HystrixCollapser.Scope&lt;/code&gt; 枚举类，有 REQUEST, GLOBAL 两种选项，在 scope 为 REQUEST 时，hystrix 会为每个请求都创建一个 collapser， 此时你会发现 batch 方法执行时，传入的请求数总为1。而且 REQUEST 项还是默认项，不明白这样请求合并还有什么意义；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;code&gt;collapserProperties&lt;/code&gt;, 在此选项内我们可以配置 &lt;code&gt;hystrixCommand&lt;/code&gt; 的通用配置；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通用配置包括：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;code&gt;maxRequestsInBatch&lt;/code&gt;, 构造批量请求时，使用的单个请求的最大数量；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;code&gt;timerDelayInMilliseconds&lt;/code&gt;, 此选项配置 collapser 的 timer 线程多久会合并一次请求；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;code&gt;requestCache.enabled&lt;/code&gt;, 配置提交请求时是否缓存；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一个完整的配置如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;@HystrixCollapser&lt;/span&gt;(  &lt;br/&gt;            batchMethod = &lt;span&gt;&quot;batch&quot;&lt;/span&gt;,  &lt;br/&gt;            collapserKey = &lt;span&gt;&quot;single&quot;&lt;/span&gt;,  &lt;br/&gt;            scope = com.netflix.hystrix.HystrixCollapser.Scope.GLOBAL,  &lt;br/&gt;            collapserProperties = {  &lt;br/&gt;                    &lt;span&gt;@HystrixProperty&lt;/span&gt;(name = &lt;span&gt;&quot;maxRequestsInBatch&quot;&lt;/span&gt;, value = &lt;span&gt;&quot;100&quot;&lt;/span&gt;),  &lt;br/&gt;                    &lt;span&gt;@HystrixProperty&lt;/span&gt;(name = &lt;span&gt;&quot;timerDelayInMilliseconds&quot;&lt;/span&gt;, value = &lt;span&gt;&quot;1000&quot;&lt;/span&gt;),  &lt;br/&gt;                    &lt;span&gt;@HystrixProperty&lt;/span&gt;(name = &lt;span&gt;&quot;requestCache.enabled&quot;&lt;/span&gt;, value = &lt;span&gt;&quot;true&quot;&lt;/span&gt;)  &lt;br/&gt;            })  &lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;BatchCollapser&lt;/span&gt;&lt;/h3&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;设计&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由于业务需求，我们并不太关心被合并请求的返回值，而且觉得 hystrix 保持那么多的 Future 并没有必要，于是自己实现了一个简单的请求合并器，业务线程简单地将请求放到一个容器里，请求数累积到一定量或延迟了一定的时间，就取出容器内的数据统一发送给下游系统。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;设计思想跟 hystrix 类似，合并器有一个字段作为存储请求的容器，且设置一个 timer 线程定时消费容器内的请求，业务线程将请求参数提交到合并 器的容器内。不同之处在于，业务线程将请求提交给容器后立即同步返回成功，不必管请求的消费结果，这样便实现了时间维度上的合并触发。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;另外，我还添加了另外一个维度的触发条件，每次将请求参数添加到容器后都会检验一下容器内请求的数量，如果数量达到一定的阈值，将在业务线程内合并执行一次。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由于有两个维度会触发合并，就不可避免会遇到线程安全问题。为了保证容器内的请求不会被多个线程重复消费或都漏掉，我需要一个容器能满足以下条件：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;是一种 Collection，类似于 ArrayList 或 Queue，可以存重复元素且有顺序;&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;在多线程环境中能安全地将里面的数据全取出来进行消费，而不用自己实现锁。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;java.util.concurrent&lt;/code&gt; 包内的 LinkedBlockingDeque 刚好符合要求，首先它实现了 BlockingDeque 接口，多线程环境下的存取操作是安全的；此外，它还提供 &lt;code&gt;drainTo(Collection&amp;lt;? super E&amp;gt; c, int maxElements)&lt;/code&gt;方法，可以将容器内 maxElements 个元素安全地取出来，放到 Collection c 中。&lt;/p&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;实现&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以下是具体的代码实现：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;BatchCollapser&lt;/span&gt;&amp;lt;&lt;span&gt;E&lt;/span&gt;&amp;gt; &lt;span&gt;implements&lt;/span&gt; &lt;span&gt;InitializingBean&lt;/span&gt; &lt;/span&gt;{  &lt;br/&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; Logger logger = LoggerFactory.getLogger(BatchCollapser&lt;span&gt;.&lt;span&gt;class&lt;/span&gt;)&lt;/span&gt;;  &lt;br/&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;volatile&lt;/span&gt; Map&amp;lt;Class, BatchCollapser&amp;gt; instance = Maps.newConcurrentMap();  &lt;br/&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; ScheduledExecutorService SCHEDULE_EXECUTOR = Executors.newScheduledThreadPool(&lt;span&gt;1&lt;/span&gt;);  &lt;br/&gt;  &lt;br/&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;volatile&lt;/span&gt; LinkedBlockingDeque&amp;lt;E&amp;gt; batchContainer = &lt;span&gt;new&lt;/span&gt; LinkedBlockingDeque&amp;lt;&amp;gt;();  &lt;br/&gt;     &lt;span&gt;private&lt;/span&gt; Handler&amp;lt;List&amp;lt;E&amp;gt;, Boolean&amp;gt; cleaner;  &lt;br/&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;long&lt;/span&gt; interval;  &lt;br/&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; threshHold;  &lt;br/&gt;  &lt;br/&gt;     &lt;span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;BatchCollapser&lt;/span&gt;&lt;span&gt;(Handler&amp;lt;List&amp;lt;E&amp;gt;, Boolean&amp;gt; cleaner, &lt;span&gt;int&lt;/span&gt; threshHold, &lt;span&gt;long&lt;/span&gt; interval)&lt;/span&gt; &lt;/span&gt;{  &lt;br/&gt;         &lt;span&gt;this&lt;/span&gt;.cleaner = cleaner;  &lt;br/&gt;         &lt;span&gt;this&lt;/span&gt;.threshHold = threshHold;  &lt;br/&gt;         &lt;span&gt;this&lt;/span&gt;.interval = interval;  &lt;br/&gt;     }  &lt;br/&gt;  &lt;br/&gt;     &lt;span&gt;@Override&lt;/span&gt;  &lt;br/&gt;     &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;afterPropertiesSet&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;throws&lt;/span&gt; Exception &lt;/span&gt;{  &lt;br/&gt;         SCHEDULE_EXECUTOR.scheduleAtFixedRate(() -&amp;gt; {  &lt;br/&gt;             &lt;span&gt;try&lt;/span&gt; {  &lt;br/&gt;                 &lt;span&gt;this&lt;/span&gt;.clean();  &lt;br/&gt;             } &lt;span&gt;catch&lt;/span&gt; (Exception e) {  &lt;br/&gt;                 logger.error(&lt;span&gt;&quot;clean container exception&quot;&lt;/span&gt;, e);  &lt;br/&gt;             }  &lt;br/&gt;         }, &lt;span&gt;0&lt;/span&gt;, interval, TimeUnit.MILLISECONDS);  &lt;br/&gt;     }  &lt;br/&gt;  &lt;br/&gt;     &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;submit&lt;/span&gt;&lt;span&gt;(E event)&lt;/span&gt; &lt;/span&gt;{  &lt;br/&gt;         batchContainer.add(event);  &lt;br/&gt;         &lt;span&gt;if&lt;/span&gt; (batchContainer.size() &amp;gt;= threshHold) {  &lt;br/&gt;             clean();  &lt;br/&gt;         }  &lt;br/&gt;     }  &lt;br/&gt;  &lt;br/&gt;     &lt;span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;clean&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{  &lt;br/&gt;         List&amp;lt;E&amp;gt; transferList = Lists.newArrayListWithExpectedSize(threshHold);  &lt;br/&gt;         batchContainer.drainTo(transferList, &lt;span&gt;100&lt;/span&gt;);  &lt;br/&gt;         &lt;span&gt;if&lt;/span&gt; (CollectionUtils.isEmpty(transferList)) {  &lt;br/&gt;             &lt;span&gt;return&lt;/span&gt;;  &lt;br/&gt;         }  &lt;br/&gt;  &lt;br/&gt;         &lt;span&gt;try&lt;/span&gt; {  &lt;br/&gt;             cleaner.handle(transferList);  &lt;br/&gt;         } &lt;span&gt;catch&lt;/span&gt; (Exception e) {  &lt;br/&gt;             logger.error(&lt;span&gt;&quot;batch execute error, transferList:{}&quot;&lt;/span&gt;, transferList, e);  &lt;br/&gt;         }  &lt;br/&gt;     }  &lt;br/&gt;  &lt;br/&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &amp;lt;E&amp;gt; &lt;span&gt;BatchCollapser &lt;span&gt;getInstance&lt;/span&gt;&lt;span&gt;(Handler&amp;lt;List&amp;lt;E&amp;gt;, Boolean&amp;gt; cleaner, &lt;span&gt;int&lt;/span&gt; threshHold, &lt;span&gt;long&lt;/span&gt; interval)&lt;/span&gt; &lt;/span&gt;{  &lt;br/&gt;         Class jobClass = cleaner.getClass();  &lt;br/&gt;         &lt;span&gt;if&lt;/span&gt; (instance.get(jobClass) == &lt;span&gt;null&lt;/span&gt;) {  &lt;br/&gt;             &lt;span&gt;synchronized&lt;/span&gt; (BatchCollapser&lt;span&gt;.&lt;span&gt;class&lt;/span&gt;) &lt;/span&gt;{  &lt;br/&gt;                 &lt;span&gt;if&lt;/span&gt; (instance.get(jobClass) == &lt;span&gt;null&lt;/span&gt;) {  &lt;br/&gt;                     instance.put(jobClass, &lt;span&gt;new&lt;/span&gt; BatchCollapser&amp;lt;&amp;gt;(cleaner, threshHold, interval));  &lt;br/&gt;                 }  &lt;br/&gt;             }  &lt;br/&gt;         }  &lt;br/&gt;  &lt;br/&gt;         &lt;span&gt;return&lt;/span&gt; instance.get(jobClass);  &lt;br/&gt;     }  &lt;br/&gt; }  &lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以下代码内需要注意的点：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;由于合并器的全局性需求，需要将合并器实现为一个单例，另外为了提升它的通用性，内部使用使用 concurrentHashMap 和 double check 实现了一个简单的单例工厂。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;为了区分不同用途的合并器，工厂需要传入一个实现了 Handler 的实例，通过实例的 class 来对请求进行分组存储。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;由于 &lt;code&gt;java.util.Timer&lt;/code&gt; 的阻塞特性，一个 Timer 线程在阻塞时不会启动另一个同样的 Timer 线程，所以使用 &lt;code&gt;ScheduledExecutorService&lt;/code&gt; 定时启动 Timer 线程。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;ConcurrentHashMultiset&lt;/span&gt;&lt;/h3&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;设计&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上面介绍的请求合并都是将多个请求一次发送，下游服务器处理时本质上还是多个请求，最好的请求合并是在内存中进行，将请求结果简单合并成一个发送给下游服务器。如我们经常会遇到的需求：元素分值累加或数据统计，就可以先在内存中将某一项的分值或数据累加起来，定时请求数据库保存。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Guava 内就提供了这么一种数据结构：&lt;code&gt;ConcurrentHashMultiset&lt;/code&gt;，它不同于普通的 set 结构存储相同元素时直接覆盖原有元素，而是给每个元素保持一个计数 count, 插入重复时元素的 count 值加1。而且它在添加和删除时并不加锁也能保证线程安全，具体实现是通过一个 &lt;code&gt;while(true)&lt;/code&gt; 循环尝试操作，直到操作够所需要的数量。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;ConcurrentHashMultiset&lt;/code&gt; 这种排重计数的特性，非常适合数据统计这种元素在短时间内重复率很高的场景，经过排重后的数量计算，可以大大降低下游服务器的压力，即使重复率不高，能用少量的内存空间换取系统可用性的提高，也是很划算的。&lt;/p&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;实现&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用 &lt;code&gt;ConcurrentHashMultiset&lt;/code&gt; 进行请求合并与使用普通容器在整体结构上并无太大差异，具体类似于：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;if&lt;/span&gt; (ConcurrentHashMultiset.isEmpty()) {  &lt;br/&gt;    &lt;span&gt;return&lt;/span&gt;;  &lt;br/&gt;}  &lt;br/&gt;  &lt;br/&gt;List&amp;lt;Request&amp;gt; transferList = Lists.newArrayList();  &lt;br/&gt;ConcurrentHashMultiset.elementSet().forEach(request -&amp;gt; {  &lt;br/&gt;    &lt;span&gt;int&lt;/span&gt; count = ConcurrentHashMultiset.count(request);  &lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (count &amp;lt;= &lt;span&gt;0&lt;/span&gt;) {  &lt;br/&gt;        &lt;span&gt;return&lt;/span&gt;;  &lt;br/&gt;    }  &lt;br/&gt;  &lt;br/&gt;    transferList.add(count == &lt;span&gt;1&lt;/span&gt; ? request : &lt;span&gt;new&lt;/span&gt; Request(request.getIncrement() * count));  &lt;br/&gt;    ConcurrentHashMultiset.remove(request, count);  &lt;br/&gt;});  &lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;小结&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最后总结一下各个技术适用的场景：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;code&gt;hystrix collapser&lt;/code&gt;: 需要每个请求的结果，并且不在意每个请求的 cost 会增加；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;code&gt;BatchCollapser&lt;/code&gt;: 不在意请求的结果，需要请求合并能在时间和数量两个维度上触发；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;code&gt;ConcurrentHashMultiset&lt;/code&gt;：请求重复率很高的统计类场景；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;另外，如果选择自己来实现的话，完全可以将 &lt;code&gt;BatchCollapser&lt;/code&gt; 和 &lt;code&gt;ConcurrentHashMultiset&lt;/code&gt; 结合一下，在BatchCollapser 里使用 &lt;code&gt;ConcurrentHashMultiset&lt;/code&gt; 作为容器，这样就可以结合两者的优势了&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>852a8116f61a7e108b067d0664fcbfcf</guid>
<title>Carbon 会扼杀 Go 的势头吗？</title>
<link>https://toutiao.io/k/avx2p31</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大家好，我是程序员幽鬼。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;近期，应该有不少人看到了，Google 要出另外一门编程语言：Carbon。虽然号称是 C++ 的继任者，但不少人可能会有疑问：会不会扼杀 Go 语言的势头？毕竟也是 Google 出的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;众所周知，Google 经常拿起新的闪亮玩具来玩，并且对过去花费时间和精力推广的东西失去兴趣。然而，我认为 Carbon 和 Go 并非如此。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一方面，他们正在解决非常不同的问题。看看 Go，虽然它最初旨在通过更简单的语法、内存安全和更快的构建时间来帮助解决 Google 的 C/C++ 问题，但 Go 很快被证明是同类产品。感谢 Docker 和 Kubernetes 等早期的拥护者，Go 将自己确立为构建云工具和基础设施的事实上的语言。但云只是整个画面的一小部分。Go 用途广泛，人们通过使用它创建整个业务来证明这一点——从服务器后端到交互式 Web 前端、桌面和移动应用程序。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Go 在其自己的新类别中被证明是成功的 —— 一种语言在静态类型的企业级语言（如 Java）和动态语言 Python 和 PHP 之间占据最佳位置。它是一种 80% 的语言——它既不是最快也不是最漂亮的语言。相反，Go 非常 &lt;span&gt;无聊&lt;/span&gt;&lt;sup&gt;[1]&lt;/sup&gt;，使其成为大多数情况下的完美工具。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这与 C++ 大放异彩的世界相去甚远——该语言的非托管内存性质及其 C 核心的裸机性能使其成为 10-20% 的性能关键用例的完美选择。然而，这使得语言比市场竞争者复杂得多，并且在确保仍然支持数十年的遗留 C++ 代码的同时向前推进的努力只会让事情变得更加困难。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Go 的成功并没有改变这样一个事实，即世界上有大量 C++ 代码需要有人继续使用。尤其是在 Google。我认为 Carbon 是 Google 对其庞大的 C++ 代码库进行现代化改造的第二次尝试。C++ 需要注入新鲜的人力资本和开发人员经验，这是 Carbon 试图解决的核心支柱。它试图让这个领域对新手来说既性感又令人兴奋，同时又不遗漏几十年的 C++ 遗产。相反，它们将成为 Carbon 的一等公民。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;谈到 Go 的成功——让我谈谈我的第二点也是最后一点。对于现在正在关注 Go 的人来说，它的市场占有率似乎从第一天开始就飙升。然而，这门语言花了十多年的时间才到达它所处的位置——而这只是它可能达到的位置的一小部分。我在这里想说的是，编程语言需要大量时间和社区努力才能获得主流行业的采用。在所有流行语和花哨的构造背后，如果没有真正的人愿意投入时间和金钱为其开发库和应用程序，那么任何项目都将只是理论上的前景。不要试图在这里引发一场激烈的战争，想想你最喜欢的编程语言，你一直想使用的那种。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;到目前为止，我仍然对 Go 的光明未来充满信心。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;参考资料&lt;/span&gt;&lt;/h3&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;span&gt;[1]&lt;/span&gt;&lt;p&gt;无聊: &lt;em&gt;https://www.capitalone.com/tech/software-engineering/go-is-boring/&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>4fc0ec88417308e6f026e5e083089c78</guid>
<title>高性能异步编排框架 Gobrs-Async 1.0.3-SNAPSHOT 版本更新</title>
<link>https://toutiao.io/k/p1eq7ad</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                           autoTypeSetting24psection&amp;#10;                          &quot; id=&quot;js_content&quot;&gt;
            &lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Gobrs-Async 1.0.3-SNAPSHOT 版本更新&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;更新内容&lt;/strong&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;关于&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;Gobrs-Async&lt;/strong&gt; 是一款功能强大、配置灵活、带有全链路异常回调、内存优化、异常状态管理于一身的高性能异步编排框架。为企业提供在复杂应用场景下动态任务编排的能力。针对于复杂场景下，异步线程复杂性、任务依赖性、异常状态难控制性的现象提供了快速高效的解决方案。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;一、可选的任务执行逻辑&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在application.yml 中 配置的任务流程， 非必要执行配置的所有任务如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3356258596973865&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KCPYGythicQJQMSxYFmXOFaxDOic1pHXZ7sIickUqtIH286A55oBo4sMfeibQlfEyiavo1DGlAAWBw3UlwvFWB41Ccg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1454&quot;/&gt;&lt;figcaption&gt;image-20220809221727601&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;配置任务&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt; &lt;span&gt;&quot;AService-&amp;gt;BService-&amp;gt;FService;HService,EService,GService&quot;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果用户在使用时只希望执行 FService , 则在任务链中 只需要执行AService、BService、FService 即可。无需执行H、E、G任务。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;适应场景&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在做 &lt;strong&gt;ISV&lt;/strong&gt;  (京东商城ISV组件化建设)  建设时， 楼层中的多个组件可能存在着任务流程的编排， 所需要的上游数据数量多少不一，所以此时就需要进行编排流程中的任务选择执行处理了。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;如下对每个组件进行编排数据编排处理&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;![&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.7468354430379747&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KCPYGythicQJQMSxYFmXOFaxDOic1pHXZ7Nry8KFyXjS3ibJlXKUQEkEm5sV3g60u9opd5aAUftDQw0cYYicepACJg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;948&quot;/&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;二、修复issue&lt;/h2&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;修复任务链中某一任务执行异常，后续子任务无需执行的逻辑。当 failSubExec 为true 时， 单条流程中的任务异常不会影响后续子任务执行。否则终止子任务的调用执行。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.2259194395796849&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KCPYGythicQJQMSxYFmXOFaxDOic1pHXZ7Us5mSnQoG3fsNFI7ibZtfRyfexpozaoA5YyTbWJ7yoiagvmOa6ibStG4Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1142&quot;/&gt;&lt;figcaption&gt;image-20220809222738453&lt;/figcaption&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;友情链接&lt;/h2&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;官网地址&lt;/section&gt;&lt;section&gt;&lt;strong&gt;gitee https://gitee.com/dromara/gobrs-async&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;  gitHub https://github.com/dromara/gobrs-async&lt;/strong&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;沟通&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于这个项目，是否有什么不一样看法，欢迎在 Issue 一起沟通交流；群二维码七天会失效，可以添加作者微信进交流群&lt;/p&gt;&lt;/section&gt;&lt;section mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;section mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;section mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;28&quot; data-darkmode-bgcolor-16546951171124=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16546951171124=&quot;#fff|rgb(255, 255, 255)&quot; data-style=&quot;padding-right: 10px; padding-bottom: 10px; padding-left: 10px; outline: 0px; max-width: 100%; box-sizing: border-box; display: inline-block; width: 811.297px; vertical-align: top; align-self: flex-start; flex: 0 0 auto; box-shadow: rgb(152, 152, 152) 0px 0px 2px; border-width: 2px 0px 0px; border-radius: 10px; border-style: solid; border-color: rgb(21, 87, 246) rgb(62, 62, 62) rgb(62, 62, 62); background-color: rgb(255, 255, 255); line-height: 28px; overflow-wrap: break-word !important;&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;28&quot; data-darkmode-bgcolor-16546951171124=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16546951171124=&quot;#fff|rgb(255, 255, 255)&quot;&gt;&lt;section mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;28&quot; data-darkmode-bgcolor-16546951171124=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16546951171124=&quot;#fff|rgb(255, 255, 255)&quot;&gt;&lt;section mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;28&quot; data-darkmode-bgcolor-16546951171124=&quot;rgb(21, 87, 246)&quot; data-darkmode-original-bgcolor-16546951171124=&quot;#fff|rgb(255, 255, 255)|rgb(21, 87, 246)&quot; data-darkmode-color-16546951171124=&quot;rgb(255, 255, 255)&quot; data-darkmode-original-color-16546951171124=&quot;#fff|rgb(255, 255, 255)&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot; mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;28&quot; data-darkmode-bgcolor-16546951171124=&quot;rgb(21, 87, 246)&quot; data-darkmode-original-bgcolor-16546951171124=&quot;#fff|rgb(255, 255, 255)|rgb(21, 87, 246)&quot; data-darkmode-color-16546951171124=&quot;rgb(255, 255, 255)&quot; data-darkmode-original-color-16546951171124=&quot;#fff|rgb(255, 255, 255)&quot;&gt;&lt;p mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;28&quot; data-darkmode-bgcolor-16546951171124=&quot;rgb(21, 87, 246)&quot; data-darkmode-original-bgcolor-16546951171124=&quot;#fff|rgb(255, 255, 255)|rgb(21, 87, 246)&quot; data-darkmode-color-16546951171124=&quot;rgb(255, 255, 255)&quot; data-darkmode-original-color-16546951171124=&quot;#fff|rgb(255, 255, 255)&quot;&gt;&lt;span mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;28&quot; data-darkmode-bgcolor-16546951171124=&quot;rgb(21, 87, 246)&quot; data-darkmode-original-bgcolor-16546951171124=&quot;#fff|rgb(255, 255, 255)|rgb(21, 87, 246)&quot; data-darkmode-color-16546951171124=&quot;rgb(255, 255, 255)&quot; data-darkmode-original-color-16546951171124=&quot;#fff|rgb(255, 255, 255)&quot;&gt;关于 Dromara&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;28&quot; data-darkmode-bgcolor-16546951171124=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16546951171124=&quot;#fff|rgb(255, 255, 255)&quot;&gt;&lt;section mp-original-font-size=&quot;11&quot; mp-original-line-height=&quot;22&quot; data-darkmode-bgcolor-16546951171124=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16546951171124=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16546951171124=&quot;rgb(100, 100, 100)&quot; data-darkmode-original-color-16546951171124=&quot;#fff|rgb(100, 100, 100)&quot;&gt;&lt;p mp-original-font-size=&quot;11&quot; mp-original-line-height=&quot;22&quot; data-darkmode-bgcolor-16546951171124=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16546951171124=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16546951171124=&quot;rgb(100, 100, 100)&quot; data-darkmode-original-color-16546951171124=&quot;#fff|rgb(100, 100, 100)&quot;&gt;&lt;span mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;28&quot; data-darkmode-bgcolor-16546951171124=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16546951171124=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16546951171124=&quot;rgb(100, 100, 100)&quot; data-darkmode-original-color-16546951171124=&quot;#fff|rgb(100, 100, 100)&quot;&gt;Dromara 是由国内顶尖的开源项目作者共同组成的开源社区。提供包括分布式事务，流行工具，企业级认证，&lt;span data-darkmode-bgcolor-16546951171124=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16546951171124=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16546951171124=&quot;rgb(100, 100, 100)&quot; data-darkmode-original-color-16546951171124=&quot;#fff|rgb(100, 100, 100)&quot;&gt;微服务RPC&lt;/span&gt;，运维监控，Agent监控，分布式日志，调度编排等一系列开源产品、解决方案与咨询、技术支持与培训认证服务。技术栈全面开源共建、 保持社区中立，致力于为全球用户提供微服务云原生解决方案。让参与的每一位开源爱好者，体会到开源的快乐。&lt;/span&gt;&lt;/p&gt;&lt;p mp-original-font-size=&quot;11&quot; mp-original-line-height=&quot;22&quot; data-darkmode-bgcolor-16546951171124=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16546951171124=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16546951171124=&quot;rgb(100, 100, 100)&quot; data-darkmode-original-color-16546951171124=&quot;#fff|rgb(100, 100, 100)&quot;&gt;&lt;br mp-original-font-size=&quot;11&quot; mp-original-line-height=&quot;22&quot; data-darkmode-bgcolor-16546951171124=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16546951171124=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16546951171124=&quot;rgb(100, 100, 100)&quot; data-darkmode-original-color-16546951171124=&quot;#fff|rgb(100, 100, 100)&quot;/&gt;&lt;/p&gt;&lt;p mp-original-font-size=&quot;11&quot; mp-original-line-height=&quot;22&quot; data-darkmode-bgcolor-16546951171124=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16546951171124=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16546951171124=&quot;rgb(100, 100, 100)&quot; data-darkmode-original-color-16546951171124=&quot;#fff|rgb(100, 100, 100)&quot;&gt;&lt;span mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;28&quot; data-darkmode-bgcolor-16546951171124=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16546951171124=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16546951171124=&quot;rgb(100, 100, 100)&quot; data-darkmode-original-color-16546951171124=&quot;#fff|rgb(100, 100, 100)&quot;&gt;Dromara开源社区目前拥有10+GVP项目，总star数量超过十万，构建了上万人的开源社区，有成千上万的个人及团队在使用Dromara社区的开源项目。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;
          &lt;/div&gt;

          

          



           
                                
                    
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>d6e1e5b2c2ee71ed92a58aeabdfe81d1</guid>
<title>前端新宠 Svelte 带来哪些新思想？赶紧学起来！</title>
<link>https://toutiao.io/k/3k78jkz</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;本文介绍&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;点赞 + 关注 + 收藏 = 学会了&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;Svelte&lt;/span&gt;&lt;sup&gt;[1]&lt;/sup&gt; 是我用过最爽的框架，就算 Vue 和 React 再强大，生态再好，我还是更喜欢 Svelte，因为它开发起来真的很爽。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其实在很久之前我就注意到 &lt;span&gt;Svelte&lt;/span&gt;&lt;sup&gt;[2]&lt;/sup&gt; ，但一直没把这个框架放在心上。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;因为我之前的工作主要使用 Vue，偶尔也会接触到一些 React 项目，但完全没遇到过使用 Svelte 的项。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;直到 Vite 的出现，我才开始开始重视 Svelte。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从 &lt;span&gt;Vite文档&lt;/span&gt;&lt;sup&gt;[3]&lt;/sup&gt; 里可以看到它支持这些模板：&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;JavaScript&lt;/th&gt;&lt;th&gt;TypeScript&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;vanilla&lt;/span&gt;&lt;sup&gt;[4]&lt;/sup&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;vanilla-ts&lt;/span&gt;&lt;sup&gt;[5]&lt;/sup&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;vue&lt;/span&gt;&lt;sup&gt;[6]&lt;/sup&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;vue-ts&lt;/span&gt;&lt;sup&gt;[7]&lt;/sup&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;react&lt;/span&gt;&lt;sup&gt;[8]&lt;/sup&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;react-ts&lt;/span&gt;&lt;sup&gt;[9]&lt;/sup&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;preact&lt;/span&gt;&lt;sup&gt;[10]&lt;/sup&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;preact-ts&lt;/span&gt;&lt;sup&gt;[11]&lt;/sup&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;lit&lt;/span&gt;&lt;sup&gt;[12]&lt;/sup&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;lit-ts&lt;/span&gt;&lt;sup&gt;[13]&lt;/sup&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;svelte&lt;/span&gt;&lt;sup&gt;[14]&lt;/sup&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;svelte-ts&lt;/span&gt;&lt;sup&gt;[15]&lt;/sup&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;能让祖师爷也重视的框架，不简单不简单~&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我喜欢用 Demo 的方式学习新技术，&lt;span&gt;Svelte 官方入门教程&lt;/span&gt;&lt;sup&gt;[16]&lt;/sup&gt; 就提供了这种方式。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这是我觉得入门比较舒服且方便日后搜索的学习方式。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;虽然 &lt;span&gt;Svelte 官方入门教程&lt;/span&gt;&lt;sup&gt;[17]&lt;/sup&gt; 已经给出很多例子，而且 &lt;span&gt;Svelte中文网&lt;/span&gt;&lt;sup&gt;[18]&lt;/sup&gt; 也有对应的翻译，但有些翻译看上去是机译，而且部分案例可能不太适合新手学习~&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本文的目的是把 Svelte 的学习流程梳理出来，让第一次接触 Svelte 的工友能顺利上手。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;**本文适合人群：有 &lt;code&gt;HTML&lt;/code&gt; 、&lt;code&gt;CSS&lt;/code&gt; 、&lt;code&gt;JS&lt;/code&gt; 基础，知道并已经安装了 &lt;code&gt;Node&lt;/code&gt;**。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果你是打算从0开始学习前端，那本文暂时还不适合你阅读。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;Svelte 简介&lt;/span&gt;&lt;/h1&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;span&gt;Svelte&lt;/span&gt;&lt;sup&gt;[19]&lt;/sup&gt; 是一个构建 web 应用程序的工具。&lt;/p&gt;&lt;p&gt;传统框架如 React 和 Vue 在浏览器中需要做大量的工作，而 Svelte 将这些工作放到构建应用程序的编译阶段来处理。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;需要注意，Svelte 是一款编译器。它可以将按照规定语法编写的代码打包成浏览器能运行的项目。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;和其他前端框架一样，同样也是使用 &lt;code&gt;HTML&lt;/code&gt; 、&lt;code&gt;CSS&lt;/code&gt; 和 &lt;code&gt;JavaScript&lt;/code&gt; 进行开发。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;作者&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在学习 Svelte 之前先了解一下它的父亲（作者）。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Svelte 的作者叫 &lt;span&gt;Rich Harris&lt;/span&gt;&lt;sup&gt;[20]&lt;/sup&gt; ，正在吃东西的这位就是他。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHruP7kmM1svYNADxQXF91DotqHNFvcKMSpFm99jxEE4H7kfIsYZ5TEP8OJhw99VqRTJsItdkWkCvg/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;460&quot;/&gt;&lt;figcaption&gt;01.jpg&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可能国内大多数工友对他不是很熟悉（我也完全不熟），但应该听过 &lt;span&gt;Rollup&lt;/span&gt;&lt;sup&gt;[21]&lt;/sup&gt; 。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;没错，他也是 &lt;span&gt;Rollup&lt;/span&gt;&lt;sup&gt;[22]&lt;/sup&gt; 的爸爸。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;他在开发 Svelte 之前还开发过 &lt;span&gt;Ractive.js&lt;/span&gt;&lt;sup&gt;[23]&lt;/sup&gt; ，听说 Vue 的部分实现也是受到了 Ractive 的启发。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;关于 &lt;strong&gt;Rich Harris&lt;/strong&gt; 的介绍还有很多，我搜到的资料上这样介绍到：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;大学专业是学哲学的&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;在纽约时报调查组工作的图形编辑，身兼记者和开发者职位&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;还有更多关于他和 Svelte 的介绍，可以看看 &lt;span&gt;《Svelte \- The magical disappearing UI framework \- Interview with Rich Harris》&lt;/span&gt;&lt;sup&gt;[24]&lt;/sup&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;Svelte 的优势&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Svelte 翻译成中文就是“苗条”的意思，侧面表明它打包出来的包非常小。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Svelte 主要优势有以下几点。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;1. 编译器&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在打开&lt;span&gt;Svelte官网&lt;/span&gt;&lt;sup&gt;[25]&lt;/sup&gt;时就能看到这样的介绍。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Svelte 是一种全新的构建用户界面的方法。传统框架如 React 和 Vue 在浏览器中需要做大量的工作，而 Svelte 将这些工作放到构建应用程序的编译阶段来处理。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Svelte 组件需要在 &lt;code&gt;.svelte&lt;/code&gt; 后缀的文件中编写，Svelte 会将编写好的代码翻编译 &lt;code&gt;JS&lt;/code&gt; 和 &lt;code&gt;CSS&lt;/code&gt; 代码。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;2. 打包体积更小&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Svelte 在打包会将引用到的代码打包起来，而没引用过的代码将会被过滤掉，打包时不会加入进来。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在 &lt;span&gt;《A RealWorld Comparison of Front-End Frameworks with Benchmarks \(2019 update\)》&lt;/span&gt;&lt;sup&gt;[26]&lt;/sup&gt; 报告中，对主流框架进行了对比。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.68&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHruP7kmM1svYNADxQXF91DojtEyVtDOiccwR6BeWlMx7rnToUtvX6U4q6zkLbf2lIz5OAhEmgg3JAw/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;800&quot;/&gt;&lt;figcaption&gt;02.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在经过 &lt;code&gt;gzip&lt;/code&gt; 压缩后生成的包大小，从报告中可以看出，Svelte 打包出来的体积甩开 Vue、React 和 Angular 几条街。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这是因为经过 Svelte 编译的代码，仅保留引用到的部分。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3. 不使用 Virtual DOM&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;Virtual DOM&lt;/code&gt; 就是 &lt;strong&gt;虚拟DOM&lt;/strong&gt;，是用 JS 对象描述 DOM 节点的数据，由 React 团队推广出来的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;虚拟DOM&lt;/strong&gt; 是前端的网红，因此也有很多开发者开始研究和搞辩论赛。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;网上有一张图对比了 Svelte 和 React 在数据驱动视图的流程&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5416666666666666&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHruP7kmM1svYNADxQXF91DokdaboDsrGnhwBy7jicHpuGrrSGZU8BNicmVbdwtnPz7UgFib35HyZOeLQ/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1200&quot;/&gt;&lt;figcaption&gt;03.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其实主要对比了使用虚拟DOM和直接操作真实DOM的区别。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在 React 中实现数据驱动视图大概流程是这样的：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;数据发生变化 -&amp;gt; 通过diff算法判断要更新哪些节点 -&amp;gt; 找到要更新的节点 -&amp;gt; 更新真实DOM&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Vue 的数据更新原理其实也差不多，只是实现方式和使用语法会有所不同。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;diff算法&lt;/strong&gt; 会根据数据更新前和更新后生成的虚拟DOM进行对比，只有两个版本的虚拟DOM存在差异时，才会更新对应的真实DOM。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用虚拟DOM对比的方式会比直接对比真实DOM的效率高。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;而且真实DOM身上挂载的属性和方法非常多，使用虚拟DOM的方式去描述DOM节点树会显得更轻便。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但这也意味着每次数据发生变化时都要先创建一个虚拟DOM，并使用 &lt;strong&gt;diff算法&lt;/strong&gt; 将新虚拟DOM与旧虚拟DOM进行比对，这个步骤会消耗一点性能和需要一点执行时间。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;而 Svelte 在未使用虚拟DOM的情况下实现了响应式设计。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我以粗暴的方式理解：Svelte 会监听顶层组件所有变量，一旦某个变量发生变化，就更新使用过该变量的组件。这就仅仅只需更新受影响的那部分DOM元素，而不需要整个组件更新。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;综上所述，在我的理解力，虚拟DOM的思想很优秀，也是顺应时代的产物，但虚拟DOM并不是最快的，JS 直接操作 DOM 才是最快。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;《Virtual DOM is pure overhead》&lt;/span&gt;&lt;sup&gt;[27]&lt;/sup&gt; 是 Svelte 官网上的一篇博客，专门讨论虚拟DOM。有兴趣的工友可以看看~&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;4. 更自然的响应式&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这也是我刚接触 Svelte 时立刻喜欢上的理由。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里说的响应式设计是只关于数据的响应，而不是像 Bootstrap 的响应式布局。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;现在流行的前端框架基本都使用 &lt;strong&gt;数据驱动视图&lt;/strong&gt; 这个概念，像 Vue 和 React 这些框架，都有响应式数据的概念。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但 Vue 和 React 在数据响应方面还是有点“不那么自然”，我简单举几个例子：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;在 React 中，如果需要更新数据并在视图中响应，需要使用 &lt;code&gt;setState&lt;/code&gt; 方法更新数据。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;在 Vue2 中，响应式数据要放在 &lt;code&gt;data&lt;/code&gt; 里，在 &lt;code&gt;methods&lt;/code&gt; 中使用 &lt;code&gt;this.xxx&lt;/code&gt; 来更新数据。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;在 Vue3 的 Composition API 语法中，需要使用 &lt;code&gt;ref&lt;/code&gt; 或者 &lt;code&gt;reactive&lt;/code&gt; 等方法包裹数据，使用 &lt;code&gt;xxx.value&lt;/code&gt; 等方式修改数据。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上面这几种情况，感觉多少都添加了点东西才能实现响应式数据功能（至少在普通开发者开发时是这样）。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在 Svelte 的理念中，响应式应该给开发者一种无感体验，比如在 Excel 中，当我规定 C1 单元格的值是 A1 + B1 的和，设置好规则后，用户只需要修改 A1 和 B1 即可，C1 会自动响应，而不需再做其他操作。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;1.0814332247557004&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHruP7kmM1svYNADxQXF91DoUDWibEVlxaibqTqvDefJX5Q9q9ic66Fic4uGuhSqYQr5eSJWkQ7nDrc8xQ/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;307&quot;/&gt;&lt;figcaption&gt;04.gif&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在这方面，Svelte 我认为在现阶段是做得最自然的。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.4634146341463415&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHruP7kmM1svYNADxQXF91Do0Ce0DluaP65ov4yd55Jja5Hic0Md9V1SFwemAdjicYV9gK2Z6L1YOopw/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;164&quot;/&gt;&lt;figcaption&gt;05.gif&lt;/figcaption&gt;&lt;/figure&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;{name}&lt;span&gt;&amp;lt;/&lt;span&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;br/&gt;  &lt;span&gt;let&lt;/span&gt; name = &lt;span&gt;&#x27;雷猴&#x27;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;  setTimeout(&lt;span&gt;&lt;span&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;br/&gt;    name = &lt;span&gt;&#x27;鲨鱼辣椒&#x27;&lt;/span&gt;&lt;br/&gt;  }, &lt;span&gt;1000&lt;/span&gt;)&lt;br/&gt;&amp;lt;/&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上面的代码中，1秒后修改 &lt;code&gt;name&lt;/code&gt; 的值，并更新视图。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从代码就能看出，在使用 Svelte 开发项目时，开发者一般无需使用额外的方法就能做到和 Vue、React 的响应式效果。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果你对 Svelte 响应式原理感兴趣，推荐阅读 &lt;span&gt;FESKY&lt;/span&gt;&lt;sup&gt;[28]&lt;/sup&gt; 的 &lt;span&gt;《Svelte 响应式原理剖析 —— 重新思考 Reactivity》&lt;/span&gt;&lt;sup&gt;[29]&lt;/sup&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;也可以看看 &lt;span&gt;《Rethinking reactivity》&lt;/span&gt;&lt;sup&gt;[30]&lt;/sup&gt;，看看官方对 reactivity 的思考。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;5. 性能强&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Stefan Krause 给出一份 &lt;span&gt;性能测试报告（点击可查看）&lt;/span&gt;&lt;sup&gt;[31]&lt;/sup&gt; 对比里多个热门框架的性能。从 Svelte 的性能测试结果可以看出，Svelte 是相当优秀的。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;6. 内存优化&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;性能测试报告（点击可查看）&lt;/span&gt;&lt;sup&gt;[32]&lt;/sup&gt; 也列出不同框架的内存占用程度，Svelte 对内存的管理做到非常极致，占用的内存也是非常小，这对于配置不高的设备来说是件好事。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;第5和6点，由于测试报告比较长，我没截图放进文中。大家有兴趣可以&lt;span&gt;点开链接查看测试报告&lt;/span&gt;&lt;sup&gt;[33]&lt;/sup&gt;。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;7. 更关注无障碍体验&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在使用 Svelte 开发时会 &lt;strong&gt;自动对无障碍访问方面的体验进行检测&lt;/strong&gt;，比如 &lt;code&gt;img&lt;/code&gt; 元素没有添加 &lt;code&gt;alt&lt;/code&gt; 属性，Svelte 会向你发出一条警告。无障碍体验对特殊人事来说是很有帮助的，比如当你在 &lt;code&gt;img&lt;/code&gt; 标签中设置好 &lt;code&gt;alt&lt;/code&gt; 属性值，使用有声浏览器会把 &lt;code&gt;alt&lt;/code&gt; 的内容读出来。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在此我还要推荐2本关于设计体验的书。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;《点石成金：访客至上的Web和移动可用性设计秘笈》&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;《包容性Web设计》&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;它们的封面长分别这个样子&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.2468827930174564&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHruP7kmM1svYNADxQXF91DoqJXzyUR7dSPbtJkpRJxsSHD4tbm8gwXzhms06A4eWElbtcTjdctuWQ/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;401&quot;/&gt;&lt;figcaption&gt;06.jpg&lt;/figcaption&gt;&lt;/figure&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;1.3526970954356847&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHruP7kmM1svYNADxQXF91Do2e5sAU5iaVDPicPufcJre4aTVYFTVC1xxcljDRFo19zWhLG7eicxjFhzA/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;482&quot;/&gt;&lt;figcaption&gt;07.jpg&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Svelte 的优势肯定还有很多，但由于我开发经验不足，只能总结出以上这些了。如果你对 Svelte 有更多理解，欢迎在评论区补充~&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;Svelte 的不足&lt;/span&gt;&lt;/h2&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;Svelte 对 IE 是非常不友好的，但我并不把这放在眼里。如果想兼容 IE 我还是推荐使用 jQuery。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Svelte 的生态不够丰富。由于是“新宠”，生态方面肯定是不如 Vue 和 React 的。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;与 Svelte 相关的库&lt;/span&gt;&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;Sapper&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;Sapper 官网地址&lt;/span&gt;&lt;sup&gt;[34]&lt;/sup&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Sapper 是构建在 Svelte 上的框架，Sapper 提供了页面路由、布局模板、SSR等功能。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;Svelte Native&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;Svelte Native 官网地址&lt;/span&gt;&lt;sup&gt;[35]&lt;/sup&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Svelte Native 是建立在 &lt;span&gt;NativeScript&lt;/span&gt;&lt;sup&gt;[36]&lt;/sup&gt; 之上的产物，可以开发安卓和iOS应用，是一个跨端技术。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有点类似于 React Native 和 Weex 之类的东西。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;svelte-gl&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;svelte-gl 仓库&lt;/span&gt;&lt;sup&gt;[37]&lt;/sup&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;svelte-gl 还没正式发布，但这是个很有趣的工具，它和 &lt;span&gt;three.js&lt;/span&gt;&lt;sup&gt;[38]&lt;/sup&gt; 类似，专门做 3D应用的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;虽然现在 github 上的 Star 还不是很多，但也可以写些 demo 玩玩。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;创建项目&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在开始之前，你需要在电脑上安装 &lt;span&gt;Node&lt;/span&gt;&lt;sup&gt;[39]&lt;/sup&gt; 环境。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;编辑工具我使用了 &lt;code&gt;VS Code&lt;/code&gt; ，同时安装了 &lt;span&gt;Svelte for VS Code 扩展插件&lt;/span&gt;&lt;sup&gt;[40]&lt;/sup&gt; 。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用 Svelte 前，必须有一个开发环境。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;创建或使用开发环境有以下几种方式：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;REPL&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Rollup&lt;/code&gt; 版&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Webpack&lt;/code&gt; 版&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Parcel&lt;/code&gt; 版&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Vite&lt;/code&gt; 版&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本文使用的是 &lt;code&gt;Vite&lt;/code&gt; 创建项目，但上面列出的所有方式我都会逐一说说。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;REPL&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;REPL&lt;/code&gt; 是 Svelte 提供的一个线上环境，打开 &lt;span&gt;Svelte 官网&lt;/span&gt;&lt;sup&gt;[41]&lt;/sup&gt; 可以看到顶部导航栏上面有个 &lt;span&gt;REPL&lt;/span&gt;&lt;sup&gt;[42]&lt;/sup&gt; 的选项。点击该选项就可以跳转到 Svelte 线上开发环境了。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.7836166924265843&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHruP7kmM1svYNADxQXF91DorHYW9Kqia3DXTx0aPVYibuPhSj8wFPhcGWUtoZP388lS2ElR39ftXFiag/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1294&quot;/&gt;&lt;figcaption&gt;08.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.7836166924265843&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHruP7kmM1svYNADxQXF91DoW31ias9mZLhJVFJLaAm11ficBrHYwg2UIHUcDdvaeT2euhDCDyJ85k7g/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1294&quot;/&gt;&lt;figcaption&gt;09.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;REPL&lt;/code&gt; 是 &lt;code&gt;read(读取)&lt;/code&gt;、&lt;code&gt;evaluate(执行)&lt;/code&gt;、&lt;code&gt;print(打印)&lt;/code&gt; 和 &lt;code&gt;loop(循环)&lt;/code&gt; 这几个单词的缩写。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果你只是想尝试 Svelte 的某些功能或者测试小型代码，可以使用这款线上工具。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;REPL&lt;/code&gt; 还提供了多组件开发，按左上角的 &lt;code&gt;+号&lt;/code&gt; 可以创建新组件。组件的内容稍后会说到。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;界面右侧，顶部有3个选项：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Result&lt;/code&gt;: 运行结果。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;JS output&lt;/code&gt;: Svelte 编译后的 &lt;code&gt;JS&lt;/code&gt; 代码。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;CSS output&lt;/code&gt;: Svelte 编译后的 &lt;code&gt;CSS&lt;/code&gt; 代码。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7836166924265843&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHruP7kmM1svYNADxQXF91DoxrjTm6gROLpHFfbyUWRBWDPnzmqGgPDibicQZZh3XOeibJqsX7TEHgqMA/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1294&quot;/&gt;&lt;figcaption&gt;10.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在 &lt;code&gt;REPL&lt;/code&gt; 界面右上角还有一个下载按钮。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5384615384615384&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHruP7kmM1svYNADxQXF91DoT3vbHlEaTh62QFxCe8Ve82CuTRib8aiabicJvBdyaxLBRY0EvGglnwic0w/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;663&quot;/&gt;&lt;figcaption&gt;11.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当你在线上环境写好代码，可以点击下载按钮把项目保存到本地，下载的文件是一个 &lt;code&gt;zip&lt;/code&gt;，需要自己手动解压。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然后使用以下命令初始化项目并运行即可。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 1、初始化项目&lt;/span&gt;&lt;br/&gt;npm install&lt;br/&gt;&lt;span&gt;&lt;br/&gt;#&lt;/span&gt;&lt;span&gt; 2、运行项目&lt;/span&gt;&lt;br/&gt;npm run dev&lt;br/&gt;&lt;span&gt;&lt;br/&gt;#&lt;/span&gt;&lt;span&gt; 3、在浏览器访问 http://localhost:5000&lt;/span&gt;&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;运行结果：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4791666666666667&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHruP7kmM1svYNADxQXF91DooRvkKMVQaD0thKeKkMkTObPy52soWxBmgTnvNHicPP7KZpTaeFibSBAQ/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;240&quot;/&gt;&lt;figcaption&gt;12.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;Rollup 版&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Svelte 官方也提供了一个命令，可以下载 Svelte 项目到本地。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;命令最后需要输入你的项目名称。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;# 1、下载模板&lt;/span&gt;&lt;br/&gt;npx degit sveltejs/template 项目名称&lt;br/&gt;&lt;br/&gt;&lt;span&gt;# 2、安装依赖&lt;/span&gt;&lt;br/&gt;npm install&lt;br/&gt;&lt;br/&gt;&lt;span&gt;# 3、运行项目&lt;/span&gt;&lt;br/&gt;npm run dev&lt;br/&gt;&lt;br/&gt;&lt;span&gt;# 4、在浏览器访问 http://localhost:8080&lt;/span&gt;&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;运行结果：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.4966216216216216&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHruP7kmM1svYNADxQXF91DoKgDZq2c2VqEnXQs0fIE9TsP0BWf3kJT8XHhPhgbXCfG3f9FiayhtvUA/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;592&quot;/&gt;&lt;figcaption&gt;13.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这是官方提供的创建项目方式，这个项目是使用 Rollup 打包的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Rollup 和 Svelte 都是同一个作者（&lt;span&gt;Rich Harris&lt;/span&gt;&lt;sup&gt;[43]&lt;/sup&gt; ）开发的，用回自家东西很正常。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;Webpack 版&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果你不想使用 Rollup 打包项目，可以尝试使用 Webpack。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;# 1、下载模板&lt;/span&gt;&lt;br/&gt;npx degit sveltejs/template-webpack 项目名称&lt;br/&gt;&lt;br/&gt;&lt;span&gt;# 2、安装依赖&lt;/span&gt;&lt;br/&gt;npm install&lt;br/&gt;&lt;br/&gt;&lt;span&gt;# 3、运行项目&lt;/span&gt;&lt;br/&gt;npm run dev&lt;br/&gt;&lt;br/&gt;&lt;span&gt;# 4、在浏览器访问 http://localhost:8080/&lt;/span&gt;&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;运行结果：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHruP7kmM1svYNADxQXF91DovmRj6icOGt8ycFyCPUibyyqemwQLCQGhL33NDzqXxhrT2ISLK0fGnGMg/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;638&quot;/&gt;&lt;figcaption&gt;14.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;Parcel 版&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我并 &lt;strong&gt;不推荐使用&lt;/strong&gt; 该方法创建项目，因为 Svelte 并没有提供使用 Parcel 打包工具的模板。但 &lt;span&gt;GitHub 上有第三方的解决方案（点击访问仓库）&lt;/span&gt;&lt;sup&gt;[44]&lt;/sup&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;将 &lt;span&gt;DeMoorJasper/parcel-plugin-svelte&lt;/span&gt;&lt;sup&gt;[45]&lt;/sup&gt; 的代码下载下来。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 1、进入 `packages/svelte-3-example` 目录&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;br/&gt;#&lt;/span&gt;&lt;span&gt; 2、安装依赖&lt;/span&gt;&lt;br/&gt;npm install&lt;br/&gt;&lt;span&gt;&lt;br/&gt;#&lt;/span&gt;&lt;span&gt; 3、运行项目&lt;/span&gt;&lt;br/&gt;npm run start&lt;br/&gt;&lt;span&gt;&lt;br/&gt;#&lt;/span&gt;&lt;span&gt; 4、在浏览器访问 http://localhost:1234/&lt;/span&gt;&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;运行结果：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8333333333333334&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHruP7kmM1svYNADxQXF91Do0wrHl4YOZJMa23ceENFgnjxV4IgBRsrk4Y8srQuv4frRXoFWEDCSwg/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;378&quot;/&gt;&lt;figcaption&gt;15.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;Vite 版&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本文接下来所有例子都是使用 Vite 创建 Svelte 项目进行开发的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用 Vite 创建项目的原因是：&lt;strong&gt;快！&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;# 1、下载模板的命令&lt;/span&gt;&lt;br/&gt;npm init vite@latest&lt;br/&gt;&lt;br/&gt;&lt;span&gt;# 2、输入项目名&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;# 3、选择 Svelte 模板（我没选ts）&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;# 4、进入项目并安装依赖&lt;/span&gt;&lt;br/&gt;npm install&lt;br/&gt;&lt;br/&gt;&lt;span&gt;# 5、运行项目&lt;/span&gt;&lt;br/&gt;npm run dev&lt;br/&gt;&lt;br/&gt;&lt;span&gt;# 6、在浏览器访问 http://127.0.0.1:5173/&lt;/span&gt;&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;运行结果：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7454780361757106&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHruP7kmM1svYNADxQXF91DomrzRvSVwkEqLb68sI3JJFZBql0TjJibTbqlxEUOicbnUia2d6Wb4vvlyw/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;774&quot;/&gt;&lt;figcaption&gt;16.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本文使用 Vite 创建项目，目录结构和 Rollup版 创建出来的项目结构稍微有点不同，但开发逻辑是一样的。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;起步&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;index.html&lt;/code&gt; 、&lt;code&gt;src/main.js&lt;/code&gt; 和 &lt;code&gt;src/App.svelte&lt;/code&gt; 这三个是最主要的文件。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;index.html&lt;/code&gt; 是项目运行的入口文件，它里面引用了 &lt;code&gt;src/main.js&lt;/code&gt; 文件。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;src/main.js&lt;/code&gt; 里引入了 &lt;code&gt;src/App.svelte&lt;/code&gt; 组件，并使用以下代码将 &lt;code&gt;src/App.svelte&lt;/code&gt; 的内容渲染到 &lt;code&gt;#app&lt;/code&gt; 元素里。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;const&lt;/span&gt; app = &lt;span&gt;new&lt;/span&gt; App({&lt;br/&gt;  &lt;span&gt;target&lt;/span&gt;: &lt;span&gt;document&lt;/span&gt;.getElementById(&lt;span&gt;&#x27;app&#x27;&lt;/span&gt;)&lt;br/&gt;})&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;target&lt;/code&gt; 指明目标元素。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们大部分代码都是写在 &lt;code&gt;.svelte&lt;/code&gt; 后缀的文件里。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;.svelte&lt;/code&gt; 文件主要保安 &lt;code&gt;多个 HTML 元素&lt;/code&gt;、&lt;code&gt;1个 script 元素&lt;/code&gt; 和 &lt;code&gt;1个 style 元素&lt;/code&gt; 。这3类元素都是可选的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们主要的工作目录是 &lt;code&gt;src&lt;/code&gt; 目录。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为了减轻学习难度，我们先做这几步操作。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;1、清空全局样式&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果你使用 Rollup版 创建项目，不需要做这一步。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在使用 Vite 创建的 Svelte 项目中，找到 &lt;code&gt;src/app.css&lt;/code&gt; 文件，并把里面的内容清空掉。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;2、改造 src/App.svelte&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;将 &lt;code&gt;src/App.svelte&lt;/code&gt; 文件改成以下内容&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;br/&gt;  &lt;span&gt;let&lt;/span&gt; name = &lt;span&gt;&#x27;雷猴&#x27;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;&lt;span&gt;function&lt;/span&gt; &lt;span&gt;handleClick&lt;/span&gt;() &lt;/span&gt;{&lt;br/&gt;    name = &lt;span&gt;&#x27;鲨鱼辣椒&#x27;&lt;/span&gt;&lt;br/&gt;  }&lt;br/&gt;&amp;lt;/&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;Hello {name}&lt;span&gt;&amp;lt;/&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;button&lt;/span&gt; &lt;span&gt;on:click&lt;/span&gt;=&lt;span&gt;{handleClick}&lt;/span&gt;&amp;gt;&lt;/span&gt;改名&lt;span&gt;&amp;lt;/&lt;span&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;此时点击按钮，页面上的 “雷猴” 就会变成 “鲨鱼辣椒”&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.546875&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHruP7kmM1svYNADxQXF91DozD6OnOahibNRJleePWf2VGiakv1seTS8RV9TTA4RVNmVSmhcs2UuoMFg/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;192&quot;/&gt;&lt;figcaption&gt;17.gif&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上面的代码其实和 Vue 有点像。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;变量和方法都写在 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 标签里。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;在 &lt;code&gt;HTML&lt;/code&gt; 中使用 &lt;code&gt;{}&lt;/code&gt; 可以绑定变量和方法。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;通过 &lt;code&gt;on:click&lt;/code&gt; 可以绑定点击事件。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;只需写以上代码，Svelte 就会自动帮我们做数据响应的操作。一旦数据发生改变，视图也会自动改变。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;是不是非常简单！&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;基础模板语法&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Svelte 的模板语法其实和 Vue 是有点像的。如果你之前已经使用过 Vue，那本节学起来就非常简单。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;插值&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在 “起步章节” 已经使用过 &lt;strong&gt;插值&lt;/strong&gt; 了。在 Svelte 中，使用 &lt;code&gt;{}&lt;/code&gt; 大括号将 &lt;code&gt;script&lt;/code&gt; 里的数据绑定到 &lt;code&gt;HTML&lt;/code&gt; 中。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6641221374045801&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHruP7kmM1svYNADxQXF91DoBPIOYqP5cWTL6cy7kRvujaaFNNzf2bw0S688VSYGDS6usdsFiaQ8AXg/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;131&quot;/&gt;&lt;figcaption&gt;18.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;br/&gt;  &lt;span&gt;let&lt;/span&gt; name = &lt;span&gt;&#x27;雷猴&#x27;&lt;/span&gt;&lt;br/&gt;&amp;lt;/&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;{name}&lt;span&gt;&amp;lt;/&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;此时页面上就会出现 &lt;code&gt;name&lt;/code&gt; 的值。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这种语法和 Vue 是有点像的，Vue 使用双大括号的方式 &lt;code&gt;{{}}&lt;/code&gt; 绑定数据。Svelte 就少一对括号。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;表达式&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在 &lt;code&gt;HTML&lt;/code&gt; 中除了可以绑定变量外，还可以绑定表达式。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHruP7kmM1svYNADxQXF91Doz06RZ4U4bmhItkP2bpHcvUicQT4Y1iblMF5trSWkxlaO3fmKQTiacMCfw/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;200&quot;/&gt;&lt;figcaption&gt;19.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;br/&gt;  &lt;span&gt;let&lt;/span&gt; name = &lt;span&gt;&#x27;雷猴&#x27;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;&lt;span&gt;function&lt;/span&gt; &lt;span&gt;sayHi&lt;/span&gt;() &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;`&lt;span&gt;${name}&lt;/span&gt; 世界！`&lt;/span&gt;&lt;br/&gt;  }&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;let&lt;/span&gt; a = &lt;span&gt;1&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;let&lt;/span&gt; b = &lt;span&gt;2&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;let&lt;/span&gt; state = &lt;span&gt;false&lt;/span&gt;&lt;br/&gt;&amp;lt;/&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;{sayHi()}&lt;span&gt;&amp;lt;/&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;{a} + {b} = {a + b}&lt;span&gt;&amp;lt;/&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;{state ? &#x27;雷猴&#x27; : &#x27;鲨鱼辣椒&#x27;}&lt;span&gt;&amp;lt;/&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;属性绑定&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;HTML&lt;/code&gt; 的属性需要动态绑定数据时，也是使用 &lt;code&gt;{}&lt;/code&gt; 语法。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4230769230769231&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHruP7kmM1svYNADxQXF91DoM0Zb5rP9CUk022MWRMxZc6oTckCFdGM4YeqSjVQZLFvrkdeydM7mJQ/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;546&quot;/&gt;&lt;figcaption&gt;20.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;br/&gt;  &lt;span&gt;let&lt;/span&gt; name = &lt;span&gt;&#x27;雷猴&#x27;&lt;/span&gt;&lt;br/&gt;&amp;lt;/&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;div&lt;/span&gt; &lt;span&gt;title&lt;/span&gt;=&lt;span&gt;{name}&lt;/span&gt;&amp;gt;&lt;/span&gt;Hello&lt;span&gt;&amp;lt;/&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当鼠标放到 &lt;code&gt;div&lt;/code&gt; 标签上时，会出现 &lt;code&gt;title&lt;/code&gt; 里的提示信息。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;渲染 HTML 标签 @html&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果只是使用插值的方法渲染带有 &lt;code&gt;HTML&lt;/code&gt; 标签的内容，Svelte 会自动转义 &lt;code&gt;&amp;lt;&lt;/code&gt; 、&lt;code&gt;&amp;gt;&lt;/code&gt; 之类的标签。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.21637426900584794&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHruP7kmM1svYNADxQXF91DoPQUCsmZOXicQ6gjEgsuDTHicEsca4WG7qKnsw1bfMXzog5vIuCUMics2A/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;342&quot;/&gt;&lt;figcaption&gt;21.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;br/&gt;  let h1El = &#x27;&lt;span&gt;&amp;lt;&lt;span&gt;h1&lt;/span&gt; &lt;span&gt;style&lt;/span&gt;=&lt;span&gt;&quot;color: pink;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;雷猴&lt;span&gt;&amp;lt;/&lt;span&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&#x27;&lt;br/&gt;&amp;lt;/&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;{h1El}&lt;span&gt;&amp;lt;/&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这种情况多数出现在渲染富文本。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在 Vue 中有 &lt;code&gt;v-html&lt;/code&gt; 方法，它可以将 &lt;code&gt;HTML&lt;/code&gt; 标签渲染出来。在 Svelte 中也有这个方法，在插值前面使用 &lt;code&gt;@html&lt;/code&gt; 标记一下即可。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.43859649122807015&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHruP7kmM1svYNADxQXF91DoaFE2EJLvtCUGcqjFhuULCQvvbSiakQVINyYRt1yQJgYWJfCl01IMPbg/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;228&quot;/&gt;&lt;figcaption&gt;22.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;br/&gt;  let h1El = &#x27;&lt;span&gt;&amp;lt;&lt;span&gt;h1&lt;/span&gt; &lt;span&gt;style&lt;/span&gt;=&lt;span&gt;&quot;color: pink;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;雷猴&lt;span&gt;&amp;lt;/&lt;span&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&#x27;&lt;br/&gt;&amp;lt;/&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;{@html h1El}&lt;span&gt;&amp;lt;/&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但此方法有可能遭受 &lt;code&gt;XSS&lt;/code&gt; 攻击。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我在 &lt;span&gt;《NodeJS 防止xss攻击》&lt;/span&gt;&lt;sup&gt;[46]&lt;/sup&gt; 中简单演示过 &lt;code&gt;XSS&lt;/code&gt; 攻击，有兴趣的可以看看。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;样式绑定&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在日常开发中，给 &lt;code&gt;HTML&lt;/code&gt; 标签设置样式主要通过 &lt;code&gt;行内 style&lt;/code&gt; 和 &lt;code&gt;class&lt;/code&gt; 属性。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;基础的 &lt;code&gt;HTML&lt;/code&gt; 写法和原生的一样，这里不过多讲解。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下面主要讲动态设置样式，也就是将 &lt;code&gt;JS&lt;/code&gt; 里的变量或者表达式绑定到 &lt;code&gt;style&lt;/code&gt; 或者 &lt;code&gt;class&lt;/code&gt; 里。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;行内样式 style&lt;/span&gt;&lt;/h2&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.546875&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHruP7kmM1svYNADxQXF91DoWSoIZ2YtN34R3icxZvrxXM70fKEIpiagdZOJLibiaHWYdcklE0P6kxhL3g/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;192&quot;/&gt;&lt;figcaption&gt;23.gif&lt;/figcaption&gt;&lt;/figure&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;br/&gt;  &lt;span&gt;let&lt;/span&gt; color = &lt;span&gt;&#x27;red&#x27;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;  setTimeout(&lt;span&gt;&lt;span&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;br/&gt;    color = &lt;span&gt;&#x27;blue&#x27;&lt;/span&gt;&lt;br/&gt;  }, &lt;span&gt;1000&lt;/span&gt;)&lt;br/&gt;&amp;lt;/&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;div&lt;/span&gt; &lt;span&gt;style&lt;/span&gt;=&lt;span&gt;&quot;color: {color}&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;雷猴&lt;span&gt;&amp;lt;/&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1秒后，文字从红色变成蓝色。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;绑定 class&lt;/span&gt;&lt;/h2&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.546875&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHruP7kmM1svYNADxQXF91Do8YWmDNSl5UUOr7geiacONibR2S67pt7G3NibXpjlEGzMAcic4fdqn6W9Zg/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;192&quot;/&gt;&lt;figcaption&gt;24.gif&lt;/figcaption&gt;&lt;/figure&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;br/&gt;  &lt;span&gt;let&lt;/span&gt; foo = &lt;span&gt;true&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;  setTimeout(&lt;span&gt;&lt;span&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;br/&gt;    foo = &lt;span&gt;false&lt;/span&gt;&lt;br/&gt;  }, &lt;span&gt;1000&lt;/span&gt;)&lt;br/&gt;&amp;lt;/&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;div&lt;/span&gt; &lt;span&gt;class:active&lt;/span&gt;=&lt;span&gt;{foo}&lt;/span&gt;&amp;gt;&lt;/span&gt;雷猴&lt;span&gt;&amp;lt;/&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;style&lt;/span&gt;&amp;gt;&lt;br/&gt;  &lt;span&gt;.active&lt;/span&gt; {&lt;br/&gt;    &lt;span&gt;color&lt;/span&gt;: red;&lt;br/&gt;  }&lt;br/&gt;&amp;lt;/&lt;span&gt;style&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在 &lt;code&gt;HTML&lt;/code&gt; 里可以使用 &lt;code&gt;class:xxx&lt;/code&gt; 动态设置要激活的类。这里的 &lt;code&gt;xxx&lt;/code&gt; 是对应的类名。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;语法是 &lt;code&gt;class:xxx={state}&lt;/code&gt; ，当 &lt;code&gt;state&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; 时，这个样式就会被激活使用。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;条件渲染 #if&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用 &lt;code&gt;{#if}&lt;/code&gt; 开头，&lt;code&gt;{/if}&lt;/code&gt; 结尾。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;基础条件判断&lt;/span&gt;&lt;/h2&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;{&lt;span&gt;#if 条件判断}&lt;/span&gt;&lt;br/&gt;...&lt;br/&gt;{/&lt;span&gt;if&lt;/span&gt;}&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;举个例子&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.546875&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHruP7kmM1svYNADxQXF91Do9JYN9gEJicrqcc6pyfuPAScoyJ3HErgA4ibL5GvFmBo165KHfYEFuXhQ/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;192&quot;/&gt;&lt;figcaption&gt;25.gif&lt;/figcaption&gt;&lt;/figure&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;br/&gt;  &lt;span&gt;let&lt;/span&gt; state = &lt;span&gt;true&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;  setTimeout(&lt;span&gt;&lt;span&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;br/&gt;    state = &lt;span&gt;false&lt;/span&gt;&lt;br/&gt;  }, &lt;span&gt;1000&lt;/span&gt;)&lt;br/&gt;&amp;lt;/&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;{#if state}&lt;br/&gt;  &lt;span&gt;&amp;lt;&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;雷猴&lt;span&gt;&amp;lt;/&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;{/if}&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1秒后改变状态&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;两种条件&lt;/span&gt;&lt;/h2&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;{&lt;span&gt;#if 条件判断}&lt;/span&gt;&lt;br/&gt;...&lt;br/&gt;{:&lt;span&gt;else&lt;/span&gt;}&lt;br/&gt;...&lt;br/&gt;{/&lt;span&gt;if&lt;/span&gt;}&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;举个例子&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.546875&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHruP7kmM1svYNADxQXF91DoW5wqUj4yich7lqLh84mdtAYQ1cIpfUGfsxqDc62X2ibYBw4tbGXzwDibg/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;192&quot;/&gt;&lt;figcaption&gt;26.gif&lt;/figcaption&gt;&lt;/figure&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;br/&gt;  &lt;span&gt;let&lt;/span&gt; state = &lt;span&gt;true&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;  setTimeout(&lt;span&gt;&lt;span&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;br/&gt;    state = &lt;span&gt;false&lt;/span&gt;&lt;br/&gt;  }, &lt;span&gt;1000&lt;/span&gt;)&lt;br/&gt;&amp;lt;/&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;{#if state}&lt;br/&gt;  &lt;span&gt;&amp;lt;&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;雷猴&lt;span&gt;&amp;lt;/&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;{:else}&lt;br/&gt;  &lt;span&gt;&amp;lt;&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;鲨鱼辣椒&lt;span&gt;&amp;lt;/&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;{/if}&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;多种条件&lt;/span&gt;&lt;/h2&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;{&lt;span&gt;#if 条件判断}&lt;/span&gt;&lt;br/&gt;...&lt;br/&gt;{:&lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; 条件判断}&lt;br/&gt;...&lt;br/&gt;{/&lt;span&gt;if&lt;/span&gt;}&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;举个例子&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.546875&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHruP7kmM1svYNADxQXF91DoS2SJaC6I7SbicXMzBvjBBpz2DWicaz0rTib2Q7hyS2V9650UsKWzUwiaqw/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;192&quot;/&gt;&lt;figcaption&gt;27.gif&lt;/figcaption&gt;&lt;/figure&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;br/&gt;  &lt;span&gt;let&lt;/span&gt; count = &lt;span&gt;1&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;  setInterval(&lt;span&gt;&lt;span&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;br/&gt;    count++&lt;br/&gt;  }, &lt;span&gt;1000&lt;/span&gt;)&lt;br/&gt;&amp;lt;/&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;{#if count === 1}&lt;br/&gt;  &lt;span&gt;&amp;lt;&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;雷猴&lt;span&gt;&amp;lt;/&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;{:else if count === 2}&lt;br/&gt;  &lt;span&gt;&amp;lt;&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;鲨鱼辣椒&lt;span&gt;&amp;lt;/&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;{:else}&lt;br/&gt;  &lt;span&gt;&amp;lt;&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;蟑螂恶霸&lt;span&gt;&amp;lt;/&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;{/if}&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;条件渲染的用法比较简单，只要 &lt;code&gt;JS&lt;/code&gt; 基础就能看得懂。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;列表渲染 #each&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果你有一堆数据需要展示出来，可以使用 &lt;code&gt;#each&lt;/code&gt; 方法。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用 &lt;code&gt;{#each}&lt;/code&gt; 开头，&lt;code&gt;{/each}&lt;/code&gt; 结尾。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;遍历数组&lt;/span&gt;&lt;/h2&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;{#each expression as name}&lt;br/&gt;...&lt;br/&gt;{/each}&lt;br/&gt;复制代码&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;举个例子&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.8743718592964824&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHruP7kmM1svYNADxQXF91DotlARBrxibE8N7FLFJ7XNecL3lC54zYeefPJMjYpJBQA0kth1YBxkkvw/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;199&quot;/&gt;&lt;figcaption&gt;28.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;br/&gt;  &lt;span&gt;let&lt;/span&gt; list = [&lt;span&gt;&#x27;a&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;b&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;c&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;d&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;e&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;f&#x27;&lt;/span&gt;]&lt;br/&gt;&amp;lt;/&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;  {#each list as item}&lt;br/&gt;   &lt;span&gt;&amp;lt;&lt;span&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;{item}&lt;span&gt;&amp;lt;/&lt;span&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;  {/each}&lt;br/&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;要注意，Svelte 和 Vue 的遍历在写法上有点不同。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Vue的方式是：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;div&lt;/span&gt; &lt;span&gt;v-for&lt;/span&gt;=&lt;span&gt;&quot;元素 in 源数据&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;&amp;lt;&lt;span&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;{{元素}}&lt;span&gt;&amp;lt;/&lt;span&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Svelte的方式是：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;  {#each 源数据 as 元素}&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;{元素}&lt;span&gt;&amp;lt;/&lt;span&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;  {/each}&lt;br/&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;遍历数组（带下标）&lt;/span&gt;&lt;/h2&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.7894736842105263&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHruP7kmM1svYNADxQXF91DoDng60MictN5xFDFoPZznEGcZAKrYxT4I7g98OHoVOryal6rHECxA66A/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;209&quot;/&gt;&lt;figcaption&gt;29.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;br/&gt;  &lt;span&gt;let&lt;/span&gt; list = [&lt;span&gt;&#x27;a&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;b&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;c&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;d&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;e&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;f&#x27;&lt;/span&gt;]&lt;br/&gt;&amp;lt;/&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;  {#each list as item, index}&lt;br/&gt;   &lt;span&gt;&amp;lt;&lt;span&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;{index} -- {item}&lt;span&gt;&amp;lt;/&lt;span&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;  {/each}&lt;br/&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;注意：as 后面首先跟着元素，然后才是下标。而且元素和下标不需要用括号括起来。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;如果元素是对象，可以解构&lt;/span&gt;&lt;/h2&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5459183673469388&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHruP7kmM1svYNADxQXF91DoHZfo4bzkMAf4icLDO38QiaYUVWDV00msBf6nevA604fOOPvdaxWpqpFw/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;196&quot;/&gt;&lt;figcaption&gt;30.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;br/&gt;  &lt;span&gt;let&lt;/span&gt; list = [&lt;br/&gt;    {&lt;span&gt;name&lt;/span&gt;: &lt;span&gt;&#x27;雷猴&#x27;&lt;/span&gt;},&lt;br/&gt;    {&lt;span&gt;name&lt;/span&gt;: &lt;span&gt;&#x27;鲨鱼辣椒&#x27;&lt;/span&gt;}&lt;br/&gt;  ]&lt;br/&gt;&amp;lt;/&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;  {#each list as {name}}&lt;br/&gt;   &lt;span&gt;&amp;lt;&lt;span&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;{name}&lt;span&gt;&amp;lt;/&lt;span&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;  {/each}&lt;br/&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;默认内容&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果源数据没有内容，是空数组的情况下，还可以组合 &lt;code&gt;{:else}&lt;/code&gt; 一起使用。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.4619883040935672&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHruP7kmM1svYNADxQXF91DoEZ7EO5mZGKIfkyL6QYVfrusyBnV43Acc3GSmHn6PpFMCJicljgNHrtw/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;171&quot;/&gt;&lt;figcaption&gt;31.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;br/&gt;  &lt;span&gt;let&lt;/span&gt; list = []&lt;br/&gt;&amp;lt;/&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;  {#each list as {name}}&lt;br/&gt;   &lt;span&gt;&amp;lt;&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;{name}&lt;span&gt;&amp;lt;/&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;  {:else}&lt;br/&gt;   &lt;span&gt;&amp;lt;&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;暂无数据&lt;span&gt;&amp;lt;/&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;  {/each}&lt;br/&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;事件绑定 on:event&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用 &lt;code&gt;on:&lt;/code&gt; 指令监听 &lt;code&gt;DOM&lt;/code&gt; 事件，&lt;code&gt;on:&lt;/code&gt; 后面跟随事件类型&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;语法：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;on&lt;/span&gt;:事件类型={事件名}&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;举个例子，点击按钮时在控制台输出 “雷猴”。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.548951048951049&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHruP7kmM1svYNADxQXF91DoA6a8RxKnYRDviaQP4ictmkmxPwLAZq3gLicbhKkovP52mA2OgyibCCwxdg/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;286&quot;/&gt;&lt;figcaption&gt;32.gif&lt;/figcaption&gt;&lt;/figure&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;br/&gt;  &lt;span&gt;&lt;span&gt;function&lt;/span&gt; &lt;span&gt;sayHi&lt;/span&gt;() &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;console&lt;/span&gt;.log(&lt;span&gt;&#x27;雷猴&#x27;&lt;/span&gt;)&lt;br/&gt;  }&lt;br/&gt;&amp;lt;/&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;button&lt;/span&gt; &lt;span&gt;on:click&lt;/span&gt;=&lt;span&gt;{sayHi}&lt;/span&gt;&amp;gt;&lt;/span&gt;打招呼&lt;span&gt;&amp;lt;/&lt;span&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;绑定其他事件（比如change等）也是同样的道理。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;事件修饰符&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果你只希望某些事件只执行一次，或者取消默认行为，或者阻止冒泡等，可以使用事件修饰符。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;语法：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;on&lt;/span&gt;:事件类型|修饰符={事件名}&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;举个例子，我希望点击事件只能执行一次，之后再点击都无效，可以使用官方提供的 &lt;code&gt;once&lt;/code&gt; 修饰符。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.548951048951049&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHruP7kmM1svYNADxQXF91Do1xSbsZPcibMCqSaCSOBoBu9UsULQbnydJZxMoy64z7EAAsIeXcSghfA/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;286&quot;/&gt;&lt;figcaption&gt;33.gif&lt;/figcaption&gt;&lt;/figure&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;br/&gt;  &lt;span&gt;&lt;span&gt;function&lt;/span&gt; &lt;span&gt;sayHi&lt;/span&gt;() &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;console&lt;/span&gt;.log(&lt;span&gt;&#x27;雷猴&#x27;&lt;/span&gt;)&lt;br/&gt;  }&lt;br/&gt;&amp;lt;/&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;button&lt;/span&gt; &lt;span&gt;on:click&lt;/span&gt;|&lt;span&gt;once&lt;/span&gt;=&lt;span&gt;{sayHi}&lt;/span&gt;&amp;gt;&lt;/span&gt;打招呼&lt;span&gt;&amp;lt;/&lt;span&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从上图可以看出，多次点击都只是输出1次“雷猴”。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;除了 &lt;code&gt;once&lt;/code&gt; 之外，还有以下这些修饰符可以用：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;preventDefault&lt;/code&gt; ：禁止默认事件。在程序运行之前调用 &lt;code&gt;event.preventDefault()&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;stopPropagation&lt;/code&gt; ：调用 &lt;code&gt;event.stopPropagation()&lt;/code&gt;, 防止事件到达下一个标签&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;passive&lt;/code&gt; ：改善了 touch/wheel 事件的滚动表现（Svelte会在合适的地方自动加上它）&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;capture&lt;/code&gt;：表示在 _capture_阶段而不是_bubbling_触发其程序&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;once&lt;/code&gt; ：程序运行一次后删除自身&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;串联修饰符&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;修饰符还可以串联起来使用，比如 &lt;code&gt;on:click|once|capture={...}&lt;/code&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但需要注意，有些特殊的标签使用修饰符会出现“意想不到”的结果，比如 &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; 标签。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5379188712522046&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHruP7kmM1svYNADxQXF91Do2ZOs61I2G5St6SKcHuo3yWQgokymciaF969CiayhjaCp8T4PmRfjVCsA/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;567&quot;/&gt;&lt;figcaption&gt;34.gif&lt;/figcaption&gt;&lt;/figure&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;br/&gt;  &lt;span&gt;&lt;span&gt;function&lt;/span&gt; &lt;span&gt;toLearn&lt;/span&gt;() &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;console&lt;/span&gt;.log(&lt;span&gt;&#x27;还在思考要不要学Canvas&#x27;&lt;/span&gt;)&lt;br/&gt;  }&lt;br/&gt;&amp;lt;/&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;a&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;href&lt;/span&gt;=&lt;span&gt;&quot;https://juejin.cn/post/7116784455561248775&quot;&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;on:click&lt;/span&gt;|&lt;span&gt;once&lt;/span&gt;|&lt;span&gt;preventDefault&lt;/span&gt;=&lt;span&gt;{toLearn}&lt;/span&gt;&lt;br/&gt;&amp;gt;&lt;/span&gt;去学习Canvas ？&lt;span&gt;&amp;lt;/&lt;span&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本来是想给 &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; 标签绑定一个点击事件，第一次点击时在控制台输出一句话，并且禁止 &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; 标签的默认事件。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以使用了 &lt;code&gt;once&lt;/code&gt; 和 &lt;code&gt;preventDefault&lt;/code&gt; 修饰符。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但实际上并非如此。上面的代码意思是 &lt;code&gt;once&lt;/code&gt; 设定了只执行一次 &lt;code&gt;toLearn&lt;/code&gt; 事件，并且只有一次 &lt;code&gt;preventDefault&lt;/code&gt; 是有效的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;只有点击时就不触发 &lt;code&gt;toLearn&lt;/code&gt; 了，而且 &lt;code&gt;preventDefault&lt;/code&gt; 也会失效。所以再次点击时，&lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; 元素就会触发自身的跳转功能。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;数据绑定 bind&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;数据绑定通常会和表单元素结合使用。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;bind&lt;/code&gt; 可以做到双向数据绑定的效果。我觉得 Svelte 里的 &lt;code&gt;bind&lt;/code&gt; 有点像 Vue 的 &lt;code&gt;v-model&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;语法：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;bind:property={variable}&lt;br/&gt;复制代码&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;input 单行输入框&lt;/span&gt;&lt;/h2&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5379188712522046&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHruP7kmM1svYNADxQXF91Do1ibAtyRWbkhrib9jcwge6KbT8PjzSsyg1pvKpuUib06KT5jxPsELoGxUQ/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;567&quot;/&gt;&lt;figcaption&gt;35.gif&lt;/figcaption&gt;&lt;/figure&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;br/&gt;  &lt;span&gt;let&lt;/span&gt; msg = &lt;span&gt;&#x27;hello&#x27;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;&lt;span&gt;function&lt;/span&gt; &lt;span&gt;print&lt;/span&gt;() &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;console&lt;/span&gt;.log(msg)&lt;br/&gt;  }&lt;br/&gt;&amp;lt;/&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;input&lt;/span&gt; &lt;span&gt;type&lt;/span&gt;=&lt;span&gt;&quot;text&quot;&lt;/span&gt; &lt;span&gt;value&lt;/span&gt;=&lt;span&gt;{msg}&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;button&lt;/span&gt; &lt;span&gt;on:click&lt;/span&gt;=&lt;span&gt;{print}&lt;/span&gt;&amp;gt;&lt;/span&gt;打印&lt;span&gt;&amp;lt;/&lt;span&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果只是使用 &lt;code&gt;value={msg}&lt;/code&gt; 的写法，&lt;code&gt;input&lt;/code&gt; 默认值是 &lt;code&gt;hello&lt;/code&gt; ，当输入框的值发生改变时，并没有把内容反应回 &lt;code&gt;msg&lt;/code&gt; 变量里。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;此时就需要使用 &lt;code&gt;bind&lt;/code&gt; 了。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5379188712522046&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHruP7kmM1svYNADxQXF91DoUkS58zlAdTH1TArp573lrDlSDkiaINu4Komyqkpr1xPLh7wbCAupXQA/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;567&quot;/&gt;&lt;figcaption&gt;36.gif&lt;/figcaption&gt;&lt;/figure&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&amp;lt;!-- 省略部分代码 --&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;input&lt;/span&gt; &lt;span&gt;type&lt;/span&gt;=&lt;span&gt;&quot;text&quot;&lt;/span&gt; &lt;span&gt;bind:value&lt;/span&gt;=&lt;span&gt;{msg}&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;textarea 多行文本框&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;多行文本框同样绑定在 &lt;code&gt;value&lt;/code&gt; 属性上。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.7579617834394905&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHruP7kmM1svYNADxQXF91DoDMayepEibzWIQ5Qe1fujQFqAyVOy76hqhowfaXZRFgZw1npOt1C47iaw/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;314&quot;/&gt;&lt;figcaption&gt;37.gif&lt;/figcaption&gt;&lt;/figure&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;br/&gt;  &lt;span&gt;let&lt;/span&gt; msg = &lt;span&gt;&#x27;hello&#x27;&lt;/span&gt;&lt;br/&gt;&amp;lt;/&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;textarea&lt;/span&gt; &lt;span&gt;type&lt;/span&gt;=&lt;span&gt;&quot;text&quot;&lt;/span&gt; &lt;span&gt;bind:value&lt;/span&gt;=&lt;span&gt;{msg}&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;{msg}&lt;span&gt;&amp;lt;/&lt;span&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;input range 范围选择&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;因为都是 &lt;code&gt;input&lt;/code&gt; 元素，只是 &lt;code&gt;type&lt;/code&gt; 不同而已。所以范围选择元素同样需要绑定 &lt;code&gt;value&lt;/code&gt; 。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7579617834394905&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHruP7kmM1svYNADxQXF91DowgBXK4ibURLdRfUfMCZbKHicuFMrmWHsxmRwU1a4iao6Nskh8D9DX8hUg/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;314&quot;/&gt;&lt;figcaption&gt;38.gif&lt;/figcaption&gt;&lt;/figure&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;br/&gt;  &lt;span&gt;let&lt;/span&gt; val = &lt;span&gt;3&lt;/span&gt;&lt;br/&gt;&amp;lt;/&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;input&lt;/span&gt; &lt;span&gt;type&lt;/span&gt;=&lt;span&gt;&quot;range&quot;&lt;/span&gt; &lt;span&gt;bind:value&lt;/span&gt;=&lt;span&gt;{val}&lt;/span&gt; &lt;span&gt;min&lt;/span&gt;=&lt;span&gt;0&lt;/span&gt; &lt;span&gt;max&lt;/span&gt;=&lt;span&gt;10&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;{val}&lt;span&gt;&amp;lt;/&lt;span&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;radio 单选&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;单选框通常是成组出现的，所以要绑定一个特殊的值 &lt;code&gt;bind:grout={variable}&lt;/code&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7579617834394905&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHruP7kmM1svYNADxQXF91DoNRPEHAhGMMEljhghdSltEoDDKZOhfXGPICoWurW2J3SNk9hhZtS1ibQ/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;314&quot;/&gt;&lt;figcaption&gt;39.gif&lt;/figcaption&gt;&lt;/figure&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;br/&gt;  &lt;span&gt;let&lt;/span&gt; selected = &lt;span&gt;&#x27;2&#x27;&lt;/span&gt;&lt;br/&gt;&amp;lt;/&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;input&lt;/span&gt; &lt;span&gt;type&lt;/span&gt;=&lt;span&gt;&quot;radio&quot;&lt;/span&gt; &lt;span&gt;bind:group&lt;/span&gt;=&lt;span&gt;{selected}&lt;/span&gt; &lt;span&gt;value&lt;/span&gt;=&lt;span&gt;&quot;1&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;input&lt;/span&gt; &lt;span&gt;type&lt;/span&gt;=&lt;span&gt;&quot;radio&quot;&lt;/span&gt; &lt;span&gt;bind:group&lt;/span&gt;=&lt;span&gt;{selected}&lt;/span&gt; &lt;span&gt;value&lt;/span&gt;=&lt;span&gt;&quot;2&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;input&lt;/span&gt; &lt;span&gt;type&lt;/span&gt;=&lt;span&gt;&quot;radio&quot;&lt;/span&gt; &lt;span&gt;bind:group&lt;/span&gt;=&lt;span&gt;{selected}&lt;/span&gt; &lt;span&gt;value&lt;/span&gt;=&lt;span&gt;&quot;3&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;{selected}&lt;span&gt;&amp;lt;/&lt;span&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;checkbox 复选框&lt;/span&gt;&lt;/h2&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.7579617834394905&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHruP7kmM1svYNADxQXF91DozzUT0zafQTRhpCuPVUqnQytNbAn2fH1JbyyYrI7eveUzUgqVNNZUBw/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;314&quot;/&gt;&lt;figcaption&gt;40.gif&lt;/figcaption&gt;&lt;/figure&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;br/&gt;  &lt;span&gt;let&lt;/span&gt; roles = []&lt;br/&gt;&amp;lt;/&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;input&lt;/span&gt; &lt;span&gt;type&lt;/span&gt;=&lt;span&gt;&quot;checkbox&quot;&lt;/span&gt; &lt;span&gt;bind:group&lt;/span&gt;=&lt;span&gt;{roles}&lt;/span&gt; &lt;span&gt;value&lt;/span&gt;=&lt;span&gt;&quot;雷猴&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;input&lt;/span&gt; &lt;span&gt;type&lt;/span&gt;=&lt;span&gt;&quot;checkbox&quot;&lt;/span&gt; &lt;span&gt;bind:group&lt;/span&gt;=&lt;span&gt;{roles}&lt;/span&gt; &lt;span&gt;value&lt;/span&gt;=&lt;span&gt;&quot;鲨鱼辣椒&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;input&lt;/span&gt; &lt;span&gt;type&lt;/span&gt;=&lt;span&gt;&quot;checkbox&quot;&lt;/span&gt; &lt;span&gt;bind:group&lt;/span&gt;=&lt;span&gt;{roles}&lt;/span&gt; &lt;span&gt;value&lt;/span&gt;=&lt;span&gt;&quot;蟑螂恶霸&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;input&lt;/span&gt; &lt;span&gt;type&lt;/span&gt;=&lt;span&gt;&quot;checkbox&quot;&lt;/span&gt; &lt;span&gt;bind:group&lt;/span&gt;=&lt;span&gt;{roles}&lt;/span&gt; &lt;span&gt;value&lt;/span&gt;=&lt;span&gt;&quot;蝎子莱莱&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;{roles}&lt;span&gt;&amp;lt;/&lt;span&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;select 选择器&lt;/span&gt;&lt;/h2&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.7579617834394905&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHruP7kmM1svYNADxQXF91DonTcrFpEjGzRmian6d2NYcwfiaITz0ibUdc0Gwm1fHRbCxRb2uRcYJFS1Q/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;314&quot;/&gt;&lt;figcaption&gt;41.gif&lt;/figcaption&gt;&lt;/figure&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;br/&gt;  &lt;span&gt;let&lt;/span&gt; selected = &lt;span&gt;&#x27;a&#x27;&lt;/span&gt;&lt;br/&gt;&amp;lt;/&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;select&lt;/span&gt; &lt;span&gt;bind:value&lt;/span&gt;=&lt;span&gt;{selected}&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt; &lt;span&gt;&amp;lt;&lt;span&gt;option&lt;/span&gt; &lt;span&gt;value&lt;/span&gt;=&lt;span&gt;&#x27;a&#x27;&lt;/span&gt;&amp;gt;&lt;/span&gt;a&lt;span&gt;&amp;lt;/&lt;span&gt;option&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt; &lt;span&gt;&amp;lt;&lt;span&gt;option&lt;/span&gt; &lt;span&gt;value&lt;/span&gt;=&lt;span&gt;&#x27;b&#x27;&lt;/span&gt;&amp;gt;&lt;/span&gt;b&lt;span&gt;&amp;lt;/&lt;span&gt;option&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt; &lt;span&gt;&amp;lt;&lt;span&gt;option&lt;/span&gt; &lt;span&gt;value&lt;/span&gt;=&lt;span&gt;&#x27;c&#x27;&lt;/span&gt;&amp;gt;&lt;/span&gt;c&lt;span&gt;&amp;lt;/&lt;span&gt;option&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;select&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;{selected}&lt;span&gt;&amp;lt;/&lt;span&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;select multiple 选择器&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;multiple&lt;/code&gt; 和 &lt;code&gt;checkbox&lt;/code&gt; 有点像。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.7579617834394905&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHruP7kmM1svYNADxQXF91DoR9cSkUYpW710BYF4UQXJTVkGS7RUicibtHMcFOibVxIKhdo0bwpT3KbMA/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;314&quot;/&gt;&lt;figcaption&gt;42.gif&lt;/figcaption&gt;&lt;/figure&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;br/&gt;  &lt;span&gt;let&lt;/span&gt; selected = []&lt;br/&gt;&amp;lt;/&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;select&lt;/span&gt; &lt;span&gt;multiple&lt;/span&gt; &lt;span&gt;bind:value&lt;/span&gt;=&lt;span&gt;{selected}&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt; &lt;span&gt;&amp;lt;&lt;span&gt;option&lt;/span&gt; &lt;span&gt;value&lt;/span&gt;=&lt;span&gt;&quot;雷猴&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;雷猴&lt;span&gt;&amp;lt;/&lt;span&gt;option&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt; &lt;span&gt;&amp;lt;&lt;span&gt;option&lt;/span&gt; &lt;span&gt;value&lt;/span&gt;=&lt;span&gt;&quot;鲨鱼辣椒&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;鲨鱼辣椒&lt;span&gt;&amp;lt;/&lt;span&gt;option&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt; &lt;span&gt;&amp;lt;&lt;span&gt;option&lt;/span&gt; &lt;span&gt;value&lt;/span&gt;=&lt;span&gt;&quot;蟑螂恶霸&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;蟑螂恶霸&lt;span&gt;&amp;lt;/&lt;span&gt;option&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt; &lt;span&gt;&amp;lt;&lt;span&gt;option&lt;/span&gt; &lt;span&gt;value&lt;/span&gt;=&lt;span&gt;&quot;蝎子莱莱&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;蝎子莱莱&lt;span&gt;&amp;lt;/&lt;span&gt;option&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;select&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;{selected}&lt;span&gt;&amp;lt;/&lt;span&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;简写形式&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果 &lt;code&gt;bind&lt;/code&gt; 绑定的属性和在 &lt;code&gt;JS&lt;/code&gt; 里声明的变量名相同，那可以直接绑定&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.7579617834394905&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHruP7kmM1svYNADxQXF91DoahObmLnyiaJhn23cOzAiaTEdCnBvhibCN6lnUbhmXyWxVYS2YJxesLqQQ/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;314&quot;/&gt;&lt;figcaption&gt;43.gif&lt;/figcaption&gt;&lt;/figure&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;br/&gt;  &lt;span&gt;let&lt;/span&gt; value = &lt;span&gt;&#x27;hello&#x27;&lt;/span&gt;&lt;br/&gt;&amp;lt;/&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;input&lt;/span&gt; &lt;span&gt;type&lt;/span&gt;=&lt;span&gt;&quot;text&quot;&lt;/span&gt; &lt;span&gt;bind:value&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;{value}&lt;span&gt;&amp;lt;/&lt;span&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个例子中，&lt;code&gt;bind:value&lt;/code&gt; 绑定的属性是 &lt;code&gt;value&lt;/code&gt; ，而在 &lt;code&gt;JS&lt;/code&gt; 中声明的变量名也叫 &lt;code&gt;value&lt;/code&gt; ，此时就可以使用简写的方式。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;$: 声明反应性&lt;/span&gt;&lt;/h1&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;通过使用&lt;code&gt;$:&lt;/code&gt; &lt;span&gt;JS label 语法&lt;/span&gt;&lt;sup&gt;[47]&lt;/sup&gt;作为前缀。可以让任何位于 top-level 的语句（即不在块或函数内部）具有反应性。每当它们依赖的值发生更改时，它们都会在 component 更新之前立即运行。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上面这段解释是官方文档的解释。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;$:&lt;/code&gt; 在文档中称为 &lt;code&gt;Reactivity&lt;/code&gt; ，中文文档成它为 &lt;code&gt;反应性能力&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但我使用 &lt;code&gt;$:&lt;/code&gt; 时，觉得这个功能有点像 Vue 的 &lt;code&gt;computed&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;$:&lt;/code&gt; 可以监听表达式内部的变化从而做出响应。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7579617834394905&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHruP7kmM1svYNADxQXF91DoFIDciaTe2ELH8HwzNZnjicnWicBge7TW87dmPibulAlQf2X26arQQoCltw/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;314&quot;/&gt;&lt;figcaption&gt;44.gif&lt;/figcaption&gt;&lt;/figure&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;br/&gt;  &lt;span&gt;let&lt;/span&gt; count = &lt;span&gt;0&lt;/span&gt;;&lt;br/&gt;  $: doubled = count * &lt;span&gt;2&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;&lt;span&gt;function&lt;/span&gt; &lt;span&gt;handleClick&lt;/span&gt;() &lt;/span&gt;{&lt;br/&gt;    count += &lt;span&gt;1&lt;/span&gt;;&lt;br/&gt;  }&lt;br/&gt;&amp;lt;/&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;button&lt;/span&gt; &lt;span&gt;on:click&lt;/span&gt;=&lt;span&gt;{handleClick}&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;  点击加1&lt;br/&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;{count} 翻倍后 {doubled}&lt;span&gt;&amp;lt;/&lt;span&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用 &lt;code&gt;$:&lt;/code&gt; 声明的 &lt;code&gt;double&lt;/code&gt; 会自动根据 &lt;code&gt;count&lt;/code&gt; 的值改变而改变。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果将以上代码中 &lt;code&gt;$:&lt;/code&gt; 改成 &lt;code&gt;let&lt;/code&gt; 或者 &lt;code&gt;var&lt;/code&gt; 声明 &lt;code&gt;count&lt;/code&gt; ，那么 &lt;code&gt;count&lt;/code&gt; 将失去响应性。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这样看来，真的和 Vue 的 &lt;code&gt;computed&lt;/code&gt; 的作用有那么一点像。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;异步渲染 #await&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Svelte 提供异步渲染标签，可以提升用户体验。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;语法：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;{&lt;span&gt;#await expression}&lt;/span&gt;&lt;br/&gt;...&lt;br/&gt;{:then name}&lt;br/&gt;...&lt;br/&gt;{:&lt;span&gt;catch&lt;/span&gt; name}&lt;br/&gt;...&lt;br/&gt;{/&lt;span&gt;await&lt;/span&gt;}&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以 &lt;code&gt;#await&lt;/code&gt; 开始，以 &lt;code&gt;/await&lt;/code&gt; 结束。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;:then&lt;/code&gt; 代表成功结果，&lt;code&gt;:catch&lt;/code&gt; 代表失败结果。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;expression&lt;/code&gt; 是判断体，要求返回一个 &lt;code&gt;Promise&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其实用法和 &lt;code&gt;#if ... :else if ... /if&lt;/code&gt; 有那么一丢丢像。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;举个例子&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.7579617834394905&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHruP7kmM1svYNADxQXF91DoZGToiaASZhibqXagxpFuW5ldOPhgNf8wNpWaz9IQbicG3anzg348tsicSQ/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;314&quot;/&gt;&lt;figcaption&gt;45.gif&lt;/figcaption&gt;&lt;/figure&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; api = &lt;span&gt;new&lt;/span&gt; &lt;span&gt;Promise&lt;/span&gt;(&lt;span&gt;(&lt;span&gt;resolve, reject&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;br/&gt;    setTimeout(&lt;span&gt;&lt;span&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;br/&gt;      resolve(&lt;span&gt;&#x27;请求成功，数据是xxxxx&#x27;&lt;/span&gt;)&lt;br/&gt;    }, &lt;span&gt;1000&lt;/span&gt;)&lt;br/&gt;  })&lt;br/&gt;&amp;lt;/&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;{#await api}&lt;br/&gt;  &lt;span&gt;&amp;lt;&lt;span&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;Loading...&lt;span&gt;&amp;lt;/&lt;span&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;{:then response}&lt;br/&gt;  &lt;span&gt;&amp;lt;&lt;span&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;{response}&lt;span&gt;&amp;lt;/&lt;span&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;{:catch error}&lt;br/&gt;  &lt;span&gt;&amp;lt;&lt;span&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;{error}&lt;span&gt;&amp;lt;/&lt;span&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;{/await}&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果将上面的 &lt;code&gt;resolve&lt;/code&gt; 改成 &lt;code&gt;reject&lt;/code&gt; 就会走 &lt;code&gt;:catch&lt;/code&gt; 分支。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;基础组件&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在 Svelte 中，创建组件只需要创建一个 &lt;code&gt;.svelte&lt;/code&gt; 为后缀的文件即可。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过 &lt;code&gt;import&lt;/code&gt; 引入子组件。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如，在 &lt;code&gt;src&lt;/code&gt; 目录下有 &lt;code&gt;App.svelte&lt;/code&gt; 和 &lt;code&gt;Phone.svelte&lt;/code&gt; 两个组件。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;App.svelte&lt;/code&gt; 是父级，想要引入 &lt;code&gt;Phone.svelte&lt;/code&gt; 并在 &lt;code&gt;HTML&lt;/code&gt; 中使用。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.42424242424242425&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHruP7kmM1svYNADxQXF91DoevpZrF7MNlHenSSSUMmYfVdo8xiamSxsYVRxWQaHDSKA97Lp3fzzdTw/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;297&quot;/&gt;&lt;figcaption&gt;46.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;App.svelte&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;br/&gt;  &lt;span&gt;import&lt;/span&gt; Phone &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;./Phone.svelte&#x27;&lt;/span&gt;&lt;br/&gt;&amp;lt;/&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;子组件 Phone 的内容：&lt;span&gt;&amp;lt;/&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;Phone&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;Phone.svelte&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;电话：13266668888&lt;span&gt;&amp;lt;/&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;组件通讯&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;组件通讯主要是 &lt;strong&gt;父子组件&lt;/strong&gt; 之间的数据来往。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;父传子&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如上面的例子，手机号希望从 &lt;code&gt;App.svelte&lt;/code&gt; 组件往 &lt;code&gt;Phone.svelte&lt;/code&gt; 里传。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以在 &lt;code&gt;Phone.svelte&lt;/code&gt; 中声明一个变量，并公开该变量。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;App.svelte&lt;/code&gt; 就可以使用对应的属性把值传入。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.39570552147239263&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHruP7kmM1svYNADxQXF91DomdRqlhb44tib5RwOZnVqmKu2RewHRlH8BPz6DkFU6xNvJrSLrpTYiaaA/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;326&quot;/&gt;&lt;figcaption&gt;47.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;App.svelte&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;br/&gt;  &lt;span&gt;import&lt;/span&gt; Phone &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;./Phone.svelte&#x27;&lt;/span&gt;&lt;br/&gt;&amp;lt;/&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;子组件 Phone 的内容：&lt;span&gt;&amp;lt;/&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;Phone&lt;/span&gt; &lt;span&gt;number&lt;/span&gt;=&lt;span&gt;&quot;88888888&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;Phone.svelte&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&amp;lt;script&amp;gt;&lt;br/&gt;  export let number = &#x27;13266668888&#x27;&lt;br/&gt;&amp;lt;/script&amp;gt;&lt;br/&gt;&lt;br/&gt;&amp;lt;div&amp;gt;电话：{number}&amp;lt;/div&amp;gt;&lt;br/&gt;复制代码&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果此时 &lt;code&gt;App.svelte&lt;/code&gt; 组件没有传值进来，&lt;code&gt;Phone.svelte&lt;/code&gt; 就会使用默认值。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;子传父&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果想在子组件中修改父组件的内容，需要把修改的方法定义在父组件中，并把该方法传给子组件调用。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;同时需要在子组件中引入 &lt;code&gt;createEventDispatcher&lt;/code&gt; 方法。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.46303501945525294&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHruP7kmM1svYNADxQXF91DoeiaiahHvI5GtQKxmMhJl6Yj2J7tYeYWfBfpBrbicl0rWibAicCFrS1Lkfeg/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;514&quot;/&gt;&lt;figcaption&gt;48.gif&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;App.svelte&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;br/&gt;  &lt;span&gt;import&lt;/span&gt; Phone &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;./Phone.svelte&#x27;&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;&lt;span&gt;function&lt;/span&gt; &lt;span&gt;print&lt;/span&gt;(&lt;span&gt;data&lt;/span&gt;) &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;console&lt;/span&gt;.log(&lt;span&gt;`手机号: &lt;span&gt;${data.detail}&lt;/span&gt;`&lt;/span&gt;)&lt;br/&gt;  }&lt;br/&gt;&amp;lt;/&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;子组件 Phone 的内容：&lt;span&gt;&amp;lt;/&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;Phone&lt;/span&gt; &lt;span&gt;on:printPhone&lt;/span&gt;=&lt;span&gt;{print}&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;Phone.svelte&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;br/&gt;  &lt;span&gt;import&lt;/span&gt; { createEventDispatcher } &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;svelte&#x27;&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; dispatch = createEventDispatcher()&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;&lt;span&gt;function&lt;/span&gt; &lt;span&gt;printPhone&lt;/span&gt;() &lt;/span&gt;{&lt;br/&gt;    dispatch(&lt;span&gt;&#x27;printPhone&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;13288888888&#x27;&lt;/span&gt;)&lt;br/&gt;  }&lt;br/&gt;&amp;lt;/&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;button&lt;/span&gt; &lt;span&gt;on:click&lt;/span&gt;=&lt;span&gt;{printPhone}&lt;/span&gt;&amp;gt;&lt;/span&gt;输出手机号&lt;span&gt;&amp;lt;/&lt;span&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;父组件接受参数是一个对象，子组件传过来的值都会放在 &lt;code&gt;detail&lt;/code&gt; 属性里。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;插槽 slot&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;和 Vue 一样，Svelte 也有组件插槽。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在子组件中使用 &lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; 标签，可以接收父组件传进来的 &lt;code&gt;HTML&lt;/code&gt; 内容。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5030674846625767&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHruP7kmM1svYNADxQXF91DoMNBvwJUjnlFE1g0EsXGclgVfbKpfyMZ1UeqwicibSCbKvce34aECvr9w/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;326&quot;/&gt;&lt;figcaption&gt;49.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;App.svelte&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;br/&gt;  &lt;span&gt;import&lt;/span&gt; Phone &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;./Phone.svelte&#x27;&lt;/span&gt;&lt;br/&gt;&amp;lt;/&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;子组件 Phone 的内容：&lt;span&gt;&amp;lt;/&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;Phone&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;&amp;lt;&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;电话：&lt;span&gt;&amp;lt;/&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;&amp;lt;&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;13288889999&lt;span&gt;&amp;lt;/&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;Phone&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;Phone.svelte&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;style&lt;/span&gt;&amp;gt;&lt;br/&gt; &lt;span&gt;.box&lt;/span&gt; {&lt;br/&gt;  &lt;span&gt;width&lt;/span&gt;: &lt;span&gt;100px&lt;/span&gt;;&lt;br/&gt;  &lt;span&gt;border&lt;/span&gt;: &lt;span&gt;1px&lt;/span&gt; solid &lt;span&gt;#aaa&lt;/span&gt;;&lt;br/&gt;  &lt;span&gt;border-radius&lt;/span&gt;: &lt;span&gt;8px&lt;/span&gt;;&lt;br/&gt;  &lt;span&gt;box-shadow&lt;/span&gt;: &lt;span&gt;2px&lt;/span&gt; &lt;span&gt;2px&lt;/span&gt; &lt;span&gt;8px&lt;/span&gt; &lt;span&gt;rgba&lt;/span&gt;(&lt;span&gt;0&lt;/span&gt;,&lt;span&gt;0&lt;/span&gt;,&lt;span&gt;0&lt;/span&gt;,&lt;span&gt;0.1&lt;/span&gt;);&lt;br/&gt;  &lt;span&gt;padding&lt;/span&gt;: &lt;span&gt;1em&lt;/span&gt;;&lt;br/&gt;  &lt;span&gt;margin&lt;/span&gt;: &lt;span&gt;1em&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;;&lt;br/&gt; }&lt;br/&gt;&amp;lt;/&lt;span&gt;style&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;div&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;box&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt; &lt;span&gt;&amp;lt;&lt;span&gt;slot&lt;/span&gt;&amp;gt;&lt;/span&gt;默认值&lt;span&gt;&amp;lt;/&lt;span&gt;slot&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;生命周期&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;生命周期是指项目运行时，指定时期会自动执行的方法。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Svelte 中主要有以下几个生命周期：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;onMount&lt;/code&gt;: 组件挂载时调用。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;onDestroy&lt;/code&gt;: 组件销毁时执行。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;beforeUpdate&lt;/code&gt;: 在数据更新前执行。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;afterUpdate&lt;/code&gt;: 在数据更新完成后执行。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;tick&lt;/code&gt;: DOM元素更新完成后执行。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以上生命周期都是需要从 &lt;code&gt;svelte&lt;/code&gt; 里引入的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用 &lt;code&gt;onMount&lt;/code&gt; 举个例子&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.46303501945525294&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHruP7kmM1svYNADxQXF91DoRmxNlgvppkTIWicqrELVQmWv33KVdOnhdUiaBUXYY5oktzxhDrLOZU0g/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;514&quot;/&gt;&lt;figcaption&gt;50.gif&lt;/figcaption&gt;&lt;/figure&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;br/&gt;  &lt;span&gt;import&lt;/span&gt; { onMount } &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;svelte&#x27;&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;let&lt;/span&gt; title = &lt;span&gt;&#x27;Hello world&#x27;&lt;/span&gt;&lt;br/&gt;  &lt;br/&gt;  onMount(&lt;span&gt;&lt;span&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;br/&gt;    &lt;span&gt;console&lt;/span&gt;.log(&lt;span&gt;&#x27;onMount&#x27;&lt;/span&gt;)&lt;br/&gt;    setTimeout(&lt;span&gt;&lt;span&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; title = &lt;span&gt;&#x27;雷猴&#x27;&lt;/span&gt;, &lt;span&gt;1000&lt;/span&gt;)&lt;br/&gt;  })&lt;br/&gt;&amp;lt;/&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;{title}&lt;span&gt;&amp;lt;/&lt;span&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在组件加载完1秒后，改变 &lt;code&gt;title&lt;/code&gt; 的值。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;onDestroy&lt;/code&gt;、&lt;code&gt;beforeUpdate&lt;/code&gt; 和 &lt;code&gt;afterUpdate&lt;/code&gt; 都和 &lt;code&gt;onMount&lt;/code&gt; 的用法差不多，只是执行的时间条件不同。你可以自己创建个项目试试看。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;tick&lt;/code&gt; 是比较特殊的，&lt;code&gt;tick&lt;/code&gt; 和 Vue 的 &lt;code&gt;nextTick&lt;/code&gt; 差不多。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在 Svelte 中，&lt;code&gt;tick&lt;/code&gt; 的使用语法如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;import&lt;/span&gt; { tick } &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;svelte&#x27;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;await&lt;/span&gt; tick()&lt;br/&gt;&lt;span&gt;// 其他操作&lt;/span&gt;&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;总结&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本文主要讲解了 Svelte 的基础用法，但 Svelte 的内容和 &lt;code&gt;API&lt;/code&gt; 远不止此。它还有很多高级的用法以及提供了过渡动画功能等，这些都会放在高级篇讲解。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Svelte 是一个 &lt;code&gt;Web&lt;/code&gt; 应用的构建工具，它打包出来的项目体积比较小，性能强，不使用虚拟DOM。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但 &lt;code&gt;Svelte&lt;/code&gt; 的兼容性和周边生态相比起 &lt;code&gt;Vue&lt;/code&gt; 和 &lt;code&gt;React&lt;/code&gt; 会差一点。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以日常项目中需要根据 Svelte 的优缺点进行取舍。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;点赞 + 关注 + 收藏 = 学会了&lt;/strong&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;p&gt;&lt;em/&gt;&lt;/p&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>