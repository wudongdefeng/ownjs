<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>b94ba838659c99368f3b3e935c1b63f5</guid>
<title>微博图床挂了！</title>
<link>https://toutiao.io/k/7u25i9v</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5815160955347871&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/1skeHK2GybxHRwuYQK1KIKLicMXiajzCaiaOtwbogtAW8v1OgFfMDTs9uuhkJxSPUjIF2M3LKrd1b2qceU4P6gTdw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;963&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一直担心的事情还是发生了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;作为hexo多年的使用者，微博图床一直是我的默认选项，hexo+typora+iPic更是我这几年写文章的黄金组合。而图床中，新浪图床一直都是我的默认选项，速度快、稳定同时支持大图片批量上传更是让其成为了众多图床工具的默认选项。虽然今年早些的时候，部分如「ws1、ws2……」的域名就已经无法使用了，但通过某些手段还是可以让其存活的，而最近，所有调用的微博图床图片都无法加载并提示“403 Forbidden”了。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.30824372759856633&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/1skeHK2GybxHRwuYQK1KIKLicMXiajzCaiaIjOnlTvRkPvV7GPNUSkyjqY1ednPO0Q9FrrbxT0HfoIMwEibTxsIW4g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1116&quot;/&gt;&lt;/figure&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;💡Tips：图片中出现的Tengine是淘宝在Nginx的基础上修改后开源的一款Web服务器，基本上，Tengine可以被看作一个更好的Nginx，或者是Nginx的超集，详情可参考👉淘宝Web服务器Tengine正式开源 - The Tengine Web Server&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;刚得知这个消息的时候，我的第一想法其实是非常生气的，毕竟自己这几年上千张图片都是用的微博图床，如今还没备份就被403了，可仔细一想，说到底还是把东西交在别人手里的下场，微博又不是慈善企业，也要控制成本，一直睁一只眼闭一只眼让大家免费用就算了，出了问题还是不太好怪到微博上来的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那么有什么比较好的办法解决这个问题呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;查遍了网上一堆复制/粘贴出来的文章，不是开启反向代理就是更改请求头，真正愿意从根本上解决问题的没几个。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果不想将自己沉淀的博客、文章托管在印象笔记、notion、语雀这些在线平台的话，想要彻底解决这个问题最好的方式是：自建图床！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为了更好的解决问题，我们先弄明白，403是什么，以及我们存在微博上的图片究竟是如何被403的。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;403&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;百度百科，对于403错误的解释很简单&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;403错误是一种在网站访问过程中，常见的错误提示，表示资源不可用。服务器理解客户的请求，但拒绝处理它，通常由于服务器上文件或目录的权限设置导致的WEB访问错误。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以说到底是因为访问者无权访问服务器端所提供的资源。而微博图床出现403的原因主要在于微博开启了防盗链。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;防盗链的原理很简单，站点在得知有请求时，会先判断请求头中的信息，如果请求头中有Referer信息，然后根据自己的规则来判断Referer头信息是否符合要求，Referer 信息是请求该图片的来源地址。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果盗用网站是 &lt;strong&gt;https&lt;/strong&gt; 的 协议，而图片链接是 http 的话，则从 https 向 http 发起的请求会因为安全性的规定，而不带 referer，从而实现防盗链的绕过。官方输出图片的时候，判断了来源(Referer)，就是从哪个网站访问这个图片，如果是你的网站去加载这个图片，那么 Referer 就是你的网站地址；你的网址肯定没在官方的白名单内，(当然作为可操作性极强的浏览器来说 referer 是完全可以伪造一个官方的 URL 这样也也就也可以饶过限制🚫)所以就看不到图片了。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5869565217391305&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/1skeHK2GybxHRwuYQK1KIKLicMXiajzCaia0y1YO7O34d7J9y3JkZmNCq4wCmibzxSO1ybJszsib7iaWcYAef8WPAsug/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;552&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;解决问题&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;解释完原理之后我们发现，其实只要想办法在自己的个人站点中设置好referer就可以解决这个问题，但说到底也只是治标不治本，真正解决这个问题就是想办法将图片迁移到自己的个人图床上。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;现在的图床工具很多，iPic、uPic、PicGo等一堆工具既免费又开源，问题在于选择什么云存储服务作为自己的图床以及如何替换自己这上千张图片。&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;选择什么云存储服务&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如何替换上千张图片&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;什么是OSS以及如何选择&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;「OSS」的英文全称是Object Storage Service，翻译成中文就是「对象存储服务」，官方一点解释就是对象存储是一种使用HTTP API存储和检索非结构化数据和元数据对象的工具。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;白话文解释就是将系统所要用的文件上传到云硬盘上，该云硬盘提供了文件下载、上传等一列服务，这样的服务以及技术可以统称为OSS，业内提供OSS服务的厂商很多，知名常用且成规模的有阿里云、腾讯云、百度云、七牛云、又拍云等。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于我们这些个人用户来说，这些云厂商提供的服务都是足够使用的，我们所要关心的便是成本💰。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;笔者使用的是七牛云，它提供了10G的免费存储，基本已经够用了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有人会考虑将GitHub/Gitee作为图床，并且这样的文章在中文互联网里广泛流传，因为很多人的个人站点都是托管在GitHub Pages上的，但是个人建议是不要这么做。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;首先GitHub在国内的访问就很受限，很多场景都需要科学上网才能获得完整的浏览体验。再加上GitHub官方也不推荐将Git仓库存储大文件，GitHub建议仓库保持较小，理想情况下小于 1 GB，强烈建议小于 5 GB。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;如何替换上千张图片&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;替换文章中的图片链接和“把大象放进冰箱里”步骤是差不多的&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;下载所有的微博图床的图片&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;上传所有的图片到自己的图床（xx云）&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;对文本文件执行replaceAll操作&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;考虑到我们需要迁移的文件数量较多，手动操作肯定是不太可行的，因此我们可以采用代码的方式写一个脚本完成上述操作。考虑到自己已经是一个成熟的Java工程师了，这个功能就干脆用Java写了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为了减少代码量，精简代码结构，我这里引入了几个第三方库，当然不引入也行，如果不引入有一些繁琐而又简单的业务逻辑需要自己实现，有点浪费时间了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;整个脚本逻辑非常简单，流程如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.39757914338919925&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/1skeHK2GybxHRwuYQK1KIKLicMXiajzCaiaFJMRoQD1mfKibOGqlqbp8kml39Mct0SVa96LwSwvuREt2JaYtw5YPaQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1074&quot;/&gt;&lt;/figure&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;获取博客文件夹下的Markdown文件&lt;/span&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里我们直接使用hutool这个三方库，它内置了很多非常实用的工具类，获取所有markdown文件也变得非常容易&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;/**&lt;br/&gt; * 筛选出所有的markdown文件&lt;br/&gt; */&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; List&amp;lt;File&amp;gt; &lt;span&gt;listAllMDFile&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    List&amp;lt;File&amp;gt; files = FileUtil.loopFiles(VAULT_PATH);&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; files.stream()&lt;br/&gt;       .filter(Objects::nonNull)&lt;br/&gt;        .filter(File::isFile)&lt;br/&gt;        .filter(file -&amp;gt; StringUtils.endsWith(file.getName(), &lt;span&gt;&quot;.md&quot;&lt;/span&gt;))&lt;br/&gt;        .collect(Collectors.toList());&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;获取文件中的所有包含微博图床的域名&lt;/span&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过Hutools内置的&lt;code&gt;FileReader&lt;/code&gt;我们可以直接读取markdown文件的内容，因此我们只需要解析出文章里包含微博图床的链接即可。我们可以借助正则表达式快速获取一段文本内容里的所有url，然后做一下filter即可。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;/**&lt;br/&gt; * 获取一段文本内容里的所有url&lt;br/&gt; *&lt;br/&gt; * &lt;span&gt;@param&lt;/span&gt; content 文本内容&lt;br/&gt; * &lt;span&gt;@return&lt;/span&gt; 所有的url&lt;br/&gt; */&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; List&amp;lt;String&amp;gt; &lt;span&gt;getAllUrlsFromContent&lt;/span&gt;&lt;span&gt;(String content)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    List&amp;lt;String&amp;gt; urls = &lt;span&gt;new&lt;/span&gt; ArrayList&amp;lt;&amp;gt;();&lt;br/&gt;    Pattern pattern = Pattern.compile(&lt;br/&gt;        &lt;span&gt;&quot;\\b(((ht|f)tp(s?)\\:\\/\\/|~\\/|\\/)|www.)&quot;&lt;/span&gt; + &lt;span&gt;&quot;(\\w+:\\w+@)?(([-\\w]+\\.)+(com|org|net|gov&quot;&lt;/span&gt;&lt;br/&gt;            + &lt;span&gt;&quot;|mil|biz|info|mobi|name|aero|jobs|museum&quot;&lt;/span&gt; + &lt;span&gt;&quot;|travel|[a-z]{2}))(:[\\d]{1,5})?&quot;&lt;/span&gt;&lt;br/&gt;            + &lt;span&gt;&quot;(((\\/([-\\w~!$+|.,=]|%[a-f\\d]{2})+)+|\\/)+|\\?|#)?&quot;&lt;/span&gt; + &lt;span&gt;&quot;((\\?([-\\w~!$+|.,*:]|%[a-f\\d{2}])+=?&quot;&lt;/span&gt;&lt;br/&gt;            + &lt;span&gt;&quot;([-\\w~!$+|.,*:=]|%[a-f\\d]{2})*)&quot;&lt;/span&gt; + &lt;span&gt;&quot;(&amp;amp;(?:[-\\w~!$+|.,*:]|%[a-f\\d{2}])+=?&quot;&lt;/span&gt;&lt;br/&gt;            + &lt;span&gt;&quot;([-\\w~!$+|.,*:=]|%[a-f\\d]{2})*)*)*&quot;&lt;/span&gt; + &lt;span&gt;&quot;(#([-\\w~!$+|.,*:=]|%[a-f\\d]{2})*)?\\b&quot;&lt;/span&gt;);&lt;br/&gt;    Matcher matcher = pattern.matcher(content);&lt;br/&gt;    &lt;span&gt;while&lt;/span&gt; (matcher.find()) {&lt;br/&gt;        urls.add(matcher.group());&lt;br/&gt;    }&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; urls;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;下载图片&lt;/span&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用Java下载文件的代码在互联网上属实是重复率最高的一批检索内容了，这里就直接贴出代码了。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;download&lt;/span&gt;&lt;span&gt;(String urlString, String fileName)&lt;/span&gt; &lt;span&gt;throws&lt;/span&gt; IOException &lt;/span&gt;{&lt;br/&gt;    File file = &lt;span&gt;new&lt;/span&gt; File(fileName);&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (file.exists()) {&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt;;&lt;br/&gt;    }&lt;br/&gt;    URL url = &lt;span&gt;null&lt;/span&gt;;&lt;br/&gt;    OutputStream os = &lt;span&gt;null&lt;/span&gt;;&lt;br/&gt;    InputStream is = &lt;span&gt;null&lt;/span&gt;;&lt;br/&gt;    &lt;span&gt;try&lt;/span&gt; {&lt;br/&gt;        url = &lt;span&gt;new&lt;/span&gt; URL(urlString);&lt;br/&gt;        URLConnection con = url.openConnection();&lt;br/&gt;        &lt;span&gt;// 输入流&lt;/span&gt;&lt;br/&gt;        is = con.getInputStream();&lt;br/&gt;        &lt;span&gt;// 1K的数据缓冲&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;byte&lt;/span&gt;[] bs = &lt;span&gt;new&lt;/span&gt; &lt;span&gt;byte&lt;/span&gt;[&lt;span&gt;1024&lt;/span&gt;];&lt;br/&gt;        &lt;span&gt;// 读取到的数据长度&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;int&lt;/span&gt; len;&lt;br/&gt;        &lt;span&gt;// 输出的文件流&lt;/span&gt;&lt;br/&gt;        os = Files.newOutputStream(Paths.get(fileName));&lt;br/&gt;        &lt;span&gt;// 开始读取&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;while&lt;/span&gt; ((len = is.read(bs)) != -&lt;span&gt;1&lt;/span&gt;) {&lt;br/&gt;            os.write(bs, &lt;span&gt;0&lt;/span&gt;, len);&lt;br/&gt;        }&lt;br/&gt;    } &lt;span&gt;finally&lt;/span&gt; {&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (os != &lt;span&gt;null&lt;/span&gt;) {&lt;br/&gt;            os.close();&lt;br/&gt;        }&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (is != &lt;span&gt;null&lt;/span&gt;) {&lt;br/&gt;            is.close();&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;上传图片&lt;/span&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下载完图片后我们便要着手将下载下来的图片上传至我们自己的云存储服务了，这里直接给出七牛云上传图片的文档链接了，文档里写的非常详细，我就不赘述了👇&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Java SDK_SDK 下载_对象存储 - 七牛开发者中心&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;全局处理&lt;/span&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过阅读代码的细节，我们可以发现，我们的方法粒度是单文件的，但事实上，我们可以先将所有的文件遍历一遍，统一进行图片的下载、上传与替换，这样可以节约点时间。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;统一替换的逻辑也很简单，我们申明一个全局Map，&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; Map&amp;lt;String, String&amp;gt; URL_MAP = Maps.newHashMap();&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其中，key是旧的新浪图床的链接，value是新的自定义图床的链接。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们将&lt;code&gt;listAllMDFile&lt;/code&gt;这一步中所获取到的所有文件里的所有链接保存于此，下载时只需遍历这个Map的key即可获取到需要下载的图片链接。然后将上传后得到的新链接作为value存在到该Map中即可。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;全文替换链接并更新文件&lt;/span&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有了上述这些处理步骤，接下来一步就变的异常简单，只需要遍历每个文件，将匹配到全局Map中key的链接替换成Map中的value即可。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;/**&lt;br/&gt; * 替换所有的图片链接&lt;br/&gt; */&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; String &lt;span&gt;replaceUrl&lt;/span&gt;&lt;span&gt;(String content, Map&amp;lt;String, String&amp;gt; urlMap)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;for&lt;/span&gt; (Map.Entry&amp;lt;String, String&amp;gt; entry : urlMap.entrySet()) {&lt;br/&gt;        String oldUrl = entry.getKey();&lt;br/&gt;        String newUrl = entry.getValue();&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (StringUtils.isBlank(newUrl)) {&lt;br/&gt;            &lt;span&gt;continue&lt;/span&gt;;&lt;br/&gt;        }&lt;br/&gt;    content = RegExUtils.replaceAll(content, oldUrl, newUrl);&lt;br/&gt;    }&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; content;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们借助commons-lang实现字符串匹配替换，借助Hutools实现文件的读取和写入。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;files.forEach(file -&amp;gt; {&lt;br/&gt;    &lt;span&gt;try&lt;/span&gt; {&lt;br/&gt;        FileReader fileReader = &lt;span&gt;new&lt;/span&gt; FileReader(file.getPath());&lt;br/&gt;        String content = fileReader.readString();&lt;br/&gt;        String replaceContent = replaceUrl(content, URL_MAP);&lt;br/&gt;        FileWriter writer = &lt;span&gt;new&lt;/span&gt; FileWriter(file.getPath());&lt;br/&gt;        writer.write(replaceContent);&lt;br/&gt;    } &lt;span&gt;catch&lt;/span&gt; (Throwable e) {&lt;br/&gt;        log.error(&lt;span&gt;&quot;write file error, errorMsg:{}&quot;&lt;/span&gt;, e.getMessage());&lt;br/&gt;    }&lt;br/&gt;});&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为了安全起见，最好把文件放在新的目录中，不要直接替换掉原来的文件，否则程序出现意外就麻烦了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;接下来我们只需要运行程序，静待备份结果跑完即可。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以上就是本文的全部内容了，希望对你有所帮助&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>d7059ff01ab4c94b7379fada2fe3fb61</guid>
<title>一分钟读论文：《自动将 Legacy 项目重构为 ES6》 | Micropaper一分钟读论文：《自动将 Legacy 项目重构为 ES6》 | Micropaper</title>
<link>https://toutiao.io/k/jxftcn8</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;article class=&quot;article-post&quot;&gt;                
&lt;p&gt;很多遗留的项目都是 ES5 代码，不能在 ES6 或 TypeScript 下很好的复用，特别是企业级大型前端工程，维护成本令人头疼。雅典经济与商业大学信息学系的论文&lt;a href=&quot;https://arxiv.org/pdf/2107.10164.pdf&quot;&gt;《Automated Refactoring of Legacy JavaScript Code to ES6 Modules》&lt;/a&gt;实现了将遗留 ES5 代码自动重构为 ES6 模块，重点是将模块对象解构为多个可单独重用的模块来实现模块内容的细粒度重用，每个重构模块&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;支持按需引入&lt;/code&gt;而不是引入整个模块对象，并&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;自动重建依赖关系&lt;/code&gt;，最大限度减少耦合并提高了可维护性。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/screenshot-20230118-094155.jpg&quot; alt=&quot;flow&quot;/&gt;&lt;/p&gt;

&lt;p&gt;论文很长的篇幅详细记录了整个一个完整项目案例重构的过程和使用的公式级算法。思路是使用静态分析来构建 JavaScript 项目模型，即模块依赖图 (MDG)，在 MDG 的基础上指定模块迁移到 ES6 的重构过程。原型实现在 19 个开源项目上进行了评估：&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;重构的结果对系统模块化有什么影响？&lt;/strong&gt;
&lt;img src=&quot;/assets/images/screenshot-20230117-120521.jpg&quot; alt=&quot;Result&quot;/&gt;&lt;/p&gt;

&lt;p&gt;结果表明：所重构的方法将每个重构项目的可重用元素数量平均&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;增加了 4 倍&lt;/code&gt;，并通过每个模块声明多个可重用元素来实现细粒度重用。 它通过限制其他模块未使用的模块功能的范围来强制模块封装，减少模块耦合。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;重构的源代码转换是否保留了所分析系统的外部行为？&lt;/strong&gt;
&lt;img src=&quot;/assets/images/screenshot-20230117-120755.jpg&quot; alt=&quot;Result&quot;/&gt;&lt;/p&gt;

&lt;p&gt;结果表明：重构结果保留了每个分析系统的外部行为。研究问题旨在从经验上调查所重构的重构的可靠性，即重构的应用是否不会引入语法错误或改变重构代码的外部行为，进一步支持所提方法的实用性。&lt;/p&gt;

                
&lt;/article&gt;


&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>97864483cb45492e59b6412c5ba40e8b</guid>
<title>领域驱动设计（DDD）的几种典型架构介绍</title>
<link>https://toutiao.io/k/pb9y83b</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content js_underline_content             autoTypeSetting24psection&amp;#10;            &quot; id=&quot;js_content&quot;&gt;&lt;section data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;strong&gt;&lt;span&gt;推荐关注&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;mp-common-profile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-weui-theme=&quot;light&quot; data-id=&quot;MzIxNzA1NjYyOA==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/1ToskoJZqDHYaNzSmnKk5eKpicCj70zydKeiaJkdMILiaicuhcfmERup2VCl4Cjyibd9wvSoZVia4C5yNXrSSTyUeC9g/0?wx_fmt=png&quot; data-nickname=&quot;前端技术精选&quot; data-alias=&quot;FrontEndTech&quot; data-signature=&quot;前端技术精选，分享最新的前端、大前端技术文章、工具资源、热点资讯，比如JS、H5、CSS3、Vue.js、React、前端框架等等。&quot; data-from=&quot;0&quot; data-is_biz_ban=&quot;0&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;顶级架构师后台回复 &lt;/span&gt;&lt;span&gt;&lt;strong&gt;1024 &lt;/strong&gt;&lt;span&gt;有特别礼包&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;作者：我思知我在&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;来源：blog.csdn.net/qq_32828253/article/details/110673205&lt;/span&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;span/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;上一篇：&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzIzNjM3MDEyMg==&amp;amp;mid=2247557430&amp;amp;idx=1&amp;amp;sn=6c8169652953ae4ac9a71cf201e0f419&amp;amp;chksm=e8db4093dfacc985eea6a59118c645e7e2a6d4c7bba6890245e9af840da42e997e82a2f56c8e&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;2万字总结，体系化带你全面认识 Nginx ！&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;2万字总结，体系化带你全面认识 Nginx ！&lt;/a&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzIzNjM3MDEyMg==&amp;amp;mid=2247556972&amp;amp;idx=1&amp;amp;sn=9831fc8f436532b748a714f57ef50703&amp;amp;chksm=e8dabec9dfad37dfe4d5dfa7fd77bfe9a040c9709df0fa1ca40beadb8c9f72f1a32c77542267&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;万字详文告诉你如何做 Code Review！&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;strong&gt;&lt;span&gt;大家好，我是顶级架构师。&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;我们生活中都听说了DDD，也了解了DDD，那么怎么将一个新项目从头开始按照DDD的过程进行划分与架构设计呢？&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;一、专业术语&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;各种服务&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;IAAS：基础设施服务，Infrastructure-as-a-service&lt;/section&gt;&lt;section&gt;PAAS：平台服务，Platform-as-a-service&lt;/section&gt;&lt;section&gt;SAAS：软件服务，Software-as-a-service&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;二、架构演变&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5724838411819021&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/fEsWkVrSk54nVNmKDIqgKCh5Wfk6Z6iaB3NWRWkibiaFMc0K4AjqlJLx5QnRAeqLGtSw2NgnAlI8mIhhoNEI5uNFg/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;1083&quot;/&gt;&lt;/section&gt;&lt;section&gt;从图中已经可以很容易看出架构的演进过程，通过对三个层的举例来进行说明：&lt;/section&gt;&lt;section&gt;&lt;strong&gt;SAAS&lt;/strong&gt;：比如我们最早的就是单体应用，多个业务之间可能都没有进行分层，之后我们业务多了，都各自混淆在一起，后来我们就通过MVC、SSM、分层等方式进行业务拆分，保证业务与业务之间解耦&lt;/section&gt;&lt;section&gt;&lt;strong&gt;PAAS&lt;/strong&gt;：随者业务的增长，我们打算分离出一个子系统，但是成本太高，每次都需要从头搭建一个子系统，效率低下。这时我们就抽取除了一些通用技术，比如mesh、SOA、微服务等方式来隔离系统，且对通用技术复用来快速搭建一个系统&lt;/section&gt;&lt;section&gt;&lt;strong&gt;IAAS&lt;/strong&gt;：比如订单服务并发量高，单台服务器已经无法满足要求，这时我们需要多台服务器，可能有windows的、linux、mac，想要快速部署就需要屏蔽OS，于是就有了VM、Docker、K8S等技术来屏蔽OS&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;三、限界上下文&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;限界上下文概念&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5235434956105347&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/fEsWkVrSk54nVNmKDIqgKCh5Wfk6Z6iaBhVZ6rOcvfsqv8NKUavVUhlboK2WFN6M15FwmfgnLP8HZqrPbRlRcibQ/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;1253&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;BC与业务的关系&lt;/strong&gt;：&lt;/section&gt;&lt;section&gt;通过对业务的划分，比如订单系统，订单是一个子域；库存是一个子域；&lt;/section&gt;&lt;section&gt;其中商品再不同的子域中所表示的意义也不同，比如在订单上下文中的商品表示商品的单价、折扣等等；而在库存的上下文中商品表示商品的库存量、成本、存放位置等。另外，搜索公众号Linux就该这样学后台回复“猴子”，获取一份惊喜礼包。&lt;/section&gt;&lt;section&gt;&lt;strong&gt;BC与技术的关系&lt;/strong&gt;：&lt;/section&gt;&lt;section&gt;多个子域之间必须需要在应用层进行聚合，而聚合的过程中就引出了技术方案，比如订单到库存到支付，他们应该采用同步方式；这几个子域调用通知都应该是异步，那么可能就需要消息中间件或其它技术方案&lt;/section&gt;&lt;pre mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;/p&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;/p&gt;&lt;/pre&gt;&lt;section&gt;&lt;strong&gt;限界上下文划分规则&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.31409544950055496&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/fEsWkVrSk54nVNmKDIqgKCh5Wfk6Z6iaBdVsLTDm9SMy9QNYj9s2mbfxIlLMoYQrn7sibA4UnjUsIxibOohAVEr6Q/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;901&quot;/&gt;&lt;/section&gt;&lt;section&gt;一般来说，先考虑团队规模，来决定最终需要划分到多细粒度的BC，如果团队规模过小而BC过细，则对后期的运维、部署、上线都会造成很大的负担；&lt;/section&gt;&lt;section&gt;在确定好粒度后，可以对语义相关性、功能相关性-业务方向、功能相关性-非业务方向进行划分&lt;/section&gt;&lt;section&gt;按照以上的规则划分之后就得到了多个BC啦&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;一个BC代表一个微服务吗？&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.351931330472103&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/fEsWkVrSk54nVNmKDIqgKCh5Wfk6Z6iaBNkdIDcoX0jsXAnKgzUptHEkic7CxuQzF9K3tNsQauWjZwWk0GGBPiaSw/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;932&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;概念&lt;/strong&gt;：微服务一般是指将高度相关功能的一个开发部署单元，有自己的技术自治性、技术选型、弹性扩缩容、发布上下频率等，说白了就是各自维护一个业务，然后多个业务组成一个系统，多个业务之间各自管理&lt;/section&gt;&lt;section&gt;&lt;strong&gt;关系：&lt;/strong&gt;这里的BC其实就是一个领域或一个模块或一个业务，如果两个领域相关性很高，就可以包含多个BC，或者如果一个领域访问量非常大，则需要部署在一个微服务中以提高性能&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;四、领域驱动设计的四重边界&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.09921875&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/fEsWkVrSk54nVNmKDIqgKCh5Wfk6Z6iaBnLTPWa9icE939Ahmj0kPqCibsuZxVoRyIEXSe29cr9c8icwP3vWFicOE6Q/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/section&gt;&lt;section&gt;根据上图所示，我们通过&lt;span&gt;四重来进行架构设计&lt;/span&gt;：&lt;/section&gt;&lt;section&gt;&lt;strong&gt;分而治之&lt;/strong&gt;：DDD通过规划四重边界，把领域知识做了合理的固化和分层。业务有核心领域和支持域、业务域中又拆分成多个限界上下文（BC），一个BC中又根据领域知识核心与否进行分层，领域层中按照多个业务（子域）的强相关性进行聚合成一个子域。另外，搜索公众号后端架构师后台回复“架构整洁”，获取一份惊喜礼包。&lt;/section&gt;&lt;section&gt;【第一重边界】确定项目的愿景与目标，确定问题空间，确定核心子领域、通用子领域（多个子领域可以复用）、支撑子领域（额外功能，如数据统计、导出报表）&lt;/section&gt;&lt;section&gt;【第二重边界】解决方案空间里的限界上下文就是一道进程隔离层面的物理边界&lt;/section&gt;&lt;section&gt;【第三重边界】每个限界上下文内，使用分层架构划分为：接口层、领域层、应用层、基础设施层之间的最小隔离&lt;/section&gt;&lt;section&gt;【第四重边界】领域层里为了保证各个领域的完整性和一致性，引入聚合的设计作为隔离领域模型的最小单元&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;五、整洁分层架构&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.157514450867052&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/fEsWkVrSk54nVNmKDIqgKCh5Wfk6Z6iaBZOuFWr1cXicf3zKicJkZPD8sUWocxrRKj8fW9m8GDkzvuM1mPDq7WZ7w/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;692&quot;/&gt;&lt;/section&gt;&lt;section&gt;具体说明看图中备注，总的来说就是通过实现与接口分离，让domain层尽量独立，而不耦合与任何模块，这里面包含了领域模型的业务逻辑代码，但不会依赖于具体技术实现，可以很方便更换基础设施层，提供给第三方web调用service&lt;/section&gt;&lt;pre mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-type=&quot;png&quot; data-w=&quot;64&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/b96CibCt70iaajvl7fD4ZCicMcjhXMp1v6UXcBIdyPOYfUfaibicSXbZSrkFL9jwZRTUz8aKA1zXq1GDV8Z7uXeep6w/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-type=&quot;png&quot; data-w=&quot;64&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/b96CibCt70iaajvl7fD4ZCicMcjhXMp1v6UXcBIdyPOYfUfaibicSXbZSrkFL9jwZRTUz8aKA1zXq1GDV8Z7uXeep6w/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-type=&quot;png&quot; data-w=&quot;64&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/b96CibCt70iaajvl7fD4ZCicMcjhXMp1v6UXcBIdyPOYfUfaibicSXbZSrkFL9jwZRTUz8aKA1zXq1GDV8Z7uXeep6w/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-type=&quot;png&quot; data-w=&quot;64&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/b96CibCt70iaajvl7fD4ZCicMcjhXMp1v6UXcBIdyPOYfUfaibicSXbZSrkFL9jwZRTUz8aKA1zXq1GDV8Z7uXeep6w/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;img data-ratio=&quot;1&quot; data-type=&quot;png&quot; data-w=&quot;64&quot; class=&quot;rich_pages wxw-img&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/b96CibCt70iaajvl7fD4ZCicMcjhXMp1v6UXcBIdyPOYfUfaibicSXbZSrkFL9jwZRTUz8aKA1zXq1GDV8Z7uXeep6w/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-type=&quot;png&quot; data-w=&quot;64&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/b96CibCt70iaajvl7fD4ZCicMcjhXMp1v6UXcBIdyPOYfUfaibicSXbZSrkFL9jwZRTUz8aKA1zXq1GDV8Z7uXeep6w/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/p&gt;&lt;p mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU1NjYxNDc2OQ==&amp;amp;mid=2247500619&amp;amp;idx=1&amp;amp;sn=58b88975efa9ea0b35e6190b8a469481&amp;amp;chksm=fbc0d655ccb75f435e1ebbddf6b72d0f61d7947d677a65198e0f20da4d2ead1c0950eca0994a&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;‍牛逼啊！接私活必备的 N 个开源项目！赶快收藏‍&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;&lt;span mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;25.600000381469727&quot;&gt;牛逼啊！接私活必备的 N 个开源项目！赶快收藏&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;六、六边形架构&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.84375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/fEsWkVrSk54nVNmKDIqgKCh5Wfk6Z6iaBgX4eWVr1Sz59NNMicDIqU3FxjGRaewXnoOdmJxiakVbzHlcwib89sD2bA/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;主动适配&lt;/strong&gt;：指来⾃于UI、命令⾏等输⼊型命令， controller就是⼀种端⼝，端⼝的具体实现就是应⽤逻&lt;/section&gt;&lt;section&gt;辑⾃身。因此端⼝和具体实现都在应⽤系统的内部。&lt;/section&gt;&lt;section&gt;&lt;strong&gt;被动适配&lt;/strong&gt;：指访问存储设备，外部服务等。每种访问就是⼀种端⼝，具体实现是各个具体的中间件。因&lt;span&gt;此&lt;/span&gt;&lt;span&gt;端⼝在整个应⽤系统的⾥部，具体实现在系统的外部。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;每⼀种输⼊和输出都是⼀个端⼝，每个端⼝都有具体的实现逻辑，因此整个应⽤系统的架构就是⼀些列&lt;span&gt;的端⼝+适配逻辑组成，架构图就是⼀个多边形形状。&lt;/span&gt;&lt;span&gt;有⼏个端⼝需要根据应⽤系统的具体情况⽽定，&lt;/span&gt;&lt;span&gt;只是六个端⼝⽐较形象⽽得名为六边形架构。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;特点：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;1. 外层依赖内层使得依赖更合理。端⼝就是接⼝，依赖接⼝编程。借此保证了应⽤和实现细节之&lt;span&gt;间的隔离。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;2. 可测试更好&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;七、洋葱架构&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.89921875&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/fEsWkVrSk54nVNmKDIqgKCh5Wfk6Z6iaBXhKpfE9zxicvyylwLKbBgpwveH0nnxdguLib5nPzLcB6kb79Fo5wzaYQ/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/section&gt;&lt;section&gt;洋葱架构针对六边形架构更进⼀步把内层的业务逻辑分为了DDD概念的应⽤服务层、领域服务层和领域&lt;span&gt;模型层。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;特点：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;（1）围绕独⽴的领域模型构建应⽤&lt;/section&gt;&lt;section&gt;（2）内层定义接⼝，外层实现接⼝&lt;/section&gt;&lt;section&gt;（3）依赖的⽅向指向圆⼼（注意：洋葱架构提倡不破坏耦合⽅向的依赖都是合理的，外层可以依赖直接内层，也可以依赖更⾥⾯的层）&lt;/section&gt;&lt;section&gt;（4）所有的应⽤代码可以独⽴于基础设施编译和运⾏&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;八、总结&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;目前领域驱动设计是目前比较流行的一种架构设计，只需要按照领域驱动设计的四重边界进行架构设计，就能够很好的对各个领域解耦，对后期的业务垂直扩展、功能的水平扩展提供了良好的基础。&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;欢迎大家进行观点的探讨和碰撞，各抒己见。如果你有疑问，也可以找我沟通和交流。&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;扩展：&lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzIzNjM3MDEyMg==&amp;amp;mid=2247534656&amp;amp;idx=2&amp;amp;sn=2781baec773a9340091436c521430648&amp;amp;chksm=e8dae9e5dfad60f33204393e3c333800e8fb8dd39fd43064d496b665cd31c0a61b742f2f23b2&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;‍接私活儿‍&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;11&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;接私活儿&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;最后给读者整理了一份&lt;/span&gt;&lt;strong&gt;&lt;span&gt;BAT&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;大厂面试真题，需要的可扫码回复“&lt;/span&gt;&lt;span&gt;&lt;strong&gt;面试题&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;”即可获取。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;129&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;129&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/gHvX5TiczgWnGNeNvhwthOJ5nsbFVQiaqshWre8pAebiaMAOQA3QkLmLOhGZ4CWxJDpds5UvanOJSnj5ia7YQfnrkg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;430&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;strong&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-copyright=&quot;0&quot; data-fileid=&quot;100039810&quot; data-ratio=&quot;0.07625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/WLXa0NsmXuiap5yprf7DJXhpdhC0XIBAopbpFTUe1eSSuGbT5Kg63CPBicfpxwLAFIm2wPkicB5NWdSicbzziaibPXSA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;800&quot; title=&quot;&quot;/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section data-mpa-template-id=&quot;112&quot; data-mpa-category=&quot;quote&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;公众号后台回复 &lt;/span&gt;&lt;span&gt;&lt;strong&gt;架构 &lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;或者 &lt;/span&gt;&lt;span&gt;&lt;strong&gt;架构整洁 &lt;/strong&gt;&lt;/span&gt;&lt;span&gt;有惊喜礼包！&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;顶级架构师交流群&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt; &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;「顶级架构师」建立了读者架构师交流群，大家可以添加小编微信进行加群。欢迎有想法、乐于分享的朋友们一起交流学习。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-fileid=&quot;100039741&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_jpg/gHvX5TiczgWnnUl3jPAiau1tnA9ItkpzkBC7csUJq3MOxS25kd9Z59XXTh1QPMzXvY1aBB49ZkJhj9iaLxLaxQllA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;430&quot; title=&quot;&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;扫描添加好友邀你进架构师群，加我时注明&lt;/span&gt;&lt;strong&gt;&lt;span&gt;【&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;姓名+公司+职位】&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;版权申明：内容来源网络，版权归原作者所有。如有侵权烦请告知，我们会立即删除并表示歉意。谢谢。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;猜你还想看&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzIzNjM3MDEyMg==&amp;amp;mid=2247517463&amp;amp;idx=1&amp;amp;sn=39841b9fb02e185d4cb06df7f5b7cc02&amp;amp;chksm=e8da24b2dfadada4eea431a3df5ea184203cdc1cf4f833549f80956328901c5e005f8d388583&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;推荐一套开源通用后台管理系统（附源码）&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;推荐一套开源通用后台管理系统（附源码）&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzIzNjM3MDEyMg==&amp;amp;mid=2247551910&amp;amp;idx=2&amp;amp;sn=bdbc7c7bfcc27d8cc7fc80f629bf2f01&amp;amp;chksm=e8daaa03dfad231580fbbbd28a73bdedab2e4eeb8eb53d00b7037b645b1d64672b32dd8e74b9&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;牛逼啊！接私活必备的 N 个开源项目！赶快收藏吧（附源码合集第二期）！&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;11&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;牛逼啊！接私活必备的 N 个开源项目！赶快收藏吧（附源码合集第二期）！&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzIzNjM3MDEyMg==&amp;amp;mid=2247520498&amp;amp;idx=1&amp;amp;sn=247bed1ab2e30cad54981a3eeff00810&amp;amp;chksm=e8da3157dfadb84118310e1067c0af1e8fc3e41b15d2dfde8ab61889b8522f603bbda08bed8c&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;看看人家那 IM 即时通讯系统，那叫一个优雅（附源码）&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;11&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;看看人家那 IM 即时通讯系统，那叫一个优雅（附源码）&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzIzNjM3MDEyMg==&amp;amp;mid=2247520660&amp;amp;idx=1&amp;amp;sn=ea62f593bebb58a33bb77b7e65ec8a86&amp;amp;chksm=e8da3031dfadb927fd40c6608bc727bacc53309afcf868f10b5ba2c3153024904c92332fe5ef&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;面试官：生成订单30分钟未支付，则自动取消，该怎么实现？&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;面试官：生成订单30分钟未支付，则自动取消，该怎么实现？&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzIzNjM3MDEyMg==&amp;amp;mid=2247506842&amp;amp;idx=1&amp;amp;sn=5387bf6dca96e01d5ce00400a91dde3e&amp;amp;chksm=e8da7a3fdfadf329bb65307a9a830e80911f1118a3e6878f0f6ed530e0940b43bf505655dfea&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;阿里技术专家：一文教你高效画出技术架构图&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzIzNjM3MDEyMg==&amp;amp;mid=2247556800&amp;amp;idx=2&amp;amp;sn=5f5056e549b46ff764fe91643952734d&amp;amp;chksm=e8dabf65dfad36736031e8750c03770a10512ebae17bfee76f6c9ddc9389fd7dfe6ed9dd0566&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;如何设计一个IM单聊架构&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;如何设计一个IM单聊架构&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzIzNjM3MDEyMg==&amp;amp;mid=2247557263&amp;amp;idx=2&amp;amp;sn=b1d254c0f2fc2b1d73491dd506379af1&amp;amp;chksm=e8db412adfacc83c256385f4fc9a83b224a32d2ae31d900a7629744cff3dc87fe9a4645a2ba0&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;这是我见过最好的个人博客系统！&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;这是我见过最好的个人博客系统！&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzIzNjM3MDEyMg==&amp;amp;mid=2247557430&amp;amp;idx=2&amp;amp;sn=3fed5f5705f3f3ae0d67085c0713751d&amp;amp;chksm=e8db4093dfacc985880c44433024615df347987b7d1d2605bb8d7ce2adf2845e5fe6dfb32191&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;支付设计白皮书：支付系统的对账系统设计！&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;支付设计白皮书：支付系统的对账系统设计！&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzIzNjM3MDEyMg==&amp;amp;mid=2247557044&amp;amp;idx=2&amp;amp;sn=93f7b5b1156957e6da3009820860c45a&amp;amp;chksm=e8dabe11dfad3707394917e63483542d7d8b57762689ceab90e34742cf0be350e89ca5e97ef1&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;多图深入理解 Redis，看了都说好！&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;多图深入理解 Redis，看了都说好！&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzIzNjM3MDEyMg==&amp;amp;mid=2247557082&amp;amp;idx=2&amp;amp;sn=fd62997b61a482873343d873e52b4979&amp;amp;chksm=e8dabe7fdfad3769238d3c0b3f274e23bbfe42332fb4bb5539e0b6aeb92000a8f4123ab8f75d&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;看看人家那中后台管理系统，那叫一个优雅！&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;看看人家那中后台管理系统，那叫一个优雅！&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzIzNjM3MDEyMg==&amp;amp;mid=2247557121&amp;amp;idx=2&amp;amp;sn=c621bd5b02bdd8d373291a32a06a9611&amp;amp;chksm=e8db41a4dfacc8b2a2f59e030d275d9e84829ed838d3d6b27eeb10ff31aff9d3d778086a804d&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;ElasticSearch进阶：一文全览各种ES查询在Java中的实现！&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;ElasticSearch进阶：一文全览各种ES查询在Java中的实现！&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzIzNjM3MDEyMg==&amp;amp;mid=2247553841&amp;amp;idx=2&amp;amp;sn=093b9cb7b6ba326921d289f3ab078128&amp;amp;chksm=e8dab294dfad3b82939cca25ea0452d1497c6b5cc38b70614ec797fb1e8bc3e11a0f6b789582&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;老板让我牵头搞ELK，我该如何确定ES的集群规模？&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;/&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzIzNjM3MDEyMg==&amp;amp;mid=2247557202&amp;amp;idx=2&amp;amp;sn=328a353fb62b9ad13c5512b896607659&amp;amp;chksm=e8db41f7dfacc8e1fe6615f8aa9f761116d38ecf3ae256eb95fda43c88a521d4558668dceec1&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;Sharding-Jdbc 实现读写分离 + 分库分表，写得太好了！&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;Sharding-Jdbc 实现读写分离 + 分库分表，写得太好了！&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.3424068767908309&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/gHvX5TiczgWlGhpEDSFazuReUA3ibXwOm2lhZNYw6J8Cnrd3axDemDlSGzoGyrjuKHKxHWYUia5hmia59VwicGNFxTw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;698&quot;/&gt;&lt;/p&gt;&lt;pre data-darkmode-bgcolor-15923650965579=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15923650965579=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15923650965579=&quot;rgb(167, 167, 167)&quot; data-darkmode-original-color-15923650965579=&quot;rgb(63, 63, 63)&quot; data-style=&quot;letter-spacing: 0.544px; font-size: 16px; color: rgb(63, 63, 63); word-spacing: 1px; line-height: inherit;&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;ignored&quot;&gt;&lt;pre&gt;&lt;pre ng-bind-html=&quot;message.MMActualContent&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;ignored&quot;&gt;&lt;pre&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;最近面试BAT，整理一份面试资料&lt;/span&gt;&lt;span&gt;《&lt;strong&gt;Java面试BAT通关手册&lt;/strong&gt;》&lt;/span&gt;&lt;span&gt;，覆盖了Java核心技术、JVM、Java并发、SSM、微服务、数据库、数据结构等等。&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;获取方式：点“&lt;/span&gt;&lt;span&gt;在看&lt;/span&gt;&lt;span&gt;”，关注公众号并回复 &lt;/span&gt;&lt;span&gt;手册&lt;/span&gt;&lt;span&gt; 领取，更多内容陆续奉上。&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/pre&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;明天见(｡･ω･｡)&lt;/strong&gt;&lt;/section&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;mp-style-type data-value=&quot;3&quot;/&gt;&lt;/p&gt;&lt;/div&gt;

          
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>fa366aab1346f0917467bc6927628345</guid>
<title>结对编程踩坑指南</title>
<link>https://toutiao.io/k/3ufhtpv</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;entry-content&quot; itemprop=&quot;articleBody&quot;&gt;&amp;#13;
&lt;p&gt;&lt;strong&gt;背景&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;最近，我开始重新审视这些融入日常的工程实践方式，去尝试找出实际与理论的差距，分析差距成因，基于分析结果，尝试找出可以逐步弥补差距的实践方式，从而让日常软件交付工作变得更加“顺滑”。&lt;/p&gt;
&lt;p&gt;本文作为“沉思录”的第一篇，将列举&lt;strong&gt;实际交付项目中，在结对编程时遇到的几个实际问题&lt;/strong&gt;，并针对具体问题给出一些尝试过的解决方式。&lt;/p&gt;
&lt;p&gt;如有其他更好的建议，欢迎共同讨论。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;以下话题&lt;strong&gt;不在&lt;/strong&gt;本文的讨论范围中，并且默认读者已经具备下列问题相关的知识:&lt;/p&gt;

&lt;h2&gt;&lt;strong&gt;工作环境上下文&lt;/strong&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;9 人团队（1 BA， 1 QA， 1 TL， 6 Devs）&lt;/li&gt;
&lt;li&gt;特殊角色（BA，QA， TL）基本都是 Solo 工作，Dev Pair 工作&lt;/li&gt;
&lt;li&gt;每对 Pair 同一时间只会工作在一个 User Story 上，直到该 User Story 进入测试阶段&lt;/li&gt;
&lt;li&gt;团队在 Sprint 开始时进行 Switch Pair 活动，User Story 未完成的 Pair，会有一人留在未完成的 Story 上，以便完成保证卡片上下文充足&lt;/li&gt;
&lt;li&gt;Switch Pair 会按照 Pair 轮换表（如下）进行，以确保所有开发都会有均等的 Pair 机会 &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Dev轮换表大概是这个样子（每个周期内团队采用同一编号的配对组合）&lt;/em&gt;：&lt;/p&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;
   &lt;/td&gt;
&lt;td&gt;&lt;strong&gt;张三&lt;/strong&gt;
   &lt;/td&gt;
&lt;td&gt;&lt;strong&gt;薛霸&lt;/strong&gt;
   &lt;/td&gt;
&lt;td&gt;&lt;strong&gt;肖兰&lt;/strong&gt;
   &lt;/td&gt;
&lt;td&gt;&lt;strong&gt;阿乐&lt;/strong&gt;
   &lt;/td&gt;
&lt;td&gt;&lt;strong&gt;阿发&lt;/strong&gt;
   &lt;/td&gt;
&lt;td&gt;&lt;strong&gt;阿花&lt;/strong&gt;
   &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;张三&lt;/strong&gt;
   &lt;/td&gt;
&lt;td&gt;X
   &lt;/td&gt;
&lt;td&gt;X
   &lt;/td&gt;
&lt;td&gt;X
   &lt;/td&gt;
&lt;td&gt;X
   &lt;/td&gt;
&lt;td&gt;X
   &lt;/td&gt;
&lt;td&gt;X
   &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;薛霸&lt;/strong&gt;
   &lt;/td&gt;
&lt;td&gt;组合1
   &lt;/td&gt;
&lt;td&gt;X
   &lt;/td&gt;
&lt;td&gt;X
   &lt;/td&gt;
&lt;td&gt;X
   &lt;/td&gt;
&lt;td&gt;X
   &lt;/td&gt;
&lt;td&gt;X
   &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;肖兰&lt;/strong&gt;
   &lt;/td&gt;
&lt;td&gt;组合4
   &lt;/td&gt;
&lt;td&gt;组合3
   &lt;/td&gt;
&lt;td&gt;X
   &lt;/td&gt;
&lt;td&gt;X
   &lt;/td&gt;
&lt;td&gt;X
   &lt;/td&gt;
&lt;td&gt;X
   &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;阿乐&lt;/strong&gt;
   &lt;/td&gt;
&lt;td&gt;组合2
   &lt;/td&gt;
&lt;td&gt;组合5
   &lt;/td&gt;
&lt;td&gt;组合1
   &lt;/td&gt;
&lt;td&gt;X
   &lt;/td&gt;
&lt;td&gt;X
   &lt;/td&gt;
&lt;td&gt;X
   &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;阿发&lt;/strong&gt;
   &lt;/td&gt;
&lt;td&gt;组合5
   &lt;/td&gt;
&lt;td&gt;组合2
   &lt;/td&gt;
&lt;td&gt;组合4
   &lt;/td&gt;
&lt;td&gt;组合3
   &lt;/td&gt;
&lt;td&gt;X
   &lt;/td&gt;
&lt;td&gt;X
   &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;阿花&lt;/strong&gt;
   &lt;/td&gt;
&lt;td&gt;组合3
   &lt;/td&gt;
&lt;td&gt;组合4
   &lt;/td&gt;
&lt;td&gt;组合2
   &lt;/td&gt;
&lt;td&gt;组合5
   &lt;/td&gt;
&lt;td&gt;组合1
   &lt;/td&gt;
&lt;td&gt;X
   &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;基于以上的上下文，我们遇到了以下&lt;strong&gt;实际问题&lt;/strong&gt;：&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;问题 1：Switch Pair时，需要交接的内容过多&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Switch Pair 时，需要交接的内容过多时，可能会漏掉一些细节信息。为了补充遗漏，会陷入更多、更深的讨论。&lt;/p&gt;
&lt;h4&gt;&lt;strong&gt;具体场景&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;张三和薛霸经过了一周的结对编程，手头的一张复杂 User Story （&lt;em&gt;无法进一步拆分&lt;/em&gt;）没有完成，薛霸被留在了当前工作上，准备和阿乐开始工作。&lt;/p&gt;
&lt;p&gt;可是，在薛霸向阿乐介绍当前的工作进度时，无法清楚地给阿乐说明之前所写代码与 User Stroy 的对应关系和一些必要的上下文。&lt;/p&gt;
&lt;p&gt;于是这对 Pair 不得不将张三重新拉回来，进行上下文交接，三人讨论时间较长，并且会将之前已经讨论过的问题重新讨论，降低了工作效率。&lt;/p&gt;
&lt;h4&gt;&lt;strong&gt;分析原因&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;后来，张三，薛霸，阿乐对这次效率不尽人意的 Switch Pair 进行了回顾，尝试利用&lt;strong&gt;问答&lt;/strong&gt;的形式进行分析：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;对于阿乐的问题，薛霸无法清楚地解答，但在拉回张三后，增加了一些额外的讨论时间，就可以解答了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;问：&lt;/strong&gt; 结对的两人在当前工作中，理论上应该能够具备相当信息积累。那么，为什么当前薛霸和张三出现了信息积累差异的情况？ &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;答：&lt;/strong&gt;卡片从 Kick-Off 到当前交接 Switch Pair 的时间跨度较长（7天，含周末），包含内容较多，需要一些讨论重新回想起当时的信息。 \&lt;br/&gt;
另外，薛霸无法解答的问题，基本都是张三在薛霸请假期间完成的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;结对编程理应是有任务拆分（&lt;strong&gt;Tasking&lt;/strong&gt;）作为前提的，以确保 Pair 两人对于当前的工作进度一致，以尽量减轻请假所带来的信息不对称问题。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;问：&lt;/strong&gt;为什么当前的效果并不理想？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;答：&lt;/strong&gt;最初拆分的任务粒度较大，但实际上，在一个大粒度的任务中，会包含一些较小粒度的任务，并且这些任务的完成结果，还会影响后续的任务内容。在工作时，完成了这些较小粒度的任务后，没有将&lt;strong&gt;关键&lt;/strong&gt;工作内容更新到两人共享的任务列表中，于是造成了信息不对称情况。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;strong&gt;可尝试的实践&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;于是，大家总结出了如下可以实行的行动：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;初始任务拆分尽量将可能会产生任务分支的&lt;strong&gt;关键任务&lt;/strong&gt;（或问题）标出。&lt;/li&gt;
&lt;li&gt;在完成任务的过程中，&lt;strong&gt;保持最初任务列表的更新&lt;/strong&gt;，特别是上述的关键任务，按需记录任务的产出或关键信息。&lt;/li&gt;
&lt;li&gt;Switch Pair 围绕&lt;strong&gt;任务列表&lt;/strong&gt;进行，以避免出现内容遗漏或花费额外时间讨论上下文外的问题。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;strong&gt;问题 2：Pair时，其中一人变Solo&lt;/strong&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;采用Navigator-Driver Pair 模式时，掌握键盘和鼠标的一人（Driver），有时会成兼任 Navigator 角色。&lt;/li&gt;
&lt;li&gt;Pair 过程中，一人会处于高度集中状态，另外一人可能会因为没跟上，而从 Pair 中脱出，产生信息断层。&lt;/li&gt;
&lt;li&gt;Pair 过程中，如果不作 Driver 的角色，可能无法完全掌握当前 User Story 的全貌。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其实上述的问题是有一定的内在逻辑联系的，可以通过下面的具体场景来进行复现。&lt;/p&gt;
&lt;h4&gt;&lt;strong&gt;具体场景&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;肖兰和阿发在结对编程过程中，肖兰使用自己的笔记本电脑外接显示器，并通过笔记本的键盘和触控板完成操作，阿发则可以通过外接的显示器&lt;strong&gt;看到&lt;/strong&gt;肖兰的操作。&lt;/p&gt;
&lt;p&gt;起初，两人会对着外接显示器进行一些讨论。&lt;/p&gt;
&lt;p&gt;但在深入调查代码时和一些代码编写时，肖兰开始对着自己的笔记本屏幕进行操作，随着肖兰逐渐地集中精力，讨论和解说停止了。&lt;/p&gt;
&lt;p&gt;在连续几次的进入某个类查看细节代码，再切换到另外几个文件中查看配置文件后，肖兰写了几行代码试了试。&lt;/p&gt;
&lt;p&gt;如此反复了几次后，阿发已经不清楚肖兰所进行操作的目的了，但他看着肖兰投入的样子，欲言又止，不忍心打断她的操作。&lt;/p&gt;
&lt;p&gt;于是阿发又努力了3分钟尝试跟上肖兰的思路，可是猜透一个人的心思何其难也，阿发最终无奈放弃，于是默默转向自己的电脑（手机），去看看邮件（朋友圈），等待肖兰等下有了结果再同步给他。&lt;/p&gt;
&lt;p&gt;可是，肖兰在完成的调查整个过程中获得的信息，却不一定都能同步给阿发，阿发也就无法掌握当前工作的全貌了。&lt;/p&gt;
&lt;p&gt;至此，&lt;strong&gt;Pair 终成 Solo&lt;/strong&gt;...&lt;/p&gt;
&lt;h4&gt;&lt;strong&gt;分析原因&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;硬件设施准备不充分&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;肖兰掌控了所有的操作，阿发更多的时候都处于一种“被动”状态，结对编程的参与感不高，特别是当肖兰“全情投入”后，阿发的参与感几乎被全部“剥夺”。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;说明：在了解 “如何进行结对编程” 的部分有说明过，结对编程的两人在硬件准备上，应该尽量平等，至少两人都有可以各自操作的键盘。&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;没有分配、交换角色的活动&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;结对编程是两个人共同合作的活动，那么两人中每个个体在活动中的体验感就直接影响这项活动的效果。&lt;/p&gt;
&lt;p&gt;在上述例子中，肖兰一开始就掌握了&quot;操作权”，到了代码调查阶段时，肖兰又直接“抢夺”了思维的“导向权”，随着自己的想法去调查、尝试。&lt;/p&gt;
&lt;p&gt;导致阿发在这次结对编程中的参与度极低，体验感也极差，并最终转向独自工作。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;说明：为了保证结对两人的参与度，结对编程存在多种不同的实践方式（Navigator-Driver 模式、乒乓模式、键盘 + 鼠标模式），但无论采用那种方式，两人都应在实践一段时间后，交换角色，从而使每人都有机会从不同的视角分析、解决问题。&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;缺少有效沟通&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;结对编程与其说是编程方式，不如说更多是的一种&lt;strong&gt;“社交”活动&lt;/strong&gt;。那么，在整个过程中，结对两人需要进行大量，高强度的沟通交流。&lt;/p&gt;
&lt;p&gt;在上述场景中，一方面，当肖兰要开始进行一些深入调查时，没有说明意图，从而使阿发开始产生迷茫。&lt;/p&gt;
&lt;p&gt;另一方面，当阿发努力尝试后，依然认为自己跟不上肖兰的操作时，没有与肖兰说明情况，从而使两人的“信息鸿沟”进一步被扩大。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;strong&gt;可尝试的实践&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;针对上述问题，可以：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;每对Pair中，至少有一人使用从公司申请（自备）的键盘和鼠标，确保每个人都有条件能在想要操作的时候进行操作。&lt;/li&gt;
&lt;li&gt;每对 Pair 按照拆分的任务列表，每完成 1（X）个任务，交换一次两人的角色。&lt;/li&gt;
&lt;li&gt;练习提问。结对的两人中，任何一人发现两人的思路不一致时，通过提问的方式，将问题暴露，并解决。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;strong&gt;问题 3：Switch Pair频率高，引发高沟通成本&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Pair 过程会产生大量的沟通交流，频繁的 Switch Pair 会使这种交流的成本扩大，那么如何从这种高频的 Switch Pair 活动中获得更高的个人收益呢？&lt;/p&gt;
&lt;h4&gt;&lt;strong&gt;具体场景&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;团队最近在尝试提高 Switch Pair 的频率，从之前的每两周提升到现在的每周一次，之后视情况仍有提升的可能。&lt;/p&gt;
&lt;p&gt;而这给阿花造成了困扰，因为几乎每次结对编程，阿花都和搭档会讨论很多问题，而几乎每次 Switch Pair，阿花都需要花费不少时间将这些讨论的结果和新的搭档解释。&lt;/p&gt;
&lt;p&gt;阿花认为这降低了工作的效率，并且自己也没从中获得额外的收益，那为什么还要提升 Switch Pair 的频率呢？&lt;/p&gt;
&lt;h4&gt;&lt;strong&gt;分析原因&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;其实，阿花遇到的工作效率降低问题，可以利用&lt;strong&gt;问题1&lt;/strong&gt;中提到的实践进行尝试。&lt;/p&gt;
&lt;p&gt;另外，随着频率的提升，需要传输的信息量也会下降，再加上合理的拆卡，工作效率问题的影响应该微乎其微。&lt;/p&gt;
&lt;p&gt;可是，阿花提出的另一个问题，“如何从高频 Switch Pair 中获得更高的个人收益问题？” 这却&lt;strong&gt;不是一个单靠结对编程技能就能解答&lt;/strong&gt;的问题。&lt;/p&gt;
&lt;p&gt;先抛开 Switch Pair 的初始目标（信息流动）不谈，因为这其实是对于&lt;strong&gt;团队&lt;/strong&gt;的收益（&lt;em&gt;一定程度上降低团队人员变化带来的风险&lt;/em&gt;）。 &lt;/p&gt;
&lt;p&gt;那么，对个人而言，要想从 Switch Pair 中受益，就需要从敏捷软件工程实践的相关理论和目的出发，如果能结合“快速反馈，识别变化”，那得出如下的结论就不难了：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;更频繁的搭档交换，能使反馈的信息源变化，从而使反馈的角度变化，有利于个人从不同视角识别自身的长处与短板。无论是主动通过观察学习，还是通过收集反馈，都提供了更加丰富的输入。&lt;/li&gt;
&lt;li&gt;缩短单一搭档工作的时间，但保证周期性的轮换，提供了一个适当的时期（大约一个月）去尝试、应用一些变化，从而在下次轮换到相同的搭档时，可以收集验证性的反馈。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;strong&gt;可尝试的实践&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;想要在高频 Switch Pair 的实践中最大化个人利益，那么就需要充分利用此时的机会和资源，即不同的搭档的视角，再结合 &lt;strong&gt;Feedback &lt;/strong&gt;机制，就可以很容易构建个人有目的，有针对性的提升计划。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;那么就从每次 Switch Pair 前，向上一个搭档收集这段时间合作的反馈开始吧。&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;注意：Switch Pair 的频率不必一味求高，只要能够确保工作所需的关键信息在团队内充分流动即可。&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;小结&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;结对编程&lt;/strong&gt;也只是程序员工作中会用到的一项&lt;strong&gt;技能&lt;/strong&gt;而已，那么只要是技能，通过时间的堆积，去磨炼，去思考，就会有所提升。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;稳扎稳打，时间会给予最棒的回馈！&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;相关参考&lt;/h2&gt;

&amp;#13;
&lt;/div&gt;&amp;#13;
&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>2a72ad5a00d0b539a82b61e077fe76e6</guid>
<title>Android Studio Electric Eel | 2022.1.1 发布，快来看看有什么大更新吧</title>
<link>https://toutiao.io/k/qad4ihs</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content js_underline_content             autoTypeSetting24psection&amp;#10;            &quot; id=&quot;js_content&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5628306878306878&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/yyLvy204xWic0nIhQ3dOricLHYkVbf80n6BsdoQ1E5ECIhEvP12HfDm73OtXLrMicQsdAC2LmJ2KSDjO548C6zXGg/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;3024&quot;/&gt;&lt;span/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;原文链接：https://link.juejin.cn/?target=https%3A%2F%2Fdeveloper.android.com%2Fstudio%2Freleases&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;本次 Android Studio 又发布了大量的内容更新，&lt;span&gt;按照惯例推荐是等两个小版本后再更新会比较稳&lt;/span&gt;，当然也鼓励大家尝尝鲜，本次更新推出了大量实用的功能。&lt;/p&gt;&lt;p&gt;另外由于国内对更新内容关注度等原因，这里调整了更新内容的顺序，Firebase Crashlytics 放到了最后。&lt;/p&gt;&lt;h1 data-id=&quot;heading-0&quot;&gt;可调节大小的模拟器&lt;/h1&gt;&lt;p&gt;从 Android Studio Electric Eel 开始，现在可以使用一个可调节大小的模拟器，以此来支持多种屏幕尺寸上的应用测试。&lt;/p&gt;&lt;p&gt;&lt;span&gt;在单个可调整大小的模拟器上进行测试，不仅可以帮助开发者快速测试不同界面的适配效果，还可以通过节省开启多个虚拟设备所需的资源和内存&lt;/span&gt;，从而提升开发体验的流畅度。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;要使用可调整大小的模拟器，需要使用 Android 模拟器版本 31.1.3 或更高版本。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;当应用被部署到可调整大小的模拟器时，使用模拟器工具栏中的 &lt;span&gt;Display Mode&lt;/span&gt; 下拉菜单，可以在一组常见设备类型之间快速切换。&lt;/p&gt;&lt;p&gt;模拟器屏幕会自动调整大小，因此开发者可以在各种屏幕尺寸和像素密度下轻松测试应用。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3229706390328152&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/yyLvy204xWic0nIhQ3dOricLHYkVbf80n6pbR67ujn9Kw2gGlZ8iaTEjmlk8LU6SO9zzbR2skLicicRZa9iaibzaLcpRQ/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;579&quot;/&gt;&lt;/p&gt;&lt;h1 data-id=&quot;heading-1&quot;&gt;视图的视觉检查&lt;/h1&gt;&lt;p&gt;&lt;span&gt;Android Studio 现在会自动运行开发者的布局，以检查在不同屏幕尺寸下以视图编写的布局是否存在视觉 lint 问题&lt;/span&gt;。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;PS：个人觉得这个支持相对鸡肋，用过 XML 布局预览的应该都懂，可能还会产出各种 IDE 的 Errors 信息。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;当开发者打开 &lt;span&gt;Layout Validation&lt;/span&gt; 时，就可以看到所有布局以多种设备尺寸呈现。&lt;/p&gt;&lt;p&gt;如果有问题，它会出现在 &lt;span&gt;Problems&lt;/span&gt; 面板中显示，该面板旨在显示设计工具中的所有问题。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.667&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/yyLvy204xWic0nIhQ3dOricLHYkVbf80n6mX3BO78T16efdiciaWMIcdtywyAZ2YUlk5dYPVTMVvryRB7cn5WkOOlQ/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1000&quot;/&gt;&lt;/p&gt;&lt;h1 data-id=&quot;heading-2&quot;&gt;设备镜像&lt;/h1&gt;&lt;p&gt;在 Android Studio Electric Eel 现在可以通过 &lt;span&gt;Running Devices&lt;/span&gt; 窗口实现设备镜像。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;通过将设备的显示流直接传输到 Android Studio，开发者可以直接从 IDE 本身执行常见操作，例如旋转屏幕、更改音量或锁定/解锁设备。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;设备镜像在 Electric Eel Canary 中会作为一项实验性功能提供，可以通过 &lt;span&gt;File&lt;/span&gt; &amp;gt; &lt;span&gt;Settings&lt;/span&gt; &amp;gt; &lt;span&gt;Experimental&lt;/span&gt;（ &lt;span&gt;Android Studio&lt;/span&gt; &amp;gt; &lt;span&gt;Preferences&lt;/span&gt; &amp;gt; &lt;span&gt;Experimental on a Mac&lt;/span&gt;），然后选中 &lt;span&gt;Device Mirroring&lt;/span&gt; 旁边的框。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.6877682403433476&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/yyLvy204xWic0nIhQ3dOricLHYkVbf80n68PAFgJMjzjIhPuAibgTlCDBI0py6ou5a4IOfTluMeJSMJTn5J56wKfw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;932&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;首先，确保 AS 已连接到设备，之后连接到的所有设备都反映在 &lt;span&gt;Running Devices&lt;/span&gt; 窗口的选项卡中。&lt;/p&gt;&lt;p&gt;开发者可以通过导航到 &lt;span&gt;View&lt;/span&gt; &amp;gt; &lt;span&gt;Tool Windows&lt;/span&gt; &amp;gt; &lt;span&gt;Running Devices&lt;/span&gt; 打开该窗口，当开发者将应用或测试程序部署到连接的设备时， &lt;span&gt;Running Devices&lt;/span&gt; 窗口会自动出现并显示镜像设备。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5801749271137027&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/yyLvy204xWic0nIhQ3dOricLHYkVbf80n6bNvuAiaWvpgu4eicfGia71b74SSajXxYxGSzvbYFfNwibKNFiaaP9lRUOPg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1029&quot;/&gt;&lt;/p&gt;&lt;h2 data-id=&quot;heading-3&quot;&gt;隐私声明&lt;/h2&gt;&lt;p&gt;如果启用了设备镜像，Android Studio 会自动为任何已连接和配对的设备启动设备镜像。&lt;/p&gt;&lt;p&gt;这可能会导致与命令连接的设备的信息泄露，因为 &lt;code&gt;adb tcpip&lt;/code&gt; 镜像信息和命令是通过非加密通道传递的。&lt;/p&gt;&lt;p&gt;此外，Android Studio 使用非加密通道与 adb 服务器通信，因此镜像信息可能会被主机上的其他用户拦截。&lt;/p&gt;&lt;h1 data-id=&quot;heading-4&quot;&gt;AGP 升级助手升级后报告和回滚功能&lt;/h1&gt;&lt;p&gt;&lt;span&gt;AGP 升级助手现在包含升级后报告&lt;/span&gt;。&lt;/p&gt;&lt;p&gt;此报告描述已完成的步骤以及升级是否成功，如果在升级后构建或测试项目时出现问题，它还包括恢复升级助手所做的更改的操作。&lt;/p&gt;&lt;h1 data-id=&quot;heading-5&quot;&gt;对 Logcat 的更新&lt;/h1&gt;&lt;p&gt;&lt;span&gt;Android Studio Electric Eel 默认启用新版 Logcat，这样可以更方便解析、查询和跟踪日志&lt;/span&gt;。&lt;/p&gt;&lt;p&gt;这是该工具自推出以来都是 AS 里最重要的更新，因此请阅读使用 Logcat 查看日志 了解有关如何使用新功能、查询语法等更多详细信息。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.36909527622097676&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/yyLvy204xWic0nIhQ3dOricLHYkVbf80n6GTuibcZsAAKKza3l4X2AUasalVgEVxaHGR0J4YVAkpLMpvYoE6Via02w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1249&quot;/&gt;&lt;/p&gt;&lt;h1 data-id=&quot;heading-6&quot;&gt;桌面 Android 虚拟设备现已可用&lt;/h1&gt;&lt;p&gt;现在开发者可以直接使用桌面 Android 虚拟设备 (AVD) 测试应用在 Chromebook 等桌面设备上的运行情况。&lt;/p&gt;&lt;p&gt;用户通常在大屏幕设备上与应用进行不同的交互，桌面 AVD 让你能够看到应用在类似环境中的交互行为。&lt;/p&gt;&lt;p&gt;以下是开发者可以测试的一些独特功能：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;要详细了解桌面 AVD 以及如何将它们整合到测试工作流程中，请参阅 ChromeOS 开发人员博客上的Android Studio 中的桌面 AVD 。https://link.juejin.cn/?target=https%3A%2F%2Fchromeos.dev%2Fen%2Fposts%2Fdesktop-avd-in-android-studio&lt;/p&gt;&lt;/blockquote&gt;&lt;h1 data-id=&quot;heading-7&quot;&gt;使用 Build Analyzer 检查下载影响&lt;/h1&gt;&lt;p&gt;&lt;span&gt;Build Analyzer 现在提供下载依赖项所花费时间，以及每个存储库的下载详细视图&lt;/span&gt;。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;开发者可以使用此信息来确定意外的依赖项下载是否对构建性能产生负面影响，这在增量构建期间很重要，因为增量构建不应该每次都下载同一个 artifacts 。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;具体来说，开发者可以使用这些信息来识别配置问题，例如使用动态版本的依赖导致的问题。&lt;/p&gt;&lt;p&gt;此外，如果看到对特定存储库的大量失败请求，则可能表明应删除该存储库或将其移至存储库配置中的较低位置。&lt;/p&gt;&lt;h1 data-id=&quot;heading-8&quot;&gt;Layout Inspector recomposition 渲染高亮&lt;/h1&gt;&lt;p&gt;在 Android Studio Electric Eel 中，代码的 recomposition 会突出显示，以帮助开发者确定 composables 在 UI 中的哪个位置进行重组。&lt;/p&gt;&lt;p&gt;突出显示的部分在 Layout Inspector 的图像部分显示composables 的渐变叠加，并逐渐消失，以便开发者在 UI 中可以找到具有最高 recompositions 的位置。&lt;/p&gt;&lt;p&gt;如果一个 composable 的 recomposing 高于另一个可组合项，则第一个 composable 会收到更强的渐变叠加颜色。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;有关详细信息，请参阅布局检查器中的 Compose 重组计数。https://link.juejin.cn/?target=https%3A%2F%2Fdeveloper.android.com%2Fstudio%2Fdebug%2Flayout-inspector%23recomposition-counts&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.6447264076130056&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/yyLvy204xWic0nIhQ3dOricLHYkVbf80n6Dz45hatPvBSPopvrys601zaTqLryVMoBgeeE2tc6jV6wIPbEgad82g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1261&quot;/&gt;&lt;/p&gt;&lt;h1 data-id=&quot;heading-9&quot;&gt;共享问题面板&lt;/h1&gt;&lt;p&gt;现在开发者可以在共享问题面板中查看设计工具的所有问题，要查看工具窗口，可以通过 &lt;span&gt;View&lt;/span&gt; &amp;gt; &lt;span&gt;Tool Windows&lt;/span&gt; &amp;gt; &lt;span&gt;Problems&lt;/span&gt; 打开。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.6025538707102953&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/yyLvy204xWic0nIhQ3dOricLHYkVbf80n6ib00jCYW6T3eD4EewWNNgrwrccW6yV7tRgk4GjjdgDQaGmPAeagamZA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1253&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h1 data-id=&quot;heading-10&quot;&gt;实时更新 Compose 预览&lt;/h1&gt;&lt;p&gt;从 Android Studio Electric Eel 开始，开发者可以在做出预览更改时立即看到 Compose 的更新。&lt;/p&gt;&lt;p&gt;也就是 &lt;code&gt;@Preview &lt;/code&gt;会注解告诉 Android Studio 这个composables 应该显示在这个文件的设计视图中，&lt;/p&gt;&lt;p&gt;你可以在代码中手动添加参数以自定义 Android Studio 呈现的方式&lt;code&gt;@Preview&lt;/code&gt;，甚至可以多次将 &lt;code&gt;@Preview&lt;/code&gt; 注释添加到同一函数以预览具有不同属性的 composables。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;有关详细信息，请参阅 可组合预览。https://link.juejin.cn/?target=https%3A%2F%2Fdeveloper.android.com%2Fjetpack%2Fcompose%2Ftooling%2Fstudio%23preview&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.6517754868270332&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/yyLvy204xWic0nIhQ3dOricLHYkVbf80n6XqPG2nxcyX0axAWug8uWlTK5k1PqHDoZicOH7d6xqRUveia8zVLLxa2Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;873&quot;/&gt;&lt;/p&gt;&lt;h1 data-id=&quot;heading-11&quot;&gt;Android Gradle 插件和 Android Studio 兼容性&lt;/h1&gt;&lt;p&gt;Android Studio 构建系统基于 Gradle，而 Android Gradle 插件添加了几个特定于构建 Android 应用的功能。&lt;/p&gt;&lt;p&gt;下表列出了每个版本的 Android Studio 所需的 Android Gradle 插件版本:&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.4402125775022144&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/yyLvy204xWic0nIhQ3dOricLHYkVbf80n6PyZjomfLHN4wTicapQ593RmQeToqUbB5klefMMUENnkMibIJhYGCmREg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1129&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Firebase Crashlytics 的应用质量洞察&lt;/span&gt;&lt;/p&gt;&lt;p&gt;随着 Android Studio Electric Eel 的发布，用户现在可以直接在 IDE 中查看和处理来自 Firebase Crashlytics 的 App 崩溃数据。&lt;/p&gt;&lt;p&gt;Android Studio 会将堆栈跟踪数据和崩溃统计信息从 Crashlytics 提取到 IDE 的 &lt;span&gt;App Quality Insights&lt;/span&gt; 工具窗口，这样开发者就不必在浏览器和 IDE 之间来回切换，关键功能有：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;查看代码中具有相关 Crashlytics 事件数据时会高亮显示对应的代码行。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;查看 Top 崩溃的堆栈，击堆栈跟踪会跳转到代码中的相关行位置。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;查看有关 Top 崩溃和非致命错误事件的摘要统计信息，可以按设备制造商和 Android 版本进行分组。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;按问题严重性、时间和应用版本进行过滤。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;获取打开 Crashlytics 仪表板页面的浏览器链接，其中包含有关该事件的更多详细信息。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;通过 Android Studio 和 Crashlytics 的集成，开发者可以在同一个地方编写代码和解决最常见的崩溃问题。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;如果你还没有使用 Crashlytics 并想了解有关其产品的更多信息，请参阅 Firebase Crashlytics。https://link.juejin.cn/?target=https%3A%2F%2Ffirebase.google.com%2Fproducts%2Fcrashlytics&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 data-id=&quot;heading-13&quot;&gt;开始&lt;/h2&gt;&lt;p&gt;要在 Android Studio 中查看 Crashlytics 数据，首先需要在应用项目中配置有 Firebase 和 Crashlytics。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;方法如下：在 Android Studio 中的 &lt;span&gt;Tools &amp;gt; Firebase&lt;/span&gt; 打开 Firebase Assistant ，点击 &lt;span&gt;Crashlytics&lt;/span&gt;，然后按照教程将 Firebase 和 Crashlytics 添加到项目，另外你可以在Firebase 的 Android 入门指南中阅读有关 Firebase 的更多信息 。https://link.juejin.cn/?target=https%3A%2F%2Ffirebase.google.com%2Fdocs%2Fandroid%2Fsetup%23assistant&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;如果已将 Firebase 和 Crashlytics 添加到的应用，请在 IDE 中单击头像图标登录开发者帐户 。&lt;/p&gt;&lt;p&gt;登录后点击 &lt;span&gt;App Quality Insights&lt;/span&gt; 工具窗口，就会看到 &lt;span&gt;Issues&lt;/span&gt;、&lt;span&gt;Sample Stack Trace&lt;/span&gt; 和 &lt;span&gt;Details&lt;/span&gt; 面板，里面收集了来自 Crashlytics 的报告。&lt;/p&gt;&lt;h2 data-id=&quot;heading-14&quot;&gt;在 Android Studio 中查阅 Crashlytics 数据&lt;/h2&gt;&lt;p&gt;&lt;span&gt;App Quality Insights&lt;/span&gt; 工具窗口包含丰富的数据，可让开发者深入了解用户遇到的事件，以及可帮助开发者快速导航至这些事件来源的链接。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.3157894736842105&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/yyLvy204xWic0nIhQ3dOricLHYkVbf80n6EM1prbcFM9goe2aZYFSnEqXJ0XCDekwoMwnEIBJiccjadX1oDYvIpQg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1254&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;如果项目包含多个应用模块，可以从模块下拉菜单中选择要查看的事件数据模块。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;使用应用 ID 下拉菜单选择要分析的应用 ID。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;“&lt;span&gt;issues&lt;/span&gt;” 面板显示 Crashlytics 的重要数据，并按影响重要程度进行排序。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Sample Stack Trace&lt;/span&gt; 显示有关开发者在 issues 面板中点击的事件的详细信息。&lt;/p&gt;&lt;p&gt;还有受影响的设备类型、 Android 版本和事件发生时间的信息，以及指向 Firebase Crashlytics 中的事件的链接，如果你想更深入地研究并检查其他堆栈跟踪、趋势和自定义日志，这里会非常有用。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Details&lt;/span&gt; 面板按设备类型和 Android 版本细分崩溃计数，因此你可以确定哪些用户组受影响最大，它还会显示遇到崩溃的应用版本和受影响的用户数量。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;使用 severity 过滤器选择或取消 Fatal / Non-Fatal 事件。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;使用时间和应用版本过滤器来筛选某些事件子集。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;除了能够从堆栈跟踪导航到代码之外，开发者还可以从代码跳转到堆栈跟踪：Android Studio 现在会突出显示与崩溃相关的代码行。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.4782847718526663&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/yyLvy204xWic0nIhQ3dOricLHYkVbf80n6cNKI9YqtvrHtLibW8PhVptWh67peiaRkUfqaLsFDehUO6r6wRn7P9OicQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1819&quot;/&gt;&lt;/p&gt;&lt;p&gt;当开发者将鼠标悬停在突出显示的代码行上时，会出现一个弹出窗口，显示所涉及的事件、其频率以及受影响的设备数量。&lt;/p&gt;&lt;p&gt;你可以在 &lt;span&gt;App Quality Insights&lt;/span&gt; 中点击 &lt;span&gt;Open&lt;/span&gt; 跳转到 &lt;span&gt;App Quality Insights&lt;/span&gt; 工具窗口中的事件详情。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;要了解更多信息，请参阅 使用 App Quality Insights 分析来自 Firebase Crashlytics 的问题。https://link.juejin.cn/?target=https%3A%2F%2Fdeveloper.android.com%2Fstudio%2Fdebug%2Fapp-quality-insights&lt;/p&gt;&lt;/blockquote&gt;&lt;h1 data-id=&quot;heading-15&quot;&gt;最后&lt;/h1&gt;&lt;p&gt;本次更新的内容大概就这些，主要需要注意的是，该版本会启用全新的 Logcat ，所以熟悉新的 Logcat 操作很重要，另外模拟器和镜像可以说是最实用的更新，推荐大家尝试一下。&lt;/p&gt;&lt;p&gt;&lt;span&gt;关注我获取更多知识或者投稿&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg wxw-img&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/yyLvy204xW9Uibw4qQxibOBKL1DicLX10o3w57n09uKDowd4ZDjRIgSMUn9cqY6ia77Ys3VfZjG8LUviacGSr0DFIvw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;258&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg wxw-img&quot; data-ratio=&quot;0.20555555555555555&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/yyLvy204xW9Uibw4qQxibOBKL1DicLX10o3gibpbVwAGtDUV15FZianjGs1whAZ2gg71IV6J7zQpQhtQRcSyHrGJbxg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;180&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;mp-style-type data-value=&quot;3&quot;/&gt;&lt;/p&gt;&lt;/div&gt;

          
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>