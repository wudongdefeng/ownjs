<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>90dbdd1a31389237c3478f120ad655d1</guid>
<title>没写过复杂 React 组件？来实现下 AntD 的 Space 组件吧</title>
<link>https://toutiao.io/k/plt53qi</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用 React 技术栈的小伙伴基本每天都在写 React 组件，但是大多是是业务组件，并不是很复杂。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;基本就是传入 props，render 出最终的视图，用 hooks 组织下逻辑，最多再用下 context 跨层传递数据。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那相对复杂的组件是什么样子的呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其实 antd 组件库里就有很多。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;今天我们就来实现一个 antd 组件库里的组件 -- Space 组件吧。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;首先看下它是怎么用的：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这是一个布局组件：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4683357879234168&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3iaWcruvsK9qfGS0iciaU49ty1bLLCfGcPJtia7ibFgkpz02x2QiaDqggnibCQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1358&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;文档里介绍它是设置组件的间距的，还可以设置多个组件怎么对齐。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如这样 3 个盒子：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4816753926701571&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3nc2aW1P25WYtYefnh5OO5hWFqYiaCiau9plA9icvPTdauC3FFYn9NrcdA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;764&quot;/&gt;&lt;/figure&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3hUuZ7C0da13KvG6CMgVibhJTATTUjT8NvyX0bZId8kaexJcmPibDwOibw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;628&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;渲染出来是这样的：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.2627737226277371&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3tVfYq5Lrj9us0uRWj2cejYmuPhyWu6yWERfQZ6h4ACqzoYQWicLSJRw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;548&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们用 Space 组件包一下，设置方向为水平，就变成这样了（漏了一张代码截图，看后面的吧）：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4319526627218935&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3ZTx4qoKpdTZ4ic9AsQ9hpSN1f8libvJh52JUjRBytF1mAiaKSku6CH83Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;676&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当然，也可以竖直：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.2824207492795389&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3EhIPVleHbpdXMvr44Mk1vS2lYFoW3TVqPU73ssAia4t97xlQ4s4S4icw/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;2082&quot;/&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;水平和竖直的间距都可以通过 size 来设置：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.42965116279069765&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3bO7T6mib8NDTgickkBXico5Mz2t0DJZo3lsFbOzDg0z4NAKcVt9h52oaw/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;1720&quot;/&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以设置 large、middle、small 或者任意数值。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;多个子节点可以设置对齐方式，比如 start、end、center 或者 baseline：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.38125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3VISQB98Lh6IpdmKJQiaHQUXhVD7fuo6uCHqQxSRB6hMtuqNtvKSLDTQ/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;2080&quot;/&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;此外子节点过多可以设置换行：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.3925423728813559&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3fac3HFwBkIq7EUUW6bVhB7cyb4uqia2uK0wOB84teaiaiaEs8gQ145Pdw/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;1475&quot;/&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;space 也可以单独设置行列的：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.40694789081885857&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3DykibIChTPQBxic59wAdAa4xicpVNCO6zIVb8nCbZbnaOoiaY9stV7XeSA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2418&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最后，它还可以设置 split 分割线部分：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.2768&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3ibYk5WTon0TQeezxcW9443CJ1RfTrMFug55rIsPOicGFznXPaOS5o0vw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2500&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;此外，你也可以不直接设置 size，而是通过 ConfigProvider 修改 context 中的默认值：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3918791312559018&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn397weOdkvKKpF3EeHzqIQOzeFBSsCMraxzwXm19EcUKZa8NksHSTgOg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2118&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;很明显，Space 内部会读取 context 中的 size 值。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这样如果有多个 Space 组件就不用每个都设置了，统一加个 ConfigProvider 就行了：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4363459669582119&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3MHsICMBX8IvH2BMq2o0sX5BDMaFfszV3MmdxFr0dibuKVbqptEfJdUA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2058&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这就是 Space 组件的全部用法，简单回顾下这几个参数和用法：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;direction: 设置子组件方向，水平还是竖直排列&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;size：设置水平、竖直的间距&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;align：子组件的对齐方式&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;wrap：超过一屏是否换行，只在水平时有用&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;split：分割线的组件&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;多个 Space 组件的 size 可以通过 ConfigProvider 统一设置默认值。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;是不是过一遍就会用了？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用起来还是挺简单的，但它的功能挺强大。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那这样的布局组件是怎么实现的呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们先看下它最终的 dom：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5539823008849557&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3sLJQeWarw1OzibqWJztR0RQRCQjwyEz8mQylRhY19qGPvvOtIpIxeeA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1130&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对每个 box 包了一层 div，设置了 ant-space-item 的 class。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对 split 部分包了一层 span，设置了 ant-space-item-split 的 class。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最外层包了一层 div，设置了 ant-space 等 class。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这些还是很容易想到的，毕竟设置布局嘛，不包一层怎么布局？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但虽然看起来挺简单，实现的话还是有不少东西的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下面我们来写一下：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;首先声明组件 props 的类型：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4394506866416979&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3xfJnnoibGuMXohicfjcd9TJF6MufQzKHkwgKEmeryT0ryuO1Ku2Cxtvg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1602&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;需要注意的是 style 是 React.CSSProperties 类型，也就是各种 css 都可以写。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;split 是 React.ReactNode 类型，也就是可以传入 jsx。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其余的参数的类型就是根据取值来，我们上面都测试过。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Space 组件会对所有子组件包一层 div，所以需要遍历传入的 children，做下修改：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;props 传入的 children 要转成数组可以用 React.Children.toArray 方法。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有的同学说，children 不是已经是数组了么？为什么还要用 React.Children.toArray 转一下？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;因为 toArray 可以对 children 做扁平化：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4824824824824825&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3fwMibdFs7iaLicMXFvibM5BibBNxeTmA8Y9J5ub6VatxacGXosibiafNuFVew/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;999&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;更重要的是直接调用 children.sort() 会报错：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4814516129032258&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3r62FdABH9PPSicgUhQ8dvdKTufLAr3Al3eaFKdagCJhjKJ9QLFMS8uQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2480&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;而 toArray 之后就不会了：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.38275499474237645&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3bqDvgRJlmWqbfAdNyuJb5aD4V7EmtqiaRKUnhxNsZMGUztcictXfg9XQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1902&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;同理，&lt;strong&gt;我们会用 React.Children.forEach，React.Children.map 之类的方法操作 children，而不是直接操作。&lt;/strong&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.10119047619047619&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3eQGLsClWyaajVkVibmTGYbspA41TqjPs9QaiaVPCv2BP2dIk9wRpP28Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1344&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但这里我们有一些特殊的需求，比如空节点不过滤掉，依然保留。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以用 React.Children.forEach 自己实现一下 toArray：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.740506329113924&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3icdF1xl4QxDVrPTW8SWV9aSSZQhGs6XpsMib4wqjTA4iagOr4wzicgv0aA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1580&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这部分比较容易看懂，就是用 React.Children.forEach 遍历 jsx 节点，对每个节点做下判断，如果是数组或 fragment 就递归处理，否则 push 到数组里。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;保不保留空节点可以根据 keepEmpty 的 option 来控制。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这样用：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.11480865224625623&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn32X5Awia3pTGWjYewpt9oAno3G39xGdURZ9oJhjQHJAnC4PDAuMR9gMA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1202&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;children 就可以遍历渲染 item 了，这部分是这样的：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3867069486404834&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3zRd5BYpmB33xJXfseGaHPd5xLQJBNiby4F3GJkFxIH3M674gmV6oIGw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;662&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们单独封装个 Item 组件。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然后 childNodes 遍历渲染这个 Item 就可以了：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8026706231454006&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3RmHic5qicDH1V5uEEWJKxb0oNdqyrjEdQfIEeuuufMuyQ6en9Eialkz5A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1348&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然后把这所有的 Item 组件再放到最外层 div 里：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.2099236641221374&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3PmQYq7CIJasNVoiaf6CeWDicTgDbdHFlVak1erK9I2yrcjIPIia5Fb1MQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;524&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;就可以分别控制整体的布局和 Item 的布局了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;具体的布局还是通过 className 和样式来的：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;className 通过 props 计算而来：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5619834710743802&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3aRwV5KtUKzIeqSKWZYRB28mibWicHxJIM88MRVCNXe1VicODav8ozrtrw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1210&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用到了 classnames 这个包，这个算是 react 生态很常用的包了，根据 props 动态生成 className 基本都用这个。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个前缀是动态获取的，最终就是 ant-space 的前缀：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.15897435897435896&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3YpibvSsLUUL1uhiaeGScROvwChKKJcMwuodHa2ESHpVCxIJTRXZmLt9g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1170&quot;/&gt;&lt;/figure&gt;&lt;p&gt;这些 class 的样式也都定义好：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$&lt;span&gt;ant-prefix&lt;/span&gt;: &#x27;&lt;span&gt;ant&lt;/span&gt;&#x27;;&lt;br/&gt;&lt;br/&gt;$&lt;span&gt;space-prefix-cls&lt;/span&gt;: #{$ant-prefix}&lt;span&gt;-space&lt;/span&gt;;&lt;br/&gt;$&lt;span&gt;space-item-prefix-cls&lt;/span&gt;: #{$ant-prefix}&lt;span&gt;-space-item&lt;/span&gt;;&lt;br/&gt; &lt;br/&gt;.#{$space-prefix-cls} {&lt;br/&gt;  &lt;span&gt;display&lt;/span&gt;: inline-flex;&lt;br/&gt;&lt;br/&gt;  &amp;amp;-vertical {&lt;br/&gt;    &lt;span&gt;flex-direction&lt;/span&gt;: column;&lt;br/&gt;  }&lt;br/&gt;&lt;br/&gt;  &amp;amp;&lt;span&gt;-align&lt;/span&gt; {&lt;br/&gt;    &amp;amp;-center {&lt;br/&gt;      &lt;span&gt;align-items&lt;/span&gt;: center;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &amp;amp;&lt;span&gt;-start&lt;/span&gt; {&lt;br/&gt;      &lt;span&gt;align-items&lt;/span&gt;: flex-start;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &amp;amp;&lt;span&gt;-end&lt;/span&gt; {&lt;br/&gt;      &lt;span&gt;align-items&lt;/span&gt;: flex-end;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &amp;amp;&lt;span&gt;-baseline&lt;/span&gt; {&lt;br/&gt;      &lt;span&gt;align-items&lt;/span&gt;: baseline;&lt;br/&gt;    }&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;.#{$space-prefix-cls} {&lt;br/&gt;  &amp;amp;-rtl {&lt;br/&gt;    &lt;span&gt;direction&lt;/span&gt;: rtl;&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;整个容器 inline-flex，然后根据不同的参数设置 align-items 和 flex-direction 的值。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最后一个 direction 的 css 可能大家没用过，是设置文本方向的：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5205314009661836&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3C8xywCibibXxuaTiatYeOa0DUQOUvLrWv8ibiaao1uBBj8Q5b6qCpvbkLLg/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;1656&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这样，就通过 props 动态给最外层 div 加上了相应的 className，设置了对应的样式。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但还有一部分样式没设置，也就是间距：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其实这部分可以用 gap 设置：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7570621468926554&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3dfIjqaLxHT57oJqncCYPKtXhNhw9WCbKLaibk7WfRwlOKFD10v8VOJQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1062&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当然，用 margin 也可以，只不过那个要单独处理下最后一个元素，比较麻烦。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不过 antd 这种组件自然要做的兼容性好点，所以两种都支持，支持 gap 就用 gap，否则用 margin。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;问题来了，antd 是怎么检测浏览器是否支持 gap 样式的呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;它是这么做的：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.86084142394822&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3OJibgejVib3gNZ7Bca8kmQtnTjaInwHhUoGJLRyGLFv3AoNgiapibAVNMA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1236&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;创建一个 div，设置样式，加到 body 下，看看 scrollHeight 是多少，最后把这个元素删掉。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这样就能判断是是否支持 gap、column 等样式，因为不支持的话高度会是 0。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然后它又提供了这样一个 hook：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4716981132075472&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3fhp9VXICFV8dxGdSk8tsR7nHWtZOkVTtpP8R7SdO44Owm47iciawukPQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1378&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;第一次会检测并设置 state 的值，之后直接返回这个检测结果。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这样组件里就可以就可以用这个 hook 来判断是否支持 gap，从而设置不同的样式了：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8677354709418837&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3Kg5LpCjXO6Tz3JfqjcbAwjG305HeViaWWd9OsibAtmB5tsibiaQgxnUQug/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;998&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;是不是很巧妙？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最后，这个组件还会从 ConfigProvider 中取值，这个我们见到过：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4363459669582119&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3MHsICMBX8IvH2BMq2o0sX5BDMaFfszV3MmdxFr0dibuKVbqptEfJdUA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2058&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以，再处理下这部分：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.35165876777251187&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3k8bgwG11xSJuhBiancSEyPOCf7NMmEZBmKXu6rlrRQk5wxCSDFGbuNA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2110&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用 useContext 读取 context 中的值，设置为 props 的解构默认值，这样如果传入了 props.size 就用传入的值，否则就用 context 里的值。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里给 Item 子组件传递数据也是通过 context，因为 Item 组件不一定会在哪一层。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用 createContext 创建 context 对象：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.30868761552680224&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3icfazblIFXicfVnpEYjInLe21mxsAsQCVNbek9YupQqyZKZTTxTFkmTw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1082&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;把计算出的 size：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.19579646017699115&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3UDFG9o8QoiaL3IEd5SQFmTSkEOOnen5LqtzecytqMKAoZJTKSmrjgLQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1808&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;还有其他的一些值：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.14596670934699105&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3BJr3vdJY1smu6Cguheu8hvukyWZt3BMkjGoQWGZwGlXhrGYD46U4rQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1562&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;都通过 Provider 设置到 spaceContext 中：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3733955659276546&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3oeCQROTBS5eylgB8ia8UjUeqLB8PKlXfWaOwvDxMhWaTxUmBIiaC3TKQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1714&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这样子组件就能拿到 spaceContext 中的值了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里 useMemo 很多同学不会用，其实很容易理解：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;props 变了会触发组件重新渲染，但有的时候 props 并不需要变化却每次都变，这样就可以通过 useMemo 来避免它没必要的变化了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;useCallback 也是同样的道理。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;计算 size 的时候封装了一个 getNumberSize 方法，对于字符串枚举值设置了一些固定的数值：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.34913793103448276&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3OQDJALznEeQj2og24NVNqYWX5ibA4WsiaibIWWNwrGunyt8136FNLtlGA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1392&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;至此，这个组件我们就完成了，当然，Item 组件还没展开讲。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;先来欣赏下这个 Space 组件的全部源码：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;import&lt;/span&gt; classNames &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;classnames&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; * &lt;span&gt;as&lt;/span&gt; React &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;react&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; { ConfigContext, SizeType } &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;./config-provider&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; Item &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;./Item&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; toArray &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;./toArray&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; &lt;span&gt;&#x27;./index.scss&#x27;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; useFlexGapSupport &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;./useFlexGapSupport&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; interface Option {&lt;br/&gt;  keepEmpty?: boolean;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; &lt;span&gt;const&lt;/span&gt; SpaceContext = React.createContext({&lt;br/&gt;  &lt;span&gt;latestIndex&lt;/span&gt;: &lt;span&gt;0&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;horizontalSize&lt;/span&gt;: &lt;span&gt;0&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;verticalSize&lt;/span&gt;: &lt;span&gt;0&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;supportFlexGap&lt;/span&gt;: &lt;span&gt;false&lt;/span&gt;,&lt;br/&gt;});&lt;br/&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; type SpaceSize = SizeType | number;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; interface SpaceProps extends React.HTMLAttributes&amp;lt;HTMLDivElement&amp;gt; {&lt;br/&gt;  className?: string;&lt;br/&gt;  style?: React.CSSProperties;&lt;br/&gt;  size?: SpaceSize | [SpaceSize, SpaceSize];&lt;br/&gt;  direction?: &lt;span&gt;&#x27;horizontal&#x27;&lt;/span&gt; | &lt;span&gt;&#x27;vertical&#x27;&lt;/span&gt;;&lt;br/&gt;  align?: &lt;span&gt;&#x27;start&#x27;&lt;/span&gt; | &lt;span&gt;&#x27;end&#x27;&lt;/span&gt; | &lt;span&gt;&#x27;center&#x27;&lt;/span&gt; | &lt;span&gt;&#x27;baseline&#x27;&lt;/span&gt;;&lt;br/&gt;  split?: React.ReactNode;&lt;br/&gt;  wrap?: boolean;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; spaceSize = {&lt;br/&gt;  &lt;span&gt;small&lt;/span&gt;: &lt;span&gt;8&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;middle&lt;/span&gt;: &lt;span&gt;16&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;large&lt;/span&gt;: &lt;span&gt;24&lt;/span&gt;,&lt;br/&gt;};&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;function&lt;/span&gt; &lt;span&gt;getNumberSize&lt;/span&gt;(&lt;span&gt;size: SpaceSize&lt;/span&gt;) &lt;/span&gt;{&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; &lt;span&gt;typeof&lt;/span&gt; size === &lt;span&gt;&#x27;string&#x27;&lt;/span&gt; ? spaceSize[size] : size || &lt;span&gt;0&lt;/span&gt;;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; Space: React.FC&amp;lt;SpaceProps&amp;gt; = &lt;span&gt;&lt;span&gt;props&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; { getPrefixCls, space, &lt;span&gt;direction&lt;/span&gt;: directionConfig } = React.useContext(ConfigContext);&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; {&lt;br/&gt;    size = space?.size || &lt;span&gt;&#x27;small&#x27;&lt;/span&gt;,&lt;br/&gt;    align,&lt;br/&gt;    className,&lt;br/&gt;    children,&lt;br/&gt;    direction = &lt;span&gt;&#x27;horizontal&#x27;&lt;/span&gt;,&lt;br/&gt;    split,&lt;br/&gt;    style,&lt;br/&gt;    wrap = &lt;span&gt;false&lt;/span&gt;,&lt;br/&gt;    ...otherProps&lt;br/&gt;  } = props;&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; supportFlexGap = useFlexGapSupport();&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; [horizontalSize, verticalSize] = React.useMemo(&lt;br/&gt;    &lt;span&gt;&lt;span&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt;&lt;br/&gt;      ((&lt;span&gt;Array&lt;/span&gt;.isArray(size) ? size : [size, size]) &lt;span&gt;as&lt;/span&gt; [SpaceSize, SpaceSize]).map(&lt;span&gt;&lt;span&gt;item&lt;/span&gt; =&amp;gt;&lt;/span&gt;&lt;br/&gt;        getNumberSize(item),&lt;br/&gt;      ),&lt;br/&gt;    [size],&lt;br/&gt;  );&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; childNodes = toArray(children, {&lt;span&gt;keepEmpty&lt;/span&gt;: &lt;span&gt;true&lt;/span&gt;});&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; mergedAlign = align === &lt;span&gt;undefined&lt;/span&gt; &amp;amp;&amp;amp; direction === &lt;span&gt;&#x27;horizontal&#x27;&lt;/span&gt; ? &lt;span&gt;&#x27;center&#x27;&lt;/span&gt; : align;&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; prefixCls = getPrefixCls(&lt;span&gt;&#x27;space&#x27;&lt;/span&gt;);&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; cn = classNames(&lt;br/&gt;    prefixCls,&lt;br/&gt;    &lt;span&gt;`&lt;span&gt;${prefixCls}&lt;/span&gt;-&lt;span&gt;${direction}&lt;/span&gt;`&lt;/span&gt;,&lt;br/&gt;    {&lt;br/&gt;      [&lt;span&gt;`&lt;span&gt;${prefixCls}&lt;/span&gt;-rtl`&lt;/span&gt;]: directionConfig === &lt;span&gt;&#x27;rtl&#x27;&lt;/span&gt;,&lt;br/&gt;      [&lt;span&gt;`&lt;span&gt;${prefixCls}&lt;/span&gt;-align-&lt;span&gt;${mergedAlign}&lt;/span&gt;`&lt;/span&gt;]: mergedAlign,&lt;br/&gt;    },&lt;br/&gt;    className,&lt;br/&gt;  );&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; itemClassName = &lt;span&gt;`&lt;span&gt;${prefixCls}&lt;/span&gt;-item`&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; marginDirection = directionConfig === &lt;span&gt;&#x27;rtl&#x27;&lt;/span&gt; ? &lt;span&gt;&#x27;marginLeft&#x27;&lt;/span&gt; : &lt;span&gt;&#x27;marginRight&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;// Calculate latest one&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;let&lt;/span&gt; latestIndex = &lt;span&gt;0&lt;/span&gt;;&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; nodes = childNodes.map(&lt;span&gt;(&lt;span&gt;child: any, i&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (child !== &lt;span&gt;null&lt;/span&gt; &amp;amp;&amp;amp; child !== &lt;span&gt;undefined&lt;/span&gt;) {&lt;br/&gt;      latestIndex = i;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;const&lt;/span&gt; key = (child &amp;amp;&amp;amp; child.key) || &lt;span&gt;`&lt;span&gt;${itemClassName}&lt;/span&gt;-&lt;span&gt;${i}&lt;/span&gt;`&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; (&lt;br/&gt;      &lt;span&gt;&lt;span&gt;&amp;lt;&lt;span&gt;Item&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;className&lt;/span&gt;=&lt;span&gt;{itemClassName}&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;key&lt;/span&gt;=&lt;span&gt;{key}&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;direction&lt;/span&gt;=&lt;span&gt;{direction}&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;index&lt;/span&gt;=&lt;span&gt;{i}&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;marginDirection&lt;/span&gt;=&lt;span&gt;{marginDirection}&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;split&lt;/span&gt;=&lt;span&gt;{split}&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;wrap&lt;/span&gt;=&lt;span&gt;{wrap}&lt;/span&gt;&lt;br/&gt;      &amp;gt;&lt;/span&gt;&lt;br/&gt;        {child}&lt;br/&gt;      &lt;span&gt;&amp;lt;/&lt;span&gt;Item&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;    );&lt;br/&gt;  });&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; spaceContext = React.useMemo(&lt;br/&gt;    &lt;span&gt;&lt;span&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; ({ horizontalSize, verticalSize, latestIndex, supportFlexGap }),&lt;br/&gt;    [horizontalSize, verticalSize, latestIndex, supportFlexGap],&lt;br/&gt;  );&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt; (childNodes.length === &lt;span&gt;0&lt;/span&gt;) {&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;null&lt;/span&gt;;&lt;br/&gt;  }&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; gapStyle: React.CSSProperties = {};&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt; (wrap) {&lt;br/&gt;    gapStyle.flexWrap = &lt;span&gt;&#x27;wrap&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (!supportFlexGap) {&lt;br/&gt;      gapStyle.marginBottom = -verticalSize;&lt;br/&gt;    }&lt;br/&gt;  }&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt; (supportFlexGap) {&lt;br/&gt;    gapStyle.columnGap = horizontalSize;&lt;br/&gt;    gapStyle.rowGap = verticalSize;&lt;br/&gt;  }&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; (&lt;br/&gt;    &lt;span&gt;&lt;span&gt;&amp;lt;&lt;span&gt;div&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;className&lt;/span&gt;=&lt;span&gt;{cn}&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;style&lt;/span&gt;=&lt;span&gt;{{&lt;/span&gt;&lt;br/&gt;        ...gapStyle,&lt;br/&gt;        ...style,&lt;br/&gt;      }}&lt;br/&gt;      {&lt;span&gt;...otherProps&lt;/span&gt;}&lt;br/&gt;    &amp;gt;&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;&amp;lt;&lt;span&gt;SpaceContext.Provider&lt;/span&gt; &lt;span&gt;value&lt;/span&gt;=&lt;span&gt;{spaceContext}&lt;/span&gt;&amp;gt;&lt;/span&gt;{nodes}&lt;span&gt;&amp;lt;/&lt;span&gt;SpaceContext.Provider&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;/&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;  );&lt;br/&gt;};&lt;br/&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; &lt;span&gt;default&lt;/span&gt; Space;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;回顾下要点：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;基于 React.Children.forEach 自己封装了 toArray 方法，做了一些特殊处理&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;对 childNodes 遍历之后，包裹了一层 Item 组件&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;封装了 useFlexGapSupport 的 hook，里面通过创建 div 检查 scrollHeight 的方式来确定是否支持 gap 样式&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;通过 useContext 读取 ConfigContext 的值，作为 props 的解构默认值&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;通过 createContext 创建 spaceContext，并通过 Provider 设置其中的值&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;通过 useMemo 缓存作为参数的对象，避免不必要的渲染&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;通过 classnames 包来根据 props 动态生成 className&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;思路理的差不多了，再来看下 Item 的实现：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这部分比较简单，直接上全部代码了：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;import * as React from &lt;span&gt;&#x27;react&#x27;&lt;/span&gt;;&lt;br/&gt;import { SpaceContext } from &lt;span&gt;&#x27;.&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; interface ItemProps {&lt;br/&gt;  className: string;&lt;br/&gt;  children: React.ReactNode;&lt;br/&gt;  index: number;&lt;br/&gt;  direction?: &lt;span&gt;&#x27;horizontal&#x27;&lt;/span&gt; | &lt;span&gt;&#x27;vertical&#x27;&lt;/span&gt;;&lt;br/&gt;  marginDirection: &lt;span&gt;&#x27;marginLeft&#x27;&lt;/span&gt; | &lt;span&gt;&#x27;marginRight&#x27;&lt;/span&gt;;&lt;br/&gt;  split?: string | React.ReactNode;&lt;br/&gt;  wrap?: boolean;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; default &lt;span&gt;function&lt;/span&gt; Item({&lt;br/&gt;  className,&lt;br/&gt;  direction,&lt;br/&gt;  index,&lt;br/&gt;  marginDirection,&lt;br/&gt;  children,&lt;br/&gt;  split,&lt;br/&gt;  wrap,&lt;br/&gt;}: ItemProps) {&lt;br/&gt;  const { horizontalSize, verticalSize, latestIndex, supportFlexGap } =&lt;br/&gt;    React.useContext(SpaceContext);&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;let&lt;/span&gt; style: React.CSSProperties = {};&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt; (!supportFlexGap) {&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (direction === &lt;span&gt;&#x27;vertical&#x27;&lt;/span&gt;) {&lt;br/&gt;      &lt;span&gt;if&lt;/span&gt; (index &amp;lt; latestIndex) {&lt;br/&gt;        style = { marginBottom: horizontalSize / (split ? 2 : 1) };&lt;br/&gt;      }&lt;br/&gt;    } &lt;span&gt;else&lt;/span&gt; {&lt;br/&gt;      style = {&lt;br/&gt;        ...(index &amp;lt; latestIndex &amp;amp;&amp;amp; { [marginDirection]: horizontalSize / (split ? 2 : 1) }),&lt;br/&gt;        ...(wrap &amp;amp;&amp;amp; { paddingBottom: verticalSize }),&lt;br/&gt;      };&lt;br/&gt;    }&lt;br/&gt;  }&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt; (children === null || children === undefined) {&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; null;&lt;br/&gt;  }&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; (&lt;br/&gt;    &amp;lt;&amp;gt;&lt;br/&gt;      &amp;lt;div className={className} style={style}&amp;gt;&lt;br/&gt;        {children}&lt;br/&gt;      &amp;lt;/div&amp;gt;&lt;br/&gt;      {index &amp;lt; latestIndex &amp;amp;&amp;amp; split &amp;amp;&amp;amp; (&lt;br/&gt;        &amp;lt;span className={`&lt;span&gt;${className}&lt;/span&gt;-split`} style={style}&amp;gt;&lt;br/&gt;          {split}&lt;br/&gt;        &amp;lt;/span&amp;gt;&lt;br/&gt;      )}&lt;br/&gt;    &amp;lt;/&amp;gt;&lt;br/&gt;  );&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过 useContext 从 SpaceContext 中取出 Space 组件里设置的值。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;根据是否支持 gap 来分别使用 gap 或者 margin、padding 的样式来设置间距。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;每个元素都用 div 包裹下，设置 className。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果不是最后一个元素并且有 split 部分，就渲染 split 部分，用 span 包裹下。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这块还是比较清晰的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最后，还有 ConfigProvider 的部分没有看：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这部分就是创建一个 context，并初始化一些值：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;import&lt;/span&gt; React &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&quot;react&quot;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; type DirectionType = &lt;span&gt;&#x27;ltr&#x27;&lt;/span&gt; | &lt;span&gt;&#x27;rtl&#x27;&lt;/span&gt; | &lt;span&gt;undefined&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; type SizeType = &lt;span&gt;&#x27;small&#x27;&lt;/span&gt; | &lt;span&gt;&#x27;middle&#x27;&lt;/span&gt; | &lt;span&gt;&#x27;large&#x27;&lt;/span&gt; | &lt;span&gt;undefined&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; interface ConfigConsumerProps {&lt;br/&gt;  &lt;span&gt;getPrefixCls&lt;/span&gt;: &lt;span&gt;(&lt;span&gt;suffixCls?: string&lt;/span&gt;) =&amp;gt;&lt;/span&gt; string;&lt;br/&gt;  direction?: DirectionType;&lt;br/&gt;  space?: {&lt;br/&gt;    size?: SizeType | number;&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; &lt;span&gt;const&lt;/span&gt; defaultGetPrefixCls = &lt;span&gt;(&lt;span&gt;suffixCls?: string&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; suffixCls ? &lt;span&gt;`ant-&lt;span&gt;${suffixCls}&lt;/span&gt;`&lt;/span&gt; : &lt;span&gt;&#x27;ant&#x27;&lt;/span&gt;;&lt;br/&gt;};&lt;br/&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; &lt;span&gt;const&lt;/span&gt; ConfigContext = React.createContext&amp;lt;ConfigConsumerProps&amp;gt;({&lt;br/&gt;    &lt;span&gt;getPrefixCls&lt;/span&gt;: defaultGetPrefixCls&lt;br/&gt;});&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有没有感觉 antd 里用 context 简直太多了！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;确实。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为什么呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;因为你不能保证组件和子组件隔着几层。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如 Form 和 Form.Item：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.1085450346420322&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3ic8kpvraTpTqN9YdsuzYiafauEmk0Qc6BM59RKSgcmmldic5dYqU5BxWQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;866&quot;/&gt;&lt;figcaption&gt;image.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如 ConfigProvider 和各种组件（这里是 Space）：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.4363459669582119&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3MHsICMBX8IvH2BMq2o0sX5BDMaFfszV3MmdxFr0dibuKVbqptEfJdUA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2058&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;还有刚讲过的 Space 和 Item。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;它们能用 props 传数据么？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不能，因为不知道隔几层。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以 antd 里基本都是用 cotnext 传数据的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;你会你在 antd 里会见到大量的用 createCotnext 创建 context，通过 Provider 修改 context 值，通过 Consumer 或者 useContext 读取 context 值的这类逻辑。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最后，我们来测试下自己实现的这个 Space 组件吧：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;测试代码如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;import&lt;/span&gt; Space &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;./space&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; &lt;span&gt;&#x27;./SpaceTest.css&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; { ConfigContext, defaultGetPrefixCls,  } &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;./space/config-provider&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; React &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;react&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; SpaceTest = &lt;span&gt;&lt;span&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; (&lt;br/&gt;  &lt;span&gt;&lt;span&gt;&amp;lt;&lt;span&gt;ConfigContext.Provider&lt;/span&gt; &lt;span&gt;value&lt;/span&gt;=&lt;span&gt;{&lt;/span&gt;&lt;br/&gt;    {&lt;br/&gt;      &lt;span&gt;getPrefixCls:&lt;/span&gt; &lt;span&gt;defaultGetPrefixCls&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;space:&lt;/span&gt; { &lt;span&gt;size:&lt;/span&gt; &#x27;&lt;span&gt;large&lt;/span&gt;&#x27;}&lt;br/&gt;    }&lt;br/&gt;  }&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;Space&lt;/span&gt; &lt;br/&gt;      &lt;span&gt;direction&lt;/span&gt;=&lt;span&gt;&quot;horizontal&quot;&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;align&lt;/span&gt;=&lt;span&gt;&quot;end&quot;&lt;/span&gt; &lt;br/&gt;      &lt;span&gt;style&lt;/span&gt;=&lt;span&gt;{{height:&lt;/span&gt;&#x27;200px&#x27;}}&lt;br/&gt;      &lt;span&gt;split&lt;/span&gt;=&lt;span&gt;{&lt;/span&gt;&amp;lt;&lt;span&gt;div&lt;/span&gt; &lt;span&gt;className&lt;/span&gt;=&lt;span&gt;&quot;box&quot;&lt;/span&gt; &lt;span&gt;style&lt;/span&gt;=&lt;span&gt;{{background:&lt;/span&gt; &#x27;red&#x27;}}&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;} &lt;br/&gt;      wrap={true}&lt;br/&gt;    &amp;gt;&lt;br/&gt;      &lt;span&gt;&amp;lt;&lt;span&gt;div&lt;/span&gt; &lt;span&gt;className&lt;/span&gt;=&lt;span&gt;&quot;box&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;&amp;lt;&lt;span&gt;div&lt;/span&gt; &lt;span&gt;className&lt;/span&gt;=&lt;span&gt;&quot;box&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;&amp;lt;&lt;span&gt;div&lt;/span&gt; &lt;span&gt;className&lt;/span&gt;=&lt;span&gt;&quot;box&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;/&lt;span&gt;Space&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;Space&lt;/span&gt; &lt;br/&gt;      &lt;span&gt;direction&lt;/span&gt;=&lt;span&gt;&quot;horizontal&quot;&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;align&lt;/span&gt;=&lt;span&gt;&quot;end&quot;&lt;/span&gt; &lt;br/&gt;      &lt;span&gt;style&lt;/span&gt;=&lt;span&gt;{{height:&lt;/span&gt;&#x27;200px&#x27;}}&lt;br/&gt;      &lt;span&gt;split&lt;/span&gt;=&lt;span&gt;{&lt;/span&gt;&amp;lt;&lt;span&gt;div&lt;/span&gt; &lt;span&gt;className&lt;/span&gt;=&lt;span&gt;&quot;box&quot;&lt;/span&gt; &lt;span&gt;style&lt;/span&gt;=&lt;span&gt;{{background:&lt;/span&gt; &#x27;red&#x27;}}&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;} &lt;br/&gt;      wrap={true}&lt;br/&gt;    &amp;gt;&lt;br/&gt;      &lt;span&gt;&amp;lt;&lt;span&gt;div&lt;/span&gt; &lt;span&gt;className&lt;/span&gt;=&lt;span&gt;&quot;box&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;&amp;lt;&lt;span&gt;div&lt;/span&gt; &lt;span&gt;className&lt;/span&gt;=&lt;span&gt;&quot;box&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;&amp;lt;&lt;span&gt;div&lt;/span&gt; &lt;span&gt;className&lt;/span&gt;=&lt;span&gt;&quot;box&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;/&lt;span&gt;Space&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;&amp;lt;/&lt;span&gt;ConfigContext.Provider&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;);&lt;br/&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; &lt;span&gt;default&lt;/span&gt; SpaceTest;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这部分不咋用解释了。就是 ConfigProvider 包裹了俩 Space 组件，这俩 Space 组件没设置 size 值。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;设置了 direction、align、split、wrap 等参数。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;渲染结果是对的：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.9743589743589743&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YprkEU0TtGia0XOtYJf4I0mfN5OyDWUn3ibchXbbicMJH9qc4zVBVUKFkWzXHUYAdmqmWNe7aUYToS3w9YZz0vSSA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1014&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;就这样，我们自己实现了 antd 的 Space 组件！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;完整代码在 github：https://github.com/QuarkGluonPlasma/my-antd-test&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;总结&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一直写业务代码，可能很少写一些复杂的组件，而 antd 里就有很多复杂组件，我们挑 Space 组件来写了下。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这是一个布局组件，可以通过参数设置水平、竖直间距、对齐方式、分割线部分等。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;实现这个组件的时候，我们用到了很多东西：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;用 React.Children.forEach 的 api 来修改每个 childNode。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;用 useContext 读取 ConfigContext、SpaceContext 的值&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;用 createContext 创建 SpaceContext，并用 Provider 修改其中的值&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;用 useMemo 来避免没必要的渲染&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;用 classnames 包来根据 props 动态生成 className&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;自己封装了一个检测样式是否支持的自定义 hook&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;很多同学不会封装布局组件，其实就是对整体和每个 item 都包裹一层，分别设置不同的 class，实现不同的间距等的设置。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;想一下，这些东西以后写业务组件是不是也可以用上呢？&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>