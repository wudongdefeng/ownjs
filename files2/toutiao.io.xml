<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>b0e8047c4beccfe24b2be4f31681b7d1</guid>
<title>【Java对象拷贝机制】「实战开发专题」高性能使用CGlib实现Bean拷贝（BeanCopier）指南_洛神灬殇的博客-CSDN博客</title>
<link>https://toutiao.io/k/xs808ih</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div id=&quot;content_views&quot; class=&quot;markdown_views prism-tomorrow-night&quot;&gt;
                    &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;
                        &lt;path stroke-linecap=&quot;round&quot; d=&quot;M5,0 0,2.5 5,5z&quot; id=&quot;raphael-marker-block&quot;/&gt;
                    &lt;/svg&gt;
                    &lt;h3&gt;&lt;a id=&quot;_1&quot;/&gt;对象拷贝现状&lt;/h3&gt; 
&lt;p&gt;业务系统中经常需要两个对象进行属性的拷贝，不能否认逐个的对象拷贝是最快速最安全的做法，但是当数据对象的属性字段数量超过程序员的容忍的程度，代码因此变得臃肿不堪，使用一些方便的对象拷贝工具类将是很好的选择。&lt;/p&gt; 
&lt;h3&gt;&lt;a id=&quot;_5&quot;/&gt;模型数据转换&lt;/h3&gt; 
&lt;p&gt;项目中或多或少会对某些实体进行转换（DTO、VO、DO或者PO等），往往具有相同的属性名称，数量少的情况下我们可以直接采取set、get方法进行赋值，可是如果这样的转换在很多地方都会用到，还是靠set来进行操作势必会大大的影响开发效率。&lt;/p&gt; 
&lt;ul&gt;&lt;li&gt; &lt;p&gt;关于实体转换，我们把一个实体对应一张表（这可以当成DO）。&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;业务中与第三方进行数据交互，我们需要把实体的数据传给他们，但不一定是一个DO中的所有属性可能减少或者多个DO中的属性组成，这里我们引入DTO（这个实体中我们可以去除一些隐私信息，比如：银行卡号，身份证，密码）。&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;一个性别我们用1、2表示男女，页面中不能直接显示1或者2，需要显示男、女或者靓仔（男）、靓妹（女），这时候代表这样的一个实体我们可以看作VO。&lt;/p&gt; &lt;/li&gt;&lt;/ul&gt; 
&lt;h3&gt;&lt;a id=&quot;_15&quot;/&gt;目前流行的较为公用认可的工具类：&lt;/h3&gt; 
&lt;h4&gt;&lt;a id=&quot;Apache_17&quot;/&gt;Apache的两个版本：（反射机制）&lt;/h4&gt; 
&lt;ul&gt;&lt;li&gt;org.apache.commons.beanutils.PropertyUtils.copyProperties(Object dest, Object orig)&lt;/li&gt;&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;原因：dateTimeConveter的conveter没有对null值的处理&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;prism language-java&quot;&gt;


&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;BeanObject&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; 
    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; name&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token namespace&quot;&gt;java&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;util&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;Date&lt;/span&gt; date&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
 &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;BeanObjectTest&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; args&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Throwable&lt;/span&gt;  &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
    &lt;span class=&quot;token class-name&quot;&gt;BeanObject&lt;/span&gt; from &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;BeanObject&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; 
    &lt;span class=&quot;token class-name&quot;&gt;BeanObject&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;BeanObject&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
    
    from&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;TTTT&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token namespace&quot;&gt;org&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;apache&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;commons&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;beanutils&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;BeanUtils&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;copyProperties&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; from&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token class-name&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;out&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;ToStringBuilder&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;reflectionToString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;from&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token class-name&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;out&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;ToStringBuilder&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;reflectionToString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt;&lt;li&gt; &lt;p&gt;org.apache.commons.beanutils.BeanUtils.copyProperties(Object dest, Object orig)&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;相同属性名，且类型不匹配时候的处理&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;原因：这两个工具类不支持同名异类型的匹配 !!!【包装类Long和原始数据类型long是可以的】&lt;/p&gt; &lt;/li&gt;&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;prism language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;SourceClass&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Long&lt;/span&gt; num&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; name&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TargetClass&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Long&lt;/span&gt; num&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; name&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;PropertyUtilsTest&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; args&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;IllegalAccessException&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;InvocationTargetException&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;NoSuchMethodException&lt;/span&gt;  &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token class-name&quot;&gt;SourceClass&lt;/span&gt; from &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;SourceClass&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        from&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setNum&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        from&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token class-name&quot;&gt;TargetClass&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TargetClass&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        
        &lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token namespace&quot;&gt;org&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;apache&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;commons&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;beanutils&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;PropertyUtils&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;copyProperties&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; from&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token namespace&quot;&gt;org&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;springframework&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;beans&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;BeanUtils&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;copyProperties&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;from&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        
        &lt;span class=&quot;token class-name&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;out&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;ToStringBuilder&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;reflectionToString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;from&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token class-name&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;out&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;ToStringBuilder&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;reflectionToString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;a id=&quot;Spring_78&quot;/&gt;Spring版本：（反射机制）&lt;/h4&gt; 
&lt;ul&gt;&lt;li&gt;org.springframework.beans.BeanUtils.copyProperties(Object source, Object target, Class editable, String[] ignoreProperties)&lt;/li&gt;&lt;/ul&gt; 
&lt;h4&gt;&lt;a id=&quot;cglib_82&quot;/&gt;cglib版本：（使用动态代理，效率高）&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;cglib是一款比较底层的操作java字节码的框架&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt;&lt;li&gt;net.sf.cglib.beans.BeanCopier.copy(Object paramObject1, Object paramObject2, Converter paramConverter)&lt;/li&gt;&lt;/ul&gt; 
&lt;h4&gt;&lt;a id=&quot;_88&quot;/&gt;工具操作&lt;/h4&gt; 
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/img_convert/d8106bb5f315011ad4c080b265f8bf24.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;a id=&quot;_92&quot;/&gt;原理简介&lt;/h3&gt; 
&lt;h4&gt;&lt;a id=&quot;apache_94&quot;/&gt;反射类型：（apache）&lt;/h4&gt; 
&lt;p&gt;都使用静态类调用，最终转化虚拟机中两个单例的工具对象。&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;prism language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;BeanUtilsBean&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ConvertUtilsBean&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;PropertyUtilsBean&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
 
&lt;ol&gt;&lt;li&gt; &lt;p&gt;动态bean：&lt;strong&gt;orig instanceof DynaBean：Object value = ((DynaBean)orig).get(name);&lt;/strong&gt; 然后把value复制到动态bean类。&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;Map类型：&lt;strong&gt;orig instanceof Map&lt;/strong&gt;：key值逐个拷贝&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;其他普通类：从beanInfo【&lt;strong&gt;每一个对象都有一个缓存的bean信息，包含属性字段等&lt;/strong&gt;】取出name，然后把sourceClass和targetClass逐个拷贝。&lt;/p&gt; &lt;/li&gt;&lt;/ol&gt; 
&lt;h4&gt;&lt;a id=&quot;CglibBeanCopier_116&quot;/&gt;Cglib类型：BeanCopier&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;prism language-java&quot;&gt;copier &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;BeanCopier&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;source&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getClass&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; target&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getClass&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
copier&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;source&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; target&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Get和set方法不匹配的处理&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;prism language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;BeanCopierTest&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    
    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; args&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
        &lt;span class=&quot;token class-name&quot;&gt;BeanCopier&lt;/span&gt; copier &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;BeanCopier&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;UnSatifisedBeanCopierObject&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;SourceClass&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        copier &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;BeanCopier&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;SourceClass&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;UnSatifisedBeanCopierObject&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; 
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;UnSatifisedBeanCopierObject&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;   
    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; name&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Long&lt;/span&gt; num&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;undefined
       &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; name&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;setName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; name&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;undefined
       &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; name&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Long&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getNum&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;undefined
       &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; num&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;



&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Create对象过程：产生&lt;strong&gt;sourceClass-&amp;gt; TargetClass&lt;/strong&gt; 的拷贝代理类，放入jvm中，所以创建的代理类的时候比较耗时。最好保证这个对象的单例模式，可以参照最后一部分的优化方案。&lt;/p&gt; 
&lt;h4&gt;&lt;a id=&quot;__jdk_156&quot;/&gt;创建过程 -&amp;gt; 源代码见jdk：&lt;/h4&gt; 
&lt;p&gt;net.sf.cglib.beans.BeanCopier.Generator.generateClass(ClassVisitor)&lt;/p&gt; 
&lt;ol&gt;&lt;li&gt; &lt;p&gt;获取sourceClass的所有public get 方法-》PropertyDescriptor[] getters&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;获取TargetClass 的所有 public set 方法-》PropertyDescriptor[] setters&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;遍历setters的每一个属性，执行4和5&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;按setters的name生成sourceClass的所有setter方法-》PropertyDescriptor getter【不符合javabean规范的类将会可能出现空指针异常】&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;PropertyDescriptor[] setters-》PropertyDescriptor setter&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;将setter和getter名字和类型 配对，生成代理类的拷贝方法。&lt;/p&gt; &lt;/li&gt;&lt;/ol&gt; 
&lt;h3&gt;&lt;a id=&quot;_172&quot;/&gt;原理总结&lt;/h3&gt; 
&lt;p&gt;Copy属性过程：调用生成的代理类，代理类的代码和手工操作的代码很类似，效率非常高。&lt;/p&gt; 
&lt;p&gt;上述这几种方式速度最快的是BeanCopier，默认只复制名称和类型相同的字段，还会对date为空的情况不进行复制。&lt;/p&gt; 
&lt;p&gt;我认为这样做最好，比如对象A的值复制到B中，我们把相同的进行复制，把不同的，也就是需要我们个性化的一些字段，单独出来用get来赋值，这样程序就会很明确，重点也就聚焦在了不同的地方。&lt;/p&gt;
                &lt;/div&gt;
                
                
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>5e94ff11b1a80f2ccdc53ef71fed04ac</guid>
<title>《架构整洁之道》重点整理，快收藏！</title>
<link>https://toutiao.io/k/ch129xc</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-role=&quot;outer&quot; label=&quot;edit by 135editor&quot;&gt;&lt;h1&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.05669291338582677&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PW0wIHxgg3nr1VNxfeqxVOw2nPJHVH4xeZibzPY5F4ibOuOZLMsUMrzIibGB6KMw7EurSKv6DkrtLzuhYdBa30A9Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;635&quot;/&gt;&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;117118&quot;&gt;&lt;section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;span&gt;&lt;strong data-brushtype=&quot;text&quot;&gt;高层架构&amp;amp;底层设计细节&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;h1&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;架构&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&quot;这个词往往使用于“高层级”的讨论中。这类讨论一般都把“底层”的实现细节排除在外。&lt;/span&gt;&lt;/h1&gt;&lt;h1&gt;&lt;span&gt;而“设计”一词，往往用来指代具体的系统代码组织结构和实现细节。&lt;/span&gt;&lt;/h1&gt;&lt;h1&gt;&lt;span&gt;但是，从一个真正的系统架构师的日常工作来看，这样的区分是根本不成立的。&lt;/span&gt;&lt;br/&gt;&lt;/h1&gt;&lt;p&gt;&lt;span&gt;底层设计细节和高层架构信息是不可分割的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;只考虑高层架构，&lt;/span&gt;而不考虑设计细节会导致架构师脱离一线，导致架构师永远不了解具体开发代码时会遇到什么问题。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;而只考虑设计细节&lt;/span&gt;&lt;span&gt;而不考虑架构会导致视野的局限性，没有全局观，设计出来的系统可能边界不清楚，组件划分不明确，系统最终成为一团谁也理不清的乱麻。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;所以一个好的架构师首先要做高层架构来梳理整个系统的边界、组件划分，从而构建一个职责清晰的架构视图，然后还要对架构进行推演，思考具体实施时会遇到哪些问题。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;117118&quot;&gt;&lt;section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;span&gt;&lt;strong data-brushtype=&quot;text&quot;&gt;软件架构的终极目标&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;h1&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;软件架构的终极目标是&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;，用最小的人力成本来满足构建和维护该系统的需求。&lt;/span&gt;&lt;br/&gt;&lt;/h1&gt;&lt;section data-role=&quot;list&quot;/&gt;&lt;p&gt;&lt;span&gt;构建从0到1的系统，会很快，这不是问题。问题是后期功能迭代的成本。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如果软件架构比较糟糕，那么会导致后期迭代很小的功能也需要花费大量的人力资源。如果在构建系统时通过合理的模块划分、分层、抽象，根据SOLID设计原则来构建软件，则会把系统划分为边界良好的组件，然后提供足够的扩展性，从而会使迭代功能成本比较低。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;好的设计和架构可以减少系统的构建和维护成本，提高生产力。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;117118&quot;&gt;&lt;section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;span&gt;&lt;strong data-brushtype=&quot;text&quot;&gt;行为价值&amp;amp;架构价值&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;list&quot;/&gt;&lt;p&gt;&lt;span&gt;长远看架构价值更重要。架构混乱会导致系统越来越难维护，后期迭代功能时候成本越来越高。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;117118&quot;&gt;&lt;section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;strong data-brushtype=&quot;text&quot;&gt;&lt;span&gt;编程范式&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;h1&gt;&lt;em&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;01. &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/em&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;结构化编程&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;/h1&gt;&lt;p&gt;&lt;span&gt;结构化程序设计则采用自顶向下、逐步求精的设计方法，各个模块通过“顺序、选择、循环”的控制结构进行连接，并且只有一个入口、一个出口。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;结构化程序设计的原则可表示为：程序=（算法）+（数据结构）。算法是一个独立的整体，数据结构（包含数据类型与数据）也是一个独立的整体。两者分开设计，以算法（函数或过程）为主。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;结构化程序设计&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;结构化编程范式可将模块递归降解拆分为可推导的单元，这就意味着模块也可以按功能进行降解拆分。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这样一来，我们就可以将一个大型问题拆分为一系列高级函数的组合，而这些高级函数各自又可以继续被拆分为一系列低级函数，如此无限递归。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;更重要的是，每个被拆分出来的函数也都可以用结构化编程范式来书写&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;goto语句的某些用法会导致某个模块无法被递归拆分成更小的、可证明的单元，这会导致无法采用分解法来将大型问题进一步拆分成更小的、可证明的部分。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;无限制的goto语句可以直接控制程序执行的随意的转移。而结构化编程限制了goto语句的使用，所以结构化编程对程序控制权的直接转移进行了限制和规范。&lt;/span&gt;&lt;/p&gt;&lt;h2&gt;&lt;span&gt;&lt;em&gt;&lt;strong&gt;&lt;span&gt;02. &lt;/span&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;面向对象编程&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;多态其实不过就是函数指针的一种应用。自从20世纪40年代末期冯·诺依曼架构诞生那天起，程序员们就一直在使用函数指针模拟多态了。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;但是那时候程序员必须严格按照固定约定来初始化函数指针，并同样严格地按照约定来调用这些指针。只要有一个程序员没有遵守这些约定，整个程序就会产生极其难以跟踪和消除的Bug。&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;面向对象编程语言则为我们消除了人工遵守这些约定的必要，也就等于消除了这方面的危险性。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;采用面向对象编程语言让多态实现变得非常简单，&lt;span&gt;可以&lt;/span&gt;让一个传统程序员去做以前不敢想的事情。综上所述，我们认为面向对象编程其实是对程序间接控制权的转移进行了约束。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;利用多态可以实现其他领域模块成为业务核心逻辑模块的插件。通过DIP来实现插件的改变不影响业务逻辑模块的编译和部署。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;当某个组件的源代码需要修改时，仅仅需要重新部署该组件，不需要更改其他组件，这就是独立部署能力。如果系统中的所有组件都可以独立部署，那它们就可以由不同的团队并行开发，这就是所谓的独立开发能力。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;面向对象编程就是以多态为手段使用DIP原则对源代码中的依赖关系进行控制的能力，&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;这种能力让软件架构师可以构建出某种插件式架构，让高层策略性组件与底层实现性组件相分离，底层组件可以被编译成插件，实现独立于高层组件的开发和部署。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8462962962962963&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/F5jWTF86CUNaOulI7KoUWbQLAttRoEe580pyiaURHDT2BGSCQF4v1UajK3xCooBN2iaV8qq8EMytXv1vto50YG2w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; data-width=&quot;314px&quot;/&gt;&lt;/p&gt;&lt;h2&gt;&lt;em&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;03. &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/em&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;函数式编程&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;一个架构设计良好的应用程序应该将有状态修改的部分和不需要修改状态的部分隔离成单独的组件，然后用合适的机制来保护可变量。软件架构师应该着力于将大部分处理逻辑都归于不可变组件中，可变状态组件的逻辑应该越少越好。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这种数据存储模式中不存在删除和更新的情况，我们的应用程序不是CRUD，而是CR。因为更新和删除这两种操作都不存在了，自然也就不存在并发问题。如果我们有足够大的存储量和处理能力，应用程序就可以用完全不可变的、纯函数式的方式来编程。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;所以说，函数式编程对程序中的赋值进行了限制和规范。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;117118&quot;&gt;&lt;section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;span&gt;&lt;strong data-brushtype=&quot;text&quot;&gt;设计原则&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;SOLID原则的主要作用就是告诉我们如何将数据和函数组织成为类，以及如何将这些类链接起来成为程序。即构建组件的原则，组件构建原则则是如何使用组件构建系统。&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;软件构建中层结构的主要目标如下：使软件可容忍被改动。使软件更容易被理解。构建可在多个软件系统中复用的组件。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;正如用好砖也会盖歪楼一样，采用设计良好的中层组件并不能保证系统的整体架构运作良好。正因为如此，我们在讲完SOLID原则之后，还会再继续针对组件的设计原则进行更进一步的讨论，将其推进到高级软件架构部分，即如何使用组件构建系统。&lt;/span&gt;&lt;/p&gt;&lt;h3&gt;&lt;em&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;01. &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/em&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;SRP：单一职责原则&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;该设计原则是基于康威定律（Conway&#x27;s Law）的一个推论——一个软件系统的最佳结构高度依赖于开发这个系统的组织的内部结构。这样，每个软件模块都有且只有一个需要被改变的理由。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;任何一个软件模块都应该只对某一类行为者负责。而不是简单的只做一件事情。由于一类行为可能有多件事情组成，把相同行为的东西放到一个模块，那么修改他的只有一个原因，就是要改变这类行为的共同内容。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如果A组件不想被B组件上发生的修改所影响，那么就应该让B组件依赖于A组件。&lt;/span&gt;&lt;/p&gt;&lt;h3&gt;&lt;span&gt;&lt;em&gt;&lt;strong&gt;&lt;span&gt;02. &lt;/span&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;OCP：开闭原则&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;该设计原则是由Bertrand Meyer在20世纪80年代大力推广的，其核心要素是：如果软件系统想要更容易被改变，那么其设计就必须允许新增代码来修改系统行为，而非只能靠修改原来的代码。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;一个设计良好的计算机系统应该在不需要修改的前提下就可以轻易被扩展。其实这也是我们研究软件架构的根本目的。如果对原始需求的小小延伸就需要对原有的软件系统进行大幅修改，那么这个系统的架构设计显然是失败的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;软件架构师可以根据相关函数被修改的原因、修改的方式及修改的时间来对其进行分组隔离，并将这些互相隔离的函数分组整理成组件结构，使得高阶组件不会因低阶组件被修改而受到影响。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;OCP是我们进行系统架构设计的主导原则，其主要目标是让系统易于扩展，同时限制其每次被修改所影响的范围。实现方式是通过将系统划分为一系列组件，并且将这些组件间的依赖关系按层次结构进行组织，使得高阶组件不会因低阶组件被修改而受到影响。&lt;/span&gt;&lt;/p&gt;&lt;h3&gt;&lt;span&gt;&lt;em&gt;&lt;strong&gt;&lt;span&gt;03. &lt;/span&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;LSP：里氏替换原则&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;该设计原则是Barbara Liskov在1988年提出的一个著名的子类型定义。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;简单来说，这项原则的意思是如果想用可替换的组件来构建软件系统，那么这些组件就必须遵守同一个约定，以便让这些组件可以相互替换。&lt;/span&gt;&lt;/p&gt;&lt;h3&gt;&lt;em&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;04. &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/em&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;ISP：接口隔离原则&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;这项设计原则主要告诫软件设计师应该在设计中避免不必要的依赖。&lt;/span&gt;&lt;/p&gt;&lt;h3&gt;&lt;span&gt;&lt;em&gt;&lt;strong&gt;&lt;span&gt;05. &lt;/span&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;DIP：依赖反转原则&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;该设计原则指出高层策略性的代码不应该依赖实现底层细节的代码，恰恰相反，那些实现底层细节的代码应该依赖高层策略性的代码。如果想要设计一个灵活的系统，在源代码层次的依赖关系中就应该多引用抽象类型，而非具体实现。&lt;/span&gt;&lt;/p&gt;&lt;h2/&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;117118&quot;&gt;&lt;section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;span&gt;&lt;strong data-brushtype=&quot;text&quot;&gt;软件架构&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;h2&gt;&lt;span&gt;首先，软件架构师自身需要是程序员，并且必须一直坚持做一线程序员，绝对不要听从那些说应该让软件架构师从代码中解放出来以专心解决高阶问题的伪建议。不是这样的！&lt;/span&gt;&lt;/h2&gt;&lt;h2&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;软件架构师其实应该是能力最强的一群程序员，&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;他们通常会在自身承接编程任务的同时，逐渐引导整个团队向一个能够最大化生产力的系统设计方向前进。&lt;/span&gt;&lt;/h2&gt;&lt;h2&gt;&lt;span&gt;也许软件架构师生产的代码量不是最多的，但是他们必须不停地承接编程任务。如果不亲身承受因系统设计而带来的麻烦，就体会不到设计不佳所带来的痛苦，接着就会逐渐迷失正确的设计方向。&lt;/span&gt;&lt;br/&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;软件架构设计的主要目标是&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;支撑软件系统的全生命周期，设计良好的架构可以让系统便于理解、易于修改、方便维护，并且能轻松部署。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;软件架构的终极目标&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;就是最大化程序员的生产力，同时最小化系统的总运营成本。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;基本上，所有的软件系统都可以降解为策略与细节这两种主要元素。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;策略体现的是软件中所有的业务规则与操作过程，因此它是系统真正的价值所在。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;而细节则是指那些让操作该系统的人、其他系统以及程序员们与策略进行交互，但是又不会影响到策略本身的行为。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;它们包括I/O设备、数据库、Web系统、服务器、框架、交互协议等。软件架构师的目标是创建一种系统形态，该形态会以策略为最基本的元素，并让细节与策略脱离关系，以允许在具体决策过程中推迟或延迟与细节相关的内容。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;优秀的架构师&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;会小心地将软件的高层策略与其底层实现隔离开，让高层策略与实现细节脱钩，使其策略部分完全不需要关心底层细节，当然也不会对这些细节有任何形式的依赖。另外，优秀的架构师所设计的策略应该允许系统尽可能地推迟与实现细节相关的决策，越晚做决策越好。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;软件架构设计本身就是一门划分边界的艺术。边界的作用是将软件分割成各种元素，以便约束边界两侧之间的依赖关系。其中有一些边界是在项目初期——甚至在编写代码之前——就已经划分好，而其他的边界则是后来才划分的。在项目初期划分这些边界的目的是方便我们尽量将一些决策延后进行，并且确保未来这些决策不会对系统的核心业务逻辑产生干扰。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;正如我们之前所说，架构师们所追求的目标是最大限度地降低构建和维护一个系统所需的人力资源。那么我们就需要了解一个系统最消耗人力资源的是什么？答案是系统中存在的耦合——尤其是那些过早做出的、不成熟的决策所导致的耦合。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;为了在软件架构中画边界线，我们需要先将系统分割成组件，其中一部分是系统的核心业务逻辑组件，而另一部分则是与核心业务逻辑无关但负责提供必要功能的插件。然后通过对源代码的修改，让这些非核心组件依赖于系统的核心业务逻辑组件。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;软件架构设计的工作重点之一就是，&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;将这些策略彼此分离，然后将它们按照变更的方式进行重新分组。其中变更原因、时间和层次相同的策略应该被分到同一个组件中。反之，变更原因、时间和层次不同的策略则应该分属于不同的组件。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如果我们要将自己的应用程序划分为业务逻辑和插件两部分，就必须更仔细地了解业务逻辑究竟是什么，它到底有几种类型。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;严格地讲，业务逻辑就是程序中那些真正用于赚钱或省钱的业务逻辑与过程。更严格地讲，无论这些业务逻辑是在计算机上实现的，还是人工执行的，它们在省钱/赚钱上的作用都是一样的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;业务逻辑是一个软件系统存在的意义，它们属于核心功能，是系统用来赚钱或省钱的那部分代码，是整个系统中的皇冠明珠。这些业务逻辑应该保持纯净，不要掺杂用户界面或者所使用的数据库相关的东西。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在理想情况下，这部分代表业务逻辑的代码应该是整个系统的核心，其他低层概念的实现应该以插件形式接入系统中。业务逻辑应该是系统中最独立、复用性最高的代码。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;一个良好的架构设计应该围绕着用例来展开，这样的架构设计可以在脱离框架、工具以及使用环境的情况下完整地描述用例。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这就好像一个住宅建筑设计的首要目标应该是满足住宅的使用需求，而不是确保一定要用砖来构建这个房子。架构师应该花费很多精力来确保该架构的设计在满足用例需要的情况下，尽可能地允许用户能自由地选择建筑材料（砖头、石料或者木材）。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;117118&quot;&gt;&lt;section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;span&gt;&lt;strong data-brushtype=&quot;text&quot;&gt;整洁架构&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;h1&gt;&lt;span&gt;分层架构，端口适配器架构，虽然这些架构在细节上各有不同，但总体来说是非常相似的。&lt;/span&gt;&lt;/h1&gt;&lt;h1&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;它们都具有同一个设计目标：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;按照不同关注点对软件进行切割。也就是说，这些架构都会将软件切割成不同的层，至少有一层是只包含该软件的业务逻辑的，而用户接口、系统接口则属于其他层。按照这些架构设计出来的系统，通常都具有以下特点。&lt;/span&gt;&lt;br/&gt;&lt;/h1&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;独立于框架：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;这些系统的架构并不依赖某个功能丰富的框架之中的某个函数。框架可以被当成工具来使用，但不需要让系统来适应框架。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;可被测试：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;这些系统的业务逻辑可以脱离UI、数据库、Web服务以及其他的外部元素来进行测试。- - 独立于UI：这些系统的UI变更起来很容易，不需要修改其他的系统部分。例如，我们可以在不修改业务逻辑的前提下将一个系统的UI由Web界面替换成命令行界面。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;独立于数据库：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;我们可以轻易将这些系统使用的Oracle、SQL Server替换成Mongo、BigTable、CouchDB之类的数据库。因为业务逻辑与数据库之间已经完成了解耦。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;独立于任何外部机构：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;这些系统的业务逻辑并不需要知道任何其他外部接口的存在。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;我们要通过下图将上述所有架构的设计理念综合成为一个独立的理念&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7007722007722008&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/F5jWTF86CUNaOulI7KoUWbQLAttRoEe58jNKs1mN4fJeVcGX4NonMxgpe271U0rg3MdKe7ecI1mRcXlaFufL5g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1036&quot; data-width=&quot;292px&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;首先整洁结构也是分层的，但是他强调底层逻辑要源码依赖高层逻辑，高层是核心业务逻辑，其他底层可以作为插件的方式插入进来。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;通过将系统划分层次，并确保这些层次遵守依赖关系规则，就可以构建出一个天生可测试的系统，这其中的好处是不言而喻的。而且，当系统外层的这些数据库或Web框架过时的时候，我们还可以很轻松地替换它们。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;117118&quot;&gt;&lt;section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;span&gt;&lt;strong data-brushtype=&quot;text&quot;&gt;Main组件&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;Main组件是系统中最细节化的部分——也就是底层的策略，它是整个系统的初始点。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在整个系统中，除了操作系统不会再有其他组件依赖于它了。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Main组件的任务是创建所有的工厂类、策略类以及其他的全局设施，并最终将系统的控制权转交给最高抽象层的代码来处理。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Main组件中的依赖关系通常应该由依赖注入框架来注入。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在该框架将依赖关系注入到Main组件之后，Main组件就应该可以在不依赖于该框架的情况下自行分配这些依赖关系了。&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;7&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;p data-autoskip=&quot;1&quot;&gt;更多详细内容尽在《架构整洁之道》一书！&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;title&quot; data-tools=&quot;135编辑器&quot; data-id=&quot;93355&quot;&gt;&lt;section&gt;&lt;section data-width=&quot;50%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-width=&quot;50%&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8428571428571429&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/ldFaBNSkvHhBCS6gKD3G0bw0mcAHyH1uJGVdiaI89TibcaDY6iaafaOkZJIXcUDDRcnvMEaWQCpKMClyHvbCkIbDA/640?wx_fmt=gif&quot; data-w=&quot;140&quot; data-width=&quot;25%&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;258&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;258&quot; data-ratio=&quot;1.322&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/PW0wIHxgg3kvaBZngpdG4eFGWTIEsz785gAfbjDRCNvoXbkbFBdIXskerpFsGIkiaec33l7ETWJND87G94nSJWg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;500&quot; title=&quot;架构整洁之道.jpg&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;▊《架构整洁之道》&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span/&gt;&lt;p&gt;&lt;span&gt;[美] Robert C. Martin（罗伯特C.马丁） 著&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;孙宇聪 译，鄢倩 校&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;90239&quot;&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section&gt;&lt;section data-role=&quot;list&quot;&gt;&lt;section data-role=&quot;list&quot;/&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Martin在《架构整洁之道》中远不只是在为我们提供选项，他几乎是在将软件世界中横跨半个世纪的各种架构类型的经验倾囊相授，目的是让读者既能阅尽所有架构选型，又可通晓其如何决定成败。Martin也的确不负厚望，本书中充满了直接而有效的解决方案，以供读者应对自己面临的真正挑战——那些或最终成就或彻底破坏项目的挑战&lt;/span&gt;&lt;/span&gt;。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;108&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;108&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PW0wIHxgg3lYCuClVb7cMBY4JHSA1d8tyeHpPQfLWGPPPE1Luyb9Dlnh1Ss8ibdlu8XALw6o9iawps4NYjLZeVVQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;300&quot; title=&quot;架构整洁之道二维码.png&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;（扫码了解本书详情！）&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;mpcps class=&quot;js_editor_new_cps&quot; data-templateid=&quot;list&quot; data-traceid=&quot;02cd747b-f839-415e-8b59-2ee9ea451830&quot; data-goodssouce=&quot;1&quot; data-pid=&quot;101_12447192&quot; data-appuin=&quot;2395946309&quot; data-buffer=&quot;{&amp;quot;category_id&amp;quot;:10,&amp;quot;pid&amp;quot;:&amp;quot;101_12447192&amp;quot;,&amp;quot;biz_uin&amp;quot;:&amp;quot;2395946309&amp;quot;,&amp;quot;trace_id&amp;quot;:&amp;quot;02cd747b-f839-415e-8b59-2ee9ea451830&amp;quot;,&amp;quot;sku_id&amp;quot;:&amp;quot;101_12447192&amp;quot;,&amp;quot;source_id&amp;quot;:2,&amp;quot;source_name&amp;quot;:&amp;quot;京东&amp;quot;,&amp;quot;audit_state&amp;quot;:1,&amp;quot;main_img&amp;quot;:&amp;quot;https://pcm-img.zhls.qq.com/productcenter-7e55cafd--1018824-5493516862768260860/89905491329072022/d3c5d02823560bc9e756e982516a9b85.jpg&amp;quot;,&amp;quot;product_name&amp;quot;:&amp;quot;架构整洁之道(博文视点出品)&amp;quot;,&amp;quot;current_price&amp;quot;:4950,&amp;quot;first_category_id&amp;quot;:&amp;quot;10&amp;quot;,&amp;quot;product_label_name_list&amp;quot;:[&amp;quot;京东配送&amp;quot;],&amp;quot;select_tag_name_list&amp;quot;:[],&amp;quot;appuin&amp;quot;:&amp;quot;2395946309&amp;quot;,&amp;quot;isNewCpsKOL&amp;quot;:1,&amp;quot;templateId&amp;quot;:&amp;quot;list&amp;quot;}&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;发布：刘恩惠&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;审核：陈歆懿&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-croporisrc=&quot;https://mmbiz.qpic.cn/mmbiz_png/PW0wIHxgg3ntPMYAJur3UuYzhSDgO7Puv74VHDtgNjyJbpQvt1gicgSpjrlpDy6BheYoAmtjiaF7cdIuPkuUlFkw/0?wx_fmt=png&quot; data-cropx1=&quot;0&quot; data-cropx2=&quot;1920&quot; data-cropy1=&quot;0&quot; data-cropy2=&quot;29.8961937716263&quot; data-ratio=&quot;0.01574074074074074&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/PW0wIHxgg3ntPMYAJur3UuYzhSDgO7Pu8DQL5f0FQIuDZC87yrAuNLy4frEdlMeWkthrlzczb0RbMOBQCAwDrA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section&gt;&lt;span&gt;如果喜欢本文&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;欢迎&lt;/span&gt; &lt;span&gt;&lt;strong&gt;在看&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;丨&lt;/span&gt;&lt;span&gt;&lt;strong&gt;留言&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;丨&lt;/span&gt;&lt;span&gt;&lt;strong&gt;分享至朋友圈&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; 三连&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-id=&quot;92644&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-width=&quot;100%&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;span&gt; &lt;strong&gt;热文推荐 &lt;/strong&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;hr/&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;574&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;244&quot; data-ratio=&quot;0.4255555555555556&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PW0wIHxgg3m3jibtjia3lCrCvUY6N19QMZ3FjCcpuHouXkdLicQVUiaLicgR8cgSbk7RA8G427GKowhbEvVefuJp53g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;900&quot;/&gt;&lt;/p&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;▼点击阅读原文，了解本书详情~&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>ab76d8875f70bf450d63343fd3d2ab06</guid>
<title>数据质量管理方法总结（全）</title>
<link>https://toutiao.io/k/3lo1yfp</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content js_underline_content             autoTypeSetting24psection&amp;#10;            &quot; id=&quot;js_content&quot;&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;一、数据质量保障原则&lt;/strong&gt;&lt;/span&gt;&lt;/h5&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如何评估数据质量的好坏，业界有不同的标准，阿里主要从4个方面进行评估：完整性、准确性、一致性、及时性；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;1. 完整性&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;数据完整性是数据最基础的保障；&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;完整性：指数据的记录和信息是否完整，是否存在缺失的情况；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;数据缺失：主要包括记录的缺失和记录中某个字段信息的缺失；&lt;/p&gt;&lt;p&gt;记录的丢失：如，交易中每天只发订单数都在 100 万笔左右，如果某天支付订单突然下降到 1 万笔，很可能是记录丢失了；&lt;br/&gt;记录中字段的丢失：如，订单的商品 ID、卖家 ID 都是必然存在的，这些字段的空值个数肯定是 0，一旦大于 0 就违背了完整性约束；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;2. 准确性&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;准确性：指数据汇总记录的信息和数据是否准确，是否存在异常或者错误的信息；&lt;/p&gt;&lt;p&gt;准确：数据表中记录的信息与业务过程中真实发生的事实要一致；如何判断是否准确：卡点监控 —— 制定相应规则，根据根校验数据，符合规则的数据则认为是准确的；&lt;br/&gt;如，一笔订单如果出现确认收货金额为负值，或者下单时间在公司成立之前，或者订单没有买家信息等，这些必然是有问题的；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;3. 一致性&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;一致性：一般体现在跨度很大的数据仓库体系中，如阿里的数据仓库，内部有很多业务数据仓库分支，对于同一份数据，必须保证一致性；&lt;/p&gt;&lt;p&gt;一致：也就是指多个业务数据仓库间的公共数据，必须在各个数据仓库中保持一致；&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;如，用户 ID，从在线业务库加工到数据仓库，再到各个消费节点，必须都是同一种类型，长度也需要保持一致；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;所以，在阿里建设数据仓库时，才有了公共层的加工，以确保数据的一致性；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;4. 及时性&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;及时性：指数据要能及时产出；&lt;/p&gt;&lt;p&gt;主要体现在数据应用上，要及时产出给到需求方；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;一般决策支持分析师希望当天就能看到前一天的数据，而不是等三五天才能看到某一个数据分析结果；否则就已失去了数据及时性的价值；&lt;/p&gt;&lt;p&gt;如，阿里 “双 11” 的交易大屏数据，就要做到秒级；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br/&gt;&lt;/h5&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;二、数据质量方法概述&lt;/strong&gt;&lt;/span&gt;&lt;/h5&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;阿里的数据质量建设体系：&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1.068241469816273&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;762&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/TEMFmlppic0apglgg5C3M31V0FP0xygfwbyicDZEGY8630L6aibWRUyuUt30Wo4mjkoBR9BgmQp0YOvwdluOLudRA/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;消费场景知晓&lt;/strong&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;功能：分析解决消费场景知晓的问题；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;方法：通过数据资产等级和基于元数据的应用链路，来分析解决消费场景知晓的问题；&lt;/p&gt;&lt;p&gt;确定数据资产等级：根据应用的影响程度，确定数据资产的等级；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;过程：&lt;/p&gt;&lt;p&gt;根据数据链路血缘，将资产等级上推至各数据生产加工的各个环节，确定链路上所有涉及数据的资产等级，以及在各个加工环节上根据资产等级的不同所采取不同的处理方式；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ol start=&quot;2&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;数据生产加工各个环节卡点校验&lt;/strong&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;主要对两部分的数据卡点校验：在线系统和离线系统数据生产加工各个环节的卡点校验；&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;在线系统：OLTP（On - Line Transaction Processing，联机事务处理）系统；&lt;/p&gt;&lt;p&gt;在线系统生产加工各环节卡点校验：&lt;/p&gt;&lt;p&gt;1.根据资产等级的不同，当对应的业务系统变更时，决定是否将变更通知下游；&lt;br/&gt;2.对于高资产等级的业务，当出现新业务数据时，是否纳入统计中，需要卡掉审批；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;离线系统：OLAP（On - Line Analytical Processing，联机分析处理）系统；&lt;/p&gt;&lt;p&gt;离线系统生产加工各环节卡点校验：&lt;/p&gt;&lt;p&gt;主要包括：代码开发、测试、发布、历史或错误数据回刷等环节的卡点校验；&lt;br/&gt;代码开发阶段、发布前的测试阶段&lt;br/&gt;针对数据资产等级的不同，对校验的要求有所不同；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ol start=&quot;3&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;风险点监控&lt;/strong&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;风险点监控：主要针对在数据运行过程中可能出现的数据质量和时效等问题进行监控；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;主要对两个方面进行风险点监控：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;在线数据的风险点监控：&lt;/p&gt;&lt;p&gt;主要针对在线系统日常运行产出的数据进行业务规则的校验；&lt;br/&gt;主要使用 “实时业务检测平台 BCP（Biz Check Platform）”；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;离线数据的风险点监控：&lt;/p&gt;&lt;p&gt;主要是针对离线系统日常运行产出的数据，进行数据质量监控和时效性监控；&lt;br/&gt;DQC：监控数据质量；&lt;br/&gt;摩萨德：监控数据时效性；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ol start=&quot;4&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;质量衡量&lt;/strong&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;对质量的衡量：&lt;/p&gt;&lt;p&gt;事前的衡量：如 DQC 覆盖率；&lt;br/&gt;事后的衡量：&lt;br/&gt;跟进质量问题，确定质量问题原因、责任人、解决情况等，并用于数据质量的复盘，避免类似事件再次发生；&lt;br/&gt;根据质量问题对不同等级资产的影响程度，确定其是属于低影响的事件还是具有较大影响的故障；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;质量分：综合事前和事后的衡量数据进行打分；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ol start=&quot;5&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;质量配套工具&lt;/strong&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;针对数据质量的各个方面，都有相关的工具进行保证，以提高效能；&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br/&gt;&lt;/h5&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;01  消费场景知晓&lt;/strong&gt;&lt;/span&gt;&lt;/h5&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;消费场景知晓的问题：&lt;/p&gt;&lt;p&gt;数据研发工程师难以确认几百 PB 的数据是否都是重要的？是否都要进行保障？是否有一些数据已经过期了？是否所有需要都要精确的进行质量保障？&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;解决方案：数据资产等级方案；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;产出：&lt;/p&gt;&lt;p&gt;根据数据产品和应用的影响程度，给数据产品和应用划分资产等级，并打标处理；&lt;br/&gt;根据数据链路血缘，将资产等级上推至各数据生产加工的各个环节，确定链路上所有涉及数据的资产等级，情打标处理；（等级标签与对应的数据产品 / 应用一致）&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;数据资产等级定义&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;背景：针对阿里庞大的数据仓库，数据的规模已经达到 EB 级，对于这么大的数据量，如果一概而论势必会造成精力无法集中、保障无法精确；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;五个数据等级，不同性质的重要性一次降低：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;即，数据一旦出错，将会引起重大资产损失，面临重大受益损失，造成重大公共风险；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;即，数据直接或间接用于集团业务和效果的评估、重要平台的运维、对外数据产品的透露、影响用户在阿里系网站的行为等；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;即，数据直接或间接用于内部一般数据产品或者运营 / 产品报告，如果出现问题会给事业部或业务线造成影响，或者造成工作效率损失；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;即，数据主要用于小二的日常数据分析，出现问题几乎不会带来影响或者影响很小；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不能明确说出数据的应用场景，则标注为未知；&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;对于不同的数据资产等级，使用英文 Asset 进行标记：&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;毁灭性质：A1 等级；&lt;br/&gt;全局性质：A2 等级；&lt;br/&gt;局部性质：A3 等级；&lt;br/&gt;一般性质：A4 等级；&lt;br/&gt;未知性质：A5 等级；&lt;br/&gt;重要程度：A1 &amp;gt; A2 &amp;gt; A3 &amp;gt; A4 &amp;gt; A5；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果一份数据出现在多个应用场景中，遵循就高原则；&lt;/p&gt;&lt;ol start=&quot;2&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;数据资产等级落地方法&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;需要解决的问题：对于如此庞大的数据量，如何给每一份数据都打上一个等级标签？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;数据资产等级落地的方法 / 步骤：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;数据流转过程&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;数据从业务系统中产生，经过同步工具进入数据仓库系统中，在数据仓库中进行一般意义上的清洗、加工、整合、算法、模型等一系列运算；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;通过同步工具输出到数据产品中进行消费；&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;数据从业务系统到数据仓库再到数据产品，都是以表的形式体现的，流转过程如下图：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.19069767441860466&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;860&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/TEMFmlppic0apglgg5C3M31V0FP0xygfwx0jxAiaZt6oKrkxhRXD00W55iaVibO8Uo6FSrqhQXfFXyqXvibnuKKiazHA/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;同步到数据仓库（对应到阿里就是 MaxCompute 平台）中的都是业务数据库的原始表，主要用于承载业务需求，往往不能直接用于数据产品；（一般是 ODS 层的全量数据）&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在数据产品中使用的都是经过数据仓库加工后的产出表；（根据需求 / 报表进行加工）&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1.划分数据资产等级&lt;br/&gt;2.根据数据流转过程，建立元数据，记录数据表与数据产品或者应用的对应关系；&lt;br/&gt;3.根据影响程度，给数据产品和应用划分数据资产等级；&lt;br/&gt;4.打标：依托元数据的上下游血缘，将整个消费链路打上某一类数据资产标签（也就是对消费链路数据打标）；&lt;br/&gt;链路：指数据从业务系统到数据产品的流转过程；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;总结：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过上述步骤，就完成了数据资产等级的确认，给不同的数据定义了不同的重要程度，需要用到元数据的支撑；&lt;/p&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br/&gt;&lt;/h5&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;02   数据加工过程卡点校验&lt;/strong&gt;&lt;/span&gt;&lt;/h5&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;目的：保障数据准确性、保障与离线数据的一致性；&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;在线业务系统卡点校验（数据产出环节）&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;在线系统数据加工过程卡点校验，主要指在在线系统的数据生产过程中进行的卡点校验；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;目的：保障与离线数据的一致性；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;背景 / 问题：在线业务复杂多变，总是在不断变更，每一次变更都会带来数据的变化，因此需要做到两点：&lt;br/&gt;1、数据仓库需要适应着多变的业务发展，及时做到数据的准确性；&lt;br/&gt;2、需要高效的将在线业务的变更通知到离线数据仓库；阿里解决上述两个问题的方法：工具和人工双管齐下：既要在工具上自动捕捉每一次业务的变化，同时也要求开发人员在意识上自动进行业务变更通知；&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ol start=&quot;2&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;工具&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;发布平台：发送重大变更的通知；&lt;br/&gt;通知内容：变更原因、变更逻辑、变更测试报告、变更时间等；&lt;br/&gt;数据库平台：发送库表变更通知；&lt;br/&gt;通知内容：变更原因、变更逻辑、变更测试报告、变更时间等；&lt;/p&gt;&lt;ol start=&quot;3&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;发布平台&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;功能：在业务进行重大变更时，订阅发布过程，然后给到离线开发人员，使其知晓此次变更的内容；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br/&gt;注：业务系统繁忙，日常发布变更数不胜数，并不是每一次业务变更都要只会离线业务，那样会造成不必要的浪费，而且影响在线业务迭代的效率；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;订阅内容：针对全集团重要的高等级数据资产，整理出哪些变化会影响数据的加工，则订阅这些内容；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br/&gt;如，财报，这个自然是 A1 等级的资产，如果业务系统的改造会影响财报的计算，如约定好的计算口径被业务系统发布变更修改了，那么务必要告知离线业务，作为离线开发人员也必须主动关注这类发布变更信息；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;卡点：发布平台集成了通知功能，针对重要的场景发布会进行卡点，确认通知后才能完成发布；&lt;/p&gt;&lt;ol start=&quot;4&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;数据库表的变化感知&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;无论是随着业务发展而做的数据库扩容还是表的 DDL 变化，都需要通知到离线开发人员；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;DDL（(Data Definition Language）：数据库模式定义语言；用于描述数据库中要存储的现实世界实体的语言。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;DDL 数据库模式定义语言是 SQL 语言（结构化查询语言）的组成部分；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;例：CREATE DATABASE（创建数据库）、CREATE TABLE（创建表）；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;DML（Data Manipulation Language）：数据操纵语言命令；使用户能够查询数据库以及操作已有数据库中的数据。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;例：insert、delete、update、select 等都是 DML ；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;背景 / 问题：数据仓库在进行数据抽取时，采用的是 DataX 工具，可能限制了某个数据库表，如果发生数据库扩容或者迁移，DataX 工具是感知不到的，结果可能会导致数据抽取错漏，影响一系列的下游应用；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;解决方法：通过数据库平台发送库表变更通知；&lt;/p&gt;&lt;ol start=&quot;5&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;开发人员&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;数据资产等级的上下游打通，同样也要将这个过程给到在线开发人员，使其知晓哪些是重要的核心数据资产，哪些暂时还只是作为内部分析数据使用；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;要提高在线开发人员的意识，通过培训，将离线数据的诉求、离线数据的加工过程、数据产品的应用方式，告诉在线业务开发人员，使其意识到数据的重要性，了解数据的价值，同时也告知出错后果，使在线开发人员在完成业务目标时，也要注重数据的目标，做到业务端和数据端一致；&lt;/p&gt;&lt;ol start=&quot;6&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;离线系统卡点校验（数据离线加工环节）&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;背景 / 问题：数据从在线业务系统到数据仓库再到数据产品的过程中，需要在数据仓库这一层完成数据的清洗、加工；正是有了数据的加工，才有了数据仓库模型和数据仓库代码的建设；如何保障数据加工过程中的质量，是离线数据仓库保障数据质量的一个重要环节；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;目的：保障数据加工过程中的质量（主要指数据的准确性）；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在两个环节进行卡点校验：&lt;/p&gt;&lt;ol start=&quot;7&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;代码提交时的卡点校验&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;背景 / 原因：数据研发人员素质不同，代码能力也有差异，代码质量难以得到高效保障；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;解决方法：开发代码扫描工具 SQLSCAN，针对每一次提交上线的代码进行扫描，将风险点提取出来；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;卡点方式：使用代码扫描工具 SQLSCAN，扫描代码提取风险点；&lt;/p&gt;&lt;ol start=&quot;8&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;任务发布上线时的卡点校验&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为了保障线上数据的准确性，每一次变更都需要线下完成测试后在发布到线上环境中，线上测试通过后才算发布成功；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;卡点方式：分别对任务（指变更的业务）发布上线前和上线后进行测试；&lt;/p&gt;&lt;ol start=&quot;9&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;发布上线前的测试：主要包括 Code Review 和回归测试；&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;Code Review：是一种通过复查代码提高代码质量的过程；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;回归测试：指修改了旧代码后，重新进行测试以确认修改没有引入新的错误或导致其他代码产生错误；&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;回归测试的目的：&lt;br/&gt;保障新逻辑的正确；&lt;br/&gt;保证不影响非此次变更的逻辑；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;注：对于资产等级较高的任务变更发布，采用强阻塞的形式，必须通过在彼岸完成回归测试之后才允许发布；&lt;/p&gt;&lt;ol start=&quot;10&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;发布上线后的测试：在线上做 Dry Run 测试或者真是环境运行测试；&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不执行代码，仅运行执行计划，避免线上和线下环境不一致导致语法错误；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用真实数据进行测试；&lt;/p&gt;&lt;section&gt;通知内容：变更原因、变更逻辑、变更测试报告、变更时间等；&lt;br/&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;过程：&lt;br/&gt;使用通知中心，将变更原因、变更逻辑、变更测试报告、变更时间等自动通知下游，下游对此次变更没有异议后，再按照约定时间执行发布变更，将变更对下游的影响降低至最低；&lt;/p&gt;&lt;section&gt;&lt;mp-common-profile class=&quot;js_uneditable js_wx_tap_highlight&quot; data-pluginname=&quot;mpprofile&quot; data-weui-theme=&quot;light&quot; data-id=&quot;MzkyMDE5ODYwMw==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/TEMFmlppic0YdZWNt7VhCeqCQmB5QIs9UGv3pnVWE6TgjTbDqkoJY4sYSQ1bXh9Uhq9ibwOlBDQrFUeYLomGNUpA/0?wx_fmt=png&quot; data-nickname=&quot;数据学堂&quot; data-alias=&quot;data_school&quot; data-signature=&quot;识数据、存数据、管数据、治数据、用数据，就在数据学堂！&quot; data-from=&quot;2&quot; data-is_biz_ban=&quot;0&quot; data-index=&quot;1&quot; data-origin_num=&quot;9&quot; data-isban=&quot;0&quot;/&gt;&lt;/section&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br/&gt;&lt;/h5&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;03  风险点监控&lt;/strong&gt;&lt;/span&gt;&lt;/h5&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;风险点监控：主要指针对数据在日常运行过程中容易出现的风险进行监控，并设置报警机制；&lt;br/&gt;主要包括在线数据和离线数据运行风险点监控；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;目的：保障数据的准确性；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1、 在线数据风险点监控&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;目的：减少了在线业务系统产生的脏数据，为数据准确性把第一道关；&lt;br/&gt;另外，减少用户错误信息的投诉，也减少了离线数据错误的回滚；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;BCP：阿里的实时业务检测平台；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;思路 / 监控过程：在每一个业务系统中，当完成业务过程进行数据落库时，BCP 订阅一份相同的数据，根据提前设定好的业务规则，在 BCP 系统中进行逻辑校验，当校验不通过时，以报警的形式披露出来，给到规则订阅人，以完成数据的校对；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;BCP 的校验过程：&lt;br/&gt;获取数据源：用户在 BCP 平台订阅数据源，获取需要校验的数据源；&lt;br/&gt;编写规则：针对所订阅的数据源进行规则的编写，即校验的逻辑；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;规则 / 逻辑：是至关重要的，是校验的核心，只有通过了这些规则，才认定该条记录是对的；&lt;br/&gt;如，针对 “订单拍下时间” 进行校验；逻辑：订单的拍下时间肯定不会大于当天的时间，也不会小于淘宝创立的时间；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;配置告警：针对不同的规则配置不同的告警形式；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;注：由于 BCP 的配置和运行成本较高，主要根据数据资产等级进行监控；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;离线数据风险点监控主要包括对数据准确性和数据产出的及时性进行监控；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;数据准确性是数据质量的关键，因此数据准确成为数据质量的重中之重，是所有离线系统加工时的第一保障要素；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;方法：通过 DQC 进行数据准确性监控；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;DQC（Data Quality Center，数据质量中心）：主要关注数据质量，通过配置数据质量校验规则，自动在数据处理任务过程中进行数据质量方面的监控；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;注：监控数据质量并报警，其本身不对数据产出进行处理，需要报警接收人判断并决定如何处理；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;监控方式：通过配置数据质量检验规则，自动在数据处理任务过程中进行监控；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;监控规则：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;强规则：会阻断任务的执行；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;将任务置为失败状态，其下游任务将不会被执行；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;弱规则：只告警而不会阻断任务的执行；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;常见的 DQC 监控规则：主键监控、表数据量及波动监控、重要字段的非空监控、重要枚举字段的离散值监控、指标值波动监控、业务规则监控等；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;规则配置：依赖数据资产等级确定监控规则；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;DQC 检查其实也是运行 SQL 任务，只是这个任务是嵌套在主任务中的，一旦检查点太多自然就会影响整体的性能；因此还是依赖数据资产等级来确定规则的配置情况；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;注：不同的业务会有业务规则的约束，这些规则来源于数据产品或者说消费的业务需求，有消费节点进行配置，然后上推到离线系统的起点进行监控，做到规则影响最小化；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在确保数据准确性的基础上，需要进一步让数据能够及时的提供服务；否则数据的价值将大幅度降低，甚至没有价值；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;阿里的大部分离线任务：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一般以天为时间间隔，称为 “天任务”，对于天任务，数据产品或者数据决策报表一般都要求在每天 9:00 甚至更早的时间产出；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为了确保前一天的数据完整，天任务是从零点开始运行的，由于计算加工的任务都是在夜里运行的，而要确保每天的数据能够按时产出，需要进行一系列的报警和优先级设置，使得重要的任务优先且正确的产出；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;重要的任务：资产等级较高的业务；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于 Map 任务和 Reduce 任务，调度是一个树形结构（RelNode 树），当配置了叶子节点（RelNode 节点）的优先级后，这个优先级会传递到所有上游节点，所以优先级的设置都是给到叶子节点，而叶子节点往往就是服务业务的消费节点；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;设置优先级：首先确定业务的资产等级，等级高的业务所对应的消费节点自然配置高优先级，一般业务则对应低优先级，确保高等级业务准时产出；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;任务报警和优先级类似，也是通过叶子节点传递；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;任务在运行过程中难免会出错，因此要确保任务能够高效、平稳的执行，需要有一个监控报警系统，对于高优先级的任务，一旦发现任务出错或者可能出现产出延迟，就要报警给到任务和业务 Owner；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;摩萨德：阿里自主开发的监控报警系统；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;摩萨德：离线任务的监控报警系统；是数据运维不可或缺的保障工具；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;根据离线任务的运行情况实时决策是否告警、何时告警、告警方式、告警给谁等；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;两个主要功能：强保障监控、自定义告警；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;强保障监控&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;强保障监控是摩萨德的核心功能，是仅仅围绕运维目标即业务保障而设计的，只要在业务的预警时间受到威胁，摩萨德就一定会告警出来给到相关人员；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;强保障监控主要包括：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;监控范围：设置强保障业务的任务及其上游所有的任务都会被监控；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;监控的异常：任务出错、任务变慢、预警业务延迟；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;告警对象：默认是任务 Owner，也可以设置值班表到某一个人；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;何时告警：根据业务设置的预警时间判断何时告警；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;业务延迟预警和出错报警，都是根据 “产出预警时间“ 来判断的；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;产出预警时间：摩萨德根据当前业务上所有任务最近 7 天运行的平均时间来推算当前业务所用的大概时间，来作为产出预警时间；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;告警方式：根据业务的重要紧急程度，支持电话、短信、旺旺、邮件告警；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;例：生意参谋业务（预警业务延迟）&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;资产等级及需求：定义的资产等级是 A2，要求早上 9:00 产出数据给到上架；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;设置：给生意参谋业务定义一个强保障监控，业务产出时间是 9:00，业务预警时间是 7:00；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里的预警时间是指，一旦摩萨德监控到当前业务的产出时间超出预警时间时，就会打电话给值班人员进行预警；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如，摩萨德推测生意参谋的产出时间要到 7:30，那么电话告警就出来了，由值班人员来判断如何加速产出；产出时间推算（预警判断，也就是产出延迟判断）：摩萨德是根据当前业务上所有任务最近 7 天运行的平均时间来推算的；虽然有误判的可能性，但是总体还是非常准确的，可以接受；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;自定义监控是摩萨德比较轻量级的监控功能，用户可以根据自己的需求进行配置，主要包括：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;出错告警：可根据应用、业务、任务三个监控对象进行出错告警配置，监控对象出错即告警给到人 / Owner / 值班表；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;完成告警：可根据应用、业务、任务三个监控对象进行完成情况告警配置，监控对象完成即告警给到人 / Owner / 值班表；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;未完成告警：可根据应用、业务、任务三个监控对象进行未完成情况告警配置，监控对象未完成即告警给到人 / Owner / 值班表；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;周期性告警：针对某个周期的小时任务，如果在某个时间未完成，即告警给到人 / Owner / 值班表；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;超时告警：根据任务运行时长进行超时告警配置，任务运行超过指定时间即告警给到人 / Owner / 值班表；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;针对业务的运行情况，摩萨德会提供一天关键路径，即完成业务的最慢任务链路图；因为每个业务上游可能有成千上万个任务，所以这条关键路径对于业务链路优化来说非常重要；&lt;/p&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h5&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;04  质量衡量&lt;/strong&gt;&lt;/span&gt;&lt;/h5&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;保障数据仓库的数据质量，有很多方案，评价这些方案的优劣，需要一套度量指标：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一般数据仓库的作业任务都是在夜晚进行，一旦出现问题就需要值班人员起夜进行处理；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;起夜率：用每个月的起夜次数，作为衡量数据质量建设完善度的一个指标；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;数据质量事件：记录每一次数据质量的问题；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;针对每一个数据质量问题，都记录一个数据质量事件：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;功能：既用来衡量数据本身的质量，也用来衡量数据链路上下游的质量，是数据质量的一个重要度量指标；&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;用来跟进数据质量问题的处理过程；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;用来归纳分析数据质量原因；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;根据数据质量原因来查缺补漏，既要找到数据出现问题的原因，也要针对类似问题给出后续预防方案；&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于严重的数据质量事件，将升级为故障；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;故障：指问题造成的影响比较严重，已经给公司带来资产损失或者公关风险；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;背景：数据从采集到最后的消费，整个链路要经过几十个系统，任何一个环节出现问题，都会影响数据的产出，因此需要一种机制，能够将各团队绑在一起，目标一致，形成合力，故障体系在这个背景下应运而生；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;故障体系中，一旦出现故障，就会通过故障体系，要求相关团队在第一时间跟进解决问题，消除影响；&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;故障定义&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;首先识别出重要的业务数据，并注册到系统中，填写相关的业务情况，如技术负责人、业务负责人、数据应用场景、延迟或错误带来的影响、是否会发生资产损失等，完成后，会将这部分数据的任务挂到平台基线上，一旦延迟或错误，即自动生成故障单，形成故障；&lt;/p&gt;&lt;ol start=&quot;2&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;故障等级&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;故障发生后，会根据一定的标准判断故障等级，如故障时长、客户投诉量、资金损失等，将故障按 P1~ P4 定级，各团队会有故障分的概念，到年底会根据故障分情况来判断本年度的运维效果；&lt;/p&gt;&lt;ol start=&quot;3&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;故障处理&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;故障发生后，需要快速的识别故障原因，并迅速解决，消除影响；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在处理故障的过程中，会尽量将故障的处理进度通知到相关方，尽可能减少对业务的影响；&lt;/p&gt;&lt;ol start=&quot;4&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;故障 Review&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;故障 Review：即分析故障的原因、处理过程的复盘、形成后续解决的 Action，并且都会以文字的形式详细记录，对故障的责任进行归属，一般会责任到人；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;注：对故障责任的判定，不是为了惩罚个人，而是通过对故障的复盘形成解决方案，避免问题再次发生；&lt;/p&gt;&lt;p&gt;&lt;span&gt;来源：公众号数据学堂&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;mpcps class=&quot;js_editor_new_cps&quot; data-templateid=&quot;list&quot; data-traceid=&quot;undefined&quot; data-goodssouce=&quot;1&quot; data-pid=&quot;101_13496985&quot; data-appuin=&quot;3289292454&quot; data-buffer=&quot;{&amp;quot;category_id&amp;quot;:0,&amp;quot;pid&amp;quot;:&amp;quot;101_13496985&amp;quot;,&amp;quot;biz_uin&amp;quot;:&amp;quot;3289292454&amp;quot;,&amp;quot;sku_id&amp;quot;:&amp;quot;101_13496985&amp;quot;,&amp;quot;source_id&amp;quot;:2,&amp;quot;source_name&amp;quot;:&amp;quot;京东&amp;quot;,&amp;quot;audit_state&amp;quot;:1,&amp;quot;main_img&amp;quot;:&amp;quot;https://pcm-img.zhls.qq.com/productcenter-3401ef3f--1018824-4758156902393242177/75828021431102022/a8b8504146cd33d9cfae593d98acaf16.jpg&amp;quot;,&amp;quot;product_name&amp;quot;:&amp;quot;数据标准化：企业数据治理的基石(博文视点出品)&amp;quot;,&amp;quot;current_price&amp;quot;:7900,&amp;quot;first_category_id&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;product_label_name_list&amp;quot;:[&amp;quot;京东配送&amp;quot;],&amp;quot;select_tag_name_list&amp;quot;:[],&amp;quot;appuin&amp;quot;:&amp;quot;3289292454&amp;quot;,&amp;quot;isNewCpsKOL&amp;quot;:1,&amp;quot;templateId&amp;quot;:&amp;quot;list&amp;quot;}&quot;/&gt;&lt;/p&gt;&lt;ol start=&quot;4&quot; class=&quot;list-paddingleft-1&quot; data-darkmode-bgcolor-16501764402385=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16501764402385=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16501764402385=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16501764402385=&quot;#fff|rgb(0, 0, 0)&quot; data-style=&quot;margin: 0mm 16px; padding-left: 0pt; outline: 0px; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; white-space: normal; color: rgb(0, 0, 0); text-align: left; font-size: 15px; word-spacing: 0.8px; list-style-type: none; background-color: rgb(255, 255, 255);&quot;&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.350140056022409&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;357&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5olT2uiaWT4SDWJuDpaTLficEG74RVKs0U3ic5rMm1dL8xOaqaoic0licFSnYoibLQnDWq1WS7wJxBnc96gjk19KKMxQ/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;span/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;(欢迎大家加入知识星球获取更多资讯。)&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;87560&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;span class=&quot;js_img_placeholder&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/5olT2uiaWT4SDWJuDpaTLficEG74RVKs0Ug2qyykvwib8iarmMS7KCpPxIgSIVqwqBxIria8ljCBmK4sTU8yPzFicsNA/640?wx_fmt=gif&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&quot; data-index=&quot;3&quot;&gt;&lt;span/&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;94155&quot;&gt;&lt;section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;91597&quot;&gt;&lt;section data-role=&quot;paragraph&quot; data-custom=&quot;#757576&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;&lt;p&gt;&lt;strong&gt;联系我们&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;span class=&quot;js_img_placeholder&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/NgicaibzjDx4Tn5e2hicJtzZYBQicpwYu5ibJo3F2sPraC8VWhwERZbn0PAwgZ50jafewsv40NXC2YicIibhUuIG7A9gw/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-index=&quot;4&quot;&gt;&lt;span/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;&lt;section&gt;&lt;p&gt;扫描二维码关注我们&lt;strong/&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section&gt;&lt;strong&gt;微信：SZH9543&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;邮箱：ccjiu@163.com&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;QQ：&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;2286075659&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;85891&quot; data-custom=&quot;rgb(172, 29, 16)&quot;&gt;&lt;section&gt;&lt;section data-bgless=&quot;lighten&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;87704&quot; data-custom=&quot;rgb(172, 29, 16)&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span data-brushtype=&quot;text&quot;&gt;热门文章&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI4OTI5MjQ1NA==&amp;amp;mid=2247494417&amp;amp;idx=2&amp;amp;sn=e539e74a264d10f378854bc29b5d0160&amp;amp;chksm=ec33c2d8db444bceb716451e6f1db21cb0ccb786cb5ad194203cb391382bcdd32859cb7bddb2&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;11&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;5分钟谈数据安全：概念、管什么、怎么管&lt;/a&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI4OTI5MjQ1NA==&amp;amp;mid=2247498013&amp;amp;idx=1&amp;amp;sn=c83fc4ebf4ca2c2375d8f14490498423&amp;amp;chksm=ec33d0d4db4459c25747748c261b9ef8e0e011769734788349c5d923df478467971108c81bf4&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;《数据安全复合治理与实践白皮书》正式发布【附下载】&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;《数据安全复合治理与实践白皮书》正式发布【附下载】&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI4OTI5MjQ1NA==&amp;amp;mid=2247497171&amp;amp;idx=2&amp;amp;sn=7ff335e802d1f09f5d3d67bffcd9a6ed&amp;amp;chksm=ec33dc1adb44550cb4ea11fcf6b01e166cfaf2cc232a58de7c7122673cddf8badfc1a6545778&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;数据安全工具建设分享&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;11&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;数据安全工具建设分享&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI4OTI5MjQ1NA==&amp;amp;mid=2247495062&amp;amp;idx=1&amp;amp;sn=e26d04126b9d6260ff046a801b12033a&amp;amp;chksm=ec33c45fdb444d49f0fa37c22f09791ce077524d68f7b4750d481bb55fe7a1fa5150612add78&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;从数据安全，看数据合规！&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;11&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;从数据安全，看数据合规！&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI4OTI5MjQ1NA==&amp;amp;mid=2247494417&amp;amp;idx=2&amp;amp;sn=e539e74a264d10f378854bc29b5d0160&amp;amp;chksm=ec33c2d8db444bceb716451e6f1db21cb0ccb786cb5ad194203cb391382bcdd32859cb7bddb2&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;5分钟谈数据安全：概念、管什么、怎么管&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;11&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;5分钟谈数据安全：概念、管什么、怎么管&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI4OTI5MjQ1NA==&amp;amp;mid=2247492892&amp;amp;idx=1&amp;amp;sn=5da854c1f6531f06ab9d2f960e9c2354&amp;amp;chksm=ec33ccd5db4445c310a549298dc571198fafa39a3c41aa388b87b3f85d5096e621026bb50e89&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;《数据安全法》实施在即，企业如何应对数据分类分级保护制度？&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;《数据安全法》实施在即，企业如何应对数据分类分级保护制度？&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI4OTI5MjQ1NA==&amp;amp;mid=2247492645&amp;amp;idx=1&amp;amp;sn=c8534950a7333101b44784bd5b60f61f&amp;amp;chksm=ec33cdecdb4444fa7cb84477906891b691035f7d2ebb87126a669e440ba3e053fec01460680d&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;数据治理系列6：数据安全治理之道&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;11&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;数据治理系列6：数据安全治理之道&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI4OTI5MjQ1NA==&amp;amp;mid=2247491154&amp;amp;idx=2&amp;amp;sn=0c58da7176982f17be28822711c7ea19&amp;amp;chksm=ec30379bdb47be8d9e421a787457f0b3b30bcea19151b5159e6a5ee55fc49a7612127fd1a771&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;数据治理连载漫画：什么是数据安全？&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;数据治理连载漫画：什么是数据安全？&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI4OTI5MjQ1NA==&amp;amp;mid=2247490630&amp;amp;idx=1&amp;amp;sn=1ace0fe4a943b4fa70843ec16a0d388b&amp;amp;chksm=ec30358fdb47bc991a34f0958a8e026d03525c7eaa63a6bfe103aae6991b154b528f16d92d7c&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;【附下载链接】国家工业信息安全发展中心与华为联合发布《数据安全白皮书》！&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;【附下载链接】国家工业信息安全发展中心与华为联合发布《数据安全白皮书》！&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI4OTI5MjQ1NA==&amp;amp;mid=2247489725&amp;amp;idx=1&amp;amp;sn=06270149cee826bda1c8a19d30373b72&amp;amp;chksm=ec303174db47b862d145d76a885cfcf24d34a8cba0644eee59c9e4c5d2119aed02fb1651752c&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;一图说：数据安全分类分级&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;11&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;一图说：数据安全分类分级&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI4OTI5MjQ1NA==&amp;amp;mid=2247485644&amp;amp;idx=1&amp;amp;sn=82bda7b919e6a5691974bccef71403af&amp;amp;chksm=ec302105db47a813af3110ea33700c72ecc75981b60124c770457e8250b7ea5a5460db3c6b0f&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;数据安全治理的九大要素&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;数据安全治理的九大要素&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI4OTI5MjQ1NA==&amp;amp;mid=2247484293&amp;amp;idx=1&amp;amp;sn=b903a01a0a16a1bc71604a038854ff13&amp;amp;chksm=ec302a4cdb47a35a78b72d894dc7fb07e21902db47e1ed3041b7b5b3e5ece4982e05e8374c6c&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;【数据治理实践】第十期：数据安全管理&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;11&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;【数据治理实践】第十期：数据安全管理&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span class=&quot;js_img_placeholder&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/5olT2uiaWT4QJAwXiaouVKE9kTZdRhvVw4ytiaFMmYnSnv0s7hactgB2DkPsZ8p7sAA0qU9e6EZM4gXnXA08GvVbQ/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-index=&quot;11&quot;&gt;&lt;span/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;94095&quot; data-width=&quot;77%&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section data-autoskip=&quot;1&quot;&gt;&lt;p&gt;&lt;strong&gt;我们的使命：&lt;/strong&gt;普及数据管理知识、发展数据管理工程师行业、改变中国企业数据管理现状、提高企业数据资产管理能力、推动企业走进大数据时代。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;我们的愿景：&lt;/strong&gt;凝聚行业力量、打造数据工程师全链条平台，培养不同层级数据工程师人才、构建数据工程师生态圈。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;我们的价值观：&lt;/strong&gt;分享数据管理知识，持续提升数据管理和运营能力。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span class=&quot;js_img_placeholder&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/5olT2uiaWT4QJAwXiaouVKE9kTZdRhvVw4ytiaFMmYnSnv0s7hactgB2DkPsZ8p7sAA0qU9e6EZM4gXnXA08GvVbQ/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-index=&quot;14&quot;&gt;&lt;span/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;了解更多精彩内容&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;157&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;157&quot; data-fileid=&quot;100013009&quot; data-ratio=&quot;0.9960474308300395&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;253&quot; title=&quot;35955bc4231278c0547010d784696b8.jpg&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/NgicaibzjDx4TSibobWT4iaVKroC3j9QJlwl6NZN9Q6jibc4Yzuv4In0PxmhRCPwD6ekzAKYic8bofvFlW1fTrLYFssA/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;长按，识别二维码，关注我们吧！&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;数据工程师&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;微信号：sjgcs&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;构建数据工程师生态圈&lt;/span&gt;&lt;/p&gt;&lt;/ol&gt;&lt;p&gt;&lt;mp-style-type data-value=&quot;3&quot;/&gt;&lt;/p&gt;&lt;/div&gt;

          
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>09e41461447158d9f744cfacc751184f</guid>
<title>深入Feign源码吃透Spring扩展点「扩展点实战系列」- 第446篇</title>
<link>https://toutiao.io/k/v9vc62c</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content js_underline_content             autoTypeSetting24psection&quot; id=&quot;js_content&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.48703170028818443&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/P13HW4Fm1HWQicibfEIU9ricw5Dv83Hpmbjh88kDQx4rjoXaCVnJ18HVZ4nV0opG2Er3ibforDmJSryXcIribL0nHXg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2082&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;历史文章（&lt;strong&gt;&lt;span&gt;文章&lt;/span&gt;&lt;/strong&gt;累计440+）&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;《&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzA4ODIyMzEwMg==&amp;amp;mid=2447533342&amp;amp;idx=1&amp;amp;sn=7fe54ec9948ace1c8e1568531d55678b&amp;amp;chksm=843bb90fb34c3019aa7f654da387d30aaf7c14e2798fc1dc846ea05521ba9e8fc108e97c99e9&amp;amp;token=848719710&amp;amp;lang=zh_CN&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot;&gt;&lt;span&gt;国内最全的Spring Boot系列之一&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt;》&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;《&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzA4ODIyMzEwMg==&amp;amp;mid=2447533861&amp;amp;idx=1&amp;amp;sn=11f6e9afb4cf3ba0aca4330f5b11dc0e&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot;&gt;&lt;span&gt;国内最全的Spring Boot系列之二&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt;》&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;《&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzA4ODIyMzEwMg==&amp;amp;mid=2447534510&amp;amp;idx=1&amp;amp;sn=05079e6c4a355dfde41cbd36aed36b03&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot;&gt;&lt;span&gt;国内最全的Spring Boot系列之三&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt;》&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;《&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzA4ODIyMzEwMg==&amp;amp;mid=2447535839&amp;amp;idx=1&amp;amp;sn=21776e7ceee5a705d588e647590cea27&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot;&gt;&lt;span&gt;国内最全的Spring Boot系列之四&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt;》&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;《&lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzA4ODIyMzEwMg==&amp;amp;mid=2447536783&amp;amp;idx=1&amp;amp;sn=82677579faabd7e7bf71756835f5139f&amp;amp;chksm=843bae9eb34c2788a1a02e09850cf973660686a9a541f708e319d8060f97f4483e31b4f7b881&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;‍国内最全的Spring Boot系列之&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;&lt;span&gt;&lt;span&gt;国内最全的Spring Boot&lt;/span&gt;&lt;span&gt;系列之&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span&gt;五&lt;/span&gt;&lt;span&gt;》&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzA4ODIyMzEwMg==&amp;amp;mid=2447537184&amp;amp;idx=1&amp;amp;sn=ee96d84519861478d4fc9384e30ae1a6&amp;amp;chksm=843ba831b34c2127d1cc1a795cc724874f48e2e97dfbe66234d71da50cfc8ce176fafe61f6f8&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;服务信息上报+记录请求信息+监听项目运行状态还能这么玩「扩展点系列」- 第440篇&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;&lt;span&gt;服务信息上报+记录请求信息+监听项目运行状态还能这么玩「扩展点系列」- 第440篇&lt;/span&gt;&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzA4ODIyMzEwMg==&amp;amp;mid=2447537200&amp;amp;idx=1&amp;amp;sn=2b059e2d7f5375dff879968caf1e5a5c&amp;amp;chksm=843ba821b34c2137eacf53facfbdcf4d5017df4aeaeafc6467012d3c5ec0a7a4154f2314a9da&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;配置类信息赋值为Java静态变量「扩展点实战系列》」- 第441篇&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;配置类信息赋值为Java静态变量「扩展点实战系列》」- 第441篇&lt;/a&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzA4ODIyMzEwMg==&amp;amp;mid=2447537216&amp;amp;idx=1&amp;amp;sn=90ef202c5baf40e6803f99a084485fe2&amp;amp;chksm=843ba851b34c2147b62f3ba336aa38f3b642abe86f6723cbc1a0cf788fc2e00d0d3a99b88648&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;3种方案扩展RestTemplate让其具备负载均衡（超级详细）「扩展点实战系列」- 第442篇&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;&lt;span&gt;3种方案扩展RestTemplate让其具备负载均衡（超级详细）「扩展点实战系列」- 第442篇&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzA4ODIyMzEwMg==&amp;amp;mid=2447537234&amp;amp;idx=1&amp;amp;sn=ab83d8abf01a994d79312d820c395275&amp;amp;chksm=843ba843b34c2155c25dd7172cfa72aad7825781e3434198e4171ce1728e570d7532fc0460e5&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;一个注解@LoadBalanced就能让RestTemplate拥有负载均衡的能力？「扩展点实战系列」- 第443篇&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;一个注解@LoadBalanced就能让RestTemplate拥有负载均衡的能力？「扩展点实战系列」- 第443篇&lt;/a&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzA4ODIyMzEwMg==&amp;amp;mid=2447537253&amp;amp;idx=1&amp;amp;sn=84044d8a766e55b2f38e34c6ed8020b4&amp;amp;chksm=843ba874b34c2162f029299e86a8c929a23960dd2a290739619f6cd71091d8a82b290eb514f0&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;Spring注解@Qualifier的详细用法你知道几种「扩展点实战系列」- 第444篇&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;Spring注解@Qualifier的详细用法你知道几种「扩展点实战系列」- 第444篇&lt;/a&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzA4ODIyMzEwMg==&amp;amp;mid=2447537269&amp;amp;idx=1&amp;amp;sn=90b7e324a32aa64b84bd705656dd5181&amp;amp;chksm=843ba864b34c2172635a1b517d97a536f6cfbbdeaf09d930c65f6808584adc39d49a0be086ac&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;利用Spring扩展点模拟Feign实现远程调用（干货满满）「扩展点实战系列」- 第445篇&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;利用Spring扩展点模拟Feign实现远程调用（干货满满）「扩展点实战系列」- 第445篇&lt;/span&gt;&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;师傅：徒儿，&lt;/span&gt;&lt;span&gt;你今天充电了吗&lt;/span&gt;&lt;span&gt;？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1.113345521023766&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/P13HW4Fm1HXTH7KQkzwKiaIib7XwbuB6cPMfrIPljmH6gYT7lWDTlOgjVvO1AGWZG5XwrQDIW9q6DpH0c5CeWrcg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1094&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;悟纤：充电？天啦噜，师傅我又不是新能源汽车，充电干吗？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.6287519747235387&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/P13HW4Fm1HXTH7KQkzwKiaIib7XwbuB6cP0eIuMKoC0xwoSDOIwGyPfWibic8ugDhguibqiawIZaSOsP6FPOQV5jGC4Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1266&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;师傅：你&lt;span lang=&quot;EN-US&quot;&gt;out&lt;/span&gt;了，此充电非彼充电？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;悟纤：师傅，你是要说，我学习充电了吗？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;师傅：徒儿，不赖耶，有这么意思。这里的“充电“有很多含义。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;悟纤：愿闻其详。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;师傅：你今天充电了吗？可以理解为你今天学习了吗？给你的大脑充电。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;悟纤：还有呐？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;师傅：你今天充电了吗？可以理解为你今天锻炼了吗？给你的身体充电。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;悟纤：师傅，还有吗？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;师傅：你今天充电了吗？可以理解为你今天冥想&lt;span lang=&quot;EN-US&quot;&gt;/&lt;/span&gt;瑜伽等活动？给你的心灵充电。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;师傅：总的来说，你今天充电了吗？也就是说你今天学习了吗？锻炼身体了吗&lt;span lang=&quot;EN-US&quot;&gt;?&lt;/span&gt;放空自我了吗，不同场景不同理解吧&lt;span lang=&quot;EN-US&quot;&gt;~&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;悟纤：师傅这句话好，我要时刻问我自己，今天充电了吗？提醒我时刻要学习要成长。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;师傅：那咱们开始来学习吧。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;悟纤：&lt;span lang=&quot;EN-US&quot;&gt;\(^o^)/ &lt;/span&gt;欧耶，来也&lt;span lang=&quot;EN-US&quot;&gt;~&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.7962466487935657&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/P13HW4Fm1HXTH7KQkzwKiaIib7XwbuB6cPbUNTv6QHxjbG3j8vD97Uv66EAw6QGXrDsfHRW9em5e5fuwgPnaSk8g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1492&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;导读&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在前面的小节，我们简单的模拟了一下&lt;span lang=&quot;EN-US&quot;&gt;FeignClient&lt;/span&gt;的实现方式，对于&lt;span lang=&quot;EN-US&quot;&gt;FeignClient&lt;/span&gt;具体又是怎么实现的呢？实现的核心点是否也是使用了&lt;span lang=&quot;EN-US&quot;&gt;Spring&lt;/span&gt;的扩展点呢？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;带着这些疑问，我们深入到&lt;span lang=&quot;EN-US&quot;&gt;FeignClient&lt;/span&gt;的源码一探究竟。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span lang=&quot;EN-US&quot;/&gt;&lt;span lang=&quot;EN-US&quot;&gt;👇&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;🏻&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;👇&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;🏻&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;👇&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;🏻&lt;/span&gt;&lt;strong&gt;&lt;span&gt;扩展点实战系列&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span lang=&quot;EN-US&quot;&gt;01.&lt;/span&gt;&lt;span&gt;《&lt;/span&gt;&lt;span&gt;观察者模式实际应用场景「扩展点实战系列」&lt;/span&gt;&lt;span&gt;》&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span lang=&quot;EN-US&quot;&gt;02.&lt;/span&gt;&lt;span&gt;《&lt;/span&gt;&lt;span&gt;服务信息上报&lt;span lang=&quot;EN-US&quot;&gt;+&lt;/span&gt;记录请求信息&lt;span lang=&quot;EN-US&quot;&gt;+&lt;/span&gt;监听项目运行状态还能这么玩&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;🐴&lt;/span&gt;&lt;span&gt;「扩展点实战系列」&lt;/span&gt;&lt;span&gt;》&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span lang=&quot;EN-US&quot;&gt;03.&lt;/span&gt;&lt;span&gt;《&lt;/span&gt;&lt;span&gt;配置类信息赋值为&lt;span lang=&quot;EN-US&quot;&gt;Java&lt;/span&gt;静态变量「扩展点实战系列》」&lt;/span&gt;&lt;span&gt;》&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span lang=&quot;EN-US&quot;&gt;04. &lt;/span&gt;&lt;span&gt;《&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;3&lt;/span&gt;&lt;span&gt;种方案扩展&lt;span lang=&quot;EN-US&quot;&gt;RestTemplate&lt;/span&gt;让其具备负载均衡（超级详细）「扩展点实战系列」&lt;/span&gt;&lt;span&gt;》&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span lang=&quot;EN-US&quot;&gt;05.&lt;/span&gt;&lt;span&gt;《&lt;/span&gt;&lt;span&gt;一个注解&lt;span lang=&quot;EN-US&quot;&gt;@LoadBalanced&lt;/span&gt;就能让&lt;span lang=&quot;EN-US&quot;&gt;RestTemplate&lt;/span&gt;拥有负载均衡的能力？「扩展点实战系列」》&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span lang=&quot;EN-US&quot;&gt;06.&lt;/span&gt;&lt;span&gt;《&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;Spring&lt;/span&gt;&lt;span&gt;注解&lt;span lang=&quot;EN-US&quot;&gt;@Qualifier&lt;/span&gt;的详细用法你知道几种「扩展点实战系列」&lt;/span&gt;&lt;span&gt;》&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span lang=&quot;EN-US&quot;&gt;07.&lt;/span&gt;&lt;span&gt;《&lt;/span&gt;&lt;span&gt;利用&lt;span lang=&quot;EN-US&quot;&gt;Spring&lt;/span&gt;扩展点模拟&lt;span lang=&quot;EN-US&quot;&gt;FeignClient&lt;/span&gt;实现远程调用（干货满满）「扩展点实战系列」&lt;/span&gt;&lt;span&gt;》&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span lang=&quot;EN-US&quot;&gt;08.&lt;/span&gt;&lt;span&gt;《&lt;/span&gt;&lt;span&gt;深入&lt;span lang=&quot;EN-US&quot;&gt;FeignClient&lt;/span&gt;源码吃透&lt;span lang=&quot;EN-US&quot;&gt;Spring&lt;/span&gt;扩展点「扩展点实战系列」&lt;/span&gt;&lt;span&gt;》&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span lang=&quot;EN-US&quot;&gt;09.&lt;/span&gt;&lt;span&gt;「待拟定」&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;一、&lt;span lang=&quot;EN-US&quot;&gt;FeignClient&lt;/span&gt;的使用&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;首先我们先看下&lt;span lang=&quot;EN-US&quot;&gt;FeignClient&lt;/span&gt;的使用。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot;&gt;1.1 &lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;启用&lt;span lang=&quot;EN-US&quot;&gt;Feign&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;首先启用&lt;span lang=&quot;EN-US&quot;&gt;Feign&lt;/span&gt;指定要扫描的包路径，也可以不指定，使用默认的启动路径：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.0819277108433735&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/P13HW4Fm1HXTH7KQkzwKiaIib7XwbuB6cPlXBnnnE1cgrjIPzzSIDq0hMwkot2ED9eykEicRbj5PvFibdCcXib28I5w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;830&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;核心代码是：&lt;span lang=&quot;EN-US&quot;&gt;@EnableFeignClients&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot;&gt;1.2 &lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;使用&lt;span lang=&quot;EN-US&quot;&gt;Feign&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;看下&lt;span lang=&quot;EN-US&quot;&gt;Feign&lt;/span&gt;如何使用的：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.4506024096385542&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/P13HW4Fm1HXTH7KQkzwKiaIib7XwbuB6cPlFHOjiba6TaWXHw3k7W9ehKqkVKl7iaPHMMVLtuO2jjBfETIRdpdgu4Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;830&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;说明：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;（&lt;span lang=&quot;EN-US&quot;&gt;1&lt;/span&gt;）&lt;span lang=&quot;EN-US&quot;&gt;@RequestLine&lt;/span&gt;是&lt;span lang=&quot;EN-US&quot;&gt;Feign&lt;/span&gt;默认提供的契约注解。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;（&lt;span lang=&quot;EN-US&quot;&gt;2&lt;/span&gt;）&lt;span lang=&quot;EN-US&quot;&gt;@RequestMapping&lt;/span&gt;这是集成了&lt;span lang=&quot;EN-US&quot;&gt;Spring MVC&lt;/span&gt;的注解。这个和我们自己实现的&lt;span lang=&quot;EN-US&quot;&gt;@FeignMethod&lt;/span&gt;使用起来很像。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot;&gt;1.3 &lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;调用&lt;span lang=&quot;EN-US&quot;&gt;OrderInfoFeignService&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在&lt;span lang=&quot;EN-US&quot;&gt;Controller&lt;/span&gt;中调用：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.20240963855421687&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/P13HW4Fm1HXTH7KQkzwKiaIib7XwbuB6cPCc7EUSian9TdHz5icvnTdLIEyIO6z3taQqnnq8FQbQkDVx13qJDGcrNg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;830&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;到这里使用的层面，和前面的小节我们自己模拟的&lt;span lang=&quot;EN-US&quot;&gt;FeignClient&lt;/span&gt;还是很相似的，那么底层的实现源码是否是一样的呐？接着往下看。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;二、&lt;span lang=&quot;EN-US&quot;&gt;FeignClient&lt;/span&gt;源码分析&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;接下来深入源码看看具体的&lt;span lang=&quot;EN-US&quot;&gt;FeignClient&lt;/span&gt;一些实现。这里我们只关注和&lt;span lang=&quot;EN-US&quot;&gt;Spring&lt;/span&gt;扩展点相关的，毕竟这一系列的主角是&lt;span lang=&quot;EN-US&quot;&gt;Spring&lt;/span&gt;扩展点，而并非是&lt;span lang=&quot;EN-US&quot;&gt;Feign&lt;/span&gt;。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot;&gt;2.1&lt;/span&gt;&lt;/strong&gt;&lt;span lang=&quot;EN-US&quot;&gt; &lt;/span&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot;&gt;EnableFeignClients&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;先看下入口注解类&lt;span lang=&quot;EN-US&quot;&gt;EnableFeignClients&lt;/span&gt;：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5228915662650603&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/P13HW4Fm1HXTH7KQkzwKiaIib7XwbuB6cPD39MD3MJSO3r2YaAhMpEMh0AjqhOUuz9yibicFeoLpmFgOlvKhX3T5ww/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;830&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;说明：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;（&lt;span lang=&quot;EN-US&quot;&gt;1&lt;/span&gt;）属性&lt;span lang=&quot;EN-US&quot;&gt;basePackages&lt;/span&gt;允许指定扫描的包路径。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;（&lt;span lang=&quot;EN-US&quot;&gt;2&lt;/span&gt;）&lt;span lang=&quot;EN-US&quot;&gt;@Import&lt;/span&gt;：使用&lt;span lang=&quot;EN-US&quot;&gt;@Import&lt;/span&gt;导入的方式实现把实例&lt;span lang=&quot;EN-US&quot;&gt;FeignClientsRegistrar&lt;/span&gt;加入到&lt;span lang=&quot;EN-US&quot;&gt;Spring&lt;/span&gt;的&lt;span lang=&quot;EN-US&quot;&gt;IOC&lt;/span&gt;容器中。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;至于&lt;span lang=&quot;EN-US&quot;&gt;FeignClientsRegistrar&lt;/span&gt;做了什么，往下看&lt;span lang=&quot;EN-US&quot;&gt;~&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot;&gt;2.2&lt;/span&gt;&lt;/strong&gt;&lt;span lang=&quot;EN-US&quot;&gt; &lt;/span&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot;&gt;FeignClientsRegistrar&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;进入到类&lt;span lang=&quot;EN-US&quot;&gt;FeignClientsRegistrar&lt;/span&gt;看下：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.2819277108433735&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/P13HW4Fm1HXTH7KQkzwKiaIib7XwbuB6cP6hIQHQ63tL8L6yzGCIdsMBaOLEo2ufg4IXM8kjp5KZ5jNFdXyQu1gg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;830&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;该类最重要的就是实现了接口&lt;span lang=&quot;EN-US&quot;&gt;ImportBeanDefinitionRegistrar&lt;/span&gt;，那么就要实现相应的方法&lt;span lang=&quot;EN-US&quot;&gt;registerBeanDefinitions&lt;/span&gt;，找到该方法看下：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.1614457831325301&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/P13HW4Fm1HXTH7KQkzwKiaIib7XwbuB6cP4yNRGgukS4jqibcgbOxibia54bDMX9DOWv14La8P2OxvKS1dqChTgI0qw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;830&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这里有两个方法，通过方法名称可以看出一个注册默认的配置信息，一个是注册&lt;span lang=&quot;EN-US&quot;&gt;FeignClients&lt;/span&gt;，我们能看出核心的应该是第二个方法。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这里也顺带看下第一个方法做了什么&lt;span lang=&quot;EN-US&quot;&gt;?&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.35903614457831323&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/P13HW4Fm1HXTH7KQkzwKiaIib7XwbuB6cPS0LarsLZADAV9NdmLVgcE1icWoNULWASlnOQGiaCyL1wSP7pIeIuIG1w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;830&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;主要是处理&lt;span lang=&quot;EN-US&quot;&gt;EnableFeignClients&lt;/span&gt;注解上的信息。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;看下第二个方法&lt;span lang=&quot;EN-US&quot;&gt;registerFeignClients()&lt;/span&gt;：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.4433734939759036&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/P13HW4Fm1HXTH7KQkzwKiaIib7XwbuB6cPcHqDXAlcKb0JwBibxWypo2H48764L5Q0VjfEs6HuFCZBwGicbcc20LibQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;830&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.39759036144578314&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/P13HW4Fm1HXTH7KQkzwKiaIib7XwbuB6cPHBlz1xgnloGSx95Ww7Eg6sTe7jfMhIOZVjknOo3ne7WEepuFHk6heQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;830&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;说明：通过&lt;span lang=&quot;EN-US&quot;&gt;ClassPathScanningCandidateComponentProvider&lt;/span&gt;扫描&lt;span lang=&quot;EN-US&quot;&gt;@EnableFeignClients&lt;/span&gt;设置的包路径下配置了注解&lt;span lang=&quot;EN-US&quot;&gt;@FeignClient&lt;/span&gt;的接口信息。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;然后进行注册，这里还没有看到具体的注册代码，而是又调用了一个方法&lt;span lang=&quot;EN-US&quot;&gt;registerFeignClient()&lt;/span&gt;：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.7542168674698795&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/P13HW4Fm1HXTH7KQkzwKiaIib7XwbuB6cPIRtnkeXPrJbF5veUCO09HhXCu71gkeoicwp36rkvyehEZ2C7rz7Nwtw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;830&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;使用了&lt;span lang=&quot;EN-US&quot;&gt;BeanDefinitionBuilder&lt;/span&gt;添加各种属性，从而构造&lt;span lang=&quot;EN-US&quot;&gt;BeanDefinition&lt;/span&gt;，具体注册那一行关键代码，需要进入到方法&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span lang=&quot;EN-US&quot;&gt;BeanDefinitionReaderUtils.registerBeanDefinition&lt;/span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.36626506024096384&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/P13HW4Fm1HXTH7KQkzwKiaIib7XwbuB6cPoan7u6hwkMSUJFURM1OJtumHO3wJCOr1I6XGp7OzfxjZzwUepiaiafCw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;830&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot;&gt;2.3&lt;/span&gt;&lt;/strong&gt;&lt;span lang=&quot;EN-US&quot;&gt; &lt;/span&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot;&gt;FeignClientFactoryBean&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;啊哈，怎么没看到为&lt;span lang=&quot;EN-US&quot;&gt;Bean&lt;/span&gt;定义设置&lt;span lang=&quot;EN-US&quot;&gt;bean class&lt;/span&gt;呢？细看之前截图的一段代码：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.12530120481927712&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/P13HW4Fm1HXTH7KQkzwKiaIib7XwbuB6cPP2WVbhfPMib7zc1w2fu3PSAnN9nwxAYc90QyKQPVs5P2OWHohWC3sicg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;830&quot;/&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.10843373493975904&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/P13HW4Fm1HXTH7KQkzwKiaIib7XwbuB6cPtISFjicYZxxuvcSCdX9MjC3icicnXiaOApZhwsRYgxM7KloTz33fMF6FPA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;830&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在这里指定了&lt;span lang=&quot;EN-US&quot;&gt;BeanClass&lt;/span&gt;，接下里来看下&lt;span lang=&quot;EN-US&quot;&gt;FeignClientFactoryBean&lt;/span&gt;的关键代码：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.060240963855421686&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/P13HW4Fm1HXTH7KQkzwKiaIib7XwbuB6cPEia0nYslSRJch8ctmUyRsc11OgrSytPxh5Q7XZllj8Rp1uiaw85rBDxQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;830&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;是不是看到了实现了接口&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;FactoryBean&lt;/span&gt;&lt;span&gt;，是不是我们实现的思路是一样的，看下&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;getObject&lt;/span&gt;&lt;span&gt;方法：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.6289156626506024&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/P13HW4Fm1HXTH7KQkzwKiaIib7XwbuB6cPZujd0VpyPfqIkhyHQb04BFBjoL2zdH414KG2yibibxctlcsWrhZvkC9A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;830&quot;/&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.4530120481927711&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/P13HW4Fm1HXTH7KQkzwKiaIib7XwbuB6cPYo3VWJJicc0mJ1AzBov9KCdxZbAg7xb3aicWuKsII9Uh0nkNHe4IvxZA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;830&quot;/&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这里一丢代码，核心的就是最后&lt;span lang=&quot;EN-US&quot;&gt;targeter.target()&lt;/span&gt;这个方法，调用&lt;span lang=&quot;EN-US&quot;&gt;Targeter&lt;/span&gt;的&lt;span lang=&quot;EN-US&quot;&gt;target&lt;/span&gt;方法会使用动态代理生成&lt;span lang=&quot;EN-US&quot;&gt;@FeignClient&lt;/span&gt;接口的代理对象：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.18795180722891566&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/P13HW4Fm1HXTH7KQkzwKiaIib7XwbuB6cPWqXsrWG5CNYjsm1bzewV8fmVXOu7etPSc4CDib88VMLE6H3j1icd2mfA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;830&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.6&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/P13HW4Fm1HXTH7KQkzwKiaIib7XwbuB6cP8zicXc0WEKkoibtBEVsGTMqMcPEonG8gIBZwJtia5VpswuQicFYH9219Dw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;830&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;是不是这里代码都看懵了，不重要，你只需要能看到&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;InvocationHandlerFactory&lt;/span&gt;&lt;span&gt;就可以：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.40963855421686746&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/P13HW4Fm1HXTH7KQkzwKiaIib7XwbuB6cPNp13Hb054047Rj9CyYOcLNJLdZLico3Mt3mToBLAvbIZyGlgz9b386g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;830&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span lang=&quot;EN-US&quot;&gt;InvocationHandler&lt;/span&gt;&lt;span&gt;就很熟悉了吧，&lt;span lang=&quot;EN-US&quot;&gt;JDK&lt;/span&gt;的动态代理方法增强处理器。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;总结&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;从增加&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;@EnableFeignClients&lt;/span&gt;&lt;span&gt;注解开始，当我们启动应用的时候，系统就会扫描所有的包里面带有&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;@FeignClient&lt;/span&gt;&lt;span&gt;接口的类，并为此生成&lt;/span&gt;&lt;span&gt;代理对象&lt;/span&gt;&lt;span&gt;，这个代理对象会设置我们写的各种配置与拦截器，并最终注入到&lt;span lang=&quot;EN-US&quot;&gt;Spring&lt;/span&gt;的&lt;span lang=&quot;EN-US&quot;&gt;IOC&lt;/span&gt;容器中，当我们调用&lt;span lang=&quot;EN-US&quot;&gt;@&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;FeignClient&lt;/span&gt;&lt;span&gt;接口的类的方法时，其实是&lt;/span&gt;&lt;span&gt;调用生成的代理类的方法&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/div&gt;

          
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>c7bb96a68696dad3452c896470ca38e8</guid>
<title>招募不到维护者，Go语言Web工具包Gorilla归档</title>
<link>https://toutiao.io/k/3cw3v5d</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;profile_inner&quot;&gt;
                  &lt;strong class=&quot;profile_nickname&quot;&gt;OSC开源社区&lt;/strong&gt;
                  &lt;img class=&quot;profile_avatar&quot; id=&quot;js_profile_qrcode_img&quot; src=&quot;&quot; alt=&quot;&quot;/&gt;

                  &lt;p class=&quot;profile_meta&quot;&gt;
                  &lt;label class=&quot;profile_meta_label&quot;&gt;Weixin ID&lt;/label&gt;
                  &lt;span class=&quot;profile_meta_value&quot;&gt;oschina2013&lt;/span&gt;
                  &lt;/p&gt;

                  &lt;p class=&quot;profile_meta&quot;&gt;
                  &lt;label class=&quot;profile_meta_label&quot;&gt;About Feature&lt;/label&gt;
                  &lt;span class=&quot;profile_meta_value&quot;&gt;开源中国，为开发者服务&lt;/span&gt;
                  &lt;/p&gt;
                &lt;/div&gt;
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>