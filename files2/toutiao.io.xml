<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>7415cfcb4f4de2cb8292a90a760fa23f</guid>
<title>如何利用 MySQL 5.7 提供的虚拟列来提高查询效率</title>
<link>https://toutiao.io/k/o8wbfmb</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                                       &quot; id=&quot;js_content&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.35714285714285715&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/fwD4NHiaLx1bb1Pa3LgxGf0pZ5RYutSlibQfs54zykxaqxxuFgJPUfwcGKk08zZbE1zckIiaictVEp4H9v1Fz7H77Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;28&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;2.9166666666666665&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/FIhicRX8BdrJ8en8Qr3rtQDICT757Ks7rfSsCG84aulyVtO6r4XV6b4CJlZq1GPmF5BUpEEhHWd2C7pdpDFRs1w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;24&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;点击上方&lt;span data-mid=&quot;&quot;&gt;蓝字&lt;/span&gt;关注我们&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;2.9166666666666665&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/8c34gzI3upGbew1Vt8HoqWem9C36hPgguK9n0kaX9rIVdJicibLIfQP8qiboC8oNs0GhkyNqY752YdYS4XAAQslJA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;24&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.35714285714285715&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/icB78T5eiataMwctOmwWQtzDh64UEnC0ddEJHKBotSNQ7OvL12fpbXbNZJrfe1iacAsXDsQfXWROBIqfJX2woRzUQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;28&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;h1 data-mid=&quot;&quot;&gt;01&lt;/h1&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;&lt;span&gt;前言&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在我们日常开发过程中，有时候因为对索引列进行函数调用，导致索引失效。举个例子，比如我们要按月查询记录，而当我们 表中只存时间，如果我们使用如下语句，其中create_time为索引列&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-preserve=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;select&lt;/span&gt; &lt;span&gt;count&lt;/span&gt;(*) &lt;span&gt;from&lt;/span&gt; &lt;span&gt;user&lt;/span&gt; &lt;span&gt;where&lt;/span&gt; &lt;span&gt;MONTH&lt;/span&gt;(create_time) = &lt;span&gt;5&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;虽然可能查到正确的结果，但通过explain我们会发现没走索引。因此我们为了能确保使用索引，我们可能会改成&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-preserve=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;select&lt;/span&gt; &lt;span&gt;count&lt;/span&gt;(*) &lt;span&gt;from&lt;/span&gt; &lt;span&gt;user&lt;/span&gt; &lt;span&gt;where&lt;/span&gt; create_time &lt;span&gt;BETWEEN&lt;/span&gt; &lt;span&gt;&#x27;2022-05-01&#x27;&lt;/span&gt; &lt;span&gt;AND&lt;/span&gt; &lt;span&gt;&#x27;2022-06-01&#x27;&lt;/span&gt;;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;或者干脆在数据库表中冗余一个月份的列字段，并对这个月份创建索引。如果我们使用的mysql是5.7版本，我们则可以使用mysql5.7版本提供的一个新特性--&lt;/span&gt;&lt;strong&gt;虚拟列&lt;/strong&gt;&lt;span&gt;来达到上述效果&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;h1 data-mid=&quot;&quot;&gt;02&lt;/h1&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;&lt;span&gt;虚拟列&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;在mysql5.7支持2种虚拟列virtual columns 和 stored columns 。两者的区别是virtual 只是在读行的时候计算结果，但在物理上是不存储，因此不占存储空间，且仅在InnoDB引擎上建二级索引，而stored 则是当行数据进行插入或更新时计算并存储的，是需要占用物理空间的，支持在MyISAM和InnoDB引擎创建索引&lt;/p&gt;&lt;p&gt;&lt;strong&gt;mysql5.7 默认的虚拟列类型为virtual columns&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;h1 data-mid=&quot;&quot;&gt;01&lt;/h1&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;创建虚拟列语法&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-preserve=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;ALTER&lt;/span&gt; &lt;span&gt;TABLE&lt;/span&gt; 表名称 &lt;span&gt;add&lt;/span&gt; &lt;span&gt;column&lt;/span&gt; 虚拟列名称 虚拟列类型 [&lt;span&gt;GENERATED&lt;/span&gt; &lt;span&gt;ALWAYS&lt;/span&gt;] &lt;span&gt;as&lt;/span&gt; (表达式) [&lt;span&gt;VIRTUAL&lt;/span&gt; | &lt;span&gt;STORED&lt;/span&gt;];&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;h1 data-mid=&quot;&quot;&gt;02&lt;/h1&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;使用虚拟列注意事项&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;a、衍生列的定义可以修改，但virtual和stored之间不能相互转换，必要时需要删除重建&lt;/p&gt;&lt;p&gt;b、虚拟列字段只读，不支持 INSRET 和 UPDATE&lt;/p&gt;&lt;p&gt;c、只能引用本表的非 generated column 字段，不可以引用其它表的字段&lt;/p&gt;&lt;p&gt;d、使用的表达式和操作符必须是 Immutable 属性，比如不能使用 CONNECTION_ID(), CURRENT_USER(), NOW()&lt;/p&gt;&lt;p&gt;e、可以将已存在的普通列转化为stored类型的衍生列，但virtual类型不行；同样的，可以将stored类型的衍生列转化为普通列，但virtual类型的不行&lt;/p&gt;&lt;p&gt;f、虚拟列定义不允许使用自增 (AUTO_INCREMENT)，也不允许使用自增基列&lt;/p&gt;&lt;p&gt;g、虚拟列允许修改表达式，但不允许修改存储方式（只能通过删除重新创建来修改）&lt;/p&gt;&lt;p&gt;h、如果虚拟列用作索引，会有一个缺点值会存储两次。一次用作虚拟列的值，一次用作索引中的值&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;h1 data-mid=&quot;&quot;&gt;03&lt;/h1&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;虚拟列的使用场景&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;a、虚拟列可以简化和统一查询，将复杂条件定义为生成的列，可以在查询时直接使用虚拟列（代替视图）&lt;/p&gt;&lt;p&gt;b、存储虚拟列可以用作实例化缓存，以用于动态计算成本高昂的复杂条件&lt;/p&gt;&lt;p&gt;c、虚拟列可以模拟功能索引，并且可以使用索引，这对与无法直接使用索引的列（JSON 列）非常有用&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;h1 data-mid=&quot;&quot;&gt;03&lt;/h1&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;&lt;span&gt;示例&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;因为mysql5.7也支持json列，因此本示例就以json和虚拟列为例子演示一下示例&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;h1 data-mid=&quot;&quot;&gt;01&lt;/h1&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;创建示例表&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-preserve=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;CREATE&lt;/span&gt; &lt;span&gt;TABLE&lt;/span&gt; &lt;span&gt;`t_user_json`&lt;/span&gt; (&lt;br mpa-from-tpl=&quot;t&quot;/&gt;  &lt;span&gt;`id`&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; AUTO_INCREMENT,&lt;br mpa-from-tpl=&quot;t&quot;/&gt;  &lt;span&gt;`user_info`&lt;/span&gt; &lt;span&gt;json&lt;/span&gt; &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt;,&lt;br mpa-from-tpl=&quot;t&quot;/&gt;  &lt;span&gt;`create_time`&lt;/span&gt; datetime &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;CURRENT_TIMESTAMP&lt;/span&gt;,&lt;br mpa-from-tpl=&quot;t&quot;/&gt;  PRIMARY &lt;span&gt;KEY&lt;/span&gt; (&lt;span&gt;`id`&lt;/span&gt;)&lt;br mpa-from-tpl=&quot;t&quot;/&gt;) &lt;span&gt;ENGINE&lt;/span&gt;=&lt;span&gt;InnoDB&lt;/span&gt; &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;CHARSET&lt;/span&gt;=utf8mb4;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;h1 data-mid=&quot;&quot;&gt;02&lt;/h1&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;创建虚拟列&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;注：&lt;/strong&gt;&lt;span&gt; 虚拟列可以在建表语句时候，直接创建即可。本示例是为了突出虚拟列语法&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-preserve=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;ALTER&lt;/span&gt; &lt;span&gt;TABLE&lt;/span&gt; t_user_json &lt;span&gt;ADD&lt;/span&gt; &lt;span&gt;COLUMN&lt;/span&gt; v_user_name &lt;span&gt;VARCHAR&lt;/span&gt;(&lt;span&gt;50&lt;/span&gt;) &lt;span&gt;GENERATED&lt;/span&gt; &lt;span&gt;ALWAYS&lt;/span&gt; &lt;span&gt;AS&lt;/span&gt; (JSON_UNQUOTE(json_extract(user_info,&lt;span&gt;&#x27;$.username&#x27;&lt;/span&gt;)));&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;正常我们的json语句如下&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-preserve=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;pre&gt;&lt;code&gt;{&lt;span&gt;&quot;age&quot;&lt;/span&gt;: &lt;span&gt;23&lt;/span&gt;, &lt;span&gt;&quot;email&quot;&lt;/span&gt;: &lt;span&gt;&quot;likairui@qq.com&quot;&lt;/span&gt;, &lt;span&gt;&quot;mobile&quot;&lt;/span&gt;: &lt;span&gt;&quot;89136682644&quot;&lt;/span&gt;, &lt;span&gt;&quot;fullname&quot;&lt;/span&gt;: &lt;span&gt;&quot;李凯瑞&quot;&lt;/span&gt;, &lt;span&gt;&quot;username&quot;&lt;/span&gt;: &lt;span&gt;&quot;likairui&quot;&lt;/span&gt;}&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;p&gt;我们通过JSON_UNQUOTE来去除双引号，否则到时候生成的虚拟列v_user_name 的值会变成&quot;likairui&quot;，而实际我们需要的字段值应该likairui&lt;/p&gt;&lt;p&gt;因为mysql5.7的json不是本文的重点，本文就不论述了，如果对mysql5.7 json语法函数感兴趣的朋友可以查看如下链接&lt;/p&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;https://dev.mysql.com/doc/refman/5.7/en/json-functions.html&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.14285714285714285&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/NibWoZibcsqUCMGC12VemUm73To91bHUIQwUTAfqX2D1uAhuKCqfM9BVaEt6hSicINnmYjczlrdbiaffPjaYFyHWhQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;140&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;h1 data-mid=&quot;&quot;&gt;03&lt;/h1&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;为虚拟列创建索引&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-preserve=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;ALTER&lt;/span&gt; &lt;span&gt;TABLE&lt;/span&gt; t_user_json &lt;span&gt;ADD&lt;/span&gt; &lt;span&gt;INDEX&lt;/span&gt; idx_v_user_name(v_user_name);&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;h1 data-mid=&quot;&quot;&gt;04&lt;/h1&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;查看生成的表数据&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.17706576728499157&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/NW0r9OxcmxL95WPGz0pIDlwn3rl9M03c8fmbFKvdz5Gu8FM4eGmmjoicm0DxD4vQpk1l9NhrY3LBTHXcWhhR2tg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1186&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;h1 data-mid=&quot;&quot;&gt;05&lt;/h1&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;查看是否使用了索引&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-preserve=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;EXPLAIN&lt;/span&gt;  &lt;span&gt;SELECT&lt;/span&gt;  &lt;span&gt;id&lt;/span&gt;,user_info,create_time,v_user_name &lt;span&gt;AS&lt;/span&gt; username,v_date_month &lt;span&gt;AS&lt;/span&gt; &lt;span&gt;MONTH&lt;/span&gt;  &lt;span&gt;FROM&lt;/span&gt; t_user_json &lt;span&gt;WHERE&lt;/span&gt; (v_user_name = &lt;span&gt;&#x27;likairui&#x27;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.0692249811888638&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/NW0r9OxcmxL95WPGz0pIDlwn3rl9M03cu0u7NGH019ubtv8pgtTAmggicDX0UjYMz47f7Yo867W77HiatIibDhyGw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1329&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;注：&lt;/strong&gt;&lt;span&gt; 在mysql8.0版本可以使用EXPLAIN ANALYZE，他可以查看sql的耗时情况&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-preserve=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;EXPLAIN&lt;/span&gt; &lt;span&gt;ANALYZE&lt;/span&gt; &lt;span&gt;SELECT&lt;/span&gt;  &lt;span&gt;id&lt;/span&gt;,user_info,create_time,v_user_name &lt;span&gt;AS&lt;/span&gt; username,v_date_month &lt;span&gt;AS&lt;/span&gt; &lt;span&gt;MONTH&lt;/span&gt;  &lt;span&gt;FROM&lt;/span&gt; t_user_json &lt;span&gt;WHERE&lt;/span&gt; (v_user_name = &lt;span&gt;&#x27;cengwen&#x27;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.06711915535444947&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/NW0r9OxcmxL95WPGz0pIDlwn3rl9M03ciaMOQUshicMrqvvNPhd40TEkiaaWetxhSb8TCmHDpkhQLSU7tKkTFicjpg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1326&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;h1 data-mid=&quot;&quot;&gt;06&lt;/h1&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;代码层面的小细节&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;因为虚拟列是不能进行插入和更新的，因此使用orm框架的时候，要特别注意这点。比如使用mybatis-plus时，要记得在实体的虚拟列的映射字段上加上如下注解&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-preserve=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;@TableField&lt;/span&gt;(value = &lt;span&gt;&quot;v_user_name&quot;&lt;/span&gt;,insertStrategy = FieldStrategy.NEVER,updateStrategy = FieldStrategy.NEVER)&lt;br mpa-from-tpl=&quot;t&quot;/&gt;    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;String&lt;/span&gt; username;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;加上这个注解后，虚拟列字段就不会进行更新或者插入&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;h1 data-mid=&quot;&quot;&gt;04&lt;/h1&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;&lt;span&gt;总结&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;本文基于mysql5.7大体介绍了一下虚拟列，如果是使用mysql8.0.13以上的版本，可以函数索引，他的实现方式本质也是基于虚拟列实现。所谓的函数索引就是在创建索引的时候，支持使用函数表达式。比如&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-preserve=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;ALTER&lt;/span&gt; &lt;span&gt;TABLE&lt;/span&gt; &lt;span&gt;user&lt;/span&gt; &lt;span&gt;ADD&lt;/span&gt; &lt;span&gt;INDEX&lt;/span&gt;((&lt;span&gt;MONTH&lt;/span&gt;(create_time)));&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;通过函数索引也可以很方便提高我们的查询效率。具体使用可以查看如下链接&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;https://dev.mysql.com/doc/refman/8.0/en/create-index.html&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.14285714285714285&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/NibWoZibcsqUCMGC12VemUm73To91bHUIQwUTAfqX2D1uAhuKCqfM9BVaEt6hSicINnmYjczlrdbiaffPjaYFyHWhQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;140&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;h1 data-mid=&quot;&quot;&gt;05&lt;/h1&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;&lt;span&gt;demo链接&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;https://github.com/lyb-geek/springboot-learning/tree/master/springboot-mysql-virtual-column&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.14285714285714285&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/NibWoZibcsqUCMGC12VemUm73To91bHUIQwUTAfqX2D1uAhuKCqfM9BVaEt6hSicINnmYjczlrdbiaffPjaYFyHWhQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;140&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;/div&gt;

          
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>c099cec17d2bda8587cc4eccdc7bf33c</guid>
<title>纯 JS 实现语雀的划词高亮功能</title>
<link>https://toutiao.io/k/rif9mzl</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;前言&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;前段时间公司需要实现一个划词评论的功能，但是到网上找了一圈发现划词评论的库并不多，而且大部分的实现都是需要破坏页面 DOM 结构的，也就是需要在页面 DOM 结构中拆分文本包裹一个 mask 标签，但是由于我们做的是在线富文本文档功能，文本的内容是可以再编辑的，如果评论破坏了 DOM 结构这样对我们编辑的时候编辑器解析就不是很友好。找到最后发现语雀实现的划词评论功能是基于 canvas 实现的，与页面结构完全解耦，但是由于语雀没有开源，所以也没办法参考他们的代码，只能顺着他们的思路自己写。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;实现效果&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;话不多说，先看看最终实现的效果：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5541591861160982&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHp0nQhkDGyMcNEUVSAynxFGNQFAKwNV7wNX09xKicjhfXQH8jV4tk0bDZJrzUBxTN8GZhtzWclb1cA/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1671&quot;/&gt;&lt;figcaption&gt;动画1.gif&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当然这个只是实现了核心功能的 demo，更多的交互和 UI 细节也可以基于这个功能进行实现。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;实现思路&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;主要思路：生成一个 canvas 元素，让 canvas 元素与需要划词高亮功能的文本容器元素等宽高，并且重叠在文本容器上，划词的时候获取划词区域的文本节点相对于文本容器的位置信息，然后通过这些位置信息进行高亮背景的渲染。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;虽然思路看起来很简单，但是具体实现的过程还是有许多注意点的，接下来我就总结一下一些实现过程中的注意点和细节。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;实现细节&lt;/span&gt;&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;1. 让 canvas 与文本容器元素重叠&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;让 canvas 与文本容器元素重叠最好的实现方式就是将 canvas 做为文本容器的直接子节点，然后设置文本容易为相对定位，将 canvas 设置为绝对定位，然后将 top、left、right、bottom 都设置为 0，这样就可以时刻保证 canvas 元素与文本容器元素始终等宽高，且 canvas 重叠在文本容器上。不过这种实现方式也有一个问题，我们把 canvas 的层级提高了，盖住了文本容器中的其他文本节点，这样就没办法进行划词了，所以这时候我们需要给 canvas 再添加一个 css 属性：&lt;code&gt;pointerEvents: &#x27;none&#x27;&lt;/code&gt;，这样就可以让 canvas 不响应鼠标事件，从而让底部文本节点可以正常划词了。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;2. 获取划词区域文本节点的位置信息&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;获取划词区域信息需要使用 &lt;code&gt;document.getSelection().getRangeAt(0)&lt;/code&gt; 来获得当前划词区域的 range 对象，在这个对象上可以获取到划词区域的起始和终止文本节点以及偏移量信息。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;const&lt;/span&gt; {&lt;br/&gt;  startContainer, &lt;span&gt;// 起始节点&lt;/span&gt;&lt;br/&gt;  startOffset, &lt;span&gt;// 起始节点偏移量&lt;/span&gt;&lt;br/&gt;  endContainer, &lt;span&gt;// 终止节点&lt;/span&gt;&lt;br/&gt;  endOffset &lt;span&gt;// 终止节点偏移量&lt;/span&gt;&lt;br/&gt;} = &lt;span&gt;document&lt;/span&gt;.getSelection().getRangeAt(&lt;span&gt;0&lt;/span&gt;)&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;虽然我们拿到了节点信息，但是怎么获得具体的位置信息呢？这时候就需要借助 &lt;code&gt;Range&lt;/code&gt; 对象的强大功能了。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;// 创建一个 range 对象&lt;/span&gt;&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; range = &lt;span&gt;document&lt;/span&gt;.createRange()&lt;br/&gt;&lt;span&gt;// 设置需要获取位置信息的文本节点以及偏移量&lt;/span&gt;&lt;br/&gt;range.setStart(startContainer, startOffset)&lt;br/&gt;range.setEnd(startContainer, startContainer.textContent.length)&lt;br/&gt;&lt;span&gt;// 通过 getBoundingClientRect 获取位置信息&lt;/span&gt;&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; rect = range.getBoundingClientRect()&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过创建 range 对象我们可以获得任何一个文本节点中的任何一段文本相对与整个页面的位置信息，然后再通过减去文本容器元素相对于整个页面的位置信息，我们就可以得到划词区域文本相对与文本容器的位置信息了。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3. 获取头尾中间的文本节点&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;虽然我们通过 &lt;code&gt;document.getSelection().getRangeAt(0)&lt;/code&gt; 获得了划词头尾节点的信息，但是头尾中间如果有其他的文本节点我们也需要进行背景高亮，那么中间的文本节点我们该怎么获得呢？这里我想到的办法是从头节点开始进行深度优先遍历，遍历到尾节点为止，然后收集遍历过程中的所有文本节点，这样我们就得到了整个划词区域内的所有文本节点，然后通过上面第 2 点的办法我们也可以得到所有文本节点的位置信息。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;// 获取 start 到 end 深度优先遍历之间的所有 Text Node 节点&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;function&lt;/span&gt; &lt;span&gt;getTextNodesByDfs&lt;/span&gt;(&lt;span&gt;start: Text, end: Text&lt;/span&gt;) &lt;/span&gt;{&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt; (start === end) &lt;span&gt;return&lt;/span&gt; []&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; iterator = nodeDfsGenerator(start, &lt;span&gt;false&lt;/span&gt;)&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; textNodes: Text[] = []&lt;br/&gt;  iterator.next()&lt;br/&gt;  &lt;span&gt;let&lt;/span&gt; value = iterator.next().value&lt;br/&gt;  &lt;span&gt;while&lt;/span&gt; (value &amp;amp;&amp;amp; value !== end) {&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (node.nodeType === &lt;span&gt;3&lt;/span&gt;) {&lt;br/&gt;      textNodes.push(value)&lt;br/&gt;    }&lt;br/&gt;    value = iterator.next().value&lt;br/&gt;  }&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt; (!value) {&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; []&lt;br/&gt;  }&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; textNodes&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;// 返回节点的深度优先迭代器&lt;/span&gt;&lt;br/&gt;&lt;span&gt;// 对于有子节点的 Node 会遍历到两次，不过 Text Node 肯定没有子节点，所以不会重复统计到&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;function&lt;/span&gt; * &lt;span&gt;nodeDfsGenerator&lt;/span&gt;(&lt;span&gt;node: Node, isGoBack = &lt;span&gt;false&lt;/span&gt;&lt;/span&gt;): &lt;span&gt;Generator&lt;/span&gt;&amp;lt;&lt;span&gt;Node&lt;/span&gt;, &lt;span&gt;void&lt;/span&gt;, &lt;span&gt;Node&lt;/span&gt;&amp;gt; &lt;/span&gt;{&lt;br/&gt;  &lt;span&gt;yield&lt;/span&gt; node&lt;br/&gt;  &lt;span&gt;// isGoBack 用于判断是否属于子节点遍历结束回退到父节点，如果是那么该节点不再遍历其子节点&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt; (!isGoBack &amp;amp;&amp;amp; node.childNodes.length &amp;gt; &lt;span&gt;0&lt;/span&gt;) {&lt;br/&gt;    &lt;span&gt;yield&lt;/span&gt; * nodeDfsGenerator(node.childNodes[&lt;span&gt;0&lt;/span&gt;], &lt;span&gt;false&lt;/span&gt;)&lt;br/&gt;  } &lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; (node.nextSibling) {&lt;br/&gt;    &lt;span&gt;yield&lt;/span&gt; * nodeDfsGenerator(node.nextSibling, &lt;span&gt;false&lt;/span&gt;)&lt;br/&gt;  } &lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; (node.parentNode) {&lt;br/&gt;    &lt;span&gt;yield&lt;/span&gt; * nodeDfsGenerator(node.parentNode, &lt;span&gt;true&lt;/span&gt;)&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;4. 处理跨行文本节点的位置信息&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其实我们之前第 2 点获取划词区域文本节点的位置信息的方案还有缺陷，对于跨行的文本节点我们如果仍然采用一个 range 去获取位置信息，那么得到的就是下面这种情况：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5354330708661418&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHp0nQhkDGyMcNEUVSAynxFGs33r7AaGiaHuYH3cKKTWYtmnewrPoaxnxK3IRgQmdJY6ibK461kZf9ibQ/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1016&quot;/&gt;&lt;figcaption&gt;动画2.gif&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;没错，位置信息是错误的，因为很明显 range 只能是一个矩形，并没有办法表示我们跨行选中时的不规则图形的位置信息。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;既然一个 range 不行，那么多个呢？所以我们的解决思路就是将一个跨行的 range 拆分成多个不跨行的 range。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;怎么拆呢？我使用的办法是通过二分法的方式去找到每一行的最后一个文本节点去拆分，怎么判断两个字符是否在同一行采用的创建一个单位长度的 range，比较 range 位置信息中的 top 是否相同来进行判断。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;// 将一个跨行的 range 切割为多个不跨行的 range&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;function&lt;/span&gt; &lt;span&gt;splitRange&lt;/span&gt;(&lt;span&gt;node: Text, startOffset: &lt;span&gt;number&lt;/span&gt;, endOffset: &lt;span&gt;number&lt;/span&gt;&lt;/span&gt;): &lt;span&gt;Range&lt;/span&gt;[] &lt;/span&gt;{&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; range = &lt;span&gt;document&lt;/span&gt;.createRange()&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; rowTop = getCharTop(node, startOffset)&lt;br/&gt;  &lt;span&gt;// 字符数小于两个不用判断是否跨行&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;// 头尾高度一致说明在同一行&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt; ((endOffset - startOffset &amp;lt; &lt;span&gt;2&lt;/span&gt;) || rowTop === getCharTop(node, endOffset - &lt;span&gt;1&lt;/span&gt;)) {&lt;br/&gt;    range.setStart(node, startOffset)&lt;br/&gt;    range.setEnd(node, endOffset)&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; [range]&lt;br/&gt;  } &lt;span&gt;else&lt;/span&gt; {&lt;br/&gt;    &lt;span&gt;const&lt;/span&gt; last = findRowLastChar(rowTop, node, startOffset, endOffset - &lt;span&gt;1&lt;/span&gt;)&lt;br/&gt;    range.setStart(node, startOffset)&lt;br/&gt;    range.setEnd(node, last + &lt;span&gt;1&lt;/span&gt;)&lt;br/&gt;    &lt;span&gt;const&lt;/span&gt; others = splitRange(node, last + &lt;span&gt;1&lt;/span&gt;, endOffset)&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; [range, ...others]&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;// 二分法找到 range 某一行的最右字符&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;function&lt;/span&gt; &lt;span&gt;findRowLastChar&lt;/span&gt;(&lt;span&gt;top: &lt;span&gt;number&lt;/span&gt;, node: Text, start: &lt;span&gt;number&lt;/span&gt;, end: &lt;span&gt;number&lt;/span&gt;&lt;/span&gt;): &lt;span&gt;number&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt; (end - start === &lt;span&gt;1&lt;/span&gt;) {&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; getCharTop(node, end) === top ? end : start&lt;br/&gt;  }&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; mid = (end + start) &amp;gt;&amp;gt; &lt;span&gt;1&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; getCharTop(node, mid) === top&lt;br/&gt;    ? findRowLastChar(top, node, mid, end)&lt;br/&gt;    : findRowLastChar(top, node, start, mid)&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;// 获取 range 某个字符位置的 top 值&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;function&lt;/span&gt; &lt;span&gt;getCharTop&lt;/span&gt;(&lt;span&gt;node: Text, offset: &lt;span&gt;number&lt;/span&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; getCharRect(node, offset).top&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;// 获取 range 某个字符位置的 DOMRect&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;function&lt;/span&gt; &lt;span&gt;getCharRect&lt;/span&gt;(&lt;span&gt;node: Text, offset: &lt;span&gt;number&lt;/span&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; range = &lt;span&gt;document&lt;/span&gt;.createRange()&lt;br/&gt;  range.setStart(node, offset)&lt;br/&gt;  range.setEnd(node, offset + &lt;span&gt;1&lt;/span&gt; &amp;gt; node.textContent!.length ? offset : offset + &lt;span&gt;1&lt;/span&gt;)&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; range.getBoundingClientRect()&lt;br/&gt;}&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这样位置信息的问题我们就彻底解决了，接下来我们就可以使用这些信息去我们的 canvas 上渲染我们想要的高亮背景效果了。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;5. 划词信息持久化与返显&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;虽然我们实现了高亮的功能，但是设想如果我们做的是划词评论功能，那么肯定还涉及到将划词信息保存到后端，但是我们这一切的开头都是从系统提供的一个 range 对象开始的，但是 range 对象上的 startContainer 和 endContainer 是保存着 DOM 节点的引用，这肯定没办法序列化存储到后端的，所以我们需要一种方式能让我们准确的找到我们想要的文本节点。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里一开始我是参考了语雀的实现方式，但是发现语雀中的每一个文本标签都有一个固定的 id，这样他们实现起来就很简单了，只需要保存对应的 id 就行，但是采用这种方式就需要你对页面的每个文本标签都设置一个文本 id，这样显然与我们最初与页面文本结构解耦的想法不符了，所以这里我采用的是类似 XPath 的方式进行储存，对于头尾节点，我们保存一个路径数组，里面储存的是从文本容器通过 childNodes 属性遍历下去找到该节点的信息，这样对于任何的页面结构我们都可以使用了。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;// 获取从文本容器到文本节点的路径信息，用于存储&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;function&lt;/span&gt; &lt;span&gt;getPath&lt;/span&gt;(&lt;span&gt;textNode: Text&lt;/span&gt;) &lt;/span&gt;{&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; path = [&lt;span&gt;0&lt;/span&gt;]&lt;br/&gt;  &lt;span&gt;let&lt;/span&gt; parentNode = textNode.parentNode&lt;br/&gt;  &lt;span&gt;let&lt;/span&gt; cur: Node = textNode&lt;br/&gt;  &lt;span&gt;while&lt;/span&gt; (parentNode) {&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (cur === parentNode.firstChild) {&lt;br/&gt;      &lt;span&gt;// this.root 为文本容器&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;if&lt;/span&gt; (parentNode === &lt;span&gt;this&lt;/span&gt;.root) {&lt;br/&gt;        &lt;span&gt;break&lt;/span&gt;&lt;br/&gt;      } &lt;span&gt;else&lt;/span&gt; {&lt;br/&gt;        cur = parentNode&lt;br/&gt;        parentNode = cur.parentNode&lt;br/&gt;        path.unshift(&lt;span&gt;0&lt;/span&gt;)&lt;br/&gt;      }&lt;br/&gt;    } &lt;span&gt;else&lt;/span&gt; {&lt;br/&gt;      cur = cur.previousSibling!&lt;br/&gt;      path[&lt;span&gt;0&lt;/span&gt;]++&lt;br/&gt;    }&lt;br/&gt;  }&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; parentNode ? path : &lt;span&gt;null&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;// 根据路径信息获取文本节点，用于返显&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;function&lt;/span&gt; &lt;span&gt;getNodeByPath&lt;/span&gt;(&lt;span&gt;path: &lt;span&gt;number&lt;/span&gt;[]&lt;/span&gt;) &lt;/span&gt;{&lt;br/&gt;  &lt;span&gt;// this.root 为文本容器&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;let&lt;/span&gt; node: Node = &lt;span&gt;this&lt;/span&gt;.root&lt;br/&gt;  &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;let&lt;/span&gt; i = &lt;span&gt;0&lt;/span&gt;; i &amp;lt; path.length; i++) {&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (node &amp;amp;&amp;amp; node.childNodes &amp;amp;&amp;amp; node.childNodes[path[i]]) {&lt;br/&gt;      node = node.childNodes[path[i]]&lt;br/&gt;    } &lt;span&gt;else&lt;/span&gt; {&lt;br/&gt;      &lt;span&gt;return&lt;/span&gt; &lt;span&gt;null&lt;/span&gt;&lt;br/&gt;    }&lt;br/&gt;  }&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; node&lt;br/&gt;}&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;源码地址&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;虽然是一个小小的功能，但是其实实现起来也是挺复杂的，所以我将这个功能封装成了一个工具库：&lt;span&gt;canvas-highlighter&lt;/span&gt;&lt;sup&gt;[1]&lt;/sup&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;里面也提供了使用这个库的一些用法的&lt;span&gt;在线演示&lt;/span&gt;&lt;sup&gt;[2]&lt;/sup&gt;，有不能实现的功能点大家也可以提 issue。&lt;span/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>2247e12ba3778b2a61ede7095fb209b6</guid>
<title>Python、R 中 5 款 Dashboard 工具</title>
<link>https://toutiao.io/k/yi3ahzh</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                                       &quot; id=&quot;js_content&quot;&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;仪表盘 (Dashboard)&lt;/strong&gt;，可简单的理解为一个交互式网页，&lt;code&gt;在其中，用户可以不懂代码，拖拖拽拽即可与数据交互、做数据探索建模分析、展示自己关注的结果&lt;/code&gt;。&lt;br/&gt;&lt;br/&gt;本文&lt;code&gt;汇总了Python/R/Julia中5款仪表盘 (Dashboard)工具&lt;/code&gt;，简单比较其使用场景、学习难度、成熟度、支持语言等。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;332&quot; data-backw=&quot;474&quot; data-fileid=&quot;100012949&quot; data-ratio=&quot;0.6997282608695652&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/UGxk62Z8n3S0iahdqKfby7JK1QB86SR4uy5fHphobMxdzVUeYXAOBN8c4E6fHlHAcmHoQVf2ejicSBlbicts4s9Pg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1472&quot;/&gt;&lt;figcaption&gt;The GitHub star history of Viola, Dash, Shiny, Streamlit, and Panel.&lt;/figcaption&gt;&lt;/figure&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;Dash&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Dash和前面介绍的plotly出自同一家公司，&lt;code&gt;可基于Python, R, Julia和 F#语言高效开发仪表盘&lt;/code&gt;，为机器学习和数据科学结果提供良好展示；&lt;br/&gt;&lt;code&gt;Dash专注于企业级仪表板的创建&lt;/code&gt;，&lt;code&gt;部分功能&lt;/code&gt;开源（人名币玩家可尝试全功能企业版本），高级API plotly-express的发布使Dash更容易上手；&lt;br/&gt;&lt;code&gt;一个简单的Python Dash例子&lt;/code&gt;，使用熟悉的iris数据集，代码存入dash.t.py中，内容如下，&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;import&lt;/span&gt; dash&lt;br/&gt;&lt;span&gt;from&lt;/span&gt; dash &lt;span&gt;import&lt;/span&gt; dcc&lt;br/&gt;&lt;span&gt;from&lt;/span&gt; dash &lt;span&gt;import&lt;/span&gt; html&lt;br/&gt;&lt;span&gt;from&lt;/span&gt; dash.dependencies &lt;span&gt;import&lt;/span&gt; Input, Output&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; plotly.express &lt;span&gt;as&lt;/span&gt; px&lt;br/&gt;&lt;br/&gt;df = px.data.iris()&lt;br/&gt;all_dims = [&lt;span&gt;&#x27;sepal_length&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;sepal_width&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;petal_length&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;petal_width&#x27;&lt;/span&gt;]&lt;br/&gt;&lt;br/&gt;app = dash.Dash(__name__)&lt;br/&gt;&lt;br/&gt;app.layout = html.Div([&lt;br/&gt;    dcc.Dropdown(id=&lt;span&gt;&quot;dropdown&quot;&lt;/span&gt;,&lt;br/&gt;                 options=[{&lt;br/&gt;                     &lt;span&gt;&quot;label&quot;&lt;/span&gt;: x,&lt;br/&gt;                     &lt;span&gt;&quot;value&quot;&lt;/span&gt;: x&lt;br/&gt;                 } &lt;span&gt;for&lt;/span&gt; x &lt;span&gt;in&lt;/span&gt; all_dims],&lt;br/&gt;                 value=all_dims[:&lt;span&gt;2&lt;/span&gt;],&lt;br/&gt;                 multi=&lt;span&gt;True&lt;/span&gt;),&lt;br/&gt;    dcc.Graph(id=&lt;span&gt;&quot;splom&quot;&lt;/span&gt;),&lt;br/&gt;])&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;@app.callback(Output(&quot;splom&quot;, &quot;figure&quot;), [Input(&quot;dropdown&quot;, &quot;value&quot;)])&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;def&lt;/span&gt; &lt;span&gt;update_bar_chart&lt;/span&gt;&lt;span&gt;(dims)&lt;/span&gt;:&lt;/span&gt;&lt;br/&gt;    fig = px.scatter_matrix(df, dimensions=dims, color=&lt;span&gt;&quot;species&quot;&lt;/span&gt;)&lt;span&gt;#plotly.express可视化&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; fig&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;app.run_server(debug=&lt;span&gt;True&lt;/span&gt;)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;python dash.t.py&lt;br/&gt;Dash is running on http://xxx/&lt;br/&gt;浏览器中打开 http://xxx/&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;367&quot; data-backw=&quot;458&quot; data-fileid=&quot;100012953&quot; data-ratio=&quot;0.8034682080924855&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/UGxk62Z8n3S0iahdqKfby7JK1QB86SR4uibUqibKK7LzBlY8SKoIhiaVy7MZNHc7m7Gn0KSLZf6k6BRqvFFhqiaxCXg/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;692&quot;/&gt;&lt;span&gt;进一步学习：&lt;/span&gt;&lt;span&gt;https://github.com/plotly/dash&lt;/span&gt;&lt;/p&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;Streamlit&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;相较于Dash，Streamlit只能基于Python开发仪表盘&lt;/code&gt;，但是&lt;code&gt;完全开源&lt;/code&gt;；&lt;br/&gt;&lt;code&gt;比Dash更容易上手，几分钟即可创建一个仪表盘&lt;/code&gt;，可节省更多时间做数据分析。&lt;br/&gt;&lt;code&gt;一个简单Python Streamlit例子&lt;/code&gt;，求任意数平方，代码存入stre.t.py中，内容如下，&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;import&lt;/span&gt; streamlit &lt;span&gt;as&lt;/span&gt; st&lt;br/&gt;&lt;br/&gt;x = st.slider(&lt;span&gt;&#x27;Select a value&#x27;&lt;/span&gt;)&lt;br/&gt;st.write(x, &lt;span&gt;&#x27;squared is&#x27;&lt;/span&gt;, x * x)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;streamlit run stre.t.py&lt;br/&gt;You can now view your Streamlit app in your browser.Local URL: http://xx&lt;br/&gt;打开http://xx&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;151&quot; data-backw=&quot;458&quot; data-fileid=&quot;100012952&quot; data-ratio=&quot;0.3311827956989247&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/UGxk62Z8n3S0iahdqKfby7JK1QB86SR4u5mAcOcqllXsDydhIFwaicIjTcG7XWTw2Xv9EW58goRgCAO3Hodeo0icA/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;930&quot;/&gt;&lt;span&gt;更复杂的例子，利用自动驾驶数据集，使用YOLO做对象检测，&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;314&quot; data-backw=&quot;558&quot; data-fileid=&quot;100012958&quot; data-ratio=&quot;0.5628571428571428&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/UGxk62Z8n3ROfhVsnDUic73NaNbCvmxbsz04olLsFLcomgJvTSRPL0iaCHeXJtMdIoBa49Y9wFljBzWqKscDCXsQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;700&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;进一步学习：https://github.com/streamlit/streamlit&lt;/p&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;Shiny&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;Shiny是R中的工具，能非常友好的融合R中的其它工具&lt;/code&gt;，譬如ggplot2等，&lt;code&gt;推荐R用户使用&lt;/code&gt;；&lt;br/&gt;&lt;code&gt;Shiny功能不及Dash强大，特别是Dash的企业收费版本&lt;/code&gt;。&lt;br/&gt;一个例子，和ggplot2一样，创建的页面非常优雅，&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;300&quot; data-backw=&quot;558&quot; data-fileid=&quot;100012950&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5374280230326296&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/UGxk62Z8n3S0iahdqKfby7JK1QB86SR4u2r3enJFzia5PQvnaXbP8NBdu1icnboZRiaq4ib8LGEFk4AagvhIZtPP20Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1042&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;进&lt;/span&gt;&lt;span&gt;一步学习：&lt;/span&gt;&lt;span&gt;https://github.com/rstudio/shiny&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;https://shiny.rstudio.com/tutorial/&lt;/span&gt;&lt;/p&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;Voila&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;Jupyter Notebook重度玩家首选&lt;/code&gt;，Voila快速将Jupyter Notebook变成仪表盘；&lt;br/&gt;Voila非常&lt;code&gt;轻量级&lt;/code&gt;，当需要将Jupy&lt;span&gt;ter Notebook结果展示给非技术团队时推荐。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;Python Voila一个简单例子&lt;/code&gt;&lt;span&gt;，&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;339&quot; data-backw=&quot;558&quot; data-fileid=&quot;100012959&quot; data-ratio=&quot;0.608355091383812&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/UGxk62Z8n3ROfhVsnDUic73NaNbCvmxbs0AicmXMyWO0vg5AZC5BQ3D6OBFpiaY3W9awFyCKW4svUNzvIarnRME5g/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;766&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span&gt;进一步学习：&lt;/span&gt;https://github.com/voila-dashboards/voila&lt;/span&gt;&lt;/p&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;Panel&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;需要快速将Jupyter Notebook变成仪表盘，但是Voila又不能充分满足这个需求时，推荐Panel&lt;/code&gt;。&lt;br/&gt;进一步学习：https://github.com/holoviz/panel&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;233&quot; data-backw=&quot;458&quot; data-fileid=&quot;100012951&quot; data-ratio=&quot;0.5104039167686658&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/UGxk62Z8n3S0iahdqKfby7JK1QB86SR4uAWo0LGBjhkEIIQZebWCicRHCdeeLLeE0smrdtvcMXuLT91lJ15D5NFQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1634&quot;/&gt;&lt;/p&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;比较结果&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比较结果汇总，&lt;strong&gt;参考6个指标&lt;/strong&gt; ：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;成熟度 (Maturity)&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;知名度 (Popularity)&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;上手难度 (Simplicity)&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;应用灵活度 (Adaptability)&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;聚焦场景 (Focus)&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;支持语言 (Language support)&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果划分分&lt;strong&gt;A、B、C三个等级:&lt;/strong&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;75&quot; data-backw=&quot;458&quot; data-fileid=&quot;100012954&quot; data-ratio=&quot;0.16417910447761194&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/UGxk62Z8n3S0iahdqKfby7JK1QB86SR4utt8RUYebGurOSOAr0ejkBU4sqMAzLJGAbdw80wNyAr1wiaicukJicwuMQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1474&quot;/&gt;&lt;/p&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;/p&gt;&lt;/section&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;-推荐阅读-&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzUwOTg0MjczNw==&amp;amp;action=getalbum&amp;amp;album_id=1429956252289024000&amp;amp;scene=173&amp;amp;from_msgid=2247488856&amp;amp;from_itemidx=1&amp;amp;count=3&amp;amp;nolastread=1#wechat_redirect&quot; textvalue=&quot;Python从入门到入魔&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;Python从入门到入魔&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzUwOTg0MjczNw==&amp;amp;action=getalbum&amp;amp;album_id=1657541931360370693&amp;amp;scene=173&amp;amp;from_msgid=2247489703&amp;amp;from_itemidx=1&amp;amp;count=3&amp;amp;nolastread=1#wechat_redirect&quot; textvalue=&quot;统计学精进&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;统计学精进&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzUwOTg0MjczNw==&amp;amp;action=getalbum&amp;amp;album_id=1393733503522783232&amp;amp;scene=173&amp;amp;from_msgid=2247489903&amp;amp;from_itemidx=1&amp;amp;count=3&amp;amp;nolastread=1#wechat_redirect&quot; textvalue=&quot;Python可视化130+篇保姆级教程&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;Python可视化130+篇保姆级教程&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUwOTg0MjczNw==&amp;amp;mid=2247488377&amp;amp;idx=1&amp;amp;sn=a1ad13919dc46ca9ac672bfc8c26a4c8&amp;amp;chksm=f90d5727ce7ade3187e333dfa70e926e91319033f4064fa66cf452ed5c9479b0d1e5d18eac7b&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;《ggplot2：数据分析与图形艺术》最新中文版&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;&lt;span&gt;《ggplot2：数据分析与图形艺术》最新中文版&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUwOTg0MjczNw==&amp;amp;mid=2247502378&amp;amp;idx=1&amp;amp;sn=f3b7de85a3b0eda4f42f45754862a407&amp;amp;chksm=f90e8e74ce79076287029576a631fa6dc63c997f4618e3005cb64337108154a6e148c377904b&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;如何驾驭ggplot2？&amp;lt;Part3&amp;gt;&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;&lt;span&gt;如何驾驭ggplot2？&amp;lt;Part3&amp;gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUwOTg0MjczNw==&amp;amp;mid=2247488764&amp;amp;idx=1&amp;amp;sn=993e0a0bef6868c126e0291d347401fd&amp;amp;chksm=f90d50a2ce7ad9b4bc241e48ea01b37e366b580c819af271c12756fd5be1a135db2608a14ac5&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;30个统计图绘制原理+使用场景+R代码&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;&lt;span&gt;30个统计图绘制原理+使用场景+R代码&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUwOTg0MjczNw==&amp;amp;mid=2247501164&amp;amp;idx=1&amp;amp;sn=75e6ee3a2f79943969fc6ec4fe8b5662&amp;amp;chksm=f90e8132ce7908241467ebb87c353df7d106866bfcdc7b16237b92da450cbdf16e4e851baaa5&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;R Graphics Cookbook超长中译教程&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;&lt;span&gt;R Graphics Cookbook超长中译教程&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzUwOTg0MjczNw==&amp;amp;action=getalbum&amp;amp;album_id=1542993484276613126&amp;amp;scene=173&amp;amp;from_msgid=2247488834&amp;amp;from_itemidx=1&amp;amp;count=3&amp;amp;nolastread=1#wechat_redirect&quot; textvalue=&quot;R可视化终极合集YYDS&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;R可视化终极合集YYDS&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzUwOTg0MjczNw==&amp;amp;action=getalbum&amp;amp;album_id=1387749536965410817&amp;amp;scene=173&amp;amp;from_msgid=2247488894&amp;amp;from_itemidx=1&amp;amp;count=3&amp;amp;nolastread=1&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;Perl入门合集&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;Perl入门合集&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzUwOTg0MjczNw==&amp;amp;action=getalbum&amp;amp;album_id=1387765915319877633&amp;amp;scene=173&amp;amp;from_msgid=2247489660&amp;amp;from_itemidx=1&amp;amp;count=3&amp;amp;nolastread=1&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;生物信息精进&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;生物信息精进&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzUwOTg0MjczNw==&amp;amp;action=getalbum&amp;amp;album_id=2007534075540045825#wechat_redirect&quot; textvalue=&quot;玩坏Jupyter Notebook&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;玩坏Jupyter Notebook&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;-END-&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;table interlaced=&quot;disabled&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;p&gt;&lt;span&gt;关注Pythonic生物人&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-fileid=&quot;100012956&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.2982791586998088&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;2092&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/UGxk62Z8n3TSaFVcwjydiaN4Fw4CDicWC6arKpnib5IxaO60aCtFTEI6yXnPbic0sibp6GRCIZAgD7Od2AAKPTI2iclg/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; align=&quot;center&quot;&gt;&lt;p&gt;&lt;span&gt;加微信&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;备注来意&lt;/span&gt;&lt;span&gt;(交流群、合作等等)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-fileid=&quot;100012955&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-type=&quot;jpeg&quot; data-w=&quot;800&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/UGxk62Z8n3QziaHbiarvulYpjyWFgVrE4XnybGZHMoboVk3Q2rdmnY0hpTj4eQicueArX4pHj7OwNltt1pR43HKrg/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; data-tool=&quot;mdnice编辑器&quot;&gt;&lt;text font-family=&quot;ptima-Regular&quot; font-size=&quot;18&quot; y=&quot;30&quot; x=&quot;63.6107&quot; fill=&quot;#0e88eb&quot;&gt;日拱一卒无有尽，功不唐捐终入海！&lt;/text&gt;&lt;/svg&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; data-tool=&quot;mdnice编辑器&quot;&gt;&lt;g&gt;&lt;text font-family=&quot;ptima-Regular&quot; font-size=&quot;15&quot; y=&quot;20&quot; x=&quot;0&quot; fill=&quot;#dc2624&quot;&gt;「❤️点个在看、点赞，下期见~&lt;/text&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; data-tool=&quot;mdnice编辑器&quot;&gt;&lt;g&gt;&lt;text font-family=&quot;ptima-Regular&quot; font-size=&quot;15&quot; y=&quot;20&quot; x=&quot;0&quot; fill=&quot;#dc2624&quot;/&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/section&gt;&lt;/div&gt;

          
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>fa215c41a537e4e70218b5ed471a3288</guid>
<title>​打造企业自己代码规范 IDEA 插件（上）</title>
<link>https://toutiao.io/k/ae69id1</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div id=&quot;cnblogs_post_description&quot;&gt;
        &lt;img src=&quot;https://img2022.cnblogs.com/blog/409098/202209/409098-20220927204805925-494905281.png&quot; alt=&quot;​打造企业自己代码规范IDEA插件（上）&quot; class=&quot;desc_img&quot;/&gt;&lt;p&gt;
        怎么借鉴开源代码来打造一些自身面对的问题解决方案？也许有一些Demo来进行回答演示或许更为贴近地气些。这里打算写一些玩转源码为主题的文字来实践的回答，最近在看P3C的一些源码，那就从这开始吧。
    &lt;/p&gt;&lt;/div&gt;
&lt;div id=&quot;cnblogs_post_body&quot; class=&quot;blogpost-body cnblogs-markdown&quot;&gt;
&lt;p&gt;——基于阿里巴巴代码规范插件（P3C）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“交流互鉴是文明发展的本质要求。只有同其他文明交流互鉴、取长补短，才能保持旺盛生命活力。” 这说的是文明，但映射到计算机技术本身也是相通的，开源代码/项目就是一种很好的技术交流方式。怎么借鉴开源代码来打造一些自身面对的问题解决方案？也许有一些Demo来进行回答演示或许更为贴近地气些。这里打算写一些玩转源码为主题的文字来实践的回答，最近在看P3C的一些源码，那就从这开始吧。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;p3c-idea插件基本结构&quot;&gt;P3C-IDEA插件基本结构&lt;/h2&gt;
&lt;p&gt;
 主体功能上首先是菜单上的三个部分编码规约扫描、实时扫描开关、多语言切换，对应到Idea插件结构中的三个action：AliInspectionAction、ToggleProjectInspectionAction、SwitchLanguageAction 相关类都在com.alibaba.p3c.idea.action 包下面。三个action组成一个工具菜单（ToolMenu）组：com.alibaba.p3c.analytics.action_group 。3各action都是继承Idea插件SDK中的 AnAciton，具体执行逻辑在 actionPerformed(e: AnActionEvent) 中进行执行。
&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://img2022.cnblogs.com/blog/409098/202209/409098-20220927203949796-981788109.png&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Aciton设计中，其中一个有意思的点在于利用update(e: AnActionEvent) 来进行多语言的支持。这种设计如果有需要实现Idea 插件多语言支持上都值得借鉴。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2022.cnblogs.com/blog/409098/202209/409098-20220927204000326-182865295.png&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;另外在Idea插件扩展上，注册了一个 AliLocalInspectionToolProvider  用于完成实时代码扫描相关构建，一些详细设计后续再细读。一个比较巧妙的点在于利用 javassist 动态构建注册相关代码规则相关执行类。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2022.cnblogs.com/blog/409098/202209/409098-20220927204008436-71661100.png&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;总结来说，初读完整体结构后就可以借鉴到一些设计；比如上述提及到的，Idea插件如何进行多语言设计、在大量某类代码需要进行类似改写可以利用  javassist 来进行动态注册。当然也有些觉着不好的点比如尽量还是不要进行语言混写（Icons单拎出来各 java写，而整体框架是 kotlin写）等，推测可能是由于一些插件SDK历史兼容问题导致。可以发现，在阅读源码过程种了解到的一些技术设计处理方式，这其实就是本文开头说提到的 “交流互鉴” ，这些设计技巧都可以参考应用到其他也有类似需求插件代码实践中去。在此，附上一张源码基本结构示意图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2022.cnblogs.com/blog/409098/202209/409098-20220927204018717-620885492.png&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;先简单改改添加皮肤功能&quot;&gt;先简单改改，添加皮肤功能&lt;/h2&gt;
&lt;p&gt;
初步分析基本结构后，其实就可以利用源码进行一些尝试修改了。最近被某人吐槽不懂”emo”的含义。特别从网上搜了下意义，“在悲伤的基调下，一切的情绪不稳定皆可‘emo’。”，想到当遇到各类bug时候，程序员的心情不正是‘emo’。估且就把修改代码，取个项目名：Emo-coding-guardian，也声明下仅供研究、学习用途。
&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://img2022.cnblogs.com/blog/409098/202209/409098-20220927204036075-2044061368.png&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;br/&gt;其实可以看到P3C插件做的非常精致，菜单中的图标、文字表述、状态变化后的图标都有相关设计。在了解其主体结构后，不妨添加一个自定义皮肤Config来自定义下皮肤。&lt;/p&gt;
&lt;p&gt;先把icon相关的资源文件独立到一个文件夹进行管理，并新建一个 emo皮肤文件集合。并新建一个 SkinConfig 作为皮肤的配置类来进行相关设置，图标的ICON相关的主要在P3cIcons.java考虑语言统一性，这里用kotlin改写了下。同时，把对应的menu代码修改，在初始化阶段对ICON进行设置，如下：&lt;br/&gt;&lt;br/&gt;
&lt;img src=&quot;https://img2022.cnblogs.com/blog/409098/202209/409098-20220927204150323-252911504.png&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;br/&gt;
&lt;img src=&quot;https://img2022.cnblogs.com/blog/409098/202209/409098-20220927204157373-1108593402.png&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;相关皮肤资源的文件结构：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2022.cnblogs.com/blog/409098/202209/409098-20220927204208771-77939768.png&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;最终一些效果如下:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2022.cnblogs.com/blog/409098/202209/409098-20220927204217956-1259809534.png&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;br/&gt;可以看到，我们在掌握了开源代码基本结构后，可以对其中一些点进行修改尝试。一方面验证是否符合我们理解，一方面也是更深入理解细节的过程。&lt;br/&gt;
&lt;br/&gt;当然打造企业自己代码规范插件并非改改皮肤，更重要的在于，如何利用P3C进行相关代码规则的编写工作。且请关注，在后续的文章中，我们再接着进行探索。&lt;br/&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;附上相关代码github链接：&lt;a href=&quot;https://github.com/ariesfly/emo-coding-guardian&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/ariesfly/emo-coding-guardian&lt;/a&gt;&lt;br/&gt;
如有遇到问题欢迎公众号私信留言&lt;/p&gt;
&lt;/blockquote&gt;

&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>2ac33ff4a4bc175cda69f17483709329</guid>
<title>前端架构师的一些思考和总结</title>
<link>https://toutiao.io/k/u2j55mc</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                           autoTypeSetting24psection&amp;#10;                          &quot; id=&quot;js_content&quot;&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.625&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/QTNzZR6KeDibefLHagy8lx4uS8wuXorHhXmPwyJ9xH5yZ4zMWKKwmYRUmcSg5yDzQ2t85ZoanmZBkUnnThJrY1Q/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;3200&quot;/&gt;加入大淘宝到现在也有六年多了，一路走来很开心可以一直做技术。负责过业务、基础库、工具以及架构，期望自己不断成长。想对之前的工作做一些思考和记录，也想为后续的工作找一个合适的开始。有蛮多话想说的，这次就先从 “前端架构” 这个话题慢慢说起吧。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;聊聊架构&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;好的代码和差的代码都能运行，但我们会追求好的代码，获得更好的维护性和可读性。同理没有架构的系统也能工作，但如果一个业务团队没有好的架构，整个团队将陷入混乱，最终难以支撑业务快速变化。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;架构是为了解决问题，将复杂、模糊的问题，变得清晰、有逻辑。问题的尺度上，可以大到整个公司的系统设计，也可以小到一个模块如何渲染。问题的时间上，可以是当下的问题，也可以是预期以后会发生的问题。如何做好结构和如何解决好问题有很多相似之处，比如把复杂问题简单化，比如找到多种解决方案并在其中找到最合适有效的方案，比如要考虑成本和实现，控制好风险等等。网上也有很多关于架构设计的原则和思维等，这里就不在赘述了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;我所追求的架构，不仅要清晰有逻辑，还要简单灵活好扩展；能切实解决问题，也能支撑业务快速稳定发展，并不断演进。&lt;/strong&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;聊聊前端架构师&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所谓架构师，通俗的说就是架构的设计者或构建者。《架构师到底是做什么的？》很有意思，其中有一段话是这么说的：&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;一个架构师， 好的架构师， 就是反复做四件事：第一，先选一个好的挑战， 第二， 把简单的东西想复杂 ；第三， 把复杂的东西做简单；第四， 最后把复杂的东西讲简单。&lt;/p&gt;&lt;p&gt;做第一件事是为了创造价值， 第二件事是为了控制好风险和准备好未来， 做第三件事请是为了做好产品且控制好成本， 而做第四件事情是为了做好传承。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;架构师必须依靠团队的支持，不同的专注领域衍生出不同的架构师，这里主要聊聊前端架构师。曾有人说前端架构师就是选选框架，搞搞文件目录就可以了，但伴随基础设施的发展、大前端体系的不断增大以及用户体验的不断升级，前端架构师有了更大的价值和更高的上限。围绕用户体验链路，前端架构师可以将具有不同关注点的团队联系起来，包括产品、设计、前端、服务端、客户端、工程、数据、运维等团队，用户视角也能帮助前端架构师发现更多问题。围绕大前端技术，前端架构师可以主导所有技术体系的设计和实现，甚至会影响组织架构的调整（比如终端工程师的诞生）。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当然前端架构师的目标也离不开高性能、高可用、易扩展以及解决系统复杂度。举个解决首屏加载速度慢问题的例子，我们做了以下事情：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;了解业务&lt;/strong&gt;：全面调研当前业务和竞品的现状，充分理解当前渲染链路和节点，确认当前存在的问题&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;寻找方案&lt;/strong&gt;：预估未来发展的方向，尽可能多的了解相关解决方案或创新自己的方案，比如：SSR，ER，预渲染，预加载，静态化等&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;评估方案&lt;/strong&gt;：和相关同学讨论或开会，评估所有可行的方案及其合适度、复杂度、前瞻性和 ROI。选出至少一个候选方案，比如：SSR&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;Demo 开发&lt;/strong&gt;：基于现有开发能力为所有候选方案开发对应 Demo，提前探路并验证风险和可行性，帮助产出更合适的方案设计&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;方案设计&lt;/strong&gt;：梳理清楚 SSR 完整链路上相关节点和合作方，多写、多画、多思考、多讨论相关架构和设计，深入细节产出 RFC 文档&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;RFC 评审&lt;/strong&gt;：充分评审设计、实现和产物细节，可多次评审直至所有成员达成共识。确定相关开发和团队分工，保证方案完善可执行&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;落到实处&lt;/strong&gt;：推进项目开发，多与开发团队沟通，并至少参与一部分编码工作，打通所有相关开发和运维链路，保障产物简单好用&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;沉淀传承&lt;/strong&gt;：沉淀文档，通过会议、分享或文章帮助其他人理解 SSR 方案和架构，用好 SSR。做好答疑，并推动方案实施&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;不断演进&lt;/strong&gt;：关注 SSR 的发展，演进已有链路，比如，个性化的 SSR，结合 ER 的 SSR 等&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从开发、构建发布到全量用户使用，从数据衡量到问题排查，我们交付了一个完整的 SSR 方案，其中处处有前端架构师的设计和影响。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;前端架构师是否和你想象的有所不同？不仅仅要产出架构图，保证架构的正确执行，深入实现并至少要参与一部分编码工作，落实一个一个解决方案同时，前端架构师也要能阅读代码并经常与各个开发团队交流。可以说整个用户体验链路都有前端架构师的影子，他们了解用户体验；不设限，有审美能力，优雅；能看到其他人看不到的问题，也能解决一些其他人解决不了的问题；能够把复杂的系统想得清楚和透彻，也能够了解各个模块和环节；对未来发展有自己的思考和判断，并不断解决 DX 和 UX 相关问题。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;思考和总结&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;回顾过去的工作，得益于团队的信任及大前端的不断演进，我可以不断学习思考实践、权衡重构及与人打交道，令我非常愉悦，受益匪浅。严格来说我应该算个前端解决方案架构师，在前端架构的方向，我也还有很多需要发展和改善的地方，下面梳理下个人的思考和总结：&lt;strong&gt;我认为一个好的架构师，不仅技术要好，还要懂业务；能从整体设计架构，也能在局部实现功能。&lt;/strong&gt;首先，技术好是成为架构师的基础条件。在平常的开发中，需要多注意让你的代码容易阅读和扩展，多想想是否有更好的实现方式，多参与代码审查工作。这样通过大量的编码实践，可以逐步地培养出好的架构思维。成为架构师后也要多写代码，如果不写代码，是不能体会出开发的痛点和设计不好带来的问题，无法及时地对架构中的问题做出调整，所设计的架构可能不实用，甚至甚脱离现实。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;架构师不同于高级开发可以只追求技术的深度，还需要有一定的技术广度。因为技术的选型，通常不能局限于一种技术，需要根据业务特点和团队特点灵活地选择，是 “T”字形的成长模型：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;广度&lt;/strong&gt;：做技术方案时，要有多种选择，最好可以熟悉各个链路的关系&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;深度&lt;/strong&gt;：要能解决一些别人搞不定的问题，至少也能指导从某个方向入手排查&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其次，要充分理解业务并时刻关注业务变化，使架构不仅能够很好地支持业务特点，并具有一定的前瞻性。架构师需要站在推进业务发展的角度上合理地改进和优化架构设计，为业务的快速发展做好保障。做“合适”的架构非常重要，避免拿着锤子找钉子。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;再者，要做一个靠谱并有良好的沟通和协调能力的人。架构师往往要面临着跨组、跨团队甚至跨 BU 的一些技术方案，需要在互相信任的前提下沟通和协调各方的诉求和冲突。好的架构师也可以让业务、技术、团队一起变得更好。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最后，我想说其实做架构设计，并不代表一定要有一个架构师的头衔。每个人都可以参与到架构设计中来，只要心中有大局有架构思维，能理解当前架构设计，不断更好的优化和执行，就能写出好代码做出好架构，提升整体的凝聚力和战斗力。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;要想成为好的架构师，没有什么捷径可以走。持续的学习，不停的思考，多问为什么，多想想还能不能更好。愿大家都可以成为一个优秀靠谱的程序员、架构师。&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;/div&gt;

          
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>