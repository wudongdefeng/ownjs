<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>a12ea706aa436e879a04f065cb770891</guid>
<title>[推荐] 新来个技术总监，仅花 2 小时，撸出一个多线程永动任务，看完直接跪了，真牛逼</title>
<link>https://toutiao.io/k/6u3q7ke</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;section&gt;&lt;span&gt;今天教大家撸一个 Java 的多线程永动任务，&lt;/span&gt;&lt;strong&gt;这个示例的原型是公司自研的多线程异步任务项目&lt;/strong&gt;&lt;span&gt;，我把里面涉及到多线程的代码抽离出来，然后进行一定的改造。&lt;/span&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;里面涉及的知识点非常多，特别适合有&lt;strong&gt;一定工作经验&lt;/strong&gt;的同学学习，或者可以直接拿到项目中使用。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;文章结构非常简单：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5484261501210653&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/sXFqMxQoVLFO4ibj0RiaKXib9VLSJxTaWCGyibRQyudY2hg9UV61hvpUE2KrlsEX7mvAVn4KMqyyqn0evPn8gZPHNw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1652&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;1. 功能说明&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;做这个多线程异步任务，主要是因为我们有很多永动的异步任务，什么是永动呢？就是&lt;strong&gt;任务跑起来后，需要一直跑下去。&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如消息 Push 任务，因为一直有消息过来，所以需要一直去消费 DB 中的未推送消息，就需要整一个 Push 的永动异步任务。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们的需求其实不难，简单总结一下：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;能同时执行多个永动的异步任务&lt;/strong&gt;；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;每个异步任务，支持开&lt;strong&gt;多个线程&lt;/strong&gt;去消费这个任务的数据；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;支持永动异步任务的&lt;strong&gt;优雅关闭&lt;/strong&gt;，即关闭后，需要把所有的数据消费完毕后，再关闭。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;完成上面的需求，需要注意几个点：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;每个&lt;strong&gt;永动任务&lt;/strong&gt;，可以开一个线程去执行；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;每个&lt;strong&gt;子任务&lt;/strong&gt;，因为需要支持并发，需要用线程池控制；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;永动任务的关闭，需要通知子任务的并发线程，并&lt;strong&gt;支持永动任务和并发子任务的优雅关闭&lt;/strong&gt;。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2. 多线程任务示例&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.1 线程池&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于子任务，需要支持并发，如果每个并发都开一个线程，用完就关闭，对资源消耗太大，所以引入线程池：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;TaskProcessUtil&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;// 每个任务，都有自己单独的线程池&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; Map&amp;lt;String, ExecutorService&amp;gt; executors = &lt;span&gt;new&lt;/span&gt; ConcurrentHashMap&amp;lt;&amp;gt;();&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;// 初始化一个线程池&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; ExecutorService &lt;span&gt;init&lt;/span&gt;&lt;span&gt;(String poolName, &lt;span&gt;int&lt;/span&gt; poolSize)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; ThreadPoolExecutor(poolSize, poolSize,&lt;br/&gt;                &lt;span&gt;0L&lt;/span&gt;, TimeUnit.MILLISECONDS,&lt;br/&gt;                &lt;span&gt;new&lt;/span&gt; LinkedBlockingQueue&amp;lt;Runnable&amp;gt;(),&lt;br/&gt;                &lt;span&gt;new&lt;/span&gt; ThreadFactoryBuilder().setNameFormat(&lt;span&gt;&quot;Pool-&quot;&lt;/span&gt; + poolName).setDaemon(&lt;span&gt;false&lt;/span&gt;).build(),&lt;br/&gt;                &lt;span&gt;new&lt;/span&gt; ThreadPoolExecutor.CallerRunsPolicy());&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;// 获取线程池&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; ExecutorService &lt;span&gt;getOrInitExecutors&lt;/span&gt;&lt;span&gt;(String poolName,&lt;span&gt;int&lt;/span&gt; poolSize)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        ExecutorService executorService = executors.get(poolName);&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (&lt;span&gt;null&lt;/span&gt; == executorService) {&lt;br/&gt;            &lt;span&gt;synchronized&lt;/span&gt; (TaskProcessUtil&lt;span&gt;.&lt;span&gt;class&lt;/span&gt;) &lt;/span&gt;{&lt;br/&gt;                executorService = executors.get(poolName);&lt;br/&gt;                &lt;span&gt;if&lt;/span&gt; (&lt;span&gt;null&lt;/span&gt; == executorService) {&lt;br/&gt;                    executorService = init(poolName, poolSize);&lt;br/&gt;                    executors.put(poolName, executorService);&lt;br/&gt;                }&lt;br/&gt;            }&lt;br/&gt;        }&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; executorService;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;// 回收线程资源&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;releaseExecutors&lt;/span&gt;&lt;span&gt;(String poolName)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        ExecutorService executorService = executors.remove(poolName);&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (executorService != &lt;span&gt;null&lt;/span&gt;) {&lt;br/&gt;            executorService.shutdown();&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这是一个线程池的工具类，这里初始化线程池和回收线程资源很简单，我们主要讨论获取线程池。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;获取线程池可能会存在并发情况，所以需要加一个 synchronized 锁，然后锁住后，需要对 executorService 进行二次判空校验。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.2 单个任务&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为了更好讲解单个任务的实现方式，我们的任务主要就是把 Cat 的数据打印出来，Cat 定义如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;@Data&lt;/span&gt;&lt;br/&gt;&lt;span&gt;@Service&lt;/span&gt;&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;Cat&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; String catName;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; Cat &lt;span&gt;setCatName&lt;/span&gt;&lt;span&gt;(String name)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;this&lt;/span&gt;.catName = name;&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;;&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;单个任务主要包括以下功能：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;获取永动任务数据&lt;/strong&gt;：这里一般都是扫描 DB，我直接就简单用 queryData() 代替。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;多线程执行任务&lt;/strong&gt;：需要把数据拆分成 4 份，然后分别由多线程并发执行，这里可以通过线程池支持；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;永动任务优雅停机&lt;/strong&gt;：当外面通知任务需要停机，需要执行完剩余任务数据，并回收线程资源，退出任务；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;永动执行&lt;/strong&gt;：如果未收到停机命令，任务需要一直执行下去。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;直接看代码：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;ChildTask&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; POOL_SIZE = &lt;span&gt;3&lt;/span&gt;; &lt;span&gt;// 线程池大小&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; SPLIT_SIZE = &lt;span&gt;4&lt;/span&gt;; &lt;span&gt;// 数据拆分大小&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; String taskName;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;// 接收jvm关闭信号，实现优雅停机&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;protected&lt;/span&gt; &lt;span&gt;volatile&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt; terminal = &lt;span&gt;false&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;ChildTask&lt;/span&gt;&lt;span&gt;(String taskName)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;this&lt;/span&gt;.taskName = taskName;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;// 程序执行入口&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;doExecute&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;int&lt;/span&gt; i = &lt;span&gt;0&lt;/span&gt;;&lt;br/&gt;        &lt;span&gt;while&lt;/span&gt;(&lt;span&gt;true&lt;/span&gt;) {&lt;br/&gt;            System.out.println(taskName + &lt;span&gt;&quot;:Cycle-&quot;&lt;/span&gt; + i + &lt;span&gt;&quot;-Begin&quot;&lt;/span&gt;);&lt;br/&gt;            &lt;span&gt;// 获取数据&lt;/span&gt;&lt;br/&gt;            List&amp;lt;Cat&amp;gt; datas = queryData();&lt;br/&gt;            &lt;span&gt;// 处理数据&lt;/span&gt;&lt;br/&gt;            taskExecute(datas);&lt;br/&gt;            System.out.println(taskName + &lt;span&gt;&quot;:Cycle-&quot;&lt;/span&gt; + i + &lt;span&gt;&quot;-End&quot;&lt;/span&gt;);&lt;br/&gt;            &lt;span&gt;if&lt;/span&gt; (terminal) {&lt;br/&gt;                &lt;span&gt;// 只有应用关闭，才会走到这里，用于实现优雅的下线&lt;/span&gt;&lt;br/&gt;                &lt;span&gt;break&lt;/span&gt;;&lt;br/&gt;            }&lt;br/&gt;            i++;&lt;br/&gt;        }&lt;br/&gt;        &lt;span&gt;// 回收线程池资源&lt;/span&gt;&lt;br/&gt;        TaskProcessUtil.releaseExecutors(taskName);&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;// 优雅停机&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;terminal&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;// 关机&lt;/span&gt;&lt;br/&gt;        terminal = &lt;span&gt;true&lt;/span&gt;;&lt;br/&gt;        System.out.println(taskName + &lt;span&gt;&quot; shut down&quot;&lt;/span&gt;);&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;// 处理数据&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;doProcessData&lt;/span&gt;&lt;span&gt;(List&amp;lt;Cat&amp;gt; datas, CountDownLatch latch)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;try&lt;/span&gt; {&lt;br/&gt;            &lt;span&gt;for&lt;/span&gt; (Cat cat : datas) {&lt;br/&gt;                System.out.println(taskName + &lt;span&gt;&quot;:&quot;&lt;/span&gt; + cat.toString() + &lt;span&gt;&quot;,ThreadName:&quot;&lt;/span&gt; + Thread.currentThread().getName());&lt;br/&gt;                Thread.sleep(&lt;span&gt;1000L&lt;/span&gt;);&lt;br/&gt;            }&lt;br/&gt;        } &lt;span&gt;catch&lt;/span&gt; (Exception e) {&lt;br/&gt;            System.out.println(e.getStackTrace());&lt;br/&gt;        } &lt;span&gt;finally&lt;/span&gt; {&lt;br/&gt;            &lt;span&gt;if&lt;/span&gt; (latch != &lt;span&gt;null&lt;/span&gt;) {&lt;br/&gt;                latch.countDown();&lt;br/&gt;            }&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;// 处理单个任务数据&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;taskExecute&lt;/span&gt;&lt;span&gt;(List&amp;lt;Cat&amp;gt; sourceDatas)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (CollectionUtils.isEmpty(sourceDatas)) {&lt;br/&gt;            &lt;span&gt;return&lt;/span&gt;;&lt;br/&gt;        }&lt;br/&gt;        &lt;span&gt;// 将数据拆成4份&lt;/span&gt;&lt;br/&gt;        List&amp;lt;List&amp;lt;Cat&amp;gt;&amp;gt; splitDatas = Lists.partition(sourceDatas, SPLIT_SIZE);&lt;br/&gt;        &lt;span&gt;final&lt;/span&gt; CountDownLatch latch = &lt;span&gt;new&lt;/span&gt; CountDownLatch(splitDatas.size());&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;// 并发处理拆分的数据，共用一个线程池&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;final&lt;/span&gt; List&amp;lt;Cat&amp;gt; datas : splitDatas) {&lt;br/&gt;            ExecutorService executorService = TaskProcessUtil.getOrInitExecutors(taskName, POOL_SIZE);&lt;br/&gt;            executorService.submit(&lt;span&gt;new&lt;/span&gt; Runnable() {&lt;br/&gt;                &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;                &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;run&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;                    doProcessData(datas, latch);&lt;br/&gt;                }&lt;br/&gt;            });&lt;br/&gt;        }&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;try&lt;/span&gt; {&lt;br/&gt;            latch.await();&lt;br/&gt;        } &lt;span&gt;catch&lt;/span&gt; (Exception e) {&lt;br/&gt;            System.out.println(e.getStackTrace());&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;// 获取永动任务数据&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;private&lt;/span&gt; List&amp;lt;Cat&amp;gt; &lt;span&gt;queryData&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        List&amp;lt;Cat&amp;gt; datas = &lt;span&gt;new&lt;/span&gt; ArrayList&amp;lt;&amp;gt;();&lt;br/&gt;        &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = &lt;span&gt;0&lt;/span&gt;; i &amp;lt; &lt;span&gt;5&lt;/span&gt;; i ++) {&lt;br/&gt;            datas.add(&lt;span&gt;new&lt;/span&gt; Cat().setCatName(&lt;span&gt;&quot;罗小黑&quot;&lt;/span&gt; + i));&lt;br/&gt;        }&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; datas;&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;简单解释一下：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;queryData&lt;/strong&gt;：用于获取数据，实际应用中其实是需要把 queryData 定为抽象方法，然后由各个任务实现自己的方法。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;doProcessData&lt;/strong&gt;：数据处理逻辑，实际应用中其实是需要把 doProcessData 定为抽象方法，然后由各个任务实现自己的方法。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;taskExecute&lt;/strong&gt;：将数据拆分成 4 份，获取该任务的线程池，并交给线程池并发执行，然后通过 latch.await() 阻塞。当这 4 份数据都执行成功后，阻塞结束，该方法才返回。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;terminal&lt;/strong&gt;：仅用于接受停机命令，这里该变量定义为 volatile，所以多线程内存可见；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;doExecute&lt;/strong&gt;：程序执行入口，封装了每个任务执行的流程，当 terminal=true 时，先执行完任务数据，然后回收线程池，最后退出。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.3 任务入口&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;直接上代码：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;LoopTask&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; List&amp;lt;ChildTask&amp;gt; childTasks;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;initLoopTask&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        childTasks = &lt;span&gt;new&lt;/span&gt; ArrayList();&lt;br/&gt;        childTasks.add(&lt;span&gt;new&lt;/span&gt; ChildTask(&lt;span&gt;&quot;childTask1&quot;&lt;/span&gt;));&lt;br/&gt;        childTasks.add(&lt;span&gt;new&lt;/span&gt; ChildTask(&lt;span&gt;&quot;childTask2&quot;&lt;/span&gt;));&lt;br/&gt;        &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;final&lt;/span&gt; ChildTask childTask : childTasks) {&lt;br/&gt;            &lt;span&gt;new&lt;/span&gt; Thread(&lt;span&gt;new&lt;/span&gt; Runnable() {&lt;br/&gt;                &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;                &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;run&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;                    childTask.doExecute();&lt;br/&gt;                }&lt;br/&gt;            }).start();&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;shutdownLoopTask&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (!CollectionUtils.isEmpty(childTasks)) {&lt;br/&gt;            &lt;span&gt;for&lt;/span&gt; (ChildTask childTask : childTasks) {&lt;br/&gt;                childTask.terminal();&lt;br/&gt;            }&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;main&lt;/span&gt;&lt;span&gt;(String args[])&lt;/span&gt; &lt;span&gt;throws&lt;/span&gt; Exception&lt;/span&gt;{&lt;br/&gt;        LoopTask loopTask = &lt;span&gt;new&lt;/span&gt; LoopTask();&lt;br/&gt;        loopTask.initLoopTask();&lt;br/&gt;        Thread.sleep(&lt;span&gt;5000L&lt;/span&gt;);&lt;br/&gt;        loopTask.shutdownLoopTask();&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;每个任务都开一个单独的 Thread，这里我初始化了 2 个永动任务，分别为 childTask1 和 childTask2，然后分别执行，后面 Sleep 了 5 秒后，再关闭任务，我们可以看看是否可以按照我们的预期优雅退出。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.4 结果分析&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;执行结果如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;childTask1:Cycle-&lt;span&gt;0&lt;/span&gt;-Begin&lt;br/&gt;childTask2:Cycle-&lt;span&gt;0&lt;/span&gt;-Begin&lt;br/&gt;childTask1:Cat(catName=罗小黑&lt;span&gt;0&lt;/span&gt;),ThreadName:Pool-childTask1&lt;br/&gt;childTask1:Cat(catName=罗小黑&lt;span&gt;4&lt;/span&gt;),ThreadName:Pool-childTask1&lt;br/&gt;childTask2:Cat(catName=罗小黑&lt;span&gt;4&lt;/span&gt;),ThreadName:Pool-childTask2&lt;br/&gt;childTask2:Cat(catName=罗小黑&lt;span&gt;0&lt;/span&gt;),ThreadName:Pool-childTask2&lt;br/&gt;childTask1:Cat(catName=罗小黑&lt;span&gt;1&lt;/span&gt;),ThreadName:Pool-childTask1&lt;br/&gt;childTask2:Cat(catName=罗小黑&lt;span&gt;1&lt;/span&gt;),ThreadName:Pool-childTask2&lt;br/&gt;childTask2:Cat(catName=罗小黑&lt;span&gt;2&lt;/span&gt;),ThreadName:Pool-childTask2&lt;br/&gt;childTask1:Cat(catName=罗小黑&lt;span&gt;2&lt;/span&gt;),ThreadName:Pool-childTask1&lt;br/&gt;childTask2:Cat(catName=罗小黑&lt;span&gt;3&lt;/span&gt;),ThreadName:Pool-childTask2&lt;br/&gt;childTask1:Cat(catName=罗小黑&lt;span&gt;3&lt;/span&gt;),ThreadName:Pool-childTask1&lt;br/&gt;childTask2:Cycle-&lt;span&gt;0&lt;/span&gt;-End&lt;br/&gt;childTask2:Cycle-&lt;span&gt;1&lt;/span&gt;-Begin&lt;br/&gt;childTask1:Cycle-&lt;span&gt;0&lt;/span&gt;-End&lt;br/&gt;childTask1:Cycle-&lt;span&gt;1&lt;/span&gt;-Begin&lt;br/&gt;childTask2:Cat(catName=罗小黑&lt;span&gt;0&lt;/span&gt;),ThreadName:Pool-childTask2&lt;br/&gt;childTask2:Cat(catName=罗小黑&lt;span&gt;4&lt;/span&gt;),ThreadName:Pool-childTask2&lt;br/&gt;childTask1:Cat(catName=罗小黑&lt;span&gt;4&lt;/span&gt;),ThreadName:Pool-childTask1&lt;br/&gt;childTask1:Cat(catName=罗小黑&lt;span&gt;0&lt;/span&gt;),ThreadName:Pool-childTask1&lt;br/&gt;childTask1 shut down&lt;br/&gt;childTask2 shut down&lt;br/&gt;childTask2:Cat(catName=罗小黑&lt;span&gt;1&lt;/span&gt;),ThreadName:Pool-childTask2&lt;br/&gt;childTask1:Cat(catName=罗小黑&lt;span&gt;1&lt;/span&gt;),ThreadName:Pool-childTask1&lt;br/&gt;childTask1:Cat(catName=罗小黑&lt;span&gt;2&lt;/span&gt;),ThreadName:Pool-childTask1&lt;br/&gt;childTask2:Cat(catName=罗小黑&lt;span&gt;2&lt;/span&gt;),ThreadName:Pool-childTask2&lt;br/&gt;childTask1:Cat(catName=罗小黑&lt;span&gt;3&lt;/span&gt;),ThreadName:Pool-childTask1&lt;br/&gt;childTask2:Cat(catName=罗小黑&lt;span&gt;3&lt;/span&gt;),ThreadName:Pool-childTask2&lt;br/&gt;childTask1:Cycle-&lt;span&gt;1&lt;/span&gt;-End&lt;br/&gt;childTask2:Cycle-&lt;span&gt;1&lt;/span&gt;-End&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;输出数据：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;“Pool-childTask” 是线程池名称；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;“childTask” 是任务名称；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;“Cat(catName=罗小黑)” 是执行的结果；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;“childTask shut down” 是关闭标记；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;“childTask:Cycle-X-Begin” 和“childTask:Cycle-X-End” 是每一轮循环的开始和结束标记。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们分析一下执行结果：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;childTask1 和 childTask2 分别执行，在第一轮循环中都正常输出了 5 条罗小黑数据；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;第二轮执行过程中，我启动了关闭指令，这次第二轮执行没有直接停止，而是先执行完任务中的数据，再执行退出，所以完全符合我们的优雅退出结论。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.5 源码地址&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;GitHub 地址：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;https://github.com/lml200701158/java-study/tree/master/src/main/java/com/java/parallel/pool/ofc&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3. 写在最后&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;对于这个经典的线程池使用示例，原项目是我好友&lt;/span&gt;&lt;strong&gt;一灰&lt;/strong&gt;&lt;span&gt;写的，技术水平对标阿里 P7，&lt;/span&gt;&lt;strong&gt;实现得也非常优雅，涉及的知识点非常多&lt;/strong&gt;&lt;span&gt;，非常值得大家学习。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>75253a8b340dd59b02405e02123e7957</guid>
<title>[推荐] 如何画出一张优秀的架构图？（老鸟必备）</title>
<link>https://toutiao.io/k/xiqybrh</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;br/&gt;作者：三画&lt;/p&gt;&lt;p&gt;简介：阿里巴巴技术专家，梓敬、鹏升和余乐对此文亦有贡献。三画曾多年从事工作流引擎研发工作，现专注于高并发移动互联网应用的架构和开发。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;技术传播的价值，不仅仅体现在通过商业化产品和开源项目来缩短我们构建应用的路径。加速业务的上线速率，也体现在优秀工程师的工作效率提升、产品性能优化和用户体验改善等经验方面的分享，以提高我们的专业能力。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;接下来，阿里巴巴技术专家三画，将分享自己和团队在画好架构图方面的理念和经验，希望对你有所帮助。当我们想用一张或几张图来描述我们的系统时，是不是经常遇到以下情况：&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;对着画布无从下手、删了又来?如何用一张图描述我的系统，并且让产品、运营、开发都能看明白?画了一半的图还不清楚受众是谁?画出来的图到底是产品图功能图还是技术图又或是大杂烩?图上的框框有点少是不是要找点儿框框加进来?布局怎么画都不满意…&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果有同样的困惑，本文将介绍一种画图的方法论，来让架构图更清晰。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;先厘清一些基础概念&lt;/h3&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;什么是架构?&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;架构就是对系统中的实体以及实体之间的关系所进行的抽象描述，是一系列的决策。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;架构是结构和愿景。系统架构是概念的体现，是对物/信息的功能与形式元素之间的对应情况所做的分配，是对元素之间的关系以及元素同周边环境之间的关系所做的定义。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;做好架构是个复杂的任务，也是个很大的话题，本篇就不做深入了。有了架构之后，就需要让干系人理解、遵循相关决策。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;什么是架构图?&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;系统架构图是为了抽象地表示软件系统的整体轮廓和各个组件之间的相互关系和约束边界，以及软件系统的物理部署和软件系统的演进方向的整体视图。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;架构图的作用&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一图胜千言。要让干系人理解、遵循架构决策，就需要把架构信息传递出去。架构图就是一个很好的载体。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那么，画架构图是为了：&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;架构图分类&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;搜集了很多资料，分类有很多，有一种比较流行的是 4+1 视图，分别为场景视图、逻辑视图、物理视图、处理流程视图和开发视图。&lt;/p&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;场景视图&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;场景视图用于描述系统的参与者与功能用例间的关系，反映系统的最终需求和交互设计，通常由用例图表示。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6516666666666666&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7U1tvx0KcEnghMpHPaibr0ogYZWsia7scG2TWNQjHDdibwmv5qm6TkAibVIbygicx33N4IL2ZbYmtMuuEw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;600&quot;/&gt;&lt;figcaption&gt;图片&lt;/figcaption&gt;&lt;/figure&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;逻辑视图&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;逻辑视图用于描述系统软件功能拆解后的组件关系，组件约束和边界，反映系统整体组成与系统如何构建的过程，通常由 UML 的组件图和类图来表示。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.735&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7U1tvx0KcEnghMpHPaibr0ogXIcazTEgTgIjtzYkXRy2GtAKCxXxCbibicQ96yiah57VFh2QibzJGCoTHg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;600&quot;/&gt;&lt;figcaption&gt;图片&lt;/figcaption&gt;&lt;/figure&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;物理视图&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;物理视图用于描述系统软件到物理硬件的映射关系，反映出系统的组件是如何部署到一组可计算机器节点上，用于指导软件系统的部署实施过程。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6933333333333334&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7U1tvx0KcEnghMpHPaibr0ogiafMPyLM1bFSKk8HOuRFrDFvkwT2wqaDTZjz8LoHvK5ibibRmOdFBLt0w/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;600&quot;/&gt;&lt;figcaption&gt;图片&lt;/figcaption&gt;&lt;/figure&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;处理流程视图&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;处理流程视图用于描述系统软件组件之间的通信时序，数据的输入输出，反映系统的功能流程与数据流程，通常由时序图和流程图表示。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8183333333333334&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7U1tvx0KcEnghMpHPaibr0oglYE0XGwPQC4eG55oPe7g040xNvVXrRuCtRpwXhATbkkkhUSKLibPDUw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;600&quot;/&gt;&lt;figcaption&gt;图片&lt;/figcaption&gt;&lt;/figure&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;开发视图&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;开发视图用于描述系统的模块划分和组成，以及细化到内部包的组成设计，服务于开发人员，反映系统开发实施过程。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7183333333333334&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7U1tvx0KcEnghMpHPaibr0ogRe0aANHGDy4icbWSWHgUOC7PRq9dxdYlhf9bXw3ibNEybhLZCuibfEuibA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;600&quot;/&gt;&lt;figcaption&gt;图片&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以上 5 种架构视图从不同角度表示一个软件系统的不同特征，组合到一起作为架构蓝图描述系统架构。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;怎样的架构图是好的架构图&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上面的分类是前人的经验总结，图也是从网上摘来的，那么这些图画的好不好呢?是不是我们要依葫芦画瓢去画这样一些图?&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;先不去管这些图好不好，我们通过对这些图的分类以及作用，思考了一下，总结下来。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们认为，在画出一个好的架构图之前， 首先应该要明确其受众，再想清楚要给他们传递什么信息 。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以，不要为了画一个物理视图去画物理视图，为了画一个逻辑视图去画逻辑视图，而应该根据受众的不同，传递的信息的不同，用图准确地表达出来，最后的图可能就是在这样一些分类里。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那么，画出的图好不好的一个直接标准就是：受众有没有准确接收到想传递的信息。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;明确这两点之后，从受众角度来说，一个好的架构图是不需要解释的，它应该是自描述的，并且要具备一致性和足够的准确性，能够与代码相呼应。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;画架构图遇到的常见问题&lt;/h3&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;方框代表什么?&lt;/h4&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.2757009345794392&quot; data-type=&quot;jpeg&quot; data-w=&quot;428&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7U1tvx0KcEnghMpHPaibr0ogW97hGIKcuYtMIicHsXA4yCyCQSob780Yyicr4wqLVgEKlmib6MZOgp9FQ/640?wx_fmt=jpeg&quot;/&gt;&lt;figcaption&gt;图片&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为什么适用方框而不是圆形，它有什么特殊的含义吗?随意使用方框或者其他形状可能会引起混淆。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;虚线、实线什么意思?箭头什么意思?颜色什么意思?&lt;/h4&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.2&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7U1tvx0KcEnghMpHPaibr0ogGCepPmzZ5yrbgH1bkB9crLChdxUAzEJ19eZIhzsy4ZpKsoIHKzNl0A/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;600&quot;/&gt;&lt;figcaption&gt;图片&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;随意使用线条或者箭头可能会引起误会。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;运行时与编译时冲突?层级冲突?&lt;/h4&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.2&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7U1tvx0KcEnghMpHPaibr0ogGCepPmzZ5yrbgH1bkB9crLChdxUAzEJ19eZIhzsy4ZpKsoIHKzNl0A/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;600&quot;/&gt;&lt;figcaption&gt;图片&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;架构是一项复杂的工作，只使用单个图表来表示架构很容易造成莫名其妙的语义混乱。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;本文推荐的画图方法&lt;/h3&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.56&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7U1tvx0KcEnghMpHPaibr0og0R6Hn7DGpTe2urd3h5BvKibBtVtkB3LHUcalXkPm7TYlYcqficrahPgQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;600&quot;/&gt;&lt;figcaption&gt;图片&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;C4 模型使用容器(应用程序、数据存储、微服务等)、组件和代码来描述一个软件系统的静态结构。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这几种图比较容易画，也给出了画图要点，但最关键的是，我们认为，它明确指出了每种图可能的受众以及意义。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下面的案例来自 C4 官网，然后加上了一些我们的理解，来看看如何更好的表达软件架构。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;语境图(System Context Diagram)&lt;/span&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7933333333333333&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7U1tvx0KcEnghMpHPaibr0ogryL1BkLiap39frpRKjXgYLD3ZqnPVAcDia2M3POluc44j7pzNFC0icIvA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;600&quot;/&gt;&lt;figcaption&gt;图片&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这是一个想象的待建设的互联网银行系统，它使用外部的大型机银行系统存取客户账户、交易信息，通过外部电邮系统给客户发邮件。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以看到，非常简单、清晰，相信不需要解释，都看的明白，里面包含了需要建设的系统本身，系统的客户，和这个系统有交互的周边系统。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这样一个简单的图，可以告诉我们，要构建的系统是什么;它的用户是谁，谁会用它，它要如何融入已有的 IT 环境。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个图的受众可以是开发团队的内部人员、外部的技术或非技术人员。即：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;构建的系统是什么&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;谁会用它&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如何融入已有的 IT 环境&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;怎么画?中间是自己的系统，周围是用户和其他与之相互作用的系统。这个图的关键就是梳理清楚待建设系统的用户和高层次的依赖，梳理清楚了画下来只需要几分钟时间。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;容器图(Container Diagram)&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;容器图是把语境图里待建设的系统做了一个展开。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.855&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7U1tvx0KcEnghMpHPaibr0ogjUYoXgMyPMHcKEzZJ1dLLInROmlY3n2zr56pXicKM59HPzAmngM8ZGw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;600&quot;/&gt;&lt;figcaption&gt;图片&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上图中，除了用户和外围系统，要建设的系统包括一个基于 Java\Spring MVC的 Web 应用提供系统的功能入口，基于 Xamarin 架构的手机  App 提供手机端的功能入口，一个基于 Java 的 API 应用提供服务，一个 MySQL 数据库用于存储，各个应用之间的交互都在箭头线上写明了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;看这张图的时候，不会去关注到图中是直角方框还是圆角方框，不会关注是实线箭头还是虚线箭头，甚至箭头的指向也没有引起太多注意。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们有许多的画图方式，都对框、线的含义做了定义，这就需要画图的人和看图的人都清晰的理解这些定义，才能读全图里的信息。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;而现实是，这往往是非常高的一个要求，所以，很多图只能看个大概的含义。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个图的受众可以是团队内部或外部的开发人员，也可以是运维人员。用途可以罗列为：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;展现了软件系统的整体形态。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;体现了高层次的技术决策。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;系统中的职责是如何分布的，容器间是如何交互的。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;告诉开发者在哪里写代码。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;怎么画?用一个框图来表示，内部可能包括名称、技术选择、职责，以及这些框图之间的交互，如果涉及外部系统，最好明确边界。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;组件图(Component Diagram)&lt;/span&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.9633333333333334&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7U1tvx0KcEnghMpHPaibr0ogib62KXSu09oPhotAjpx6ib4ZmlX0c0qVxtrib98YdEmvY6y7ELLs8OibPw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;600&quot;/&gt;&lt;figcaption&gt;图片&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;组件图是把某个容器进行展开，描述其内部的模块。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个图主要是给内部开发人员看的，怎么去做代码的组织和构建。其用途有：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;描述了系统由哪些组件/服务组成&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;厘清了组件之间的关系和依赖&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;为软件开发如何分解交付提供了框架&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;类图(Code/Class Diagram)&lt;/h4&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7016666666666667&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7U1tvx0KcEnghMpHPaibr0ogcsuqfZ4EQWjUQGszm3WACm3tc98OtnE2wd6ialXrxZMdDOictqYKUmhw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;600&quot;/&gt;&lt;figcaption&gt;图片&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个图很显然是给技术人员看的，比较常见，就不详细介绍了。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;案例分享&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下面是内部的一个实时数据工具的架构图。作为一个应该自描述的架构图，这里不多做解释了。如果有看不明白的，那肯定是还画的不够好。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7283333333333334&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7U1tvx0KcEnghMpHPaibr0ogjtXXt06ZuBPI0T4avgReyCf5KBlHlIfAp9slolqpttEdASTCaazKYw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;600&quot;/&gt;&lt;figcaption&gt;图片&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;画好架构图可能有许多方法论，本篇主要介绍了 C4 这种方法，C4 的理论也是不断进化的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但不论是哪种画图方法论，我们回到画图初衷，是为了更好的交流，我们在画的过程中不必被条条框框所限制。简而言之，画之前想好：画图给谁看，看什么，怎么样不解释就看懂。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;画图的工具有：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;Keynote&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Xmind&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;EdrawMax&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Visio&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;OmniGraffle&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Process On&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;文中物理视图 Download 地址：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;Win：http://t.cn/EXAGBDW&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Mac：http://t.cn/EXAqtx&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>344abd79f79841ab9aa101c4cb8291a9</guid>
<title>[推荐] 最适合程序员的画图工具？</title>
<link>https://toutiao.io/k/hlv8j4z</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大家好，我是小林。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;图解网站上线以来，一直有很多同学喜欢我画的图，然后很多同学就很好奇，我这些技术文章的配图是用什么工具画的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以，今天就再啰嗦聊一下， 画图这件事。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我的图解类的文章，可以说图片是灵魂之处，没有了图片，相当于失去了灵魂，技术文章本身就很枯燥，如果文章中没有几张图片，很多人看着看着就被劝退了，剩下没被劝退的估计看着看着就睡着了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有时候，一张图片的信息，胜过几千字的解释。文字的描述都线性的，有时候解释的地方，可能看着迷糊的同学，都不知道在解释哪个问题。而画图去解释一个问题，图片里包含了很多信息，就能一目了然的知道在说什么问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可能有的读者会说自己不写文章呀，是不是没有必要了解画图了？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我觉得这是不对，画图在我们工作中其实也是有帮助的。比如，如果你想跟领导汇报一个业务流程的问题，把业务流程画出来，肯定用图的方式比用文字的方式交流起来会更有效率，更轻松些，我自己常常通过这种方式跟领导反馈问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;再比如说，如果你参与了一个比较复杂的项目开发，你也可以把代码的流程图给画出来，不仅能帮助自己加深理解，也能帮助后面参与的同事能更快的接手这个项目，甚至如果你要晋升级别了，演讲 PTT 里的配图也是必不可少的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不过很多人都是纠结用什么画图工具，其实小林觉得再烂的画图工具，只要你思路清晰，确定自己要表达出什么信息，也是能把图画好的，所以不必纠结哪款画图工具，挑一款自己画起来舒服的就行了。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;画图工具&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;“小林，你说的我都懂，我就是喜欢你的画图风格嘛，你就说说你用啥画的？”&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;没问题，直接坦白讲，我用了 2 年的画图工具是：&lt;strong&gt;draw.io&lt;/strong&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我的图解文章里的图片全是在 draw.io 这个工具画的，写了那么久的图解文章，再加上我工作中也有画图的习惯，累计也有在上面画了接近 1000+ 张图片。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;选择它的原因很简单，因为是免费的，而且图片的源文件可以直接保存到 Github 的，这样非常方便，相当于直接云备份到了 Github 仓库里。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;draw.io 画图工具可以在线画图，或者下载应用，或者作为 visual studio code 插件来使用。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我比较常用的方式是在线画图，就是直接在网站上画图。draw.io 一开始的画图网站地址就是直接在浏览器输入 draw.io  地址后，就会自动进入在线画图工具页面，现在它改版了， 改成重定向到官网地址了，所以现在想进入在线画图工具页面，地址是：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们来看看这个画图工具的页面长什么样子，主要分为三个区域，从左往右的顺序是「图形选择区域、绘图区域、属性设置区域」。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5897435897435898&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/J0g14CUwaZficuzgBOOnHH0JS8nMXKiavf7WPKNic9T7Ka5hAaASuQI0YhiaueRCJjOlvBmSibJohon9asCv0Zz0Nuw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1560&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其中，最左边的「图形选择区域」可以选择的图案有很多种，常见的流程图、时序图、表格图都有，甚至还可以在最左下角的「更多图形」找到其他种类的图形，比如网络设备图标等。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7366197183098592&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/J0g14CUwaZficuzgBOOnHH0JS8nMXKiavf3Fkhnwtj4UPmEDMiaicv0cXXbybmwjuym5K1nslpZ1ACuEhyhz0HroZw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;710&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;再来，最右边「属性设置区域」可以设置文字的大小，图片颜色、线条形状等，而我最常用颜色板块是下面这三种，都是比较浅色的，这样看起来舒服些。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5617021276595745&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/J0g14CUwaZficuzgBOOnHH0JS8nMXKiavfIGng8qTcFQFyGjSRUvouMhyAdmaAuXNSNFbxiakY3KibzM5d2XLGbf7w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;235&quot;/&gt;&lt;/figure&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.538135593220339&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/J0g14CUwaZficuzgBOOnHH0JS8nMXKiavfwQnumv4nuiay6nxrvbTk1DIp1Im77uKmz66BW01sszWKgp6PaV4mRjA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;236&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;基本图形介绍&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我常用的一个图形是圆角方块图，它的位置如下图：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4439511653718091&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/J0g14CUwaZficuzgBOOnHH0JS8nMXKiavfAD0vg4XIvROI5yczzuTEuP3IOcDVIXpe8ib6icVghC6wibz3WqPvIUfgw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;901&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但是它默认的颜色过于深色，如果要在方框图中描述文字，则可能看不清楚，这时我会在最右侧的「属性设置区域」把方块颜色设置成浅色系列的。另外，还有一点需要注意的是，默认的字体大小比较小，我一般会调成 &lt;code&gt;16px&lt;/code&gt; 大小。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果你不喜欢上图的带有「划痕」的圆角方块图形，可以选择下图中这个最简洁的圆角方框图形。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6898395721925134&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/J0g14CUwaZficuzgBOOnHH0JS8nMXKiavfFNPnVnMQ4OcRmJjgWKcVz2xaN05UgnlDpMAkN1cRWxocC8LdlLpcQw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;748&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个简洁的圆角方框图形，再搭配颜色，能组合成很多结构图，比如我用过它组成过 CPU Cache 的结构图。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6649056603773585&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/J0g14CUwaZficuzgBOOnHH0JS8nMXKiavfbEJeao9NdL4q2Fkria8S3m7qtO9wy0Ficnh1ay2OJrn6xb8Wh9LPibGFQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1325&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那直角方框图形，我主要是用来组成「表格」，原因自带的表格不好看，也不方便调。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4218551461245235&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/J0g14CUwaZficuzgBOOnHH0JS8nMXKiavfPdWZTTLkicggZRvh8POEyt6iavNClayHbvBdSdBZlEePg08VFic4gEv1A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;787&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如，我用直角方框图形，画过「不同层级的存储器之间的成本对比表格」。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6437054631828979&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/J0g14CUwaZficuzgBOOnHH0JS8nMXKiavfrx3NibIfC7eU1GibIiakTS1ljgv25nwOFhmFR7Wicy6j35brkGvbU5evTw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;842&quot;/&gt;&lt;figcaption&gt;img&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果觉得直直的线条太死板，你可以把图片属性中的「&lt;em&gt;Comic&lt;/em&gt;」勾上，于是就会变成歪歪扭扭的效果啦，有点像手绘风格，挺多人喜欢这种风格。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如，我用过这种风格画过 TCP 三次握手流程的图。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8339483394833949&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/J0g14CUwaZficuzgBOOnHH0JS8nMXKiavfM8mMA5xwSnebRyfIDpQXpndBnKX8JXYVWdjdHmq1piaiaJTCDfCh0raQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;813&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;方块图形再加上菱形，就可以组合成简单程序流程图了，比如我画过「写直达」缓存更新模型的流程图。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.371069182389937&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/J0g14CUwaZficuzgBOOnHH0JS8nMXKiavfjmLnqiadrI8a0G1agBQ42BHhlWHd6Mft1zTicIopB0DNA2l6u6MpXXvg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;636&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以，不要小看这些基本图形，只要构思清晰，再基本的图形，也是能构成层次分明并且好看的图。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;各种组合画图&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;基本的图形介绍完后，相信你画一些简单程序流程图等图形是没问题的了，接下来就是各种&lt;strong&gt;图形 + 线条&lt;/strong&gt;的组合的了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过一些基本的图形组合，你还可以画出时序图，时序图可以用来描述多个对象之间的交互流程，比如我画过多个线程获取互斥锁的时序图。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.178147268408551&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/J0g14CUwaZficuzgBOOnHH0JS8nMXKiavfef9eIasmuqaXqYXktp1dCp8zqSDcrPicOJwlXiaxmTbjEeqvfliaRxqIw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;842&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;再来，为了更好表达零拷贝技术的过程，那么用图的方式会更清晰。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5913793103448276&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/J0g14CUwaZficuzgBOOnHH0JS8nMXKiavfHpk2JbqibPlWNZr2AZ8cAiciaR0RezAmUrcI8ZpMlrWbQFUEcCs7ZSdiaA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1160&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;也可以，只用一张图就描述 MySQL 执行一条 SQL 查询语句的流程。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5717684377478192&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/J0g14CUwaZficuzgBOOnHH0JS8nMXKiavfLGJib8AE8B8eGibjNUTUHhbFO3ia3uNP2XlQiaVgCOw3Z56bOhbF0LUDlA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1261&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当然，draw.io 这个画图工具，不只有简单图形，还有其他自带的设备类图形。通常我都会这些设备类型的图标来画网络图。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如，我之前画过路由器寻址的图片。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7923976608187134&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/J0g14CUwaZficuzgBOOnHH0JS8nMXKiavfZWTygcHD9oannuUQEiaOKicJkz1fXn7QM32dULJ4r4ClEYlx1cRYZlnA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;684&quot;/&gt;&lt;figcaption&gt;IP地址的网络号&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;你要说，我画过最复杂的图，那就是写 TCP 流量控制的时候，把整个交互过程 + 文字描述 + 滑动窗口状况都画出来了，现在回想起来还是觉得累人。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.5532837670384139&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/J0g14CUwaZficuzgBOOnHH0JS8nMXKiavfxTq3mamz3stu4Wo4PAMExAStvhoViaAkz1cvuXtum0WkuUhrMWfDo8A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1614&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;还有好多好多，我就比一一列举了。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;图床&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我之前用的图床是一套免费的图床，但是踩过坑。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我发现这类免费图床用着用着就不能用了，然后每次迁移图片我都花费很多时间去搞，&lt;strong&gt;果然免费就是最贵的&lt;/strong&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以，后来我就干脆自己掏钱搞了个图床，在云厂商那买了 OSS 存储服务器，然后在加上 CDN 形成自己的图床。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;之前还写过我迁移图片的经历：&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzUxODAzNDg4NQ==&amp;amp;mid=2247511496&amp;amp;idx=1&amp;amp;sn=8f03ecc4b9c6591b80898808ee11ede7&amp;amp;chksm=f98de962cefa60743c3da2899898289bc26b4487f7a9e646689be90264bb7ca3da5c39ece9af&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;完了，小林网站的图片都挂了&lt;/a&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;思维导图工具&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我用的思维导图工具是 xmind，是国产的。他们软件的交互设计做的很不错，很简洁明了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;它有很多种风格选择，基本都是五彩的，整体挺好看的。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6814814814814815&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/J0g14CUwaZdkgpaJYKtsDrueUVianNYWXTyu4ichuHwJicktpYCuMoSbHELk3icnE5Kc5XBltpxdAibb0wYqVibzN2ag/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-w=&quot;1080&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有意思的地方，这个思维导图工具的右侧会有一些图标图片选择，比如表情图片、标签图片、进度图图片等等。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5962962962962963&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/J0g14CUwaZdkgpaJYKtsDrueUVianNYWXkOjwqbj2YCibnMEkWWTre7fjbKz5m9HwJZ9NdylzYvEUqicg9zYtuALQ/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-w=&quot;1080&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;习惯用思维导图做笔记的同学， xmind 这个思维导图工具是个不错的选择。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;另外，我有时会使用 Effie 这个工具来生成思维导图，它本身是一个写作的工具，但是自带一个根据文字内容生成思维导图的功能。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5194444444444445&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/J0g14CUwaZdkgpaJYKtsDrueUVianNYWXTw6zXk1FovsoWE6BXpDN76er0cOhJp5MKKUFt51MDdzl3tDyW0sssA/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-w=&quot;1080&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;代码贴图工具&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果你想展示你的代码，又苦于源代码的样式不好看，则可以使用一个生成漂亮的代码贴图网站。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;地址：&lt;strong&gt;https://carbon.now.sh&lt;/strong&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6898148148148148&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/J0g14CUwaZdkgpaJYKtsDrueUVianNYWXcDc9wAuwEw10VerbofheaYz2CBx8d735pPIGPUC0SUnzYy2CF8BUrQ/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-w=&quot;1080&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;导出图片后，就一张漂亮的代码展示图。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7287037037037037&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/J0g14CUwaZdkgpaJYKtsDrueUVianNYWXOoZfpTqF6vibkqmIm0O876S1rWbDkRnsicCWCnLpKgSI3b9YQO6yCbNw/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-w=&quot;1080&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;最后&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这两年下来，我感觉至少画了 &lt;code&gt;1000+&lt;/code&gt; 张图了，每一张图其实还是挺费时间的，相信画过图的朋友后，都能体会到这种感觉了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但没办法，谁叫我是图解工具人呢，画图可以更好的诠释文章内容，但最重要的是，把你们吸引过来了，这是件让我非常高兴的事情，也是让我感觉画图这个事情值得认真做。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;文字的分享有局限性，关键还是要你自己动手摸索摸索，形成自己一套画图的方法论，练习的时候可以先从模仿画起，后面再结合工作或文章的需求画出自己心中的那个图。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最后罗列一下，我常用工具：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;画图工具：draw.io&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;思维导图工具：xmind&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;代码贴图工具：carbon&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;文章编写工具：typora、语雀&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果你们知道其他不错的画图工具，欢迎留言说一下。&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mp-common-profile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzUxODAzNDg4NQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/J0g14CUwaZfTwwjfpJhXgIrYMgtVcLhQQBVb02clZfKicbxaibSTNJqXe9Zu8ydiavZKJWJAIhKcnD9hBuKU92JZQ/0?wx_fmt=png&quot; data-nickname=&quot;小林coding&quot; data-alias=&quot;CodingLin&quot; data-signature=&quot;专注图解计算机基础，让天下没有难懂的八股文！刷题网站：xiaolincoding.com&quot; data-from=&quot;0&quot; data-is_biz_ban=&quot;0&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>