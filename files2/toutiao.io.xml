<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>a947ba0614d7524b37ac659533f95634</guid>
<title>100元实践k8s搭建过程</title>
<link>https://toutiao.io/k/1q9wbq2</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content js_underline_content             autoTypeSetting24psection&amp;#10;            &quot; id=&quot;js_content&quot;&gt;&lt;h1 cid=&quot;n2&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;前言&lt;/span&gt;&lt;/h1&gt;&lt;hr/&gt;&lt;p cid=&quot;n3&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;工作中越来越重度使用k8s，想进一步了解k8s的工作原理。一方面学习业界优秀系统设计思路，另一方面多了解也可以提高日常工作效率，比如和k8s开发的沟通效率等。今天第一步：自己着手搭建一个k8s服务。&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;&quot; cid=&quot;n4&quot; mdtype=&quot;fences&quot;&gt;&lt;strong&gt;&lt;span role=&quot;presentation&quot;&gt;本文采用的版本：&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;/&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;kubectl kubelet kubeadm版本: 1.23.1&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;操作系统版本: CentOS 8.2 64位&lt;/span&gt;&lt;/pre&gt;&lt;h2 cid=&quot;n5&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;准备工作&lt;/span&gt;&lt;/h2&gt;&lt;hr/&gt;&lt;h3 cid=&quot;n6&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;1.采购云主机&lt;/span&gt;&lt;/h3&gt;&lt;p cid=&quot;n7&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;官方建议最低云主机配置&lt;/span&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;&lt;span md-inline=&quot;plain&quot;&gt;2核4G&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;，国内任意云厂商采购就行，作为K8S服务的宿主机。&lt;/span&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;&lt;span md-inline=&quot;plain&quot;&gt;本教程操作系统为CentOS 8.2 64位。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;&quot; cid=&quot;n8&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;备注：官方文档标记最低配置内存要求2G，但是安装完dashboard、ingress等服务之后比较卡顿，所以为了流畅这里推荐4G内存。&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.2015625&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/TiccVmMZ3icdgpf3JfbKAvHP5qaGmUX3AIlpCczNrsNxhucEolCuaakGicFuoyW26B0ApMibnetGNScGDXY88OgdjQ/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;h3 cid=&quot;n10&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;2.放开端口&lt;/span&gt;&lt;/h3&gt;&lt;p cid=&quot;n11&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;外网放开&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;30000&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;端口，后续浏览器登陆k8s dashboard看板使用。并检查ssh服务端口22是否正常开启。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.4625&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/TiccVmMZ3icdgpf3JfbKAvHP5qaGmUX3AIVia6ry23YT97oaCtz8dYXVf1iaOc7U1VKSCZeezwrbM31SPogaNq9QicA/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p cid=&quot;n13&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;使用ssh登陆云主机，开始配置。&lt;/span&gt;&lt;/p&gt;&lt;h3 cid=&quot;n14&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;3.安装工具&lt;/span&gt;&lt;/h3&gt;&lt;p cid=&quot;n15&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;安装常用工具：&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;&quot; cid=&quot;n16&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;yum install -y yum-utils device-mapper-persistent-data lvm2 iproute-tc&lt;/span&gt;&lt;/pre&gt;&lt;h3 cid=&quot;n17&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;4.添加阿里源&lt;/span&gt;&lt;/h3&gt;&lt;p cid=&quot;n18&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;国内存在墙的问题，添加阿里源加速：&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;&quot; cid=&quot;n19&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;yum-config-manager --add-repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo&lt;/span&gt;&lt;/pre&gt;&lt;h2 cid=&quot;n20&quot; mdtype=&quot;heading&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;开始安装&lt;/span&gt;&lt;/h2&gt;&lt;hr/&gt;&lt;h2 cid=&quot;n20&quot; mdtype=&quot;heading&quot;&gt;&lt;span md-inline=&quot;plain&quot;/&gt;&lt;/h2&gt;&lt;h3 cid=&quot;n21&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;1.安装社区版本docker&lt;/span&gt;&lt;/h3&gt;&lt;p cid=&quot;n22&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;安装：&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;&quot; cid=&quot;n23&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;yum -y install docker-ce&lt;/span&gt;&lt;/pre&gt;&lt;p cid=&quot;n24&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;enable：&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;&quot; cid=&quot;n25&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;systemctl enable docker&lt;/span&gt;&lt;/pre&gt;&lt;p cid=&quot;n26&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;查看docker版本&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;docker version&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;1.0622317596566524&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;932&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/TiccVmMZ3icdgpf3JfbKAvHP5qaGmUX3AIWhtev5tdVkJoZJ4F285hvWMgyKWtQvq9W4LrmUvOhsf9A9r9EU8FGQ/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;h3 cid=&quot;n28&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;2.安装 kubectl kubelet kubeadm&lt;/span&gt;&lt;/h3&gt;&lt;h4 cid=&quot;n29&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;2.1添加阿里源&lt;/span&gt;&lt;/h4&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;&quot; cid=&quot;n30&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;cat &amp;lt;&amp;lt;EOF &amp;gt; /etc/yum.repos.d/kubernetes.repo&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;[kubernetes]&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;name=Kubernetes&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;enabled=1&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;gpgcheck=1&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;repo_gpgcheck=1&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;EOF&lt;/span&gt;&lt;/pre&gt;&lt;blockquote cid=&quot;n31&quot; mdtype=&quot;blockquote&quot;&gt;&lt;p cid=&quot;n32&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;注意点：v1.24版本后kubernetes放弃docker，安装过程存在一些问题，&lt;/span&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;&lt;span md-inline=&quot;plain&quot;&gt;这里我们指定1.23.1版本安装&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;h4 cid=&quot;n33&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;2.2安装 1.23.1版本 kubectl kubelet kubeadm：&lt;/span&gt;&lt;/h4&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;&quot; cid=&quot;n34&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;yum install -y kubectl-1.23.1 kubelet-1.23.1 kubeadm-1.23.1&lt;/span&gt;&lt;/pre&gt;&lt;p cid=&quot;n35&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;启动kubelet：&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;&quot; cid=&quot;n36&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;systemctl enable kubelet&lt;/span&gt;&lt;/pre&gt;&lt;p cid=&quot;n37&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;查看kubectl版本：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.05078125&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/TiccVmMZ3icdgpf3JfbKAvHP5qaGmUX3AItRVfEB2aXNwD2sU1atOibScIticoSicNIrVuurYVaQAdbvtYDibLHUmHrg/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;h4 cid=&quot;n39&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;2.3修改&lt;code&gt;cgroupdriver&lt;/code&gt;&lt;/span&gt;&lt;/h4&gt;&lt;p cid=&quot;n40&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;执行如下命令：&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;&quot; cid=&quot;n41&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;cat &amp;lt;&amp;lt;EOF &amp;gt; /etc/docker/daemon.json&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;{&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;      &quot;exec-opts&quot;: [&quot;native.cgroupdriver=systemd&quot;]&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;}&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;EOF&lt;/span&gt;&lt;/pre&gt;&lt;p cid=&quot;n42&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;重启服务：&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;&quot; cid=&quot;n43&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;systemctl daemon-reload&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;systemctl restart docker&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;systemctl restart kubelet&lt;/span&gt;&lt;/pre&gt;&lt;h4 cid=&quot;n44&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;2.4替换镜像源&lt;/span&gt;&lt;/h4&gt;&lt;p cid=&quot;n45&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;由于这里我们使用的是国内的云厂商，访问海外&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;k8s.gcr.io&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;拉取镜像存在墙的问题，所以下面我们就替换成&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;registry.cn-hangzhou.aliyuncs.com/google_containers&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;的地址，具体操作如下：&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n46&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;删除旧配置文件：&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;&quot; cid=&quot;n47&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;rm -f /etc/containerd/config.toml&lt;/span&gt;&lt;/pre&gt;&lt;p cid=&quot;n48&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;生产默认配置文件：&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;&quot; cid=&quot;n49&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;containerd config default &amp;gt; /etc/containerd/config.toml&lt;/span&gt;&lt;/pre&gt;&lt;p cid=&quot;n50&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;替换镜像地址：&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;&quot; cid=&quot;n51&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;sed -i &#x27;s/k8s.gcr.io/registry.cn-hangzhou.aliyuncs.com\/google_containers/&#x27; /etc/containerd/config.toml&lt;/span&gt;&lt;/pre&gt;&lt;p cid=&quot;n52&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;重启&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;containerd&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;：&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;&quot; cid=&quot;n53&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;systemctl restart containerd&lt;/span&gt;&lt;/pre&gt;&lt;h4 cid=&quot;n54&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;2.4初始化k8s master节点&lt;/span&gt;&lt;/h4&gt;&lt;p cid=&quot;n55&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;初始化命令：&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;&quot; cid=&quot;n56&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;kubeadm init --kubernetes-version=1.23.1  \&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;--apiserver-advertise-address=&amp;lt;你的云主机内网IP&amp;gt;   \&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;--image-repository registry.aliyuncs.com/google_containers  \&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;--service-cidr=10.10.0.0/16 --pod-network-cidr=10.122.0.0/16&lt;/span&gt;&lt;/pre&gt;&lt;p cid=&quot;n57&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;通常会卡在这一步，如果大家按照本文的版本，理论不会报错，如果报错需要逐个搜索解决了。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.51015625&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/TiccVmMZ3icdgpf3JfbKAvHP5qaGmUX3AI6F5AKibItcoNKcf2gicQQl15gx1DicOPoqaVibPDYNn9xrLqnL466302wQ/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p cid=&quot;n59&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;如果初始化失败，执行如下命令后再重新初始化：&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;&quot; cid=&quot;n60&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;kubeadm reset -f&lt;/span&gt;&lt;/pre&gt;&lt;p cid=&quot;n61&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;初始化成功之后得到如下命令，加入新的node节点使用(本次不使用)：&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;&quot; cid=&quot;n62&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;kubeadm join &amp;lt;你的云主机内网IP&amp;gt;:6443 --token 78376v.rznvls130w3sgwb7 \&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;--discovery-token-ca-cert-hash sha256:add03fb7de52ad73fd96626fa9d9f0d639186524ba34d24742c15fce8093b8c5&lt;/span&gt;&lt;/pre&gt;&lt;p cid=&quot;n63&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;配置&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;kubectl&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;：&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;&quot; cid=&quot;n64&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;mkdir -p $HOME/.kube&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;/&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;cp -i /etc/kubernetes/admin.conf $HOME/.kube/config&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;/&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;chown $(id -u):$(id -g) $HOME/.kube/config&lt;/span&gt;&lt;/pre&gt;&lt;p cid=&quot;n65&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;查看k8s服务启动状态：&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;&quot; cid=&quot;n66&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;kubectl get pod --all-namespaces&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.24140625&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/TiccVmMZ3icdgpf3JfbKAvHP5qaGmUX3AIyZBXHfrQviacIvjTHnypvyMAnialV8nSzOoibKPecOBuzxIWeFwBBWMow/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;h3 cid=&quot;n68&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;3.安装calico网络&lt;/span&gt;&lt;/h3&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;&quot; cid=&quot;n69&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml&lt;/span&gt;&lt;/pre&gt;&lt;p cid=&quot;n70&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;安装完毕后，查看calico服务启动状态：&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;&quot; cid=&quot;n71&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;kubectl get pod --all-namespaces&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.3046875&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/TiccVmMZ3icdgpf3JfbKAvHP5qaGmUX3AIiaqiapHR7B8KXK2YerQ2sWtk3Ac4yc9vBibTGibPrSoSIL9aULicxuFicJog/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;h3 cid=&quot;n73&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;4.安装kubernates-dashboard&lt;/span&gt;&lt;/h3&gt;&lt;h4 cid=&quot;n74&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;4.1 下载配置文件&lt;/span&gt;&lt;/h4&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;&quot; cid=&quot;n75&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;wget https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0-rc7/aio/deploy/recommended.yaml&lt;/span&gt;&lt;/pre&gt;&lt;h4 cid=&quot;n76&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;4.2 添加nodeport&lt;/span&gt;&lt;/h4&gt;&lt;p cid=&quot;n77&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;配置nodeport，外网访问dashboard：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;2.355223880597015&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;670&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/TiccVmMZ3icdgpf3JfbKAvHP5qaGmUX3AIk4XCS5x4dI32eHF7oO3fBR8pUvyzlZdQZZQrnheO546Zzk0DFtV7cQ/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;h4 cid=&quot;n79&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;4.3 创建dashboard服务&lt;/span&gt;&lt;/h4&gt;&lt;p cid=&quot;n80&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;创建：&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;&quot; cid=&quot;n81&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;kubectl apply -f recommended.yaml&lt;/span&gt;&lt;/pre&gt;&lt;p cid=&quot;n82&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;查看kubernetes-dashboard启动状态：&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;&quot; cid=&quot;n83&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;kubectl get pod -n kubernetes-dashboard&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.12216404886561955&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;1146&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/TiccVmMZ3icdgpf3JfbKAvHP5qaGmUX3AICKF6fvowqIgQpGV9ib6VVDiajszHXuVvFRZCUzARHMn5hzNQfxwDWicmg/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;h4 cid=&quot;n85&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;4.4 外网访问dashboard&lt;/span&gt;&lt;/h4&gt;&lt;p cid=&quot;n86&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;浏览器打开dashboard，地址：&lt;/span&gt;&lt;span md-inline=&quot;autolink&quot; spellcheck=&quot;false&quot;&gt;你的外网IP:30000&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.475&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/TiccVmMZ3icdgpf3JfbKAvHP5qaGmUX3AIqy3P8YZf2chFud5lgUibDBXXeGJx9wELdtEujbQBfW0QUucHnADckicw/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p cid=&quot;n88&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;如上图所示，因为https的问题，浏览器会提示「您的连接不是私密连接」。推荐使用chrome浏览器，并在当前页面上任意位置点击，然后键盘输入「thisisunsafe」再点击回车健即可。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.5328125&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/TiccVmMZ3icdgpf3JfbKAvHP5qaGmUX3AIhicf0r37Mlic61RYk5xerkYODn76ufIQfZmzlLOgkZXtPk9mWDVW8n8Q/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;h4 cid=&quot;n90&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;4.5 获取token&lt;/span&gt;&lt;/h4&gt;&lt;p cid=&quot;n91&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;创建用户。&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;dashboard-adminuser.yaml&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;配置文件示例，执行如下命令直接创建，参考官方教程创建示例用户 &lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;https://github.com/kubernetes/dashboard/blob/master/docs/user/access-control/creating-sample-user.md&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;：&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n92&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;创建配置文件：&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;&quot; cid=&quot;n93&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;cat &amp;lt;&amp;lt;EOF &amp;gt; dashboard-adminuser.yaml&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;apiVersion: v1&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;kind: ServiceAccount&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;metadata:&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;  name: admin-user&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;  namespace: kubernetes-dashboard&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;---&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;apiVersion: rbac.authorization.k8s.io/v1&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;kind: ClusterRoleBinding&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;metadata:&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;  name: admin-user&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;roleRef:&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;  apiGroup: rbac.authorization.k8s.io&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;  kind: ClusterRole&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;  name: cluster-admin&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;subjects:&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;- kind: ServiceAccount&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;  name: admin-user&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;  namespace: kubernetes-dashboard&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;EOF&lt;/span&gt;&lt;/pre&gt;&lt;p cid=&quot;n94&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;创建用户：&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;&quot; cid=&quot;n95&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;kubectl apply -f dashboard-adminuser.yaml&lt;/span&gt;&lt;/pre&gt;&lt;p cid=&quot;n96&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;创建成功之后提示：&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;&quot; cid=&quot;n97&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;serviceaccount/admin-user created&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;clusterrolebinding.rbac.authorization.k8s.io/admin-user created&lt;/span&gt;&lt;/pre&gt;&lt;p cid=&quot;n98&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;执行如下命令获取token:&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;&quot; cid=&quot;n99&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;kubectl -n kubernetes-dashboard get secret $(kubectl -n kubernetes-dashboard get sa/admin-user -o jsonpath=&quot;{.secrets[0].name}&quot;) -o go-template=&quot;{{.data.token | base64decode}}&quot;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.0828125&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/TiccVmMZ3icdgpf3JfbKAvHP5qaGmUX3AI7ACibadTb9wzpIS7u6FM8AsUgAob8Nz0xQQMn1Lwb2Rn6VmCYqPez8w/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;h4 cid=&quot;n101&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;4.6 复制token登陆dashboard&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.565625&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/TiccVmMZ3icdgpf3JfbKAvHP5qaGmUX3AIgQWcDdRESQH3RwkXHNwhBFbsBMia52oxtYhjzE3EGKL36XuJW9XxYjA/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p cid=&quot;n103&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;到这里我们已经可以正常创建pod了，但是外网还不能直接访问到pod，虽然可以采用dashboard的&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;nodeport&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;的方案，但是&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;nodeport&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;只支持暴露30000-32767的端口，不适用于生产环境，接着我们就通过另一种方式&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;ingress&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;来对外暴露pod。&lt;/span&gt;&lt;/p&gt;&lt;h3 cid=&quot;n104&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;5. 安装ingress&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;span md-inline=&quot;plain&quot;&gt;ingress-nginx详细官方教程：&lt;/span&gt;&lt;span md-inline=&quot;url&quot; spellcheck=&quot;false&quot;&gt;https://kubernetes.github.io/ingress-nginx/deploy/#quick-start&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;h4 cid=&quot;n105&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;5.1 下载官方配置文件，这里使用的v1.3.1版本：&lt;/span&gt;&lt;/h4&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;&quot; cid=&quot;n106&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;wget https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.3.1/deploy/static/provider/cloud/deploy.yaml&lt;/span&gt;&lt;/pre&gt;&lt;h4 cid=&quot;n107&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;5.2 同样由于墙的问题，我们把配置文件中的镜像源换成阿里源：&lt;/span&gt;&lt;/h4&gt;&lt;p cid=&quot;n108&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;替换&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;nginx-ingress-controller&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;镜像源：&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;&quot; cid=&quot;n109&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;sed -i &#x27;s/registry.k8s.io\/ingress-nginx\/controller:v1.3.1@sha256:54f7fe2c6c5a9db9a0ebf1131797109bb7a4d91f56b9b362bde2abd237dd1974/registry.cn-hangzhou.aliyuncs.com\/google_containers\/nginx-ingress-controller:v1.3.1/g&#x27; ./deploy.yaml&lt;/span&gt;&lt;/pre&gt;&lt;p cid=&quot;n110&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;替换&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;kube-webhook-certgen&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;镜像源：&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;&quot; cid=&quot;n111&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;sed -i &#x27;s/registry.k8s.io\/ingress-nginx\/kube-webhook-certgen:v1.3.0@sha256:549e71a6ca248c5abd51cdb73dbc3083df62cf92ed5e6147c780e30f7e007a47/registry.cn-hangzhou.aliyuncs.com\/google_containers\/kube-webhook-certgen:v1.3.0/g&#x27; ./deploy.yaml&lt;/span&gt;&lt;/pre&gt;&lt;h4 cid=&quot;n112&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;5.3 创建ingress服务&lt;/span&gt;&lt;/h4&gt;&lt;p cid=&quot;n113&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;创建：&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;&quot; cid=&quot;n114&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;kubectl apply -f deploy.yaml&lt;/span&gt;&lt;/pre&gt;&lt;p cid=&quot;n115&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;查看状态：&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;&quot; cid=&quot;n116&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;kubectl get pod --all-namespaces&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.36484375&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/TiccVmMZ3icdgpf3JfbKAvHP5qaGmUX3AI7PCVlclYVusxQY2pxxcJwEVIE2KKHYVtXA57H2owal4jRtJZ2Ric2Xw/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p cid=&quot;n118&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;创建完成之后，查看ingress状态，为&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;pending&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;状态，原因是缺少LB，这里我们使用&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;metallb&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; 。&lt;/span&gt;&lt;/p&gt;&lt;h4 cid=&quot;n119&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;5.4 安装metallb&lt;/span&gt;&lt;/h4&gt;&lt;p cid=&quot;n120&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;执行安装命令：&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;&quot; cid=&quot;n121&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.13.7/config/manifests/metallb-native.yaml&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.3984375&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/TiccVmMZ3icdgpf3JfbKAvHP5qaGmUX3AIz2gBstMSsFYD7KrjWRqzj49ksjtkwozyia1icXvBNxotfjMlhrLYldDg/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p cid=&quot;n123&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;创建secret：&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;&quot; cid=&quot;n124&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;kubectl create secret generic -n metallb-system memberlist --from-literal=secretkey=&quot;$(openssl rand -base64 128)&quot;&lt;/span&gt;&lt;/pre&gt;&lt;p cid=&quot;n125&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;查看安装状态：&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;&quot; cid=&quot;n126&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;kubectl get ns&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;kubectl get all -n metallb-system&lt;/span&gt;&lt;/pre&gt;&lt;h4 cid=&quot;n127&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;5.4 绑定外网IP &lt;code&gt;EXTERNAL-IP&lt;/code&gt;&lt;/span&gt;&lt;/h4&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;&quot; cid=&quot;n128&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;kubectl get service ingress-nginx-controller --namespace=ingress-nginx&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.0828125&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/TiccVmMZ3icdgpf3JfbKAvHP5qaGmUX3AIbrkldQI7923eA8YK4ibsEETjxrahhHw376kM1gWmtyPP97guWJ825RQ/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;&quot; cid=&quot;n130&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;kubectl edit service ingress-nginx-controller --namespace=ingress-nginx&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;/&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;添加：&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;externalIPs:&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;  - 118.195.228.232&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;1.4478021978021978&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;728&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/TiccVmMZ3icdgpf3JfbKAvHP5qaGmUX3AIiaCJiaAvdQLwQEtZicRH4yJpnfVMaxNsH6cxoTJ0RQeAf2OZaiaZJxXsuQ/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;&quot; cid=&quot;n132&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;kubectl get service ingress-nginx-controller --namespace=ingress-nginx&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.29191321499013806&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;1014&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/TiccVmMZ3icdgpf3JfbKAvHP5qaGmUX3AId5x3u1H2jENFPuJBsyGwoX5ticEPTic5y6Gvq9px5DtKcKFYDwXAhyOQ/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p cid=&quot;n134&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;查看启动状态&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;kubectl get pod --all-namespaces&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.3984375&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/TiccVmMZ3icdgpf3JfbKAvHP5qaGmUX3AIz2gBstMSsFYD7KrjWRqzj49ksjtkwozyia1icXvBNxotfjMlhrLYldDg/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p cid=&quot;n136&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;metalab和&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;ingress-nginx&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;的状态还是&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;pending&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;，查看原因：&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;&quot; cid=&quot;n137&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;kubectl describe pod ingress-nginx-controller-6bfbdbdd64-jp7lw -n ingress-nginx&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.2671875&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/TiccVmMZ3icdgpf3JfbKAvHP5qaGmUX3AIdDibJQfA2xJDwibY40uyIvLZhrw6Lz9TMXSISSjzmcMy7sic9jvwA5sOw/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p cid=&quot;n139&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;原因是现在只有&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;master&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;节点，还没有&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;node&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;节点，未了节省成本，这里我们允许master参与调度，把master节点也当node使用。&lt;/span&gt;&lt;/p&gt;&lt;h4 cid=&quot;n140&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;5.5 允许master节点可以被调度&lt;/span&gt;&lt;/h4&gt;&lt;p cid=&quot;n141&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;执行：&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;&quot; cid=&quot;n142&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;kubectl taint nodes --all node-role.kubernetes.io/master-&lt;/span&gt;&lt;/pre&gt;&lt;p cid=&quot;n143&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;查看pod状态：&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;&quot; cid=&quot;n144&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;kubectl get pod --all-namespaces&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.421875&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/TiccVmMZ3icdgpf3JfbKAvHP5qaGmUX3AIGy9jE70wQBGwZ8rhA1OBkQHpndHT3Xr2ia7iaQjcLk9K3OmoOkaEBuSw/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p cid=&quot;n146&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;pod均正常运行。到这里，一个基础的k8s服务基本安装完成。&lt;/span&gt;&lt;/p&gt;&lt;h2 cid=&quot;n147&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;体验k8s&lt;/span&gt;&lt;/h2&gt;&lt;hr/&gt;&lt;h2 cid=&quot;n147&quot; mdtype=&quot;heading&quot;&gt;&lt;span md-inline=&quot;plain&quot;/&gt;&lt;/h2&gt;&lt;h3 cid=&quot;n148&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;解析域名&lt;/span&gt;&lt;/h3&gt;&lt;p cid=&quot;n149&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;你的测试域名A解析到服务器的外网IP上，具体步骤略。&lt;/span&gt;&lt;/p&gt;&lt;h3 cid=&quot;n150&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;创建测试服务pod&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;你创建一个部署空间，使用httpd作为一个服务：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;&quot; cid=&quot;n151&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;kubectl create deployment demo --image=httpd --port=80&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;/&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;kubectl expose deployment demo&lt;/span&gt;&lt;/pre&gt;&lt;h3 cid=&quot;n152&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;创建ingress映射&lt;/span&gt;&lt;/h3&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;&quot; cid=&quot;n153&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;kubectl create ingress demo --class=nginx  --rule=&quot;k8s.tigerb.cn/*=demo:80&quot;&lt;/span&gt;&lt;/pre&gt;&lt;h3 cid=&quot;n154&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;测试&lt;/span&gt;&lt;/h3&gt;&lt;p cid=&quot;n155&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;查看ingress服务service的外网端口&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.1&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/TiccVmMZ3icdgpf3JfbKAvHP5qaGmUX3AINweicxcpkCHyFxBvPZDOQok9Ege9pBq2wpqTicMNOUXnu1jBIkIrpaRg/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p cid=&quot;n157&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;demo&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;pod启动成功后访问&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;http://k8s.tigerb.cn:32374/&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;测试服务即可。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.521875&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/TiccVmMZ3icdgpf3JfbKAvHP5qaGmUX3AIiaTSyicSoLOQlkfR3ibofBaiaoyIuZxicnmKmQDxGGjib5qhiakc70ibHC812Q/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p cid=&quot;n159&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;url&quot; spellcheck=&quot;false&quot;&gt;到此为止，我们就成功部署了一个k8s服务，使用dashborad就可以很轻松完成服务部署、扩容、缩容等。&lt;/span&gt;&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;Go轻松进阶系列&lt;/span&gt;&lt;/strong&gt;&lt;span&gt; 更多文章&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/TiccVmMZ3icdgDGUicDlY5kWW5P7CL4n2Uf7xYPLAEo3zFQxsYSDeHbticPicM8eJnZia0HM6pFhFK0rVmKKX0X4CbBg/640?wx_fmt=jpeg&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.06302521008403361&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;714&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/TiccVmMZ3icdjOmxkheVnwCeibLWia2yTSSAnu4wH1RgmdCrGrIicz5oicSN5gbZxKaiaZ3oicxDC3iaOCm92d2VjbqGMmw/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-tools-id=&quot;36694&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.375&quot; data-type=&quot;gif&quot; data-w=&quot;40&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_gif/TiccVmMZ3icdiazAwOwey9wAIliamDeGicTOXib4HFynOX3BUxJMO7b4Azq3fNx3JgEwKU3NMG3N2hLLfIsqCUJMd43w/640?wx_fmt=gif&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;mp-style-type data-value=&quot;3&quot;/&gt;&lt;/p&gt;&lt;/div&gt;

          
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>1cf5fcdbfb36d2adeae0e905f31f3b83</guid>
<title>浅谈 Remote Work</title>
<link>https://toutiao.io/k/0agnq5z</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content js_underline_content             autoTypeSetting24psection&amp;#10;            &quot; id=&quot;js_content&quot;&gt;&lt;section&gt;&lt;span&gt;今天，来聊一下 &lt;strong&gt;&lt;span&gt;Remote Work&lt;/span&gt;&lt;/strong&gt;。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.5294117647058824&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/la8s6uvJibdSEHaQmoV09x0BeUWhxibRSvicl9zGDzPwWMn1f5QXz7vO7vsicfbqQc2ozLnQ0107aaroUHyM7icBCiaQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;850&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;Remote Work &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;(远程办公) 近几年慢慢为人熟知，一定程度上和 &lt;span&gt;&lt;strong&gt;&lt;span&gt;Work From Home &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;(居家办公) 有很大关系。但事实上, &lt;strong&gt;&lt;span&gt;Remote Work &lt;/span&gt;&lt;/strong&gt;和 &lt;strong&gt;&lt;span&gt;Work From Home &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;并不是一回事。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;Remote Work&lt;/span&gt;&lt;/strong&gt;，&lt;/span&gt;&lt;span&gt;指的是在公司办公室外进行的工作。是的，远程可能发生在家里，但也可能发生在旅途、咖啡馆、酒店等，办公地点完全由员工选择。而&lt;/span&gt;&lt;span&gt; &lt;span&gt;&lt;strong&gt;&lt;span&gt;Work From Home &lt;/span&gt;&lt;/strong&gt;专指团队成员必须在家中或居住地工作的工作模式，&lt;/span&gt;&lt;/span&gt;&lt;span&gt;一般仅作为 &lt;strong&gt;&lt;span&gt;On-site&lt;/span&gt;&lt;/strong&gt; 一个替代方案。你看，疫情好转后，很多公司取消了 &lt;strong&gt;&lt;span&gt;Work From Home &lt;/span&gt;&lt;/strong&gt;的政策，要求大家继续去办公室搬砖。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;下面，我结合自己最近远程工作的经历，来聊聊：&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;Remote Work &lt;/span&gt;&lt;/strong&gt;的优缺点&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;申请&lt;strong&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;Remote Work&lt;/span&gt;&lt;/strong&gt; 的常用网站&lt;/span&gt;&lt;strong&gt;&lt;span/&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;拿到&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt; Remot&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;e Work Offer &lt;/span&gt;&lt;/strong&gt;&lt;span&gt;的一些 &lt;/span&gt;&lt;strong&gt;&lt;span&gt;Tips&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;1. &lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;Remote Work &lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;的优缺点&lt;/span&gt;&lt;strong&gt;&lt;span/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;优点&lt;/span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;每天至少可以省下两个小时的通勤时间。而这两个小时，我可以用来练习英语，或者偶尔站在窗边发发呆，或者去学校接小孩；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;每天可以陪伴家人，陪孩子慢慢长大。即使工作的时候一般不和家人不说话，但你要知道，有一个大活人就坐书房，家人会觉得很心安&lt;span&gt;；&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;拒绝地沟油，每天都能吃到爱心早餐、午餐和晚餐；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;除了时间开销，经济开销也少了，每个月停车费+油费+餐费，可节省 2k 多；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;每天和来自不同国家，不同时区，操着不同语言的小伙伴一起工作，口语和见识多少是有些进步的；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;办公地点不受限制，如果不考虑子女教育和医疗，完全可以去三四线城市生活，看下面的画面来感受一下：&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.9143356643356644&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/la8s6uvJibdSEHaQmoV09x0BeUWhxibRSvZ8FribsSYe9DKXZjcXUz4icHicT45ZEWibe7mf4icjLhlG8RbAnotCfC8sQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2288&quot;/&gt; &lt;/section&gt;&lt;p&gt;&lt;span&gt;缺点&lt;/span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;很难有现场办公那样的高效、及时的沟通：你明明看到那个人的 Slack 是在线的，但 Ta 可能就是临时走开了，只能等；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;需要有完善的 O&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;ncall&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; 机制，不然出现问题的时候，你是找不到人的；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;工作时间一般是超过 8 小时的，尤其是晚上 12 点你准备休息的时候，可能西半球的同事早上 9 点刚上线，有很多事想找你沟通；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;该死的孤独感：快乐没有那么强烈，悲伤却可以持续一段时间，所以要找到适合自己的方式排解；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;健康问题：久坐会导致脖子酸，脊椎痛，还有肉眼可见的赘肉，不断塌陷；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;可能需要自己处理社保和税收问题: 可参考 &lt;/span&gt;&lt;span&gt;https://eleduck.com/posts/mbfBXa&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;2. &lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;申请&lt;/span&gt;&lt;span&gt;&lt;span&gt; Remote Work &lt;/span&gt;&lt;span&gt;的&lt;/span&gt;&lt;/span&gt;&lt;span&gt;常用网站&lt;/span&gt;&lt;strong&gt;&lt;span/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;国内常用网站&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;V2EX&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;  &lt;/span&gt;&lt;span&gt;https://www.v2ex.com/go/jobs&lt;/span&gt;&lt;span&gt;,  &lt;/span&gt;&lt;span&gt;需要科学上网，里面不仅有远程的职位，也有一些大厂和独角兽的内推信息。整体而言，发帖质量比较高，信息也比较可靠；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;电鸭&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;&lt;span&gt;https://eleduck.com/categories/5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;国内找远程岗位的主要阵地，但帖子的质量参差不齐。查看联系方式需要付费，建议不要去联系那些&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt; 写着高薪，但工作内容语焉不详的公司，自己需要有判断力；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;Brix Labs&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;:  &lt;/span&gt;&lt;span&gt;https://brix-zh.webflow.io&lt;/span&gt;&lt;span&gt;，&lt;/span&gt;&lt;span&gt;这其实是一个远程人才的服务平台，帮国外的雇主招聘远程人才，解决远程雇员的薪资和福利问题。需要通过平台自身的面试（算法 + 英语），然后有专人跟进，推荐到雇主再进行面试。个人经历下来，是比较靠谱的一个平台。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;国外常用网站&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;仅推荐自己使用过、投递后有反馈、有面试的网站：&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;LinkedIn:&lt;/span&gt;&lt;/strong&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;https://www.linkedin.com/jobs/&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;AngelLi&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;st：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;https://angel.co/jobs&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;Fiverr: &lt;/span&gt;&lt;/strong&gt;&lt;span&gt;https://www.fiverr.com/&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;Upwork&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;:&lt;/span&gt;&lt;/strong&gt; &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;https://www.upwork.com/&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;We Work Remotely&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;:&lt;/span&gt;&lt;/strong&gt;  &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;https://weworkremotely.com/&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;Remotive&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;: &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;https://remotive.com/&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;Web3&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt; 远程岗位&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;https://web3.career/&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;h&lt;/span&gt;&lt;span&gt;ttps://www.marswork.xyz/&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;h&lt;/span&gt;&lt;span&gt;ttps://findweb3.com/jobs&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;h&lt;/span&gt;&lt;span&gt;ttps://www.defi.jobs/&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;3. &lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;拿到&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt; Remote Work Offer &lt;/span&gt;&lt;span&gt;的一些 &lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;Tips&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;综合各大远程网站的招聘信息，整体而言，目前远程雇主对人才的需求：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;小伙伴们可以结合自己的技术栈，有针对性地去选择和准备。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;当然，要拿到一份适合自己的远程 &lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;Offer&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; ，接下来还要做些功课&lt;/span&gt;&lt;span&gt;：&lt;/span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;练好口语！练好口语！练好口语！&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;重要的事情说三遍。英语口语真的很重要，特别是对于我们国内那些技术能力比较强，书面英语也不错，但就是不会开口说的工程师来说，口语可以说是打开远程世界的一扇窗。当然，我得承认，我的口语目前也不溜，但一年多下来，基本能 hold 住每天近 &lt;/span&gt;&lt;span&gt;30&lt;/span&gt;&lt;span&gt; 分钟的晨会了；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;LeetCode &lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;上&lt;/span&gt;&lt;span&gt;的 &lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;HOT 100 &lt;/span&gt;&lt;/strong&gt;&lt;span&gt;算法题，建议多刷几遍。因为国外的技术面试基本需要考 1-2 轮的算法, 没有一定的题量输入的话，面试时很难临场想出破解之法；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;准备一些 &lt;/span&gt;&lt;strong&gt;&lt;span&gt;System Design&lt;/span&gt;&lt;/strong&gt;&lt;span&gt; 的题目，尤其是像 &lt;/span&gt;&lt;strong&gt;&lt;span&gt;Twitter timeline&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;, &lt;/span&gt;&lt;strong&gt;&lt;span&gt;K-V storage&lt;/span&gt;&lt;/strong&gt;&lt;span&gt; 这些，理清思路后多用英语对着镜子说几遍，面试时不要忘了要和面试官多互动互动。当然，面试之前找个人 &lt;/span&gt;&lt;strong&gt;&lt;span&gt;mock interview&lt;/span&gt;&lt;/strong&gt;&lt;span&gt; 一下也是不错的建议；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;准备一些 &lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;Behavioural Questions&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;，比如：以往工作中遇到冲突怎么处理？遇到任务延期怎么处理？等等。油管上有很多好的视频，可以移步去学习。 &lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;等拿到了远程的 &lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;offer&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;，接下来就得为自己准备一个舒服的办公环境了，个人觉得这个投入是必要的：&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;一把舒服的人体工程学椅子：能缓解久坐对脊柱和腰椎的部分伤害；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;一个可以肆意敲击，再也不用担心会干扰到其他同事的机械键盘。它可以提醒你，你在好好工作！&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;至少备两个能&lt;/span&gt;&lt;span&gt;科&lt;/span&gt;&lt;span&gt;学&lt;/span&gt;&lt;span&gt;上网的&lt;/span&gt;&lt;span&gt;软件；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;一个番茄钟，防止自己走神；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;熟悉 &lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;Google Suit&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;：&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;Google meeting + Google Doc + Google Calendar&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;熟悉 &lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;Slack&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;：&lt;/span&gt;&lt;span&gt;外企常用工作沟通软件。&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;By the way&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;，&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;Slack&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; 有个抱团功能很好用，在 &lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;Slack &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;上&lt;span&gt;拉&lt;/span&gt;几个人开会很方便，一定程度上可以代替 &lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;Zoom&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;熟悉 &lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;Jira + Confluence&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;：外企产研部门必备套件。用于日常研发任务管理以及一些工作文档的沉淀。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;Good Luck, Guys!&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;strong&gt;&lt;span/&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;mp-style-type data-value=&quot;3&quot;/&gt;&lt;/p&gt;&lt;/div&gt;

          
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>7aa66c146ac3f489f74700d15296e815</guid>
<title>“爆料” 完整秒杀架构的设计到技术关键点的 “情报信息”</title>
<link>https://toutiao.io/k/mvd1ipo</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div id=&quot;content_views&quot; class=&quot;markdown_views prism-tomorrow-night&quot;&gt;
                    &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;
                        &lt;path stroke-linecap=&quot;round&quot; d=&quot;M5,0 0,2.5 5,5z&quot; id=&quot;raphael-marker-block&quot;/&gt;
                    &lt;/svg&gt;
                    &lt;h1&gt;&lt;a id=&quot;_0&quot;/&gt;前提声明&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;本篇内容完全是笔者自己对技术分析和总结沉淀，由于笔者技术和能力有限，如果有不对的地方，还望大家多多见谅和包涵，并且多多指正留言，谢谢。&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;&lt;a id=&quot;_4&quot;/&gt;秒杀系统-情报背景&lt;/h1&gt; 
&lt;p&gt;相信大家都接触过新浪微博、淘宝、京东等等这些访问量较为巨大的平台以及网站，针对于“高流量”、“高并发”来讲，更是我们【技术开发者】都要面临的的一个很难的“包袱”难题。哎，看来如果要在这行混下去，即使你可能没有接触高并发场景，也要自己创造“高并发”进行迎难而上，因为只有这样子我们才可以更进一步啊！&lt;/p&gt; 
&lt;h1&gt;&lt;a id=&quot;_8&quot;/&gt;秒杀系统-情报介绍&lt;/h1&gt; 
&lt;p&gt;对于今天我们要介绍的内容就属于高并发的一个最极端的场景之一：“秒杀”，这个名词一般会在“大促”的时候出现，当然也会在某些平台活动上出现，那么肯定会有小伙伴会说，秒杀系统要注意哪些问题啊！为啥会比较难呢，难在哪里啊！&lt;/p&gt; 
&lt;h2&gt;&lt;a id=&quot;__13&quot;/&gt;秒杀系统- 特点分析&lt;/h2&gt; 
&lt;ul&gt;&lt;li&gt; &lt;p&gt;&lt;strong&gt;瞬时剧增：在某一个时刻开始进入流量（很少会有热身以及缓慢增长机制），秒杀时大量用户会在同一时间，抢购同一商品，网站瞬时流量激增。&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;&lt;strong&gt;僧多粥少：商品的库存是有限的，秒杀请求下的订单数量会远远大于库存数量，只有少部分用户能够秒杀成功。&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;&lt;strong&gt;资源锁定：秒杀业务流程比较简单，一般就是下订单减库存。库存就是用户争夺的“资源”，实际被消费的“资源”不能超过计划要售出的“资源”，也就是不能被“超卖”。&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt;&lt;/ul&gt; 
&lt;h1&gt;&lt;a id=&quot;__21&quot;/&gt;秒杀系统- 难度分析&lt;/h1&gt; 
&lt;p&gt;它的难度就在于要完成一个“60-100分”的秒杀系统，那么它必须要要至少兼顾以下这三个方面，才算合格，这三个“恶魔”分别叫“服务可用性”、“数据一致性”和“快速响应性”，有点“苛刻”！&lt;/p&gt; 
&lt;p&gt;在我们现在的场景下，很难再去考虑一个非分布式系统的架构了。（分布式架构）相信大家都知道CAP理论吧！没事不知道也没关系，可见内容：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;CAP理论又称CAP定理，它说的是在一个分布式系统中，服务（数据）层面的一致性（Consistency）、服务自身的可用性（Availability）、网络不同节点分区容错性（Partition tolerance）。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;A和C相信大家从字面上都可以理解了，这里要声明一下比较陌生的P：它代表如果要保证不同的节点即使在网络出现问题的时候仍能够访问到数据，那么最直接的办法就是冗余赋值节点，否则一切都是空谈，所以作为一个分布式系统而言，无法忽略P，我们可以理解它就是A和C的基础。&lt;/p&gt; 
&lt;h3&gt;&lt;a id=&quot;CAP_31&quot;/&gt;CAP体系总结&lt;/h3&gt; 
&lt;ul&gt;&lt;li&gt; &lt;p&gt;只保证AC就是一个单体应用，根本不是分布式。意义当然有，在分布式出现之前都是这么搭系统。倘若这个系统的节点之一挂了，不会发生脑裂而是整个系统直接宕掉。&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;进一步说如果网络中存在的节点越多，分区容忍性越高，但要复制更新的数据就越多，一致性就越难保证。&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;为了保证一致性，更新所有节点数据所需要的时间就越长，可用性就会降低。&lt;/p&gt; &lt;/li&gt;&lt;/ul&gt; 
&lt;p&gt;以上三者成为了“矛盾论”，而CAP原则指的是，这三个要素最多只能同时实现两点，不可能三者兼顾。&lt;/p&gt; 
&lt;p&gt;回到我们的主体：秒杀三要素，它们三个可不完全等同于CAP三要素，甚至比它们的要求更高，甚至是基于前三者的一个更高层次的水平要求。&lt;/p&gt; 
&lt;h3&gt;&lt;a id=&quot;Availability_43&quot;/&gt;服务的可用性（Availability）&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;服务可用性，是在于高并发流量的冲击下，仍然可以保持服务的可用性并且还要保证一直可以输出对外界的服务能力，不会造成宕机以及资源损坏，即使在内存和网络甚至硬件资源有限的情况下，也不会被击垮“死亡”。&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;比如就像你养鱼，你玩命的给鱼放饲料，而超过了鱼能够承受的量，它受不了了活活被噎死或者撑死了，这鱼就像你的系统一样，一定要保证鱼的健康啊！&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;&lt;a id=&quot;Consistency_49&quot;/&gt;数据的一致性（Consistency）&lt;/h3&gt; 
&lt;p&gt;都知道，我们开发的程序以及现在多数的服务器，比如数据库，他们在处理数据的时候，很有可能会存在多个线程同时在修改同一行数据或者同一块内存，在Java角度而言本身也会存在不一致的问题，而在程序和中间件的角度而言，也是一样，会出现同一时刻在数据修改顺序的乱序化，以及数据的紊乱，造成数据的重复操作，造成与我们预期的设想不同。&lt;/p&gt; 
&lt;ul&gt;&lt;li&gt; &lt;p&gt;除非你可以实现串行化，一条一条处理，不让它们同一时刻就行修改或者操作数据，这个是最本质且最安全的办法，但是也是最影响性能的办法。（悲观锁、同步队列）。&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;此外还有一种办法就是，时时刻刻在原子层级，也就是最接近底层的计算机修改数据的时候，或者在所有节点之间建立一个应用层级的中间汇总干路点（redis或者database的主干点），上面加入写屏障和读屏障，在修改之前，在进行一次校验判断，如果数据与预期不同，就不进行修改。这就是著名的乐观锁！&lt;/p&gt; &lt;/li&gt;&lt;/ul&gt; 
&lt;h3&gt;&lt;a id=&quot;Quick_Response_57&quot;/&gt;服务快速响应性（Quick Response）&lt;/h3&gt; 
&lt;p&gt;一般来讲这个属于用户体验，一个较为合格的秒杀系统，是不应该让用户漫长的等待而是最好尽可能快速反馈结果。&lt;/p&gt; 
 
&lt;h3&gt;&lt;a id=&quot;_65&quot;/&gt;总结一下&lt;/h3&gt; 
&lt;ol&gt;&lt;li&gt; &lt;p&gt;（异步返回+同步处理）总结一下就是异步中套用者同步进行计算，既可以保证快速响应，又可以保证数据的一致性。&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;（异步返回+乐观锁处理）总结一下就是异步中套用者乐观锁进行计算，既可以保证快速响应，又可以保证数据的一致性。&lt;/p&gt; &lt;/li&gt;&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;情报分析结束后，我们要重头戏！进行技术分析了。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;&lt;a id=&quot;_73&quot;/&gt;秒杀系统-架构设计&lt;/h1&gt; 
&lt;p&gt;我们将秒杀架构进行一下划分，大体分为三个层级进行分析：由外到内进行分析，分别是：应用层、服务层、数据访问层。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/img_convert/09f2bccdaf4ed50c5e471f7ee4f8a174.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;a id=&quot;_79&quot;/&gt;秒杀架构设计点&lt;/h2&gt; 
&lt;h3&gt;&lt;a id=&quot;_81&quot;/&gt;应用层架构设计&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/img_convert/b8efe8bfb09a1d748fd9534e11cc3f2c.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;a id=&quot;CDN_85&quot;/&gt;动静分离+CDN技术&lt;/h4&gt; 
&lt;h5&gt;&lt;a id=&quot;_87&quot;/&gt;动静分离分析&lt;/h5&gt; 
 
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/img_convert/ad131f4aab726330b1b5357aba29c664.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt; 
&lt;h5&gt;&lt;a id=&quot;CDN_98&quot;/&gt;CDN技术分析&lt;/h5&gt; 
&lt;h5&gt;&lt;a id=&quot;_100&quot;/&gt;突然增加的网络及服务器带宽&lt;/h5&gt; 
&lt;p&gt;网站的静态页面数据大小100K，那么需要的网络和服务器带宽是2G（100K×10000），这些网络带宽是因为秒杀活动新增的，超过网站平时使用的带宽。&lt;/p&gt; 
&lt;p&gt;即使将动态业务转换为静态化页面，但是秒杀活动会非常剧烈的增加的网络带宽的消耗，&lt;strong&gt;同时并不会减轻前端网站服务器的压力&lt;/strong&gt;，所以如果可以的话，需要再进一步将秒杀商品页面缓存在CDN，而不在是单纯的我们的前端Nginx服务器层面，&lt;strong&gt;所以需要和CDN服务商临时租借新增的出口带宽&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/img_convert/8686919da11215ce5fb84980a5ccdea6.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt; 
&lt;h5&gt;&lt;a id=&quot;_108&quot;/&gt;防止缓存干扰页面刷新为秒杀页面&lt;/h5&gt; 
&lt;h5&gt;&lt;a id=&quot;javascript_110&quot;/&gt;通过javascript文件进行传递随机号+状态位！&lt;/h5&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;在秒杀商品静态页面中加入一个JavaScript文件引用，该JavaScript文件中包含秒杀开始标志为否；&lt;/strong&gt;&lt;br/&gt; &lt;img src=&quot;https://img-blog.csdnimg.cn/img_convert/3fc486625527586e15da07e4747a6e1f.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt;&lt;li&gt; &lt;p&gt;当秒杀开始的时候生成一个新的JavaScript文件（文件名保持不变，只是内容不一样），&lt;strong&gt;更新秒杀开始标志为是，加入下单页面的URL及随机数参数（这个随机数只会产生一个，即所有人看到的URL都是同一个，服务器端可以用redis这种分布式缓存服务器来保存随机数）&lt;/strong&gt;，并被用户浏览器加载，控制秒杀商品页面的展示。&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;这个JavaScript文件的加载可以加上随机版本号（例如xx.js?v=32353823），这样就不会被浏览器、CDN和反向代理服务器缓存。&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;这个JavaScript文件非常小，即使每次浏览器刷新都访问JavaScript文件服务器也不会对服务器集群和网络带宽造成太大压力。&lt;/p&gt; &lt;/li&gt;&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;总结一下：前端秒杀页面使用专门的页面，这些页面包括静态的 HTML 和动态的 JS，他们都需要在 CDN 上缓存。&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;&lt;a id=&quot;UID_124&quot;/&gt;根据UID限制频率热度&lt;/h4&gt; 
&lt;p&gt;为了控制公平性原则，由于黄牛或者一些黑客达人，会采用”高科技“，比如说，采用爬虫脚本操作，疯狂的去刷新页面。为了防止一些人的破坏以及公平分散，所以采用同一个标准去控制UID（用户ID）去访问频率信息，当超过每个人所需要达到的频率阈值，就要进行限制互动窗口内能够访问刷新的数据量！&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;例如：可以用Redis给每个用户做访问统计，根据用户的ID和商品的标识双方面进行对用户对某一个商品的访问频率控制，超过访问频率后，就会将他的请求暂时性熔断。&lt;br/&gt; &lt;img src=&quot;https://img-blog.csdnimg.cn/img_convert/8809583f8d58083ebbfa57dc525e257c.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;&lt;a id=&quot;_131&quot;/&gt;反向代理+负载均衡&lt;/h4&gt; 
&lt;ul&gt;&lt;li&gt;秒杀系统必然是一个集群系统，在硬件不提升的情况下利用nginx做负载均衡也是不错的选择。&lt;/li&gt;&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;负载均衡(Load Balance)是集群技术(Cluster)的一种应用，可以将工作任务分摊到多个处理单元，从而提高并发处理能力，有利于提升中大型网站的性能。&lt;br/&gt; 需要使用服务集群和水平扩展，让“高峰”请求分流到不同的服务器进行处理。&lt;br/&gt; &lt;img src=&quot;https://img-blog.csdnimg.cn/img_convert/6d7dc87cc5f3314425b597b988d53ca1.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h5&gt;&lt;a id=&quot;http_139&quot;/&gt;http重定向协议实现负载均衡&lt;/h5&gt; 
&lt;p&gt;根据用户的http请求的DNAT计算出一个真实的web服务器地址，并将该web服务器地址写入http重定向响应中返回给浏览器，由浏览器重新进行访问。该方式比较简单，但性能较差。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;一般来讲经常用的SpringCloud-Gateway或者Neflix的Zuul等就属于该类型。&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h5&gt;&lt;a id=&quot;DNS_145&quot;/&gt;协议层：DNS域名解析负载均衡&lt;/h5&gt; 
&lt;p&gt;DNS服务器上配置多个域名对应IP的记录。该方式直接将负载均衡的工作交给了DNS，为网站管理维护省掉了很多麻烦，访问速度快，有效改善性能。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;一般来讲经常用的DNS服务器或者国内的DNS服务器等就属于该类型。&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h5&gt;&lt;a id=&quot;_151&quot;/&gt;协议层：反向代理负载均衡&lt;/h5&gt; 
&lt;p&gt;反向代理服务器在提供负载均衡功能的同时，管理着一组web服务器，根据负载均衡算法将请求的浏览器访问转发到不同的web服务器处理，处理结果经过反向服务器返回给浏览器。&lt;/p&gt; 
&lt;p&gt;该方式部署简单，web服务器地址不能直接暴露在外，不需要使用外部IP地址，而反向代理服务作为沟通桥梁就需要配置双网卡、外部内部两套IP地址。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;一般来讲经常用的Nginx或者HaProxy等就属于该类型。&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h5&gt;&lt;a id=&quot;IP_159&quot;/&gt;网络层IP负载均衡&lt;/h5&gt; 
&lt;p&gt;网络层通过修改目标地址进行负载均衡，该方式在响应请求时速度较反向服务器负载均衡要快，但是，当请求数据较大(大型视频或文件)时，速度反应就会变慢。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;一般来讲经常用的Nginx或者HaProxy等就属于该类型。&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h5&gt;&lt;a id=&quot;_165&quot;/&gt;数据链路层负载均衡&lt;/h5&gt; 
&lt;p&gt;数据链路层修改Mac地址进行负载均衡，负载均衡服务器的IP和它所管理的web 服务群的虚拟IP一致。它不需要负载均衡服务器进行地址的转换，但是对负载均衡服务器的网卡带宽要求较高。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;一般来讲经常用的LVS等就属于该类型。&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h5&gt;&lt;a id=&quot;F5__A10__171&quot;/&gt;F5 和 A10 负载均衡器&lt;/h5&gt; 
&lt;p&gt;&lt;strong&gt;F5的全称是F5-BIG-IP-GTM，硬件负载均衡设备，其并发能力达到。该方式能够实现多链路的负载均衡和冗余，可以接入多条ISP链路，在链路之间实现负载均衡和高可用。&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;a id=&quot;_176&quot;/&gt;服务层架构设计&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/img_convert/85bb230e52fcb6d6e64b23f419f03e0e.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;a id=&quot;_180&quot;/&gt;缓存技术分析&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;硬盘持久化的IO操作将耗费大量资源。所以决定采用基于内存操作的redis，redis的密集型io&lt;/strong&gt;。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;&lt;a id=&quot;_184&quot;/&gt;分批放行+排队处理&lt;/h4&gt; 
&lt;ul&gt;&lt;li&gt;即使我们扩展再多的应用，使用再多的应用服务器，部署再多的负载均衡器，都会遇到支撑不住海量请求的时候。&lt;/li&gt;&lt;li&gt;所以，在这一层我们要考虑的是如何做好限流，当超过系统承受范围的时候，需要果断阻止请求的涌入。&lt;/li&gt;&lt;/ul&gt; 
&lt;h5&gt;&lt;a id=&quot;_189&quot;/&gt;排队处理&lt;/h5&gt; 
&lt;p&gt;排队处理机制，正如，我们日常买东西排队一样的道理，这样子就不会处理不过来，并且也可以保证数据执行的正确性！&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;它直接将请求放入队列中的，采用FIFO（First Input First Output，先进先出），这样的话，我们就不会导致某些请求永远获取不到锁。看到这里，有一些将多线程处理方式变成单线程处理机制，会大大影响数据的效率和性能！&lt;br/&gt; &lt;img src=&quot;https://img-blog.csdnimg.cn/img_convert/6293ea48451675cbf9027d6954f8b82b.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h5&gt;&lt;a id=&quot;Java_196&quot;/&gt;Java的三个常用的并发队列&lt;/h5&gt; 
&lt;ul&gt;&lt;li&gt; &lt;p&gt;ArrayBlockingQueue是初始容量固定的阻塞队列，可以用来作为数据库成功竞拍的队列，比如有10个商品，那么我们就设定一个10大小的数组队列。&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;ConcurrentLinkedQueue使用的是CAS原语无锁队列实现，是一个异步队列，入队的速度很快，出队进行了加锁，性能稍慢。&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;LinkedBlockingQueue也是阻塞的队列，入队和出队都用了加锁，当队空的时候线程会暂时阻塞。&lt;/p&gt; &lt;/li&gt;&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;在请求预处理阶段，由于系统入队需求要远大于出队需求，一般不会出现队空的情况，所以我们可以选择ConcurrentLinkedQueue来作为我们的请求队列实现，甚至可以采用Disruptor异步处理框架机制。&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h5&gt;&lt;a id=&quot;_206&quot;/&gt;分批放行&lt;/h5&gt; 
&lt;p&gt;在同步排队的基础上，我们可以在加入一个分批放行执行处理机制。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;顾名思义的就是，为了提高性能，我们可以考虑达到预定阈值以后，在进行相关的执行后端服务，这样子可以提高一定的性能以及减少后端请求的次数和压力，如下图所示：&lt;br/&gt; &lt;img src=&quot;https://img-blog.csdnimg.cn/img_convert/a60c7ba11c48ffd467af6b2522b8b6a0.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;还会利用缓存和队列技术减轻应用处理的压力，通过异步请求的方式做到最终一致性。&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;&lt;a id=&quot;_215&quot;/&gt;限流&lt;/h4&gt; 
&lt;h4&gt;&lt;a id=&quot;_217&quot;/&gt;漏桶算法&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;漏桶算法思路很简单，水（请求）先进入到漏桶里，漏桶以一定的速度出水，当水流入速度过大会直接溢出，可以看出漏桶算法能强行限制数据的传输速率。&lt;br/&gt; &lt;img src=&quot;https://img-blog.csdnimg.cn/img_convert/68902afb0ec85f7bad9af8f74b55dfa1.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt;&lt;li&gt;设定漏桶流出速度及漏桶的总容量，在请求到达时判断当前漏桶容量是否已满，不满则可将请求存入桶中，否则抛弃请求。&lt;/li&gt;&lt;li&gt;采用一个线程以设定的速率取出请求进行处理。&lt;/li&gt;&lt;/ul&gt; 
&lt;h5&gt;&lt;a id=&quot;_225&quot;/&gt;算法弊端&lt;/h5&gt; 
&lt;ul&gt;&lt;li&gt;由于其只能以特定速率处理请求，则如何确定该速率就是核心问题，如果速率设置太小则会浪费性能资源，设置太大则会造成资源不足。&lt;/li&gt;&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;速度执行敏感度不高！无论输入速率如何波动，均不会体现在服务端，即使资源有空余，对于突发请求也无法及时处理，故对有突发请求处理需求时，不宜选择该方法。&lt;br/&gt; &lt;img src=&quot;https://img-blog.csdnimg.cn/img_convert/bf02ce8b3870dca1edab5e2b5f0ef382.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;&lt;a id=&quot;_232&quot;/&gt;令牌桶算法&lt;/h4&gt; 
&lt;p&gt;令牌桶算法的原理是系统会以一个恒定的速度往桶里放入令牌，而如果请求需要被处理，则需要先从桶里获取一个令牌，当桶里没有令牌可取时，则拒绝服务。&lt;/p&gt; 
&lt;h5&gt;&lt;a id=&quot;_236&quot;/&gt;实现原理&lt;/h5&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;设定令牌桶中添加令牌的速率，并且设置桶中最大可存储的令牌，当请求到达时，向桶中请求令牌（根据应用需求，可能为1个或多个），若令牌数量满足要求，则删除对应数量的令牌并通过当前请求，若桶中令牌数不足则触发限流规则。&lt;br/&gt; &lt;img src=&quot;https://img-blog.csdnimg.cn/img_convert/13c59fa3a45a811a76c3c91e9591102f.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;为解决固定窗口计数带来的周期切换处流量突发问题，可以使用滑动窗口计数。滑动窗口计算本质上也是固定窗口计数，区别在于将计数周期进行细化&lt;/strong&gt;。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;&lt;a id=&quot;_243&quot;/&gt;滑动窗口&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;滑动窗口计数法与固定窗口计数法相比较，除了计数周期T及周期内最大访问（调用）数N两个参数，增加一个参数M，用于设置周期T内的滑动窗口数。&lt;/strong&gt;&lt;br/&gt; &lt;img src=&quot;https://img-blog.csdnimg.cn/img_convert/e6b1330e7d71c8254380e90ced4c1bab.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;&lt;a id=&quot;_248&quot;/&gt;数据访问层&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;由于要承受高并发，mysql在高并发情况下的性能下降尤其严重。&lt;br/&gt; &lt;img src=&quot;https://img-blog.csdnimg.cn/img_convert/e8f9890f220f3b366ed642ed7a804e56.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;&lt;a id=&quot;_253&quot;/&gt;数据更新点（库存扣除）&lt;/h3&gt; 
&lt;h4&gt;&lt;a id=&quot;_255&quot;/&gt;悲观锁更新数据&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;可以从“悲观锁”的方向&lt;br/&gt; &lt;img src=&quot;https://img-blog.csdnimg.cn/img_convert/52956bf50921cc01ef60be396437ee9e.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt;&lt;li&gt; &lt;p&gt;悲观锁，也就是在修改数据的时候，采用锁定状态，排斥外部请求的修改。遇到加锁的状态，就必须等待。&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;虽然它解决了线程安全的问题，但是“高并发”场景下，会很多这样的修改请求，每个请求都需要等待“锁”，某些线程可能永远都没有机会抢到这个“锁”，这种请求就会死在那里。&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;同时，这种请求会很多，瞬间增大系统的平均响应时间，结果是可用连接数被耗尽，系统陷入异常。&lt;/p&gt; &lt;/li&gt;&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;行锁、页锁、表锁、同步锁、分布式锁、分布式队列、意向所等。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;&lt;a id=&quot;_268&quot;/&gt;乐观锁更新数据&lt;/h4&gt; 
&lt;p&gt;讨论一下“乐观锁”的思路了。&lt;br/&gt; &lt;img src=&quot;https://img-blog.csdnimg.cn/img_convert/c7d9ffc83a9b8edd5ef3cd3cfa9cda0c.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt; 
&lt;ul&gt;&lt;li&gt; &lt;p&gt;乐观锁，是相对于“悲观锁”采用更为宽松的加锁机制，大都是采用带版本号（Version）更新/通过状态化进行更新操作机制。&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;实现就是，这个数据所有请求都有资格去修改，但会获得一个该数据的版本号，只有版本号符合的才能更新成功，其他的返回抢购失败。&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;这样的话，我们就不需要考虑队列的问题，不过，它会增大CPU的计算开销。但是在冲突较小的时候，这是一个比较好的解决方案。&lt;/p&gt; &lt;/li&gt;&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;缓存乐观锁、数据库乐观锁。（判断更新行数是否&amp;gt;0），CAS机制&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;&lt;a id=&quot;_281&quot;/&gt;姊妹篇【「绝密档案」“爆料”完整秒杀架构的设计到技术关键点的“八卦资料”】&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;再此会进行扩展技术介绍，以下内容：&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt;&lt;li&gt; &lt;p&gt;热点分离&lt;/p&gt; 
   &lt;/li&gt;&lt;li&gt; &lt;p&gt;事务完整性&lt;/p&gt; 
   &lt;/li&gt;&lt;li&gt; &lt;p&gt;分布式事务系统&lt;/p&gt; 
   &lt;/li&gt;&lt;li&gt; &lt;p&gt;数据高可用&lt;/p&gt; 
   &lt;/li&gt;&lt;li&gt; &lt;p&gt;DB层面的单行记录做并发排队机制&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;服务降级分析&lt;/p&gt; &lt;/li&gt;&lt;li&gt; &lt;p&gt;降低冲击法（延时处理）&lt;/p&gt; 
   &lt;/li&gt;&lt;/ul&gt;
                &lt;/div&gt;
                
                
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>d376f897f1cf64570289a10856ee36ed</guid>
<title>如何才能成长为一名合格的架构师 ？</title>
<link>https://toutiao.io/k/caarwl0</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content js_underline_content             autoTypeSetting24psection&amp;#10;            &quot; id=&quot;js_content&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section&gt;&lt;mp-common-profile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-weui-theme=&quot;light&quot; data-id=&quot;MzkyNTI5NTQ1NQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/wxcY9TH8dPsYAnrjaZktBe0iahF8ic9QkF26cAw8pK6HPR1bfFEImdyJspvkQvQwmnYxP4eEVW60ewVVickcWXnrQ/0?wx_fmt=png&quot; data-nickname=&quot;架构文摘&quot; data-alias=&quot;ArchDigest&quot; data-signature=&quot;每天一篇架构领域重磅好文，涉及一线互联网公司应用架构（高可用、高性能、高稳定）、大数据、机器学习、Java架构等各个热门领域。&quot; data-from=&quot;0&quot; data-is_biz_ban=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;来源：码农翻身&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;“&lt;/span&gt;&lt;span&gt;&lt;strong&gt;我怎么才能成为一个软件架构师&lt;/strong&gt;？&lt;/span&gt;&lt;span&gt;”&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这是很多小伙伴问我的一个问题，最近看到&lt;/span&gt;&lt;span&gt;Kai Niklas讲架构师的一篇文章，其中的真知灼见引起了我的强烈共鸣，尤其是&lt;span&gt;后面的非技术部分&lt;/span&gt;。翻译过来（略有删减），分享给大家。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我事先给一位同学看了一下，他说：当个架构师太难了吧，又要精通技术，还得会沟通，平衡，营销..... 我还是争取做个技术专家吧！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;扪心自问，我这个架构师在很多方面也做得远远不够，继续学习吧！&lt;/span&gt;&lt;span/&gt;&lt;span&gt;如果你的未来职业目标是架构师，&lt;/span&gt;&lt;span&gt;强烈建议仔细阅读并收藏。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;heading&quot; yne-bulb-level=&quot;2&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;98318&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;0&lt;span data-original-title=&quot;&quot; title=&quot;&quot;&gt;1&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-brushtype=&quot;text&quot; hm_fix=&quot;293:204&quot;&gt;什么是软件架构师&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在我们一头扎入细节之前，我们先得知道软件架构和架构师到底是什么：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;软件架构师&lt;/span&gt;&lt;span&gt;是一个软件专家，他可以做出高层的设计决定，规定技术标准，包括编码标准，工具和平台 -- Wikipedia&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;软件架构&lt;/span&gt;&lt;span&gt;是一个系统最基本的组织方式，由其组件，组件之间的关系，组件和环境的关系表达出来。也包括决定设计和系统演化的原则。--Handbook of Software Architecture&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;heading&quot; yne-bulb-level=&quot;2&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;98318&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;0&lt;span data-original-title=&quot;&quot; title=&quot;&quot; data-num=&quot;2&quot;&gt;2&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-brushtype=&quot;text&quot; hm_fix=&quot;232:200&quot;&gt;架构的级别&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;架构可以在不同的抽象级别上完成， 不同的级别要求不同技能，有很多分类标准，我最喜欢的是这三个级别：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;Application Level （应用级别）&lt;/span&gt;：架构的最低级别，专注于单个应用，有非常具体的设计，沟通通常局限在开发团队&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;Solution Level （解决方案级别）&lt;/span&gt;：架构的中间层，需要关注几个应用来实现一个商业的需求，有部分高层的设计，但大多数还是具体的设计，沟通需要跨越多个开发团队。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;Enterprise Level (企业级别)&lt;/span&gt;：架构的最高级， 关注多个解决方案，这一层的设计比较抽象，需要解决方案架构师和应用架构师去细化。沟通跨越整个企业组织。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;有时候，架构师被看作不同利益相关者之间的粘合剂，比如：&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;水平方向：在业务人员和开发人员建立沟通的桥梁&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;垂直方向：在开发人员和经理之间建立沟通桥梁&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;技术领域：集成不同的技术和应用。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;heading&quot; yne-bulb-level=&quot;2&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;98318&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;0&lt;span data-original-title=&quot;&quot; title=&quot;&quot; data-num=&quot;3&quot;&gt;3&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-brushtype=&quot;text&quot; hm_fix=&quot;294:212&quot;&gt;软件架构师的日常活动&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;为了理解软件架构师需要哪些技能，我们得先来看看架构师的日常活动&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot; data-role=&quot;list&quot;/&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;注: 架构设计是一个持续的活动，所以这些活动会一遍一遍地完成。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;heading&quot; yne-bulb-level=&quot;2&quot;&gt;&lt;p&gt;&lt;span&gt;软件架构师所需的重要技能&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;根据我的经验，阅读的书籍，以及参与的讨论，我可以列出这10个技能，每个架构师都必须具备：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;设计, 决策，简化, 编码, 文档, 沟通, 估算, 平衡, 咨询, 营销&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我们一个个来说，对每个技能我都会列出一些我的见解，你应该采取的行动，以便在这个技能领域持续提高。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;heading&quot; yne-bulb-level=&quot;2&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;98318&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;0&lt;span data-original-title=&quot;&quot; title=&quot;&quot;&gt;4&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-brushtype=&quot;text&quot; hm_fix=&quot;294:208&quot;&gt;设计&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;是什么造就了好的设计？这可能是最重要，并且最具挑战性的问题，让我们先从理论开始。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;理解基本的设计模式&lt;/span&gt;：为了开发一个可维护的系统，模式绝对是架构师最重要的工具之一，使用模式，你可以复用设计来决定那些通用的问题。“四人帮”的《设计模式：可复用的面向对象软件基础》是每个开发人员的必读书籍。尽管过去20多年了，模式依然是软件架构的基本单元。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;比如书中描述的MVC模式被应用在很多领域，也是很多新模式如MVVM的基础。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;深入挖掘模式和反模式：&lt;/span&gt;理解了基本的“四人帮”模式以后，你需要把你知识扩展到更多的软件设计模式中，或者根据自己的兴趣，深入研究，例如Java并发模式。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在应用程序的集成领域， 我最喜欢的是《企业集成模式》，这本书适用于各种领域，只要两个应用需要交换数据，不管是很古老的基于文件的交换还是现代的微服务架构，都可以参考本书。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.2807881773399015&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;203&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/GUHicIbYm6WaNAylIBMNkmjzJgwwT99XtEA8MibF8v7E7ibgjfC4N4CsVwGpQ6ZziaHxiaz1MJoUz1Mibu3tuJic8CsQw/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;image&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;了解软件质量的度量方式&lt;/span&gt;：我们希望我们的系统是可以维护的、可靠的、安全的、可以测试的、可以扩展的、可用的...... 为了达成这些目标，必须要把系统架构设计好。你可以参考这个：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.9882352941176471&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;340&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/GUHicIbYm6WaNAylIBMNkmjzJgwwT99XtSnCBEUq9MYVSWXbicz23tuVJe3Fwq1NWwmGeBMIqLPgRpgnFJb4KApw/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;理论很重要，实践更加重要，否则你就会变成一个象牙塔架构师。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;不断尝试和理解不同的技术栈 ：&lt;/span&gt;我认为这是成为架构师非常重要的事情， 你很难从抽象的PPT中学到真东西，你得尝试不同的、新的技术栈，亲自感受一下它带来的好处和引发的“疼痛”。另外也可以尝试不属于你所在领域的技术，例如你对SAP R/3 非常擅长，那你应该也试试JavaScript。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;分析、理解那些应用良好的模式&lt;/span&gt;：看看你当前使用的框架，例如Angular， 你可以研究很多以及付诸实践的模式，如观察者。看看它是怎么在框架中使用的，为什么要这么使用。如果你愿意投入更多的精力，那就深入源代码看看它是如何实现的。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;保持好奇心，参加一些公司之外的社团活动&lt;/span&gt;：比如Java User Group会讨论很多主题，从最底层的编码到高层的架构，我很喜欢这样的活动，因为它会让我跳出工作来思考，并且加强个人社交网络。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;heading&quot; yne-bulb-level=&quot;2&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;98318&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;0&lt;span data-original-title=&quot;&quot; title=&quot;&quot; data-num=&quot;2&quot;&gt;5&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-brushtype=&quot;text&quot; hm_fix=&quot;381:206&quot;&gt;决策&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;架构师需要能够做出架构决定，引导项目和组织走在正确的方向。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;确定优先级&lt;/span&gt;&lt;span&gt;：有些决策非常关键，如果没有在早期确定下来，就会出现一些变通的临时措施，导致后续难以移除，变成维护的噩梦。更差的情况是，程序员需要停止工作，等你做出决策。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;为了避免这种情况，必须要把这些决策按优先级排序，我建议看一看敏捷软件开发中非常流行的Weighted Shortest Job First (WSJF) 模型。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;了解你的能力&lt;/span&gt;：不要在你的能力之外做决定，这非常关键，如果你不遵循的话可能会毁掉你架构师的岗位。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;所以一定要和你的同伴明确你承担的职责和你的角色。作为低级别的架构师，你可以提出对高层架构的建议，但是不要擅自做主。我建议要经常和同伴审视那些关键的架构决定。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;评估多个选项&lt;/span&gt;：涉及到决策时，要列出多个选项。在我参与的大多数决策中，都有不止一个可能（好的）选择。仅仅提供一个选项说明你没有完成自己的工作，没法完成决策。各种选项要通过可以度量的事实（如许可证费用，成熟度）而不是个人感情来比较，这样才能真正完成决策。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;heading&quot; yne-bulb-level=&quot;2&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;98318&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;0&lt;span data-original-title=&quot;&quot; title=&quot;&quot; data-num=&quot;3&quot;&gt;6&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-brushtype=&quot;text&quot; hm_fix=&quot;365:214&quot;&gt;简洁&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;要谨记解决问题的奥卡姆剃刀原则：&lt;strong&gt;如无必要，勿增实体。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;对于一个问题，如果你有太多的假设，很可能会走向一个错误的方向，导致不必要的、复杂的解决方案。一定要精简假设来生成好的解决方案。（可见架构工作也是一门艺术）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;“摇动”你的架构设计&lt;/span&gt;：为了让架构设计更加简单，可以从多个角度去审视解决方案，不但要以自顶向下的方式思考，还要自底向上的方式再来一遍， 如果你有数据流或者业务流程，先从左向右看，然后再从右往左看。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;经常问自己：“在一个理想的环境中，架构设计会是怎么样呢？”   “如果是那些大公司，它们会怎么做呢？” 这些问题会促使你减少假设。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;退后一步&lt;/span&gt;：经常长时间的密集讨论，通常会得到一个高度复杂的设计，你绝对不能把它们当作最终结果，退后一步，从抽象的级别看看全局的图景，这设计还是有意义的吗？ &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;有时候停止讨论，第二天再继续会有帮助，至少我的大脑需要时间来处理这些信息，然后提出更好的，更优雅的，更简单的方案。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;分而治之&lt;/span&gt;：将大问题分成小块儿，逐个解决，然后看看小块儿解决方案能不能匹配起来。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;重构并不邪恶&lt;/span&gt;：如果找不到更好的设计，从一个复杂的解决方案开始也是可以的。如果后面遇到了问题，你需要回过头来再想一想，重构并不是邪恶的，但是再开始重构之前要确保 ：&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;(1）足够的自动化的测试用例，保证系统的功能不被破坏&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;(2)  获取利益相关者的认可。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;heading&quot; yne-bulb-level=&quot;2&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;98318&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;07&lt;/section&gt;&lt;/section&gt;&lt;section data-brushtype=&quot;text&quot; hm_fix=&quot;297:206&quot;&gt;代码&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;即使是贵为企业级架构师，也就是抽象级别最高的架构师，你也得知道程序员日常工作在做些什么。否则你会遇到两个问题：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;(1)  开发人员不会接受你的想法、说辞&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;(2)  你不会理解开发人员面临的真正挑战和真正的需要。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;做一个副业项目&lt;/span&gt;：目的是尝试新的技术和工具，以了解当前和将来的开发方式。阅读一些教程确实不错，但仅仅是“书本”知识。只有自己亲自尝试一遍，体验一遍，你才能获得真正的经验：它为什么好？为什么差？你和一门技术呆的时间越长，你的体验就会越多，就越能帮助你做出好的决策。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;找到正确的技术来尝试&lt;/span&gt;：你不可能尝试所有的东西，我最近发现了ThoughtWorks的技术雷达，它们把技术，工具，平台，语言和框架分为四类：采用，尝试、评估和保留。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;采用&lt;/span&gt;的意思是“适合企业采用”。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;实验&lt;/span&gt;指的是“企业可以在一个风险可控的项目中尝试”&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;评估&lt;/span&gt;的意思是“研究下如果对企业产生影响”&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;暂缓&lt;/span&gt;意思是“谨慎推行”&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;image&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6461661341853036&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/GUHicIbYm6WaNAylIBMNkmjzJgwwT99Xt39Ekicp2t6pe1YE4nqkk25N88McmIlLOgDQVqeH9RkGNbWUOhDvhTRw/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;jpeg&quot; data-w=&quot;1252&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;通过这种分类，你就可以找到你想尝试的新技术了。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;heading&quot; yne-bulb-level=&quot;2&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;98318&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;08&lt;/section&gt;&lt;/section&gt;&lt;section data-brushtype=&quot;text&quot; hm_fix=&quot;316:205&quot;&gt;文档&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;Clean Code&lt;/span&gt;：简洁优雅的代码是最好的文档，架构师一定得能区分开什么是好代码，什么是坏代码。有一本很好的书来介绍好代码和坏代码：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.2564814814814815&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/GUHicIbYm6WaNAylIBMNkmjzJgwwT99XtFQ2AiccVgGybShiabWH7KMwWAL0h1GHWjySgnG2q6CDTib8n9rZJW5v3g/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;image&quot;&gt;&lt;p&gt;&lt;img data-ratio=&quot;1&quot; data-type=&quot;jpeg&quot; data-w=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/GUHicIbYm6WaNAylIBMNkmjzJgwwT99XtfSSuS97aoHnWgrtRJAr1rDzZCVOc85cqgLBIKD4SA0JFI4SXhkIziaw/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;在可能的时候尽量自动生成文档：&lt;/span&gt;对于一些较为详细的文档，由于系统变化迅速，很难及时更新，所以尽可能自动生成文档：如果你是Model Driven的话可以从定义文件中自动生成文档，SWagger 和RAML都是很好的起点。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;该多就多，该少就少：&lt;/span&gt;无论是什么文档，在同一时刻只应该把注意力放在一件事情上，只包含这件事情的必要信息，额外的信息应该保留在附录中，因为大量的文字是很难阅读和理解的。 仔细看看你的文档，问问自己：“为了理解整个东西，是不是所有的信息都在其中了？” ,“哪些信息是必须的，哪些是可以忽略的？”&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;heading&quot; yne-bulb-level=&quot;2&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;98318&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;09&lt;/section&gt;&lt;/section&gt;&lt;section data-brushtype=&quot;text&quot; hm_fix=&quot;306:198&quot;&gt;沟通&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;根据我的观察，这是&lt;span&gt;最被低估技能&lt;/span&gt;，如果你在设计方面特别出色，但是却无法和别人沟通，你的想法就没啥影响力，很可能失败。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;演讲&lt;/span&gt;：向一个小组或大组做演讲是一个架构师常见的工作，如果你刚开始觉得不舒服，可以从你的最好的朋友开始，慢慢扩大的更多的人，这件事只能通过不断地实践来学习， 是个需要花费时间的过程，还需要离开舒适区，所以要保持耐心。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;找到正确的沟通级别&lt;/span&gt;：不同的人看待事物的角度是不同的，所以你需要在他们的级别和他们交流。比如开发人员对技术细节感兴趣，经理更倾向于知道哪个选项更加省钱。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;所以在沟通之前，你要看看你想交流的东西是不是在合适的级别，包括抽象度，内容，目标，动机等&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;经常沟通：&lt;/span&gt;如果无人知晓，一个出色的架构毫无意义，要经常沟通你的架构设计以及背后的想法，定期在每个组织级别（小组，部门，公司）进行沟通，安排和开发人员，架构师，管理人员的会议，展示你的架构思路。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;保持透明&lt;/span&gt;：定期沟通只能部分缓解缺少的透明度，你还得确保决策背后的原因透明化，特别是对那些不参加决策的过程的人，他们很难理解为什么要这么做，有什么理由。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;随时准备好做一个演讲&lt;/span&gt;：总会有人问架构师问题，你也想快速地给出正确答案，这该怎么办呢？你可以把最重要的PPT挑出来，放在一起，随时展示并且给他们做展示，避免在一堆资料中找来找去，那样会浪费太多时间。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;heading&quot; yne-bulb-level=&quot;2&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;98318&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;span data-original-title=&quot;&quot; title=&quot;&quot; data-num=&quot;7&quot;&gt;10&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-brushtype=&quot;text&quot; hm_fix=&quot;253:191&quot;&gt;估算和评估&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;理解基本的项目管理原则：&lt;/span&gt;作为架构师或者首席开发，你经常会被要求对你的设计进行估算：多长时间能完成？需要多少人？需要什么技能？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;刚开始，你可以提供粗略的估算：几天，几个月。请记住估算的时间可不仅仅是编码实现，要有需求分析，测试，改正Bug。因此你需要知道软件开发过程中的各个步骤。获得更好估算的一个方法是基于历史数据给出预测。如果你没有历史数据，可以试试COCOMO方法，如果你在做一个敏捷项目，这本书非常有帮助：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.3722222222222222&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/GUHicIbYm6WaNAylIBMNkmjzJgwwT99XtjTw1Ql08dWibgz5Zu0RLaHe5yR6TcXY8K8LA9icZdRaQjjQZ5Jtn9m2A/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;image&quot;&gt;&lt;p&gt;&lt;img data-ratio=&quot;1&quot; data-type=&quot;jpeg&quot; data-w=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/GUHicIbYm6WaNAylIBMNkmjzJgwwT99XtfSSuS97aoHnWgrtRJAr1rDzZCVOc85cqgLBIKD4SA0JFI4SXhkIziaw/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;评估架构&lt;/span&gt;：作为一个架构师，你应该能够架构设计在当前和未来上下文中的适应性，这件事不容易，你可以准备一组问题来对架构设计进行“质询”，例如：&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;(1) 设计实践: 架构遵循了哪些模式？是否正确地被使用了?是否有清晰的设计和关注点分离?&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;(2) 开发实践: 制定代码规范了吗？被遵循了吗？代码有版本控制吗&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;(3) 质量保证: 自动化测试的覆盖率如何? 有静态代码分析到位了吗? Peer review做到位了吗?&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;(4) 安全: 架构设计中有哪些安全概念? 内置安全性如何? 渗透测试和自动化安全分析是否做到位？是否定期使用？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;98318&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;11&lt;/section&gt;&lt;/section&gt;&lt;section data-brushtype=&quot;text&quot; hm_fix=&quot;340:186&quot;&gt;平衡&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;质量是有代价的&lt;/span&gt;：前面聊过系统质量和非功能性需求，如果你在架构设计上做得过度，就会增加开销，降低开发的速度。你需要平衡架构设计和功能需求，过度设计应该被避免。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;解决相互矛盾的目标&lt;/span&gt;：一个经典的例子就是短期目标 vs 长期目标。项目通常倾向于构建最简单的方案，而架构师脑海中有长期的愿景。通常，简单的方案不适合长期的目标，并且有可能被丢弃（沉没成本）。为了避免走向错误的方向，应该注意两件事情：&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;(1) 开发人员和业务人员都需要理解长期的愿景及其收益。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;(2) 负责预算的经理也需要参与其中，了解财务影响。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;冲突管理&lt;/span&gt;：由于团队有着不同背景，冲突难免发生，为了找到一个相互能接受的、平衡的解决方案，架构师需要充当粘合剂，来解决这些冲突。关于沟通的理论，我是从Schulze von Thun的Four-Ears Model开始的：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6500437445319335&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/GUHicIbYm6WaNAylIBMNkmjzJgwwT99XtCQxjvcL3nChrU7fKbM6fKKGQL42ickKS9cuoYHREYN9rDiatAd3yqib7g/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;jpeg&quot; data-w=&quot;1143&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;1&quot; data-type=&quot;jpeg&quot; data-w=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/GUHicIbYm6WaNAylIBMNkmjzJgwwT99XtfSSuS97aoHnWgrtRJAr1rDzZCVOc85cqgLBIKD4SA0JFI4SXhkIziaw/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;br/&gt;&lt;span/&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;heading&quot; yne-bulb-level=&quot;2&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;98318&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;12&lt;/section&gt;&lt;/section&gt;&lt;section data-brushtype=&quot;text&quot; hm_fix=&quot;342:211&quot;&gt;咨询和指导&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;拥有愿景 ：&lt;/span&gt;不管你是在一个什么样的项目中，不管是传统的瀑布模型还是敏捷模型，你必须需要有一个愿景，也就是你想获得的短期和长期目标，并且清晰地传递给团队成员。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;由于不可能一下子达成所有的目标，我通常倾向于建立成熟度模型，让团队清楚地得知我们当前处于哪一级别。开发有很多方面，得使用不同的成熟度模型，例如开发实践成熟度模型，持续交付成熟度模型。这些模型的每个级别都有清晰的定义，团队可以轻松地度量自己在什么级别。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;对于持续交付，我个人倾向于这个模型&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6842105263157895&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/GUHicIbYm6WaNAylIBMNkmjzJgwwT99XtWkEmYzzLj1p1ofP8tvQibzY34k0FWI03aoFRkBY1DmYsEpd22rX6N4A/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;1083&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;1&quot; data-type=&quot;jpeg&quot; data-w=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/GUHicIbYm6WaNAylIBMNkmjzJgwwT99XtfSSuS97aoHnWgrtRJAr1rDzZCVOc85cqgLBIKD4SA0JFI4SXhkIziaw/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;br/&gt;&lt;span/&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;建立社区&lt;/span&gt;：例如，把JavaScript程序员和架构师组织起来，每个月讨论一次，主题可以是如何解决过去和现在的技术挑战，新的技术和方法。架构师可以分享、讨论他们的愿景，程序员可以分享他们的经验，这样的会议能帮助建立一个更强大的团伙，对企业和个人都极具价值。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;进行开诚布公的讨论&lt;/span&gt;：误解和模棱两可的根源是缺乏沟通，所以你可以安排一个固定的时间段，如每周30分钟，和同伴交换一些热门的话题，什么都可以讨论，不用刻意安排讨论的议程。可以当场解决一些小事，对于复杂的主题，安排后续的跟进。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;heading&quot; yne-bulb-level=&quot;2&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;98318&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;span data-original-title=&quot;&quot; title=&quot;&quot; data-num=&quot;10&quot;&gt;13&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-brushtype=&quot;text&quot; hm_fix=&quot;336:201&quot;&gt;营销&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;你的想法很棒，并且和大家做了很好的沟通，但是没人愿意去做，那可能是缺乏了营销的技巧。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;激励并说服&lt;/span&gt;：公司是怎么说服你购买他们产品的？他们肯定展示了价值和好处，但不仅如此，他们还做了漂亮的包装，使其尽可能地容易消化&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;(1)&lt;strong&gt;原型&lt;/strong&gt;：带界面的原型非常直观，会很吸引人。有很多创建软件原型的工具，如果你喜欢SAP的话可以事实build.me ，使用它可以轻松快速地创建漂亮的UI5应用。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;(2) &lt;strong&gt;视频&lt;/strong&gt;:  除了无聊的PPT之外，用一个视频可以更好地展示你的想法。但是请不要过度营销，从长期看，内容为王，如果你满嘴跑火车，损伤的是你的声誉。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;捍卫你的想法并且坚持不懈&lt;/span&gt;：如果你真的对自己的想法深信不疑，你应该捍卫它，为之战斗，这是非常必要的，因为具备长期目标的架构决策是不容易被人接受的：开发人员不喜欢它因为开发起来太难， 经理不喜欢它因为短期来看代价太高。所以坚持不懈地去说服是你的本职工作。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;找到同盟军&lt;/span&gt;：独自去建立并且执行你的想法几乎是不可能的，你需要盟友的支持来说服别人。这时候需要使用你的社交网络，如果你还没有的话，马上去建吧！&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;你可以先去和那些具备开放心态的同事去谈你的想法， 如果他们喜欢（或者部分喜欢），当别人问起的时候，他们很有可能会支持你：X的想法很有趣。  如果他们不喜欢你的想法，问问为什么，你是不是漏掉了什么东西？你的故事不够吸引人？&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;下一步就是找到具备决策权力的盟友，请求他进行一个开放的讨论，如果你害怕这种讨论，你需要反思一下，是不是应该离开舒适区了。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section yne-bulb-block=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;重复它，相信它：&lt;/span&gt;研究显示重复的展示一个观点会使人们相信这是一个普遍的观点，即使该观点仅仅来自一个人。如果你经常发过某个消息，更容易说服别人。但是要当心：应该明智地使用这种策略，因为它可能适得其反。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;END&lt;/p&gt;&lt;p data-mid=&quot;&quot;&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section data-mpa-template-id=&quot;112&quot; data-mpa-category=&quot;quote&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;架构师交流群&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt; &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;「架构君」建立了读者架构师交流群，大家可以添加小编微信进行加群。欢迎有想法、乐于分享的朋友们一起交流学习。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;192&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;192&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-type=&quot;jpeg&quot; data-w=&quot;430&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7XnTmQdp3tZg7Y0XOVbePkaK4AHjtNLkqDhDNQdk5sHvJdPuR7qfZOuEtjkXVKx2j5HGB0X8QYLDw/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;扫描添加好友邀你进架构师群，加我时注明&lt;/span&gt;&lt;strong&gt;&lt;span&gt;【&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;姓名+公司+职位】&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;pre&gt;&lt;section data-recommend-type=&quot;list-normal&quot; data-recommend-tid=&quot;2&quot; data-mpa-template=&quot;t&quot; data-mid=&quot;&quot; data-from=&quot;yb-recommend&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-normal&quot; data-recomment-template-id=&quot;2&quot; data-recommend-article-id=&quot;2247501257_1&quot; data-recommend-article-time=&quot;1636251616&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/zc3KLDBfJlm8bD2WBlwbvnsktMdtfSudNaJWbHr1Iyr6HkwCxETHiaiceaWYLmq7tWmHV29U8Xv8UnoeCAOYNj9Q/0?wx_fmt=jpeg&amp;amp;amp;random=0.27521905775014543&quot; data-recommend-article-title=&quot;强势开源一款小程序！&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501257&amp;amp;idx=1&amp;amp;sn=7b4e27cdb1d3146a5e7e1951b5bdc9e8&amp;amp;chksm=c1ca33f9f6bdbaefd3874fa6313e422c8fb6b2799b40d09f36620f0ceaed4fd63c820da1f3ff#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501257&amp;amp;idx=1&amp;amp;sn=7b4e27cdb1d3146a5e7e1951b5bdc9e8&amp;amp;chksm=c1ca33f9f6bdbaefd3874fa6313e422c8fb6b2799b40d09f36620f0ceaed4fd63c820da1f3ff&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;&lt;section data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;强势开源一款小程序！&lt;/p&gt;&lt;p data-recommend-date=&quot;t&quot; data-mid=&quot;&quot;&gt;2021-11-07&lt;/p&gt;&lt;/section&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.42592592592592593&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/zc3KLDBfJlm8bD2WBlwbvnsktMdtfSudNaJWbHr1Iyr6HkwCxETHiaiceaWYLmq7tWmHV29U8Xv8UnoeCAOYNj9Q/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-normal&quot; data-recomment-template-id=&quot;2&quot; data-recommend-article-id=&quot;2247501242_1&quot; data-recommend-article-time=&quot;1634952613&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7UWibGeSzVdcKHzDRdVHusb9CJicA5FdhDVPAiaicdTbibx5XoRkhKA3O7Q727cTSurBkJpciczjLrF2wkA/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;强力推荐一个完善的物流（WMS）管理项目（附代码）&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501242&amp;amp;idx=1&amp;amp;sn=aa2297b69874de0993f62ea404376bab&amp;amp;chksm=c1ca338af6bdba9cf3e051ff3001e1f31f9fa97350f3851c797d6486eca360df537196dbe67b#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501242&amp;amp;idx=1&amp;amp;sn=aa2297b69874de0993f62ea404376bab&amp;amp;chksm=c1ca338af6bdba9cf3e051ff3001e1f31f9fa97350f3851c797d6486eca360df537196dbe67b&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;&lt;section data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;强力推荐一个完善的物流（WMS）管理项目（附代码）&lt;/p&gt;&lt;p data-recommend-date=&quot;t&quot; data-mid=&quot;&quot;&gt;2021-10-23&lt;/p&gt;&lt;/section&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.425&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7UWibGeSzVdcKHzDRdVHusb9CJicA5FdhDVPAiaicdTbibx5XoRkhKA3O7Q727cTSurBkJpciczjLrF2wkA/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-normal&quot; data-recomment-template-id=&quot;2&quot; data-recommend-article-id=&quot;2247501238_1&quot; data-recommend-article-time=&quot;1634606700&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7VduLA9tc9dQkaw5HWIV6pqNrOiciaE17jeIeTtoLfgLbyu67dWkRj3tjKX7AFIMrV0rKD5ic6kwicyxg/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;推荐一个 Spring Boot + MyBatis + Vue 音乐网站&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501238&amp;amp;idx=1&amp;amp;sn=d7e873d752a28b582d70bc9f7a981ddb&amp;amp;chksm=c1ca3386f6bdba9031ce115e734ce04c9b6728e8e027fbcf17d8d07f1e029ea5bea04f4a6273#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501238&amp;amp;idx=1&amp;amp;sn=d7e873d752a28b582d70bc9f7a981ddb&amp;amp;chksm=c1ca3386f6bdba9031ce115e734ce04c9b6728e8e027fbcf17d8d07f1e029ea5bea04f4a6273&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;&lt;section data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;推荐一个 Spring Boot + MyBatis + Vue 音乐网站&lt;/p&gt;&lt;p data-recommend-date=&quot;t&quot; data-mid=&quot;&quot;&gt;2021-10-19&lt;/p&gt;&lt;/section&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.42592592592592593&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7VduLA9tc9dQkaw5HWIV6pqNrOiciaE17jeIeTtoLfgLbyu67dWkRj3tjKX7AFIMrV0rKD5ic6kwicyxg/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-normal&quot; data-recomment-template-id=&quot;2&quot; data-recommend-article-id=&quot;2247501208_1&quot; data-recommend-article-time=&quot;1632101100&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7VibcP3PNgQvXGZ7UJkVeu0JZsrldvF1urHlmNwhUP89IeKHz1PfJ12es2ArTwkYibAh3Y0soOib2rjA/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;分享一套家庭理财系统（附源码）&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501208&amp;amp;idx=1&amp;amp;sn=44fcdfe2d7f81a26845faf33750ea9bb&amp;amp;chksm=c1ca33a8f6bdbabec8ff34719f438465adf745cbef30bfb92be53897c714d8c13bdd01989d17#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501208&amp;amp;idx=1&amp;amp;sn=44fcdfe2d7f81a26845faf33750ea9bb&amp;amp;chksm=c1ca33a8f6bdbabec8ff34719f438465adf745cbef30bfb92be53897c714d8c13bdd01989d17&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;&lt;section data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;分享一套家庭理财系统（附源码）&lt;/p&gt;&lt;p data-recommend-date=&quot;t&quot; data-mid=&quot;&quot;&gt;2021-09-20&lt;/p&gt;&lt;/section&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.42407407407407405&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7VibcP3PNgQvXGZ7UJkVeu0JZsrldvF1urHlmNwhUP89IeKHz1PfJ12es2ArTwkYibAh3Y0soOib2rjA/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-normal&quot; data-recomment-template-id=&quot;2&quot; data-recommend-article-id=&quot;2247501192_1&quot; data-recommend-article-time=&quot;1630718700&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7UG0pYPldneUCCVsPia3Rtr9j3hlFHakhItFlOXuwLicUqQvP1PhkTM28CUU9BpRCWfWPfHYredCBiaA/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;推荐一个互联网企业级别的开源支付系统&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501192&amp;amp;idx=1&amp;amp;sn=444404a565f02a8c532d291d99678a7b&amp;amp;chksm=c1ca33b8f6bdbaaeb7c65d9f6f0c399f609fb203f065b6e88a3ad5431473713dbb5ae3507b32#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501192&amp;amp;idx=1&amp;amp;sn=444404a565f02a8c532d291d99678a7b&amp;amp;chksm=c1ca33b8f6bdbaaeb7c65d9f6f0c399f609fb203f065b6e88a3ad5431473713dbb5ae3507b32&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;&lt;section data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;推荐一个互联网企业级别的开源支付系统&lt;/p&gt;&lt;p data-recommend-date=&quot;t&quot; data-mid=&quot;&quot;&gt;2021-09-04&lt;/p&gt;&lt;/section&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.425&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7UG0pYPldneUCCVsPia3Rtr9j3hlFHakhItFlOXuwLicUqQvP1PhkTM28CUU9BpRCWfWPfHYredCBiaA/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-normal&quot; data-recomment-template-id=&quot;2&quot; data-recommend-article-id=&quot;2247501176_1&quot; data-recommend-article-time=&quot;1629509100&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7VQRwetNLhDOB2Ej0fDZK4eRXsYlRNicgmsWwmuvlhibooic3N3su1lbMQPqWD186JiaOC5yJ9iaaic8bzw/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;推荐一套开源通用后台管理系统（附源码）&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501176&amp;amp;idx=1&amp;amp;sn=68e3ae7a9dc33fbbd379906ddcefdf5b&amp;amp;chksm=c1ca3348f6bdba5e1774625745f5ef40081c9b8eb0189073734b6808efb872720781d25b8dc0#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501176&amp;amp;idx=1&amp;amp;sn=68e3ae7a9dc33fbbd379906ddcefdf5b&amp;amp;chksm=c1ca3348f6bdba5e1774625745f5ef40081c9b8eb0189073734b6808efb872720781d25b8dc0&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;&lt;section data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;推荐一套开源通用后台管理系统（附源码）&lt;/p&gt;&lt;p data-recommend-date=&quot;t&quot; data-mid=&quot;&quot;&gt;2021-08-21&lt;/p&gt;&lt;/section&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4265625&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7VQRwetNLhDOB2Ej0fDZK4eRXsYlRNicgmsWwmuvlhibooic3N3su1lbMQPqWD186JiaOC5yJ9iaaic8bzw/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-normal&quot; data-recomment-template-id=&quot;2&quot; data-recommend-article-id=&quot;2247501153_1&quot; data-recommend-article-time=&quot;1627704022&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7UbyFoOMqOObokEYiahCar20LiaY8ZLGKzU7NYQQoGycgnhrmIzNJibPicGcNia3cbbXlYib6bcLJVV5aww/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;一款神仙接私活儿软件，吊到不行！&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501153&amp;amp;idx=1&amp;amp;sn=bb29cffa56431b72a92709c0ae993af7&amp;amp;chksm=c1ca3351f6bdba4729c671cdcd0ee8b6af75c6ce8a7003e6c032942b849aab5bfedecd0f9d3b#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501153&amp;amp;idx=1&amp;amp;sn=bb29cffa56431b72a92709c0ae993af7&amp;amp;chksm=c1ca3351f6bdba4729c671cdcd0ee8b6af75c6ce8a7003e6c032942b849aab5bfedecd0f9d3b&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot;&gt;&lt;section data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;一款神仙接私活儿软件，吊到不行！&lt;/p&gt;&lt;p data-recommend-date=&quot;t&quot; data-mid=&quot;&quot;&gt;2021-07-31&lt;/p&gt;&lt;/section&gt;&lt;span class=&quot;js_img_placeholder&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7UbyFoOMqOObokEYiahCar20LiaY8ZLGKzU7NYQQoGycgnhrmIzNJibPicGcNia3cbbXlYib6bcLJVV5aww/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-index=&quot;25&quot;&gt;&lt;span/&gt;&lt;/span&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-normal&quot; data-recomment-template-id=&quot;2&quot; data-recommend-article-id=&quot;2247501139_1&quot; data-recommend-article-time=&quot;1626571500&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7VGxZrbRFy96Sm9cXQzVEhiaLibUUYhYH1SJL4HUXenau3DCeq0KEOsguY4CWjaEd1BeAicJd24qFM2w/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;基于 SpringBoot 的仿豆瓣平台【源码分享】&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501139&amp;amp;idx=1&amp;amp;sn=f133e70bda8abae27459ccc4d3d6d8fd&amp;amp;chksm=c1ca3363f6bdba75b9a4145510d9b6108c56146a3146b2e2e6d660a08221618b01c815d55642#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501139&amp;amp;idx=1&amp;amp;sn=f133e70bda8abae27459ccc4d3d6d8fd&amp;amp;chksm=c1ca3363f6bdba75b9a4145510d9b6108c56146a3146b2e2e6d660a08221618b01c815d55642&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot;&gt;&lt;section data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;基于 SpringBoot 的仿豆瓣平台【源码分享】&lt;/p&gt;&lt;p data-recommend-date=&quot;t&quot; data-mid=&quot;&quot;&gt;2021-07-18&lt;/p&gt;&lt;/section&gt;&lt;span class=&quot;js_img_placeholder&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7VGxZrbRFy96Sm9cXQzVEhiaLibUUYhYH1SJL4HUXenau3DCeq0KEOsguY4CWjaEd1BeAicJd24qFM2w/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-index=&quot;26&quot;&gt;&lt;span/&gt;&lt;/span&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-normal&quot; data-recomment-template-id=&quot;2&quot; data-recommend-article-id=&quot;2247501105_1&quot; data-recommend-article-time=&quot;1623979500&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7Xw68Ow8vZian4lanQFAu09f4JOZlXbC85jsByb8V6StkOpibAdgPamPWoPPY3G7S3nic50QvxxuGNrg/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;干掉 Wordpress！这个开源建站神器有点吊！&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501105&amp;amp;idx=1&amp;amp;sn=caf01186b6d2e4a38e940ce07d822238&amp;amp;chksm=c1ca3301f6bdba17ba7127da24e28963ae40f944e587f14b57405e2a9ee9d8cdbcb835c880c8#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501105&amp;amp;idx=1&amp;amp;sn=caf01186b6d2e4a38e940ce07d822238&amp;amp;chksm=c1ca3301f6bdba17ba7127da24e28963ae40f944e587f14b57405e2a9ee9d8cdbcb835c880c8&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;&lt;section data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;干掉 Wordpress！这个开源建站神器有点吊！&lt;/p&gt;&lt;p data-recommend-date=&quot;t&quot; data-mid=&quot;&quot;&gt;2021-06-18&lt;/p&gt;&lt;/section&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.42578125&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7Xw68Ow8vZian4lanQFAu09f4JOZlXbC85jsByb8V6StkOpibAdgPamPWoPPY3G7S3nic50QvxxuGNrg/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-normal&quot; data-recomment-template-id=&quot;2&quot; data-recommend-article-id=&quot;2247501098_2&quot; data-recommend-article-time=&quot;1623461160&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7VzIP6xibP6U8htKa7YEad1iaTE02ZbsOfvDX1D8LoTiaNsMVgdjFOdm5LahpnNXFe3ibSp8S4FJ39KkA/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;从朋友那里搞了 20 个实战项目，速领！&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501098&amp;amp;idx=2&amp;amp;sn=520b81839bb5b4f1c990278e03e1991d&amp;amp;chksm=c1ca331af6bdba0c0e3435da519fadda3be81744168e30c56a823180bd458a5ec8a6b499f2a4#rd&quot;&gt;&lt;section data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501098&amp;amp;idx=2&amp;amp;sn=520b81839bb5b4f1c990278e03e1991d&amp;amp;chksm=c1ca331af6bdba0c0e3435da519fadda3be81744168e30c56a823180bd458a5ec8a6b499f2a4&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot;&gt;从朋友那里搞了 20 个实战项目，速领！&lt;/a&gt;&lt;/p&gt;&lt;p data-recommend-date=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501098&amp;amp;idx=2&amp;amp;sn=520b81839bb5b4f1c990278e03e1991d&amp;amp;chksm=c1ca331af6bdba0c0e3435da519fadda3be81744168e30c56a823180bd458a5ec8a6b499f2a4&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot;&gt;2021-06-12&lt;/a&gt;&lt;/p&gt;&lt;/section&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501098&amp;amp;idx=2&amp;amp;sn=520b81839bb5b4f1c990278e03e1991d&amp;amp;chksm=c1ca331af6bdba0c0e3435da519fadda3be81744168e30c56a823180bd458a5ec8a6b499f2a4&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-type=&quot;jpeg&quot; data-w=&quot;200&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7VzIP6xibP6U8htKa7YEad1iaTE02ZbsOfvDX1D8LoTiaNsMVgdjFOdm5LahpnNXFe3ibSp8S4FJ39KkA/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4703703703703704&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Baq5lYpIw7X6YPYGQITyP8Zdk96ab7CX0Ind5E05VokoepTP9Adic0xRwiaQrAvfTeC7iafngRibhBShpVqibqNcCCA/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如有收获，点个在看，诚挚感谢&lt;/span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-fileid=&quot;100018364&quot; data-ratio=&quot;1&quot; data-type=&quot;png&quot; data-w=&quot;19&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/fEsWkVrSk54JM0xl7WLNGnqqwbcXQBWIOCMuOgPHRoOjMamXzrCqMS2xgOo5ibic9icPk7u3zsVgic3s1ZUYJ4xHXg/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;mp-style-type data-value=&quot;3&quot;/&gt;&lt;/p&gt;&lt;/div&gt;

          
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>65afdce0a429b5e73484aebf8c058591</guid>
<title>为什么 React Zustand 是当下复杂状态管理的最佳选择</title>
<link>https://toutiao.io/k/fbkwx3q</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;🙋🏻‍♀️ 编者按：本文作者是蚂蚁集团体验设计师闻冰（社区称呼：空谷） ，本篇中，闻冰首先介绍了那些复杂应用的状态管理天坑，认为 zustand 是当下复杂状态管理的最佳选择，并从状态共享、状态变更、状态派生、性能优化等 6 个方面诠释了选择它的理由。本篇为上篇，下篇将介绍 Zustand 的渐进式状态管理实践，敬请期待～&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;作为一名主业做设计，业余搞前端的小菜鸡，到 2020 年底为止都是用云谦大佬的 dva 一把梭。当时整体的使用体验还是挺好的，对于我这样的前端菜鸡上手门槛低，而且学一次哪都可用，当时从来没愁过状态管理。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5626666666666666&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/M7OtEw9eDKHHIlCdf8ubMWwPDdHGdhvWW8SUOKDIE9uDDOCnNKARVEqgaZbF9SWl4jlLoTB3yB4NWgMxRmhVcg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1500&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;至今 Kitchen3 里仍然躺着用 dva 做状态管理的功能模块，写于 2020 年&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;直到 hooks 横空出世， TypeScript 逐步流行。一方面，从 react hooks 出来以后，大量的文章开始鼓吹「你不需要 Redux」、「useState + Context」完全可用、「next-unstated」YYDS 等等。另一方面，由于 Dva 不再维护，其在 ts 下的都没有任何提示的问题也逐步暴露。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在尝试一些小项目中使用 hooks 后感觉还行之后，作为小萌新的我也全面转向了 hooks 的怀抱。中间其实一直没怎么遇到问题，因为大部分前端应用的复杂度也就那样，hooks 问题不大。然后呢？然后从去年开始就在复杂应用里踩坑了。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/M7OtEw9eDKHHIlCdf8ubMWwPDdHGdhvWkBddmKBAkVxbiaN8ickbrD6ZADm6ePuSlV8aOCIxW3wSvWdRIwGjFXcw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;225&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;/h2&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;复杂应用的状态管理天坑&lt;/span&gt;&lt;/h1&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;ProEditor 是内部组件库 TechUI Studio 的编辑器组件。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;业务组件 ProEditor 就是一个很典型的例子。由于 ProEditor 是个编辑器，对用户来说编辑体验非常重要，是一个重交互操作的应用，这就会牵扯到大量的状态管理需求。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.614&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/M7OtEw9eDKHHIlCdf8ubMWwPDdHGdhvWRMREiavicZjyN7uwDOicHOyOls7Gr1eMdEWiaia7cpKhWewB5gKEG2D7Ukg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1500&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;先简单来列下 ProEditor 的状态管理需求有哪些：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;❶ Editor 容器状态管理与组件（Table）状态管理拆分，但可联动消费；&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;容器状态负责了一些偏全局配置的状态维护，比如画布、代码页的切换，是否激活画布交互等等，而组件的状态则是保存了组件本身的所有配置和状态。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这么做的好处在于不同组件可能会有不同的状态，而 Editor 的容器状态可以复用，比如做 ProForm 的时候，Editor 的容器仍然可以是同一个，组件状态只需额外实现 ProForm 的 Store 即可。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7180851063829787&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/M7OtEw9eDKHHIlCdf8ubMWwPDdHGdhvW8AoFEINyVmxZ5NrhyNJLavry7GLKge1RxE209s0lX5CQbR7mdDrqDA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1504&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从上图可以看到，Table 的状态就是 Editor 的 config 字段，当 Table 改时，会触发 Editor 的 config 字段同步更新。当 Editor 更新时，也会触发该数据更新。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最初的版本，我使用了 Provider + Context 的方式来做全局状态管理。大概的写法是这样的：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;// 定义&lt;/span&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; &lt;span&gt;const&lt;/span&gt; useStudioStore = &lt;span&gt;(&lt;span&gt;props?: ProEditorProps&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;br/&gt;  &lt;span&gt;// ...&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; tableStore = useTableStore(props?.value);&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; [tabKey, switchTab] = useState(TabKey.canvas);&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; [activeConfigTab, switchConfigTab] = useState&amp;lt;TableConfigGroup&amp;gt;(TableConfigGroup.Table);&lt;br/&gt;  &lt;span&gt;// ...&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; &lt;span&gt;const&lt;/span&gt; StudioStore = createContextStore(useStudioStore, {});&lt;br/&gt;&lt;br/&gt;&lt;span&gt;// 消费 &lt;/span&gt;&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; NavBar: FC&amp;lt;NavBarProps&amp;gt; = &lt;span&gt;(&lt;span&gt;{ logo }&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; { tabKey } = useContext(StudioStore);&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; ...&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由于这一版是 Context 一杆推到底，这造成了一些很离谱的交互反馈，就是每一次点击其他任何地方（例如画布代码、组件的配置项），都会造成面板的 Tabs 重新渲染（左下图）。右下图是相应的重渲染分析图，可以看到任何动作都造成了重新所有页面元素的重渲染。而这还是最早期的 demo 版本，功能和数据量的才实现到 20% 左右。所以可以预见到如果不做任何优化，使用体验会差到什么程度。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5745079662605436&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/M7OtEw9eDKHHIlCdf8ubMWwPDdHGdhvWmJNtPzczLBq5vosRiaLKR6QLl2wcP4gotr7QibSvgF12gC0EME0oUPBQ/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;1067&quot;/&gt;&lt;/figure&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5745079662605436&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/M7OtEw9eDKHHIlCdf8ubMWwPDdHGdhvWKOMbobWPZ30567OXLDEyD2MAl083PeoicQEvbPeLaekMI3ZbKKzG4Rg/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;1067&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;❷ 需要进行复杂的数据处理&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;ProEditor 针对表格编辑，做了大量的数据变换操作。比如 ProTable 中针对 &lt;code&gt;columns&lt;/code&gt; 这个字段的更新就有 14 种操作。比如其中一个比较容易被感知的&lt;code&gt;updateColumnByOneAPI&lt;/code&gt; 就是基于 oneAPI 的字段信息更新，细颗粒度地调整 columns 里的字段信息。而这样的字段修改类型的 store，在 ProEditor 中除了 &lt;code&gt;columns&lt;/code&gt; 还有一个 &lt;code&gt;data&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当时，为了保证数据变更方法的可维护性与 action 的不变性，我采用了 userReducer 做变更方法的管理。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.590047393364929&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/M7OtEw9eDKHHIlCdf8ubMWwPDdHGdhvWReXq2gjM9ewOjzN0c04pKLa8ibKrNdePIzLeibpdrrk6K2icJY2BmZEKw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1688&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;因为一旦采用自定义 hooks ，就得写成下面这样才能保证不会重复渲染，会造成极大的心智负担，一旦出现数据不对的情况，很难排查到底是哪个方法或者依赖有问题。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;// 自定 hook 的写法&lt;/span&gt;&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; useDataColumns = &lt;span&gt;&lt;span&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; createOrUpdateColumnsByMockData = useCallback(&lt;span&gt;&lt;span&gt;()&lt;/span&gt;=&amp;gt;&lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;// ...&lt;/span&gt;&lt;br/&gt;  },[a,b]);&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; createColumnsByOneAPI = useCallback(&lt;span&gt;&lt;span&gt;()&lt;/span&gt;=&amp;gt;&lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;// ...&lt;/span&gt;&lt;br/&gt;  },[c,d]);&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; updateColumnsByOneAPI = useCallback(&lt;span&gt;&lt;span&gt;()&lt;/span&gt;=&amp;gt;&lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;// ...&lt;/span&gt;&lt;br/&gt;  },[a,b,c,d]);&lt;br/&gt;  &lt;span&gt;// ...&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但 useReducer 也有很大的局限性，例如不支持异步函数、不支持内部的 reducer 互相调用，不支持和其他 state 联动（比如要当参数穿进去才可用），所以也不是最优解。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;❸ 是个可被外部消费的组件&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一旦提到组件，势必要提非受控模式和受控模式。为了支持好我们自己的场景，且希望把 ProEditor 变成一个好用的业务组件，所以我们做了受控模式，毕竟一个好用的组件一定是要能同时支持好这两种模式的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在实际场景下，我们既需要配置项（&lt;code&gt;config&lt;/code&gt;）受控，同时也需要画布交互状态（&lt;code&gt;interaction&lt;/code&gt;）受控，例如下面的场景：在激活某个单元格状态时点击生成，我们需要将这个选中状态进行重置，才能生成符合预期的设计稿。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6493055555555556&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/M7OtEw9eDKHHIlCdf8ubMWwPDdHGdhvW2VVCkaXTs15fmuCYXfNh3ic50W56chZAnVxaDUzJxshHvrjuiaEBKrUg/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;1152&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以为了支持细颗粒度的受控能力，我们提供了多个受控值，供外部受控模式。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;// ProEditor 外部消费的 Demo 示意&lt;/span&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; &lt;span&gt;default&lt;/span&gt; () =&amp;gt; {&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; [status, setStatus] = useState();&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; { config, getState } = useState();&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt;  (&lt;br/&gt;    &amp;lt;ProEditor&lt;br/&gt;      &lt;span&gt;// config 和 onConfigChange 是一对&lt;/span&gt;&lt;br/&gt;      config={config}&lt;br/&gt;      onConfigChange={&lt;span&gt;(&lt;span&gt;{ config }&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;br/&gt;        setConfig(config);&lt;br/&gt;      }}&lt;br/&gt;      &lt;span&gt;// interaction 和 onInteractionChange 是另一对受控&lt;/span&gt;&lt;br/&gt;      interaction={status}&lt;br/&gt;      onInteractionChange={&lt;span&gt;(&lt;span&gt;s&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;br/&gt;        setStatus(s);&lt;br/&gt;      }}&lt;br/&gt;      /&amp;gt;&lt;br/&gt;  );&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但当我们一开始写好这个受控 api，得到结果是这样的：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4705056179775281&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/M7OtEw9eDKHHIlCdf8ubMWwPDdHGdhvWG0vkSfFrhKzwDwsCbunfyONcUevvK1aqVjmPxdaxwlA3P2X4xxaK2Q/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;1424&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对，你没看错，&lt;strong&gt;死循环了&lt;/strong&gt;。遇到这个问题时让人头极度秃，因为原本以为是个很简单的功能，但是在 React 生命周期里的表现让人费解，尤其是使用 useEffect 做状态管理的时候。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;// 导致死循环的写法&lt;/span&gt;&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; useTableStore = &lt;span&gt;(&lt;span&gt;state: Partial&amp;lt;Omit&amp;lt;ProTableConfigStore, &#x27;columns&#x27; | &#x27;data&#x27;&amp;gt;&amp;gt;&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; { defaultConfig, config: outsourceValue, mode } = props;&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; { columns, isEmptyColumns, dispatchColumns } = useColumnStore(defaultConfig?.columns, mode);&lt;br/&gt;  &lt;span&gt;// 受控模式 内部值与外部双向通信&lt;/span&gt;&lt;br/&gt;  useEffect(&lt;span&gt;&lt;span&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;br/&gt;    &lt;span&gt;// 没有外部值和变更时不更改&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (!outsourceValue) &lt;span&gt;return&lt;/span&gt;;&lt;br/&gt;    &lt;span&gt;// 相等值的时候不做更新&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (isEqual(dataStore, outsourceValue)) &lt;span&gt;return&lt;/span&gt;;&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (outsourceValue.columns) {&lt;br/&gt;      dispatchColumns({ &lt;span&gt;type&lt;/span&gt;: &lt;span&gt;&#x27;setAll&#x27;&lt;/span&gt;, columns: outsourceValue.columns });&lt;br/&gt;    }&lt;br/&gt;  }, [dataStore, outsourceValue]);&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; dataStore = useMemo(&lt;span&gt;&lt;span&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;br/&gt;    &lt;span&gt;const&lt;/span&gt; v = { ...store, data, columns } &lt;span&gt;as&lt;/span&gt; ProTableConfigStore;&lt;br/&gt;    &lt;span&gt;// dataStore 变更时需要对外变更一次&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (props.onChange &amp;amp;&amp;amp; !isEqual(v, outsourceValue)) {&lt;br/&gt;      props.onChange?.({&lt;br/&gt;        config: v,&lt;br/&gt;        props: tableAsset.generateProps(v),&lt;br/&gt;        isEmptyColumns,&lt;br/&gt;      });&lt;br/&gt;    }&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; v;&lt;br/&gt;  }, [data, store, columns, outsourceValue]);&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;// ...&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;造成上述问题的原因大部分都是因为组件内 onChange 的时机设置。一旦代码里用 useEffect 的方式去监听变更触发 onChange，有很大的概率会造成死循环。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;❹ 未来还希望能支持撤销重做、快捷键等能力&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;毕竟，现代的编辑器都是支持快捷键、历史记录、多人协同等增强型的功能的。这些能力怎么在编辑器的状态管理中以低成本、易维护的方式进行实施，也非常重要。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.2914634146341463&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/M7OtEw9eDKHHIlCdf8ubMWwPDdHGdhvWc8mo87e7Ec7ib2xrKibWEsLA5yk0cibibvUFqe8HuqFib8597Hn85S91dMg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1640&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;总之，开发 ProEditor 的经历，一句话的血泪教训就是：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;复杂应用的状态管理真的不能裸写 hooks！&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;复杂应用的状态管理真的不能裸写 hooks！&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;复杂应用的状态管理真的不能裸写 hooks！&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那些鼓吹裸写 hooks 的人大概率是没遇到过复杂 case，性能优化、受控、action 互调、数据切片、状态调试等坑，每一项都不是好惹的主，够人喝上一壶。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/M7OtEw9eDKHHIlCdf8ubMWwPDdHGdhvWAJF9sk618xRaHKevTz2tmMLUiaSiaMe22mZCwh7RJkxtiaFnDvQywk9wg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;225&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;/h2&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;为什么是 Zustand ？&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其实，复杂应用只是开发者状态管理需求的集中体现。如果我们把状态管理当成一款产品来设计，我们不妨看看开发者在状态管理下的核心需求是什么。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我相信通过以下这一串分析，你会发现 zustand 是真真正正满足「几乎所有」状态管理需求的工具，并且在很多细节上做到了体验更优。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/M7OtEw9eDKHHIlCdf8ubMWwPDdHGdhvW3TVhBqlia1Gm6EurhibEYH2sxkl9KwqhKe35e2P1nqbQ5hlvnmXnQW3Q/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1200&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;官网：https://zustand-demo.pmnd.rs/&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❶ 状态共享&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;状态管理最必要的一点就是状态共享&lt;/strong&gt;。这也是 context 出来以后，大部分文章说不需要 redux 的根本原因。因为context 可以实现最最基础的状态共享。但这种方法（包括 redux 在内），都需要在最外层包一个 Provider。Context 中的值都在 Provider 的作用域下有效。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;// Context 状态共享&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;// store.ts&lt;/span&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; &lt;span&gt;const&lt;/span&gt; StoreContext = createStoreContext(&lt;span&gt;&lt;span&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; { ... });&lt;br/&gt;&lt;br/&gt;&lt;span&gt;// index.tsx&lt;/span&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; { appState, StoreContext } &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;./store&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;root.render(&lt;br/&gt;    &amp;lt;StoreContext.Provider value={appState}&amp;gt;&lt;br/&gt;      &amp;lt;App /&amp;gt;&lt;br/&gt;    &amp;lt;&lt;span&gt;/StoreContext.Provider&amp;gt;&lt;br/&gt;);&lt;br/&gt;&lt;br/&gt;/&lt;/span&gt;&lt;span&gt;/ icon.tsx&lt;br/&gt;import { StoreContext } from &#x27;./&lt;/span&gt;store&lt;span&gt;&#x27;;&lt;br/&gt;&lt;br/&gt;const ReplaceGuide: FC = () =&amp;gt; {&lt;br/&gt;  const { i18n, hideGuide, settings } = useContext(StoreContext);&lt;br/&gt;&lt;br/&gt;  // ...&lt;br/&gt;  return ...&lt;br/&gt;}&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;而 zustand 做到的第一点创新就是：&lt;strong&gt;默认不需要 Provider&lt;/strong&gt;。直接声明一个 hooks 式的 useStore 后就可以在不同组件中进行调用。它们的状态会直接共享，简单而美好。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;// Zustand 状态共享&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;// store.ts&lt;/span&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; create &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;zustand&#x27;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; &lt;span&gt;const&lt;/span&gt; useStore = create(&lt;span&gt;&lt;span&gt;set&lt;/span&gt; =&amp;gt;&lt;/span&gt; ({&lt;br/&gt;  count: &lt;span&gt;1&lt;/span&gt;,&lt;br/&gt;  inc: &lt;span&gt;&lt;span&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; &lt;span&gt;set&lt;/span&gt;(&lt;span&gt;&lt;span&gt;state&lt;/span&gt; =&amp;gt;&lt;/span&gt; ({ count: state.count + &lt;span&gt;1&lt;/span&gt; })),&lt;br/&gt;}))&lt;br/&gt;&lt;br/&gt;&lt;span&gt;// Control.tsx&lt;/span&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; { useStore } &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;./store&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;function&lt;/span&gt; &lt;span&gt;Control&lt;/span&gt;(&lt;span/&gt;) &lt;/span&gt;{&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; &amp;lt;button onClick={&lt;span&gt;&lt;span&gt;()&lt;/span&gt;=&amp;gt;&lt;/span&gt;{&lt;br/&gt;    useStore.setState(&lt;span&gt;(&lt;span&gt;s&lt;/span&gt;)=&amp;gt;&lt;/span&gt;({...s,count: s.count - &lt;span&gt;5&lt;/span&gt; }))&lt;br/&gt;    }}&amp;gt;－&lt;span&gt;5&lt;/span&gt;&amp;lt;&lt;span&gt;/button&amp;gt;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;/&lt;/span&gt;&lt;span&gt;/ AnotherControl.tsx&lt;br/&gt;import { useStore } from &#x27;./&lt;/span&gt;store&lt;span&gt;&#x27;;&lt;br/&gt;&lt;br/&gt;function AnotherControl() {&lt;br/&gt;  const inc = useStore(state =&amp;gt; state.inc)&lt;br/&gt;  return &amp;lt;button onClick={inc}&amp;gt; +1 &amp;lt;/button&amp;gt;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;// Counter.tsx&lt;br/&gt;import { useStore } from &#x27;&lt;/span&gt;./store&lt;span&gt;&#x27;;&lt;br/&gt;&lt;br/&gt;function Counter() {&lt;br/&gt;  const { count } = useStore()&lt;br/&gt;  return &amp;lt;h1&amp;gt;{count}&amp;lt;/h1&amp;gt;  &lt;br/&gt;}&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由于没有 Provider 的存在，所以声明的 useStore 默认都是单实例，如果需要多实例的话，zustand 也提供了对应的 Provider 的书写方式，这种方式在组件库中比较常用。ProEditor 也是用的这种方式做到了多实例。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;此外，zustand 的 store 状态既可以在 react 世界中消费，也可以在 react 世界外消费。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❷ 状态变更&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;状态管理除了状态共享外，另外第二个极其必要的能力就是状态变更。在复杂的场景下，我们往往需要自行组织相应的状态变更方法，不然不好维护。这也是考验一个状态管理库好不好用的一个必要指标。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;hooks 的 &lt;code&gt;setState&lt;/code&gt; 是原子级的变更状态，hold 不住复杂逻辑；而 &lt;code&gt;useReducer&lt;/code&gt; 的 hooks 借鉴了 redux 的思想，提供了 dispatch 变更的方式，但和 redux 的 reducer 一样，这种方式没法处理异步，且没法互相调用，一旦遇上就容易捉襟见肘。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;至于 redux ，哪怕是最新的 &lt;code&gt;redux-toolkit&lt;/code&gt; 中优化大量 redux 的模板代码，针对同步异步方法的书写仍然让人心生畏惧。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;// redux-toolkit 的用法&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; { createAsyncThunk, createSlice } &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;@reduxjs/toolkit&#x27;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; { userAPI } &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;./userAPI&#x27;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;// 1. 创建异步函数&lt;/span&gt;&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; fetchUserById = createAsyncThunk(&lt;br/&gt;  &lt;span&gt;&#x27;users/fetchByIdStatus&#x27;&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;async&lt;/span&gt; (userId, thunkAPI) =&amp;gt; {&lt;br/&gt;    &lt;span&gt;const&lt;/span&gt; response = &lt;span&gt;await&lt;/span&gt; userAPI.fetchById(userId)&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; response.data&lt;br/&gt;  }&lt;br/&gt;)&lt;br/&gt;&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; usersSlice = createSlice({&lt;br/&gt;  name: &lt;span&gt;&#x27;users&#x27;&lt;/span&gt;,&lt;br/&gt;  initialState: { entities: [], loading: &lt;span&gt;&#x27;idle&#x27;&lt;/span&gt; },&lt;br/&gt;  &lt;span&gt;// 同步的 reducer 方法&lt;/span&gt;&lt;br/&gt;  reducers: {&lt;br/&gt;&lt;br/&gt;  },&lt;br/&gt;  &lt;span&gt;// 异步的 AsyncThunk 方法&lt;/span&gt;&lt;br/&gt;  extraReducers: &lt;span&gt;(&lt;span&gt;builder&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;br/&gt;    &lt;span&gt;// 2. 将异步函数添加到 Slice 中&lt;/span&gt;&lt;br/&gt;    builder.addCase(fetchUserById.fulfilled, &lt;span&gt;(&lt;span&gt;state, action&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;br/&gt;      state.entities.push(action.payload)&lt;br/&gt;    })&lt;br/&gt;  },&lt;br/&gt;})&lt;br/&gt;&lt;br/&gt;&lt;span&gt;// 3. 调用异步方法&lt;/span&gt;&lt;br/&gt;dispatch(fetchUserById(&lt;span&gt;123&lt;/span&gt;))&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;而在 zustand 中，函数可以直接写，完全不用区分同步或者异步，一下子把区分同步异步的心智负担降到了 0。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;// zustand store 写法&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;// store.ts&lt;/span&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; create &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;zustand&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; initialState = {&lt;br/&gt; &lt;span&gt;// ...&lt;/span&gt;&lt;br/&gt;};&lt;br/&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; &lt;span&gt;const&lt;/span&gt; useStore = create(&lt;span&gt;(&lt;span&gt;&lt;span&gt;set&lt;/span&gt;, &lt;span&gt;get&lt;/span&gt;&lt;/span&gt;) =&amp;gt;&lt;/span&gt; ({&lt;br/&gt;  ...initialState,&lt;br/&gt;  createNewDesignSystem: &lt;span&gt;async&lt;/span&gt; () =&amp;gt; {&lt;br/&gt;    &lt;span&gt;const&lt;/span&gt; { params, toggleLoading } = &lt;span&gt;get&lt;/span&gt;();&lt;br/&gt;&lt;br/&gt;    toggleLoading();&lt;br/&gt;    &lt;span&gt;const&lt;/span&gt; res = &lt;span&gt;await&lt;/span&gt; dispatch(&lt;span&gt;&#x27;/hitu/remote/create-new-ds&#x27;&lt;/span&gt;, params);&lt;br/&gt;    toggleLoading();&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (!res) &lt;span&gt;return&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;set&lt;/span&gt;({ created: &lt;span&gt;true&lt;/span&gt;, designId: res.id });&lt;br/&gt;  },&lt;br/&gt;  toggleLoading: &lt;span&gt;&lt;span&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;br/&gt;    &lt;span&gt;set&lt;/span&gt;({ loading: !&lt;span&gt;get&lt;/span&gt;().loading });&lt;br/&gt;  }&lt;br/&gt;}));&lt;br/&gt;&lt;br/&gt;&lt;span&gt;// CreateForm.tsx&lt;/span&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; { useStore } &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;./store&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; CreateForm: FC = &lt;span&gt;&lt;span&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; { createNewDesignSystem } = useStore();&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;// ...&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;另外一个让人非常舒心的点在于，&lt;strong&gt;zustand 会默认将所有的函数保持同一引用&lt;/strong&gt;。所以用 zustand 写的方法，默认都不会造成额外的重复渲染。（PS：这里再顺带吹一下 WebStorm 对于函数和变量的识别能力，非常好用）&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.20764331210191084&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/M7OtEw9eDKHHIlCdf8ubMWwPDdHGdhvWP2CPskmtMRPztMjQzaTHoKFOkhpIyDOuABJ5mfs5S6Oic5teqw6tu1A/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1570&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在下图可以看到，所有 zustand 的 useStore 出来的值或者方法，都是橙色的变量，具有稳定引用，不会造成不必要的重复渲染。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.2641843971631206&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/M7OtEw9eDKHHIlCdf8ubMWwPDdHGdhvWVPTdf6jOXWbDInE9yQXKmP05wm8ef9ogruUPq3nCpJYWfzOkm1VNlA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;2256&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;而状态变更函数的最后一个很重要，但往往又会被忽略的一点，就是&lt;strong&gt;方法需要调用当前快照下的值或方法&lt;/strong&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在常规的开发心智中，我们往往会在异步方法中直接调用当前快照的值来发起请求，或使用同步方法进行状态变更，这会有极好的状态内聚性。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如说，我们有一个方法叫「废弃草稿」，需要获取当前的一个 id ，向服务器发起请求做数据变更，同时为了保证当前界面的数据显示有效性，变更完毕后，我们需要重新获取数据。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们来看看 hooks 版本和 zustand 的写法对比，如下所示：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;// hooks 版本&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; &lt;span&gt;const&lt;/span&gt; useStore = &lt;span&gt;&lt;span&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; [designId, setDesignId] = useState();&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; [loading, setLoading] = useState(&lt;span&gt;false&lt;/span&gt;);&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; refetch = useCallback(&lt;span&gt;&lt;span&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (designId) {&lt;br/&gt;      mutateKitchenSWR(&lt;span&gt;&#x27;/hitu/remote/ds/versions&#x27;&lt;/span&gt;, designId);&lt;br/&gt;    }&lt;br/&gt;  }, [designId]);&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; deprecateDraft = useCallback(&lt;span&gt;async&lt;/span&gt; () =&amp;gt; {&lt;br/&gt;    setLoading(&lt;span&gt;true&lt;/span&gt;);&lt;br/&gt;    &lt;span&gt;const&lt;/span&gt; res = &lt;span&gt;await&lt;/span&gt; dispatch(&lt;span&gt;&#x27;/hitu/remote/ds/deprecate-draft&#x27;&lt;/span&gt;, designId);&lt;br/&gt;    setLoading(&lt;span&gt;false&lt;/span&gt;);&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (res) {&lt;br/&gt;      message.success(&lt;span&gt;&#x27;草稿删除成功&#x27;&lt;/span&gt;);&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;// 重新获取一遍数据&lt;/span&gt;&lt;br/&gt;    refetch();&lt;br/&gt;  }, [designId, refetch]);&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; {&lt;br/&gt;    designId,&lt;br/&gt;    setDesignId,&lt;br/&gt;    loading,&lt;br/&gt;    deprecateDraft,&lt;br/&gt;    refetch,&lt;br/&gt;  }&lt;br/&gt;};&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;// zustand 写法&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; initialState = { designId: &lt;span&gt;undefined&lt;/span&gt;, loading: &lt;span&gt;false&lt;/span&gt; };&lt;br/&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; &lt;span&gt;const&lt;/span&gt; useStore = create(&lt;span&gt;(&lt;span&gt;&lt;span&gt;set&lt;/span&gt;, &lt;span&gt;get&lt;/span&gt;&lt;/span&gt;) =&amp;gt;&lt;/span&gt; ({&lt;br/&gt;  ...initialState,&lt;br/&gt;  deprecateDraft: &lt;span&gt;async&lt;/span&gt; () =&amp;gt; {&lt;br/&gt;    &lt;span&gt;set&lt;/span&gt;({ loading: &lt;span&gt;true&lt;/span&gt; });&lt;br/&gt;    &lt;span&gt;const&lt;/span&gt; res = &lt;span&gt;await&lt;/span&gt; dispatch(&lt;span&gt;&#x27;/hitu/remote/ds/deprecate-draft&#x27;&lt;/span&gt;, &lt;span&gt;get&lt;/span&gt;().designId);&lt;br/&gt;    &lt;span&gt;set&lt;/span&gt;({ loading: &lt;span&gt;false&lt;/span&gt; });&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (res) {&lt;br/&gt;      message.success(&lt;span&gt;&#x27;草稿删除成功&#x27;&lt;/span&gt;);&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;// 重新获取一遍数据&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;get&lt;/span&gt;().refetch();&lt;br/&gt;  },&lt;br/&gt;  refetch: &lt;span&gt;&lt;span&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (&lt;span&gt;get&lt;/span&gt;().designId) {&lt;br/&gt;      mutateKitchenSWR(&lt;span&gt;&#x27;/hitu/remote/ds/versions&#x27;&lt;/span&gt;, &lt;span&gt;get&lt;/span&gt;().designId);&lt;br/&gt;    }&lt;br/&gt;  },&lt;br/&gt;})&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以明显看到，光是从代码量上 zustand 的 store 比 hooks 减少了 30% 。不过另外容易被大家忽略，但其实更重要的是， &lt;strong&gt;hooks 版本中互调带来了引用变更的问题&lt;/strong&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由于 &lt;code&gt;deprecateDraft&lt;/code&gt; 和 &lt;code&gt;refetch&lt;/code&gt; 都调用了 &lt;code&gt;designId&lt;/code&gt;，这就会使得当 &lt;code&gt;designId&lt;/code&gt; 发生变更时，&lt;code&gt;deprecateDraft&lt;/code&gt; 和 &lt;code&gt;refetch&lt;/code&gt; 的引用会发生变更，致使 react 触发刷新。而这在有性能优化需求的场景下非常阴间，会让不该渲染的组件重新渲染。那这也是为什么react 要搞一个 &lt;code&gt;useEvent&lt;/code&gt; 的原因（RFC）。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;而 zustand 则把这个问题解掉了。由于 zustand 在 create 方法中提供了 &lt;code&gt;get&lt;/code&gt; 对象，使得我们可以用 get 方法直接拿到当前 store 中最新的 state 快照。这样一来，变更函数的引用始终不变，而函数本身却一直可以拿到最新的值。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在这一趴，最后一点要夸 zustand 的是，它可以直接集成 useReducer 的模式，而且直接在官网提供了示例。这样就意味着之前在 ProEditor 中的那么多 action 可以极低成本完成迁移。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;// columns 的 reducer 迁移&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; { columnsConfigReducer } &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;./columns&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; createStore = create(&lt;span&gt;(&lt;span&gt;&lt;span&gt;set&lt;/span&gt;,&lt;span&gt;get&lt;/span&gt;&lt;/span&gt;)=&amp;gt;&lt;/span&gt;({&lt;br/&gt;  &lt;span&gt;/**&lt;br/&gt;   * 控制 Columns 的复杂数据变更方法&lt;br/&gt;   */&lt;/span&gt;&lt;br/&gt;  dispatchColumns: &lt;span&gt;(&lt;span&gt;payload&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;br/&gt;    &lt;span&gt;const&lt;/span&gt; { columns, internalUpdateTableConfig, updateDataByColumns } = &lt;span&gt;get&lt;/span&gt;();&lt;br/&gt;    &lt;span&gt;// 旧的 useReducer 直接复用过来&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;const&lt;/span&gt; nextColumns = columnsConfigReducer(columns, payload);&lt;br/&gt;&lt;br/&gt;    internalUpdateTableConfig({ columns: nextColumns }, &lt;span&gt;&#x27;Columns 配置&#x27;&lt;/span&gt;);&lt;br/&gt;&lt;br/&gt;    updateDataByColumns(nextColumns);&lt;br/&gt;  },&lt;br/&gt;})&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❸ 状态派生&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;状态派生是状态管理中一个不被那么多人提起，但是在实际场景中被大量使用的东西，只是大家没有意识到，这理应也是状态管理的一环。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;状态派生可以很简单，也可以非常复杂。简单的例子，比如基于一个&lt;code&gt;name&lt;/code&gt; 字段，拼接出对应的 url 。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.21445221445221446&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/M7OtEw9eDKHHIlCdf8ubMWwPDdHGdhvWaIQsibib6Re4aJ19mJISJTSsBGKcjwMDiakIIKfYKXF91XpsOdem4IFYw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;858&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;复杂的例子，比如基于 rgb 、hsl 值和色彩模式，得到一个包含色彩空间的对象。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.41155234657039713&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/M7OtEw9eDKHHIlCdf8ubMWwPDdHGdhvWRvxjIE9LL8vsjGTxlojD3eIiba2ibfqfUG7gjDKVbosJrfaGfDdtPic1Q/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1662&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果不考虑优化，其实都可以写一个中间的函数作为派生方法，但作为状态管理的一环，我们必须要考虑相应的优化。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在 hooks 场景下，状态派生的方法可以使用 &lt;code&gt;useMemo&lt;/code&gt;，例如：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;// hooks 写法&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; App = &lt;span&gt;&lt;span&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; [name,setName]=useState(&lt;span&gt;&#x27;&#x27;&lt;/span&gt;)&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; url = useMemo(&lt;span&gt;&lt;span&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; URL_HITU_DS_BASE(name || &lt;span&gt;&#x27;&#x27;&lt;/span&gt;),[name])&lt;br/&gt;  &lt;span&gt;// ...&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;而 zustand 用了类似 redux selector 的方法，实现相应的状态派生，这个方式使得 useStore 的用法变得极其灵活和实用。而这种 selector 的方式使得 zustand 下细颗粒度的性能优化变为可能，且优化成本很低。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;// zustand 的 selector 用法&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;// 写法1&lt;/span&gt;&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; App = &lt;span&gt;&lt;span&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; url = useStore( &lt;span&gt;&lt;span&gt;s&lt;/span&gt; =&amp;gt;&lt;/span&gt; URL_HITU_DS_BASE(s.name || &lt;span&gt;&#x27;&#x27;&lt;/span&gt;));&lt;br/&gt;  &lt;span&gt;// ...&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;// 写法2 将 selector 单独抽为函数&lt;/span&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; &lt;span&gt;const&lt;/span&gt; dsUrlSelector = &lt;span&gt;(&lt;span&gt;s&lt;/span&gt;) =&amp;gt;&lt;/span&gt; URL_HITU_DS_BASE(s.name || &lt;span&gt;&#x27;&#x27;&lt;/span&gt;);&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; App = &lt;span&gt;&lt;span&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; url = useStore(dsUrlSelector);&lt;br/&gt;  &lt;span&gt;// ...&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由于写法 2 可以将 selector 抽为独立函数，那么我们就可以将其拆分到独立文件来管理派生状态。由于这些selector 都是纯函数，所以能轻松实现测试覆盖。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5410872313527181&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/M7OtEw9eDKHHIlCdf8ubMWwPDdHGdhvWBQdjdMKKT7fhFsLa3XIyLCME5Eiam1j6lmyg1cJmsibEPj8dEUDGfRaw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1582&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❹ 性能优化&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;讲完状态派生后把 zustand 的 selector 能力后，直接很顺地就能来讲讲 zustand 的性能优化了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在裸 hooks 的状态管理下，要做性能优化得专门起一个专项来分析与实施。但基于 zustand 的 useStore 和 selector 用法，我们可以实现低成本、渐进式的性能优化。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如 ProEditor 中一个叫 &lt;code&gt;TableConfig&lt;/code&gt; 的面板组件，对应的左下图中圈起来的部分。而右下图则是相应的代码，可以看到这个组件从 &lt;code&gt;useStore&lt;/code&gt; 中 解构了 &lt;code&gt;tabKey&lt;/code&gt; 和 &lt;code&gt;internalSetState&lt;/code&gt; 的方法。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3028571428571429&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/M7OtEw9eDKHHIlCdf8ubMWwPDdHGdhvWSWFI3fica0u8AjSDvj9Y4Nr3XcXUUASziaLOd2nfbIERuCvoiclTXy2RQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1750&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然后我们用 &lt;code&gt;useWhyDidYouUpdate&lt;/code&gt; 来检查下，如果直接用解构引入，会造成什么样的情况：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5129824561403509&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/M7OtEw9eDKHHIlCdf8ubMWwPDdHGdhvWvdaXcv74WrEHCjsm1DqwcdpYC6sNldoLtpBNDIacGmLXDU8zuhUP8w/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;1425&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在上图中可以看到，虽然 &lt;code&gt;tabs&lt;/code&gt;、&lt;code&gt;internalSetState&lt;/code&gt; 没有变化，但是其中的 config 数据项（data、columns 等）发生了变化，进而使得 &lt;code&gt;TableConfig&lt;/code&gt; 组件触发重渲染。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;而我们的性能优化方法也很简单，只要利用 zustand 的 selector，将得到的对象聚焦到我们需要的对象，只监听这几个对象的变化即可。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;// 性能优化方法&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; shallow &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;zustand/shallow&#x27;&lt;/span&gt;; &lt;span&gt;// zustand 提供的内置浅比较方法&lt;/span&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; { useStore, ProTableStore } &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;./store&#x27;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; selector = &lt;span&gt;(&lt;span&gt;s: ProTableStore&lt;/span&gt;) =&amp;gt;&lt;/span&gt; ({&lt;br/&gt;  tabKey: s.tabKey,&lt;br/&gt;  internalSetState: s.internalSetState,&lt;br/&gt;});&lt;br/&gt;&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; TableConfig: FC = &lt;span&gt;&lt;span&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; { tabKey, internalSetState } = useStore(selector, shallow);&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这样一来，TableConfig 的性能优化就做好了~&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5129824561403509&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/M7OtEw9eDKHHIlCdf8ubMWwPDdHGdhvWzrnFVfyu1YZenBKtIAOsuWTvHnUN5ibOxZPTJC2gBR9ias1Jjib9wz7dg/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;1425&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;基于这种模式，性能优化就会变成极其简单无脑的操作，而且对于前期的功能实现的侵入性极小，代码的后续可维护性极高。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.15256588072122051&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/M7OtEw9eDKHHIlCdf8ubMWwPDdHGdhvWRI29uUIwicvHr20Z5P3iaZIJ9QGonHcNdoB7VWOmTgIXGj0nLD3pKdbQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;2884&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;剩下的时间就可以和小伙伴去吹咱优雅的性能优化技巧了~（￣︶￣）↗&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4607438016528926&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/M7OtEw9eDKHHIlCdf8ubMWwPDdHGdhvW8L8xDqZX6D3qIXZFKUw5oQqHFZ4ejRQjYeqC3R8U7xo3T6FpKSNeEg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;968&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;就我个人的感受上， zustand 使用 selector 来作为性能优化的思路真的很精巧，就像是给函数式的数据流加上了一点点主观意愿上的响应式能力，堪称优雅。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.0138888888888888&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/M7OtEw9eDKHHIlCdf8ubMWwPDdHGdhvWFq04Mhb8Mo0V3miaSnzO14r7b4xpUJVM9FocoBlSCAckiaz7UfU1V7Tg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❺ 数据分形与状态组合&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果子组件能够以同样的结构，作为一个应用使用，这样的结构就是分形架构。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;数据分形在状态管理里我觉得是个比较高级的概念。但从应用上来说很简单，就是更容易拆分并组织代码，而且具有更加灵活的使用方式，如下所示是拆分代码的方式。但这种方式其实我还没大使用，所以不多展开了。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;// 来自官方文档的示例&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;// https://github.com/pmndrs/zustand/blob/main/docs/typescript.md#slices-pattern&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; create, { StateCreator } &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;zustand&#x27;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;interface&lt;/span&gt; BearSlice {&lt;br/&gt;  bears: &lt;span&gt;number&lt;/span&gt;&lt;br/&gt;  addBear: &lt;span&gt;&lt;span&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;br/&gt;  eatFish: &lt;span&gt;&lt;span&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; createBearSlice: StateCreator&amp;lt;&lt;br/&gt;  BearSlice &amp;amp; FishSlice,&lt;br/&gt;  [],&lt;br/&gt;  [],&lt;br/&gt;  BearSlice&lt;br/&gt;&amp;gt; = &lt;span&gt;(&lt;span&gt;&lt;span&gt;set&lt;/span&gt;&lt;/span&gt;) =&amp;gt;&lt;/span&gt; ({&lt;br/&gt;  bears: &lt;span&gt;0&lt;/span&gt;,&lt;br/&gt;  addBear: &lt;span&gt;&lt;span&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; &lt;span&gt;set&lt;/span&gt;(&lt;span&gt;(&lt;span&gt;state&lt;/span&gt;) =&amp;gt;&lt;/span&gt; ({ bears: state.bears + &lt;span&gt;1&lt;/span&gt; })),&lt;br/&gt;  eatFish: &lt;span&gt;&lt;span&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; &lt;span&gt;set&lt;/span&gt;(&lt;span&gt;(&lt;span&gt;state&lt;/span&gt;) =&amp;gt;&lt;/span&gt; ({ fishes: state.fishes - &lt;span&gt;1&lt;/span&gt; })),&lt;br/&gt;})&lt;br/&gt;&lt;br/&gt;&lt;span&gt;interface&lt;/span&gt; FishSlice {&lt;br/&gt;  fishes: &lt;span&gt;number&lt;/span&gt;&lt;br/&gt;  addFish: &lt;span&gt;&lt;span&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; createFishSlice: StateCreator&amp;lt;&lt;br/&gt;  BearSlice &amp;amp; FishSlice,&lt;br/&gt;  [],&lt;br/&gt;  [],&lt;br/&gt;  FishSlice&lt;br/&gt;&amp;gt; = &lt;span&gt;(&lt;span&gt;&lt;span&gt;set&lt;/span&gt;&lt;/span&gt;) =&amp;gt;&lt;/span&gt; ({&lt;br/&gt;  fishes: &lt;span&gt;0&lt;/span&gt;,&lt;br/&gt;  addFish: &lt;span&gt;&lt;span&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; &lt;span&gt;set&lt;/span&gt;(&lt;span&gt;(&lt;span&gt;state&lt;/span&gt;) =&amp;gt;&lt;/span&gt; ({ fishes: state.fishes + &lt;span&gt;1&lt;/span&gt; })),&lt;br/&gt;})&lt;br/&gt;&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; useBoundStore = create&amp;lt;BearSlice &amp;amp; FishSlice&amp;gt;&lt;span&gt;&lt;span&gt;()&lt;/span&gt;(&lt;span&gt;(&lt;span&gt;...a&lt;/span&gt;) =&amp;gt; (&lt;span&gt;{&lt;br/&gt;  ...createBearSlice(&lt;span&gt;...a&lt;/span&gt;),&lt;br/&gt;  ...createFishSlice(&lt;span&gt;...a&lt;/span&gt;),&lt;br/&gt;}&lt;/span&gt;)&lt;/span&gt;)&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;我用的更多的是基于这种分形架构下的各种中间件&lt;/strong&gt;。由于这种分形架构，状态就具有了很灵活的组合性，例如将当前状态直接缓存到 localStorage。在 zustand 的架构下， 不用额外改造，直接加个 &lt;code&gt;persist&lt;/code&gt; 中间件就好。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;// 使用自带的 Persist Middleware&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; create &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;zustand&#x27;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; {  persist } &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;zustand/middleware&#x27;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;interface&lt;/span&gt; BearState {&lt;br/&gt;  bears: &lt;span&gt;number&lt;/span&gt;&lt;br/&gt;  increase: &lt;span&gt;(&lt;span&gt;by: &lt;span&gt;number&lt;/span&gt;&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; useBearStore = create&amp;lt;BearState&amp;gt;(&lt;br/&gt;  persist(&lt;span&gt;(&lt;span&gt;&lt;span&gt;set&lt;/span&gt;&lt;/span&gt;) =&amp;gt;&lt;/span&gt; ({&lt;br/&gt;    bears: &lt;span&gt;0&lt;/span&gt;,&lt;br/&gt;    increase: &lt;span&gt;(&lt;span&gt;by&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &lt;span&gt;set&lt;/span&gt;(&lt;span&gt;(&lt;span&gt;state&lt;/span&gt;) =&amp;gt;&lt;/span&gt; ({ bears: state.bears + by })),&lt;br/&gt;  }))&lt;br/&gt;)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在 ProEditor 中，我使用最多的就是 &lt;code&gt;devtools&lt;/code&gt; 这个中间件。这个中间件具有的功能就是：将这个 Store 和Redux Devtools 绑定。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;// devtools 中间件&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;// store 逻辑&lt;/span&gt;&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; vanillaStore = &lt;span&gt;(&lt;span&gt;&lt;span&gt;set&lt;/span&gt;,&lt;span&gt;get&lt;/span&gt;&lt;/span&gt;)=&amp;gt;&lt;/span&gt; ({ &lt;br/&gt;  syncOutSource: &lt;span&gt;(&lt;span&gt;nextState&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;br/&gt;    &lt;span&gt;set&lt;/span&gt;({ ...get(), ...nextState }, &lt;span&gt;false&lt;/span&gt;, &lt;span&gt;`受控更新：&lt;span&gt;${&lt;span&gt;Object&lt;/span&gt;.keys(nextState).join(&lt;span&gt;&#x27; &#x27;&lt;/span&gt;)}&lt;/span&gt;`&lt;/span&gt;);&lt;br/&gt;  },&lt;br/&gt;  syncOutSourceConfig: &lt;span&gt;(&lt;span&gt;{ config }&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;br/&gt;    &lt;span&gt;// ...&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;set&lt;/span&gt;({ ...get(), ...config }, &lt;span&gt;false&lt;/span&gt;, &lt;span&gt;`受控更新：🛠 组件配置`&lt;/span&gt;);&lt;br/&gt;    &lt;span&gt;// ...&lt;/span&gt;&lt;br/&gt;  },&lt;br/&gt;}); &lt;br/&gt;&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; createStore = create(&lt;br/&gt;  devtools(vanillaStore, { name: &lt;span&gt;&#x27;ProTableStore&#x27;&lt;/span&gt; })&lt;br/&gt;);&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然后我们就可以在 redux-devtools 中愉快地查看数据变更了：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5185964912280702&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/M7OtEw9eDKHHIlCdf8ubMWwPDdHGdhvWTQktglWxlicvianvKSf060d0Hia94thhicSLF37u14gDuicLBEUEibYc7ZzQ/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;1425&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可能有小伙伴会注意到，为什么我这边的状态变更还有中文名，那是因为 &lt;code&gt;devtools&lt;/code&gt; 中间件为 zustand 的 set 方法，提供了一个额外参数。只要设置好相应的 set 值的最后一个变量，就可以直接在 devtools 中看到相应的变更事件名称。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;正是这样强大的分形能力，我们基于社区里做的一个 zundo 中间件，在 ProEditor 中提供了一个简易的撤销重做 的 Demo示例。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6321428571428571&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/M7OtEw9eDKHHIlCdf8ubMWwPDdHGdhvWI7tZW6icH33QlBcfyJUejwWWkfNkm07vXWF5Eib4VYLLwAtM3uictKGUg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1120&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;而实现核心功能的代码就只有一行~ 😆&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/M7OtEw9eDKHHIlCdf8ubMWwPDdHGdhvWohVgnOcmakPoqrqrBsacW6Gkviayb9FKu6X4JdmHlJFcs5ZSdCibXqZA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;180&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;PS：至于一开始提到的协同能力，我在社区中也有发现中间件 zustand-middleware-yjs （不过还没尝试）。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❻ 多环境集成（ react 内外环境联动 ）&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;实际的复杂应用中，一定会存在某些不在 react 环境内的状态数据，以图表、画布、3D 场景最多。一旦要涉及到多环境下的状态管理，可以让人掉无数头发。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;而 zustand 说了，不慌，我已经考虑到了，&lt;code&gt;useStore&lt;/code&gt; 上直接可以拿值，是不是很贴心~&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;// 官方示例&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;// 1. 创建Store&lt;/span&gt;&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; useDogStore = create(&lt;span&gt;&lt;span&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; ({ paw: &lt;span&gt;true&lt;/span&gt;, snout: &lt;span&gt;true&lt;/span&gt;, fur: &lt;span&gt;true&lt;/span&gt; }))&lt;br/&gt;&lt;br/&gt;&lt;span&gt;// 2. react 环境外直接拿值&lt;/span&gt;&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; paw = useDogStore.getState().paw&lt;br/&gt;&lt;br/&gt;&lt;span&gt;// 3. 提供外部事件订阅&lt;/span&gt;&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; unsub1 = useDogStore.subscribe(&lt;span&gt;console&lt;/span&gt;.log)&lt;br/&gt;&lt;br/&gt;&lt;span&gt;// 4. react 世界外更新值&lt;/span&gt;&lt;br/&gt;useDogStore.setState({ paw: &lt;span&gt;false&lt;/span&gt; })&lt;br/&gt;&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; Component = &lt;span&gt;&lt;span&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;br/&gt;  &lt;span&gt;// 5. 在 react 环境内使用&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; paw = useDogStore(&lt;span&gt;(&lt;span&gt;state&lt;/span&gt;) =&amp;gt;&lt;/span&gt; state.paw)&lt;br/&gt;  ...&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;虽然这个场景我还没遇到，但是一想到 zustand 在这种场景下也能支持，真的是让人十分心安。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.9704545454545455&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/M7OtEw9eDKHHIlCdf8ubMWwPDdHGdhvWiakcicCnBBhQWWzacTy8RoFrpCBDibuBIzIgUYicVmmIpxibI9KQ7yPJcGA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;440&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其实还有其他不太值得单独提的点，比如 zustand 在测试上也相对比较容易做，直接用 test-library/react-hooks 即可。类型定义方面做的非常齐全……但到现在洋洋洒洒已经写了 6k 多字了，就不再展开了。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;/h2&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;总结：zustand 是当下复杂状态管理的最佳选择&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大概从去年12月份开始，我就一直在提炼符合我理想的状态管理库的需求，到看到 zustand 让我眼前一亮。而通过在 &lt;code&gt;pro-editor&lt;/code&gt; 中大半年的实践验证，我很笃定地认为，&lt;strong&gt;zustand 就是我当下状态管理的最佳选择，甚至是大部分复杂应用的状态管理的最佳选择&lt;/strong&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本来最后还想讲讲，我是怎么样基于 Zustand 来做渐进式的状态管理的（从小应用到复杂应用的渐进式生长方案）。然后还想拿 ProEditor 为例讲讲 ProEditor 具体的状态管理是如何逐步生长的，包括如何组织的受控模式、如何集成 RxJS 处理复杂交互等等，算是几个比较有意思的点。不过限于篇幅原因，这些内容估计就得留到下次了。&lt;span/&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;欢迎&lt;/span&gt;&lt;code&gt;长按图片加 ssh 为好友&lt;/code&gt;&lt;span&gt;，我会第一时间和你分享前端行业趋势，学习途径等等。2022 陪你一起度过！&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-fileid=&quot;100020070&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1.3153409090909092&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/iagNW4Zy9CyYB7lXXMibCMPY61fjkytpQrer2wkVcwzAZicenwnLibkfPZfxuWmn0bNTbicadZFXzcOvOFom7h9zeJQ/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;1056&quot;/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;关注公众号后，在首页：&lt;/p&gt;&lt;section&gt;回复&lt;code&gt;&lt;span&gt;指南&lt;/span&gt;&lt;/code&gt;，&lt;strong&gt;高级&lt;/strong&gt;&lt;strong&gt;前端、&lt;/strong&gt;&lt;strong&gt;算法&lt;/strong&gt;&lt;strong&gt;学习路线&lt;/strong&gt;，是我自己一路走来的实践。&lt;/section&gt;&lt;section&gt;回复&lt;code&gt;&lt;span&gt;简历&lt;/span&gt;&lt;/code&gt;，&lt;strong&gt;大厂&lt;/strong&gt;&lt;strong&gt;简历编写指南&lt;/strong&gt;，是我看了上百份简历后总结的心血。&lt;/section&gt;&lt;section&gt;回复&lt;code&gt;&lt;span&gt;面经&lt;/span&gt;&lt;/code&gt;，&lt;strong&gt;大厂面试题&lt;/strong&gt;，集结社区优质面经，助你攀登高峰&lt;/section&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;mp-common-profile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzI3NTM5NDgzOA==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/iagNW4Zy9CyYVSTPz12NWetu6ibLCFyv5KPSSUofUggicb8PK2wZz9uZZ2oCSTT7tOb2nPkyZ415VlxhavwDeKmCw/0?wx_fmt=png&quot; data-nickname=&quot;前端从进阶到入院&quot; data-alias=&quot;code_with_love&quot; data-signature=&quot;我是 ssh，只想用最简单的方式把原理讲明白。wx：sshsunlight，分享前端的前沿趋势和一些有趣的事情。&quot; data-from=&quot;0&quot; data-is_biz_ban=&quot;0&quot; data-weui-theme=&quot;light&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;因为微信公众号修改规则，如果不标星或点在看，你可能会收不到我公众号文章的推送，请大家将本&lt;/span&gt;&lt;span&gt;&lt;strong&gt;公众号星标&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;，看完文章后记得&lt;/span&gt;&lt;span&gt;&lt;strong&gt;点下赞&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;或者&lt;/span&gt;&lt;span&gt;&lt;strong&gt;在看&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;，谢谢各位！&lt;/span&gt;&lt;span/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>