<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>4b547f60ae6119ec23bb22066050bdf7</guid>
<title>优质网站同好者周刊（第 074 期） | 倾城博客</title>
<link>https://toutiao.io/k/wjiq1dv</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;content&quot;&gt;&lt;p&gt;&lt;a href=&quot;https://nicelinks.site/?utm_source=weekly&quot;&gt;倾城之链&lt;/a&gt;作为一个开放平台，旨在云集全球&lt;strong&gt;优秀网站&lt;/strong&gt;，探索互联网中更广阔的世界。此周刊，将汇聚过去一周&lt;a href=&quot;https://nicelinks.site/?utm_source=weekly&quot;&gt;倾城&lt;/a&gt;所收录的内容，以飨同好；欢迎推荐或自荐（仅限有独立域名的网站，可以是二级域名）。您如果要了解收录要求，请参见&lt;a href=&quot;https://nicelinks.site/about?utm_source=weekly&quot;&gt;关于倾城&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;备注&lt;/strong&gt;：本周刊&lt;strong&gt;每周五&lt;/strong&gt;生成，首发于个人微信公众号&lt;a href=&quot;https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzI5MDIwMzM2Mg==&amp;amp;action=getalbum&amp;amp;album_id=1530765143352082433&amp;amp;scene=173&amp;amp;from_msgid=2650641087&amp;amp;from_itemidx=1&amp;amp;count=3#wechat_redirect&quot;&gt;晚晴幽草轩&lt;/a&gt;、博客&lt;a href=&quot;https://www.jeffjade.com&quot;&gt;晚晴幽草轩&lt;/a&gt;，以及&lt;a href=&quot;https://forum.lovejade.cn/&quot;&gt;悠然宜想亭&lt;/a&gt;社区；此一键生成脚本基于 &lt;a href=&quot;https://nicelinks.site/post/602d30aad099ff5688618591&quot;&gt;Deno&lt;/a&gt; 编写，并在 Github 开源：&lt;a href=&quot;https://github.com/nicejade/nicelinks-weekly&quot;&gt;nicejade/nicelinks-weekly&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/%E5%8F%91%E7%8E%B0&quot;&gt;&lt;code&gt;发现&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E5%88%9B%E4%B8%9A%E8%80%85&quot;&gt;&lt;code&gt;创业者&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E7%A4%BE%E5%8C%BA&quot;&gt;&lt;code&gt;社区&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;BetaList provides an overview of upcoming internet startups. Discover and get early access to the future.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/betalist.com.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 - Discover and get early access to tomorrow&#x27;s startups | BetaList&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/redirect?url=https://betalist.com/&quot;&gt;BetaList&lt;/a&gt; ，是一个在线平台 ， 使用户能够发现、并尽早接触最新的互联网创业公司的社区。它由制造商和早期采用者（adopters）组成，是早期采用者发现即将推出，以及最近推出的互联网初创公司的地方，也是初创公司创始人与世界分享他们的初创公司，并获得早期用户反馈的地方。如果您拥有初创公司，您可以提交您的网站至 &lt;code&gt;betaList&lt;/code&gt;，当然您也可以在 BetaList 做广告，以便得到更多的曝光。&lt;/p&gt;&lt;p&gt;对于更多普通用户，您可以在 BetaList 了解当年一些创业的想法和实现，从而汲取灵感，相信无论对于您创业，或者高效工作、快乐生活，都有一定参考价值。如果您想了解更多关于 BetaList，可以参见 &lt;a href=&quot;https://nicelinks.site/redirect?url=https://betalist.com/faq&quot;&gt;BetaList FAQ&lt;/a&gt; 。&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/62d01a5f65fb1506218fa5da&quot;&gt;倾城之链 - Discover and get early access to tomorrow&#x27;s startups | BetaList&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/%E6%9C%89%E8%B6%A3&quot;&gt;&lt;code&gt;有趣&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E7%8B%AC%E7%AB%8B%E5%BC%80%E5%8F%91%E8%80%85&quot;&gt;&lt;code&gt;独立开发者&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E4%BA%A7%E5%93%81&quot;&gt;&lt;code&gt;产品&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;关键字&lt;/strong&gt;：habits, habits tracker, build habits, habit tracker, consistency, be consistent, create habit, good habit, atomic habits, garden, habits garden, procrastination&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Build habits to grow a garden. Turn your daily tasks into a game with friends. Achieving your goals has never been so easy, fast, and fun!&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/habitsgarden.com.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 - Beat procrastination with a gamified habit tracker - Habits Garden&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/redirect?url=https://habitsgarden.com/&quot;&gt;Habits Garden&lt;/a&gt; ，习惯花园，一款在线产品应用，旨在用游戏的形式，来让你养成一个习惯，从而战胜拖延症，比如读书，戒烟，学英语等等。其内在逻辑是，它利用游戏的令人上瘾的力量，来帮助您养成与朋友一起玩乐的好习惯。具体是：通过挑战任务，来完成目标，获得奖励，然后重复，从而帮助养成习惯。每天打卡获得钻石，钻石可以用来种树，进而种植一个美妙的花园。您也可以邀请好友一起来，查看他们的习惯，互相激励，争夺每周排行榜！&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://nicelinks.site/redirect?url=https://habitsgarden.com/&quot;&gt;Habits Garden&lt;/a&gt; 界面设计非常简洁好看，还有音效和动画；作者不打算提供 IOS 或 Android 应用，您可以将 Habits Garden &lt;strong&gt;添加到您的主屏幕&lt;/strong&gt;（通过&lt;code&gt;浏览器&lt;/code&gt;），它的行为就像一个原生应用程序。您可以在智能手机、平板电脑和笔记本电脑上，使用习惯追踪器。habits garden 免费可用，当免费试用期（7 天）结束后，游戏功能被锁定（花园、任务、奖励等），您的帐户被切换到 Free-Forever Habit Tracker Plan。您可以免费使用最令人满意的习惯跟踪器，继续完成您的日常习惯！值得一提的是：该产品是作者（ @marc_louvion ）独立完成，目前在巴厘岛，天天冲浪，这个产品。每月给他带来数百美元的收入。&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/62d00b7765fb1506218fa5d8&quot;&gt;倾城之链 - Beat procrastination with a gamified habit tracker - Habits Garden&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/%E7%8B%AC%E7%AB%8B%E5%BC%80%E5%8F%91%E8%80%85&quot;&gt;&lt;code&gt;独立开发者&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E5%88%86%E4%BA%AB&quot;&gt;&lt;code&gt;分享&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E5%8F%91%E7%8E%B0&quot;&gt;&lt;code&gt;发现&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;关键字&lt;/strong&gt;：独立开发者, 全栈开发, UI设计, DecoHack&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;为独立创造者提供独立见解，发现新产品，内容包含不限于新闻洞察、行业分析、产品推荐、推特精选、产品运营、产品设计、UI 设计、技术开发、生活方式等。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/www.decohack.com.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 - Decohack-独立开发者灵感周刊&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/redirect?url=https://www.decohack.com/&quot;&gt;Decohack&lt;/a&gt; ，独立开发者在线灵感周刊，旨在为独立创造者提供独立见解，发现新产品，内容包含不限于新闻洞察、行业分析、产品推荐、推特精选、产品运营、产品设计、UI 设计、技术开发、生活方式等。&lt;/p&gt;&lt;h3 id=&quot;作者为什么要做-decohack&quot;&gt;&lt;a href=&quot;#%E4%BD%9C%E8%80%85%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%81%9A-decohack&quot; aria-label=&quot;作者为什么要做 decohack permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;作者为什么要做 DecoHack？&lt;/h3&gt;&lt;p&gt;DecoHack 的定位是：帮助独立开发者发现新产品方向（国内国外），帮助有想法的人，设计制作和运营自己的互联网产品，打造持续被动收入，体现个人价值。&lt;/p&gt;&lt;p&gt;希望国内的独立互联网创造者拓展自己的能力范围：需求洞察能力，行业分析能力，产品思维，产品设计方法流程，产品运营能力，产品上架公司注册等问题。&lt;/p&gt;&lt;h3 id=&quot;decohack-会有什么内容&quot;&gt;&lt;a href=&quot;#decohack-%E4%BC%9A%E6%9C%89%E4%BB%80%E4%B9%88%E5%86%85%E5%AE%B9&quot; aria-label=&quot;decohack 会有什么内容 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;DecoHack 会有什么内容？&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;新闻洞察：收集每周相关的新闻资讯；&lt;/li&gt;&lt;li&gt;灵感推荐：每周推荐 N 款独立开发者项目，分析其功能及市场情况；&lt;/li&gt;&lt;li&gt;资源推荐：每周好资源；&lt;/li&gt;&lt;li&gt;产品分析：每周分析一款产品（APP 或者网站），包含产品日活，新增下载使用，收入，产品公司团队调研，产品开发成；本，技术难度等；&lt;/li&gt;&lt;li&gt;好文推荐：推荐独立开发者相关好文章；&lt;/li&gt;&lt;li&gt;下饭视频：如题，不限制，下饭；&lt;/li&gt;&lt;li&gt;推特精选：Twitter 上很优秀的内容；&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;关于作者&quot;&gt;&lt;a href=&quot;#%E5%85%B3%E4%BA%8E%E4%BD%9C%E8%80%85&quot; aria-label=&quot;关于作者 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;关于作者&lt;/h3&gt;&lt;p&gt;作者本职工作是一个互联网产品设计师，之前学的是软件开发专业，所以除了工作之外，一直都在做一些产品设计和开发相关的事情，再之前有创业做过很多产品，也做过产品运营和广告投放的工作。目前全职搬砖，这个订阅是其闲暇时间的产出。&lt;/p&gt;&lt;p&gt;DecoHack，会在每周一早上 9 点，通过微信及邮件推送，也会在「竹白」上发布。熟悉 RSS 订阅的朋友，也可以在 RSS 来订阅。&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/62cedc0b65fb1506218fa5d3&quot;&gt;倾城之链 - Decohack-独立开发者灵感周刊&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/%E6%9C%8D%E5%8A%A1&quot;&gt;&lt;code&gt;服务&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E5%BC%80%E6%BA%90&quot;&gt;&lt;code&gt;开源&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/Flutter&quot;&gt;&lt;code&gt;Flutter&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Appwrite provides web and mobile developers with a set of easy-to-use and integrate REST APIs to manage their core backend needs.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/appwrite.io.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 - Appwrite - Open-Source End-to-End Backend Server&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/redirect?url=https://appwrite.io/&quot;&gt;Appwrite&lt;/a&gt; 为 Web、移动和 Flutter 开发人员，提供安全的开源后端服务器，🚀又名 100% 开源 Firebase 替代品。它被打包成一组 Docker 微服务。Appwrite 抽象了从头开始构建现代后端 API 所需的复杂性和重复性，使你能够更快地构建安全的应用程序。&lt;/p&gt;&lt;p&gt;使用 appwrite，你可以轻松地将你的应用程序，与用户认证和多种登录方式、用于存储和查询用户和团队数据的数据库、存储和文件管理、图像处理、云功能以及更多服务整合在一起。它具备以下功能特征：&lt;/p&gt;&lt;h3 id=&quot;数据库&quot;&gt;&lt;a href=&quot;#%E6%95%B0%E6%8D%AE%E5%BA%93&quot; aria-label=&quot;数据库 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;数据库&lt;/h3&gt;&lt;p&gt;存储、查询和管理对应用文档的访问控制；&lt;/p&gt;&lt;h3 id=&quot;身份验证和用户&quot;&gt;&lt;a href=&quot;#%E8%BA%AB%E4%BB%BD%E9%AA%8C%E8%AF%81%E5%92%8C%E7%94%A8%E6%88%B7&quot; aria-label=&quot;身份验证和用户 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;身份验证和用户&lt;/h3&gt;&lt;p&gt;使用多种登录方法对用户进行身份验证、确认和管理；&lt;/p&gt;&lt;h3 id=&quot;贮存&quot;&gt;&lt;a href=&quot;#%E8%B4%AE%E5%AD%98&quot; aria-label=&quot;贮存 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;贮存&lt;/h3&gt;&lt;p&gt;上传、下载和预览您的应用和用户文件；&lt;/p&gt;&lt;h3 id=&quot;功能&quot;&gt;&lt;a href=&quot;#%E5%8A%9F%E8%83%BD&quot; aria-label=&quot;功能 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;功能&lt;/h3&gt;&lt;p&gt;在安全和隔离的环境中运行您的后端代码以自定义您的应用程序；&lt;/p&gt;&lt;h3 id=&quot;地理与本地化&quot;&gt;&lt;a href=&quot;#%E5%9C%B0%E7%90%86%E4%B8%8E%E6%9C%AC%E5%9C%B0%E5%8C%96&quot; aria-label=&quot;地理与本地化 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;地理与本地化&lt;/h3&gt;&lt;p&gt;检测您的用户位置、区域设置并获取与 GEO 相关的数据；&lt;/p&gt;&lt;h3 id=&quot;隐私&quot;&gt;&lt;a href=&quot;#%E9%9A%90%E7%A7%81&quot; aria-label=&quot;隐私 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;隐私&lt;/h3&gt;&lt;p&gt;拥有您的数据。在您的基础架构上轻松设置 Appwrite 自托管解决方案；&lt;/p&gt;&lt;h3 id=&quot;安全&quot;&gt;&lt;a href=&quot;#%E5%AE%89%E5%85%A8&quot; aria-label=&quot;安全 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;安全&lt;/h3&gt;&lt;p&gt;为传输中和静止的后端 API 提供端到端的安全性；&lt;/p&gt;&lt;p&gt;Appwrite，功能强大，且具备安全性和灵活性；您可以利用 Appwrite 服务加速您在任何平台上的开发。值得一提的是，Appwrite 后端服务器设计为在容器环境中运行。运行服务器就像从终端运行一个命令一样简单。您可以使用 docker-compose 在本地主机上运行 Appwrite，也可以在任何其他容器编排工具（如 &lt;a href=&quot;https://nicelinks.site/post/5b2cad0a34c03342fda0f37e&quot;&gt;Kubernetes&lt;/a&gt;、&lt;a href=&quot;https://nicelinks.site/post/5b7036890f8719053c094d68&quot;&gt;Docker&lt;/a&gt; Swarm 或 Rancher）上运行 Appwrite。此外，Appwrite 设计合理，使用简单，可快速上手，没有额外依赖，文档详细，跨平台一致性良好。如果您有兴趣了解更多，可参见：&lt;a href=&quot;https://github.com/appwrite/appwrite&quot;&gt;Appwrite Github&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/62cd24bbac177b7aff5e1a70&quot;&gt;倾城之链 - Appwrite - Open-Source End-to-End Backend Server&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/Deno&quot;&gt;&lt;code&gt;Deno&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2&quot;&gt;&lt;code&gt;个人博客&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/JavaScript&quot;&gt;&lt;code&gt;JavaScript&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Ryan&#x27;s Blog, built and deployed on Deno.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/tinyclouds.org.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 - Ryan Dahl&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/redirect?url=https://tinyclouds.org/&quot;&gt;Ryan&#x27;s Blog&lt;/a&gt; ，基于 &lt;a href=&quot;https://nicelinks.site/post/602d30aad099ff5688618591&quot;&gt;Deno&lt;/a&gt; 构建和部署， &lt;a href=&quot;https://github.com/ry/tinyclouds&quot;&gt;在 Github 开源&lt;/a&gt; ，可在不到 10 秒的时间内完成部署。Ryan Dahl，出生于 1981 年，美国的软件工程师，是 “&lt;a href=&quot;https://nicelinks.site/post/5f376ebe1751843ef894c899&quot;&gt;Node.js&lt;/a&gt;”、“&lt;a href=&quot;https://nicelinks.site/post/602d30aad099ff5688618591&quot;&gt;Deno&lt;/a&gt;” 的开发者，使得编程语言 JavaScript 可运行在非浏览器环境，为 Web 前端发展做出了巨大贡献。在 &lt;a href=&quot;https://nicelinks.site/redirect?url=https://tinyclouds.org/&quot;&gt;Ryan&#x27;s Blog&lt;/a&gt; ，您可以读到 Ryan Dahl 关于 Deno、技术、思想等内容。&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/62cc2079ac177b7aff5e1a6e&quot;&gt;倾城之链 - Ryan Dahl&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/%E6%A1%86%E6%9E%B6&quot;&gt;&lt;code&gt;框架&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/Electron&quot;&gt;&lt;code&gt;Electron&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E8%B7%A8%E5%B9%B3%E5%8F%B0&quot;&gt;&lt;code&gt;跨平台&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Tauri is a framework for building tiny, blazing fast binaries for all major desktop platforms. Developers can integrate any front-end framework that compiles to HTML, JS and CSS for building their user interface.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/tauri.app.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 - Build smaller, faster, and more secure desktop applications with a web frontend | Tauri Apps&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/redirect?url=https://tauri.app/&quot;&gt;Tauri&lt;/a&gt; 是一个框架，用于为所有主要的桌面平台构建微小、快速的二进制文件，旨在为多平台部署构建优化、安全且独立于前端的应用程序。开发人员可以整合任何可以编译成 HTML、JS 和 CSS 的前端框架，以构建他们的用户界面。应用程序的后端是一个来自 rust 的二进制文件，带有一个前端可以与之交互的 API。&lt;/p&gt;&lt;h3 id=&quot;如何开始使用&quot;&gt;&lt;a href=&quot;#%E5%A6%82%E4%BD%95%E5%BC%80%E5%A7%8B%E4%BD%BF%E7%94%A8&quot; aria-label=&quot;如何开始使用 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;如何开始使用&lt;/h3&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# npm
npm create tauri-app

# yarn
yarn create tauri-app

# pnpm
pnpm create tauri-app
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;a href=&quot;https://nicelinks.site/redirect?url=https://tauri.app/&quot;&gt;Tauri&lt;/a&gt; 具备如下功能特性：&lt;/p&gt;&lt;h3 id=&quot;兼容性良好&quot;&gt;&lt;a href=&quot;#%E5%85%BC%E5%AE%B9%E6%80%A7%E8%89%AF%E5%A5%BD&quot; aria-label=&quot;兼容性良好 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;兼容性良好&lt;/h3&gt;&lt;p&gt;与任何前端框架的兼容性意味着您不必更改堆栈。&lt;/p&gt;&lt;h3 id=&quot;安全-1&quot;&gt;&lt;a href=&quot;#%E5%AE%89%E5%85%A8-1&quot; aria-label=&quot;安全 1 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;安全&lt;/h3&gt;&lt;p&gt;Tauri 团队的首要任务是推动我们的最高优先事项和最大的创新。&lt;/p&gt;&lt;h3 id=&quot;开源&quot;&gt;&lt;a href=&quot;#%E5%BC%80%E6%BA%90&quot; aria-label=&quot;开源 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;开源&lt;/h3&gt;&lt;p&gt;由于 MIT 或 MIT/Apache 2.0 许可（如果适用），重新许可和重新分发是可能的。&lt;/p&gt;&lt;h3 id=&quot;体积小&quot;&gt;&lt;a href=&quot;#%E4%BD%93%E7%A7%AF%E5%B0%8F&quot; aria-label=&quot;体积小 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;体积小&lt;/h3&gt;&lt;p&gt;通过使用操作系统的原生网络渲染器，Tauri 应用的大小可以小于 600KB。&lt;/p&gt;&lt;h3 id=&quot;跨平台&quot;&gt;&lt;a href=&quot;#%E8%B7%A8%E5%B9%B3%E5%8F%B0&quot; aria-label=&quot;跨平台 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;跨平台&lt;/h3&gt;&lt;p&gt;捆绑所有主要桌面平台的二进制文件（移动和 WASM 即将推出）。&lt;/p&gt;&lt;h3 id=&quot;建立在-rust-之上&quot;&gt;&lt;a href=&quot;#%E5%BB%BA%E7%AB%8B%E5%9C%A8-rust-%E4%B9%8B%E4%B8%8A&quot; aria-label=&quot;建立在 rust 之上 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;建立在 Rust 之上&lt;/h3&gt;&lt;p&gt;以性能和安全为中心，Rust 是下一代应用程序的语言。&lt;/p&gt;&lt;p&gt;除此之外，&lt;code&gt;tauri&lt;/code&gt; 还具备自动更新、原生通知、数据存储、核心插件系统等。Tauri 是一个工具包，可帮助开发人员为主要桌面平台制作应用程序；几乎使用现有的任何前端框架。核心是用 Rust 构建的，CLI 利用 Node.js 使 Tauri 成为一种真正的多语言方法来创建和维护出色的应用程序。&lt;/p&gt;&lt;p&gt;在基于前端技术，而构建桌面应用工具中，&lt;a href=&quot;https://nicelinks.site/post/5b17d4a597006c5273505e1b&quot;&gt;Electron&lt;/a&gt; 无疑是其中的佼佼者；&lt;code&gt;tauri&lt;/code&gt; 则有意成为 Electron 替代品，主张使用 Web 前端构建更小、更快、更安全的桌面应用程序。对 Tauri 和 Electron 区别感兴趣的朋友，可参见 &lt;a href=&quot;https://nicelinks.site/redirect?url=https://github.com/tauri-apps/tauri#comparison-between-tauri-and-electron&quot;&gt;Tauri 和 Electron 的比较&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/62cc1748ac177b7aff5e1a6c&quot;&gt;倾城之链 - Build smaller, faster, and more secure desktop applications with a web frontend | Tauri Apps&lt;/a&gt;&lt;/p&gt;&lt;p&gt;对倾城之链感兴趣的朋友，可通过 Web，小程序，快应用等渠道进行访问(后续将支持更多，如 VsCode 插件，Chrome 扩展等)。您有任何问题，欢迎随时向我们反馈（您可以通过官网反馈渠道，或添加如下客服微信），🤲 。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://image.nicelinks.site/%E5%80%BE%E5%9F%8E%E4%B9%8B%E9%93%BE-%E5%BE%AE%E4%BF%A1-mini.jpeg&quot; alt=&quot;倾城之链 - 客服微信&quot;/&gt;&lt;/p&gt;&lt;h2 id=&quot;本期文末寄语&quot;&gt;&lt;a href=&quot;#%E6%9C%AC%E6%9C%9F%E6%96%87%E6%9C%AB%E5%AF%84%E8%AF%AD&quot; aria-label=&quot;本期文末寄语 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;本期文末寄语&lt;/h2&gt;&lt;p&gt;林断山明竹隐墙，乱蝉衰草小池塘。&lt;br/&gt;翻空白鸟时时见，照水红蕖细细香。&lt;br/&gt;村舍外，古城旁，杖藜徐步转斜阳。&lt;br/&gt;&lt;strong&gt;殷勤昨夜三更雨，又得浮生一日凉&lt;/strong&gt;。&lt;br/&gt;──宋 · 苏轼《鹧鸪天》&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://nicelinks.site/?utm_source=weekly&quot;&gt;倾城之链&lt;/a&gt;作为一个开放平台，旨在云集全球&lt;strong&gt;优秀网站&lt;/strong&gt;，探索互联网中更广阔的世界；在这里，你可以轻松发现、学习、分享更多有用或有趣的事物。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://image.nicelinks.site/nicelinks-miniprogram-code.jpeg?imageView2/1/w/250/h/250/interlace/1/ignore-error/1&quot; alt=&quot;小程序码 - 倾城之链&quot;/&gt;&lt;/p&gt;&lt;h3 id=&quot;您可能感兴趣的文章&quot;&gt;&lt;a href=&quot;#%E6%82%A8%E5%8F%AF%E8%83%BD%E6%84%9F%E5%85%B4%E8%B6%A3%E7%9A%84%E6%96%87%E7%AB%A0&quot; aria-label=&quot;您可能感兴趣的文章 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;您可能感兴趣的文章&lt;/h3&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>3e3ead946dc715cf029477c08c4c8c96</guid>
<title>字节遭遇离职潮</title>
<link>https://toutiao.io/k/84iz6z1</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                                       &quot; id=&quot;js_content&quot;&gt;
            &lt;section data-style-type=&quot;5&quot; data-tools=&quot;新媒体排版&quot; data-id=&quot;965972&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;因公众号更改推送规则，请点“在看”并加“星标”&lt;span&gt;第一时间获取精彩技术分享&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;点击关注#互联网架构师公众号，领取&lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2MTIzMzY3Mw==&amp;amp;mid=2247487508&amp;amp;idx=1&amp;amp;sn=78cf235aa9ba5f988c6922ca98f8bfd6&amp;amp;chksm=ea5cdd72dd2b54647cf55b4a73dcafa69fc7228205ad39ecc98fe57b39cdecb21c238c6d6cb6&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;架构师全套资料&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;架构师全套资料&lt;/span&gt;&lt;/a&gt;&lt;span&gt; 都在这里&lt;/span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-fileid=&quot;100029587&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/b96CibCt70iaajvl7fD4ZCicMcjhXMp1v6UibM134tIsO1j5yqHyNhh9arj090oAL7zGhRJRq6cFqFOlDZMleLl4pw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;64&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzI2MTIzMzY3Mw==&amp;amp;mid=2247487508&amp;amp;idx=1&amp;amp;sn=78cf235aa9ba5f988c6922ca98f8bfd6&amp;amp;chksm=ea5cdd72dd2b54647cf55b4a73dcafa69fc7228205ad39ecc98fe57b39cdecb21c238c6d6cb6&amp;amp;scene=21&amp;amp;token=171858062&amp;amp;lang=zh_CN#wechat_redirect&quot; textvalue=&quot;0、2T架构师学习资料干货分享&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;0、&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;2T架构师学习资料干货分&lt;/strong&gt;&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;上一篇：&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2MTIzMzY3Mw==&amp;amp;mid=2247527649&amp;amp;idx=1&amp;amp;sn=94a186f5825f71f2536454f2da1d1263&amp;amp;chksm=ea5fa187dd282891fa5020425d44c1fe70c7876f85a4f2ea5e03282ea6278fbd11e23ebf849e&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;上千万行，十几G源码，浏览器为什么这么“变态”？&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;上千万行，十几G源码，浏览器为什么这么“变态”？&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;span&gt;作者 ：Georgia Wells /Yoree Koh /Salvador Rodriguez&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;来源 ：WSJ&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-fileid=&quot;504025864&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.859375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/M0x913PTXTI76NibXEI1C7UyFWkdCxawRLMzPdmQFicdsG5yPgZW4d4dP3RDDicmE2wu4WbUkS8ynQBM4CeyYWvWg/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;64&quot;/&gt;&lt;span&gt; 和国内字节跳动的欣欣向荣对比，国外的TikTok正在面临离职潮，原因是不适应字节的“996”...&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;大家好，我是互联网架构师！&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;TikTok上似乎有无穷无尽的消遣打趣、尽情舞动以及善意的恶作剧，它也因此自称是互联网上最快乐的地方。&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;但据TikTok美国办公室的员工说，推动TikTok成功的，是严苛的管理风格和高要求的内部文化，完全背离平台愉悦鼓舞的公众形象。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;这些员工中有许多都曾供职于其他大型科技公司，他们说，TikTok一味强调效率和保密，其程度之甚，在业内并不多见。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;随着TikTok继续保持高增长，上述情况日益助推着TikTok美国办公室的紧张气氛。TikTok是总部位于北京的字节跳动科技有限公司(ByteDance Ltd.)的子公司。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;据市场研究公司Sensor Tower，截至2022年第一季度，六年前创立的TikTok已在所有类型应用程序中创下了下载量最高的纪录。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;截至2020年年中，TikTok美国业务部约有1500名员工，该公司去年表示，希望将这一数字增加至10,000人。他们的工作内容主要围绕将在中国开发的产品转化为面向美国受众的产品，同时开拓商机可观的美国广告市场。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-fileid=&quot;504025741&quot; data-ratio=&quot;0.1648148148148148&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/M0x913PTXTI76NibXEI1C7UyFWkdCxawRN2UkxJLialTlYNff7pdOVGI1Pse0IpGZMHCn80eZ0TOHRKicBEllMzPQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;从工作文化融合的角度来看，TikTok正在进行最大胆的尝试，它需要连接全球两大科技强国。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;TikTok美国业务的总部设在洛杉矶，这里的一些员工抱怨称，他们常常睡眠不足，而且周末频繁加班，必须与地球另一端的同事开会，就导致这种情况更加严重了。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;有几个该公司的美国前员工说，他们在TikTok工作期间，平均每周要开85个小时的会，而且还要挤出额外的时间来完成自己的工作。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;另一人说，他在提供了医学实验室检查结果、证明自己的身体状况危及生命后，才说服老板不再让他连续熬夜工作。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;一些前员工提到，他们经历了严重的体重波动、压力或是情绪低谷，以至于到了得寻求治疗的地步。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;一名前员工说，巨大的压力让她不敢缺席TikTok一场紧接着一场的会议，她甚至不敢中途走开去换卫生棉条，以至于血浸湿了裤子。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;TikTok的一些做法是借鉴于亚马逊(Amazon.com Inc.)，后者同样因高要求的工作文化著称。TikTok的高管时常告诉员工要“永远创业”，这来自亚马逊创始人贝佐斯(Jeff Bezos)鼓励创新、避免自满的名言“每天都是第一天”(Always Day 1)。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;除此之外，TikTok办公室的墙上还醒目地贴着其他标语，例如“坦诚清晰”，而员工对这些理念的执行情况如何，会成为公司对他们的评判标准之一。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;TikTok表示，公司致力于“建立并培养一个强大的团队，使其能够支持公司不断成长的全球社群”，为实现这一目标，它已对自身做法及工作文化进行了一些调整。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;TikTok在一份书面声明中补充说，“我们鼓励透明和反馈的文化，并致力于打造一个公平的平台和企业，让我们的社群和员工都能茁壮成长。”&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;figure itemscope=&quot;&quot; itemtype=&quot;http://schema.org/ImageObject&quot;&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.66640625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/LEAEPVW8WQkibAVhIicsichNGNZf9Btc3aW7UfEbZbJzGP1PKTprGWtxZ0YJbyu59sMX6xygUZ6QLXWzRmtDHUicmg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/section&gt;&lt;h4&gt;&lt;span&gt;TikTok的美国办公室主要位于洛杉矶。&lt;/span&gt;&lt;br/&gt;&lt;/h4&gt;&lt;/figure&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;对TikTok这样快速发展的科技企业来说，长时间的工作和紧迫的截止日期不算什么新鲜事，而外企员工睡眠周期被打乱的情况也并不少见。但一些在TikTok和其他科技企业都干过的人说，TikTok美国员工体现出的压力之大到了罕见的程度。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;一些前员工曾在YouTube、Medium等社交媒体网站上讲述他们在TikTok美国办公室的经历。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;有些人说，身处紧张氛围会让他们感到兴奋。其他许多人则提到了种种挑战，包括理解内部文件的意思，那些文件以中文撰写再用软件翻译成英文，其中的细微含义难以在译文中呈现。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;“我已经数不清TikTok的工作经历让我在多少方面得到了锻炼，无论是产品策略、执行还是不同文化间的细微差别，我从TikTok学到的东西之多，超过了我最初的想象。”&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;TikTok前高级产品经理Melody Chu在Medium的一篇贴文里说，其工作职责是帮助创作者将内容变现。尽管如此，自称曾在Facebook、Roblox和Nextdoor都工作过的Chu还是在去年11月离开了TikTok。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;她说，很多次晚饭时间她得跟中国同事通电话，没法陪丈夫，这种情况之频繁，以致于夫妻俩去找过婚姻咨询师。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;她写道，她的体重急剧下降，睡眠也出现了问题。所有她想做的事，包括陪伴父母以及关注自身心理健康，统统让位给了TikTok。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;她写道，“早知去TikTok会让我失去这么多，（2020年6月时）我肯定不会接受这份工作。”但她也说，现在回想起来，她也不后悔去TikTok，因为通过这段经历，她向自己证明了她已具备成功所需的品质。Chu没有回复记者的采访请求。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;前TikTok员工帕贝尔·马丁内斯说，他被告知不要将某些数据同较低级别的员工分享。“我得到的信号是：‘我们不信任你们。’”他说。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-fileid=&quot;504025745&quot; data-ratio=&quot;0.1648148148148148&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/M0x913PTXTI76NibXEI1C7UyFWkdCxawROBbl1ibKdY2ibEia2pYjfDrHpr3NCcPyMGVpcrtVQX1ceDaFW2dn4dayA/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;许多TikTok员工之所以能忍受长时间的工作以及工作和生活间缺乏界限的情况，是因为如果其母公司上市，他们有可能拿到一笔数量可观的钱。“你想登上那艘火箭船。”今年2月之前担任TikTok广告销售全球客户总监的帕贝尔·马丁内斯(Pabel Martinez)说。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;马丁内斯说，尽管自己的项目按进度推进，他仍被要求整个周末加班，他拒绝这样，对此，一名主管回应说：“我们这里不是这样做事的。”他随后离开了TikTok。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;大约一年前，由于中国监管机构敦促字节跳动关注数据安全问题，该公司暂时搁置了上市计划。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;据一位熟悉TikTok经营情况的人士说，该公司2021年的收入约为40亿美元，今年的营收有望达到120亿美元。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;相比之下，现更名为Meta Platforms Inc.的Facebook在成立十年后，营收才达到120亿美元。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;据前员工说，TikTok常常会安排多个团队完成同一个项目，让它们相互竞争，看谁最先完成。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;这一策略本意是为了推动员工尽快完成工作，但一些前员工指出，这让人们唯恐落后于其他同事，而当有的团队始终无法看到曙光时，员工心里容易产生挫败感。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;去年，常驻新加坡的周受资接替临时首席执行官瓦妮莎·帕帕斯(Vanessa Pappas)，出任TikTok首席执行官，后者目前担任TikTok首席运营官，工作地点位于洛杉矶。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;美国员工说，这一举动进一步巩固了TikTok在东方的权力基础。美国人凯文·梅耶尔(Kevin Mayer)曾于2020年初担任TikTok首席执行官，但大约三个月后离职，当时特朗普政府正试图迫使将TikTok出售给一家美国公司。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;TikTok既没有向员工提供组织结构图，也不允许员工自己制作和分享组织结构图。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;对于那些想阻止竞争对手挖人的中国企业来说，这是他们的常见做法。一些前员工说，他们曾被告知组织结构图没有必要，因为在TikTok的扁平式架构中，任何人之间都可以相互联系。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;如此一来，员工可能感到困惑，他们不知道该联系其他团队中的哪些人，或者给他们发信息的又是哪些人。据一些前员工说，纽约办公室人力资源和财务团队的成员几个月来一直不知道在加州，还有另一群人也从事同样的职能。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;TikTok新加坡前员工Jamie Lim Yin Yin说，当她收到同事的电子邮件时，她只有去领英(LinkedIn)上查找一番，才知道他们属于哪个团队。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;“这样说好了，在我的浏览器上，领英的标签页总是开着的。”她在一段YouTube视频中说，视频讲述了她为何会在去年12月、入职仅四个月后就离开了TikTok。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;一位TikTok发言人说，员工有途径查看彼此的档案。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;曾任TikTok广告销售客户总监的马丁内斯说，TikTok的展示文件里时常会出现数字被模糊处理或是被略掉的情况，他的主管曾指示他不要将某些数据同较低级别的员工分享。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;“我得到的信号是：‘我们不信任你们。’”他说，TikTok的保密程度与他供职过的其他科技公司有着很大不同。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;TikTok前员工Chloe Shih在一段视频中说，“当我该去睡觉的时候却发现公司大部分人都没睡，这让我晚上十分焦虑。”&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-fileid=&quot;504025744&quot; data-ratio=&quot;0.1648148148148148&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/M0x913PTXTI76NibXEI1C7UyFWkdCxawRIEcpXUMFwtjibfy27sZu5HRRyjEic0NGNGGMn1XIVabWS2WA0Nickl0kg/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;figure itemscope=&quot;&quot; itemtype=&quot;http://schema.org/ImageObject&quot;&gt;&lt;section&gt;&lt;span&gt;尽管TikTok吸引了大批一心想来此工作的求职者，但与此同时，它也在努力解决离职率较高的问题。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;曾在加州山景城(Mountain View)工作的TikTok前工程团队主管Lucas Ou-Yang在一系列Twitter主题贴中写道，由于要跟上中国同事的节奏，还要根据他们的日程表来安排工作，在这种压力下，曾与他共事的所有10位产品经理全都在入职大约一年后辞职了。&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/figure&gt;&lt;section&gt;&lt;span&gt;去年11月，工程部的一个部门主办了一场全体会议来讨论美国员工的离职潮问题，此后，公司高管批准了一项新政策：如果不是所有与会者都说中文，可以尝试用英语开会。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;尽管TikTok提供有翻译选项，但一些前员工说，当会议语言不是他们所能理解的语言时，他们觉得错过了许多细节。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;去年，中国政府告诉各用人单位，一些中国科技公司实行的“996”工作安排（即早9点到晚9点上班，一周工作六天）是不合法的。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;字节跳动表示，它会采取“1075”模式：即早10点到晚7点上班，一周工作五天。但许多员工表示，他们预计长时间工作的情况仍会持续。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;一些TikTok美国前员工谈到，为了参加与北京主管举行的网络会议，他们常常从周日下午就要开始上班，因为那时在中国已是周一上午。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;“我真的觉得，晚上工作到那么晚让我出现了睡眠紊乱。”曾在加州工作的前员工Chloe Shih在一段YouTube视频里说，“当我该去睡觉的时候却发现公司的大部分人都没睡，这让我晚上十分焦虑。”&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;一些前员工说，有关工作和生活平衡的问题在几乎每一次全体会议上都会被提及。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;figure itemscope=&quot;&quot; itemtype=&quot;http://schema.org/ImageObject&quot;&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.66640625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/LEAEPVW8WQkibAVhIicsichNGNZf9Btc3aWsmiasH0SsicOQpbvQgsk6ARYyRatS5GKXlHJnXDNqL4OocBFR37o6eOw/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/section&gt;&lt;h4&gt;&lt;span&gt;TikTok位于洛杉矶的办公室。&lt;/span&gt;&lt;/h4&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/figure&gt;&lt;section&gt;&lt;span&gt;2021年年中，一些美国主管开始鼓励员工下班后将内部通讯工具上的通知设置为静音模式，以此减少他们不得不在深夜处理的请求数量。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;有人还建议员工在日程表上为自己留出休息时间。但一些前员工说，公司高层不会在意日程表上的计划，他们还是会在那些时间安排会议。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;“尽管会议时常会跨越不同时区，这一点在跨国公司很常见，但我们会继续着眼于通过不同方式为员工提供支持和灵活性。”上述TikTok发言人说。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;她还说，TikTok鼓励员工安排个人休假时间、留出不开会的时段，并且不鼓励在休息时间发送工作信息。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;风投公司Basis Set Ventures创始人兼管理合伙人兰雪棹说，中国科技行业竞争的激烈程度比美国更极端。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;“显然没有人想干到凌晨2点，”但如果员工不干这么久，他们就没法生存，她说，“这是人们试图了解中国的文化时会遗漏的一个背景。”&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;以往，TikTok会经常将许多新招的美国员工派往北京待一周，让他们近距离感受中国的工作文化，学习字节跳动的工作方式。后来新冠疫情爆发，这些差旅也随之暂停。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;除TikTok外，字节跳动旗下还有许多应用程序及服务，包括相当于中国版TikTok的抖音。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-fileid=&quot;504025742&quot; data-ratio=&quot;0.1648148148148148&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/M0x913PTXTI76NibXEI1C7UyFWkdCxawRicXQWBux3qribh0tyLYYvmia10ZPBzcW4np9Zw8GKgSgxW4IVfB8u7aPw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;许多科技初创公司会向新员工发放限制性股票单位(RSU)，以此吸引他们接受较低的薪酬，因为公司今后一旦上市，他们就有机会获得一笔不菲的收入。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;直到2020年夏天，TikTok才开始向大部分美国员工发放RSU，这也是员工薪酬及奖金方案的内容之一。然而当它这样做时，却没有将奖励计划覆盖至大部分美国在职员工，因此造成了一些人所说的困惑与失望。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;TikTok开始允许一些员工将奖金转化为RSU，并且RSU可即刻授予。但一些前员工说，只有在连续两次绩效评估中拿到高分的员工，才能享受这一福利。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;他们说，这些评估的考核标准之一是看员工是否遵循了办公室墙上的标语，也就是“字节范”(Byte Styles)。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;但许多员工感觉，诸如“追求极致”、“务实敢为”这类说法太过模糊，主管们完全有可能仅凭个人喜好来奖励员工。其他人则说，由于担心违背“开放谦逊”这条“字节范”，员工们不敢畅所欲言。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;据前员工说，开会时，TikTok美国主管会略过员工提出的有关RSU的问题。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;据知情人士说，在2021年4月的一场员工大会上，已在TikTok品牌对外合作部工作两年多的迪伦·荣克(Dylan Juhnke)询问美国人力资源负责人，公司高层为何连续50周都在回避有关薪酬的问题。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;他说，如果TikTok不打算回应此类问题，它应该直接说出来，而不是采取回避态度。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;一份电子邮件副本显示，不久后，公司高层通过邮件斥责了荣克那天在员工大会上的行为。据一位知情人士说，人力资源部还启动了一项调查，并就TikTok是否能解雇荣克一事进行过讨论。几个月后，荣克辞职了。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;TikTok没有就有关员工具体经历的说法发表评论，包括荣克这件事。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;TikTok自称是“快乐、有趣、多元化及惊喜体验”的大本营。在荣克离职时发布的一份内部备忘录中，他说，“TikTok对待员工的方式与TikTok平台代表的东西截然相反。”&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;相关阅读：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;1、&lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2MTIzMzY3Mw==&amp;amp;mid=2247523205&amp;amp;idx=1&amp;amp;sn=89b261f829ce6c3487ce8b2ccf3ed06b&amp;amp;chksm=ea5f56e3dd28dff5238989d3e07d775d34c04a4e80a166059e92e84379274819203d72d1dc1d&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;Alibaba开源内网高并发编程手册.pdf&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;Alibaba开源内网高并发编程手册.pdf&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;2、&lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2MTIzMzY3Mw==&amp;amp;mid=2247487508&amp;amp;idx=1&amp;amp;sn=78cf235aa9ba5f988c6922ca98f8bfd6&amp;amp;chksm=ea5cdd72dd2b54647cf55b4a73dcafa69fc7228205ad39ecc98fe57b39cdecb21c238c6d6cb6&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;2T架构师学习资料干货分享&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;2T架构师学习资料干货分享&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;3、&lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2MTIzMzY3Mw==&amp;amp;mid=2247523100&amp;amp;idx=1&amp;amp;sn=82a70350577bde0bca6dd2dde811ca17&amp;amp;chksm=ea5f567add28df6cb6a780ff744c3ffdc79e498d2c2536ffb1853d8082ebfa986e1e5c43d532&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;10000+TB 资源，阿里云盘，牛逼！！&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;10000+TB 资源，阿里云盘，牛逼！！&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;p&gt;4、&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2MTIzMzY3Mw==&amp;amp;mid=2247523863&amp;amp;idx=1&amp;amp;sn=4d2a2b5da60f14f3e8947e174d485c03&amp;amp;chksm=ea5f5371dd28da6791af6cb3a164c8052f1e77d7392cbbc87c5a73ccc6916b76eab29dbc9991&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;基本涵盖了Spring所有核心知识点总结&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;基本涵盖了Spring所有核心知识点总结&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;  · END ·&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;最后，关注公众号互联网架构师，在后台回复：2T，可以获取我整理的 Java 系列面试题和答案，非常齐全&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.3640625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/9mQQWOf4KRL358RWHQSLbUws79uyGm5RJ6WZibYJMAKUQibz8aYNA5LPSmbo1boibnD3IhggQ2F7kS37xgk3WXQ8Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果这篇文章对您有所帮助，或者有所启发的话，帮忙扫描下发二维码关注一下，您的支持是我坚持写作最大的动力。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;求一键三连：点赞、转发、在看。&lt;/p&gt;&lt;/section&gt;
          &lt;/div&gt;

          

          



           
                                
                    
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>8ac2e94c684c54a33796f06a496ba3cb</guid>
<title>基于 CRON 库扩展的分布式 Crontab 的实现</title>
<link>https://toutiao.io/k/kx9h6j4</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;作者：熊喵君，原文链接：&lt;/span&gt;&lt;span&gt;https://pandaychen.github.io/2022/01/16/A-GOLANG-CRONTAB-V3-ANALYSIS/&lt;/span&gt;&lt;/h2&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;0x00 前言&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;cron&lt;/span&gt;&lt;sup&gt;[1]&lt;/sup&gt; 是一个用于管理定时任务的库（单机），基于 Golang 实现 Linux 中 crontab 的功能&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;0x01 使用&lt;/h2&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Linux 的 crontab&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;crontab 基本格式：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;# 文件格式說明&lt;/span&gt;&lt;br/&gt;&lt;span&gt;# ┌──分钟（0 - 59）&lt;/span&gt;&lt;br/&gt;&lt;span&gt;# │ ┌──小时（0 - 23）&lt;/span&gt;&lt;br/&gt;&lt;span&gt;# │ │ ┌──日（1 - 31）&lt;/span&gt;&lt;br/&gt;&lt;span&gt;# │ │ │ ┌─月（1 - 12）&lt;/span&gt;&lt;br/&gt;&lt;span&gt;# │ │ │ │ ┌─星期（0 - 6，表示从周日到周六）&lt;/span&gt;&lt;br/&gt;&lt;span&gt;# │ │ │ │ │&lt;/span&gt;&lt;br/&gt;&lt;span&gt;# * * * * * 被执行的命令&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;基础例子&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用法极丰富，V3 版本也支持标准的 &lt;code&gt;crontab&lt;/code&gt; 格式，具体用法细节可以参考 &lt;span&gt;此文&lt;/span&gt;&lt;sup&gt;[2]&lt;/sup&gt;：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;func &lt;span&gt;&lt;span&gt;main&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;    job := cron.New(&lt;br/&gt;        cron.WithSeconds(), // 添加秒级别支持，默认支持最小粒度为分钟（如需秒级精度则必须设置）&lt;br/&gt;    )&lt;br/&gt;    // 每秒钟执行一次&lt;br/&gt;    job.AddFunc(&lt;span&gt;&quot;* * * * * *&quot;&lt;/span&gt;, &lt;span&gt;&lt;span&gt;func&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;        fmt.Printf(&lt;span&gt;&quot;task run: %v\n&quot;&lt;/span&gt;, time.Now())&lt;br/&gt;    })&lt;br/&gt;    job.Run()   // 启动&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其他典型的用法还有如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;type&lt;/span&gt; cronJobDemo int&lt;br/&gt;&lt;br/&gt;func (c cronJobDemo) &lt;span&gt;&lt;span&gt;Run&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;        fmt.Println(&lt;span&gt;&quot;5s func trigger&quot;&lt;/span&gt;)&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;func &lt;span&gt;&lt;span&gt;main&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;    c := cron.New(&lt;br/&gt;            cron.WithSeconds(),&lt;br/&gt;    )&lt;br/&gt;    c.AddFunc(&lt;span&gt;&quot;0 * * * *&quot;&lt;/span&gt;, &lt;span&gt;&lt;span&gt;func&lt;/span&gt;&lt;/span&gt;() { fmt.Println(&lt;span&gt;&quot;Every hour on the half hour&quot;&lt;/span&gt;) })&lt;br/&gt;    c.AddFunc(&lt;span&gt;&quot;30 3-6,20-23 * * *&quot;&lt;/span&gt;, &lt;span&gt;&lt;span&gt;func&lt;/span&gt;&lt;/span&gt;() { fmt.Println(&lt;span&gt;&quot;.. in the range 3-6am, 8-11pm&quot;&lt;/span&gt;) })&lt;br/&gt;    c.AddFunc(&lt;span&gt;&quot;CRON_TZ=Asia/Tokyo 30 04 * * *&quot;&lt;/span&gt;, &lt;span&gt;&lt;span&gt;func&lt;/span&gt;&lt;/span&gt;() { fmt.Println(&lt;span&gt;&quot;Runs at 04:30 Tokyo time every day&quot;&lt;/span&gt;) })&lt;br/&gt;    c.AddFunc(&lt;span&gt;&quot;@every 5m&quot;&lt;/span&gt;, &lt;span&gt;&lt;span&gt;func&lt;/span&gt;&lt;/span&gt;() { fmt.Println(&lt;span&gt;&quot;every 5m, start 5m fron now&quot;&lt;/span&gt;) }) // 容易理解的格式&lt;br/&gt;    // 通过 AddJob 注册&lt;br/&gt;    var cJob cronJobDemo&lt;br/&gt;    c.AddJob(&lt;span&gt;&quot;@every 5s&quot;&lt;/span&gt;, cJob)&lt;br/&gt;    c.Start()&lt;br/&gt;    // c.Stop()&lt;br/&gt;&lt;br/&gt;    select {}&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;0x02 代码分析&lt;/h2&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;核心数据结构&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于 cron 库的整体逻辑，最关键的两个数据结构就是 &lt;code&gt;Entry&lt;/code&gt; 和 &lt;code&gt;Cron&lt;/code&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1、&lt;code&gt;Job&lt;/code&gt;：抽象一个定时任务，cron 调度一个 &lt;code&gt;Job&lt;/code&gt;，就去执行 &lt;code&gt;Job&lt;/code&gt; 的 &lt;code&gt;Run()&lt;/code&gt; 方法&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;type&lt;/span&gt; Job interface {&lt;br/&gt;    Run()&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;FuncJob&lt;/code&gt;：&lt;code&gt;FuncJob&lt;/code&gt; 实际就是一个 &lt;code&gt;func()&lt;/code&gt; 类型，实现了 &lt;code&gt;Run()&lt;/code&gt; 方法：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;type&lt;/span&gt; FuncJob func()&lt;br/&gt;func (f FuncJob) &lt;span&gt;&lt;span&gt;Run&lt;/span&gt;&lt;/span&gt;() { &lt;br/&gt;    f() &lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在实际应用中，我们需要对 &lt;code&gt;Job&lt;/code&gt; 结构做一些扩展，于是就有了 &lt;code&gt;JobWrapper&lt;/code&gt;，使用修饰器机制加工 Job（传入一个 &lt;code&gt;Job&lt;/code&gt;，返回一个 &lt;code&gt;Job&lt;/code&gt;），有点像 gin 中间件，&lt;strong&gt;包装器可以在执行实际的 Job 前后添加一些逻辑&lt;/strong&gt;，然后使用一个 &lt;code&gt;Chain&lt;/code&gt; 将这些 &lt;code&gt;JobWrapper&lt;/code&gt; 组合到一起。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如给 &lt;code&gt;Job&lt;/code&gt; 添加这样一些属性：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;在 &lt;code&gt;Job&lt;/code&gt; 回调方法中捕获 &lt;code&gt;panic&lt;/code&gt; 异常&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果 &lt;code&gt;Job&lt;/code&gt; 上次运行还未结束，推迟本次执行&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果 &lt;code&gt;Job&lt;/code&gt; 上次运行还未结束，跳过本次执行&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;记录每个 &lt;code&gt;Job&lt;/code&gt; 的执行情况&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;type&lt;/span&gt; JobWrapper func(Job) Job&lt;br/&gt;&lt;br/&gt;&lt;span&gt;type&lt;/span&gt; Chain struct {&lt;br/&gt;  wrappers []JobWrapper&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;func NewChain(c ...JobWrapper) Chain {&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; Chain{c}&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2、&lt;code&gt;Chain&lt;/code&gt; 结构&lt;code&gt;Chain&lt;/code&gt; 是 &lt;code&gt;JobWrapper&lt;/code&gt; 的数组，调用 &lt;code&gt;Chain&lt;/code&gt; 对象的 &lt;code&gt;Then(j Job)&lt;/code&gt; 方法应用这些 &lt;code&gt;JobWrapper&lt;/code&gt;，返回最终的 &lt;code&gt;Job&lt;/code&gt;：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;type&lt;/span&gt; Chain struct {&lt;br/&gt;  wrappers []JobWrapper&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;func NewChain(c ...JobWrapper) Chain {&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; Chain{c}&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;func (c Chain) Then(j Job) Job {&lt;br/&gt;  &lt;span&gt;for&lt;/span&gt; i := range c.wrappers {&lt;br/&gt;      // 注意：应用 JobWrapper 的顺序&lt;br/&gt;    j = c.wrappers[len(c.wrappers)-i-1](j &lt;span&gt;&quot;len(c.wrappers &quot;&lt;/span&gt;len(c.wrappers)-i-1&lt;span&gt;&quot;)-i-1&quot;&lt;/span&gt;)&lt;br/&gt;  }&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; j&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;3、&lt;code&gt;Schedule&lt;/code&gt;：描述一个 job 如何循环执行的抽象，需要实现&lt;code&gt;Next&lt;/code&gt;方法，此方法返回任务下次被调度的时间&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;// Schedule describes a job&lt;span&gt;&#x27;s duty cycle.&lt;br/&gt;type Schedule interface {&lt;br/&gt; // Next returns the next activation time, later than the given time.&lt;br/&gt; // Next is invoked initially, and then each time the job is run.&lt;br/&gt; Next(time.Time) time.Time&lt;br/&gt;}&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;Scheduler&lt;/code&gt; 的实例化结构有：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;ConstantDelaySchedule&lt;/code&gt;：&lt;span&gt;实现&lt;/span&gt;&lt;sup&gt;[3]&lt;/sup&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;SpecSchedule&lt;/code&gt;：&lt;span&gt;实现&lt;/span&gt;&lt;sup&gt;[4]&lt;/sup&gt;，默认选择，提供了对 Cron 表达式的解析能力&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;4、&lt;code&gt;Entry&lt;/code&gt; 结构：抽象了一个 job
每当使用 &lt;code&gt;AddJob&lt;/code&gt; 注册一个定时调用策略，就会为该策略生成唯一的 &lt;code&gt;Entry&lt;/code&gt;，&lt;code&gt;Entry&lt;/code&gt; 里会存储被执行的时间、需要被调度执行的实体 &lt;code&gt;Job&lt;/code&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;type&lt;/span&gt; Entry struct {&lt;br/&gt;    ID EntryID          // job id，可以通过该 id 来删除 job&lt;br/&gt;    Schedule Schedule   // 用于计算 job 下次的执行时间&lt;br/&gt;    Next time.Time      // job 下次执行时间&lt;br/&gt;    Prev time.Time      // job 上次执行时间，没执行过为 0&lt;br/&gt;    WrappedJob Job      // 修饰器加工过的 job&lt;br/&gt;    Job Job             // 未经修饰的 job，可以理解为 AddFunc 的第二个参数&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;5、&lt;code&gt;Cron&lt;/code&gt;&lt;span&gt;结构&lt;/span&gt;&lt;sup&gt;[5]&lt;/sup&gt;：关于 &lt;code&gt;Cron&lt;/code&gt; 结构，有一些细节，&lt;code&gt;entries&lt;/code&gt; 为何设计为一个指针 &lt;code&gt;slice&lt;/code&gt;？&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;// Cron keeps track of any number of entries, invoking the associated func as&lt;br/&gt;// specified by the schedule. It may be started, stopped, and the entries may&lt;br/&gt;// be inspected &lt;span&gt;while&lt;/span&gt; running.&lt;br/&gt;&lt;span&gt;type&lt;/span&gt; Cron struct {&lt;br/&gt;    entries   []*Entry          // 所有 Job 集合&lt;br/&gt;    chain     Chain             // 装饰器链&lt;br/&gt;    stop      chan struct{}     // 停止信号&lt;br/&gt;    add       chan *Entry       // 用于异步增加 Entry&lt;br/&gt;    remove    chan EntryID      // 用于异步删除 Entry&lt;br/&gt;    snapshot  chan chan []Entry&lt;br/&gt;    running   bool              // 是否正在运行&lt;br/&gt;    logger    Logger&lt;br/&gt;    runningMu sync.Mutex        // 运行时锁&lt;br/&gt;    location  *time.Location    // 时区相关&lt;br/&gt;    parser    Parser            // Cron 解析器&lt;br/&gt;    nextID    EntryID&lt;br/&gt;    jobWaiter sync.WaitGroup    // 并发控制，正在运行的 Job&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;entries 成员&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;刚才说到 &lt;code&gt;entries&lt;/code&gt; 为何设计为指针 &lt;code&gt;slice&lt;/code&gt;，原因在于 cron 核心逻辑中，每次循环开始时都会对 &lt;code&gt;Cron.entries&lt;/code&gt; 进行排序，排序字段依赖于每个 &lt;code&gt;Entry&lt;/code&gt; 结构的 &lt;code&gt;Next&lt;/code&gt; 成员，排序依赖于下面的原则：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;按照触发时间正向排序，越先触发的越靠前&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;IsZero&lt;/code&gt; 的任务向后面排&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;由于可能存在相同周期的任务 Job，所以排序是不稳定的&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;// byTime is a wrapper &lt;span&gt;for&lt;/span&gt; sorting the entry array by time&lt;br/&gt;// (with zero time at the end).&lt;br/&gt;&lt;span&gt;type&lt;/span&gt; byTime []*Entry&lt;br/&gt;&lt;br/&gt;func (s byTime) Len() int      { &lt;span&gt;return&lt;/span&gt; len(s) }&lt;br/&gt;func (s byTime) Swap(i, j int) { s[i], s[j] = s[j], s[i] }&lt;br/&gt;func (s byTime) Less(i, j int) bool {&lt;br/&gt; // Two zero &lt;span&gt;times&lt;/span&gt; should &lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;.&lt;br/&gt; // Otherwise, zero is &lt;span&gt;&quot;greater&quot;&lt;/span&gt; than any other time.&lt;br/&gt; // (To sort it at the end of the list.)&lt;br/&gt; &lt;span&gt;if&lt;/span&gt; s[i].Next.&lt;span&gt;&lt;span&gt;IsZero&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;&lt;br/&gt; }&lt;br/&gt; &lt;span&gt;if&lt;/span&gt; s[j].Next.&lt;span&gt;&lt;span&gt;IsZero&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;&lt;br/&gt; }&lt;br/&gt;    // 排序的原则，s[i] 比 s[j] 先触发&lt;br/&gt; &lt;span&gt;return&lt;/span&gt; s[i].Next.Before(s[j].Next)&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;0x03 内置 JobWrapper 介绍&lt;/h2&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Recover：捕捉 panic，避免进程异常退出&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;此 wrapper 比较好理解，在执行内层的 Job 逻辑前，添加 recover() 调用。如果 Job.Run() 执行过程中有 panic。这里的 recover() 会捕获到，输出调用堆栈&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;// cron.go&lt;br/&gt;func Recover(logger Logger) JobWrapper {&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; func(j Job) Job {&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; FuncJob(&lt;span&gt;&lt;span&gt;func&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;      defer &lt;span&gt;&lt;span&gt;func&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; r := recover(); r != nil {&lt;br/&gt;          const size = 64 &amp;lt;&amp;lt; 10&lt;br/&gt;          buf := make([]byte, size)&lt;br/&gt;          buf = buf[:runtime.Stack(buf, &lt;span&gt;false&lt;/span&gt;)]&lt;br/&gt;          err, ok := r.(error)&lt;br/&gt;          &lt;span&gt;if&lt;/span&gt; !ok {&lt;br/&gt;            err = fmt.Errorf(&lt;span&gt;&quot;%v&quot;&lt;/span&gt;, r)&lt;br/&gt;          }&lt;br/&gt;          logger.Error(err, &lt;span&gt;&quot;panic&quot;&lt;/span&gt;, &lt;span&gt;&quot;stack&quot;&lt;/span&gt;, &lt;span&gt;&quot;...\n&quot;&lt;/span&gt;+string(buf))&lt;br/&gt;        }&lt;br/&gt;      }()&lt;br/&gt;      j.Run()&lt;br/&gt;    })&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;DelayIfStillRunning&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;实现了已有任务运行推迟的逻辑。核心是通过一个（任务共用的）互斥锁 &lt;code&gt;sync.Mutex&lt;/code&gt;，每次执行任务前获取锁，执行结束之后释放锁。所以在上一个任务结束前，下一个任务获取锁会阻塞，从而保证的任务的串行执行。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;// chain.go&lt;br/&gt;func DelayIfStillRunning(logger Logger) JobWrapper {&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; func(j Job) Job {&lt;br/&gt;    var mu sync.Mutex&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; FuncJob(&lt;span&gt;&lt;span&gt;func&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;      start := time.Now()&lt;br/&gt;      // 下一个任务阻塞等待获取锁&lt;br/&gt;      mu.Lock()&lt;br/&gt;      defer mu.Unlock()&lt;br/&gt;      &lt;span&gt;if&lt;/span&gt; dur := time.Since(start); dur &amp;gt; time.Minute {&lt;br/&gt;        logger.Info(&lt;span&gt;&quot;delay&quot;&lt;/span&gt;, &lt;span&gt;&quot;duration&quot;&lt;/span&gt;, dur)&lt;br/&gt;      }&lt;br/&gt;      j.Run()&lt;br/&gt;    })&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;SkipIfStillRunning&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;和 &lt;code&gt;DelayIfStillRunning&lt;/code&gt; 机制不一样，该方法是跳过执行，通过无缓冲 channel 机制实现。执行任务时，从通道中取值，如果成功，执行，否则跳过。执行完成之后再向通道中发送一个值，确保下一个任务能执行。初始发送一个值到通道中，保证第一个任务的执行。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;func SkipIfStillRunning(logger Logger) JobWrapper {&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; func(j Job) Job {&lt;br/&gt;    // 定义一个无缓冲 channel&lt;br/&gt;    var ch = make(chan struct{}, 1)&lt;br/&gt;    ch &amp;lt;- struct{}{}&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; FuncJob(&lt;span&gt;&lt;span&gt;func&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;      select {&lt;br/&gt;      &lt;span&gt;case&lt;/span&gt; v := &amp;lt;-ch:&lt;br/&gt;        j.Run()&lt;br/&gt;        ch &amp;lt;- v&lt;br/&gt;      default:&lt;br/&gt;        logger.Info(&lt;span&gt;&quot;skip&quot;&lt;/span&gt;)&lt;br/&gt;      }&lt;br/&gt;    })&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;0x04 核心方法分析&lt;/h2&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;AddJob 方法&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;AddJob&lt;/code&gt; 方法通过两种方法将任务节点 entry 添加到 &lt;code&gt;Cron.entries&lt;/code&gt; 中：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;初始化时，直接 &lt;code&gt;append&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;运行状态下，通过 channel 方式异步添加，避免加锁&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;// AddJob adds a Job to the Cron to be run on the given schedule.&lt;br/&gt;// The spec is parsed using the time zone of this Cron instance as the default.&lt;br/&gt;// An opaque ID is returned that can be used to later remove it.&lt;br/&gt;func (c *Cron) AddJob(spec string, cmd Job) (EntryID, error) {&lt;br/&gt; schedule, err := c.parser.Parse(spec)&lt;br/&gt; &lt;span&gt;if&lt;/span&gt; err != nil {&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; 0, err&lt;br/&gt; }&lt;br/&gt; &lt;span&gt;return&lt;/span&gt; c.Schedule(schedule, cmd), nil&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;// Schedule adds a Job to the Cron to be run on the given schedule.&lt;br/&gt;// The job is wrapped with the configured Chain.&lt;br/&gt;func (c *Cron) Schedule(schedule Schedule, cmd Job) EntryID {&lt;br/&gt; c.runningMu.Lock()&lt;br/&gt; defer c.runningMu.Unlock()&lt;br/&gt; c.nextID++&lt;br/&gt; entry := &amp;amp;Entry{&lt;br/&gt;  ID:         c.nextID,&lt;br/&gt;  Schedule:   schedule,&lt;br/&gt;  WrappedJob: c.chain.Then(cmd),&lt;br/&gt;  Job:        cmd,&lt;br/&gt; }&lt;br/&gt; &lt;span&gt;if&lt;/span&gt; !c.running {&lt;br/&gt;        // 直接加&lt;br/&gt;  c.entries = append(c.entries, entry)&lt;br/&gt; } &lt;span&gt;else&lt;/span&gt; {&lt;br/&gt;        // 异步&lt;br/&gt;  c.add &amp;lt;- entry&lt;br/&gt; }&lt;br/&gt; &lt;span&gt;return&lt;/span&gt; entry.ID&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;run 方法&lt;span/&gt;&lt;/h4&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;run 方法&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;cron 的核心 &lt;code&gt;run()&lt;/code&gt; 方法的实现如下，这个是很经典的 &lt;code&gt;for-select&lt;/code&gt; 异步处理模型，避免的对 &lt;code&gt;entries&lt;/code&gt; 加锁，非常值得借鉴。其核心有如下几点：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;一个定时任务（集）的实现，内部采用排序数组，取数组首位元素的时间作为&lt;code&gt;timer&lt;/code&gt;触发时间（感觉可以优化为最小堆？）&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;每个 &lt;code&gt;entry&lt;/code&gt; 都包含了该 &lt;code&gt;entry&lt;/code&gt; 下一次执行的绝对时间，本轮执行完成后立即计算下一轮时间，等待下次循环时排序更新&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;每次循环开始对 &lt;code&gt;cron.entries&lt;/code&gt; 按下次执行时间升序排序，只需要对第一个 &lt;code&gt;entry&lt;/code&gt; 启动定时器即可&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;定时器事件触发时，轮询 &lt;code&gt;cron.entries&lt;/code&gt; 里需要执行的 &lt;code&gt;entries&lt;/code&gt; 直到第一个不满足条件的，由于数组是升序，后面无需再遍历&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;同时，第一个定时器处理结束开启下次定时器时，也只需要更新执行过的 &lt;code&gt;cron.entries&lt;/code&gt; 的 &lt;code&gt;Next&lt;/code&gt;（下次执行时间），不需要更新所有的 &lt;code&gt;cron.entries&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;code&gt;Cron&lt;/code&gt;内部数据结构的维护，采用&lt;code&gt;channel&lt;/code&gt;实现无锁机制，缺点是可能会有误差（ms级），不过在此项目是能够容忍的，以 &lt;code&gt;Job&lt;/code&gt;&lt;/p&gt;&lt;p&gt;异步添加为例（运行中添加&lt;code&gt;entry&lt;/code&gt;，走异步方式，有&lt;code&gt;duration&lt;/code&gt;的延迟）：&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;某个 &lt;code&gt;Job&lt;/code&gt; 之间的 &lt;code&gt;delta&lt;/code&gt; 差，可能多出了 &lt;code&gt;duration&lt;/code&gt; 的延迟，可以容忍&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;定时器实现里，会扫描所有当前时间之前的 &lt;code&gt;cron.entries&lt;/code&gt; 来执行，增加了容错&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;func (c *Cron) &lt;span&gt;&lt;span&gt;run&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;    c.logger.Info(&lt;span&gt;&quot;start&quot;&lt;/span&gt;)&lt;br/&gt;&lt;br/&gt;    // 初始化，计算每个 Job 下次的执行时间&lt;br/&gt;    now := c.now()&lt;br/&gt;    &lt;span&gt;for&lt;/span&gt; _, entry := range c.entries {&lt;br/&gt;        entry.Next = entry.Schedule.Next(now)&lt;br/&gt;        c.logger.Info(&lt;span&gt;&quot;schedule&quot;&lt;/span&gt;, &lt;span&gt;&quot;now&quot;&lt;/span&gt;, now, &lt;span&gt;&quot;entry&quot;&lt;/span&gt;, entry.ID, &lt;span&gt;&quot;next&quot;&lt;/span&gt;, entry.Next)&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    // 在 dead loop，进行任务调度&lt;br/&gt;    &lt;span&gt;for&lt;/span&gt; {&lt;br/&gt;        // 根据下一次的执行时间，对所有 Job 排序&lt;br/&gt;        sort.Sort(byTime(c.entries))&lt;br/&gt;&lt;br/&gt;        // 计时器，用于没有任务可调度时的阻塞操作&lt;br/&gt;        var timer *time.Timer&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; len(c.entries) == 0 || c.entries[0].Next.&lt;span&gt;&lt;span&gt;IsZero&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;            // 无任务可调度，设置计时器到一个很大的值，把下面的 &lt;span&gt;for&lt;/span&gt; 阻塞住&lt;br/&gt;            timer = time.NewTimer(100000 * time.Hour)&lt;br/&gt;        } &lt;span&gt;else&lt;/span&gt; {&lt;br/&gt;            // 有任务可调度了，计时器根据第一个可调度任务的下次执行时间设置&lt;br/&gt;            // 排过序，所以第一个肯定是最先被执行的&lt;br/&gt;            timer = time.NewTimer(c.entries[0].Next.Sub(now))&lt;br/&gt;        }&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;for&lt;/span&gt; {&lt;br/&gt;            select {&lt;br/&gt;            // 有 Job 到了执行时间&lt;br/&gt;            &lt;span&gt;case&lt;/span&gt; now = &amp;lt;-timer.C:&lt;br/&gt;                now = now.In(c.location)&lt;br/&gt;                c.logger.Info(&lt;span&gt;&quot;wake&quot;&lt;/span&gt;, &lt;span&gt;&quot;now&quot;&lt;/span&gt;, now)&lt;br/&gt;                // 检查所有 Job，执行到时的任务&lt;br/&gt;                &lt;span&gt;for&lt;/span&gt; _, e := range c.entries {&lt;br/&gt;                    // 可能存在相同时间出发的任务&lt;br/&gt;                    &lt;span&gt;if&lt;/span&gt; e.Next.After(now) || e.Next.&lt;span&gt;&lt;span&gt;IsZero&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;                        // 后面都不需要遍历了！&lt;br/&gt;                        &lt;span&gt;break&lt;/span&gt;&lt;br/&gt;                    }&lt;br/&gt;                    // 执行 Job 的 func()&lt;br/&gt;                    c.startJob(e.WrappedJob)&lt;br/&gt;&lt;br/&gt;                    // 保存上次执行时间&lt;br/&gt;                    e.Prev = e.Next&lt;br/&gt;                    // 设置 Job 下次的执行时间&lt;br/&gt;                    e.Next = e.Schedule.Next(now)&lt;br/&gt;                    c.logger.Info(&lt;span&gt;&quot;run&quot;&lt;/span&gt;, &lt;span&gt;&quot;now&quot;&lt;/span&gt;, now, &lt;span&gt;&quot;entry&quot;&lt;/span&gt;, e.ID, &lt;span&gt;&quot;next&quot;&lt;/span&gt;, e.Next)&lt;br/&gt;                }&lt;br/&gt;&lt;br/&gt;            // 添加新 Job&lt;br/&gt;            &lt;span&gt;case&lt;/span&gt; newEntry := &amp;lt;-c.add:&lt;br/&gt;                timer.Stop()        // 必须注意，这里停止定时器，避免内存泄漏！&lt;br/&gt;                now = c.now()&lt;br/&gt;                newEntry.Next = newEntry.Schedule.Next(now)&lt;br/&gt;                c.entries = append(c.entries, newEntry)&lt;br/&gt;                c.logger.Info(&lt;span&gt;&quot;added&quot;&lt;/span&gt;, &lt;span&gt;&quot;now&quot;&lt;/span&gt;, now, &lt;span&gt;&quot;entry&quot;&lt;/span&gt;, newEntry.ID, &lt;span&gt;&quot;next&quot;&lt;/span&gt;, newEntry.Next)&lt;br/&gt;&lt;br/&gt;            // 获取所有 Job 的快照&lt;br/&gt;            &lt;span&gt;case&lt;/span&gt; replyChan := &amp;lt;-c.snapshot:&lt;br/&gt;                replyChan &amp;lt;- c.entrySnapshot()&lt;br/&gt;                &lt;span&gt;continue&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;            // 停止调度&lt;br/&gt;            &lt;span&gt;case&lt;/span&gt; &amp;lt;-c.stop:&lt;br/&gt;                timer.Stop()&lt;br/&gt;                c.logger.Info(&lt;span&gt;&quot;stop&quot;&lt;/span&gt;)&lt;br/&gt;                &lt;span&gt;return&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;            // 根据 entryId 删除一个 Job&lt;br/&gt;            &lt;span&gt;case&lt;/span&gt; id := &amp;lt;-c.remove:&lt;br/&gt;                timer.Stop()&lt;br/&gt;                now = c.now()&lt;br/&gt;                c.removeEntry(id)&lt;br/&gt;                c.logger.Info(&lt;span&gt;&quot;removed&quot;&lt;/span&gt;, &lt;span&gt;&quot;entry&quot;&lt;/span&gt;, id)&lt;br/&gt;            }&lt;br/&gt;&lt;br/&gt;            &lt;span&gt;break&lt;/span&gt;&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上述的代码的核心流程如下图：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1.3622262773722629&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/otNtibX96l98og8X4NoK6iaMFFpttiaib0bIl4VPFCOd9QhGibllGDaYVIibBBYibsnqjZiauIH0PTZTxfRSfdibKBas7aA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1096&quot;/&gt;&lt;/p&gt;&lt;figcaption&gt;image&lt;br/&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;0x05 小结&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本文分析了基于 Golang 实现的单机定时任务库。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;0x06 参考&lt;/h2&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;golang cron v3 定时任务&lt;/span&gt;&lt;sup&gt;[6]&lt;/sup&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;v3-repo&lt;/span&gt;&lt;sup&gt;[7]&lt;/sup&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Go 每日一库之 cron&lt;/span&gt;&lt;sup&gt;[8]&lt;/sup&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;GO 编程模式：修饰器&lt;/span&gt;&lt;sup&gt;[9]&lt;/sup&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;参考资料&lt;/span&gt;&lt;/h3&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;span&gt;[1]&lt;/span&gt;&lt;p&gt;cron: &lt;em&gt;https://github.com/robfig/cron/&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[2]&lt;/span&gt;&lt;p&gt;此文: &lt;em&gt;https://segmentfault.com/a/1190000023029219&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[3]&lt;/span&gt;&lt;p&gt;实现: &lt;em&gt;https://github.com/robfig/cron/blob/v3/constantdelay.go&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[4]&lt;/span&gt;&lt;p&gt;实现: &lt;em&gt;https://pandaychen.github.io/2021/10/05/A-GOLANG-CRONTAB-V3-BASIC-INTRO/&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[5]&lt;/span&gt;&lt;p&gt;结构: &lt;em&gt;https://github.com/robfig/cron/blob/v3/cron.go#L13&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[6]&lt;/span&gt;&lt;p&gt;golang cron v3 定时任务: &lt;em&gt;https://blog.cugxuan.cn/2020/06/04/Go/golang-cron-v3/&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[7]&lt;/span&gt;&lt;p&gt;v3-repo: &lt;em&gt;https://github.com/robfig/cron/tree/v3&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[8]&lt;/span&gt;&lt;p&gt;Go 每日一库之 cron: &lt;em&gt;https://segmentfault.com/a/1190000023029219&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[9]&lt;/span&gt;&lt;p&gt;GO 编程模式：修饰器: &lt;em&gt;https://coolshell.cn/articles/17929.html&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>8fb20332c21204b4d35a1a4096b2768f</guid>
<title>[推荐] 服务端监控架构设计与实践</title>
<link>https://toutiao.io/k/xhwa9mo</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;blockquote class=&quot;js_blockquote_wrap&quot; data-type=&quot;2&quot; data-url=&quot;&quot; data-author-name=&quot;&quot; data-content-utf8-length=&quot;28&quot; data-source-title=&quot;&quot;&gt;&lt;section class=&quot;js_blockquote_digest&quot;&gt;&lt;section&gt;作者：vivo互联网服务器团队-Deng Haibo&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;一、业务背景&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;当今时代处在信息大爆发的时代，信息借助互联网的潮流在全球自由的流动，产生了各式各样的平台系统和软件系统，越来越多的业务也会导致系统的复杂性。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;当核心业务出现了问题影响用户体验，开发人员没有及时发现，发现问题时已经为时已晚，又或者当服务器的CPU持续增高，磁盘空间被打满等，需要运维人员及时发现并处理，这就需要一套有效的监控系统对其进行监控和预警。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;如何对这些业务和服务器进行监控和维护是我们开发人员和运维人员不可忽视的重要一环，这篇文章全篇大约5000多字，我将对vivo服务端监控的原理和架构演进之路做一次系统性整理，以便大家做监控技术选型时参考。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;vivo服务端监控旨在为服务端应用提供包括系统监控、JVM监控以及自定义业务指标监控在内的一站式数据监控，并配套实时、多维度、多渠道的告警服务，帮助用户及时掌握应用多方面状态，事前及时预警发现故障，事后提供详实的数据用于追查定位问题，提升服务可用性。目前vivo服务端监控累计接入业务方数量达到200+，本文介绍的是服务端监控，我司还有其他类型的优秀监控包括通用监控、调用链监控和客户端监控等。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;1.1 监控系统的基本流程&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;无论是开源的监控系统还是自研的监控系统，整体流程都大同小异。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;1）数据采集&lt;/strong&gt;：可以包括JVM监控数据如GC次数，线程数量，老年代和新生代区域大小；系统监控数据如磁盘使用使用率，磁盘读写的吞吐量，网络的出口流量和入口流量，TCP连接数；业务监控数据如错误日志，访问日志，视频播放量，PV，UV等。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;2）数据传输&lt;/strong&gt;：将采集的数据以消息形式或者 HTTP 协议的形式等上报给监控系统。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;3）数据存储&lt;/strong&gt;：有使用 MySQL、Oracle 等 RDBMS 存储的，也有使用时序数据库OpenTSDB、InfluxDB 存储的，还有使用 HBase 直接存储的。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;4）数据可视化&lt;/strong&gt;：数据指标的图形化展示，可以是折线图，柱状图，饼图等。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;5）监控告警&lt;/strong&gt;：灵活的告警设置，以及支持邮件、短信、IM 等多种通知通道。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;1.2 如何规范的使用监控系统&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;在使用监控系统之前，我们需要了解监控对象的基本工作原理，例如JVM监控，我们需要清楚JVM的内存结构组成和常见的垃圾回收机制；其次需要确定如何去描述和定义监控对象的状态，例如监控某个业务功能的接口性能，可以监控该接口的请求量，耗时情况，错误量等；在确定了如何监控对象的状态之后，需要定义合理的告警阈值和告警类型，当收到告警提醒时，帮助开发人员及时发现故障；最后建立完善的故障处理体系，收到告警时迅速响应，及时处理线上故障。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;二、vivo服务端监控系统架构及演进之路&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;在介绍vivo服务端监控系统架构之前，先带大家了解一下OpenTSDB时序数据库，在了解之前说明下为什么我们会选择OpenTSDB，原因有以下几点：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;1） 监控数据采集指标在某一时间点具有唯一值，没有复杂的结构及关系。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;2）监控数据的指标具有随着时间不断变化的特点。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;3）基于HBase分布式、可伸缩的时间序列数据库，存储层不需要过多投入精力，具有HBase的高吞吐，良好的伸缩性等特点。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;4）开源，Java实现，并且提供基于HTTP的应用程序编程接口，问题排查快可修改。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;2.1 OpenTSDB简介&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;1）基于HBase的分布式的，可伸缩的时间序列数据库，主要用途就是做监控系统。譬如收集大规模集群（包括网络设备、操作系统、应用程序）的监控数据并进行存储和查询，支持秒级数据采集，支持永久存储，可以做容量规划，并很容易地接入到现有的监控系统里，OpenTSDB的系统架构图如下：&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.6401673640167364&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4g5IMGibSxt5TX0ibD6odWcTNq4ic9zH2I2xnobx3xsmp0DabiaMibXiaK7qDoGCCp1ENT4pZhkz8JibQcuANQbg49Emw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;478&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;（来自官方文档）&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;存储结构单元为Data Point，即某个Metric在某个时间点的数值。Data Point包括以下部分：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;核心存储两张表：tsdb和tsdb-uid。表tsdb用来存储监控数据，如下图：&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;291&quot; data-backw=&quot;517&quot; data-ratio=&quot;0.562862669245648&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4g5IMGibSxt5TX0ibD6odWcTNq4ic9zH2I2uX5jPrHdt43qWrRpWxAee60D0AUpSGOdDsTUpnJS31qoaDnT6hXeeg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;517&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;（图片出处：&lt;/span&gt;&lt;span&gt;https://www.jianshu.com&lt;/span&gt;&lt;span&gt;）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;Row Key为Metric+Timestamp的小时整点+TagKey+TagValue，取相应的字节映射组合起来；列族t下的Qualifier为Timestamp的小时整点余出的秒数，对应的值即为Value。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt; 表tsdb-uid用来存储刚才提到的字节映射，如下图：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;292&quot; data-backw=&quot;530&quot; data-ratio=&quot;0.5509433962264151&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4g5IMGibSxt5TX0ibD6odWcTNq4ic9zH2I2qAR97ziaovPrDoibeTkzZ3ETUFqpY9kWjEjwAib0mlBers3cOWp0k5rIA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;530&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;（图片出处：&lt;/span&gt;&lt;span&gt;https://www.jianshu.com&lt;/span&gt;&lt;span&gt;）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;图中的“001”表示tagk=hots或者tagv=static，提供正反查询。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt; 2）OpenTSDB使用策略说明：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;2.2 OpenTSDB在实践中需要关注的点&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;1）精确性问题&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cs&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;String &lt;span class=&quot;code-snippet__keyword&quot;&gt;value&lt;/span&gt; = &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;0.51&quot;&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;float&lt;/span&gt; f = Float.parseFloat(&lt;span class=&quot;code-snippet__keyword&quot;&gt;value&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;int&lt;/span&gt; raw = Float.floatToRawIntBits(f);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;byte&lt;/span&gt;[] float_bytes = Bytes.fromInt(raw);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;int&lt;/span&gt; raw_back = Bytes.getInt(float_bytes, &lt;span class=&quot;code-snippet__number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;double&lt;/span&gt; decode = Float.intBitsToFloat(raw_back);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;System.&lt;span class=&quot;code-snippet__keyword&quot;&gt;out&lt;/span&gt;.println(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;Parsed Float: &quot;&lt;/span&gt; + f);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;System.&lt;span class=&quot;code-snippet__keyword&quot;&gt;out&lt;/span&gt;.println(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;Encode Raw: &quot;&lt;/span&gt; + raw);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;System.&lt;span class=&quot;code-snippet__keyword&quot;&gt;out&lt;/span&gt;.println(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;Encode Bytes: &quot;&lt;/span&gt; + UniqueId.uidToString(float_bytes));&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;System.&lt;span class=&quot;code-snippet__keyword&quot;&gt;out&lt;/span&gt;.println(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;Decode Raw: &quot;&lt;/span&gt; + raw_back);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;System.&lt;span class=&quot;code-snippet__keyword&quot;&gt;out&lt;/span&gt;.println(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;Decoded Float: &quot;&lt;/span&gt; + decode);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;如上代码，OpenTSDB在存储浮点型数据时，无法知悉存储意图，在转化时会遇到精确性问题，即存储&quot;0.51&quot;，取出为&quot;0.5099999904632568&quot;。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;2）聚合函数问题&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;OpenTSDB的大部分聚合函数，包括sum、avg、max、min都是LERP（linear interpolation）的插值方式，即所获取的值存在被补缺的现象，对于有空值需求的使用很不友好。详细原理参见OpenTSDB关于interpolation的文档。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;目前vmonitor服务端监控使用的OpenTSDB是我们改造后的源码，新增了nimavg函数，配合自带的zimsum函数满足空值插入需求。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;2.3 vivo服务端监控采集器原理&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.670906200317965&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4g5IMGibSxt5TX0ibD6odWcTNq4ic9zH2I2bzVFH3vskVC1tKZUX7jlxc7NUUwriaDBZgP4JKDU1OB8nryHWaOiaibpw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;629&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;1）定时器&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;内含3种采集器：OS采集器、JVM采集器和业务指标采集器，其中OS及JVM每分钟执行采集和汇聚，业务指标采集器会实时采集并在1分钟的时间点完成汇聚重置，3份采集器的数据打包上报至RabbitMQ，上报动作异步超时。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;2）业务指标采集器&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;业务指标采集方式有2种：日志输出过滤和工具类代码上报(侵入式)，日志输出过滤是通过继承log4j的Filter，从而获取指标配置中指定的Appender输出的renderedMessage，并根据指标配置的关键词、聚合方式等信息进行同步监听采集；代码上报根据代码中指定的指标code进行message信息上报，属于侵入式的采集方式，通过调用监控提供的Util实现。业务指标配置每隔5分钟会从CDN刷新，内置多种聚合器供聚合使用，包括count计数、 sum求和、average平均、max最大值和min最小值统计。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;2.4 vivo服务端监控老版本架构设计&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.9484375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4g5IMGibSxt5TX0ibD6odWcTNq4ic9zH2I2ksJjSLjN7LrhmVwaGdE1CWZNepoxfV2doZhMu67QsTeP1Gq2gC5kicg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;640&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;1）数据采集及上报&lt;/strong&gt;：需求方应用接入的监控采集器vmonitor-agent根据监控指标配置采集相应数据，每分钟上报1次数据至RabbitMQ，所采用的指标配置每5分钟从CDN下载更新，CDN内容由监控后台上传。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;2）计算及存储&lt;/strong&gt;：监控后台接收RabbitMQ的数据，拆解后存储至OpenTSDB，供可视化图表调用，监控项目、应用、指标和告警等配置存储于MySQL；通过Zookeeper和Redis实现分布式任务分发模块，实现多台监控服务协调配合运作，供分布式计算使用。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;3）告警检测&lt;/strong&gt;：从OpenTSDB获取监控指标数据，根据告警配置检测异常，并将异常通过第三方依赖自研消息、短信发送，告警检测通过分布式任务分发模块完成分布式计算。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;2.5 vivo服务端监控老版本部署架构&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;1）自建机房A&lt;/strong&gt;：部署架构以国内为例，监控工程部署在自建机房A，监听本机房的RabbitMQ消息，依赖的Redis、OpenTSDB、MySQL、Zookeeper等均在同机房，需要上传的监控指标配置由文件服务上传至CDN，供监控需求应用设备调用。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;2）云机房&lt;/strong&gt;：云机房的监控需求应用设备将监控数据上报至云机房本地的RabbitMQ，云机房的RabbitMQ将指定队列通过路由的方式转发至自建机房A的RabbitMQ，云机房的监控配置通过CDN拉取。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;2.6 vivo服务端监控新版本架构设计&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.6959876543209876&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4g5IMGibSxt5TX0ibD6odWcTNq4ic9zH2I2mwk22Mt3nO0dprIgonou1mBzOhFUU2lMh2TboMNqH3q42qf8nfKtNQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;648&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;1）采集（接入方）&lt;/strong&gt;：业务方接入vmonitor-collector，并在相应环境的监控后台配置相关监控项即完成接入，vmonitor- collector将定时拉取监控项配置，采集服务数据并每分钟上报。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;2）数据聚合&lt;/strong&gt;：老版本支持的是RabbitMQ将采集到的数据，路由至监控机房的RabbitMQ（同机房则不发生该行为），由监控后台服务消费；CDN负责承载各应用的配置供应用定时拉取。新版本vmonitor-gateway作为监控数据网关，采用http方式上报监控数据以及拉取指标配置，抛弃了之前使用的RabbitMQ上报以及CDN同步配置的途径，避免两者故障时对监控上报的影响。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;3）可视化并且支持告警与配置&lt;/strong&gt;（监控后台vmonitor）：负责前台的数据多元化展示（包括业务指标数据，分机房汇总数据，单台服务器数据，以及业务指标复合运算呈现），数据聚合，告警（目前包括短信及自研消息）等。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;4）数据存储&lt;/strong&gt;：存储使用HBASE集群和开源的OpenTSDB作为聚合的中介，原始数据上报之后通过OpenTSDB持久化到HBase集群，Redis作为分布式数据存储调度任务分配、告警状态等信息，后台涉及的指标和告警配置存储于MySQL。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;三、监控采集上报和存储监控数据策略&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;为降低监控接入成本以及避免RabbitMQ上报故障和CDN同步配置故障对监控体系带来的影响，将由采集层通过HTTP直接上报至代理层，并通过采集层和数据代理层的队列实现灾时数据最大程度的挽救。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.9052287581699346&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4g5IMGibSxt5TX0ibD6odWcTNq4ic9zH2I2Y8thqGIQ3OsS52sXoOWDvJeNgewlIiby6cqJ4G33PiczVJnh8QecSyDg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;612&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;详细流程说明如下：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;1）采集器&lt;/strong&gt;（vmonitor-collector）根据监控配置每分钟采集数据并压缩，存储于本地队列（最大长度100，即最大存储100分钟数据），通知可进行HTTP上报，将数据上报至网关。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;2）网关&lt;/strong&gt;（vmonitor-gateway）接收到上报的数据后鉴权，认定非法即丢弃；同时判断当前是否下层异常熔断，如果发生则通知采集层重置数据退回队列。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt; 3）网关校验&lt;/strong&gt;上报时带来的监控配置版本号，过期则在结果返回时将最新监控配置一并返回要求采集层更新配置。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;4）网关将上报的数据存储于该应用对应的Redis队列中（单个应用缓存队列key最大长度1w）；存储队列完成后立即返回HTTP上报，表明网关已接受到数据，采集层可移除该条数据。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;5）网关对Redis队列数据进行解压以及数据聚合；如果熔断器异常则暂停前一行为；完成后通过HTTP存储至OpenTSDB；如果存储行为大量异常则触发熔断器。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;四、核心指标&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;4.1 系统监控告警和业务监控告警&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;将采集到的数据通过OpenTSDB存放到HBase中后，通过分布式任务分发模块完成分布式计算。如果符合业务方配置的告警规则，则触发相应的告警，对告警信息进行分组并且路由到正确的通知方。可以通过短信自研消息进行告警发送，可通过名字、工号、拼音查询录入需要接收告警的人员，当接收到大量重复告警时能够消除重复的告警信息，所有的告警信息可以通过MySQL表进行记录方便后续查询和统计，告警的目的不仅仅是帮助开发人员及时发现故障建立故障应急机制，同时也可以结合业务特点的监控项和告警梳理服务，借鉴行业最佳监控实践。告警流程图如下：&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;1.164179104477612&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4g5IMGibSxt5TX0ibD6odWcTNq4ic9zH2I2Q9aB26AG1WRFuZRtCf5H6VAhwLBUdng4DM1G5gDAKKG5L4LFwQSHtg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;536&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;4.2 支持的告警类型以及计算公式&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;1）最大值&lt;/strong&gt;：当指定字段超过该值时触发报警（报警阈值单位：number）。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;2）最小值&lt;/strong&gt;：当指定字段低于该值时触发报警（报警阈值单位：number）。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;3）波动量&lt;/strong&gt;：取当前时间到前15分钟这段时间内的最大值或者最小值与这15分钟内的平均值做浮动百分比报警，波动量需要配置波动基线，标识超过该基线数值时才做“报警阀值”判定，低于该基线数值则不触发报警（报警阈值单位：percent）。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;计算公式&lt;/strong&gt;： &lt;/p&gt;&lt;blockquote class=&quot;js_blockquote_wrap&quot; data-type=&quot;2&quot; data-url=&quot;&quot; data-author-name=&quot;&quot; data-content-utf8-length=&quot;180&quot; data-source-title=&quot;&quot;&gt;&lt;section class=&quot;js_blockquote_digest&quot;&gt;&lt;section&gt;&lt;p&gt;波动量-向上波动计算公式：float rate = (float) (max - avg) / (float) avg;&lt;/p&gt;&lt;p&gt;波动量-向下波动计算公式：float rate = (float) (avg - min) / (float) avg;&lt;/p&gt;&lt;p&gt;波动量-区间波动计算公式：float rate = (float) (max - min) / (float) max;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;4）日环比&lt;/strong&gt;：取当前时间与昨天同一时刻的值做浮动百分比报警（报警阈值单位：percent）。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;计算公式：float rate = （当前值 - 上一周期值）/上一周期值&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;5）周环比&lt;/strong&gt;：取当前时间与上周同一天的同一时刻的值做浮动百分比报警（报警阈值单位：percent）。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;计算公式：float rate = （当前值 - 上一周期值）/上一周期值&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;6）小时日环比&lt;/strong&gt;：取当前时间到前一小时内的数据值总和与昨天同一时刻的前一小时内的数据值总和做浮动百分比报警（报警阈值单位：percent）。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;计算公式：float rate = (float) (anHourTodaySum - anHourYesterdaySum) / (float) anHourYesterdaySum。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;五、演示效果&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;5.1 业务指标数据查询&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;1）查询条件栏“指标”可选择指定指标。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;2）双击图表上指标名称可展示大图，底部是根据起始时间的指标域合计值。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;3）滚轮可以缩放图表。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;284&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.4913294797687861&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/4g5IMGibSxt5TX0ibD6odWcTNq4ic9zH2I2xdSySPfcPIPhCiaiapNDrNkwkOFOhKAs82MfiaTuMea1szz5T3Ua1heUA/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;1557&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;5.2 系统监控&amp;amp;JVM监控指标数据查询&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;1）每分钟页面自动刷新。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;2）如果某行，即某台机器整行显示红色，则代表该机器已逾半小时未上报数据，如机器是非正常下线就要注意排查了。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;3）点击详情按钮，可以对系统&amp;amp;JVM监控数据进行明细查询。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;345&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.59765625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/4g5IMGibSxt5TX0ibD6odWcTNq4ic9zH2I2a73Izviar15dla3eU9mbyK0extiaicic5SHcDszTKTAZIiao0Cgvzkic2ZnA/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;5.3 业务指标配置&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt; 单个监控指标(普通)可以针对单个指定Appender的日志文件进行数据采集。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;【必填】【指标类型】为“普通”、“复合”两种，复合是将多个普通指标二次聚合，所以正常情况下需要先新增普通指标。&lt;/p&gt;&lt;p&gt;【必填】【图表顺序】正序排列，控制指标图表在数据页面上的展示顺序。&lt;/p&gt;&lt;p&gt;【必填】【指标代码】默认自动生成UUID短码。&lt;/p&gt;&lt;p&gt;【可选】【Appender】为log4j日志文件的appender名称，要求该appender必须被logger的ref引用；如果使用侵入式采集数据则无需指定。&lt;/p&gt;&lt;p&gt;【可选】【关键字】为过滤日志文件行的关键词。&lt;/p&gt;&lt;p&gt;【可选】【分隔符】是指单行日志列分割的符号，一般为&quot;,&quot;英文逗号或其它符号。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;295&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.5100430416068866&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/4g5IMGibSxt5W1AmZ2hW8H1NbJxJEbCnvOnoxhHLXHianEhK7vUtLnx2AEIChuTiaWlvkkbzWibFtVYic2oESKIKhGA/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;1394&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;六、主流监控对比&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;6.1 Zabbix&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;Zabbix 于 1998 年诞生，核心组件采用 C 语言开发，Web 端采用 PHP 开发，它属于老牌监控系统中的优秀代表，能够监控网络参数，服务器健康和软件完整性，使用也很广泛。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Zabbix采用MySQL 进行数据存储，所有没有OpenTSDB支持 Tag的特性，因此没法按多维度进行聚合统计和告警配置，使用起来不灵活。Zabbix 没有提供对应的 SDK，应用层监控支持有限，也没有我们自研的监控提供了侵入式的埋点和采集功能。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;总体而言Zabbix 的成熟度更高，高集成度导致灵活性较差，在监控复杂度增加后，定制难度会升高，而且使用的MySQL关系型数据库，对于大规模的监控数据插入和查询是个问题。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;288&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.49760765550239233&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4g5IMGibSxt5TX0ibD6odWcTNq4ic9zH2I2xJMpslHaNzZQQUFqTIB3hgWU5W7UxsxOXq1w7vjz5PKMD4jS0zdpjA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;627&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;6.2 Open-Falcon&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;OpenFalcon 是一款企业级、高可用、可扩展的开源监控解决方案，提供实时报警、数据监控等功能，采用 Go 和 Python 语言开发，由小米公司开源。使用 Falcon 可以非常容易的监控整个服务器的状态，比如磁盘空间，端口存活，网络流量等等。基于 Proxy-gateway，很容易通过自主埋点实现应用层的监控（比如监控接口的访问量和耗时）和其他个性化监控需求，集成方便。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;339&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.5857805255023184&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4g5IMGibSxt5TX0ibD6odWcTNq4ic9zH2I2ntKb9cibxayI3L7lcRAk2HiaJv54Q6o8edlic2gXt2CA5cHQrBkAFKVaw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;647&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;官方的架构图如下：&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;384&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.6635658914728683&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4g5IMGibSxt5TX0ibD6odWcTNq4ic9zH2I2ZGZf6RIEHIAhic5YsBwg6LR8ice73TcQALcSiaHGcRO7EIW495zsewJ8Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;645&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;6.3 Prometheus（普罗米修斯）&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;Prometheus是由SoundCloud开发的开源监控报警系统和时序列数据库(TSDB)，Prometheus使用Go语言开发，是Google BorgMon监控系统的开源版本。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;和小米的Open-Falcon一样，借鉴 OpenTSDB，数据模型中引入了 Tag，这样能支持多维度的聚合统计以及告警规则设置，大大提高了使用效率。监控数据直接存储在 Prometheus Server 本地的时序数据库中，单个实例可以处理数百万的 Metrics，架构简单，不依赖外部存储，单个服务器节点可直接工作。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;482&quot; data-backw=&quot;578&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;578&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;384&quot; data-ratio=&quot;0.8333333333333334&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4g5IMGibSxt5TX0ibD6odWcTNq4ic9zH2I2O8ygDKEZ2dMZ2cZbrEfjcJg8GOHuKuTgWXWHx5D0BByichjKCezcUpw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;630&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;官方的架构图如下：&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.6&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4g5IMGibSxt5TX0ibD6odWcTNq4ic9zH2I29Q34qB2cvJKicoBbJTdI7tBgnm4gV3roiabn4L4wTkT4ibr4Lvo50uwhw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;630&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;6.4 vivo服务端监控vmonitor&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;vmonitor作为监控后台管理系统，可以进行可视化查看，告警的配置，业务指标的配置等，具备JVM监控、系统监控和业务监控的功能。通过采集层（vmonitor-collector采集器）和数据代理层（vmonitor-gateway网关）的队列实现灾时数据最大程度的挽救。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;提供了SDK方便业务方集成，支持日志输出过滤和侵入式代码上报数据等应用层监控统计，基于OpenTSDB时序开源数据库，对其源码进行了改造，新增了nimavg函数，配合自带的zimsum函数满足空值插入需求，具有强大的数据聚合能力，可以提供实时、多维度、多渠道的告警服务。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;261&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.4514637904468413&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4g5IMGibSxt5TX0ibD6odWcTNq4ic9zH2I2Xs68KiafYF87d5Kzh2p2hWPfhaYq34WUJMBiaTbuEJ8W6gLOxDreU4qw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;649&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;七、总结&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;676&quot; data-backw=&quot;578&quot; data-ratio=&quot;1.1690140845070423&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4g5IMGibSxt5TX0ibD6odWcTNq4ic9zH2I2ib1F9eR2UuP9M40SDs5mph7JUBhW1jgeRdT0sAS1OwaicxokFsxW3veQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;781&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;本文主要介绍了vivo服务端监控架构的设计与演进之路，是基于java技术栈做的一套实时监控系统，同时也简单列举了行业内主流的几种类型的监控系统，希望有助于大家对监控系统的认识，以及在技术选型时做出更合适的选择。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;监控体系里面涉及到的面很广，是一个庞大复杂的体系，本文只是介绍了服务端监控里的JVM监控，系统监控以及业务监控（包含日志监控和工具类代码侵入式上报），未涉及到客户端监控和全链路监控等，如果想理解透彻，必须理论结合实践再做深入。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;pre&gt;&lt;section data-recommend-type=&quot;list-normal&quot; data-recommend-tid=&quot;2&quot; data-mpa-template=&quot;t&quot; data-mid=&quot;&quot; data-from=&quot;yb-recommend&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-normal&quot; data-recomment-template-id=&quot;2&quot; data-recommend-article-id=&quot;2247501257_1&quot; data-recommend-article-time=&quot;1636251616&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/zc3KLDBfJlm8bD2WBlwbvnsktMdtfSudNaJWbHr1Iyr6HkwCxETHiaiceaWYLmq7tWmHV29U8Xv8UnoeCAOYNj9Q/0?wx_fmt=jpeg&amp;amp;amp;random=0.27521905775014543&quot; data-recommend-article-title=&quot;强势开源一款小程序！&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501257&amp;amp;idx=1&amp;amp;sn=7b4e27cdb1d3146a5e7e1951b5bdc9e8&amp;amp;chksm=c1ca33f9f6bdbaefd3874fa6313e422c8fb6b2799b40d09f36620f0ceaed4fd63c820da1f3ff#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501257&amp;amp;idx=1&amp;amp;sn=7b4e27cdb1d3146a5e7e1951b5bdc9e8&amp;amp;chksm=c1ca33f9f6bdbaefd3874fa6313e422c8fb6b2799b40d09f36620f0ceaed4fd63c820da1f3ff&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;&lt;section data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;强势开源一款小程序！&lt;/p&gt;&lt;p data-recommend-date=&quot;t&quot; data-mid=&quot;&quot;&gt;2021-11-07&lt;/p&gt;&lt;/section&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.42592592592592593&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/zc3KLDBfJlm8bD2WBlwbvnsktMdtfSudNaJWbHr1Iyr6HkwCxETHiaiceaWYLmq7tWmHV29U8Xv8UnoeCAOYNj9Q/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-normal&quot; data-recomment-template-id=&quot;2&quot; data-recommend-article-id=&quot;2247501242_1&quot; data-recommend-article-time=&quot;1634952613&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7UWibGeSzVdcKHzDRdVHusb9CJicA5FdhDVPAiaicdTbibx5XoRkhKA3O7Q727cTSurBkJpciczjLrF2wkA/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;强力推荐一个完善的物流（WMS）管理项目（附代码）&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501242&amp;amp;idx=1&amp;amp;sn=aa2297b69874de0993f62ea404376bab&amp;amp;chksm=c1ca338af6bdba9cf3e051ff3001e1f31f9fa97350f3851c797d6486eca360df537196dbe67b#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501242&amp;amp;idx=1&amp;amp;sn=aa2297b69874de0993f62ea404376bab&amp;amp;chksm=c1ca338af6bdba9cf3e051ff3001e1f31f9fa97350f3851c797d6486eca360df537196dbe67b&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;&lt;section data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;强力推荐一个完善的物流（WMS）管理项目（附代码）&lt;/p&gt;&lt;p data-recommend-date=&quot;t&quot; data-mid=&quot;&quot;&gt;2021-10-23&lt;/p&gt;&lt;/section&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.425&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7UWibGeSzVdcKHzDRdVHusb9CJicA5FdhDVPAiaicdTbibx5XoRkhKA3O7Q727cTSurBkJpciczjLrF2wkA/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-normal&quot; data-recomment-template-id=&quot;2&quot; data-recommend-article-id=&quot;2247501238_1&quot; data-recommend-article-time=&quot;1634606700&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7VduLA9tc9dQkaw5HWIV6pqNrOiciaE17jeIeTtoLfgLbyu67dWkRj3tjKX7AFIMrV0rKD5ic6kwicyxg/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;推荐一个 Spring Boot + MyBatis + Vue 音乐网站&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501238&amp;amp;idx=1&amp;amp;sn=d7e873d752a28b582d70bc9f7a981ddb&amp;amp;chksm=c1ca3386f6bdba9031ce115e734ce04c9b6728e8e027fbcf17d8d07f1e029ea5bea04f4a6273#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501238&amp;amp;idx=1&amp;amp;sn=d7e873d752a28b582d70bc9f7a981ddb&amp;amp;chksm=c1ca3386f6bdba9031ce115e734ce04c9b6728e8e027fbcf17d8d07f1e029ea5bea04f4a6273&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;&lt;section data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;推荐一个 Spring Boot + MyBatis + Vue 音乐网站&lt;/p&gt;&lt;p data-recommend-date=&quot;t&quot; data-mid=&quot;&quot;&gt;2021-10-19&lt;/p&gt;&lt;/section&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.42592592592592593&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7VduLA9tc9dQkaw5HWIV6pqNrOiciaE17jeIeTtoLfgLbyu67dWkRj3tjKX7AFIMrV0rKD5ic6kwicyxg/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-normal&quot; data-recomment-template-id=&quot;2&quot; data-recommend-article-id=&quot;2247501208_1&quot; data-recommend-article-time=&quot;1632101100&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7VibcP3PNgQvXGZ7UJkVeu0JZsrldvF1urHlmNwhUP89IeKHz1PfJ12es2ArTwkYibAh3Y0soOib2rjA/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;分享一套家庭理财系统（附源码）&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501208&amp;amp;idx=1&amp;amp;sn=44fcdfe2d7f81a26845faf33750ea9bb&amp;amp;chksm=c1ca33a8f6bdbabec8ff34719f438465adf745cbef30bfb92be53897c714d8c13bdd01989d17#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501208&amp;amp;idx=1&amp;amp;sn=44fcdfe2d7f81a26845faf33750ea9bb&amp;amp;chksm=c1ca33a8f6bdbabec8ff34719f438465adf745cbef30bfb92be53897c714d8c13bdd01989d17&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;&lt;section data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;分享一套家庭理财系统（附源码）&lt;/p&gt;&lt;p data-recommend-date=&quot;t&quot; data-mid=&quot;&quot;&gt;2021-09-20&lt;/p&gt;&lt;/section&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.42407407407407405&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7VibcP3PNgQvXGZ7UJkVeu0JZsrldvF1urHlmNwhUP89IeKHz1PfJ12es2ArTwkYibAh3Y0soOib2rjA/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-normal&quot; data-recomment-template-id=&quot;2&quot; data-recommend-article-id=&quot;2247501192_1&quot; data-recommend-article-time=&quot;1630718700&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7UG0pYPldneUCCVsPia3Rtr9j3hlFHakhItFlOXuwLicUqQvP1PhkTM28CUU9BpRCWfWPfHYredCBiaA/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;推荐一个互联网企业级别的开源支付系统&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501192&amp;amp;idx=1&amp;amp;sn=444404a565f02a8c532d291d99678a7b&amp;amp;chksm=c1ca33b8f6bdbaaeb7c65d9f6f0c399f609fb203f065b6e88a3ad5431473713dbb5ae3507b32#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501192&amp;amp;idx=1&amp;amp;sn=444404a565f02a8c532d291d99678a7b&amp;amp;chksm=c1ca33b8f6bdbaaeb7c65d9f6f0c399f609fb203f065b6e88a3ad5431473713dbb5ae3507b32&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;&lt;section data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;推荐一个互联网企业级别的开源支付系统&lt;/p&gt;&lt;p data-recommend-date=&quot;t&quot; data-mid=&quot;&quot;&gt;2021-09-04&lt;/p&gt;&lt;/section&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.425&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7UG0pYPldneUCCVsPia3Rtr9j3hlFHakhItFlOXuwLicUqQvP1PhkTM28CUU9BpRCWfWPfHYredCBiaA/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-normal&quot; data-recomment-template-id=&quot;2&quot; data-recommend-article-id=&quot;2247501176_1&quot; data-recommend-article-time=&quot;1629509100&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7VQRwetNLhDOB2Ej0fDZK4eRXsYlRNicgmsWwmuvlhibooic3N3su1lbMQPqWD186JiaOC5yJ9iaaic8bzw/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;推荐一套开源通用后台管理系统（附源码）&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501176&amp;amp;idx=1&amp;amp;sn=68e3ae7a9dc33fbbd379906ddcefdf5b&amp;amp;chksm=c1ca3348f6bdba5e1774625745f5ef40081c9b8eb0189073734b6808efb872720781d25b8dc0#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501176&amp;amp;idx=1&amp;amp;sn=68e3ae7a9dc33fbbd379906ddcefdf5b&amp;amp;chksm=c1ca3348f6bdba5e1774625745f5ef40081c9b8eb0189073734b6808efb872720781d25b8dc0&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;&lt;section data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;推荐一套开源通用后台管理系统（附源码）&lt;/p&gt;&lt;p data-recommend-date=&quot;t&quot; data-mid=&quot;&quot;&gt;2021-08-21&lt;/p&gt;&lt;/section&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4265625&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7VQRwetNLhDOB2Ej0fDZK4eRXsYlRNicgmsWwmuvlhibooic3N3su1lbMQPqWD186JiaOC5yJ9iaaic8bzw/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-normal&quot; data-recomment-template-id=&quot;2&quot; data-recommend-article-id=&quot;2247501153_1&quot; data-recommend-article-time=&quot;1627704022&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7UbyFoOMqOObokEYiahCar20LiaY8ZLGKzU7NYQQoGycgnhrmIzNJibPicGcNia3cbbXlYib6bcLJVV5aww/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;一款神仙接私活儿软件，吊到不行！&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501153&amp;amp;idx=1&amp;amp;sn=bb29cffa56431b72a92709c0ae993af7&amp;amp;chksm=c1ca3351f6bdba4729c671cdcd0ee8b6af75c6ce8a7003e6c032942b849aab5bfedecd0f9d3b#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501153&amp;amp;idx=1&amp;amp;sn=bb29cffa56431b72a92709c0ae993af7&amp;amp;chksm=c1ca3351f6bdba4729c671cdcd0ee8b6af75c6ce8a7003e6c032942b849aab5bfedecd0f9d3b&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;&lt;section data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;一款神仙接私活儿软件，吊到不行！&lt;/p&gt;&lt;p data-recommend-date=&quot;t&quot; data-mid=&quot;&quot;&gt;2021-07-31&lt;/p&gt;&lt;/section&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4265625&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7UbyFoOMqOObokEYiahCar20LiaY8ZLGKzU7NYQQoGycgnhrmIzNJibPicGcNia3cbbXlYib6bcLJVV5aww/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-normal&quot; data-recomment-template-id=&quot;2&quot; data-recommend-article-id=&quot;2247501139_1&quot; data-recommend-article-time=&quot;1626571500&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7VGxZrbRFy96Sm9cXQzVEhiaLibUUYhYH1SJL4HUXenau3DCeq0KEOsguY4CWjaEd1BeAicJd24qFM2w/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;基于 SpringBoot 的仿豆瓣平台【源码分享】&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501139&amp;amp;idx=1&amp;amp;sn=f133e70bda8abae27459ccc4d3d6d8fd&amp;amp;chksm=c1ca3363f6bdba75b9a4145510d9b6108c56146a3146b2e2e6d660a08221618b01c815d55642#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501139&amp;amp;idx=1&amp;amp;sn=f133e70bda8abae27459ccc4d3d6d8fd&amp;amp;chksm=c1ca3363f6bdba75b9a4145510d9b6108c56146a3146b2e2e6d660a08221618b01c815d55642&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;&lt;section data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;基于 SpringBoot 的仿豆瓣平台【源码分享】&lt;/p&gt;&lt;p data-recommend-date=&quot;t&quot; data-mid=&quot;&quot;&gt;2021-07-18&lt;/p&gt;&lt;/section&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.42427884615384615&quot; data-type=&quot;jpeg&quot; data-w=&quot;832&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7VGxZrbRFy96Sm9cXQzVEhiaLibUUYhYH1SJL4HUXenau3DCeq0KEOsguY4CWjaEd1BeAicJd24qFM2w/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-normal&quot; data-recomment-template-id=&quot;2&quot; data-recommend-article-id=&quot;2247501105_1&quot; data-recommend-article-time=&quot;1623979500&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7Xw68Ow8vZian4lanQFAu09f4JOZlXbC85jsByb8V6StkOpibAdgPamPWoPPY3G7S3nic50QvxxuGNrg/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;干掉 Wordpress！这个开源建站神器有点吊！&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501105&amp;amp;idx=1&amp;amp;sn=caf01186b6d2e4a38e940ce07d822238&amp;amp;chksm=c1ca3301f6bdba17ba7127da24e28963ae40f944e587f14b57405e2a9ee9d8cdbcb835c880c8#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501105&amp;amp;idx=1&amp;amp;sn=caf01186b6d2e4a38e940ce07d822238&amp;amp;chksm=c1ca3301f6bdba17ba7127da24e28963ae40f944e587f14b57405e2a9ee9d8cdbcb835c880c8&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;&lt;section data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;干掉 Wordpress！这个开源建站神器有点吊！&lt;/p&gt;&lt;p data-recommend-date=&quot;t&quot; data-mid=&quot;&quot;&gt;2021-06-18&lt;/p&gt;&lt;/section&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.42578125&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7Xw68Ow8vZian4lanQFAu09f4JOZlXbC85jsByb8V6StkOpibAdgPamPWoPPY3G7S3nic50QvxxuGNrg/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-normal&quot; data-recomment-template-id=&quot;2&quot; data-recommend-article-id=&quot;2247501098_2&quot; data-recommend-article-time=&quot;1623461160&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7VzIP6xibP6U8htKa7YEad1iaTE02ZbsOfvDX1D8LoTiaNsMVgdjFOdm5LahpnNXFe3ibSp8S4FJ39KkA/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;从朋友那里搞了 20 个实战项目，速领！&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501098&amp;amp;idx=2&amp;amp;sn=520b81839bb5b4f1c990278e03e1991d&amp;amp;chksm=c1ca331af6bdba0c0e3435da519fadda3be81744168e30c56a823180bd458a5ec8a6b499f2a4#rd&quot;&gt;&lt;section data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501098&amp;amp;idx=2&amp;amp;sn=520b81839bb5b4f1c990278e03e1991d&amp;amp;chksm=c1ca331af6bdba0c0e3435da519fadda3be81744168e30c56a823180bd458a5ec8a6b499f2a4&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot;&gt;从朋友那里搞了 20 个实战项目，速领！&lt;/a&gt;&lt;/p&gt;&lt;p data-recommend-date=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501098&amp;amp;idx=2&amp;amp;sn=520b81839bb5b4f1c990278e03e1991d&amp;amp;chksm=c1ca331af6bdba0c0e3435da519fadda3be81744168e30c56a823180bd458a5ec8a6b499f2a4&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot;&gt;2021-06-12&lt;/a&gt;&lt;/p&gt;&lt;/section&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501098&amp;amp;idx=2&amp;amp;sn=520b81839bb5b4f1c990278e03e1991d&amp;amp;chksm=c1ca331af6bdba0c0e3435da519fadda3be81744168e30c56a823180bd458a5ec8a6b499f2a4&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7VzIP6xibP6U8htKa7YEad1iaTE02ZbsOfvDX1D8LoTiaNsMVgdjFOdm5LahpnNXFe3ibSp8S4FJ39KkA/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;jpeg&quot; data-w=&quot;200&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4703703703703704&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Baq5lYpIw7X6YPYGQITyP8Zdk96ab7CX0Ind5E05VokoepTP9Adic0xRwiaQrAvfTeC7iafngRibhBShpVqibqNcCCA/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如有收获，点个在看，诚挚感谢&lt;/span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-fileid=&quot;100018364&quot; data-ratio=&quot;1&quot; data-type=&quot;png&quot; data-w=&quot;19&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/fEsWkVrSk54JM0xl7WLNGnqqwbcXQBWIOCMuOgPHRoOjMamXzrCqMS2xgOo5ibic9icPk7u3zsVgic3s1ZUYJ4xHXg/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;
          &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>